// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 10/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <fcntl.h>
#include <io.h>
#include <windows.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1cc6208e9_acceptRange;
struct _1e747d682_LittleEndian;
struct _1e7483bd7_u128;
struct _1a9b970a3_group;
struct _1a9be82e1_group;
struct _1a9b94c60__Map;
struct _1a9be61ac__Map;
struct _1a9ba14db_mapIterator;
struct _1a9c0078d_mapIterator;
struct _1e71a80b0_Builder;
struct _1ce77e44b_foldPair;
struct _1ce77e946_CaseRange;
struct _1ce77edec_Range16;
struct _1ce78042a_Range32;
struct _1ce78089d_RangeTable;
struct _1ce78dc30_lazyBuff;
struct _1cd618acd_cmdAttrs;
struct _1cd61d40c_File;
struct _1cd62092b_Stat;
struct _1e71b7487_Log;
struct _1b455e554_floatInfo;
struct _1b456019d_decimalSlice;
struct _1b4572226_leftCheat;
struct _1b4572c3d_decimal;
struct _1ce615018_AnsiEscape;
struct _1b4578529_Logger;
struct _1a463d137_Token;
struct _1a4643a11_Fileset;
struct _1a4645b45_kindPair;
struct _1a464bad5_lex;
struct _1a46517aa_AST;
struct _1a4652668_Node;
struct _1a4652a86_Directive;
struct _1a4653669_TypeDecl;
struct _1a4653c74_IdentTypeDecl;
struct _1a465403d_SubIdentTypeDecl;
struct _1a4654417_NamespaceTypeDecl;
struct _1a4654714_SptrTypeDecl;
struct _1a4654a99_SlcTypeDecl;
struct _1a4654d96_TupleTypeDecl;
struct _1a4655193_PtrTypeDecl;
struct _1a4655935_ArrTypeDecl;
struct _1a4656183_MapTypeDecl;
struct _1a465655c_RetTypeDecl;
struct _1a465799d_Expr;
struct _1a4657c67_RangeExpr;
struct _1a4658372_UseExpr;
struct _1a4658592_TupleExpr;
struct _1a4658938_LitExpr;
struct _1a4658d12_UnsafeExpr;
struct _1a46592b8_IdentExpr;
struct _1a4659a5a_UnaryExpr;
struct _1a4659e34_VariadicExpr;
struct _1a465a30d_CastExpr;
struct _1a465a6d7_NamespaceExpr;
struct _1a465aab1_SubIdentExpr;
struct _1a465b067_BinaryExpr;
struct _1a465b6c7_FnCallExpr;
struct _1a465c1bc_FieldExprPair;
struct _1a465c9e7_StructLit;
struct _1a465ce9d_BraceLit;
struct _1a465d7c8_KeyValPair;
struct _1a465e004_SliceExpr;
struct _1a465e961_IndexingExpr;
struct _1a46600c1_SlicingExpr;
struct _1a46603bd_Constraint;
struct _1a4660874_GenericDecl;
struct _1a4660c4d_LabelSt;
struct _1a4661127_GotoSt;
struct _1a4661424_FallSt;
struct _1a4661a84_AssignLeft;
struct _1a4662117_AssignSt;
struct _1a4663107_Stmt;
struct _1a4663767_ScopeTree;
struct _1a4663ea4_ParamDecl;
struct _1a4665406_FnDecl;
struct _1a46665b1_VarDecl;
struct _1a466698a_RetSt;
struct _1a466720a_Iter;
struct _1a4667a35_WhileKind;
struct _1a466843c_RangeKind;
struct _1a4668816_BreakSt;
struct _1a4668be0_ContSt;
struct _1a4669196_If;
struct _1a4669570_Else;
struct _1a4669a26_Conditional;
struct _1a466a263_TypeAliasDecl;
struct _1a466a719_Case;
struct _1a466b033_MatchCase;
struct _1a466b5b6_UseDecl;
struct _1a466ba6c_EnumItemDecl;
struct _1a466c62d_EnumDecl;
struct _1a466ce58_TypeEnumItemDecl;
struct _1a466d5b8_TypeEnumDecl;
struct _1a466d882_FieldDecl;
struct _1a466e278_StructDecl;
struct _1a466e9b5_TraitDecl;
struct _1a4670125_Impl;
struct _1a4276798_Const;
struct _1a46710d2_Field;
struct _1a46730b2_Operators;
struct _1a4673ec5_Struct;
struct _1a4676280_FieldIns;
struct _1a4676d30_StructIns;
struct _1a4711491_OperandExprModel;
struct _1a471198b_BinaryExprModel;
struct _1a4711d65_UnaryExprModel;
struct _1a4712393_StructArgExprModel;
struct _1a4712739_StructLitExprModel;
struct _1a4712a36_AllocStructLitExprModel;
struct _1a47130b9_CastingExprModel;
struct _1a471396b_FnCallExprModel;
struct _1a4713d45_SliceExprModel;
struct _1a47142eb_IndexingExprModel;
struct _1a47147a2_AnonFnExprModel;
struct _1a4714b7b_KeyValPairExprModel;
struct _1a4715055_MapExprModel;
struct _1a47155d8_SlicingExprModel;
struct _1a4715b6b_TraitSubIdentExprModel;
struct _1a471650c_StructSubIdentExprModel;
struct _1a47168a3_StructStaticIdentExprModel;
struct _1a4716c7c_ArrayExprModel;
struct _1a4717079_TupleExprModel;
struct _1a4717376_BuiltinPrintCallExprModel;
struct _1a4717673_BuiltinPrintlnCallExprModel;
struct _1a4717a4c_BuiltinNewCallExprModel;
struct _1a4717e26_BuiltinPanicCallExprModel;
struct _1a47183cc_BuiltinMakeCallExprModel;
struct _1a47187a6_BuiltinAppendCallExprModel;
struct _1a4718aa3_BuiltinLenCallExprModel;
struct _1a4718da0_BuiltinCapCallExprModel;
struct _1a4719279_BuiltinDeleteCallExprModel;
struct _1a4719653_BuiltinCopyCallExprModel;
struct _1a4719a2c_BuiltinErrorCallExprModel;
struct _1a4719d29_SizeofExprModel;
struct _1a471a4cd_AlignofExprModel;
struct _1a471a6ba_RuneExprModel;
struct _1a471aa3e_BackendEmitExprModel;
struct _1a471ad3b_FreeExprModel;
struct _1a471bbb6_RetType;
struct _1a471c28d_Param;
struct _1a471dc62_Fn;
struct _1a4720bba_ParamIns;
struct _1a4721d20_FnIns;
struct _1a4725065_SymTab;
struct _1a4729476_Trait;
struct _1a472b0c1_EnumItem;
struct _1a472bb2c_Enum;
struct _1a472cc60_TypeEnumItem;
struct _1a472d337_TypeEnum;
struct _1a479e144_comptimeRange;
struct _1a479eba0_comptimeStructField;
struct _1a47a1443_comptimeStructFields;
struct _1a47a2dc3_comptimeStatic;
struct _1a47a4677_comptimeStatics;
struct _1a47a60e6_comptimeEnumField;
struct _1a47a7405_comptimeEnumFields;
struct _1a47a8e0c_comptimeParam;
struct _1a47aac66_comptimeParams;
struct _1a47ac5c5_comptimeTypeInfos;
struct _1a47ae044_comptimeTypeInfo;
struct _1a47b5149_comptimeValue;
struct _1a47b7da5_comptimeFiles;
struct _1a47b9824_comptimeFile;
struct _1a47bb44c_comptimeDecls;
struct _1a47bd73a_comptimeDecl;
struct _1a47c5126_constraintChecker;
struct _1a47c7425_Impl;
struct _1a47cba34_Scope;
struct _1a47cbe52_If;
struct _1a47cc24e_Else;
struct _1a47cc66c_Conditional;
struct _1a47cc969_InfIter;
struct _1a47cce20_WhileIter;
struct _1a47cd86b_RangeIter;
struct _1a47cdc01_ContSt;
struct _1a47ce0ca_BreakSt;
struct _1a47ce581_Label;
struct _1a47cebe1_GotoSt;
struct _1a47d00ba_Postfix;
struct _1a47d0571_Assign;
struct _1a47d0a27_MultiAssign;
struct _1a47d1264_Match;
struct _1a47d1c8c_Case;
struct _1a47d2485_FallSt;
struct _1a47d282b_RetSt;
struct _1a47d2cd2_scopeLabel;
struct _1a47d3cc2_scopeChecker;
struct _1a47e7b4e_directiveChecker;
struct _1a47ea3d2_ReferenceStack;
struct _1a47eb8ab_Pass;
struct _1a4801361_symBuilder;
struct _1a480c3d3_ImportInfo;
struct _1a480eb55_Package;
struct _1a48287a6_commonSemaMeta;
struct _1a48293cd_sema;
struct _1a484e469_missingRetChecker;
struct _1a4852e51_Var;
struct _1a4853ccb_FuncPattern;
struct _1a488dc6c_typeCompatibilityChecker;
struct _1a4890ae8_assignTypeChecker;
struct _1a48924bd_dynamicTypeAnnotation;
struct _1a489732a_fnCallArgChecker;
struct _1a489a262_structLitChecker;
struct _1a489c044_rangeChecker;
struct _1a489e7a5_retTypeChecker;
struct _1a48a2753_Data;
struct _1a48a38ca_Value;
struct _1a48a447a_eval;
struct _1a48c3774_unaryEval;
struct _1a48c5710_binaryEval;
struct _1a48d3ae7_InsGeneric;
struct _1a48d46db_TypeAlias;
struct _1a48d54cd_Type;
struct _1a48dcbde_TypeSym;
struct _1a48dd5e6_Prim;
struct _1a48e2122_Sptr;
struct _1a48e2ae5_Slc;
struct _1a48e36d9_Tuple;
struct _1a48e4289_Map;
struct _1a48e4e16_Arr;
struct _1a48e58d9_Ptr;
struct _1a48e68da_referencer;
struct _1a48e78ca_typeChecker;
struct _1a490098d_identTypeLookup;
struct _1a53016ce_FileInfo;
struct _1a534dc7b_stmt;
struct _1a534e61c_scopeParser;
struct _1a535c042_exprBuilder;
struct _1a5369637_assignInfo;
struct _1a536c827_parser;
struct _1a537d9d1_typeBuilder;
struct _1a4a0c5a0_CompileInfo;
struct _1a4a0d969_directiveEval;
struct _1a5382c27_Importer;
struct _1a538905d_ExprInspector;
struct _1a5390d89_MetaStrBuilder;
struct _1a53912a7_Meta;
struct _1a53922ca_OrderedDefines;
struct _1a623e4a6_specialCaseDefines;
struct _1a623ecc0_liveTable;
struct _1a6240276_ObjectDeadCode;
struct _1a62442e1_scopeDeadCode;
struct _1a6248878_exprDeadCode;
struct _1a6130001_ExceptionalForwardingExprModel;
struct _1a61301dd_FnCallIgnoreExceptionalExprModel;
struct _1a6130584_SwapExprModel;
struct _1a61309a2_EmptyCompareExprModel;
struct _1a6130c9e_RefExprModel;
struct _1a6131255_StrCompExprModel;
struct _1a61317d8_MutSlicingExprModel;
struct _1a6131b6d_UnsafeBinaryExprModel;
struct _1a6131e6a_UnsafeIndexingExprModel;
struct _1a6132344_PushToSliceExprModel;
struct _1a613271d_AppendToSliceExprModel;
struct _1a6132ae7_StrRuneIter;
struct _1a6132de4_UnsafeDerefExprModel;
struct _1a61331e1_UnsafeCastingExprModel;
struct _1a6133d18_nilVar;
struct _1a6134159_nils;
struct _1a6136cc7_scopeOptimizer;
struct _1a613d680_exprOptimizer;
struct _1a6143b19_dynamicVar;
struct _1a6143e5a_dynamic;
struct _1a6146d3c_data;
struct _1a61482d3_boundaryVar;
struct _1a6148624_boundary;
struct _1a6249a66_Optimizer;
struct _1a5b9d8b6_AbsTime;
struct _1a5b9e08c_Time;
struct _1a624dbe1_scopeCoder;
struct _1a625a13c_exprCoder;
struct _1a626c6c1_TestCoder;
struct _1a627031c_identCoder;
struct _1a5ba8d66_SerializationInfo;
struct _1a5ba9284_traitCast;
struct _1a5ba965d_anonHash;
struct _1a5ba9a7b_traitHash;
struct _1a5ba9d78_metadata;
struct _1a5bab61b_ObjectCoder;
struct _1a5bba9d2_customType;
struct _1a5bbb61a_typeCoder;
struct _1a5bc4205_resultCoder;
struct _1aa3a8374_Flag;
struct _1aa3abc07_Flag;
struct _1aa3b0414_Flag;
struct _1aa3b3b65_Flag;
struct _1aa3b7372_Flag;
struct _1a5c393ad_FlagSet;
struct _1a5c3bd72_argParser;
struct _1cd5ae502_Dir;
struct _1a6146765_dataCheckpoint;
struct _1a53857a7_IR;
struct _1cd5b00b3_Cmd;
struct _1cc6208e9_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1cc6208e9_acceptRange_eq(_1cc6208e9_acceptRange *_self_, _1cc6208e9_acceptRange _other_);


struct _1e747d682_LittleEndian {
};
inline jule::Bool _1e747d682_LittleEndian_eq(_1e747d682_LittleEndian *_self_, _1e747d682_LittleEndian _other_);


struct _1e7483bd7_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1e7483bd7_u128_eq(_1e7483bd7_u128 *_self_, _1e7483bd7_u128 _other_);


struct _1a9b970a3_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1a9b970a3_group_eq(_1a9b970a3_group *_self_, _1a9b970a3_group _other_);

struct _1a9be82e1_group {
	jule::Array<jule::Ptr<_1a4721d20_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1a9b94c60__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1a9b970a3_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};struct _1a9be61ac__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1a9be82e1_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};
struct _1a9ba14db_mapIterator {
	jule::Ptr<_1a9b94c60__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1a9b970a3_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};struct _1a9c0078d_mapIterator {
	jule::Ptr<_1a9be61ac__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1a9be82e1_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};
struct _1e71a80b0_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _1ce77e44b_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _1ce77e44b_foldPair_eq(_1ce77e44b_foldPair *_self_, _1ce77e44b_foldPair _other_);


struct _1ce77e946_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _1ce77e946_CaseRange_eq(_1ce77e946_CaseRange *_self_, _1ce77e946_CaseRange _other_);


struct _1ce77edec_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _1ce77edec_Range16_eq(_1ce77edec_Range16 *_self_, _1ce77edec_Range16 _other_);


struct _1ce78042a_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _1ce78042a_Range32_eq(_1ce78042a_Range32 *_self_, _1ce78042a_Range32 _other_);


struct _1ce78089d_RangeTable {
	jule::Slice<_1ce77edec_Range16> _field_R16;
	jule::Slice<_1ce78042a_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
};
struct _1ce78dc30_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
};
struct _1cd618acd_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
};
inline jule::Bool _1cd618acd_cmdAttrs_eq(_1cd618acd_cmdAttrs *_self_, _1cd618acd_cmdAttrs _other_);


struct _1cd61d40c_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1cd61d40c_File_eq(_1cd61d40c_File *_self_, _1cd61d40c_File _other_);


struct _1cd62092b_Stat {
	jule::I32 _field_mode;
	jule::U32 _field_size;
};
inline jule::Bool _1cd62092b_Stat_eq(_1cd62092b_Stat *_self_, _1cd62092b_Stat _other_);


struct _1e71b7487_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1e71b7487_Log_eq(_1e71b7487_Log *_self_, _1e71b7487_Log _other_);


struct _1b455e554_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
};
inline jule::Bool _1b455e554_floatInfo_eq(_1b455e554_floatInfo *_self_, _1b455e554_floatInfo _other_);


struct _1b456019d_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
};
struct _1b4572226_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1b4572226_leftCheat_eq(_1b4572226_leftCheat *_self_, _1b4572226_leftCheat _other_);


struct _1b4572c3d_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1b4572c3d_decimal_eq(_1b4572c3d_decimal *_self_, _1b4572c3d_decimal _other_);


struct _1ce615018_AnsiEscape {
};
inline jule::Bool _1ce615018_AnsiEscape_eq(_1ce615018_AnsiEscape *_self_, _1ce615018_AnsiEscape _other_);


struct _1b4578529_Logger {
};
inline jule::Bool _1b4578529_Logger_eq(_1b4578529_Logger *_self_, _1b4578529_Logger _other_);


struct _1a463d137_Token {
	jule::Ptr<_1a4643a11_Fileset> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
};
inline jule::Bool _1a463d137_Token_eq(_1a463d137_Token *_self_, _1a463d137_Token _other_);


struct _1a4643a11_Fileset {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_Tokens;
};
struct _1a4645b45_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
};
inline jule::Bool _1a4645b45_kindPair_eq(_1a4645b45_kindPair *_self_, _1a4645b45_kindPair _other_);


struct _1a464bad5_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_tokens;
	jule::Ptr<_1a4643a11_Fileset> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1e71b7487_Log> _field_errors;
};
struct _1a46517aa_AST {
	jule::Ptr<_1a4643a11_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a466b5b6_UseDecl>> _field_UseDecls;
	jule::Slice<_1a4652668_Node> _field_Nodes;
};
struct _1a4652668_Node {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1a4652668_Node_eq(_1a4652668_Node *_self_, _1a4652668_Node _other_);


struct _1a4652a86_Directive {
	jule::Ptr<_1a463d137_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_Args;
};
struct _1a4653669_TypeDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1a4653669_TypeDecl_eq(_1a4653669_TypeDecl *_self_, _1a4653669_TypeDecl _other_);


struct _1a4653c74_IdentTypeDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _field_Generics;
};
struct _1a465403d_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>> _field_Idents;
};
struct _1a4654417_NamespaceTypeDecl {
	jule::Ptr<_1a463d137_Token> _field_Namespace;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
};
inline jule::Bool _1a4654417_NamespaceTypeDecl_eq(_1a4654417_NamespaceTypeDecl *_self_, _1a4654417_NamespaceTypeDecl _other_);


struct _1a4654714_SptrTypeDecl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Elem;
};
inline jule::Bool _1a4654714_SptrTypeDecl_eq(_1a4654714_SptrTypeDecl *_self_, _1a4654714_SptrTypeDecl _other_);


struct _1a4654a99_SlcTypeDecl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Elem;
};
inline jule::Bool _1a4654a99_SlcTypeDecl_eq(_1a4654a99_SlcTypeDecl *_self_, _1a4654a99_SlcTypeDecl _other_);


struct _1a4654d96_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _field_Types;
};
struct _1a4655193_PtrTypeDecl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Elem;
};
inline jule::Bool _1a4655193_PtrTypeDecl_eq(_1a4655193_PtrTypeDecl *_self_, _1a4655193_PtrTypeDecl _other_);


struct _1a4655935_ArrTypeDecl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Elem;
	jule::Ptr<_1a465799d_Expr> _field_Size;
};
inline jule::Bool _1a4655935_ArrTypeDecl_eq(_1a4655935_ArrTypeDecl *_self_, _1a4655935_ArrTypeDecl _other_);


struct _1a4656183_MapTypeDecl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Key;
	jule::Ptr<_1a4653669_TypeDecl> _field_Val;
};
inline jule::Bool _1a4656183_MapTypeDecl_eq(_1a4656183_MapTypeDecl *_self_, _1a4656183_MapTypeDecl _other_);


struct _1a465655c_RetTypeDecl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_Idents;
};
struct _1a465799d_Expr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1a465799d_Expr_eq(_1a465799d_Expr *_self_, _1a465799d_Expr _other_);


struct _1a4657c67_RangeExpr {
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a4657c67_RangeExpr_eq(_1a4657c67_RangeExpr *_self_, _1a4657c67_RangeExpr _other_);


struct _1a4658372_UseExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a4658372_UseExpr_eq(_1a4658372_UseExpr *_self_, _1a4658372_UseExpr _other_);


struct _1a4658592_TupleExpr {
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_Expr;
};
struct _1a4658938_LitExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1a4658938_LitExpr_eq(_1a4658938_LitExpr *_self_, _1a4658938_LitExpr _other_);


struct _1a4658d12_UnsafeExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a4658d12_UnsafeExpr_eq(_1a4658d12_UnsafeExpr *_self_, _1a4658d12_UnsafeExpr _other_);


struct _1a46592b8_IdentExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a46592b8_IdentExpr_eq(_1a46592b8_IdentExpr *_self_, _1a46592b8_IdentExpr _other_);


struct _1a4659a5a_UnaryExpr {
	jule::Ptr<_1a463d137_Token> _field_Op;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a4659a5a_UnaryExpr_eq(_1a4659a5a_UnaryExpr *_self_, _1a4659a5a_UnaryExpr _other_);


struct _1a4659e34_VariadicExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a4659e34_VariadicExpr_eq(_1a4659e34_VariadicExpr *_self_, _1a4659e34_VariadicExpr _other_);


struct _1a465a30d_CastExpr {
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a465a30d_CastExpr_eq(_1a465a30d_CastExpr *_self_, _1a465a30d_CastExpr _other_);


struct _1a465a6d7_NamespaceExpr {
	jule::Ptr<_1a463d137_Token> _field_Namespace;
	jule::Ptr<_1a463d137_Token> _field_Ident;
};
inline jule::Bool _1a465a6d7_NamespaceExpr_eq(_1a465a6d7_NamespaceExpr *_self_, _1a465a6d7_NamespaceExpr _other_);


struct _1a465aab1_SubIdentExpr {
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Ptr<_1a463d137_Token> _field_Ident;
};
inline jule::Bool _1a465aab1_SubIdentExpr_eq(_1a465aab1_SubIdentExpr *_self_, _1a465aab1_SubIdentExpr _other_);


struct _1a465b067_BinaryExpr {
	jule::Ptr<_1a465799d_Expr> _field_Left;
	jule::Ptr<_1a465799d_Expr> _field_Right;
	jule::Ptr<_1a463d137_Token> _field_Op;
};
inline jule::Bool _1a465b067_BinaryExpr_eq(_1a465b067_BinaryExpr *_self_, _1a465b067_BinaryExpr _other_);


struct _1a465b6c7_FnCallExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_Args;
	jule::Ptr<_1a4663767_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1a465c1bc_FieldExprPair {
	jule::Ptr<_1a463d137_Token> _field_Field;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a465c1bc_FieldExprPair_eq(_1a465c1bc_FieldExprPair *_self_, _1a465c1bc_FieldExprPair _other_);


struct _1a465c9e7_StructLit {
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_Exprs;
};
struct _1a465ce9d_BraceLit {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_Exprs;
};
struct _1a465d7c8_KeyValPair {
	jule::Ptr<_1a465799d_Expr> _field_Key;
	jule::Ptr<_1a465799d_Expr> _field_Val;
	jule::Ptr<_1a463d137_Token> _field_Colon;
};
inline jule::Bool _1a465d7c8_KeyValPair_eq(_1a465d7c8_KeyValPair *_self_, _1a465d7c8_KeyValPair _other_);


struct _1a465e004_SliceExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_Exprs;
};
struct _1a465e961_IndexingExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Ptr<_1a465799d_Expr> _field_Index;
};
inline jule::Bool _1a465e961_IndexingExpr_eq(_1a465e961_IndexingExpr *_self_, _1a465e961_IndexingExpr _other_);


struct _1a46600c1_SlicingExpr {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Ptr<_1a465799d_Expr> _field_Start;
	jule::Ptr<_1a465799d_Expr> _field_To;
};
inline jule::Bool _1a46600c1_SlicingExpr_eq(_1a46600c1_SlicingExpr *_self_, _1a46600c1_SlicingExpr _other_);


struct _1a46603bd_Constraint {
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _field_Mask;
};
struct _1a4660874_GenericDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a46603bd_Constraint> _field_Constraint;
};
inline jule::Bool _1a4660874_GenericDecl_eq(_1a4660874_GenericDecl *_self_, _1a4660874_GenericDecl _other_);


struct _1a4660c4d_LabelSt {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1a4660c4d_LabelSt_eq(_1a4660c4d_LabelSt *_self_, _1a4660c4d_LabelSt _other_);


struct _1a4661127_GotoSt {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_Label;
};
inline jule::Bool _1a4661127_GotoSt_eq(_1a4661127_GotoSt *_self_, _1a4661127_GotoSt _other_);


struct _1a4661424_FallSt {
	jule::Ptr<_1a463d137_Token> _field_Token;
};
inline jule::Bool _1a4661424_FallSt_eq(_1a4661424_FallSt *_self_, _1a4661424_FallSt _other_);


struct _1a4661a84_AssignLeft {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a4661a84_AssignLeft_eq(_1a4661a84_AssignLeft *_self_, _1a4661a84_AssignLeft _other_);


struct _1a4662117_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1a463d137_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>> _field_Left;
	jule::Ptr<_1a465799d_Expr> _field_Right;
};
struct _1a4663107_Stmt {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1a4663107_Stmt_eq(_1a4663107_Stmt *_self_, _1a4663107_Stmt _other_);


struct _1a4663767_ScopeTree {
	jule::Ptr<_1a4663767_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1a4663107_Stmt> _field_Stmts;
	jule::Ptr<_1a463d137_Token> _field_End;
};
struct _1a4663ea4_ParamDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1a4663ea4_ParamDecl_eq(_1a4663ea4_ParamDecl *_self_, _1a4663ea4_ParamDecl _other_);


struct _1a4665406_FnDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_Directives;
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _field_Generics;
	jule::Ptr<_1a465655c_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>> _field_Params;
};
struct _1a46665b1_VarDecl {
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_Directives;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
struct _1a466698a_RetSt {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a466698a_RetSt_eq(_1a466698a_RetSt *_self_, _1a466698a_RetSt _other_);


struct _1a466720a_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
};
inline jule::Bool _1a466720a_Iter_eq(_1a466720a_Iter *_self_, _1a466720a_Iter _other_);


struct _1a4667a35_WhileKind {
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1a463d137_Token> _field_NextToken;
};
inline jule::Bool _1a4667a35_WhileKind_eq(_1a4667a35_WhileKind *_self_, _1a4667a35_WhileKind _other_);


struct _1a466843c_RangeKind {
	jule::Ptr<_1a463d137_Token> _field_InToken;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Ptr<_1a46665b1_VarDecl> _field_KeyA;
	jule::Ptr<_1a46665b1_VarDecl> _field_KeyB;
};
inline jule::Bool _1a466843c_RangeKind_eq(_1a466843c_RangeKind *_self_, _1a466843c_RangeKind _other_);


struct _1a4668816_BreakSt {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_Label;
};
inline jule::Bool _1a4668816_BreakSt_eq(_1a4668816_BreakSt *_self_, _1a4668816_BreakSt _other_);


struct _1a4668be0_ContSt {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_Label;
};
inline jule::Bool _1a4668be0_ContSt_eq(_1a4668be0_ContSt *_self_, _1a4668be0_ContSt _other_);


struct _1a4669196_If {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
};
inline jule::Bool _1a4669196_If_eq(_1a4669196_If *_self_, _1a4669196_If _other_);


struct _1a4669570_Else {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
};
inline jule::Bool _1a4669570_Else_eq(_1a4669570_Else *_self_, _1a4669570_Else _other_);


struct _1a4669a26_Conditional {
	jule::Ptr<_1a4669196_If> _field_Head;
	jule::Slice<jule::Ptr<_1a4669196_If>> _field_Tail;
	jule::Ptr<_1a4669570_Else> _field_Default;
};
struct _1a466a263_TypeAliasDecl {
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
};
inline jule::Bool _1a466a263_TypeAliasDecl_eq(_1a466a263_TypeAliasDecl *_self_, _1a466a263_TypeAliasDecl _other_);


struct _1a466a719_Case {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_Exprs;
};
struct _1a466b033_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a466a719_Case>> _field_Cases;
	jule::Ptr<_1a4669570_Else> _field_Default;
};
struct _1a466b5b6_UseDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_Path;
	jule::Ptr<_1a463d137_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a466b5b6_UseDecl_eq(_1a466b5b6_UseDecl *_self_, _1a466b5b6_UseDecl _other_);


struct _1a466ba6c_EnumItemDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a465799d_Expr> _field_Expr;
};
inline jule::Bool _1a466ba6c_EnumItemDecl_eq(_1a466ba6c_EnumItemDecl *_self_, _1a466ba6c_EnumItemDecl _other_);


struct _1a466c62d_EnumDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a463d137_Token> _field_End;
};
struct _1a466ce58_TypeEnumItemDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
};
inline jule::Bool _1a466ce58_TypeEnumItemDecl_eq(_1a466ce58_TypeEnumItemDecl *_self_, _1a466ce58_TypeEnumItemDecl _other_);


struct _1a466d5b8_TypeEnumDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a463d137_Token> _field_End;
};
struct _1a466d882_FieldDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a4653669_TypeDecl> _field_Kind;
	jule::Ptr<_1a465799d_Expr> _field_Default;
};
inline jule::Bool _1a466d882_FieldDecl_eq(_1a466d882_FieldDecl *_self_, _1a466d882_FieldDecl _other_);


struct _1a466e278_StructDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a466d882_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _field_Generics;
};
struct _1a466e9b5_TraitDecl {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a4665406_FnDecl>> _field_Methods;
};
struct _1a4670125_Impl {
	jule::Ptr<_1a463d137_Token> _field_End;
	jule::Ptr<_1a4653669_TypeDecl> _field_Base;
	jule::Ptr<_1a4653669_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a4665406_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _field_Statics;
};
inline jule::Bool _1a470ab72_Eq(_1a4276798_Const* _self_, _1a4276798_Const _25814_x);
inline jule::Bool _1a470aeb3_Lt(_1a4276798_Const* _self_, _1a4276798_Const _28514_x);
inline jule::Bool _1a470b304_LtEq(_1a4276798_Const* _self_, _1a4276798_Const _30816_x);
inline jule::Bool _1a470b645_Gt(_1a4276798_Const* _self_, _1a4276798_Const _33114_x);
inline jule::Bool _1a470b986_GtEq(_1a4276798_Const* _self_, _1a4276798_Const _35416_x);
struct _1a4276798_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
struct _1a46710d2_Field {
	jule::Ptr<_1a4673ec5_Struct> _field_Owner;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
	jule::Ptr<_1a465799d_Expr> _field_Default;
};
inline jule::Bool _1a46710d2_Field_eq(_1a46710d2_Field *_self_, _1a46710d2_Field _other_);


struct _1a46730b2_Operators {
	jule::Ptr<_1a4721d20_FnIns> _field_Eq;
	jule::Ptr<_1a4721d20_FnIns> _field_Gt;
	jule::Ptr<_1a4721d20_FnIns> _field_GtEq;
	jule::Ptr<_1a4721d20_FnIns> _field_Lt;
	jule::Ptr<_1a4721d20_FnIns> _field_LtEq;
	jule::Ptr<_1a4721d20_FnIns> _field_Shl;
	jule::Ptr<_1a4721d20_FnIns> _field_Shr;
	jule::Ptr<_1a4721d20_FnIns> _field_Add;
	jule::Ptr<_1a4721d20_FnIns> _field_Sub;
	jule::Ptr<_1a4721d20_FnIns> _field_Div;
	jule::Ptr<_1a4721d20_FnIns> _field_Mul;
	jule::Ptr<_1a4721d20_FnIns> _field_Mod;
	jule::Ptr<_1a4721d20_FnIns> _field_BitAnd;
	jule::Ptr<_1a4721d20_FnIns> _field_BitOr;
	jule::Ptr<_1a4721d20_FnIns> _field_BitXor;
	jule::Ptr<_1a4721d20_FnIns> _field_Neg;
	jule::Ptr<_1a4721d20_FnIns> _field_Pos;
	jule::Ptr<_1a4721d20_FnIns> _field_BitNot;
	jule::Ptr<_1a4721d20_FnIns> _field_AddAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_SubAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_DivAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_MulAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_ModAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_ShlAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_ShrAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a4721d20_FnIns> _field_BitXorAssign;
};
inline jule::Bool _1a46730b2_Operators_eq(_1a46730b2_Operators *_self_, _1a46730b2_Operators _other_);


struct _1a4673ec5_Struct {
	jule::Ptr<_1a48293cd_sema> _field_sema;
	jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _field_Uses;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a46710d2_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a4729476_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a4676d30_StructIns>> _field_Instances;
};
struct _1a4676280_FieldIns {
	jule::Ptr<_1a4676d30_StructIns> _field_Owner;
	jule::Ptr<_1a46710d2_Field> _field_Decl;
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Ptr<_1a48a2753_Data> _field_Default;
};
inline jule::Bool _1a4676280_FieldIns_eq(_1a4676280_FieldIns *_self_, _1a4676280_FieldIns _other_);


struct _1a4676d30_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1a4673ec5_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a4676280_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1a47ea3d2_ReferenceStack> _field_Refers;
	_1a46730b2_Operators _field_Operators;
};
struct _1a4711491_OperandExprModel {
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1a4711491_OperandExprModel_eq(_1a4711491_OperandExprModel *_self_, _1a4711491_OperandExprModel _other_);


struct _1a471198b_BinaryExprModel {
	jule::Ptr<_1a4711491_OperandExprModel> _field_Left;
	jule::Ptr<_1a4711491_OperandExprModel> _field_Right;
	jule::Ptr<_1a463d137_Token> _field_Op;
};
inline jule::Bool _1a471198b_BinaryExprModel_eq(_1a471198b_BinaryExprModel *_self_, _1a471198b_BinaryExprModel _other_);


struct _1a4711d65_UnaryExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Ptr<_1a463d137_Token> _field_Op;
};
inline jule::Bool _1a4711d65_UnaryExprModel_eq(_1a4711d65_UnaryExprModel *_self_, _1a4711d65_UnaryExprModel _other_);


struct _1a4712393_StructArgExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a4676280_FieldIns> _field_Field;
	jule::Ptr<_1a48a2753_Data> _field_Expr;
};
inline jule::Bool _1a4712393_StructArgExprModel_eq(_1a4712393_StructArgExprModel *_self_, _1a4712393_StructArgExprModel _other_);


struct _1a4712739_StructLitExprModel {
	jule::Ptr<_1a4676d30_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a4712393_StructArgExprModel>> _field_Args;
};
struct _1a4712a36_AllocStructLitExprModel {
	jule::Ptr<_1a4712739_StructLitExprModel> _field_Lit;
};
inline jule::Bool _1a4712a36_AllocStructLitExprModel_eq(_1a4712a36_AllocStructLitExprModel *_self_, _1a4712a36_AllocStructLitExprModel _other_);


struct _1a47130b9_CastingExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Ptr<_1a48d54cd_Type> _field_ExprType;
};
inline jule::Bool _1a47130b9_CastingExprModel_eq(_1a47130b9_CastingExprModel *_self_, _1a47130b9_CastingExprModel _other_);


struct _1a471396b_FnCallExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a4721d20_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a47cba34_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1a4713d45_SliceExprModel {
	jule::Ptr<_1a48d54cd_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1a47142eb_IndexingExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Ptr<_1a48a2753_Data> _field_Index;
};
inline jule::Bool _1a47142eb_IndexingExprModel_eq(_1a47142eb_IndexingExprModel *_self_, _1a47142eb_IndexingExprModel _other_);


struct _1a47147a2_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Captured;
	jule::Ptr<_1a4721d20_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1a4714b7b_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1a4714b7b_KeyValPairExprModel_eq(_1a4714b7b_KeyValPairExprModel *_self_, _1a4714b7b_KeyValPairExprModel _other_);


struct _1a4715055_MapExprModel {
	jule::Ptr<_1a48e4289_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1a4714b7b_KeyValPairExprModel>> _field_Entries;
};
struct _1a47155d8_SlicingExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1a47155d8_SlicingExprModel_eq(_1a47155d8_SlicingExprModel *_self_, _1a47155d8_SlicingExprModel _other_);


struct _1a4715b6b_TraitSubIdentExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1a471dc62_Fn> _field_Method;
	jule::Ptr<_1a4729476_Trait> _field_Trt;
};
inline jule::Bool _1a4715b6b_TraitSubIdentExprModel_eq(_1a4715b6b_TraitSubIdentExprModel *_self_, _1a4715b6b_TraitSubIdentExprModel _other_);


struct _1a471650c_StructSubIdentExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Ptr<_1a4721d20_FnIns> _field_Method;
	jule::Ptr<_1a4676280_FieldIns> _field_Field;
	jule::Ptr<_1a4676d30_StructIns> _field_Owner;
};
inline jule::Bool _1a471650c_StructSubIdentExprModel_eq(_1a471650c_StructSubIdentExprModel *_self_, _1a471650c_StructSubIdentExprModel _other_);


struct _1a47168a3_StructStaticIdentExprModel {
	jule::Ptr<_1a4676d30_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1a4721d20_FnIns> _field_Method;
};
inline jule::Bool _1a47168a3_StructStaticIdentExprModel_eq(_1a47168a3_StructStaticIdentExprModel *_self_, _1a47168a3_StructStaticIdentExprModel _other_);


struct _1a4716c7c_ArrayExprModel {
	jule::Ptr<_1a48e4e16_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1a4717079_TupleExprModel {
	jule::Slice<jule::Ptr<_1a48a2753_Data>> _field_Datas;
};
struct _1a4717376_BuiltinPrintCallExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Expr;
};
inline jule::Bool _1a4717376_BuiltinPrintCallExprModel_eq(_1a4717376_BuiltinPrintCallExprModel *_self_, _1a4717376_BuiltinPrintCallExprModel _other_);


struct _1a4717673_BuiltinPrintlnCallExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Expr;
};
inline jule::Bool _1a4717673_BuiltinPrintlnCallExprModel_eq(_1a4717673_BuiltinPrintlnCallExprModel *_self_, _1a4717673_BuiltinPrintlnCallExprModel _other_);


struct _1a4717a4c_BuiltinNewCallExprModel {
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1a4717a4c_BuiltinNewCallExprModel_eq(_1a4717a4c_BuiltinNewCallExprModel *_self_, _1a4717a4c_BuiltinNewCallExprModel _other_);


struct _1a4717e26_BuiltinPanicCallExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1a4717e26_BuiltinPanicCallExprModel_eq(_1a4717e26_BuiltinPanicCallExprModel *_self_, _1a4717e26_BuiltinPanicCallExprModel _other_);


struct _1a47183cc_BuiltinMakeCallExprModel {
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1a47183cc_BuiltinMakeCallExprModel_eq(_1a47183cc_BuiltinMakeCallExprModel *_self_, _1a47183cc_BuiltinMakeCallExprModel _other_);


struct _1a47187a6_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1a47187a6_BuiltinAppendCallExprModel_eq(_1a47187a6_BuiltinAppendCallExprModel *_self_, _1a47187a6_BuiltinAppendCallExprModel _other_);


struct _1a4718aa3_BuiltinLenCallExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Expr;
};
inline jule::Bool _1a4718aa3_BuiltinLenCallExprModel_eq(_1a4718aa3_BuiltinLenCallExprModel *_self_, _1a4718aa3_BuiltinLenCallExprModel _other_);


struct _1a4718da0_BuiltinCapCallExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Expr;
};
inline jule::Bool _1a4718da0_BuiltinCapCallExprModel_eq(_1a4718da0_BuiltinCapCallExprModel *_self_, _1a4718da0_BuiltinCapCallExprModel _other_);


struct _1a4719279_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Dest;
	jule::Ptr<_1a48a2753_Data> _field_Key;
};
inline jule::Bool _1a4719279_BuiltinDeleteCallExprModel_eq(_1a4719279_BuiltinDeleteCallExprModel *_self_, _1a4719279_BuiltinDeleteCallExprModel _other_);


struct _1a4719653_BuiltinCopyCallExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Dest;
	jule::Ptr<_1a48a2753_Data> _field_Src;
};
inline jule::Bool _1a4719653_BuiltinCopyCallExprModel_eq(_1a4719653_BuiltinCopyCallExprModel *_self_, _1a4719653_BuiltinCopyCallExprModel _other_);


struct _1a4719a2c_BuiltinErrorCallExprModel {
	jule::Ptr<_1a4721d20_FnIns> _field_Func;
	jule::Ptr<_1a48a2753_Data> _field_Err;
};
inline jule::Bool _1a4719a2c_BuiltinErrorCallExprModel_eq(_1a4719a2c_BuiltinErrorCallExprModel *_self_, _1a4719a2c_BuiltinErrorCallExprModel _other_);


struct _1a4719d29_SizeofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1a4719d29_SizeofExprModel_eq(_1a4719d29_SizeofExprModel *_self_, _1a4719d29_SizeofExprModel _other_);


struct _1a471a4cd_AlignofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1a471a4cd_AlignofExprModel_eq(_1a471a4cd_AlignofExprModel *_self_, _1a471a4cd_AlignofExprModel _other_);


struct _1a471a6ba_RuneExprModel {
	jule::I32 _field_Code;
};
inline jule::Bool _1a471a6ba_RuneExprModel_eq(_1a471a6ba_RuneExprModel *_self_, _1a471a6ba_RuneExprModel _other_);


struct _1a471aa3e_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1a471ad3b_FreeExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1a471ad3b_FreeExprModel_eq(_1a471ad3b_FreeExprModel *_self_, _1a471ad3b_FreeExprModel _other_);


struct _1a471bbb6_RetType {
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_Idents;
};
struct _1a471c28d_Param {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1a471c28d_Param_eq(_1a471c28d_Param *_self_, _1a471c28d_Param _other_);


struct _1a471dc62_Fn {
	jule::Ptr<_1a48293cd_sema> _field_sema;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_Directives;
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _field_Generics;
	jule::Ptr<_1a471bbb6_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a471c28d_Param>> _field_Params;
	jule::Ptr<_1a4673ec5_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a4721d20_FnIns>> _field_Instances;
};
struct _1a4720bba_ParamIns {
	jule::Ptr<_1a471c28d_Param> _field_Decl;
	jule::Ptr<_1a48d54cd_Type> _field_Type;
};
inline jule::Bool _1a4720bba_ParamIns_eq(_1a4720bba_ParamIns *_self_, _1a4720bba_ParamIns _other_);


struct _1a4721d20_FnIns {
	jule::Ptr<_1a4676d30_StructIns> _field_Owner;
	jule::Ptr<_1a471dc62_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _field_Params;
	jule::Ptr<_1a48d54cd_Type> _field_Result;
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::Ptr<_1a47ea3d2_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1a4725065_SymTab {
	jule::Ptr<_1a4643a11_Fileset> _field_File;
	jule::Slice<_1a47eb8ab_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a4729476_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a472bb2c_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a472d337_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a47c7425_Impl>> _field_Impls;
};
struct _1a4729476_Trait {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a48dcbde_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _field_Implemented;
};
struct _1a472b0c1_EnumItem {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a48a38ca_Value> _field_Value;
};
inline jule::Bool _1a472b0c1_EnumItem_eq(_1a472b0c1_EnumItem *_self_, _1a472b0c1_EnumItem _other_);


struct _1a472bb2c_Enum {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _field_Items;
};
struct _1a472cc60_TypeEnumItem {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
};
inline jule::Bool _1a472cc60_TypeEnumItem_eq(_1a472cc60_TypeEnumItem *_self_, _1a472cc60_TypeEnumItem _other_);


struct _1a472d337_TypeEnum {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> _field_Items;
};
struct _1a479e144_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1a479e144_comptimeRange_eq(_1a479e144_comptimeRange *_self_, _1a479e144_comptimeRange _other_);


struct _1a479eba0_comptimeStructField {
	jule::Ptr<_1a4676280_FieldIns> _field_field;
};
inline jule::Bool _1a479eba0_comptimeStructField_eq(_1a479eba0_comptimeStructField *_self_, _1a479eba0_comptimeStructField _other_);


struct _1a47a1443_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a4676280_FieldIns>> _field_fields;
};
struct _1a47a2dc3_comptimeStatic {
	jule::Ptr<_1a4852e51_Var> _field_field;
};
inline jule::Bool _1a47a2dc3_comptimeStatic_eq(_1a47a2dc3_comptimeStatic *_self_, _1a47a2dc3_comptimeStatic _other_);


struct _1a47a4677_comptimeStatics {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_fields;
};
struct _1a47a60e6_comptimeEnumField {
	jule::Ptr<_1a472b0c1_EnumItem> _field_field;
};
inline jule::Bool _1a47a60e6_comptimeEnumField_eq(_1a47a60e6_comptimeEnumField *_self_, _1a47a60e6_comptimeEnumField _other_);


struct _1a47a7405_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _field_fields;
};
struct _1a47a8e0c_comptimeParam {
	jule::Ptr<_1a4720bba_ParamIns> _field_param;
};
inline jule::Bool _1a47a8e0c_comptimeParam_eq(_1a47a8e0c_comptimeParam *_self_, _1a47a8e0c_comptimeParam _other_);


struct _1a47aac66_comptimeParams {
	jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _field_params;
};
struct _1a47ac5c5_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a47ae044_comptimeTypeInfo>> _field_types;
};
struct _1a47ae044_comptimeTypeInfo {
	jule::Ptr<_1a48d54cd_Type> _field_base;
};
inline jule::Bool _1a47ae044_comptimeTypeInfo_eq(_1a47ae044_comptimeTypeInfo *_self_, _1a47ae044_comptimeTypeInfo _other_);


struct _1a47b5149_comptimeValue {
	jule::Ptr<_1a48a2753_Data> _field_data;
};
inline jule::Bool _1a47b5149_comptimeValue_eq(_1a47b5149_comptimeValue *_self_, _1a47b5149_comptimeValue _other_);


struct _1a47b7da5_comptimeFiles {
	jule::Slice<jule::Ptr<_1a4725065_SymTab>> _field_files;
};
struct _1a47b9824_comptimeFile {
	jule::Ptr<_1a4725065_SymTab> _field_file;
};
inline jule::Bool _1a47b9824_comptimeFile_eq(_1a47b9824_comptimeFile *_self_, _1a47b9824_comptimeFile _other_);


struct _1a47bb44c_comptimeDecls {
	jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>> _field_decls;
};
struct _1a47bd73a_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1a47bd73a_comptimeDecl_eq(_1a47bd73a_comptimeDecl *_self_, _1a47bd73a_comptimeDecl _other_);


struct _1a47c5126_constraintChecker {
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a4721d20_FnIns> _field_fi;
	jule::Ptr<_1a4676d30_StructIns> _field_si;
	jule::Ptr<_1a463d137_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1a47c7425_Impl {
	jule::Ptr<_1a4653669_TypeDecl> _field_Base;
	jule::Ptr<_1a4653669_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Statics;
};
struct _1a47cba34_Scope {
	jule::Ptr<_1a47cba34_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I32 _field_ChildIndex;
	jule::I32 _field_StmtIndex;
};
struct _1a47cbe52_If {
	jule::Any _field_Expr;
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
};
inline jule::Bool _1a47cbe52_If_eq(_1a47cbe52_If *_self_, _1a47cbe52_If _other_);


struct _1a47cc24e_Else {
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
};
inline jule::Bool _1a47cc24e_Else_eq(_1a47cc24e_Else *_self_, _1a47cc24e_Else _other_);


struct _1a47cc66c_Conditional {
	jule::Slice<jule::Ptr<_1a47cbe52_If>> _field_Elifs;
	jule::Ptr<_1a47cc24e_Else> _field_Default;
};
struct _1a47cc969_InfIter {
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
};
inline jule::Bool _1a47cc969_InfIter_eq(_1a47cc969_InfIter *_self_, _1a47cc969_InfIter _other_);


struct _1a47cce20_WhileIter {
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1a47cce20_WhileIter_eq(_1a47cce20_WhileIter *_self_, _1a47cce20_WhileIter _other_);


struct _1a47cd86b_RangeIter {
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Ptr<_1a4852e51_Var> _field_KeyA;
	jule::Ptr<_1a4852e51_Var> _field_KeyB;
};
inline jule::Bool _1a47cd86b_RangeIter_eq(_1a47cd86b_RangeIter *_self_, _1a47cd86b_RangeIter _other_);


struct _1a47cdc01_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1a47cdc01_ContSt_eq(_1a47cdc01_ContSt *_self_, _1a47cdc01_ContSt _other_);


struct _1a47ce0ca_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1a47ce0ca_BreakSt_eq(_1a47ce0ca_BreakSt *_self_, _1a47ce0ca_BreakSt _other_);


struct _1a47ce581_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1a47ce581_Label_eq(_1a47ce581_Label *_self_, _1a47ce581_Label _other_);


struct _1a47cebe1_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Ptr<_1a47ce581_Label> _field_Label;
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1a47cebe1_GotoSt_eq(_1a47cebe1_GotoSt *_self_, _1a47cebe1_GotoSt _other_);


struct _1a47d00ba_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1a47d00ba_Postfix_eq(_1a47d00ba_Postfix *_self_, _1a47d00ba_Postfix _other_);


struct _1a47d0571_Assign {
	jule::Ptr<_1a4711491_OperandExprModel> _field_Left;
	jule::Ptr<_1a4711491_OperandExprModel> _field_Right;
	jule::Ptr<_1a463d137_Token> _field_Op;
};
inline jule::Bool _1a47d0571_Assign_eq(_1a47d0571_Assign *_self_, _1a47d0571_Assign _other_);


struct _1a47d0a27_MultiAssign {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a48a2753_Data>> _field_Left;
	jule::Any _field_Right;
};
struct _1a47d1264_Match {
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1a47d1c8c_Case>> _field_Cases;
	jule::Ptr<_1a47d1c8c_Case> _field_Default;
};
struct _1a47d1c8c_Case {
	jule::Ptr<_1a47d1264_Match> _field_Owner;
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a48a2753_Data>> _field_Exprs;
	jule::Ptr<_1a47d1c8c_Case> _field_Next;
};
struct _1a47d2485_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1a47d2485_FallSt_eq(_1a47d2485_FallSt *_self_, _1a47d2485_FallSt _other_);


struct _1a47d282b_RetSt {
	jule::Ptr<_1a4721d20_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1a47d282b_RetSt_eq(_1a47d282b_RetSt *_self_, _1a47d282b_RetSt _other_);


struct _1a47d2cd2_scopeLabel {
	jule::Ptr<_1a463d137_Token> _field_token;
	jule::Ptr<_1a47ce581_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1a47d2cd2_scopeLabel_eq(_1a47d2cd2_scopeLabel *_self_, _1a47d2cd2_scopeLabel _other_);


struct _1a47d3cc2_scopeChecker {
	jule::Ptr<_1a463d137_Token> _field_calledFrom;
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Ptr<_1a4721d20_FnIns> _field_owner;
	jule::Ptr<_1a47d3cc2_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_1a4725065_SymTab> _field_table;
	jule::Ptr<_1a47cba34_Scope> _field_scope;
	jule::Ptr<_1a4663767_ScopeTree> _field_tree;
	jule::Ptr<_1a4721d20_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1a4852e51_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a47d2cd2_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>> _field_gotos;
	jule::I32 _field_i;
};
inline jule::Bool _1a47d3cc2_scopeChecker_eq(_1a47d3cc2_scopeChecker *_self_, _1a47d3cc2_scopeChecker _other_);


struct _1a47e7b4e_directiveChecker {
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a4652a86_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1a47e7b4e_directiveChecker_eq(_1a47e7b4e_directiveChecker *_self_, _1a47e7b4e_directiveChecker _other_);


struct _1a47ea3d2_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1a47eb8ab_Pass {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1a47eb8ab_Pass_eq(_1a47eb8ab_Pass *_self_, _1a47eb8ab_Pass _other_);


struct _1a4801361_symBuilder {
	jule::Ptr<_1a4801361_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1e71b7487_Log> _field_errors;
	jule::Ptr<_1a46517aa_AST> _field_ast;
	jule::Ptr<_1a4725065_SymTab> _field_table;
};
struct _1a480c3d3_ImportInfo {
	jule::Ptr<_1a466b5b6_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1a480eb55_Package> _field_Package;
	jule::I32 _field_ModId;
};
inline jule::Bool _1a480c3d3_ImportInfo_eq(_1a480c3d3_ImportInfo *_self_, _1a480c3d3_ImportInfo _other_);


struct _1a480eb55_Package {
	jule::Slice<jule::Ptr<_1a4725065_SymTab>> _field_Files;
};
struct _1a48287a6_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a47ae044_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1a480c3d3_ImportInfo> _field_runtime;
};
struct _1a48293cd_sema {
	jule::Slice<_1e71b7487_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a4725065_SymTab>> _field_files;
	jule::Ptr<_1a4725065_SymTab> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_1a48287a6_commonSemaMeta> _field_meta;
};
struct _1a484e469_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1a4852e51_Var {
	jule::Ptr<_1a47cba34_Scope> _field_Scope;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
	jule::Ptr<_1a48a38ca_Value> _field_Value;
	jule::Ptr<_1a47ea3d2_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Depends;
};
struct _1a4853ccb_FuncPattern {
};
struct _1a488dc6c_typeCompatibilityChecker {
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Ptr<_1a48d54cd_Type> _field_dest;
	jule::Ptr<_1a48d54cd_Type> _field_src;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
};
inline jule::Bool _1a488dc6c_typeCompatibilityChecker_eq(_1a488dc6c_typeCompatibilityChecker *_self_, _1a488dc6c_typeCompatibilityChecker _other_);


struct _1a4890ae8_assignTypeChecker {
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Ptr<_1a48d54cd_Type> _field_dest;
	jule::Ptr<_1a48a2753_Data> _field_d;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
	jule::Ptr<_1a47ea3d2_ReferenceStack> _field_refers;
};
inline jule::Bool _1a4890ae8_assignTypeChecker_eq(_1a4890ae8_assignTypeChecker *_self_, _1a4890ae8_assignTypeChecker _other_);


struct _1a48924bd_dynamicTypeAnnotation {
	jule::Ptr<_1a48a447a_eval> _field_e;
	jule::Ptr<_1a4721d20_FnIns> _field_f;
	jule::Ptr<_1a4720bba_ParamIns> _field_p;
	jule::Ptr<_1a48a2753_Data> _field_a;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
	jule::Ptr<_1a48d54cd_Type>* _field_k;
	jule::Ptr<_1a4653669_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_ignored;
};
struct _1a489732a_fnCallArgChecker {
	jule::Ptr<_1a48a447a_eval> _field_e;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_args;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
	jule::Ptr<_1a4721d20_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_ignored;
};
struct _1a489a262_structLitChecker {
	jule::Ptr<_1a48a447a_eval> _field_e;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
	jule::Ptr<_1a4676d30_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a4712393_StructArgExprModel>> _field_args;
};
struct _1a489c044_rangeChecker {
	jule::Ptr<_1a47d3cc2_scopeChecker> _field_sc;
	jule::Ptr<_1a466843c_RangeKind> _field_rang;
	jule::Ptr<_1a47cd86b_RangeIter> _field_Kind;
	jule::Ptr<_1a48a2753_Data> _field_d;
};
inline jule::Bool _1a489c044_rangeChecker_eq(_1a489c044_rangeChecker *_self_, _1a489c044_rangeChecker _other_);


struct _1a489e7a5_retTypeChecker {
	jule::Ptr<_1a47d3cc2_scopeChecker> _field_sc;
	jule::Ptr<_1a4721d20_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_types;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _field_exprs;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
	jule::Any _field_model;
};
struct _1a48a2753_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1a4276798_Const> _field_Constant;
};
inline jule::Bool _1a48a2753_Data_eq(_1a48a2753_Data *_self_, _1a48a2753_Data _other_);


struct _1a48a38ca_Value {
	jule::Ptr<_1a465799d_Expr> _field_Expr;
	jule::Ptr<_1a48a2753_Data> _field_Data;
};
inline jule::Bool _1a48a38ca_Value_eq(_1a48a38ca_Value *_self_, _1a48a38ca_Value _other_);


struct _1a48a447a_eval {
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a48d54cd_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1a4852e51_Var> _field_owner;
	jule::Ptr<_1a4676280_FieldIns> _field_field;
	jule::Bool _field_arg;
};
inline jule::Bool _1a48a447a_eval_eq(_1a48a447a_eval *_self_, _1a48a447a_eval _other_);


struct _1a48c3774_unaryEval {
	jule::Ptr<_1a48a447a_eval> _field_e;
	jule::Ptr<_1a48a2753_Data> _field_d;
	jule::Ptr<_1a4659a5a_UnaryExpr> _field_u;
};
inline jule::Bool _1a48c3774_unaryEval_eq(_1a48c3774_unaryEval *_self_, _1a48c3774_unaryEval _other_);


struct _1a48c5710_binaryEval {
	jule::Ptr<_1a48a447a_eval> _field_e;
	jule::Ptr<_1a48a2753_Data> _field_l;
	jule::Ptr<_1a48a2753_Data> _field_r;
	jule::Ptr<_1a463d137_Token> _field_op;
};
inline jule::Bool _1a48c5710_binaryEval_eq(_1a48c5710_binaryEval *_self_, _1a48c5710_binaryEval _other_);


struct _1a48d3ae7_InsGeneric {
	jule::Ptr<_1a48d54cd_Type> _field_Type;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_Constraint;
};
struct _1a48d46db_TypeAlias {
	jule::Ptr<_1a4663767_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a48dcbde_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _field_Generics;
};
struct _1a48d54cd_Type {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1a48d54cd_Type_eq(_1a48d54cd_Type *_self_, _1a48d54cd_Type _other_);


struct _1a48dcbde_TypeSym {
	jule::Ptr<_1a4653669_TypeDecl> _field_Decl;
	jule::Ptr<_1a48d54cd_Type> _field_Type;
};
inline jule::Bool _1a48dcbde_TypeSym_eq(_1a48dcbde_TypeSym *_self_, _1a48dcbde_TypeSym _other_);


struct _1a48dd5e6_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1a48dd5e6_Prim_eq(_1a48dd5e6_Prim *_self_, _1a48dd5e6_Prim _other_);


struct _1a48e2122_Sptr {
	jule::Ptr<_1a48d54cd_Type> _field_Elem;
};
inline jule::Bool _1a48e2122_Sptr_eq(_1a48e2122_Sptr *_self_, _1a48e2122_Sptr _other_);


struct _1a48e2ae5_Slc {
	jule::Ptr<_1a48d54cd_Type> _field_Elem;
};
inline jule::Bool _1a48e2ae5_Slc_eq(_1a48e2ae5_Slc *_self_, _1a48e2ae5_Slc _other_);


struct _1a48e36d9_Tuple {
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_Types;
};
struct _1a48e4289_Map {
	jule::Ptr<_1a48d54cd_Type> _field_Key;
	jule::Ptr<_1a48d54cd_Type> _field_Val;
};
inline jule::Bool _1a48e4289_Map_eq(_1a48e4289_Map *_self_, _1a48e4289_Map _other_);


struct _1a48e4e16_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_1a48d54cd_Type> _field_Elem;
};
inline jule::Bool _1a48e4e16_Arr_eq(_1a48e4e16_Arr *_self_, _1a48e4e16_Arr _other_);


struct _1a48e58d9_Ptr {
	jule::Ptr<_1a48d54cd_Type> _field_Elem;
};
inline jule::Bool _1a48e58d9_Ptr_eq(_1a48e58d9_Ptr *_self_, _1a48e58d9_Ptr _other_);


struct _1a48e68da_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1a48e68da_referencer_eq(_1a48e68da_referencer *_self_, _1a48e68da_referencer _other_);


struct _1a48e78ca_typeChecker {
	jule::Ptr<_1a48293cd_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a48e68da_referencer> _field_referencer;
	jule::Ptr<_1a47ea3d2_ReferenceStack> _field_refers;
	jule::Ptr<_1a463d137_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1a48d46db_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1a490098d_identTypeLookup {
};
inline jule::Bool _1a490098d_identTypeLookup_eq(_1a490098d_identTypeLookup *_self_, _1a490098d_identTypeLookup _other_);


struct _1a53016ce_FileInfo {
	jule::Ptr<_1a46517aa_AST> _field_Ast;
	jule::Slice<_1e71b7487_Log> _field_Errors;
};
struct _1a534dc7b_stmt {
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1a534e61c_scopeParser {
	jule::Ptr<_1a536c827_parser> _field_p;
	jule::Ptr<_1a4663767_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _field_stmts;
	jule::I32 _field_pos;
};
struct _1a535c042_exprBuilder {
	jule::Ptr<_1a536c827_parser> _field_p;
};
inline jule::Bool _1a535c042_exprBuilder_eq(_1a535c042_exprBuilder *_self_, _1a535c042_exprBuilder _other_);


struct _1a5369637_assignInfo {
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_r;
	jule::Ptr<_1a463d137_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1a536c827_parser {
	jule::Ptr<_1a46517aa_AST> _field_ast;
	jule::Slice<jule::Ptr<_1a4652a86_Directive>> _field_directives;
	jule::Slice<_1e71b7487_Log> _field_errors;
	jule::Ptr<_1a535c042_exprBuilder> _field_ep;
};
struct _1a537d9d1_typeBuilder {
	jule::Ptr<_1a536c827_parser> _field_p;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
};
struct _1a4a0c5a0_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1a4a0c5a0_CompileInfo_eq(_1a4a0c5a0_CompileInfo *_self_, _1a4a0c5a0_CompileInfo _other_);


struct _1a4a0d969_directiveEval {
	jule::Slice<_1e71b7487_Log> _field_logs;
	jule::Ptr<_1a4652a86_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1a5382c27_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1a538905d_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1a5390d89_MetaStrBuilder {
	jule::Ptr<_1a4721d20_FnIns> _field_Write;
	jule::Ptr<_1a4721d20_FnIns> _field_WriteByte;
	jule::Ptr<_1a4721d20_FnIns> _field_WriteRune;
	jule::Ptr<_1a4721d20_FnIns> _field_WriteStr;
};
inline jule::Bool _1a5390d89_MetaStrBuilder_eq(_1a5390d89_MetaStrBuilder *_self_, _1a5390d89_MetaStrBuilder _other_);


struct _1a53912a7_Meta {
	jule::Ptr<_1a5390d89_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1a471dc62_Fn> _field_EntryPoint;
};
inline jule::Bool _1a53912a7_Meta_eq(_1a53912a7_Meta *_self_, _1a53912a7_Meta _other_);


struct _1a53922ca_OrderedDefines {
	jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_Globals;
};
struct _1a623e4a6_specialCaseDefines {
	jule::Ptr<_1a4673ec5_Struct> _field_runtime_Map;
	jule::Ptr<_1a4673ec5_Struct> _field_runtime_mapIterator;
};
inline jule::Bool _1a623e4a6_specialCaseDefines_eq(_1a623e4a6_specialCaseDefines *_self_, _1a623e4a6_specialCaseDefines _other_);


struct _1a623ecc0_liveTable {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a4721d20_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a4676d30_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a4729476_Trait>> _field_traits;
};
struct _1a6240276_ObjectDeadCode {
	_1a623ecc0_liveTable _field_live;
	jule::Ptr<_1a53857a7_IR> _field_ir;
	_1a623e4a6_specialCaseDefines _field_scd;
};
struct _1a62442e1_scopeDeadCode {
	jule::Ptr<_1a62442e1_scopeDeadCode> _field_parent;
	jule::Ptr<_1a47cba34_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1a47ce581_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1a62442e1_scopeDeadCode_eq(_1a62442e1_scopeDeadCode *_self_, _1a62442e1_scopeDeadCode _other_);


struct _1a6248878_exprDeadCode {
	jule::Ptr<_1a62442e1_scopeDeadCode> _field_s;
};
inline jule::Bool _1a6248878_exprDeadCode_eq(_1a6248878_exprDeadCode *_self_, _1a6248878_exprDeadCode _other_);


struct _1a6130001_ExceptionalForwardingExprModel {
	jule::Ptr<_1a471396b_FnCallExprModel> _field_Expr;
};
inline jule::Bool _1a6130001_ExceptionalForwardingExprModel_eq(_1a6130001_ExceptionalForwardingExprModel *_self_, _1a6130001_ExceptionalForwardingExprModel _other_);


struct _1a61301dd_FnCallIgnoreExceptionalExprModel {
	jule::Ptr<_1a471396b_FnCallExprModel> _field_Base;
};
inline jule::Bool _1a61301dd_FnCallIgnoreExceptionalExprModel_eq(_1a61301dd_FnCallIgnoreExceptionalExprModel *_self_, _1a61301dd_FnCallIgnoreExceptionalExprModel _other_);


struct _1a6130584_SwapExprModel {
	jule::Ptr<_1a48a2753_Data> _field_Left;
	jule::Ptr<_1a48a2753_Data> _field_Right;
};
inline jule::Bool _1a6130584_SwapExprModel_eq(_1a6130584_SwapExprModel *_self_, _1a6130584_SwapExprModel _other_);


struct _1a61309a2_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1a61309a2_EmptyCompareExprModel_eq(_1a61309a2_EmptyCompareExprModel *_self_, _1a61309a2_EmptyCompareExprModel _other_);


struct _1a6130c9e_RefExprModel {
	jule::Ptr<_1a4852e51_Var> _field_Var;
};
inline jule::Bool _1a6130c9e_RefExprModel_eq(_1a6130c9e_RefExprModel *_self_, _1a6130c9e_RefExprModel _other_);


struct _1a6131255_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1a4276798_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1a6131255_StrCompExprModel_eq(_1a6131255_StrCompExprModel *_self_, _1a6131255_StrCompExprModel _other_);


struct _1a61317d8_MutSlicingExprModel {
	jule::Ptr<_1a463d137_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1a61317d8_MutSlicingExprModel_eq(_1a61317d8_MutSlicingExprModel *_self_, _1a61317d8_MutSlicingExprModel _other_);


struct _1a6131b6d_UnsafeBinaryExprModel {
	jule::Ptr<_1a471198b_BinaryExprModel> _field_Node;
};
inline jule::Bool _1a6131b6d_UnsafeBinaryExprModel_eq(_1a6131b6d_UnsafeBinaryExprModel *_self_, _1a6131b6d_UnsafeBinaryExprModel _other_);


struct _1a6131e6a_UnsafeIndexingExprModel {
	jule::Ptr<_1a47142eb_IndexingExprModel> _field_Node;
};
inline jule::Bool _1a6131e6a_UnsafeIndexingExprModel_eq(_1a6131e6a_UnsafeIndexingExprModel *_self_, _1a6131e6a_UnsafeIndexingExprModel _other_);


struct _1a6132344_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1a4713d45_SliceExprModel> _field_Elems;
};
inline jule::Bool _1a6132344_PushToSliceExprModel_eq(_1a6132344_PushToSliceExprModel *_self_, _1a6132344_PushToSliceExprModel _other_);


struct _1a613271d_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1a613271d_AppendToSliceExprModel_eq(_1a613271d_AppendToSliceExprModel *_self_, _1a613271d_AppendToSliceExprModel _other_);


struct _1a6132ae7_StrRuneIter {
	jule::Ptr<_1a48a2753_Data> _field_Expr;
	jule::Ptr<_1a47cd86b_RangeIter> _field_Base;
};
inline jule::Bool _1a6132ae7_StrRuneIter_eq(_1a6132ae7_StrRuneIter *_self_, _1a6132ae7_StrRuneIter _other_);


struct _1a6132de4_UnsafeDerefExprModel {
	jule::Ptr<_1a4711d65_UnaryExprModel> _field_Base;
};
inline jule::Bool _1a6132de4_UnsafeDerefExprModel_eq(_1a6132de4_UnsafeDerefExprModel *_self_, _1a6132de4_UnsafeDerefExprModel _other_);


struct _1a61331e1_UnsafeCastingExprModel {
	jule::Ptr<_1a47130b9_CastingExprModel> _field_Base;
};
inline jule::Bool _1a61331e1_UnsafeCastingExprModel_eq(_1a61331e1_UnsafeCastingExprModel *_self_, _1a61331e1_UnsafeCastingExprModel _other_);


struct _1a6133d18_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1a6133d18_nilVar_eq(_1a6133d18_nilVar *_self_, _1a6133d18_nilVar _other_);


struct _1a6134159_nils {
	jule::Slice<_1a6133d18_nilVar> _field_vars;
};
struct _1a6136cc7_scopeOptimizer {
	jule::Ptr<_1a6136cc7_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_1a47cba34_Scope> _field_scope;
	jule::Ptr<_1a6146d3c_data> _field_data;
};
inline jule::Bool _1a6136cc7_scopeOptimizer_eq(_1a6136cc7_scopeOptimizer *_self_, _1a6136cc7_scopeOptimizer _other_);


struct _1a613d680_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a6146d3c_data> _field_data;
	jule::Ptr<_1a538905d_ExprInspector> _field_inspector;
};
inline jule::Bool _1a613d680_exprOptimizer_eq(_1a613d680_exprOptimizer *_self_, _1a613d680_exprOptimizer _other_);


struct _1a6143b19_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1a48d54cd_Type> _field_kind;
};
inline jule::Bool _1a6143b19_dynamicVar_eq(_1a6143b19_dynamicVar *_self_, _1a6143b19_dynamicVar _other_);


struct _1a6143e5a_dynamic {
	jule::Slice<_1a6143b19_dynamicVar> _field_vars;
};
struct _1a6146d3c_data {
	jule::Ptr<_1a6148624_boundary> _field_boundary;
	jule::Ptr<_1a6134159_nils> _field_nils;
	jule::Ptr<_1a6143e5a_dynamic> _field_dynamic;
	jule::I32 _field_flags;
};
inline jule::Bool _1a6146d3c_data_eq(_1a6146d3c_data *_self_, _1a6146d3c_data _other_);


struct _1a61482d3_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1a6148624_boundary {
	jule::Slice<_1a61482d3_boundaryVar> _field_vars;
};
struct _1a6249a66_Optimizer {
	jule::Ptr<_1a53857a7_IR> _field_ir;
};
inline jule::Bool _1a6249a66_Optimizer_eq(_1a6249a66_Optimizer *_self_, _1a6249a66_Optimizer _other_);


struct _1a5b9d8b6_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1a5b9d8b6_AbsTime_eq(_1a5b9d8b6_AbsTime *_self_, _1a5b9d8b6_AbsTime _other_);


struct _1a5b9e08c_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1a5b9e08c_Time_eq(_1a5b9e08c_Time *_self_, _1a5b9e08c_Time _other_);


struct _1a624dbe1_scopeCoder {
	jule::Ptr<_1a5bab61b_ObjectCoder> _field_oc;
};
inline jule::Bool _1a624dbe1_scopeCoder_eq(_1a624dbe1_scopeCoder *_self_, _1a624dbe1_scopeCoder _other_);


struct _1a625a13c_exprCoder {
	jule::Ptr<_1a5bab61b_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a4852e51_Var>>> _field_varPrefixes;
};
struct _1a626c6c1_TestCoder {
	jule::Ptr<_1a4676d30_StructIns> _field_t;
	jule::Ptr<_1a471dc62_Fn> _field_tmReset;
	jule::Ptr<_1a471dc62_Fn> _field_tmFailed;
	jule::Ptr<_1a471dc62_Fn> _field_tmSkipped;
	jule::Ptr<_1a5bab61b_ObjectCoder> _field_oc;
};
inline jule::Bool _1a626c6c1_TestCoder_eq(_1a626c6c1_TestCoder *_self_, _1a626c6c1_TestCoder _other_);


struct _1a627031c_identCoder {
};
inline jule::Bool _1a627031c_identCoder_eq(_1a627031c_identCoder *_self_, _1a627031c_identCoder _other_);


struct _1a5ba8d66_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1a5ba8d66_SerializationInfo_eq(_1a5ba8d66_SerializationInfo *_self_, _1a5ba8d66_SerializationInfo _other_);


struct _1a5ba9284_traitCast {
	jule::Ptr<_1a4729476_Trait> _field_t1;
	jule::Ptr<_1a4729476_Trait> _field_t2;
};
inline jule::Bool _1a5ba9284_traitCast_eq(_1a5ba9284_traitCast *_self_, _1a5ba9284_traitCast _other_);


struct _1a5ba965d_anonHash {
	jule::Ptr<_1a47147a2_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1a5ba965d_anonHash_eq(_1a5ba965d_anonHash *_self_, _1a5ba965d_anonHash _other_);


struct _1a5ba9a7b_traitHash {
	jule::Ptr<_1a4729476_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _field_methods;
};
struct _1a5ba9d78_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1a5ba9d78_metadata_eq(_1a5ba9d78_metadata *_self_, _1a5ba9d78_metadata _other_);


struct _1a5bab61b_ObjectCoder {
	_1e71a80b0_Builder _field_Buf;
	_1e71a80b0_Builder _field_resultDecls;
	_1e71a80b0_Builder _field_anyObj;
	_1e71a80b0_Builder _field_anonObj;
	_1e71a80b0_Builder _field_deallocObj;
	_1e71a80b0_Builder _field_coSpawnObj;
	jule::Ptr<_1a53857a7_IR> _field_ir;
	_1a5ba8d66_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a5ba965d_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1a9b94c60__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _field_anyTypeMap;
	jule::Slice<_1a5ba9284_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1a4721d20_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1a5ba9a7b_traitHash>> _field_traitMap;
	jule::Ptr<_1a9be61ac__Map> _field_traitMetMap;
	jule::Ptr<_1a625a13c_exprCoder> _field_ec;
	jule::Ptr<_1a624dbe1_scopeCoder> _field_sc;
	jule::Ptr<_1a5bbb61a_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	_1a5ba9d78_metadata _field_meta;
};
struct _1a5bba9d2_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1a5bba9d2_customType_eq(_1a5bba9d2_customType *_self_, _1a5bba9d2_customType _other_);


struct _1a5bbb61a_typeCoder {
	jule::Ptr<_1a5bab61b_ObjectCoder> _field_oc;
	jule::Ptr<_1a5bc4205_resultCoder> _field_rc;
};
inline jule::Bool _1a5bbb61a_typeCoder_eq(_1a5bbb61a_typeCoder *_self_, _1a5bbb61a_typeCoder _other_);


struct _1a5bc4205_resultCoder {
	jule::Ptr<_1a5bbb61a_typeCoder> _field_tc;
};
inline jule::Bool _1a5bc4205_resultCoder_eq(_1a5bc4205_resultCoder *_self_, _1a5bc4205_resultCoder _other_);


struct _1aa3a8374_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1aa3a8374_Flag_eq(_1aa3a8374_Flag *_self_, _1aa3a8374_Flag _other_);

struct _1aa3abc07_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1aa3abc07_Flag_eq(_1aa3abc07_Flag *_self_, _1aa3abc07_Flag _other_);

struct _1aa3b0414_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1aa3b0414_Flag_eq(_1aa3b0414_Flag *_self_, _1aa3b0414_Flag _other_);

struct _1aa3b3b65_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1aa3b3b65_Flag_eq(_1aa3b3b65_Flag *_self_, _1aa3b3b65_Flag _other_);

struct _1aa3b7372_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1aa3b7372_Flag_eq(_1aa3b7372_Flag *_self_, _1aa3b7372_Flag _other_);


struct _1a5c393ad_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1a5c3bd72_argParser {
	_1a5c393ad_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
};
struct _1cd5ae502_Dir {
	jule::Str _field_Name;
	_1cd62092b_Stat _field_Stat;
};
inline jule::Bool _1cd5ae502_Dir_eq(_1cd5ae502_Dir *_self_, _1cd5ae502_Dir _other_);


struct _1a6146765_dataCheckpoint {
	_1a6148624_boundary _field_boundary;
	_1a6134159_nils _field_nils;
	_1a6143e5a_dynamic _field_dynamic;
};
struct _1a53857a7_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a480eb55_Package> _field_Main;
	jule::Ptr<_1a480c3d3_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _field_Used;
	_1a53922ca_OrderedDefines _field_Ordered;
};
struct _1cd5b00b3_Cmd {
	_1cd618acd_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1a4721d20_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1a4721d20_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a48a2753_Data__jule_tuple_x_1a48a2753_Data {
	jule::Ptr<_1a48a2753_Data> __jule_result_arg0;
	jule::Ptr<_1a48a2753_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a48a2753_Data__jule_tuple_bool {
	jule::Ptr<_1a48a2753_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a465799d_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a465799d_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a466a719_Case__jule_tuple_bool {
	jule::Ptr<_1a466a719_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a466a719_Case__jule_tuple_x_1a4669570_Else {
	jule::Slice<jule::Ptr<_1a466a719_Case>> __jule_result_arg0;
	jule::Ptr<_1a4669570_Else> __jule_result_arg1;
};
struct __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4662117_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a4662117_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a4653669_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a465655c_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log {
	jule::Slice<jule::Ptr<_1a46517aa_AST>> __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1e71b7487_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a4721d20_FnIns__jule_tuple_bool {
	jule::Ptr<_1a4721d20_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a53857a7_IR__jule_tuple_s_1e71b7487_Log {
	jule::Ptr<_1a53857a7_IR> __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b3ee0843_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b3ee0843_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b3ee0843_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4725065_SymTab__jule_tuple_s_1e71b7487_Log {
	jule::Ptr<_1a4725065_SymTab> __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log {
	jule::Ptr<_1a480eb55_Package> __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a46517aa_AST__jule_tuple_s_1e71b7487_Log {
	jule::Ptr<_1a46517aa_AST> __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a463d137_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a463d137_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token {
	jule::Slice<jule::Ptr<_1a463d137_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a463d137_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a463d137_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a463d137_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> __jule_result_arg0;
	jule::Slice<_1e71b7487_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1e747e9e6_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1e7480420_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1a9b94c60__Map> static__1a9b95326_make(void);
inline void _1a9b9547a_initData(_1a9b94c60__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1a9b955ce_hash(_1a9b94c60__Map* _self_, jule::Str _14616_k);
inline void _1a9b95733_rehash(_1a9b94c60__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1a9b95887_nextSize(_1a9b94c60__Map* _self_);
inline void _1a9b959db_lookup(jule::Ptr<_1a9b94c60__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1a9b95b40_get(jule::Ptr<_1a9b94c60__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1a9b95c94_set(_1a9b94c60__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1a9b95de8_del(jule::Ptr<_1a9b94c60__Map> _self_, jule::Str _27624_k);
inline void _1a9b9604c_clear(jule::Ptr<_1a9b94c60__Map> _self_);
inline jule::I32 _1a9b961a1_len(jule::Ptr<_1a9b94c60__Map> _self_);
inline jule::I32 _1a9b96305_cap(_1a9b94c60__Map* _self_);
inline _1a9ba14db_mapIterator _1a9b96459_iterator(jule::Ptr<_1a9b94c60__Map> _self_);
inline jule::Ptr<_1a9be61ac__Map> static__1a9be66c9_make(void);
inline void _1a9be682d_initData(_1a9be61ac__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1a9be6982_hash(_1a9be61ac__Map* _self_, jule::Ptr<_1a4721d20_FnIns> _14616_k);
inline void _1a9be6ad6_rehash(_1a9be61ac__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1a9be6c3a_nextSize(_1a9be61ac__Map* _self_);
inline void _1a9be6d8e_lookup(jule::Ptr<_1a9be61ac__Map> _self_, jule::Ptr<_1a4721d20_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1a9be6ee3_get(jule::Ptr<_1a9be61ac__Map> _self_, jule::Ptr<_1a4721d20_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1a9be7147_set(_1a9be61ac__Map* _self_, jule::Ptr<_1a4721d20_FnIns> _24123_k);
inline jule::Bool _1a9be729b_del(jule::Ptr<_1a9be61ac__Map> _self_, jule::Ptr<_1a4721d20_FnIns> _27624_k);
inline void _1a9be7400_clear(jule::Ptr<_1a9be61ac__Map> _self_);
inline jule::I32 _1a9be7554_len(jule::Ptr<_1a9be61ac__Map> _self_);
inline jule::I32 _1a9be76a8_cap(_1a9be61ac__Map* _self_);
inline _1a9c0078d_mapIterator _1a9be780c_iterator(jule::Ptr<_1a9be61ac__Map> _self_);
inline void _1a9ba1a6e_init(_1a9ba14db_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1a9ba1bc3_next(_1a9ba14db_mapIterator* _self_);
inline void _1a9c00d21_init(_1a9c0078d_mapIterator* _self_);
inline __jule_tuple_px_1a4721d20_FnIns__jule_tuple_psuintptr _1a9c00e75_next(_1a9c0078d_mapIterator* _self_);
inline _1e71a80b0_Builder static__1e71a892e_New(jule::I32 _2316_cap);
inline jule::Exceptional<jule::I32> _1e71a8c70_Write(_1e71a80b0_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I32> _1e71a90b1_WriteStr(_1e71a80b0_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1e71a9369_WriteByte(_1e71a80b0_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I32> _1e71a96aa_WriteRune(_1e71a80b0_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1e71a9941_Str(_1e71a80b0_Builder* _self_);
inline void _1e71a9b3e_Clear(_1e71a80b0_Builder* _self_);
inline jule::I32 _1e71a9dc5_Len(_1e71a80b0_Builder* _self_);
inline jule::Slice<jule::U8> _1e71aa3e2_Buf(_1e71a80b0_Builder* _self_);
inline void _1e71aa69a_SetBuf(_1e71a80b0_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _1ce78e1e7_index(_1ce78dc30_lazyBuff* _self_, jule::I32 _5521_i);
inline void _1ce78e4a0_append(_1ce78dc30_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1ce78e736_string(_1ce78dc30_lazyBuff* _self_);
inline jule::Ptr<_1cd61d40c_File> static__1cd61dde1_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1cd61d40c_File>> static__1cd61e1aa_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1cd61e474_Read(jule::Str _9017_path);
inline jule::VoidExceptional static__1cd61e81a_Write(jule::Str _12918_path, jule::Slice<jule::U8> _12929_data, jule::I32 _12943_perm);
inline jule::VoidExceptional _1cd620123_Close(_1cd61d40c_File* _self_);
inline jule::Exceptional<jule::Ptr<_1cd61d40c_File>> static__1cd622213_Open(jule::Str _2217_path, jule::I32 _2228_flag, jule::I32 _2241_mode);
inline jule::VoidExceptional static__1cd622444_Remove(jule::Str _3519_path);
inline jule::Exceptional<jule::I32> _1cd6228c8_Write(_1cd61d40c_File* _self_, jule::Slice<jule::U8> _5221_buf);
inline jule::Exceptional<jule::I32> _1cd622c19_Read(_1cd61d40c_File* _self_, jule::Slice<jule::U8> _8424_buf);
inline jule::Bool _1cd620d38_IsDir(_1cd62092b_Stat* _self_);
inline jule::Bool _1cd6210be_IsReg(_1cd62092b_Stat* _self_);
inline jule::U32 _1cd621355_Size(_1cd62092b_Stat* _self_);
inline jule::Exceptional<_1cd62092b_Stat> static__1ce7978d7_Of(jule::Str _1215_path);
inline jule::Bool _1b4569707_set(_1b4572c3d_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1b4569a48_floatBits(_1b4572c3d_decimal* _self_, _1b455e554_floatInfo* _33226_flt);
inline void _1b4573128_assign(_1b4572c3d_decimal* _self_, jule::U64 _15126_v);
inline void _1b45733d1_shift(_1b4572c3d_decimal* _self_, jule::I32 _17625_k);
inline void _1b4573689_roundDown(_1b4572c3d_decimal* _self_, jule::I32 _19625_nd);
inline void _1b4573942_roundUp(_1b4572c3d_decimal* _self_, jule::I32 _20523_nd);
inline void _1b4573bea_round(_1b4572c3d_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _1b4573e81_roundedInteger(_1b4572c3d_decimal* _self_);
inline void static__1ce613e4b_Reset(void);
inline void static__1ce6152e3_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1b45787d2_LogFlat(_1e71b7487_Log* _1421_l);
inline void static__1b45789e1_LogError(_1e71b7487_Log* _1922_l);
inline void static__1b4578c22_Log(_1e71b7487_Log* _6417_l);
inline void static__1b4578e53_PrintLogs(jule::Slice<_1e71b7487_Log>* _7423_logs);
inline jule::U8 _1a463d4de_Prec(_1a463d137_Token* _self_);
inline jule::Ptr<_1a4643a11_Fileset> static__1a4643e62_New(jule::Str _1616_path);
inline void _1a464421a_Fill(_1a4643a11_Fileset* _self_, jule::Slice<jule::U8> _2324_data);
inline jule::Str _1a46444a1_Dir(_1a4643a11_Fileset* _self_);
inline jule::Str _1a4644737_Name(_1a4643a11_Fileset* _self_);
inline jule::Str _1a4644d0e_GetRow(_1a4643a11_Fileset* _self_, jule::I32 _4418_row);
inline void _1a464c19b_pushErr(_1a464bad5_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1a464c70c_lex(_1a464bad5_lex* _self_);
inline jule::Str _1a464ca4d_id(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1a464ccd4_resume(_1a464bad5_lex* _self_);
inline void _1a464d08c_lexLineComment(_1a464bad5_lex* _self_, jule::Ptr<_1a463d137_Token>* _52235_token);
inline void _1a464d345_lexRangeComment(_1a464bad5_lex* _self_, jule::Ptr<_1a463d137_Token>* _53736_token);
inline jule::Str _1a464d686_num(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1a464d9c7_escapeSeq(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1a464ddc3_getRune(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1a464e214_lexRune(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1a464e49a_lexStr(_1a464bad5_lex* _self_);
inline void _1a464e92e_newLine(_1a464bad5_lex* _self_);
inline jule::Bool _1a464ee90_isOp(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1a463d137_Token>* _70858_t);
inline jule::Bool _1a465038b_lexBasicOps(_1a464bad5_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1a463d137_Token>* _71845_tok);
inline jule::Bool _1a4650787_lexId(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1a463d137_Token>* _72740_t);
inline jule::Bool _1a4650b83_lexNum(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1a463d137_Token>* _73741_t);
inline jule::Ptr<_1a463d137_Token> _1a4650e19_token(_1a464bad5_lex* _self_);
inline jule::Bool _1a4655539_IsUnsafe(_1a4655193_PtrTypeDecl* _self_);
inline jule::Bool _1a4655ccb_AutoSized(_1a4655935_ArrTypeDecl* _self_);
inline jule::Bool _1a465ba7e_Unhandled(_1a465b6c7_FnCallExpr* _self_);
inline jule::Bool _1a465bd15_Ignored(_1a465b6c7_FnCallExpr* _self_);
inline jule::Bool _1a466435b_IsSelf(_1a4663ea4_ParamDecl* _self_);
inline jule::Bool _1a466579c_IsAnon(_1a4665406_FnDecl* _self_);
inline jule::Bool _1a46675a1_IsInf(_1a466720a_Iter* _self_);
inline jule::Bool _1a4667dcb_IsWhileNext(_1a4667a35_WhileKind* _self_);
inline jule::Ptr<_1a4276798_Const> static__1a470550c_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1a4276798_Const> static__1a47057c6_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1a4276798_Const> static__1a4705a90_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1a4276798_Const> static__1a4705d59_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1a4276798_Const> static__1a4706123_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1a4276798_Const> static__1a4706332_NewNil(void);
inline jule::I64 _1a4706992_ReadI64(_1a4276798_Const* _self_);
inline jule::U64 _1a4706c28_ReadU64(_1a4276798_Const* _self_);
inline jule::Bool _1a4706eae_ReadBool(_1a4276798_Const* _self_);
inline jule::Str _1a4707245_ReadStr(_1a4276798_Const* _self_);
inline jule::F64 _1a47074cb_ReadF64(_1a4276798_Const* _self_);
inline jule::I64 _1a4707762_AsI64(_1a4276798_Const* _self_);
inline jule::U64 _1a47079e8_AsU64(_1a4276798_Const* _self_);
inline jule::F64 _1a4707c7e_AsF64(_1a4276798_Const* _self_);
inline void _1a4708037_SetI64(_1a4276798_Const* _self_, jule::I64 _13622_x);
inline void _1a47082e0_SetU64(_1a4276798_Const* _self_, jule::U64 _13922_x);
inline void _1a4708598_SetBool(_1a4276798_Const* _self_, jule::Bool _14223_x);
inline void _1a4708851_SetStr(_1a4276798_Const* _self_, jule::Str _14522_x);
inline void _1a4708b09_SetF64(_1a4276798_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1a470908d_IsI64(_1a4276798_Const* _self_);
inline jule::Bool _1a4709324_IsU64(_1a4276798_Const* _self_);
inline jule::Bool _1a47095aa_IsBool(_1a4276798_Const* _self_);
inline jule::Bool _1a4709841_IsStr(_1a4276798_Const* _self_);
inline jule::Bool _1a4709ac7_IsF64(_1a4276798_Const* _self_);
inline jule::Bool _1a4709d5d_IsNil(_1a4276798_Const* _self_);
inline jule::Bool _1a470a4e0_And(_1a4276798_Const* _self_, _1a4276798_Const _23615_x);
inline jule::Bool _1a470a831_Or(_1a4276798_Const* _self_, _1a4276798_Const _24714_x);
inline jule::Bool _1a470bcc7_Add(_1a4276798_Const* _self_, _1a4276798_Const _37519_x);
inline jule::Bool _1a470c118_Sub(_1a4276798_Const* _self_, _1a4276798_Const _40419_x);
inline jule::Bool _1a470c459_Mul(_1a4276798_Const* _self_, _1a4276798_Const _42819_x);
inline jule::Bool _1a470c79a_Div(_1a4276798_Const* _self_, _1a4276798_Const _45619_x);
inline jule::Bool _1a470cadb_Mod(_1a4276798_Const* _self_, _1a4276798_Const _48519_x);
inline jule::Bool _1a470ce2c_BitwiseAnd(_1a4276798_Const* _self_, _1a4276798_Const _50726_x);
inline jule::Bool _1a470d26d_BitwiseOr(_1a4276798_Const* _self_, _1a4276798_Const _52125_x);
inline jule::Bool _1a470d5ae_Xor(_1a4276798_Const* _self_, _1a4276798_Const _53519_x);
inline jule::Bool _1a470d900_Lshift(_1a4276798_Const* _self_, _1a4276798_Const _54922_x);
inline jule::Bool _1a470dc41_Rshift(_1a4276798_Const* _self_, _1a4276798_Const _56922_x);
inline jule::Ptr<_1a4676280_FieldIns> _1a4671489_instance(jule::Ptr<_1a46710d2_Field> _self_);
inline jule::Ptr<_1a4676d30_StructIns> _1a467446a_instance(jule::Ptr<_1a4673ec5_Struct> _self_);
inline jule::Ptr<_1a4676d30_StructIns> _1a4674778_appendInstance(_1a4673ec5_Struct* _self_, jule::Ptr<_1a4676d30_StructIns>* _13535_ins);
inline jule::Ptr<_1a471dc62_Fn> _1a4674b74_FindMethod(_1a4673ec5_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1a4852e51_Var> _1a4674eb5_FindStatic(_1a4673ec5_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1a46710d2_Field> _1a4675306_FindField(_1a4673ec5_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1a4675647_IsImplements(_1a4673ec5_Struct* _self_, jule::Ptr<_1a4729476_Trait> _18524_t);
inline jule::Bool _1a4675988_IsUses(_1a4673ec5_Struct* _self_, jule::Ptr<_1a4673ec5_Struct> _19518_s);
inline jule::Str _1a46771d7_Str(_1a4676d30_StructIns* _self_);
inline jule::Bool _1a4677528_Equal(jule::Ptr<_1a4676d30_StructIns> _self_, jule::Ptr<_1a48d54cd_Type> _25718_other);
inline jule::Bool _1a46779ce_Same(_1a4676d30_StructIns* _self_, jule::Ptr<_1a4676d30_StructIns> _28516_s);
inline jule::Ptr<_1a471dc62_Fn> _1a4677dca_FindMethod(_1a4676d30_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1a4676280_FieldIns> _1a467821b_FindField(_1a4676d30_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a4852e51_Var> _1a467855c_FindStatic(_1a4676d30_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1a4720bba_ParamIns> _1a471c656_instance(jule::Ptr<_1a471c28d_Param> _self_);
inline jule::Bool _1a471c8dc_IsSelf(_1a471c28d_Param* _self_);
inline jule::Bool _1a471cb73_IsRef(_1a471c28d_Param* _self_);
inline jule::Bool _1a471e218_IsVoid(_1a471dc62_Fn* _self_);
inline jule::Bool _1a471e49e_IsMethod(_1a471dc62_Fn* _self_);
inline jule::Bool _1a471e735_IsEntryPoint(_1a471dc62_Fn* _self_);
inline jule::Bool _1a471e9bb_IsInit(_1a471dc62_Fn* _self_);
inline jule::Bool _1a471ec52_IsAnon(_1a471dc62_Fn* _self_);
inline jule::Bool _1a471eed8_AnyVar(_1a471dc62_Fn* _self_);
inline jule::Ptr<_1a4721d20_FnIns> _1a472026e_instanceForce(jule::Ptr<_1a471dc62_Fn> _self_);
inline jule::Ptr<_1a4721d20_FnIns> _1a4720505_instance(jule::Ptr<_1a471dc62_Fn> _self_);
inline jule::Ptr<_1a4721d20_FnIns> _1a4720813_appendInstance(_1a471dc62_Fn* _self_, jule::Ptr<_1a4721d20_FnIns>* _13835_ins);
inline jule::Str _1a4721061_Str(_1a4720bba_ParamIns* _self_);
inline jule::Str _1a4722194_Str(_1a4721d20_FnIns* _self_);
inline jule::Bool _1a47224d5_Equal(jule::Ptr<_1a4721d20_FnIns> _self_, jule::Ptr<_1a48d54cd_Type> _22918_other);
inline jule::Bool _1a472297a_EqualFn(jule::Ptr<_1a4721d20_FnIns> _self_, jule::Ptr<_1a4721d20_FnIns>* _24021_f);
inline jule::Bool _1a4722cbb_equalTrait(jule::Ptr<_1a4721d20_FnIns> _self_, jule::Ptr<_1a4721d20_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1a48d54cd_Type>> _1a4723052_Types(_1a4721d20_FnIns* _self_);
inline jule::Bool _1a47232d8_IsBuiltin(_1a4721d20_FnIns* _self_);
inline jule::Bool _1a472356e_IsAnon(_1a4721d20_FnIns* _self_);
inline jule::Bool _1a47238b0_Same(_1a4721d20_FnIns* _self_, jule::Ptr<_1a4721d20_FnIns> _34216_f);
inline jule::Str _1a4723c01_GetKindStr(_1a4721d20_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4725582_SelectPackage(_1a4725065_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a4852e51_Var> _1a472597d_FindVar(_1a4725065_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a4725d79_FindTypeAlias(_1a4725065_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a4673ec5_Struct> _1a4726275_FindStruct(_1a4725065_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a471dc62_Fn> _1a4726671_FindFn(_1a4725065_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a4729476_Trait> _1a47269b2_FindTrait(_1a4725065_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a472bb2c_Enum> _1a4726d03_FindEnum(_1a4725065_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a472d337_TypeEnum> _1a4727144_FindTypeEnum(_1a4725065_SymTab* _self_, jule::Str _9728_ident);
inline jule::I32 _1a472760b_findVar1(_1a4725065_SymTab* _self_, jule::Ptr<_1a4852e51_Var>* _10825_v);
inline jule::Ptr<_1a4852e51_Var> _1a4727ab2_findVar(_1a4725065_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a4728068_findTypeAlias(_1a4725065_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1a4728464_defByIdent(_1a4725065_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1a472891a_isDuplicatedIdent(_1a4725065_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1a4729872_Str(_1a4729476_Trait* _self_);
inline jule::Bool _1a4729bb3_Equal(jule::Ptr<_1a4729476_Trait> _self_, jule::Ptr<_1a48d54cd_Type> _2518_other);
inline jule::Ptr<_1a471dc62_Fn> _1a472a158_FindMethod(_1a4729476_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a471dc62_Fn> _1a472a7da_findMethodInherit(_1a4729476_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a472b49a_AutoExpr(_1a472b0c1_EnumItem* _self_);
inline jule::Str _1a472bed4_Str(_1a472bb2c_Enum* _self_);
inline jule::Bool _1a472c325_Equal(jule::Ptr<_1a472bb2c_Enum> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other);
inline jule::Ptr<_1a472b0c1_EnumItem> _1a472c754_FindItem(_1a472bb2c_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a472d6ab_Str(_1a472d337_TypeEnum* _self_);
inline jule::Bool _1a472d9ec_Equal(jule::Ptr<_1a472d337_TypeEnum> _self_, jule::Ptr<_1a48d54cd_Type> _8018_other);
inline jule::Ptr<_1a472cc60_TypeEnumItem> _1a472de2b_FindItem(_1a472d337_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a479e540_Str(_1a479e144_comptimeRange* _self_);
inline jule::Bool _1a479e881_Equal(jule::Ptr<_1a479e144_comptimeRange> _self_, jule::Ptr<_1a48d54cd_Type> _2718_other);
inline jule::Str _1a47a0057_Str(_1a479eba0_comptimeStructField* _self_);
inline jule::Bool _1a47a0398_Equal(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Ptr<_1a48d54cd_Type> _3718_other);
inline jule::Ptr<_1a48a2753_Data> _1a47a08a4__Decl(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Ptr<_1a48a447a_eval>* _4127_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47a0ca0__Type(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Ptr<_1a48a447a_eval>* _5327_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47a10e1_subIdent(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1a47a180b_Str(_1a47a1443_comptimeStructFields* _self_);
inline jule::Bool _1a47a1b4c_Equal(jule::Ptr<_1a47a1443_comptimeStructFields> _self_, jule::Ptr<_1a48d54cd_Type> _9018_other);
inline void _1a47a20d1_ready(_1a47a1443_comptimeStructFields* _self_, jule::Ptr<_1a4852e51_Var>* _9426_keyA, jule::Ptr<_1a4852e51_Var>* _9443_keyB);
inline void _1a47a2444_index(_1a47a1443_comptimeStructFields* _self_, jule::Ptr<_1a48a2753_Data>* _11526_d, jule::I32 _11536_i);
inline void _1a47a2862_step(_1a47a1443_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1a4852e51_Var>* _12633_keyA, jule::Ptr<_1a4852e51_Var>* _12650_keyB);
inline jule::I32 _1a47a2ae8_len(_1a47a1443_comptimeStructFields* _self_);
inline jule::Str _1a47a327a_Str(_1a47a2dc3_comptimeStatic* _self_);
inline jule::Bool _1a47a35bb_Equal(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Ptr<_1a48d54cd_Type> _15018_other);
inline jule::Ptr<_1a48a2753_Data> _1a47a3ac7__Decl(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Ptr<_1a48a447a_eval>* _15427_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47a3ec3__Type(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Ptr<_1a48a447a_eval>* _16627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47a4314_subIdent(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1a47a4a2e_Str(_1a47a4677_comptimeStatics* _self_);
inline jule::Bool _1a47a4d70_Equal(jule::Ptr<_1a47a4677_comptimeStatics> _self_, jule::Ptr<_1a48d54cd_Type> _20318_other);
inline void _1a47a5304_ready(_1a47a4677_comptimeStatics* _self_, jule::Ptr<_1a4852e51_Var>* _20726_keyA, jule::Ptr<_1a4852e51_Var>* _20743_keyB);
inline void _1a47a5667_index(_1a47a4677_comptimeStatics* _self_, jule::Ptr<_1a48a2753_Data>* _22826_d, jule::I32 _22836_i);
inline void _1a47a5a85_step(_1a47a4677_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1a4852e51_Var>* _23933_keyA, jule::Ptr<_1a4852e51_Var>* _23950_keyB);
inline jule::I32 _1a47a5d1b_len(_1a47a4677_comptimeStatics* _self_);
inline jule::Str _1a47a649d_Str(_1a47a60e6_comptimeEnumField* _self_);
inline jule::Bool _1a47a67de_Equal(jule::Ptr<_1a47a60e6_comptimeEnumField> _self_, jule::Ptr<_1a48d54cd_Type> _26318_other);
inline jule::Ptr<_1a48a2753_Data> _1a47a6cd9__Decl(jule::Ptr<_1a47a60e6_comptimeEnumField> _self_, jule::Ptr<_1a48a447a_eval>* _26727_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47a712a_subIdent(jule::Ptr<_1a47a60e6_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1a47a78bc_Str(_1a47a7405_comptimeEnumFields* _self_);
inline jule::Bool _1a47a7c0d_Equal(jule::Ptr<_1a47a7405_comptimeEnumFields> _self_, jule::Ptr<_1a48d54cd_Type> _30118_other);
inline void _1a47a811a_ready(_1a47a7405_comptimeEnumFields* _self_, jule::Ptr<_1a4852e51_Var>* _30526_keyA, jule::Ptr<_1a4852e51_Var>* _30543_keyB);
inline void _1a47a847d_index(_1a47a7405_comptimeEnumFields* _self_, jule::Ptr<_1a48a2753_Data>* _32626_d, jule::I32 _32636_i);
inline void _1a47a889b_step(_1a47a7405_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1a4852e51_Var>* _33733_keyA, jule::Ptr<_1a4852e51_Var>* _33750_keyB);
inline jule::I32 _1a47a8b32_len(_1a47a7405_comptimeEnumFields* _self_);
inline jule::Str _1a47a92b4_Str(_1a47a8e0c_comptimeParam* _self_);
inline jule::Bool _1a47a9605_Equal(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48d54cd_Type> _36118_other);
inline jule::Ptr<_1a48a2753_Data> _1a47a9b22__Decl(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48a447a_eval>* _36527_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47aa01d__Type(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48a447a_eval>* _37727_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47aa419__Recv(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48a447a_eval>* _38527_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47aa75a_subIdent(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1a47ab00d_Str(_1a47aac66_comptimeParams* _self_);
inline jule::Bool _1a47ab34e_Equal(jule::Ptr<_1a47aac66_comptimeParams> _self_, jule::Ptr<_1a48d54cd_Type> _43418_other);
inline void _1a47ab7d3_ready(_1a47aac66_comptimeParams* _self_, jule::Ptr<_1a4852e51_Var>* _43826_keyA, jule::Ptr<_1a4852e51_Var>* _43843_keyB);
inline void _1a47abb46_index(_1a47aac66_comptimeParams* _self_, jule::Ptr<_1a48a2753_Data>* _45926_d, jule::I32 _45936_i);
inline void _1a47ac064_step(_1a47aac66_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1a4852e51_Var>* _47033_keyA, jule::Ptr<_1a4852e51_Var>* _47050_keyB);
inline jule::I32 _1a47ac2ea_len(_1a47aac66_comptimeParams* _self_);
inline jule::Str _1a47ac97c_Str(_1a47ac5c5_comptimeTypeInfos* _self_);
inline jule::Bool _1a47accbd_Equal(jule::Ptr<_1a47ac5c5_comptimeTypeInfos> _self_, jule::Ptr<_1a48d54cd_Type> _49418_other);
inline void _1a47ad252_ready(_1a47ac5c5_comptimeTypeInfos* _self_, jule::Ptr<_1a4852e51_Var>* _49826_keyA, jule::Ptr<_1a4852e51_Var>* _49843_keyB);
inline void _1a47ad5b5_index(_1a47ac5c5_comptimeTypeInfos* _self_, jule::Ptr<_1a48a2753_Data>* _51926_d, jule::I32 _51936_i);
inline void _1a47ad9d3_step(_1a47ac5c5_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1a4852e51_Var>* _52833_keyA, jule::Ptr<_1a4852e51_Var>* _52850_keyB);
inline jule::I32 _1a47adc69_len(_1a47ac5c5_comptimeTypeInfos* _self_);
inline jule::Str _1a47ae3eb_Str(_1a47ae044_comptimeTypeInfo* _self_);
inline jule::Bool _1a47ae73c_Equal(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48d54cd_Type> _55218_other);
inline jule::Ptr<_1a48a2753_Data> _1a47aed7a__Decl(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _55627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b0276__Str(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _59322_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b0672__Kind(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _60627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b0a6d__Bits(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _68627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b0e69__Elem(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _71027_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b1365__Size(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _74327_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b1761__Key(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _76226_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b1b5c__Value(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _77528_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b2058__Fields(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _78829_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b2454__Statics(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _81730_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b2850__Binded(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _83629_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b2c4b__Ordered(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _84926_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b3147__Comparable(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _86229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b3543__Mutable(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _87526_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b393e__Types(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _88828_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b3d3a__CanNil(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _91129_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b4236__GC(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _92425_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b4632__Result(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _93729_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b4a2d__Params(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _95329_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b4d6e_subIdent(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1a47b5501_Str(_1a47b5149_comptimeValue* _self_);
inline jule::Bool _1a47b5842_Equal(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48d54cd_Type> _111818_other);
inline jule::Ptr<_1a48a2753_Data> _1a47b5da3__Unwrap(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _112229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b629e__Type(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _113027_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b669a__Lvalue(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _113829_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b6a96__Mutable(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _115130_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b6e92__Const(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _116428_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b738d__Field(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _117728_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b7789__Method(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _121229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47b7aca_subIdent(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1a47b825c_Str(_1a47b7da5_comptimeFiles* _self_);
inline jule::Bool _1a47b859d_Equal(jule::Ptr<_1a47b7da5_comptimeFiles> _self_, jule::Ptr<_1a48d54cd_Type> _132218_other);
inline void _1a47b8a32_ready(_1a47b7da5_comptimeFiles* _self_, jule::Ptr<_1a4852e51_Var>* _132626_keyA, jule::Ptr<_1a4852e51_Var>* _132643_keyB);
inline void _1a47b8d95_index(_1a47b7da5_comptimeFiles* _self_, jule::Ptr<_1a48a2753_Data>* _134726_d, jule::I32 _134736_i);
inline void _1a47b92b3_step(_1a47b7da5_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_1a4852e51_Var>* _135833_keyA, jule::Ptr<_1a4852e51_Var>* _135850_keyB);
inline jule::I32 _1a47b9549_len(_1a47b7da5_comptimeFiles* _self_);
inline jule::Str _1a47b9bcb_Str(_1a47b9824_comptimeFile* _self_);
inline jule::Bool _1a47ba01c_Equal(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48d54cd_Type> _138218_other);
inline jule::Ptr<_1a48a2753_Data> _1a47ba539__Path(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48a447a_eval>* _138627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47ba935__Name(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48a447a_eval>* _139927_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47bad31__Dir(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48a447a_eval>* _141226_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47bb172_subIdent(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1a47bba35_Str(_1a47bb44c_comptimeDecls* _self_);
inline jule::Bool _1a47bbd76_Equal(jule::Ptr<_1a47bb44c_comptimeDecls> _self_, jule::Ptr<_1a48d54cd_Type> _146118_other);
inline void _1a47bc1ea_ready(_1a47bb44c_comptimeDecls* _self_, jule::Ptr<_1a4852e51_Var>* _146526_keyA, jule::Ptr<_1a4852e51_Var>* _146543_keyB);
inline void _1a47bc55d_index(_1a47bb44c_comptimeDecls* _self_, jule::Ptr<_1a48a2753_Data>* _148626_d, jule::I32 _148636_i);
inline void _1a47bc97b_step(_1a47bb44c_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_1a4852e51_Var>* _149533_keyA, jule::Ptr<_1a4852e51_Var>* _149550_keyB);
inline jule::I32 _1a47bcc12_len(_1a47bb44c_comptimeDecls* _self_);
inline jule::Str _1a47bdae2_Str(_1a47bd73a_comptimeDecl* _self_);
inline jule::Bool _1a47bde33_Equal(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48d54cd_Type> _153418_other);
inline jule::Str _1a47be384_declAsStr(_1a47bd73a_comptimeDecl* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a47be780__Name(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _156527_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47beb7b__Public(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _160329_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c0077__Binded(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _164129_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c0473__Exceptional(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _167534_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c086e__Mutable(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _169630_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c0c6a__Variadic(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _172931_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c1166__Reference(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _176032_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c1562__Params(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _179229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c195d__Fields(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _182729_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c1d59__Statics(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _186830_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c2255__Methods(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _190430_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1a48a2753_Data> _1a47c2596_subIdent(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*> _1a47c5555_readyFn(jule::Ptr<_1a47c5126_constraintChecker> _self_);
inline jule::Bool _1a47c57db_readyFi(jule::Ptr<_1a47c5126_constraintChecker> _self_);
inline jule::Bool _1a47c5a72_readySi(jule::Ptr<_1a47c5126_constraintChecker> _self_);
inline jule::Bool _1a47c5d08_ready(jule::Ptr<_1a47c5126_constraintChecker> _self_);
inline jule::Bool _1a47c608e_check(jule::Ptr<_1a47c5126_constraintChecker> _self_);
inline jule::Bool _1a47c7821_IsTraitImpl(_1a47c7425_Impl* _self_);
inline jule::Bool _1a47c7aa7_IsStructImpl(_1a47c7425_Impl* _self_);
inline jule::Bool _1a47cd2b6_IsWhileNext(_1a47cce20_WhileIter* _self_);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a47d429a_SelectPackage(_1a47d3cc2_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _34829_selector);
inline jule::Ptr<_1a4852e51_Var> _1a47d4696_FindVar(_1a47d3cc2_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a47d4a92_FindTypeAlias(_1a47d3cc2_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded);
inline jule::Ptr<_1a4673ec5_Struct> _1a47d4e8d_FindStruct(_1a47d3cc2_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded);
inline jule::Ptr<_1a471dc62_Fn> _1a47d5389_FindFn(_1a47d3cc2_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded);
inline jule::Ptr<_1a4729476_Trait> _1a47d56ca_FindTrait(_1a47d3cc2_scopeChecker* _self_, jule::Str _41925_ident);
inline jule::Ptr<_1a472bb2c_Enum> _1a47d5a1b_FindEnum(_1a47d3cc2_scopeChecker* _self_, jule::Str _42824_ident);
inline jule::Ptr<_1a472d337_TypeEnum> _1a47d5d5c_FindTypeEnum(_1a47d3cc2_scopeChecker* _self_, jule::Str _43728_ident);
inline jule::Bool _1a47d61ae_isUnsafe(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline jule::Bool _1a47d6445_isRoot(_1a47d3cc2_scopeChecker* _self_);
inline void _1a47d6643_stop(_1a47d3cc2_scopeChecker* _self_);
inline jule::Bool _1a47d68c9_stopped(_1a47d3cc2_scopeChecker* _self_);
inline jule::Bool _1a47d6b60_isDeferred(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline void _1a47d6e18_pushCaptured(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4852e51_Var>* _49934_v);
inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47d719e_getRoot(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47d7435_getHardRoot(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline jule::Ptr<_1a47ea3d2_ReferenceStack> _1a47d76bb_getOwnerRefers(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline jule::Ptr<_1a4852e51_Var> _1a47d7a0c_findVar(_1a47d3cc2_scopeChecker* _self_, jule::Str _54623_ident);
inline jule::Ptr<_1a47ce581_Label> _1a47d7d4d_findLabel(_1a47d3cc2_scopeChecker* _self_, jule::Str* _56726_ident);
inline jule::Ptr<_1a47d2cd2_scopeLabel> _1a47d818e_findLabelScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Str* _58332_ident);
inline jule::Ptr<_1a47d2cd2_scopeLabel> _1a47d84d0_findLabelAll(_1a47d3cc2_scopeChecker* _self_, jule::Str* _59429_ident);
inline jule::Bool _1a47d88cb_isDuplicatedIdent(_1a47d3cc2_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident);
inline void _1a47d8b84_checkVarDecl(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a46665b1_VarDecl> _62633_decl);
inline void _1a47d8e3c_checkTypeAlias(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _65736_ta);
inline void _1a47d91e5_checkTypeAliasDecl(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466a263_TypeAliasDecl> _67339_decl);
inline jule::Ptr<_1a47cba34_Scope> _1a47d947b_getChild(_1a47d3cc2_scopeChecker* _self_);
inline void _1a47d9899_checkChildSsc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _68435_tree, jule::Ptr<_1a47cba34_Scope>* _68463_s, jule::Ptr<_1a47d3cc2_scopeChecker>* _68479_ssc);
inline jule::Ptr<_1a47cba34_Scope> _1a47d9c95_checkChildSc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _69134_tree, jule::Ptr<_1a47d3cc2_scopeChecker>* _69162_ssc);
inline jule::Ptr<_1a47cba34_Scope> _1a47da0d6_checkChild(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _69732_tree);
inline void _1a47da38e_checkAnonScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree> _70235_tree);
inline void _1a47da702_processErrorCall(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1a463d137_Token> _70769_err);
inline void _1a47da9aa_checkExpr(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a465799d_Expr> _72030_expr);
inline jule::Ptr<_1a47cbe52_If> _1a47daceb_checkIf(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4669196_If> _75028_i);
inline jule::Ptr<_1a47cc24e_Else> _1a47db13c_checkElse(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4669570_Else> _77030_e);
inline void _1a47db3e5_checkConditional(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4669a26_Conditional> _77637_conditional);
inline void _1a47db8bd_checkIterScopeSsc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1a4663767_ScopeTree> _79251_tree, jule::Ptr<_1a47cba34_Scope>* _79279_s, jule::Ptr<_1a47d3cc2_scopeChecker> _79294_ssc);
inline jule::Ptr<_1a47cba34_Scope> _1a47dbd74_checkIterScopeSc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1a4663767_ScopeTree> _79750_tree, jule::Ptr<_1a47d3cc2_scopeChecker> _79777_ssc);
inline jule::Ptr<_1a47cba34_Scope> _1a47dc270_checkIterScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1a4663767_ScopeTree>* _80349_tree);
inline void _1a47dc528_checkInfIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _80834_it);
inline void _1a47dc7d1_checkWhileIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _81436_it);
inline void _1a47dcbee_checkComptimeRangeIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _86444_it, jule::Ptr<_1a47cd86b_RangeIter>* _86465_kind, jule::Ptr<_1a48a2753_Data>* _86488_d);
inline void _1a47dcea7_checkRangeIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _92136_it);
inline void _1a47dd260_checkIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter> _98130_it);
inline jule::Bool _1a47dd5a1_checkValidContLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _100536_it);
inline jule::Bool _1a47dd8e2_checkValidBreakLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _102137_ptr);
inline jule::Ptr<_1a47cdc01_ContSt> _1a47ddc33_checkContValidScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668be0_ContSt> _104436_c);
inline void _1a47ddedb_checkCont(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668be0_ContSt> _106826_c);
inline void _1a47de294_checkLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4660c4d_LabelSt> _111531_l);
inline void _1a47de54c_pushGoto(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4661127_GotoSt> _113429_gt);
inline void _1a47de805_checkPostfix(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt> _114533_a);
inline jule::Bool _1a47deb46_isNewAssignIdent(_1a47d3cc2_scopeChecker* _self_, jule::Str _117832_ident);
inline void _1a47dedee_removeInteriorMutRisk(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a48a2753_Data>* _119143_d);
inline jule::Bool _1a47e03a5_checkStructureAssignOp(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4676d30_StructIns>* _120544_s, jule::Ptr<_1a4662117_AssignSt>* _120564_a, jule::Ptr<_1a48a2753_Data>* _120588_r);
inline void _1a47e065d_checkSingleAssign(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt>* _124439_a);
inline void _1a47e0c9b_processEndPartOfMultiAssign(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _132649_st, jule::Ptr<_1a4662117_AssignSt>* _132672_a, jule::Ptr<_1a4661a84_AssignLeft>* _13278_lexpr, jule::Ptr<_1a48a2753_Data>* _132738_l, jule::Ptr<_1a48a2753_Data>* _132753_r, jule::Bool _132763_strict);
inline void _1a47e1054_checkMultiAssign(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt>* _140238_a);
inline void _1a47e130c_checkAssignSt(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt> _146934_a);
inline jule::Ptr<_1a47cba34_Scope> _1a47e1708_checkCaseScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1c8c_Case>* _148032_c, jule::Ptr<_1a4663767_ScopeTree>* _148047_tree);
inline jule::Ptr<_1a47d1c8c_Case> _1a47e1c69_checkCase(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1264_Match> _148630_m, jule::I32 _148641_i, jule::Ptr<_1a466a719_Case> _148653_c, jule::Ptr<_1a48a2753_Data> _148672_expr);
inline void _1a47e2187_checkCases(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase>* _156332_m, jule::Ptr<_1a47d1264_Match> _156356_rm, jule::Ptr<_1a48a2753_Data> _156372_expr);
inline jule::Ptr<_1a47d1c8c_Case> _1a47e2583_checkDefault(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1264_Match> _158433_m, jule::Ptr<_1a4669570_Else> _158448_d);
inline void _1a47e28e6_checkComptimePanic(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a463d137_Token> _159239_callToken, jule::Ptr<_1a47cba34_Scope>* _159266_s);
inline void _1a47e2c59_processConstMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1264_Match>* _162439_tm, jule::Ptr<_1a466b033_MatchCase>* _162456_m);
inline void _1a47e3012_checkTypeMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase>* _165336_m);
inline void _1a47e32ba_checkCommonMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase>* _169638_m);
inline void _1a47e3573_checkMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase> _174731_m);
inline void _1a47e382b_checkFall(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4661424_FallSt> _175526_f);
inline jule::Ptr<_1a47ce0ca_BreakSt> _1a47e3b6c_checkBreakWithLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668816_BreakSt> _177836_b);
inline jule::Ptr<_1a47ce0ca_BreakSt> _1a47e3ead_checkPlainBreak(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668816_BreakSt> _183632_b);
inline void _1a47e4266_checkBreak(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668816_BreakSt> _185827_b);
inline void _1a47e451e_checkRet(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466698a_RetSt> _186929_r);
inline void _1a47e47c7_checkUseExpr(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4658372_UseExpr> _189429_ue);
inline void _1a47e4a80_checkNode(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Any* _191031_node);
inline void _1a47e4c7d_checkResult(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline void _1a47e4e7b_checkTree(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline void _1a47e52de_checkGoto(_1a47d3cc2_scopeChecker* _self_, jule::Ptr<_1a47cebe1_GotoSt>* _201230_gt, jule::Ptr<_1a47d2cd2_scopeLabel>* _201248_label);
inline void _1a47e54dc_checkGotos(_1a47d3cc2_scopeChecker* _self_);
inline void _1a47e56da_checkLabels(_1a47d3cc2_scopeChecker* _self_);
inline void _1a47e58d8_checkVars(_1a47d3cc2_scopeChecker* _self_);
inline void _1a47e5ad6_checkAliases(_1a47d3cc2_scopeChecker* _self_);
inline void _1a47e5e49_check(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _210727_tree, jule::Ptr<_1a47cba34_Scope>* _210755_s);
inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47e61d0_newChildChecker(jule::Ptr<_1a47d3cc2_scopeChecker> _self_);
inline void _1a47e80a0_checkCdef(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _1626_d);
inline void _1a47e8358_checkTypedef(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _3229_d);
inline void _1a47e8611_checkNamespace(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _4835_d);
inline void _1a47e88b9_checkDeprecated(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _10036_d);
inline void _1a47e8b72_checkTest(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _14126_d);
inline void _1a47e8e2a_checkExport(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _16232_d);
inline void _1a47e91d3_checkDirective(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _20035_d);
inline void _1a47e93d1_check(_1a47e7b4e_directiveChecker* _self_);
inline jule::Ptr<_1a47ea3d2_ReferenceStack> static__1a47ea6bd_new(void);
inline jule::I32 _1a47eaab9_Len(_1a47ea3d2_ReferenceStack* _self_);
inline jule::Any _1a47eae0a_At(_1a47ea3d2_ReferenceStack* _self_, jule::I32 _4218_i);
inline void _1a47eb1b3_Push(_1a47ea3d2_ReferenceStack* _self_, jule::Any _4724_ref);
inline jule::Bool _1a7986d40_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4721d20_FnIns> _5220_t);
inline jule::Bool _1a799d61a_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4852e51_Var> _5220_t);
inline jule::Bool _1a8a32060_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4676d30_StructIns> _5220_t);
inline jule::Bool _1a9135c18_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4729476_Trait> _5220_t);
inline void _1a4801d67_pushErr(_1a4801361_symBuilder* _self_, jule::Ptr<_1a463d137_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args);
inline void _1a48025e8_pushSuggestion(_1a4801361_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args);
inline jule::Bool _1a48029e4_checkCppUseDeclPath(_1a4801361_symBuilder* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _31936_decl, jule::Str* _31958_path);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4802d02_buildCppHeaderImport(_1a4801361_symBuilder* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _33941_decl);
inline jule::Str _1a48031ed_checkAbsPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1a466b5b6_UseDecl>* _36953_decl);
inline jule::Str _1a48035e9_checkStdAbsPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1a466b5b6_UseDecl>* _39856_decl);
inline __jule_tuple_bool__jule_tuple_str _1a480393a_checkImpPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _42134_decl);
inline void _1a4803be3_assignAlias(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _45133_imp);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4804034_buildImport(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _45833_decl);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4804375_findUseDecl(_1a4801361_symBuilder* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _48528_pkg);
inline jule::Bool _1a48046b6_checkDuplicateUseDecl(_1a4801361_symBuilder* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _49342_pkg);
inline jule::Str _1a4804a07_getAsLinkPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Str _50334_path);
inline void _1a4804e25_pushCycleError(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a4801361_symBuilder>* _52432_sb, jule::Str _52449_path, _1e71a80b0_Builder* _52465_message);
inline void _1a4805343_pushCrossCycleError(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a4801361_symBuilder>* _53737_target, jule::Ptr<_1a480c3d3_ImportInfo>* _53759_imp, jule::Ptr<_1a463d137_Token>* _53778_errorToken);
inline jule::Bool _1a480573e_checkImportCycles(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a480c3d3_ImportInfo> _56034_imp, jule::Ptr<_1a466b5b6_UseDecl>* _56053_decl);
inline void _1a4805b5c_checkPackageAccessibility(_1a4801361_symBuilder* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path);
inline jule::Bool _1a4806058_importPackage(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _62135_imp, jule::Ptr<_1a466b5b6_UseDecl>* _62158_decl);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4806399_importUseDecl(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _66735_decl);
inline void _1a4806597_importUseDecls(jule::Ptr<_1a4801361_symBuilder> _self_);
inline void _1a4806850_appendNode(_1a4801361_symBuilder* _self_, _1a4652668_Node* _69631_node);
inline void _1a4806a4d_appendNodes(_1a4801361_symBuilder* _self_);
inline void _1a4806d06_pushDirectivePass(_1a4801361_symBuilder* _self_, jule::Ptr<_1a4652a86_Directive>* _73238_d);
inline void _1a4807004_appendTopDirectives(_1a4801361_symBuilder* _self_);
inline void _1a4807202_build(jule::Ptr<_1a4801361_symBuilder> _self_);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a480c900_SelectPackage(_1a480c3d3_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> );
inline jule::Ptr<_1a4852e51_Var> _1a480cceb_FindVar(_1a480c3d3_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1a48d46db_TypeAlias> _1a480d1e7_FindTypeAlias(_1a480c3d3_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a4673ec5_Struct> _1a480d5e3_FindStruct(_1a480c3d3_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1a471dc62_Fn> _1a480d9de_FindFn(_1a480c3d3_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1a4729476_Trait> _1a480dd30_FindTrait(_1a480c3d3_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1a472bb2c_Enum> _1a480e171_FindEnum(_1a480c3d3_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1a472d337_TypeEnum> _1a480e4b2_FindTypeEnum(_1a480c3d3_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1a480e87a_isLookupable(_1a480c3d3_ImportInfo* _self_);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a481012d_SelectPackage(_1a480eb55_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> );
inline jule::Ptr<_1a4852e51_Var> _1a4810529_FindVar(_1a480eb55_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a4810925_FindTypeAlias(_1a480eb55_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1a4673ec5_Struct> _1a4810d21_FindStruct(_1a480eb55_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1a471dc62_Fn> _1a481121c_FindFn(_1a480eb55_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1a4729476_Trait> _1a481155d_FindTrait(_1a480eb55_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a472bb2c_Enum> _1a481189e_FindEnum(_1a480eb55_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1a472d337_TypeEnum> _1a4811be0_FindTypeEnum(_1a480eb55_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1a47ae044_comptimeTypeInfo> _1a4828c4b_pushComptimeTypeInfo(_1a48287a6_commonSemaMeta* _self_, jule::Ptr<_1a48d54cd_Type>* _21241_t);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a48298a6_SelectPackage(_1a48293cd_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _24129_selector);
inline jule::Ptr<_1a4852e51_Var> _1a4829ca2_FindVar(_1a48293cd_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a482a19d_FindTypeAlias(_1a48293cd_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded);
inline jule::Ptr<_1a4673ec5_Struct> _1a482a599_FindStruct(_1a48293cd_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded);
inline jule::Ptr<_1a471dc62_Fn> _1a482a995_FindFn(_1a48293cd_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded);
inline jule::Ptr<_1a4729476_Trait> _1a482acd6_FindTrait(_1a48293cd_sema* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a472bb2c_Enum> _1a482b127_FindEnum(_1a48293cd_sema* _self_, jule::Str _32624_ident);
inline jule::Ptr<_1a472d337_TypeEnum> _1a482b468_FindTypeEnum(_1a48293cd_sema* _self_, jule::Str _34128_ident);
inline jule::Bool _1a482b875_isFlag(_1a48293cd_sema* _self_, jule::I32 _35318_flags);
inline jule::Ptr<_1a4725065_SymTab> _1a482bb0b_getCurrentFile(_1a48293cd_sema* _self_);
inline void _1a482bdb4_setCurrentFile(_1a48293cd_sema* _self_, jule::Ptr<_1a4725065_SymTab> _35634_f);
inline void _1a482c2d2_pushErr(_1a48293cd_sema* _self_, jule::Ptr<_1a463d137_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args);
inline void _1a482c645_pushSuggestion(_1a48293cd_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args);
inline jule::Bool _1a482ca41_isAccessibleDefine(_1a48293cd_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1a463d137_Token> _36944_token);
inline jule::Bool _1a482cee7_isDuplicatedIdent(_1a48293cd_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded);
inline void _1a482d35a_checkDirectives(jule::Ptr<_1a48293cd_sema> _self_, jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _40137_d, jule::Any _40163_o);
inline jule::Bool _1a482d811_checkGenericQuantity(_1a48293cd_sema* _self_, jule::I32 _41036_required, jule::I32 _41051_given, jule::Ptr<_1a463d137_Token> _41063_token);
inline jule::Bool _1a482e845_isUseAliasDuplication(_1a48293cd_sema* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _46838_imp);
inline jule::Bool _1a482eb86_checkAutoAlias(_1a48293cd_sema* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _48035_imp);
inline jule::Bool _1a482eec7_checkImport(_1a48293cd_sema* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _49832_imp);
inline void _1a48301c5_checkImports(_1a48293cd_sema* _self_);
inline void _1a48303c3_implFileImpls(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a48305c1_implImpls(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a48307be_checkEnums(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a48309bc_checkFileInherits(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a4830bba_checkInherits(jule::Ptr<_1a48293cd_sema> _self_);
inline _1a48e78ca_typeChecker _1a4831171_typeChecker(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _59147_generics, jule::Ptr<_1a48e68da_referencer> _5927_referencer);
inline jule::Ptr<_1a48d54cd_Type> _1a483660a_buildTypeWithRefers(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _6197_generics, jule::Ptr<_1a48e68da_referencer> _61935_referencer);
inline jule::Bool _1a4836aa0_checkTypeSymWithRefers(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dcbde_TypeSym>* _62544_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _6267_generics, jule::Ptr<_1a48e68da_referencer> _62635_referencer);
inline jule::Ptr<_1a47c5126_constraintChecker> _1a4836d36_constraintChecker(jule::Ptr<_1a48293cd_sema> _self_);
inline jule::Bool _1a4837232_checkTypeSym(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dcbde_TypeSym>* _64034_t, jule::Trait _64051_l);
inline jule::Ptr<_1a48d54cd_Type> _1a48376d8_checkTypeSymRefers(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _64540_t, jule::Trait _64563_l, jule::Ptr<_1a47ea3d2_ReferenceStack> _64578_refers);
inline jule::Ptr<_1a48d54cd_Type> _1a4837b8e_buildTypeWithGenerics(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _6587_generics, jule::Ptr<_1a47ea3d2_ReferenceStack> _65835_refers);
inline jule::Ptr<_1a48d54cd_Type> _1a4838321_selectType(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _67532_t);
inline jule::Ptr<_1a48a447a_eval> _1a48387c7_evalpd(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1a48d54cd_Type> _68742_p, jule::Ptr<_1a4852e51_Var> _68756_owner);
inline jule::Ptr<_1a48a447a_eval> _1a4838bc3_evalp(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1a48d54cd_Type> _70241_p);
inline jule::Ptr<_1a48a447a_eval> _1a4839014_eval(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _70725_l);
inline jule::Bool _1a4839630_checkAssignType(jule::Ptr<_1a48293cd_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1a48d54cd_Type>* _71154_dest, jule::Ptr<_1a48a2753_Data>* _7128_d, jule::Ptr<_1a463d137_Token> _71222_errorToken, jule::Ptr<_1a47ea3d2_ReferenceStack> _71253_refers);
inline jule::Bool _1a4839ad6__checkTypeCompatibility(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d54cd_Type>* _75445_dest, jule::Ptr<_1a48d54cd_Type>* _75463_src, jule::Ptr<_1a463d137_Token> _7557_errorToken);
inline jule::Bool _1a483a08c_checkTypeCompatibility(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d54cd_Type>* _77244_dest, jule::Ptr<_1a48d54cd_Type>* _7738_src, jule::Ptr<_1a463d137_Token>* _77325_errorToken);
inline void _1a483a4aa_pushCompatiblityError(_1a48293cd_sema* _self_, jule::Ptr<_1a48d54cd_Type>* _78142_dest, jule::Ptr<_1a48a2753_Data>* _78160_src, jule::Ptr<_1a463d137_Token>* _7828_errorToken);
inline jule::Bool _1a483a961_checkTypeCompatibility1(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d54cd_Type>* _79945_dest, jule::Ptr<_1a48a2753_Data>* _79963_src, jule::Ptr<_1a463d137_Token>* _8008_errorToken);
inline jule::Ptr<_1a48d54cd_Type> _1a483ae17_buildNonGenericType(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _81441_ast, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1a48d54cd_Type>>* _81544_ignored);
inline jule::Bool _1a483b313_buildFnNonGenericTypes(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns> _82643_f, jule::Slice<jule::Ptr<_1a48d54cd_Type>>* _82659_ignored);
inline jule::Ptr<_1a4721d20_FnIns> _1a483b654_getTraitCheckFnKind(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _84941_f);
inline jule::Bool _1a483bb0a_checkConstraintsFn(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _87840_f, jule::Ptr<_1a463d137_Token>* _87856_et, jule::Ptr<_1a4721d20_FnIns> _87879_exist);
inline jule::Bool _1a483c0b1_checkConstraintsStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _89244_s, jule::Ptr<_1a463d137_Token>* _89264_et, jule::Ptr<_1a4676d30_StructIns> _89287_exist);
inline jule::Bool _1a483c4ac_basicFnEnvironment(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*> _90951_algo);
inline jule::Bool _1a483c8a8_fnEnvironment(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*> _92946_algo);
inline void _1a483cb61_checkFnParamKind(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4720bba_ParamIns>* _94138_p);
inline jule::Bool _1a483cea2_reloadFnInsTypes(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns> _94837_f);
inline jule::Bool _1a483d458_checkRefValidityForInitExpr(jule::Ptr<_1a48293cd_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1a48a2753_Data>* _98864_d, jule::Ptr<_1a463d137_Token>* _98879_errorToken);
inline jule::Bool _1a483d799_isMutRiskyStruct(_1a48293cd_sema* _self_, jule::Ptr<_1a4676d30_StructIns>* _100529_s);
inline jule::Bool _1a483ddb5_checkValidityForInitExpr(jule::Ptr<_1a48293cd_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1a48d54cd_Type>* _10334_leftKind, jule::Ptr<_1a48a2753_Data>* _103326_d, jule::Ptr<_1a463d137_Token>* _103341_errorToken);
inline jule::Bool _1a483e2b1_checkTypeAliasDeclKind(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _106044_ta, jule::Trait _106064_l);
inline void _1a483e624_checkTypeAliasDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _108340_ta, jule::Trait _108360_l);
inline void _1a483e8cc_checkTypeAliasDeclDup(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _109143_ta);
inline jule::Bool _1a483eb63_checkTypeAliasDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a82d7a14_checkEnumItemsDup(_1a48293cd_sema* _self_, jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _111536_items);
inline void _1a82e5a55_checkEnumItemsDup(_1a48293cd_sema* _self_, jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> _111536_items);
inline void _1a48401c4_checkEnumItemsStr(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472bb2c_Enum>* _113539_e);
inline void _1a82b69c1_checkEnumItemInt(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48a447a_eval>* _116243_eval, jule::Ptr<_1a472bb2c_Enum>* _116261_e, jule::Ptr<_1a48dd5e6_Prim>* _116272_prim, jule::Ptr<_1a472b0c1_EnumItem>* _116290_item, jule::U64* _1162112_n);
inline void _1a82c754d_checkEnumItemInt(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48a447a_eval>* _116243_eval, jule::Ptr<_1a472bb2c_Enum>* _116261_e, jule::Ptr<_1a48dd5e6_Prim>* _116272_prim, jule::Ptr<_1a472b0c1_EnumItem>* _116290_item, jule::I64* _1162112_n);
inline void _1a82b2b32_checkEnumItemsInt1(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dd5e6_Prim>* _119841_prim, jule::Ptr<_1a472bb2c_Enum>* _119859_e);
inline void _1a82b2e1d_checkEnumItemsInt1(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dd5e6_Prim>* _119841_prim, jule::Ptr<_1a472bb2c_Enum>* _119859_e);
inline void _1a4840d73_checkEnumItemsInt(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472bb2c_Enum>* _123339_e);
inline void _1a484112b_checkEnumDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472bb2c_Enum>* _124335_e);
inline void _1a48413d4_checkTypeEnumDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472d337_TypeEnum>* _128439_e);
inline jule::Bool _1a484166a_checkEnumDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline jule::Bool _1a4841901_checkTypeEnumDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline jule::Bool _1a4841c42_checkDeclGenerics(_1a48293cd_sema* _self_, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _134734_generics);
inline jule::Bool _1a4842083_checkFnDeclParamsDup(_1a48293cd_sema* _self_, jule::Ptr<_1a471dc62_Fn>* _137437_f);
inline jule::Bool _1a48423c4_checkFnDeclResultDup(_1a48293cd_sema* _self_, jule::Ptr<_1a471dc62_Fn>* _141137_f);
inline jule::Bool _1a4842715_checkFnVariadicParam(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _145642_f);
inline void _1a48429bd_checkFnDeclPrototype(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _146942_f);
inline jule::Bool _1a4842e74_catchTraitInheritCycle(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait> _149139_t1, jule::Ptr<_1a4729476_Trait> _149155_t2, _1e71a80b0_Builder* _149172_message);
inline jule::Bool _1a48432b5__checkTraitDeclInherits(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _151045_t);
inline void _1a484356d_checkTraitDeclInherits(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _155144_t);
inline void _1a4843826_checkTraitDeclMethod(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _157642_f);
inline void _1a4843ace_checkTraitDeclMethods(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _159043_t);
inline void _1a4843d87_checkTraitDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _162636_t);
inline jule::Bool _1a484411d_checkTraitDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline jule::Bool _1a4844519_checkTraitImplMethods(_1a48293cd_sema* _self_, jule::Ptr<_1a4729476_Trait>* _165042_base, jule::Ptr<_1a47c7425_Impl>* _165057_ipl);
inline jule::Bool _1a4844915_implToStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _166134_dest, jule::Ptr<_1a47c7425_Impl>* _166154_ipl);
inline void _1a4844bbd_implTrait(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a47c7425_Impl>* _170331_decl);
inline void _1a4844e76_implStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a47c7425_Impl>* _174632_decl);
inline void _1a484522e_implImpl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a47c7425_Impl>* _177030_decl);
inline void _1a4845592_checkVarDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _178134_decl, jule::Trait _178150_l);
inline void _1a484584a_checkGlobalVarDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _182740_decl);
inline jule::Bool _1a4845ad1_checkGlobalDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline jule::Bool _1a4845ecc_checkStructTraitImpl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _185542_strct, jule::Ptr<_1a4729476_Trait>* _185563_trt);
inline jule::Bool _1a484631d_checkStructImpls(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _188138_s);
inline jule::Bool _1a484665e_checkStructFields(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _188939_st);
inline void _1a4846917_checkStructDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _190637_s);
inline jule::Bool _1a4846b9d_checkStructDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a4846e56_checkAnonFuncDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _193639_f);
inline void _1a484720e_checkFuncDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _194135_f);
inline jule::Bool _1a4847550_checkFuncDeclsBy(jule::Ptr<_1a48293cd_sema> _self_, jule::Slice<jule::Ptr<_1a471dc62_Fn>>* _196338_funcs);
inline jule::Bool _1a48477d6_checkFuncDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a4847c04_pushCycleError(_1a48293cd_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _1e71a80b0_Builder* _197953_message);
inline void _1a48483a8_checkPackageDecls(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484871b_checkDataForTypeInference(_1a48293cd_sema* _self_, jule::Ptr<_1a48a2753_Data>* _203942_d, jule::Ptr<_1a463d137_Token>* _203953_errToken);
inline void _1a48489c4_checkVarValue(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _205135_v);
inline void _1a4848d37_evalVarValue(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _210434_decl, jule::Trait _210450_l);
inline void _1a484919a_checkVar(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _212130_decl, jule::Trait _212146_l);
inline void _1a4849398_checkGlobals(jule::Ptr<_1a48293cd_sema> _self_);
inline jule::Ptr<_1a4721d20_FnIns> _1a4849794_readyToCheckFn(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _214436_s, jule::Ptr<_1a471dc62_Fn>* _214456_f);
inline __jule_tuple_bool__jule_tuple_bool _1a4849b90_checkGenericFn(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _216036_f, jule::Ptr<_1a463d137_Token>* _216052_et);
inline void _1a484a003_checkTypeMethod(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _218337_s, jule::Ptr<_1a471dc62_Fn>* _218357_f);
inline jule::Ptr<_1a4721d20_FnIns> _1a484a4a9_checkStructInsOp(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _219638_s, jule::Ptr<_1a471dc62_Fn>* _219658_f, jule::Fn<jule::Bool,jule::Ptr<_1a471dc62_Fn>> _219666_p);
inline jule::Bool _1a484a8a5_checkStructEnv(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _220636_s, jule::Ptr<_1a463d137_Token> _220655_errorToken);
inline jule::Bool _1a484aca1_precheckStructIns(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _230339_s, jule::Ptr<_1a463d137_Token> _230358_errorToken);
inline void _1a484b059_checkStructIns(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _234036_s);
inline void _1a484b312_checkTypeStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _234637_s);
inline void _1a484b510_checkStructTypes(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484b7b8_checkStructInsOperators(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns> _237044_s);
inline void _1a484ba71_precheckStructType(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _243440_s);
inline void _1a484bc6e_precheckStructTypes(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484c027_checkRets(_1a48293cd_sema* _self_, jule::Ptr<_1a4721d20_FnIns>* _246330_f);
inline void _1a484c38a_checkFnInsSc(_1a48293cd_sema* _self_, jule::Ptr<_1a4721d20_FnIns>* _247433_f, jule::Ptr<_1a47d3cc2_scopeChecker>* _247449_sc);
inline void _1a484c6ed_checkFnInsCaller(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _248738_f, jule::Ptr<_1a463d137_Token> _248753_caller);
inline void _1a484c9a6_checkFnIns(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _250932_f);
inline void _1a484cc5e_checkFunc(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _251331_f);
inline void _1a484d017_checkTestFn(_1a48293cd_sema* _self_, jule::Ptr<_1a4721d20_FnIns>* _252832_f);
inline void _1a484d2c0_precheckFunc(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _256134_f);
inline void _1a484d4bd_precheckFuncs(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484d6bb_checkFuncs(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484d8b9_checkPackageTypes(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484dab7_setFileSemaFields(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484dcb5_setSemaFields(jule::Ptr<_1a48293cd_sema> _self_);
inline void _1a484e06d_check(jule::Ptr<_1a48293cd_sema> _self_, jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _263927_files);
inline _1a484e469_missingRetChecker static__1a484e865_new(void);
inline jule::Bool _1a484eb73_checkConditional(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47cc66c_Conditional> _268732_c);
inline jule::Bool _1a484eeb4_checkMatch(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47d1264_Match> _269926_m);
inline jule::Bool _1a48503b0_checkInfIter(_1a484e469_missingRetChecker* _self_, jule::Uintptr _272524_it, jule::Ptr<_1a47cba34_Scope>* _272542_s);
inline jule::Bool _1a4850701_checkScope(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47cba34_Scope> _274326_s);
inline jule::Bool _1a4850a42_check(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47cba34_Scope> _279821_s);
inline jule::Bool _1a485335d_IsInitialized(_1a4852e51_Var* _self_);
inline jule::Bool _1a48535e4_IsTypeInferred(_1a4852e51_Var* _self_);
inline jule::Bool _1a485387a_untypedConstant(_1a4852e51_Var* _self_);
inline jule::Bool static__1a4854419_Str(jule::Ptr<_1a471dc62_Fn> _1016_f);
inline jule::Bool static__1a485478d_logical(jule::Ptr<_1a471dc62_Fn>* _3221_f, jule::Str _3229_ident);
inline jule::Bool static__1a4854a57_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _5815_f);
inline jule::Bool static__1a4854d21_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _6315_f);
inline jule::Bool static__1a48550da_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _6817_f);
inline jule::Bool static__1a48553a4_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _7315_f);
inline jule::Bool static__1a485566d_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _7817_f);
inline jule::Bool static__1a48559e2_result(jule::Ptr<_1a471dc62_Fn>* _8220_f, jule::Str _8228_ident);
inline jule::Bool static__1a4855cab_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _10416_f);
inline jule::Bool static__1a4856075_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _10916_f);
inline jule::Bool static__1a485633e_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _11416_f);
inline jule::Bool static__1a4856608_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _11916_f);
inline jule::Bool static__1a48568c2_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _12416_f);
inline jule::Bool static__1a4856b8b_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _12916_f);
inline jule::Bool static__1a4856e55_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _13416_f);
inline jule::Bool static__1a485721e_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _13919_f);
inline jule::Bool static__1a48574d8_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _14418_f);
inline jule::Bool static__1a48577a2_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _14919_f);
inline jule::Bool static__1a4857b26_unary(jule::Ptr<_1a471dc62_Fn>* _15319_f, jule::Str _15327_ident);
inline jule::Bool static__1a4857de0_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _17316_f);
inline jule::Bool static__1a48581a9_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _17816_f);
inline jule::Bool static__1a4858473_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _18319_f);
inline jule::Bool static__1a48587e7_assign(jule::Ptr<_1a471dc62_Fn>* _18720_f, jule::Str _18728_ident);
inline jule::Bool static__1a4858ab1_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _20722_f);
inline jule::Bool static__1a4858d7a_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _21222_f);
inline jule::Bool static__1a4859144_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _21722_f);
inline jule::Bool static__1a485940d_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _22222_f);
inline jule::Bool static__1a48596c7_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _22722_f);
inline jule::Bool static__1a4859991_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _23222_f);
inline jule::Bool static__1a4859c5a_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _23722_f);
inline jule::Bool static__1a485a024_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _24224_f);
inline jule::Bool static__1a485a2dd_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _24725_f);
inline jule::Bool static__1a485a5a7_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _25225_f);
inline void _1a488e29a_pushErr(_1a488dc6c_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1a488e531_checkTrait(_1a488dc6c_typeCompatibilityChecker* _self_);
inline jule::Bool _1a488e7b7_checkPtr(_1a488dc6c_typeCompatibilityChecker* _self_);
inline jule::Bool _1a488ea4d_checkPrim(_1a488dc6c_typeCompatibilityChecker* _self_);
inline jule::Bool _1a488ee49_typeEnum(_1a488dc6c_typeCompatibilityChecker* _self_, jule::Ptr<_1a472d337_TypeEnum>* _18725_e, jule::Ptr<_1a48d54cd_Type>* _18744_t2);
inline jule::Bool _1a48901d0_checkTypeEnum(_1a488dc6c_typeCompatibilityChecker* _self_);
inline jule::Bool _1a4890466_check(_1a488dc6c_typeCompatibilityChecker* _self_);
inline void _1a48910b0_pushErr(_1a4890ae8_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1a4891346_checkValidity(_1a4890ae8_assignTypeChecker* _self_);
inline jule::Bool _1a48915cc_checkConst(_1a4890ae8_assignTypeChecker* _self_);
inline jule::Bool _1a4891863_checkCompatibility(_1a4890ae8_assignTypeChecker* _self_);
inline jule::Bool _1a4891ae9_check(_1a4890ae8_assignTypeChecker* _self_);
inline jule::Bool _1a7971269_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k);
inline jule::Bool _1a858ee42_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k);
inline jule::Bool _1a859012e_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k);
inline jule::Bool _1a8596850_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k);
inline jule::Bool _1a4892de7_annotateConstraintMap(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _36642_k);
inline jule::Bool _1a4893238_annotateConstraintTup(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _38142_k);
inline jule::Bool _1a4893579_annotateConstraintFn(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _39841_k);
inline jule::Bool _1a48938ba_annotateConstraintIdent(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _41944_k);
inline jule::Bool _1a4893c0b_annotateConstraint(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _44839_k);
inline void _1a489406e_pushGeneric(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _47332_k, jule::I32 _47342_i);
inline jule::Bool _1a48943b0_annotatePrim(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _48840_k);
inline jule::Bool _1a4894701_annotateArr(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _49239_k);
inline jule::Bool _1a4894a42_annotateSlc(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _50239_k);
inline jule::Bool _1a4894e3d_checkMapKey(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _51238_k, jule::Ptr<_1a48d54cd_Type>* _51254_ck);
inline jule::Bool _1a489527e_annotateMap(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _52039_k);
inline jule::Bool _1a48955c0_annotateFn(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _53038_k);
inline jule::Bool _1a4895911_annotatePtr(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _55939_k);
inline jule::Bool _1a4895c52_annotateSptr(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _56940_k);
inline jule::Bool _1a4896093_annotateStruct(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _57942_k);
inline jule::Bool _1a48963d4_annotateAny(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _60139_k);
inline jule::Bool _1a4896725_annotateKind(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _62240_k);
inline jule::Bool _1a48969ab_annotate(_1a48924bd_dynamicTypeAnnotation* _self_);
inline void _1a48978be_pushErrToken(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a463d137_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1a4897c32_pushErr(_1a489732a_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _1a4897eb8_getParams(_1a489732a_fnCallArgChecker* _self_);
inline jule::Bool _1a4898309_checkCounts(_1a489732a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>* _68428_params);
inline jule::Bool _1a48987b0_checkArg(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a4720bba_ParamIns>* _71629_p, jule::Ptr<_1a48a2753_Data>* _71648_arg, jule::Ptr<_1a463d137_Token>* _71665_errorToken);
inline jule::Bool _1a4898bab_push(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a4720bba_ParamIns>* _74525_p, jule::Ptr<_1a465799d_Expr> _74543_arg);
inline jule::Bool _1a48990a7_pushVariadic(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a4720bba_ParamIns>* _76933_p, jule::I32 _76951_i);
inline jule::Bool _1a48993e8_checkArgs(_1a489732a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>* _85030_params);
inline jule::Bool _1a489967e_checkDynamicTypeAnnotation(_1a489732a_fnCallArgChecker* _self_);
inline jule::Bool _1a4899915_check(_1a489732a_fnCallArgChecker* _self_);
inline void _1a489a7e5_pushErr(_1a489a262_structLitChecker* _self_, jule::Ptr<_1a463d137_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1a489ab58_pushSuggestion(_1a489a262_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1a489b076_pushMatch(_1a489a262_structLitChecker* _self_, jule::Ptr<_1a4676280_FieldIns>* _93930_f, jule::Ptr<_1a48a2753_Data>* _93949_d, jule::Ptr<_1a463d137_Token>* _93964_errorToken);
inline void _1a489b3d9_checkPair(_1a489a262_structLitChecker* _self_, jule::Ptr<_1a465c1bc_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _95862_exprs);
inline jule::Bool _1a489b72a_readyExprs(_1a489a262_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _99731_exprs);
inline void _1a489b9d3_check(_1a489a262_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _102126_exprs);
inline jule::Ptr<_1a4852e51_Var> _1a489c561_buildVar(_1a489c044_rangeChecker* _self_, jule::Ptr<_1a46665b1_VarDecl>* _109725_decl);
inline void _1a489c75e_setSizeKey(_1a489c044_rangeChecker* _self_);
inline void _1a489cb7c_checkRangeExprValidity(_1a489c044_rangeChecker* _self_, jule::Ptr<_1a48a2753_Data>* _111643_d, jule::Ptr<_1a4852e51_Var>* _111654_key, jule::Ptr<_1a48d54cd_Type>* _111670_k);
inline void _1a489cd7a_checkSlice(_1a489c044_rangeChecker* _self_);
inline void _1a489d078_checkArray(_1a489c044_rangeChecker* _self_);
inline void _1a489d276_checkMapKeyA(_1a489c044_rangeChecker* _self_);
inline void _1a489d474_checkMapKeyB(_1a489c044_rangeChecker* _self_);
inline void _1a489d672_checkMap(_1a489c044_rangeChecker* _self_);
inline void _1a489d870_checkStr(_1a489c044_rangeChecker* _self_);
inline void _1a489da6d_checkComptime(_1a489c044_rangeChecker* _self_);
inline jule::Bool _1a489dd04_checkComptimeRange(_1a489c044_rangeChecker* _self_);
inline jule::Bool _1a489e08a_check(_1a489c044_rangeChecker* _self_);
inline void _1a489ec17_prepareTypes(_1a489e7a5_retTypeChecker* _self_);
inline void _1a489eec0_prepareExprs(_1a489e7a5_retTypeChecker* _self_, jule::Ptr<_1a465799d_Expr>* _127533_e);
inline void _1a48a01bd_checkExprs(_1a489e7a5_retTypeChecker* _self_);
inline jule::Bool _1a48a0454_tryFuncMultiRetForward(_1a489e7a5_retTypeChecker* _self_);
inline jule::Bool _1a48a0795_check(_1a489e7a5_retTypeChecker* _self_, jule::Ptr<_1a465799d_Expr>* _137726_e);
inline jule::Bool _1a48a2b71_IsNil(_1a48a2753_Data* _self_);
inline jule::Bool _1a48a2e07_IsVoid(_1a48a2753_Data* _self_);
inline jule::Bool _1a48a318d_IsConst(_1a48a2753_Data* _self_);
inline jule::Bool _1a48a34ce_GoodOperand(_1a48a2753_Data* _self_, jule::Ptr<_1a48a2753_Data>* _6128_other);
inline void _1a48a4a0d_pushErr(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args);
inline void _1a48a4d71_pushSuggestion(_1a48a447a_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args);
inline void _1a48a506e_allowBuiltin(_1a48a447a_eval* _self_);
inline void _1a48a526c_disallowBuiltin(_1a48a447a_eval* _self_);
inline jule::Bool _1a48a5503_isUnsafe(_1a48a447a_eval* _self_);
inline jule::Bool _1a48a5789_isGlobal(_1a48a447a_eval* _self_);
inline jule::Bool _1a48a5a97_applyNumericPrefix(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _12439_d);
inline jule::Ptr<_1a48a2753_Data> _1a48a5dd8_litStr(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _15919_l);
inline jule::Ptr<_1a48a2753_Data> _1a48a6229_litRune(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _17620_l);
inline jule::Ptr<_1a48a2753_Data> _1a48a656a_litFloat(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _19521_l);
inline jule::Ptr<_1a48a2753_Data> _1a48a68ab_litInt(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _20723_l);
inline jule::Ptr<_1a48a2753_Data> _1a48a6bec_litNum(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _26223_l);
inline jule::Ptr<_1a48a2753_Data> _1a48a703d_evalLit(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr> _27123_lit);
inline jule::Any _1a48a737e_findBuiltins(_1a48a447a_eval* _self_, jule::Str* _28429_ident);
inline jule::Any _1a48a777a_getDef(_1a48a447a_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded);
inline jule::Ptr<_1a47ea3d2_ReferenceStack> _1a48a7a11_getOwnerRefers(_1a48a447a_eval* _self_);
inline void _1a7984744_pushReference(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns>* _36937_ref);
inline void _1a799b2a5_pushReference(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _36937_ref);
inline void _1a8a2e8ed_pushReference(_1a48a447a_eval* _self_, jule::Ptr<_1a4676d30_StructIns>* _36937_ref);
inline jule::Ptr<_1a48a2753_Data> _1a48a810a__evalEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472bb2c_Enum> _37625_enm);
inline jule::Ptr<_1a48a2753_Data> _1a48a8506_evalEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472bb2c_Enum> _38528_enm, jule::Ptr<_1a463d137_Token> _38540_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48a8847__evalTypeEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472d337_TypeEnum> _39429_enm);
inline jule::Ptr<_1a48a2753_Data> _1a48a8c43_evalTypeEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472d337_TypeEnum> _40332_enm, jule::Ptr<_1a463d137_Token> _40348_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48a9084__evalStruct(_1a48a447a_eval* _self_, jule::Ptr<_1a4676d30_StructIns> _41227_s);
inline jule::Ptr<_1a48a2753_Data> _1a48a9480_evalStruct(_1a48a447a_eval* _self_, jule::Ptr<_1a4673ec5_Struct> _42630_s, jule::Ptr<_1a463d137_Token> _42646_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48a97c1_evalFnIns(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns> _45525_f);
inline void _1a48a9b34_checkDeprecated(_1a48a447a_eval* _self_, jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _46436_directives, jule::Ptr<_1a463d137_Token> _46467_tok);
inline jule::Ptr<_1a48a2753_Data> _1a48aa030_evalFn(_1a48a447a_eval* _self_, jule::Ptr<_1a471dc62_Fn> _48026_f, jule::Ptr<_1a463d137_Token> _48034_errorToken);
inline void _1a48aa44d_pushIllegalCycleError(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _50538_v1, jule::Ptr<_1a4852e51_Var>* _50549_v2, _1e71a80b0_Builder* _50564_message);
inline jule::Bool _1a48aa849_checkCrossCycle(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _51532_v, _1e71a80b0_Builder* _51546_message);
inline jule::Bool _1a48aac45_checkIllegalCycles(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _53239_v, jule::Ptr<_1a463d137_Token> _53248_declToken);
inline jule::Ptr<_1a48a2753_Data> _1a48ab141_evalVar(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var> _56027_v, jule::Ptr<_1a463d137_Token> _56036_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48ab53c_evalTypeAlias(_1a48a447a_eval* _self_, jule::Ptr<_1a48d46db_TypeAlias> _66033_ta, jule::Ptr<_1a463d137_Token> _66049_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48ab938_evalDef(_1a48a447a_eval* _self_, jule::Any* _69928_def, jule::Ptr<_1a463d137_Token> _69942_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48abc79_evalIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a46592b8_IdentExpr> _72329_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48ac0ba_evalUnary(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4659a5a_UnaryExpr> _72830_u);
inline jule::Ptr<_1a48a2753_Data> _1a48ac40b_evalVariadic(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4659e34_VariadicExpr> _73333_v);
inline jule::Ptr<_1a48a2753_Data> _1a48ac74c_evalUnsafe(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4658d12_UnsafeExpr> _75531_u);
inline jule::Ptr<_1a48a2753_Data> _1a48aca8d_evalArr(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e004_SliceExpr> _76328_s);
inline jule::Ptr<_1a48a2753_Data> _1a48ad044_evalExpSlc(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e004_SliceExpr> _84031_s, jule::Ptr<_1a48d54cd_Type> _84055_t, jule::Any _84069_first);
inline jule::Ptr<_1a48a2753_Data> _1a48ad385_evalSliceExpr(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e004_SliceExpr> _87834_s);
inline jule::Bool _1a48ad781_checkIntegerIndexingByData(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _91447_d, jule::Ptr<_1a463d137_Token> _91461_token);
inline void _1a48adb9e_indexingPtr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _92732_d, jule::Ptr<_1a48a2753_Data>* _92747_index, jule::Ptr<_1a465e961_IndexingExpr>* _92766_i);
inline void _1a48ae0bc_indexingArr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _94332_d, jule::Ptr<_1a48a2753_Data>* _94347_index, jule::Ptr<_1a465e961_IndexingExpr>* _94366_i);
inline void _1a48ae4da_indexingSlc(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _95332_d, jule::Ptr<_1a48a2753_Data>* _95347_index, jule::Ptr<_1a465e961_IndexingExpr>* _95366_i);
inline void _1a48ae908_indexingMap(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _97632_d, jule::Ptr<_1a48a2753_Data>* _97647_index, jule::Ptr<_1a465e961_IndexingExpr>* _97666_i);
inline void _1a48aed26_indexingStr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _99332_d, jule::Ptr<_1a48a2753_Data>* _99347_index, jule::Ptr<_1a465e961_IndexingExpr>* _99366_i);
inline void _1a48b0244_comptimeRange(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _102134_d, jule::Ptr<_1a48a2753_Data>* _102149_index, jule::Ptr<_1a465e961_IndexingExpr>* _102168_i);
inline void _1a48b0662_toIndexing(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _104631_d, jule::Ptr<_1a48a2753_Data>* _104646_index, jule::Ptr<_1a465e961_IndexingExpr>* _104665_i);
inline jule::Bool _1a48b0b18_pushGenericsFromExprSubIdent(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465aab1_SubIdentExpr>* _107450_sexpr, jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>* _10758_generics, jule::Ptr<_1a465799d_Expr>* _107541_expr);
inline jule::Bool _1a48b1014_pushGenericsFromData(jule::Ptr<_1a48a447a_eval> _self_, jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>* _108542_generics, jule::Ptr<_1a465799d_Expr>* _108575_expr);
inline void _1a48b1377_evalIdentDeclFromIndexing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48a2753_Data>* _115547_d, jule::Ptr<_1a465e961_IndexingExpr>* _115562_i);
inline __jule_tuple_bool__jule_tuple_bool _1a48b182d_checkGenericFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4721d20_FnIns>* _119836_f, jule::Ptr<_1a463d137_Token>* _119852_et, jule::Any* _119876_model);
inline void _1a48b1b91_evalFnGenericFromIndexing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48a2753_Data>* _121447_d, jule::Ptr<_1a465e961_IndexingExpr>* _121462_i);
inline jule::Ptr<_1a48a2753_Data> _1a48b1ed2_evalIndexing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e961_IndexingExpr> _125433_i);
inline __jule_tuple_x_1a48a2753_Data__jule_tuple_x_1a48a2753_Data _1a48b2323_evalSlicingExprs(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a46600c1_SlicingExpr>* _131438_s);
inline void _1a48b25cb_slicingArr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _135027_d);
inline void _1a48b29e9_slicingStr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _136527_d, jule::Ptr<_1a48a2753_Data>* _136538_l, jule::Ptr<_1a48a2753_Data>* _136549_r);
inline void _1a48b2ec2_checkSlicing(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _140333_d, jule::Ptr<_1a48a2753_Data>* _140344_l, jule::Ptr<_1a48a2753_Data>* _140355_r, jule::Ptr<_1a46600c1_SlicingExpr>* _140366_s);
inline jule::Ptr<_1a48a2753_Data> _1a48b3313_evalSlicing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a46600c1_SlicingExpr> _142232_s);
inline void _1a48b3731_castPtr(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _145927_t, jule::Ptr<_1a48a2753_Data> _145941_d, jule::Ptr<_1a463d137_Token> _145951_errorToken);
inline void _1a48b3b4e_castStruct(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _148130_t, jule::Ptr<_1a48a2753_Data> _148144_d, jule::Ptr<_1a463d137_Token> _148154_errorToken);
inline void _1a48b406c_castRef(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _149827_t, jule::Ptr<_1a48a2753_Data> _149841_d, jule::Ptr<_1a463d137_Token> _149851_errorToken);
inline void _1a48b448a_castSlc(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _152127_t, jule::Ptr<_1a48a2753_Data> _152141_d, jule::Ptr<_1a463d137_Token> _152151_errorToken);
inline void _1a48b47ed_castStr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _157627_d, jule::Ptr<_1a463d137_Token> _157637_errorToken);
inline void _1a48b4c1b_castInt(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _162327_t, jule::Ptr<_1a48a2753_Data> _162341_d, jule::Ptr<_1a463d137_Token> _162351_errorToken);
inline void _1a48b5139_castNum(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _166927_t, jule::Ptr<_1a48a2753_Data> _166941_d, jule::Ptr<_1a463d137_Token> _166951_errorToken);
inline void _1a48b5557_castPrim(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _170028_t, jule::Ptr<_1a48a2753_Data> _170042_d, jule::Ptr<_1a463d137_Token> _170052_errorToken);
inline void _1a48b58ba_castConstant(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type>* _171633_t, jule::Ptr<_1a48a2753_Data>* _171648_d);
inline void _1a48b5cd8_castTypeEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type>* _172533_t, jule::Ptr<_1a48a2753_Data>* _172548_d, jule::Ptr<_1a463d137_Token>* _172563_errorToken);
inline void _1a48b6206_castTypeEnumT(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type>* _173534_t, jule::Ptr<_1a48a2753_Data>* _173549_d, jule::Ptr<_1a463d137_Token>* _173564_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48b66ac_evalCastByTypeNData(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _174539_t, jule::Ptr<_1a48a2753_Data> _174553_d, jule::Ptr<_1a463d137_Token> _174567_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48b6b63_evalCastT(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48d54cd_Type>* _182231_t, jule::Ptr<_1a465799d_Expr>* _182246_e, jule::Ptr<_1a463d137_Token>* _182266_et);
inline jule::Ptr<_1a48a2753_Data> _1a48b6ea4_evalCast(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465a30d_CastExpr> _183929_c);
inline jule::Ptr<_1a48a2753_Data> _1a48b72e5_evalNamespace(_1a48a447a_eval* _self_, jule::Ptr<_1a465a6d7_NamespaceExpr> _184833_s);
inline jule::Ptr<_1a48a2753_Data> _1a48b779b_evalStructLitExplicit(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4676d30_StructIns> _186742_s, jule::Slice<jule::Ptr<_1a465799d_Expr>> _18687_exprs, jule::Ptr<_1a463d137_Token> _186832_errorToken);
inline jule::Ptr<_1a48a2753_Data> _1a48b7adc_evalStructLit(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465c9e7_StructLit> _190534_lit);
inline _1a48e78ca_typeChecker _1a48b7d73_typeChecker(_1a48a447a_eval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48b81b4_evalType(_1a48a447a_eval* _self_, jule::Ptr<_1a4653669_TypeDecl> _193728_t);
inline void _1a48b8527_callTypeFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr>* _195032_fc, jule::Ptr<_1a48a2753_Data>* _195059_d);
inline void _1a48b888a_callBuiltinFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr>* _197635_fc, jule::Ptr<_1a48a2753_Data>* _197662_d);
inline void _1a48b8bed_checkFnOfConcurrentCall(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns>* _198840_f, jule::Ptr<_1a463d137_Token> _198851_errorToken);
inline void _1a48b911b_processExceptionalHandler(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns>* _200746_f, jule::Ptr<_1a465b6c7_FnCallExpr>* _200762_fc, jule::Ptr<_1a48a2753_Data>* _200789_d);
inline void _1a48b947e_callFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr>* _203428_fc, jule::Ptr<_1a48a2753_Data>* _203455_d);
inline jule::Ptr<_1a48a2753_Data> _1a48b97c0_evalFnCall(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr> _218331_fc);
inline jule::Ptr<_1a48a2753_Data> _1a48b9bbb_evalEnumStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a472bb2c_Enum> _221634_enm, jule::Ptr<_1a463d137_Token> _221650_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48ba0b7_evalTypeEnumStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a472d337_TypeEnum> _222438_enm, jule::Ptr<_1a463d137_Token> _222454_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48ba4b3_evalStructStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a4676d30_StructIns> _224736_s, jule::Ptr<_1a463d137_Token> _224751_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48ba969_evalTraitSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _228237_d, jule::Ptr<_1a4729476_Trait> _228251_trt, jule::Ptr<_1a463d137_Token> _228268_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48baeca_evalStructSubIdentField(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _230444_d, jule::Ptr<_1a4676d30_StructIns>* _230459_s, jule::Ptr<_1a463d137_Token>* _230479_tok, jule::Ptr<_1a4676280_FieldIns>* _2304104_f);
inline jule::Ptr<_1a48a2753_Data> _1a48bb5e6_evalStructSubIdentMethod(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _232945_d, jule::Ptr<_1a4676d30_StructIns>* _232960_s, jule::Ptr<_1a463d137_Token>* _232980_tok, jule::Ptr<_1a471dc62_Fn>* _2329105_m, jule::Bool _2329113_ref);
inline jule::Ptr<_1a48a2753_Data> _1a48bbb57_evalStructSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _235038_d, jule::Ptr<_1a4676d30_StructIns> _235052_s, jule::Ptr<_1a465aab1_SubIdentExpr> _235071_si, jule::Bool _235095_ref);
inline jule::Ptr<_1a48a2753_Data> _1a48bbe98_evalIntTypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _237433_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bc2d9_evalUintTypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _240134_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bc62a_evalI8TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _241932_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bc96b_evalI16TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _244833_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bccac_evalI32TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _247733_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bd0ed_evalI64TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _250633_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bd43e_evalU8TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _253532_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bd780_evalU16TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _255433_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bdac1_evalU32TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _257333_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bde12_evalU64TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _259233_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48be253_evalF32TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _261133_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48be594_evalF64TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _265033_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48be990_evalPrimStatic(_1a48a447a_eval* _self_, jule::Str _268930_kind, jule::Ptr<_1a463d137_Token> _268941_ident);
inline jule::Ptr<_1a48a2753_Data> _1a48bed8b_evalTypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _272134_d, jule::Ptr<_1a465aab1_SubIdentExpr> _272148_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d310ea_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47ae044_comptimeTypeInfo>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d358d5_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a479eba0_comptimeStructField>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d3a159_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47a60e6_comptimeEnumField>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d3e922_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47a8e0c_comptimeParam>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d4441b_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47a2dc3_comptimeStatic>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d48b90_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47b5149_comptimeValue>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d4d414_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47b9824_comptimeFile>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline jule::Ptr<_1a48a2753_Data> _1a8d52c21_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47bd73a_comptimeDecl>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si);
inline __jule_tuple_x_1a48a2753_Data__jule_tuple_bool _1a48c073d_tryComptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _274543_d, jule::Ptr<_1a465aab1_SubIdentExpr> _274557_si);
inline jule::Ptr<_1a48a2753_Data> _1a48c0b39_evalObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _277635_d, jule::Ptr<_1a465aab1_SubIdentExpr> _277649_si);
inline jule::Ptr<_1a48a2753_Data> _1a48c0e7a_evalSubIdent(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465aab1_SubIdentExpr> _282033_si);
inline jule::Ptr<_1a48a2753_Data> _1a48c12bb_evalTuple(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4658592_TupleExpr> _283430_tup);
inline jule::Ptr<_1a48a2753_Data> _1a48c16b7_evalMap(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48e4289_Map> _286328_m, jule::Ptr<_1a465ce9d_BraceLit> _286341_lit);
inline jule::Ptr<_1a48a2753_Data> _1a48c1a08_evalBraceLit(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465ce9d_BraceLit> _291133_lit);
inline jule::Ptr<_1a48a2753_Data> _1a48c1d49_evalAnonFunc(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4665406_FnDecl> _292633_decl);
inline jule::Ptr<_1a48a2753_Data> _1a48c218a_evalBinary(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b067_BinaryExpr> _296431_op);
inline jule::Ptr<_1a48a2753_Data> _1a48c24cb_evalExprKind(jule::Ptr<_1a48a447a_eval> _self_, jule::Any _297933_kind);
inline jule::Ptr<_1a48a2753_Data> _1a48c281c_eval1(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _302726_expr);
inline jule::Ptr<_1a48a2753_Data> _1a48c2b5d_eval(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _307225_expr);
inline jule::Ptr<_1a48a2753_Data> _1a48c2e9e_evalExpr1(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _308730_expr);
inline jule::Ptr<_1a48a2753_Data> _1a48c32e0_evalExpr(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _310329_expr);
inline _1a48c3774_unaryEval static__1a48c3be7_new(jule::Ptr<_1a48a447a_eval> _312420_e);
inline void _1a48c3de5_minus(_1a48c3774_unaryEval* _self_);
inline void _1a48c40e3_plus(_1a48c3774_unaryEval* _self_);
inline void _1a48c42e1_caret(_1a48c3774_unaryEval* _self_);
inline void _1a48c44de_excl(_1a48c3774_unaryEval* _self_);
inline void _1a48c46dc_star(_1a48c3774_unaryEval* _self_);
inline void _1a48c48da_amper(_1a48c3774_unaryEval* _self_);
inline void _1a48c4ad8_typeDecl(_1a48c3774_unaryEval* _self_);
inline void _1a48c4cd6_evalData(_1a48c3774_unaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c5127_eval(_1a48c3774_unaryEval* _self_, jule::Ptr<_1a4659a5a_UnaryExpr> _341124_u);
inline _1a48c5710_binaryEval static__1a48c5ce8_newPlain(jule::Ptr<_1a48a447a_eval> _345925_e);
inline _1a48c5710_binaryEval static__1a48c616c_new(jule::Ptr<_1a48a447a_eval> _346520_e, jule::Ptr<_1a463d137_Token> _346534_op);
inline jule::Bool _1a48c6403_checkTypeCompatibility(_1a48c5710_binaryEval* _self_);
inline jule::Bool _1a48c6689_checkStructCommonOperatorCompatibility(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c6920_evalComptimeTypeInfo(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c6ba6_evalNil(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c6e3c_evalEnum(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c71c3_evalTypeEnum(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c7459_evalSptr(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c76e0_evalPtr(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c7976_evalArr(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c7c0c_evalStruct(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c7e93_evalTrait(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c8229_evalAny(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c84b0_evalBool(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c8746_evalStr(_1a48c5710_binaryEval* _self_);
inline void _1a48c8944_setTypeToGreater(_1a48c5710_binaryEval* _self_);
inline void _1a48c8bec_checkModData(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _386433_d);
inline void _1a48c8dea_mod(_1a48c5710_binaryEval* _self_);
inline jule::Bool _1a48c92e6_numbersAreCompatibile(_1a48c5710_binaryEval* _self_, jule::Str* _388634_lk, jule::Str* _388644_rk);
inline jule::Ptr<_1a48a2753_Data> _1a48c957c_shift(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c9813_evalFloat(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c9a99_evalInt(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48c9d30_evalPrim(_1a48c5710_binaryEval* _self_);
inline jule::Bool _1a48ca0b6_checkSpecialCases(_1a48c5710_binaryEval* _self_);
inline jule::Ptr<_1a48a2753_Data> _1a48ca34c_evalOp(_1a48c5710_binaryEval* _self_);
inline void _1a48ca605_evalConst(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _417630_d);
inline void _1a48ca8ad_checkData(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _425430_d);
inline void _1a48caaab_checkDatas(_1a48c5710_binaryEval* _self_);
inline void _1a48cad64_setModel(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _426629_d);
inline void _1a48cb11c_postEval(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _429529_d);
inline jule::Ptr<_1a48a2753_Data> _1a48cb518_solveExplicit(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _430034_l, jule::Ptr<_1a48a2753_Data>* _430049_r);
inline jule::Ptr<_1a48a2753_Data> _1a48cb859_eval(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a465b067_BinaryExpr>* _432025_op);
inline jule::Str _1a48d58c9_Str(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d5c1a_Equal(jule::Ptr<_1a48d54cd_Type> _self_, jule::Ptr<_1a48d54cd_Type> _7218_other);
inline jule::Bool _1a48d637a_Binded(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d6611_IsNil(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d6897_Void(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d6b2d_Comparable(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d6db4_Mutable(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d714a_Ordered(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d73d1_NilCompatible(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d7667_GC(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d78ed_Variadicable(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48dd5e6_Prim> _1a48d7b84_Prim(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48e2122_Sptr> _1a48d7e1a_Sptr(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48e58d9_Ptr> _1a48d81a1_Ptr(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a472bb2c_Enum> _1a48d8437_Enum(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a472d337_TypeEnum> _1a48d86bd_TypeEnum(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48e4e16_Arr> _1a48d8954_Arr(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48e2ae5_Slc> _1a48d8bda_Slc(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a4721d20_FnIns> _1a48d8e71_Fn(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a4676d30_StructIns> _1a48d9207_Struct(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a4729476_Trait> _1a48d948d_Trait(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48e4289_Map> _1a48d9724_Map(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a48e36d9_Tuple> _1a48d99aa_Tup(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48d9c41_comptime(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47a1443_comptimeStructFields> _1a48d9ec7_comptimeStructFields(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a479eba0_comptimeStructField> _1a48da25d_comptimeStructField(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47a7405_comptimeEnumFields> _1a48da4e4_comptimeEnumFields(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47a60e6_comptimeEnumField> _1a48da77a_comptimeEnumField(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47aac66_comptimeParams> _1a48daa11_comptimeParams(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47a8e0c_comptimeParam> _1a48dac97_comptimeParam(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a479e144_comptimeRange> _1a48db02d_comptimeRange(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47ac5c5_comptimeTypeInfos> _1a48db2b4_comptimeTypeInfos(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47ae044_comptimeTypeInfo> _1a48db54a_comptimeTypeInfo(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47a4677_comptimeStatics> _1a48db7d1_comptimeStatics(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47a2dc3_comptimeStatic> _1a48dba67_comptimeStatic(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47b5149_comptimeValue> _1a48dbced_comptimeValue(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47bd73a_comptimeDecl> _1a48dc084_comptimeDecl(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47bb44c_comptimeDecls> _1a48dc31a_comptimeDecls(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47b9824_comptimeFile> _1a48dc5a1_comptimeFile(_1a48d54cd_Type* _self_);
inline jule::Ptr<_1a47b7da5_comptimeFiles> _1a48dc837_comptimeFiles(_1a48d54cd_Type* _self_);
inline jule::Bool _1a48dd096_checked(_1a48dcbde_TypeSym* _self_);
inline jule::Str _1a48dd96a_Str(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48ddcab_Equal(jule::Ptr<_1a48dd5e6_Prim> _self_, jule::Ptr<_1a48d54cd_Type> _51418_other);
inline jule::Bool _1a48de251_IsConstraint(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48de4d7_IsI8(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48de76d_IsI16(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48dea04_IsI32(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48dec8a_IsI64(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e0021_IsU8(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e02a7_IsU16(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e053d_IsU32(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e07c4_IsU64(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e0a5a_IsF32(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e0ce1_IsF64(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e1077_IsInt(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e130d_IsUint(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e1594_IsUintptr(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e182a_IsBool(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e1ab1_IsStr(_1a48dd5e6_Prim* _self_);
inline jule::Bool _1a48e1d47_IsAny(_1a48dd5e6_Prim* _self_);
inline jule::Str _1a48e24c9_Str(_1a48e2122_Sptr* _self_);
inline jule::Bool _1a48e281a_Equal(jule::Ptr<_1a48e2122_Sptr> _self_, jule::Ptr<_1a48d54cd_Type> _59118_other);
inline jule::Str _1a48e30ac_Str(_1a48e2ae5_Slc* _self_);
inline jule::Bool _1a48e33ed_Equal(jule::Ptr<_1a48e2ae5_Slc> _self_, jule::Ptr<_1a48d54cd_Type> _61018_other);
inline jule::Str _1a48e3a91_Str(_1a48e36d9_Tuple* _self_);
inline jule::Bool _1a48e3dd2_Equal(jule::Ptr<_1a48e36d9_Tuple> _self_, jule::Ptr<_1a48d54cd_Type> _63918_other);
inline jule::Str _1a48e4641_Str(_1a48e4289_Map* _self_);
inline jule::Bool _1a48e4982_Equal(jule::Ptr<_1a48e4289_Map> _self_, jule::Ptr<_1a48d54cd_Type> _67618_other);
inline jule::Str _1a48e52bd_Str(_1a48e4e16_Arr* _self_);
inline jule::Bool _1a48e560e_Equal(jule::Ptr<_1a48e4e16_Arr> _self_, jule::Ptr<_1a48d54cd_Type> _70418_other);
inline jule::Str _1a48e5c91_Str(_1a48e58d9_Ptr* _self_);
inline jule::Bool _1a48e60d2_Equal(jule::Ptr<_1a48e58d9_Ptr> _self_, jule::Ptr<_1a48d54cd_Type> _72818_other);
inline jule::Bool _1a48e6456_IsUnsafe(_1a48e58d9_Ptr* _self_);
inline void _1a48e815b_pushErr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a463d137_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1a48e8359_allowBuiltin(_1a48e78ca_typeChecker* _self_);
inline void _1a48e8557_disallowBuiltin(_1a48e78ca_typeChecker* _self_);
inline void _1a913153d_pushReference(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4676d30_StructIns>* _83237_t);
inline void _1a9134013_pushReference(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4729476_Trait>* _83237_t);
inline void _1a48e8ab8_pushReferenceByKind(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a48d54cd_Type>* _84240_k);
inline void _1a48e8ed6_pushCycleError(_1a48e78ca_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1e71a80b0_Builder* _85353_message);
inline jule::Bool _1a48e93d2_checkCrossCycle(_1a48e78ca_typeChecker* _self_, jule::Any _87527_decl, _1e71a80b0_Builder* _87543_message);
inline jule::Bool _1a48e97cd_checkIllegalCycles(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1a48e9bc9_fromTypeAlias(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _95930_decl, jule::Ptr<_1a48d46db_TypeAlias>* _95962_ta);
inline jule::Ptr<_1a472bb2c_Enum> _1a48ea0c5_fromEnum(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _103625_decl, jule::Ptr<_1a472bb2c_Enum>* _103657_e);
inline jule::Ptr<_1a472d337_TypeEnum> _1a48ea4c1_fromTypeEnum(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _104829_decl, jule::Ptr<_1a472d337_TypeEnum>* _104861_e);
inline jule::Ptr<_1a4729476_Trait> _1a48ea8bc_fromTrait(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _106026_decl, jule::Ptr<_1a4729476_Trait>* _106058_t);
inline jule::Bool _1a48eacb8_checkStructIns(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4676d30_StructIns>* _107335_ins, jule::Ptr<_1a463d137_Token>* _107357_errorToken);
inline void _1a48eb071_appendUsedStructReference(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4673ec5_Struct>* _109446_s);
inline jule::Ptr<_1a4676d30_StructIns> _1a48eb46c_buildStructInstance(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _110740_decl, jule::Ptr<_1a4673ec5_Struct>* _110772_s);
inline jule::Ptr<_1a4676d30_StructIns> _1a48eb868_fromStructIns(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4676d30_StructIns>* _115534_ins, jule::Ptr<_1a463d137_Token> _115555_token);
inline jule::Ptr<_1a4676d30_StructIns> _1a48ebc64_fromStruct(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _117331_decl, jule::Ptr<_1a4673ec5_Struct>* _117363_s);
inline jule::Trait _1a48ec0a5_getDef(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1a48ec3e6_buildIdent(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl> _127830_decl);
inline jule::Trait _1a48ec737_buildSubIdent(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a465403d_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1a48e2122_Sptr> _1a48eca78_buildSptrFromType(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a48d54cd_Type>* _131638_elem);
inline jule::Ptr<_1a48e2122_Sptr> _1a48ecdb9_buildSptr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654714_SptrTypeDecl> _133629_decl);
inline jule::Ptr<_1a48e58d9_Ptr> _1a48ed20a_buildPtrFromType(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a48d54cd_Type>* _134537_elem);
inline jule::Ptr<_1a48e58d9_Ptr> _1a48ed54b_buildPtr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4655193_PtrTypeDecl> _136028_decl);
inline jule::Ptr<_1a48e2ae5_Slc> _1a48ed88c_buildSlc(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654a99_SlcTypeDecl> _137728_decl);
inline jule::Ptr<_1a48e4e16_Arr> _1a48edbcd_buildArr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4655935_ArrTypeDecl> _139828_decl);
inline jule::Ptr<_1a48e4289_Map> _1a48ee01e_buildMap(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4656183_MapTypeDecl> _144728_decl);
inline jule::Ptr<_1a48e36d9_Tuple> _1a48ee360_buildTuple(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654d96_TupleTypeDecl> _147930_decl);
inline jule::Bool _1a48ee6a1_checkFuncTypes(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4721d20_FnIns>* _149235_f);
inline jule::Ptr<_1a4721d20_FnIns> _1a48ee9e2_buildFunc(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4665406_FnDecl> _151029_decl);
inline jule::Trait _1a48eed33_buildNamespace(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654417_NamespaceTypeDecl> _154034_ns);
inline jule::Ptr<_1a48d54cd_Type> _1a4900174_build(_1a48e78ca_typeChecker* _self_, jule::Any* _155626_declKind);
inline jule::Ptr<_1a48d54cd_Type> _1a49004b5_checkDecl(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653669_TypeDecl>* _164430_decl);
inline jule::Bool static__1a4900e11_prim(jule::Str* _167118_ident, jule::Ptr<_1a48dd5e6_Prim> _167130_t);
inline jule::Bool static__1a4901285_exist(jule::Str* _167519_ident, jule::Ptr<_1a48d54cd_Type>* _167536_k);
inline void _1a534ecc1_stop(_1a534e61c_scopeParser* _self_);
inline jule::Bool _1a5350057_stopped(_1a534e61c_scopeParser* _self_);
inline jule::Bool _1a53502dd_finished(_1a534e61c_scopeParser* _self_);
inline jule::Bool _1a5350574_isLastSt(_1a534e61c_scopeParser* _self_);
inline void _1a53508d7_pushErr(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a463d137_Token> _15423_token, jule::Str _15445_fmt);
inline void _1a5350c4a_pushSuggestion(_1a534e61c_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1a5351003_insertAsNext(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _16333_tokens);
inline jule::Ptr<_1a534dc7b_stmt> _1a5351289_next(_1a534e61c_scopeParser* _self_);
inline jule::Ptr<_1a4663767_ScopeTree> _1a5351685_buildScope(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _17331_tokens, jule::Ptr<_1a463d137_Token> _17360_end);
inline jule::Ptr<_1a46665b1_VarDecl> _1a53519c6_buildVarSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _18431_tokens);
inline jule::Ptr<_1a466698a_RetSt> _1a5351d17_buildRetSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _19230_tokens);
inline jule::Ptr<_1a466720a_Iter> _1a5352158_buildWhileNextIter(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _20339_s);
inline jule::Ptr<_1a4667a35_WhileKind> _1a5352499_buildWhileIterKind(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a53527da_getRangeKindKeysTokens(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _25443_toks);
inline jule::Ptr<_1a46665b1_VarDecl> _1a5352b2b_buildRangeKindKey(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _1a5352e6c_buildRangeKindKeys(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _28639_parts);
inline void _1a53532d0_setupRangeKindKeysPlain(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a466843c_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1a463d137_Token>>* _29471_tokens);
inline void _1a5353643_setupRangeKindKeysExplicit(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a466843c_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1a463d137_Token>>* _30974_tokens);
inline void _1a53539a6_setupRangeKindKeys(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a466843c_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1a463d137_Token>>* _31866_tokens);
inline jule::Ptr<_1a466843c_RangeKind> _1a5353e5c_buildRangeIterKind(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1a463d137_Token>>* _3278_exprTokens, jule::Ptr<_1a463d137_Token>* _32742_inToken);
inline jule::Any _1a5354358_buildCommonIterKind(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _34240_tokens, jule::Ptr<_1a463d137_Token>* _34266_errTok);
inline jule::Ptr<_1a466720a_Iter> _1a5354699_buildCommonIter(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _36935_tokens);
inline jule::Ptr<_1a466720a_Iter> _1a53549da_buildIterSt(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _39932_st);
inline jule::Ptr<_1a4668816_BreakSt> _1a5354d2b_buildBreakSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _40633_tokens);
inline jule::Ptr<_1a4668be0_ContSt> _1a535516c_buildContSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _42432_tokens);
inline jule::Ptr<_1a4669196_If> _1a53554ad_buildIf(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _44228_tokens);
inline jule::Ptr<_1a4669570_Else> _1a53557ee_buildElse(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _47530_tokens);
inline jule::Ptr<_1a4669a26_Conditional> _1a5355b40_buildIfElseChain(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _49936_tokens);
inline jule::Ptr<_1a465799d_Expr> _1a5355e81_buildCoCallSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _52233_tokens);
inline jule::Ptr<_1a4661127_GotoSt> _1a53562c2_buildGotoSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _53832_tokens);
inline jule::Ptr<_1a4661424_FallSt> _1a5356613_buildFallSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _55832_tokens);
inline jule::Ptr<_1a466a263_TypeAliasDecl> _1a5356954_buildTypeAliasSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _56837_tokens);
inline void _1a5356e2c_pushCaseExpr(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _57432_tokens, jule::Ptr<_1a463d137_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1a465799d_Expr__jule_tuple_bool _1a53573d3_buildCaseExprs(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _59735_tokens, jule::Ptr<_1a463d137_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1a4663767_ScopeTree> _1a5357724_buildCaseScope(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _63935_tokens);
inline __jule_tuple_x_1a466a719_Case__jule_tuple_bool _1a5357b20_buildCase(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1a466a719_Case__jule_tuple_x_1a4669570_Else _1a535801b_buildCases(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1a466b033_MatchCase> _1a535835c_buildMatchCase(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _71934_tokens);
inline jule::Ptr<_1a4663767_ScopeTree> _1a535869d_buildScopeSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _75232_tokens);
inline jule::Ptr<_1a4660c4d_LabelSt> _1a53589de_buildLabelSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _79533_tokens);
inline __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool _1a5358d30_buildIdSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _81030_tokens);
inline jule::Ptr<_1a5369637_assignInfo> _1a5359171_buildAssignInfo(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _82436_tokens);
inline jule::Ptr<_1a4661a84_AssignLeft> _1a53594b2_buildAssignL(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>> _1a5359803_buildAssignLs(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _88034_parts);
inline __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool _1a5359b44_buildPlainAssign(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _88937_tokens);
inline jule::Bool _1a535a040_buildDeclAssign1(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _94337_lefts, jule::Ptr<_1a4662117_AssignSt>* _94366_assign);
inline __jule_tuple_x_1a4662117_AssignSt__jule_tuple_bool _1a535a381_buildDeclAssign(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _99135_tokens);
inline __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool _1a535a6c2_buildAssignSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _102534_tokens);
inline jule::Ptr<_1a4658372_UseExpr> _1a535aa13_buildUseExpr(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _103833_tokens);
inline jule::Any _1a535ad54_buildConstSt(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _105133_st);
inline jule::Any _1a535b195_buildSt(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _107628_st);
inline void _1a535b508_build(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _114026_tokens, jule::Ptr<_1a4663767_ScopeTree>* _114056_s);
inline void _1a535c74b_pushErr(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1a535caae_pushSuggestion(_1a535c042_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1a4658592_TupleExpr> _1a535ce00_buildTuple(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _2331_parts);
inline jule::Ptr<_1a4658938_LitExpr> _1a535d241_buildLit(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token> _3324_token);
inline jule::Any _1a535d8c3_buildSingle(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token> _4431_token);
inline jule::Ptr<_1a46592b8_IdentExpr> _1a535dc14_buildBindIdent(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _6135_tokens);
inline jule::Ptr<_1a4659a5a_UnaryExpr> _1a535e055_buildUnary(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _8030_tokens);
inline jule::Ptr<_1a465aab1_SubIdentExpr> _1a535e396_buildObjSubIdent(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _10136_tokens);
inline jule::Ptr<_1a465a6d7_NamespaceExpr> _1a535e6d7_buildNamespace(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _11635_tokens);
inline jule::Ptr<_1a4653669_TypeDecl> _1a535ea28_buildType(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _15030_tokens);
inline jule::Any _1a535ed69_buildSubIdent(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _16434_tokens);
inline jule::Ptr<_1a4659e34_VariadicExpr> _1a53601aa_buildVariadic(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _18633_tokens);
inline jule::Ptr<_1a4657c67_RangeExpr> _1a53604eb_buildBetweenParentheses(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _19543_tokens);
inline jule::Ptr<_1a465a30d_CastExpr> _1a536083c_tryBuildCast(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _20733_tokens);
inline void _1a5360c5a_pushArg(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1a463d137_Token>> _28152_tokens, jule::Ptr<_1a463d137_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1a465799d_Expr>> _1a536109b_buildArgs(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _29029_tokens);
inline jule::Ptr<_1a465b6c7_FnCallExpr> _1a5361893_buildFnCall(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token>* _35632_token, jule::Slice<jule::Ptr<_1a463d137_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1a463d137_Token>>* _35687_args);
inline jule::Any _1a5361bd4_buildParenthesesRange(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _36442_tokens);
inline jule::Ptr<_1a4658d12_UnsafeExpr> _1a5362025_buildUnsafeExpr(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _38635_tokens);
inline jule::Ptr<_1a4665406_FnDecl> _1a5362366_buildAnonFn(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _40132_tokens);
inline jule::Any _1a53626a7_buildUnsafe(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _41032_tokens);
inline void _1a5362ac5_pushRangeLitPart(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _42036_part, jule::Ptr<_1a463d137_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a5362e16_getBraceRangeLitExprParts(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _43145_tokens);
inline jule::Ptr<_1a465c1bc_FieldExprPair> _1a5363257_buildFieldExprPair(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _47338_tokens);
inline jule::Ptr<_1a465799d_Expr> _1a5363598_buildStructLitExpr(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1a465799d_Expr>> _1a53638d9_buildStructLitExprs(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _50140_tokens);
inline jule::Ptr<_1a465c9e7_StructLit> _1a5363c2a_buildTypedStructLiteral(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _51443_tokens);
inline jule::Ptr<_1a465799d_Expr> _1a536406b_buildBraceLitPart(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _53838_tokens);
inline jule::Ptr<_1a465ce9d_BraceLit> _1a53643ac_buildBraceLit(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _55534_tokens);
inline jule::Any _1a53646ed_buildBraceRange(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a5364a3e_getEnumerableParts(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _62638_tokens);
inline jule::Ptr<_1a465e004_SliceExpr> _1a5364d80_buildSlice(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _63330_tokens);
inline jule::Ptr<_1a465e961_IndexingExpr> _1a5365336_buildIndexing(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1a463d137_Token>> _6567_tokens, jule::Ptr<_1a463d137_Token> _65636_errorToken);
inline jule::Ptr<_1a46600c1_SlicingExpr> _1a5365952_buildSlicing(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1a463d137_Token>>* _67967_start, jule::Slice<jule::Ptr<_1a463d137_Token>>* _6808_to, jule::Ptr<_1a463d137_Token>* _68034_errorToken, jule::Ptr<_1a463d137_Token> _68065_end);
inline jule::Any _1a5365c93_buildBracketRange(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _69537_tokens);
inline jule::Any _1a53660d4_buildExclRight(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _72035_tokens);
inline jule::Any _1a5366425_buildData(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _73830_tokens);
inline jule::Any _1a5366821_buildBinary(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _80732_tokens, jule::I32 _80757_i);
inline jule::Any _1a5366b62_build(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _83226_tokens);
inline jule::Any _1a5366ea3_buildKind(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _84330_tokens);
inline jule::Ptr<_1a465799d_Expr> _1a53672e4_buildFromTokens(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _85435_tokens);
inline void _1a536cb57_stop(_1a536c827_parser* _self_);
inline jule::Bool _1a536cddd_stopped(_1a536c827_parser* _self_);
inline void _1a536d30b_pushErr(_1a536c827_parser* _self_, jule::Ptr<_1a463d137_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1a536d66e_pushSuggestion(_1a536c827_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1a465799d_Expr> _1a536d9b0_buildExpr(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _17831_tokens);
inline jule::Ptr<_1a4652a86_Directive> _1a536dd01_buildDirective(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _18234_tokens);
inline void _1a536e0a9_pushDirective(_1a536c827_parser* _self_, jule::Ptr<_1a4652a86_Directive> _19733_d);
inline jule::Ptr<_1a4663767_ScopeTree> _1a536e4a5_buildScope(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _21032_tokens, jule::Ptr<_1a463d137_Token> _21061_end);
inline __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool _1a536e95b__buildType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool _1a536ee12_buildType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1a466a263_TypeAliasDecl> _1a5370253_buildTypeAliasDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _24240_tokens);
inline void _1a53705b6_buildVarTypeAndExpr(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a46665b1_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1a463d137_Token>>* _28264_tokens);
inline void _1a5370929_buildVarCommon(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a46665b1_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1a463d137_Token>> _31558_tokens);
inline void _1a5370c8c_buildVarBegin(_1a536c827_parser* _self_, jule::Ptr<_1a46665b1_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1a463d137_Token>>* _33157_tokens);
inline jule::Ptr<_1a46665b1_VarDecl> _1a53710cd_buildVar(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _35929_tokens);
inline jule::Ptr<_1a4660874_GenericDecl> _1a537141e_buildGeneric(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _1a537181a_buildGenerics(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _41535_tokens, jule::Ptr<_1a463d137_Token>* _41561_errorToken);
inline jule::Ptr<_1a4663ea4_ParamDecl> _1a5371b5b_buildSelfParam(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _43534_tokens);
inline void _1a5372079_paramTypeBegin(_1a536c827_parser* _self_, jule::Ptr<_1a4663ea4_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_1a463d137_Token>>* _47573_tokens);
inline void _1a53723dc_buildParamType(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4663ea4_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1a463d137_Token>>* _49065_tokens);
inline void _1a5372750_buildParamBody(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4663ea4_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1a463d137_Token>> _50364_tokens);
inline jule::Ptr<_1a4663ea4_ParamDecl> _1a5372a91_buildParam(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _52331_tokens);
inline void _1a5372d49_checkParams(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>> _1a5373245_buildParams(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool _1a5373641_buildMultiRetType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _61639_tokens, jule::I32* _61669_i);
inline __jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool _1a5373a3c_buildRetType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _68734_tokens, jule::I32* _68764_i);
inline jule::Ptr<_1a4665406_FnDecl> _1a5373ee3_buildFnPrototype(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1a4665406_FnDecl> _1a5374499_buildFn(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1a537480c_buildBindUseDecl(_1a536c827_parser* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1a463d137_Token>>* _83763_tokens);
inline void _1a5374b70_parseUseDecl(_1a536c827_parser* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1a463d137_Token>> _85058_tokens);
inline jule::Ptr<_1a466b5b6_UseDecl> _1a537506b_buildUseDecl(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _88032_tokens, jule::Bool _88057_binded);
inline jule::Ptr<_1a4653669_TypeDecl> _1a5375467_buildTypeEnumItemKind(jule::Ptr<_1a536c827_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_1a463d137_Token>>* _89456_tokens);
inline jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>> _1a53757a8_buildTypeEnumItems(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _93140_tokens);
inline jule::Ptr<_1a466d5b8_TypeEnumDecl> _1a5375ae9_buildTypeEnumDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _95539_tokens);
inline jule::Ptr<_1a465799d_Expr> _1a5375ee5_buildEnumItemExpr(jule::Ptr<_1a536c827_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_1a463d137_Token>>* _98252_tokens);
inline jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>> _1a5376336_buildEnumItems(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _101436_tokens);
inline jule::Ptr<_1a466c62d_EnumDecl> _1a5376677_buildEnumDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _105135_tokens);
inline jule::Any _1a53769b8_buildNodeEnumDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _109639_tokens);
inline jule::Ptr<_1a466d882_FieldDecl> _1a5376d09_buildField(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _110531_tokens);
inline jule::Slice<jule::Ptr<_1a466d882_FieldDecl>> _1a537714a_buildStructDeclFields(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _115442_tokens);
inline jule::Ptr<_1a466e278_StructDecl> _1a537748b_buildStructDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _116537_tokens);
inline void _1a5377744_checkMethodReceiver(_1a536c827_parser* _self_, jule::Ptr<_1a4665406_FnDecl>* _121336_f);
inline void _1a5377aa7_buildTraitBody(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a466e9b5_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1a463d137_Token>> _123260_tokens);
inline jule::Ptr<_1a466e9b5_TraitDecl> _1a5377de8_buildTraitDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _126436_tokens);
inline jule::Ptr<_1a4665406_FnDecl> _1a5378239_buildBindFn(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _129432_tokens);
inline jule::Ptr<_1a46665b1_VarDecl> _1a537857a_buildBindVar(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _130433_tokens);
inline jule::Ptr<_1a466e278_StructDecl> _1a53788bb_buildBindStruct(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _131736_tokens);
inline jule::Ptr<_1a466a263_TypeAliasDecl> _1a5378c0c_buildBindTypeAlias(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _133139_tokens);
inline jule::Ptr<_1a466b5b6_UseDecl> _1a537904d_buildBindUse(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _134133_tokens);
inline jule::Any _1a537938e_buildBind(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _135231_tokens);
inline jule::Ptr<_1a4665406_FnDecl> _1a53796d0_getMethod(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _137631_tokens);
inline void _1a5379a43_parseImplBody(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4670125_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1a463d137_Token>>* _140557_tokens);
inline jule::Ptr<_1a4670125_Impl> _1a5379d84_buildImpl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _143830_tokens);
inline jule::Any _1a537a1c5_buildNodeData(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _150935_tokens);
inline void _1a537a47d_applyFnMeta(_1a536c827_parser* _self_, jule::Ptr<_1a4665406_FnDecl>* _154232_f);
inline void _1a537a736_applyMeta(_1a536c827_parser* _self_, _1a4652668_Node* _154730_node);
inline void _1a537a9de_pushUseDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _157233_decl);
inline jule::Bool _1a537ad30_pushMetaNodes(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _158035_tokens);
inline _1a4652668_Node _1a537b171_parseNode(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _160031_st);
inline void _1a537b429_appendNode(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _162432_st);
inline void _1a537b902_removeRange(_1a536c827_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_1a463d137_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges);
inline void _1a537bd20_pushWrongOrderCloseErr(_1a536c827_parser* _self_, jule::Ptr<_1a463d137_Token>* _164639_t, jule::Slice<jule::Ptr<_1a463d137_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges);
inline void _1a537c2e8_pushRangeClose(_1a536c827_parser* _self_, jule::Ptr<_1a463d137_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_1a463d137_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges);
inline void _1a537c5a1_checkRanges(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _167528_tokens);
inline void _1a537c859_parse(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4643a11_Fileset>* _170627_f);
inline void _1a537e0a8_pushErr(_1a537d9d1_typeBuilder* _self_, jule::Ptr<_1a463d137_Token> _3123_token, jule::Str _3145_fmt);
inline void _1a537e41b_pushSuggestion(_1a537d9d1_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1a4653669_TypeDecl> _1a537e6a2_buildNamespace(_1a537d9d1_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _1a537e938_buildGenerics(_1a537d9d1_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a537ebbe_identGenerics(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a537ee55_buildIdent(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a53801db_buildCppLink(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a5380472_buildFn(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a5380708_buildPtr(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a538098e_buildSptr(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a5380c25_buildSlc(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a5380eab_buildArr(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a5381242_buildMap(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a53814c8_buildEnumerable(_1a537d9d1_typeBuilder* _self_);
inline jule::Ptr<_1a4653669_TypeDecl> _1a538175e_step(_1a537d9d1_typeBuilder* _self_);
inline __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool _1a53819e5_build(_1a537d9d1_typeBuilder* _self_);
inline void _1a4a0deec_pushErr(_1a4a0d969_directiveEval* _self_, jule::Ptr<_1a463d137_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a4a0e3e8_splitOperans(_1a4a0d969_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1a463d137_Token>>* _3348_tokens);
inline jule::Bool _1a4a0e739_evalDirectiveIdent(_1a4a0d969_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a4a0ea7a_evalDirectivePart(_1a4a0d969_directiveEval* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _7837_part);
inline jule::Bool _1a4a0ed11_eval(_1a4a0d969_directiveEval* _self_);
inline jule::Ptr<_1a5382c27_Importer> static__1a5383156_New(_1a4a0c5a0_CompileInfo _4416_info);
inline jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _1a53833dc_AllPackages(_1a5382c27_Importer* _self_);
inline void _1a538382c_SetModPath(_1a5382c27_Importer* _self_, jule::Str _6126_path);
inline jule::Str _1a5383ab3_GetModPath(_1a5382c27_Importer* _self_);
inline jule::Str _1a5383e04_ModById(_1a5382c27_Importer* _self_, jule::I32 _6919_id);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a5384245_GetImport(_1a5382c27_Importer* _self_, jule::Str _7325_path);
inline __jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log _1a5384641_ImportPackage(_1a5382c27_Importer* _self_, jule::Str _8329_path, jule::Bool _8340_updateMod);
inline void _1a53848e9_Imported(_1a5382c27_Importer* _self_, jule::Ptr<_1a480c3d3_ImportInfo> _14028_imp);
inline __jule_tuple_bool__jule_tuple_s_1e71b7487_Log _1a5384d28_isPassBuildDirectives(_1a5382c27_Importer* _self_, jule::Ptr<_1a46517aa_AST>* _16742_file);
inline jule::Ptr<_1a538905d_ExprInspector> static__1a538938d_New(void);
inline void _1a5389646_args(_1a538905d_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1a53898ee_inspect(_1a538905d_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1a5389c62_Inspect(_1a538905d_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Ptr<_1a53912a7_Meta> static__1a5391692_Collect(jule::Ptr<_1a53857a7_IR> _3624_ir);
inline jule::Ptr<_1a5390d89_MetaStrBuilder> static__1a539195b_CollectStrBuilder(jule::Ptr<_1a53857a7_IR>* _4335_ir);
inline jule::Bool _1a623e71a_isAllMethodsLive(_1a623e4a6_specialCaseDefines* _self_, jule::Ptr<_1a4673ec5_Struct> _1928_s);
inline jule::Ptr<_1a6240276_ObjectDeadCode> static__1a62407e8_new(jule::Ptr<_1a53857a7_IR>* _3921_ir);
inline jule::Bool _1a96d27e2_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4676d30_StructIns>* _4527_t);
inline jule::Bool _1a96d96d9_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4721d20_FnIns>* _4527_t);
inline jule::Bool _1a970e4de_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4729476_Trait>* _4527_t);
inline jule::Bool _1a9719719_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4852e51_Var>* _4527_t);
inline void _1a96d4ecb_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4676d30_StructIns> _6532_t);
inline void _1a96dcdc4_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4721d20_FnIns> _6532_t);
inline void _1a970ee6d_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4729476_Trait> _6532_t);
inline void _1a971cb7e_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4852e51_Var> _6532_t);
inline void _1a6241167_pushStructAsLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4676d30_StructIns>* _7838_s);
inline void _1a6241420_setReferencesAsLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a47ea3d2_ReferenceStack>* _13441_rs);
inline void _1a62416c8_inits(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a480eb55_Package>* _18427_pkg);
inline void _1a6241981_collectLivePackage(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a480eb55_Package>* _19840_pkg);
inline void _1a6241b7e_collectLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_);
inline void _1a6241e37_removeDeadGlobals(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a4852e51_Var>>* _27439_vars);
inline void _1a62421e0_removeDeadFns(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a471dc62_Fn>>* _28635_funcs);
inline void _1a6242498_removeDeadStructs(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a4673ec5_Struct>>* _30739_structs);
inline void _1a6242751_removeDeadTraits(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a4729476_Trait>>* _32938_traits);
inline void _1a6242a09_removeDeadsFile(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4725065_SymTab>* _35037_file);
inline void _1a6242cb2_removeDeadsPackage(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a480eb55_Package>* _35740_pkg);
inline void _1a6242eb0_removeDeads(jule::Ptr<_1a6240276_ObjectDeadCode> _self_);
inline void _1a62431ad_collectSpecialCaseDefines(jule::Ptr<_1a6240276_ObjectDeadCode> _self_);
inline void _1a62433ab_elimanate(jule::Ptr<_1a6240276_ObjectDeadCode> _self_);
inline void _1a624480d_optimizeChild(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cba34_Scope>* _1935_s);
inline void _1a6244ab6_optimizeBodyChildExceptional(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cba34_Scope>* _2950_s);
inline void _1a6244d6e_optimizeBodyChild(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cba34_Scope>* _3939_s);
inline void _1a6245127_optimizeExprModel(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1a6245325_eliminateFollowed(_1a62442e1_scopeDeadCode* _self_);
inline void _1a62455cd_pushGoto(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cebe1_GotoSt> _6929_gt);
inline void _1a6245886_pushLabel(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47ce581_Label> _7930_l);
inline void _1a6245b3e_optimizeRangeIter(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cd86b_RangeIter> _9238_it);
inline void _1a6245de7_optimizeWhileIter(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cce20_WhileIter> _9738_it);
inline void _1a62461a0_optimizeInfIter(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cc969_InfIter> _10536_it);
inline void _1a6246458_optimizeConditional(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cc66c_Conditional> _10940_c);
inline void _1a6246711_optimizeMatch(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47d1264_Match> _12734_m);
inline void _1a62469b9_optimizeAssign(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47d0571_Assign> _14535_assign);
inline void _1a6246c72_optimizeMultiAssign(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47d0a27_MultiAssign> _15040_assign);
inline void _1a624702a_optimizeStmt(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1a6247228_optimizeStmts(jule::Ptr<_1a62442e1_scopeDeadCode> _self_);
inline _1a6248878_exprDeadCode static__1a6248c96_new(jule::Ptr<_1a62442e1_scopeDeadCode>* _1421_s);
inline void _1a624904e_optimize(_1a6248878_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1a61345ee_pushVar(_1a6134159_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1a6134940_removeVar(_1a6134159_nils* _self_, jule::Uintptr _4625_var);
inline jule::Bool _1a6134c81_isSafe(_1a6134159_nils* _self_, jule::Uintptr _6022_var);
inline jule::Ptr<_1a6136cc7_scopeOptimizer> static__1a6137338_new(jule::Ptr<_1a47cba34_Scope> _2320_scope);
inline void _1a61375e1_setCurrentStmt(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1a61377de_removeCurrent(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_);
inline jule::Bool _1a6137a75_isLastStmt(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_);
inline jule::Bool _1a6137d0b_isIter(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_);
inline void _1a61380b4_optimizeData(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a48a2753_Data> _6733_d);
inline void _1a613836c_optimizeVar(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a4852e51_Var> _10032_v);
inline void _1a6138625_optimizeConditional(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cc66c_Conditional> _12140_c);
inline void _1a6138a43_buildDefaultConstantTrueCase(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d1c8c_Case> _19549_case, jule::I32* _19573_i, jule::Ptr<_1a47d1264_Match>* _19586_m);
inline void _1a6138ceb_optimizeMatch(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d1264_Match> _22134_m);
inline void _1a61390a4_optimizeRangeIter(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cd86b_RangeIter> _30338_it);
inline void _1a613935c_optimizeWhileIter(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cce20_WhileIter> _34838_it);
inline jule::Bool _1a613969d_substr(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _35427_a);
inline jule::Bool _1a61399de_strAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _37430_a);
inline jule::Bool _1a6139d30_sliceAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _38532_a);
inline void _1a613a0d8_optimizePostfix(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d00ba_Postfix> _39336_postfix);
inline void _1a613a391_optimizeAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _40035_assign);
inline jule::Bool _1a613a6d2_tryOptimizeSwap(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _52437_assign);
inline void _1a613a98a_optimizeMultiAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0a27_MultiAssign> _56140_assign);
inline void _1a613ac43_optimizeRet(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d282b_RetSt> _60732_r);
inline void _1a613aeeb_optimizeStmt(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Any _63133_stmt);
inline void _1a613b2a4_optimizeChild(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cba34_Scope> _66034_child);
inline void _1a613b4a2_optimize(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_);
inline void static__1a613da59_optimize(jule::Any* _2226_model);
inline void static__1a613dd45_optimizeData(jule::Any* _2630_model, jule::Ptr<_1a6146d3c_data>* _2659_d);
inline jule::Bool _1a613e186_selfCmpCond(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _3828_m);
inline jule::Bool _1a613e4c7_boolCond(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _6725_m);
inline jule::Bool _1a613e818_strCond(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel> _12023_m);
inline jule::Bool _1a613ecbe_tryNeutralElement1(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _17735_m, jule::Ptr<_1a4276798_Const> _17766_c, jule::Ptr<_1a4711491_OperandExprModel>* _17792_nc);
inline jule::Bool _1a6140110_tryNeutralElement(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _22734_m);
inline void _1a61403b8_checkBinaryForBoundary(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _24239_m);
inline void _1a6140671_checkBinaryForNil(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _29434_m);
inline void _1a6140929_binary(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel> _32622_m);
inline void _1a6140bd2_unary(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a4711d65_UnaryExprModel> _43321_m);
inline void _1a6140e8a_structureLit(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a4712739_StructLitExprModel> _47628_m);
inline void _1a6141243_casting(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47130b9_CastingExprModel> _49223_m);
inline void _1a61415a6_args(_1a613d680_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _50620_params, jule::Slice<jule::Any>* _50652_args);
inline void _1a614185e_scope(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47cba34_Scope>* _52822_s);
inline void _1a6141b17_optimizeStrBuilderCall(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _53439_m);
inline void _1a6141dc0_funcCall(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471396b_FnCallExprModel> _55024_m);
inline void _1a6142178_indexing(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47142eb_IndexingExprModel> _56124_m);
inline void _1a6142431_anonFunc(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47147a2_AnonFnExprModel> _58524_m);
inline void _1a614262e_do(_1a613d680_exprOptimizer* _self_);
inline void _1a6144400_pushVar(jule::Ptr<_1a6143e5a_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1a48d54cd_Type> _2442_kind);
inline jule::Bool _1a6144741_removeVar(_1a6143e5a_dynamic* _self_, jule::Uintptr _4725_var);
inline jule::Bool _1a6144b3c_isFits(_1a6143e5a_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1a48d54cd_Type> _6136_kind);
inline _1a6146765_dataCheckpoint _1a61471e4_getCheckpoint(_1a6146d3c_data* _self_);
inline void _1a614749c_loadCheckpoint(_1a6146d3c_data* _self_, _1a6146765_dataCheckpoint* _4435_c);
inline void _1a6148ab9_pushVar(_1a6148624_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1a6149306_fitsMaxSize(_1a6148624_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1a6249a66_Optimizer> static__1a624a02d_New(jule::Ptr<_1a53857a7_IR>* _2121_ir);
inline void _1a624a2d6_optimizeExpr(_1a6249a66_Optimizer* _self_, jule::Any* _2733_model);
inline void _1a624a58e_optimizeGlobal(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a4852e51_Var>* _3135_v);
inline void _1a624a847_optimizeFunction(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a471dc62_Fn>* _3737_func);
inline void _1a624ab00_optimizeStruct(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a4673ec5_Struct>* _4735_s);
inline void _1a624ada8_optimizeGlobals(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _6336_p);
inline void _1a624b161_optimizeFunctions(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _7138_p);
inline void _1a624b419_optimizeStructs(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _7936_p);
inline void _1a624b6c2_optimizePackage(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _8736_p);
inline void _1a624b8c0_Optimize(_1a6249a66_Optimizer* _self_);
inline _1a5b9e08c_Time static__1a5b9e477_Unix(jule::U64 _9117_sec);
inline _1a5b9e08c_Time static__1a5b9e686_Now(void);
inline _1a5b9d8b6_AbsTime _1a5ba0d6e_Abs(_1a5b9e08c_Time* _self_);
inline jule::Ptr<_1a624dbe1_scopeCoder> static__1a624e3d9_new(jule::Ptr<_1a5bab61b_ObjectCoder>* _3721_oc);
inline void _1a9cbc5b3_iterHead(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1a624eab0_rangeIndexIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter>* _9336_it);
inline void _1a624ed68_rangeHashmapIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter>* _16038_it);
inline void _1a6250121_strRuneIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a6132ae7_StrRuneIter> _24332_it);
inline void _1a62503c9_ifCase(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cbe52_If> _35527_i);
inline void _1a6250682_conditional(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cc66c_Conditional> _36432_c);
inline void _1a625093a_infIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cc969_InfIter> _38428_it);
inline void _1a6250be3_whileIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cce20_WhileIter> _40130_it);
inline void _1a6250e9b_rangeIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter> _44030_it);
inline void _1a6251254_cont(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cdc01_ContSt> _45321_c);
inline void _1a625150c_label(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47ce581_Label> _45822_l);
inline void _1a62517b5_gotoSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cebe1_GotoSt> _46323_gt);
inline void _1a6251a6d_postfix(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d00ba_Postfix> _46828_p);
inline void _1a6251d26_assignLeft(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Any* _47532_model);
inline void _1a62520ce_shl(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _50724_a);
inline void _1a6252387_shr(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _51324_a);
inline void _1a6252640_divByZeroAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _51936_a);
inline void _1a6252b18_operatorOverloadingAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _52547_s, jule::Ptr<_1a4711491_OperandExprModel>* _52573_l, jule::Ptr<_1a4711491_OperandExprModel>* _5268_r, jule::U32 _52636_op);
inline void _1a6252dc1_assign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _54027_a);
inline void _1a6253179_mapLookupAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _57337_a);
inline void _1a6253432_multiAssignTup(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _60636_a);
inline void _1a62536da_multiAssignFn(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _67635_a);
inline void _1a6253993_multiAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign> _73532_a);
inline jule::Fn<void> _1a6253cd4_matchExpr(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d1264_Match> _76130_m);
inline void _1a6254147_case(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d1264_Match> _77125_m, jule::Ptr<_1a47d1c8c_Case> _77146_c);
inline void _1a6254400_matchSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d1264_Match> _84128_m);
inline void _1a62546a8_fallSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d2485_FallSt> _89623_f);
inline void _1a6254961_breakSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47ce0ca_BreakSt> _90124_b);
inline void _1a6254c19_setResult(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d282b_RetSt> _91030_r);
inline void _1a6254ec2_retSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d282b_RetSt> _93826_r);
inline void _1a625527a_var(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4852e51_Var> _97424_v);
inline void _1a6255533_mutSlicing(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a61317d8_MutSlicingExprModel> _98031_m);
inline void _1a62557db_swap(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a6130584_SwapExprModel> _99725_m);
inline void _1a6255a94_exceptionalForwarding(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a6130001_ExceptionalForwardingExprModel> _100542_m);
inline void _1a6255d4c_st(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Any _101123_st);
inline void _1a6256105_scopeStmts(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cba34_Scope>* _106732_s);
inline void _1a62563ad_scope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cba34_Scope> _107626_s);
inline void _1a6256666_commonFuncScope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _109137_f);
inline void _1a62569c9_anonFuncScope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel> _113134_m, jule::Str _113161_ident);
inline void _1a6256c82_funcScope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _116330_f);
inline jule::Ptr<_1a625a13c_exprCoder> static__1a625a538_new(jule::Ptr<_1a5bab61b_ObjectCoder>* _4821_oc);
inline void _1a625a7e1_string(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const>* _5424_c);
inline void _1a625aa99_boolean(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Bool _6924_b);
inline void _1a625ac97_nilLit(jule::Ptr<_1a625a13c_exprCoder> _self_);
inline jule::Bool _1a625b0d8_ftoaSpecialCases(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::F64* _8134_x);
inline void _1a625b391_float32(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const>* _9525_c);
inline void _1a625b649_float64(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const>* _11425_c);
inline void _1a625b902_constant(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const> _13229_c);
inline void _1a625bd20_operatorOverloadingUnary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _15646_s, jule::U32 _15667_op, jule::Any _15686_e);
inline void _1a625c23d_divByZeroBinary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a463d137_Token>* _16833_op, jule::Ptr<_1a4711491_OperandExprModel>* _16857_l, jule::Ptr<_1a4711491_OperandExprModel>* _16890_r);
inline void _1a625c936__unsafeBinary(jule::Ptr<_1a625a13c_exprCoder> _self_, _1e71a80b0_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1a48d54cd_Type>* _2088_lk, jule::Ptr<_1a48d54cd_Type>* _20830_rk, jule::U32 _20847_op, jule::Str _20862_kind);
inline void _1a625cbde_unsafeBinary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471198b_BinaryExprModel> _27833_m);
inline void _1a625d052_shl(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4711491_OperandExprModel>* _29025_l, jule::Ptr<_1a4711491_OperandExprModel>* _29058_r);
inline void _1a625d3b5_shr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4711491_OperandExprModel>* _31825_l, jule::Ptr<_1a4711491_OperandExprModel>* _31858_r);
inline void _1a625d66d_binary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471198b_BinaryExprModel> _34627_m);
inline void _1a625d926_var(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4852e51_Var> _37024_m);
inline void _1a625dbce_structureIns(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676d30_StructIns> _38633_m);
inline void _1a625de87_unary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4711d65_UnaryExprModel> _39026_m);
inline void _1a625e240_structureLit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4712739_StructLitExprModel> _42133_m);
inline void _1a625e4e8_allocStructure(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4712a36_AllocStructLitExprModel> _46435_m);
inline void _1a625e7a1_possibleRefExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _47232_expr);
inline void _1a625ebbe_castTraitFromTrait(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47130b9_CastingExprModel>* _48640_m, jule::Ptr<_1a4729476_Trait> _48672_t1, jule::Ptr<_1a4729476_Trait> _48694_t2);
inline void _1a625ee77_casting(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47130b9_CastingExprModel> _49928_m);
inline void _1a6260230_args(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _64626_m);
inline void _1a62604d8_modelForCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _67733_expr);
inline void _1a6260791_pushCallInf(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _69229_m);
inline jule::Bool _1a6260ad2_isWrapped(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _71531_m);
inline jule::Bool _1a6260e23_writeReceiver(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _73934_m);
inline void _1a62611cb_pureFuncCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _75234_m);
inline void _1a6261484_coFuncCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _84232_m);
inline void _1a62617e7_writeUseExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _92034_f, jule::Ptr<_1a48a2753_Data> _92055_d);
inline void _1a6261b5a_funcCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional);
inline void _1a6261e13_slice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4713d45_SliceExprModel> _102426_m);
inline void _1a62621bb_indexing(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47142eb_IndexingExprModel> _105329_m);
inline void _1a6262474_unsafeIndexing(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6131e6a_UnsafeIndexingExprModel> _110535_m);
inline void _1a626272c_anonFunc(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel> _112229_m);
inline void _1a62629d5_mapExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4715055_MapExprModel> _115328_m);
inline void _1a6262c8d_slicing(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47155d8_SlicingExprModel> _118928_m);
inline void _1a6263046_traitSub(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4715b6b_TraitSubIdentExprModel> _120529_m);
inline void _1a62632ee_structureSub(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471650c_StructSubIdentExprModel> _122133_m);
inline void _1a62635a7_array(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4716c7c_ArrayExprModel> _123026_m);
inline void _1a6263860_funcInsCommon(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _128034_m);
inline void _1a6263b18_funcIns(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _128728_m);
inline void _1a6263dc1_tuple(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717079_TupleExprModel> _129826_m);
inline void _1a6264179_newCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717a4c_BuiltinNewCallExprModel> _130928_m);
inline void _1a6264432_printCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717376_BuiltinPrintCallExprModel> _132130_m);
inline void _1a62646da_printlnCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717673_BuiltinPrintlnCallExprModel> _133132_m);
inline void _1a6264993_panicCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> _134130_m);
inline void _1a6264c4b_errorCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _134930_m);
inline void _1a6265004_copyCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719653_BuiltinCopyCallExprModel> _138129_m);
inline void _1a62652ac_lenCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _138928_m);
inline void _1a6265565_capCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4718da0_BuiltinCapCallExprModel> _140628_m);
inline void _1a626581d_deleteCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> _141131_m);
inline void _1a6265ac6_makeCallSlice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel>* _143635_m);
inline void _1a6265d7e_makeCallStr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel>* _146033_m);
inline void _1a6266137_makeCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> _147129_m);
inline void _1a62663e0_pushToSlice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6132344_PushToSliceExprModel> _147932_m);
inline void _1a6266698_appendToSlice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a613271d_AppendToSliceExprModel> _153934_m);
inline void _1a6266951_appendCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> _154731_m);
inline void _1a6266c09_sizeof(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719d29_SizeofExprModel> _155527_m);
inline void _1a6266eb2_alignof(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471a4cd_AlignofExprModel> _156128_m);
inline void _1a626726a_runeLit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471a6ba_RuneExprModel> _156724_m);
inline void _1a6267523_structureStatic(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47168a3_StructStaticIdentExprModel> _158136_m);
inline void _1a62677cb_backendEmit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471aa3e_BackendEmitExprModel> _158532_m);
inline void _1a6267a84_free(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471ad3b_FreeExprModel> _160125_m);
inline void _1a6267d3c_strComp(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6131255_StrCompExprModel> _161028_m);
inline void _1a62680e5_emptyCompare(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a61309a2_EmptyCompareExprModel> _162633_m);
inline void _1a626839d_unsafeDeref(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6132de4_UnsafeDerefExprModel> _163532_m);
inline void _1a6268656_unsafeCasting(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a61331e1_UnsafeCastingExprModel> _164634_m);
inline void _1a626890e_model(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _166326_m);
inline jule::Bool _1a6268c50_handleFieldByDefault(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676280_FieldIns>* _176542_f);
inline void _1a6269008_initStructLit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _178635_s);
inline void _1a62692b1_fillCollectionByDefault(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48d54cd_Type>* _180845_elem);
inline void _1a6269569_initCollection(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48d54cd_Type>* _182336_elem);
inline void _1a6269822_initArray(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48e4e16_Arr>* _183731_arr);
inline void _1a6269aca_initExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48d54cd_Type> _185129_t);
inline jule::Ptr<_1a626c6c1_TestCoder> static__1a626cb77_New(jule::Ptr<_1a5bab61b_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a626ce0d_findTestingPackage(jule::Ptr<_1a626c6c1_TestCoder> _self_);
inline void _1a626d1b6_appendTest(jule::Ptr<_1a626c6c1_TestCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _3531_f);
inline void _1a626d46e_appendPackageTests(jule::Ptr<_1a626c6c1_TestCoder> _self_, jule::Ptr<_1a480eb55_Package>* _5040_p);
inline jule::Bool _1a626d705_readyTestingPackage(jule::Ptr<_1a626c6c1_TestCoder> _self_);
inline void _1a626d903_callTmReset(jule::Ptr<_1a626c6c1_TestCoder> _self_);
inline void _1a626db01_callTmFailed(jule::Ptr<_1a626c6c1_TestCoder> _self_);
inline void _1a626dcee_callTmSkipped(jule::Ptr<_1a626c6c1_TestCoder> _self_);
inline void _1a626deec_Serialize(jule::Ptr<_1a626c6c1_TestCoder> _self_);
inline void static__1a627085b_writeIdentTo(_1e71a80b0_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1a6270c02_toOut(_1e71a80b0_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1a6271153_toLocal(_1e71a80b0_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident);
inline void static__1a627143e_func(_1e71a80b0_Builder* _7722_buf, jule::Ptr<_1a471dc62_Fn>* _7750_f);
inline void static__1a627172a_funcIns(_1e71a80b0_Builder* _9525_buf, jule::Ptr<_1a4721d20_FnIns>* _9553_f);
inline void static__1a6271a16_traitDecl(_1e71a80b0_Builder* _11027_buf, jule::Ptr<_1a4729476_Trait> _11050_t);
inline void static__1a6271d02_param(_1e71a80b0_Builder* _11423_buf, jule::Ptr<_1a471c28d_Param>* _11447_p);
inline void static__1a62720dd_structure(_1e71a80b0_Builder* _12927_buf, jule::Ptr<_1a4673ec5_Struct>* _12951_s);
inline void static__1a62723c9_structureIns(_1e71a80b0_Builder* _14030_buf, jule::Ptr<_1a4676d30_StructIns>* _14054_s);
inline void static__1a62726b5_field(_1e71a80b0_Builder* _14823_buf, jule::Ptr<_1a46710d2_Field>* _14847_f);
inline void static__1a62729a1_var(_1e71a80b0_Builder* _15821_buf, jule::Ptr<_1a4852e51_Var> _15848_v);
inline void static__1a6272c8c_iterBegin(_1e71a80b0_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1a6273078_iterEnd(_1e71a80b0_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1a6273364_iterNext(_1e71a80b0_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1a6273650_label(_1e71a80b0_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1a627393b_matchEnd(_1e71a80b0_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1a6273c27_caseBegin(_1e71a80b0_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1a5bab61b_ObjectCoder> static__1a5baba7d_New(jule::Ptr<_1a53857a7_IR>* _12021_ir, _1a5ba8d66_SerializationInfo _12035_info);
inline void _1a5babd36_write(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Str _13322_s);
inline void _1a5bac0de_writeBytes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b);
inline void _1a5bac2dc_addIndent(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bac4da_doneIndent(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bac6d8_indent(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline jule::I32 _1a5baca29_findAnyType(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a48d54cd_Type>* _15633_t);
inline jule::I32 _1a5bacd6a_pushCoSpawn(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _16532_f);
inline jule::I32 _1a5bad1ab_pushDealloc(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a48d54cd_Type> _26832_t);
inline jule::Str _1a5bad4ec_pushAnonFn(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel>* _28432_m);
inline jule::I32 _1a5bad83d_pushAnyType(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a48d54cd_Type> _32632_t);
inline void _1a5badae6_pushResultIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _43135_f);
inline void _1a5badd9e_pushResult(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _45232_f);
inline void _1a5bae212_pushAndWriteMaskMapper(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4729476_Trait> _46543_t1, jule::Ptr<_1a4729476_Trait> _46565_t2);
inline void _1a5bae4ba_locInfo(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a463d137_Token>* _51625_t);
inline void _1a5bae6b8_head(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bae971_links(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Bool _58322_std);
inline void _1a5baec29_prepareStructure(_1a5bab61b_ObjectCoder* _self_, jule::Ptr<_1a4673ec5_Struct>* _60637_s);
inline void _1a5baee27_prepareStructures(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb01d0_structurePlainDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4673ec5_Struct>* _63740_s);
inline void _1a5bb03cd_structurePlainDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb0686_fieldDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676280_FieldIns>* _65331_f);
inline void _1a5bb0aa4_structureOperatorEq(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Str _66036_ident, jule::Ptr<_1a4676d30_StructIns>* _66053_s, jule::Bool _66074_decl);
inline void _1a5bb0e17_structureOperators(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _72840_s, jule::Bool _72861_decl);
inline void _1a5bb11c0_structureInsDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _73738_s);
inline void _1a5bb1478_structureDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4673ec5_Struct>* _76335_s);
inline void _1a5bb1676_structureDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb1874_structureMethodDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb1d4c_funcHead(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _79730_buf, jule::Ptr<_1a4721d20_FnIns>* _79758_f, jule::Bool _79775_ptr, jule::Str _79786_ident);
inline void _1a5bb21b0_funcDeclIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _81633_f, jule::Bool _81650_ptr);
inline void _1a5bb2523_funcDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _82430_f, jule::Bool _82444_ptr);
inline void _1a5bb27cb_funcDeclTrait(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _83035_f);
inline void _1a5bb29c9_funcDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb2c82_traitDataTypeMethods(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a5ba9a7b_traitHash>* _85242_hash);
inline void _1a5bb2e80_traitDataTypes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb32e3_paramIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _88030_buf, jule::Ptr<_1a4720bba_ParamIns>* _88058_p);
inline void _1a5bb3656_paramsIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _88631_buf, jule::Ptr<_1a4721d20_FnIns>* _88659_f);
inline void _1a5bb39b9_varInitExpr(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4852e51_Var>* _90733_v, jule::Fn<void> _90748_init);
inline void _1a5bb3c72_var(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4852e51_Var> _92524_v);
inline void _1a5bb40d5_anonFuncInsDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel>* _95637_m, jule::Str _95664_ident);
inline void _1a5bb4448_anonFuncIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel>* _96233_m, jule::Str _96260_ident);
inline void _1a5bb47ab_funcIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _97228_f, jule::Str _97245_ident);
inline void _1a5bb4a64_func(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _98226_f);
inline void _1a5bb4dc7_funcTrait(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _98827_s, jule::Ptr<_1a4721d20_FnIns>* _98853_f);
inline __jule_tuple_x_1a4721d20_FnIns__jule_tuple_bool _1a5bb5218_findTraitMetMap(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _100337_m);
inline void _1a5bb557b_traitWrapper(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4729476_Trait>* _101534_t, jule::Ptr<_1a471dc62_Fn>* _101556_m);
inline void _1a5bb5779_traitWrappers(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb5adc_traitDataMethods(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a5ba9a7b_traitHash>* _107938_hash, jule::Ptr<_1a4676d30_StructIns> _107956_s);
inline void _1a5bb600a_traitData(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a5ba9a7b_traitHash>* _109731_hash, jule::I32 _109749_i, jule::Ptr<_1a4676d30_StructIns>* _109762_s);
inline void _1a5bb6208_traitDatas(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb6406_globalDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb6604_decls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb68ac_structureMethods(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _115738_s);
inline void _1a5bb6b65_structureIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _116434_s);
inline void _1a5bb6e1d_structure(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4673ec5_Struct>* _117031_s);
inline void _1a5bb711b_structures(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb7319_funcs(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb75c2_pushInit(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a480eb55_Package>* _120930_pkg);
inline void _1a5bb77c0_anonHashes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb79bd_initGlobals(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb7bbb_initCaller(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb7db9_end(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb8172_buildTraitHash(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4729476_Trait>* _128136_t);
inline void _1a5bb8370_buildTraitHashes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb86d3_insertBuf(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _131131_buf, jule::I32 _131154_pos);
inline void _1a5bb88d1_implementRC(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb8ace_serializeHead(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline void _1a5bb8ccc_Serialize(jule::Ptr<_1a5bab61b_ObjectCoder> _self_);
inline jule::Str _1a5bbadcd_Str(_1a5bba9d2_customType* _self_);
inline jule::Bool _1a5bbb21e_Equal(jule::Ptr<_1a5bba9d2_customType> _self_, jule::Ptr<_1a48d54cd_Type> _2518_k);
inline jule::Ptr<_1a5bbb61a_typeCoder> static__1a5bbbb6a_new(jule::Ptr<_1a5bab61b_ObjectCoder>* _5021_oc);
inline void _1a5bbbecd_toType(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _5727_buf, jule::Str _5754_id);
inline void _1a5bbc341_prim(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _7125_buf, jule::Ptr<_1a48dd5e6_Prim> _7148_p);
inline void _1a5bbc6a4_tuple(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _7626_buf, jule::Ptr<_1a48e36d9_Tuple> _7653_t);
inline void _1a5bbca17_asSptr(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1a5bbcd7a_sptr(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _9525_buf, jule::Ptr<_1a48e2122_Sptr> _9552_sptr);
inline void _1a5bbd1dd_ptr(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _10224_buf, jule::Ptr<_1a48e58d9_Ptr> _10251_p);
inline void _1a5bbd551_enumDecl(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _11329_buf, jule::Ptr<_1a472bb2c_Enum> _11356_e);
inline void _1a5bbd8b4_typeEnumDecl(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _11833_buf, jule::Ptr<_1a472d337_TypeEnum> _11860_e);
inline void _1a5bbdc27_asSlice(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _12228_buf, jule::Ptr<_1a48d54cd_Type> _12255_elem);
inline void _1a5bbe08a_slice(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _12926_buf, jule::Ptr<_1a48e2ae5_Slc> _12953_s);
inline void _1a5bbe3ed_mapType(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _13428_buf, jule::Ptr<_1a48e4289_Map> _13455_m);
inline void _1a5bbeac4_structureIns(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _14833_buf, jule::Ptr<_1a4676d30_StructIns> _14860_s);
inline void _1a5bbee37_array(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _17226_buf, jule::Ptr<_1a48e4e16_Arr> _17253_a);
inline void _1a5bc060d_paramIns(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _19529_buf, jule::Ptr<_1a4720bba_ParamIns>* _19557_p);
inline void _1a5bc0cd4_funcInsResult(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _22734_s, jule::Ptr<_1a4721d20_FnIns>* _22760_f);
inline void _1a5bc1147_anonFunc(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _24529_buf, jule::Ptr<_1a4721d20_FnIns> _24556_f);
inline void _1a5bc14aa_func(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _26625_buf, jule::Ptr<_1a4721d20_FnIns> _26652_f);
inline void _1a5bc181d_kind(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _27325_buf, jule::Ptr<_1a48d54cd_Type> _27352_k);
inline jule::Ptr<_1a5bc4205_resultCoder> static__1a5bc4711_new(jule::Ptr<_1a5bbb61a_typeCoder>* _34121_tc);
inline void _1a5bc4a74_ptr(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _34524_s, jule::Ptr<_1a48e58d9_Ptr> _34549_p);
inline void _1a5bc4dd7_sptr(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _35025_s, jule::Ptr<_1a48e2122_Sptr> _35050_p);
inline void _1a5bc524a_mapType(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _35528_s, jule::Ptr<_1a48e4289_Map> _35553_p);
inline void _1a5bc55ad_slice(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _36126_s, jule::Ptr<_1a48e2ae5_Slc> _36151_slc);
inline void _1a5bc5921_arr(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _36624_s, jule::Ptr<_1a48e4e16_Arr> _36649_arr);
inline void _1a5bc5c84_func(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _37225_s, jule::Ptr<_1a4721d20_FnIns> _37250_f);
inline void _1a5bc60e7_tup(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _38524_s, jule::Ptr<_1a48e36d9_Tuple> _38549_tup);
inline void _1a5bc645a_codeMut(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _39228_s, jule::Ptr<_1a48d54cd_Type>* _39254_t);
inline void _1a5bc67bd_codeMut1(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _43229_s, jule::Ptr<_1a48d54cd_Type>* _43255_t);
inline jule::Slice<jule::U8> _1a5bc6acb_code(_1a5bc4205_resultCoder* _self_, jule::Ptr<_1a48d54cd_Type>* _44125_t);
inline jule::Str _1aa3a8660_Name(_1aa3a8374_Flag* _self_);
inline jule::Str _1aa3a87a3_What(_1aa3a8374_Flag* _self_);
inline void _1aa3a88e6_Reset(_1aa3a8374_Flag* _self_);
inline jule::I32 _1aa3a8a39_Short(_1aa3a8374_Flag* _self_);
inline jule::Str _1aa3ab883_Name(_1aa3abc07_Flag* _self_);
inline jule::Str _1aa3abee3_What(_1aa3abc07_Flag* _self_);
inline void _1aa3ac136_Reset(_1aa3abc07_Flag* _self_);
inline jule::I32 _1aa3ac279_Short(_1aa3abc07_Flag* _self_);
inline jule::Str _1aa3b0090_Name(_1aa3b0414_Flag* _self_);
inline jule::Str _1aa3b0700_What(_1aa3b0414_Flag* _self_);
inline void _1aa3b0843_Reset(_1aa3b0414_Flag* _self_);
inline jule::I32 _1aa3b0986_Short(_1aa3b0414_Flag* _self_);
inline jule::Str _1aa3b37e1_Name(_1aa3b3b65_Flag* _self_);
inline jule::Str _1aa3b3e51_What(_1aa3b3b65_Flag* _self_);
inline void _1aa3b4094_Reset(_1aa3b3b65_Flag* _self_);
inline jule::I32 _1aa3b41d7_Short(_1aa3b3b65_Flag* _self_);
inline jule::Str _1aa3b6eed_Name(_1aa3b7372_Flag* _self_);
inline jule::Str _1aa3b765d_What(_1aa3b7372_Flag* _self_);
inline void _1aa3b77a1_Reset(_1aa3b7372_Flag* _self_);
inline jule::I32 _1aa3b78e4_Short(_1aa3b7372_Flag* _self_);
inline jule::Ptr<_1a5c393ad_FlagSet> static__1a5c396cc_New(void);
inline jule::Trait _1a5c39b83_FindFlag(_1a5c393ad_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1a5c39ec4_FindFlagShort(_1a5c393ad_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a5c3a59b_Parse(_1a5c393ad_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1aa3b7372_Flag> _1aa44b071_addFlagCommon(_1a5c393ad_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1aa3b3b65_Flag> _1aa455146_addFlagCommon(_1a5c393ad_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1aa448843_AddVar(_1a5c393ad_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1aa45295c_AddVar(_1a5c393ad_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1aa3ceea0_parseInteger(_1a5c3bd72_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1aa3d7a79_parseInteger(_1a5c3bd72_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _1a5c3c6be_getData(_1a5c3bd72_argParser* _self_);
inline jule::VoidExceptional _1a5c3c944_processFlag(_1a5c3bd72_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1a5c3cbec_singleDash(_1a5c3bd72_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1a5c3cea5_doubleDash(_1a5c3bd72_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1a5c3d1a3_tryArg(_1a5c3bd72_argParser* _self_);
inline jule::VoidExceptional _1a5c3d3a1_parse(_1a5c3bd72_argParser* _self_);
inline jule::Exceptional<jule::Slice<_1cd5ae502_Dir>> static__1ce791936_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1ce791b34_Create(jule::Str _3919_path);
inline jule::VoidExceptional static__1ce791d65_Remove(jule::Str _5319_path);
inline __jule_tuple_x_1a53857a7_IR__jule_tuple_s_1e71b7487_Log static__1a5385c80_Build(jule::Str _3018_path, jule::I32 _3029_flags);
inline void _1a5386269_appendStructs(_1a53857a7_IR* _self_, jule::Ptr<_1a480eb55_Package>* _6830_p, jule::Slice<jule::Ptr<_1a4673ec5_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _1a5386500_GetAllStructures(_1a53857a7_IR* _self_);
inline void _1a5386863_appendGlobals(_1a53857a7_IR* _self_, jule::Ptr<_1a480eb55_Package>* _9130_p, jule::Slice<jule::Ptr<_1a4852e51_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1a4852e51_Var>> _1a5386ae9_GetAllGlobals(_1a53857a7_IR* _self_);
inline void _1a5386ce7_Order(_1a53857a7_IR* _self_);
inline jule::Ptr<_1cd5b00b3_Cmd> static__1cd5b0514_New(jule::Str _3516_path);
inline jule::VoidExceptional _1cd5b0712_Spawn(_1cd5b00b3_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1cd5b0b96_Wait(_1cd5b00b3_Cmd* _self_);
inline jule::VoidExceptional _1cd618e85_spawn(_1cd5b00b3_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1cd619419_wait(_1cd5b00b3_Cmd* _self_);
inline jule::I32 _1e73770e7_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _1e73773b1_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _1e7377702_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _1e7377988_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _1e7377d0c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _1e7378093_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _1e73783a1_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _1e737866a_U16PtrToStr(jule::U16* _4623_s);
inline jule::I32 _1e72e53c8_GetLastErrno(void);
inline jule::Uintptr _1e73a53cd_GetStdHandle(jule::Uintptr _6517_stdh);
inline jule::Bool _1e73a5697_CloseHandle(jule::Uintptr _6623_stdh);
inline jule::I32 _1e73a5a1b_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat);
inline jule::I32 _1e73a5e4a_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode);
inline jule::U32 _1e73a6159_GetLastError(void);
inline jule::U32 _1e73a64cd_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff);
inline jule::Bool _1e73a6a61_DeleteFile(jule::U16* _9422_path);
inline jule::Bool _1e73a6d2a_CreateDirectory(jule::U16* _9927_path);
inline jule::Bool _1e73a70e4_RemoveDirectory(jule::U16* _10427_path);
inline jule::U32 _1e73a75cd_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname);
inline jule::Bool _1e73a7952_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode);
inline jule::Bool _1e73a805c_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode);
inline jule::Bool _1e73a85ac_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved);
inline jule::Bool _1e73a8a96_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed);
inline jule::Uintptr _1e73a9129_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data);
inline jule::I32 _1e73a949d_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data);
inline jule::I32 _1e73a9767_FindClose(jule::Uintptr _15514_h);
inline jule::I32 _1e73ab78b_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1e73abb65_Close(jule::I32 _2510_handle);
inline jule::I32 _1e73ac01c_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1e73ac24d_Exit(jule::I32 _339_code);
inline jule::Str _1e73bb9dd_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1a6621525_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1e73d2bad_StrBytes(jule::Str _4013_s);
inline jule::Str _1e73d2e44_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1e73d320d_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1cc6215cb_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1cc62191c_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1cc621e6c_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I32 _1cc622236_RuneLen(jule::I32 _35212_r);
inline jule::I32 _1cc6226ba_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _1cc6229b7_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1cc622d3b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1cc6233be_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1cc623688_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1cc793088_LeadingZeros64(jule::U64 _5919_x);
inline jule::I32 _1cc793ece_TrailingZeros(jule::U32 _8118_x);
inline jule::I32 _1cc7948b4_TrailingZeros32(jule::U32 _10320_x);
inline jule::I32 _1cc794b7d_TrailingZeros64(jule::U64 _11220_x);
inline jule::I32 _1cc79a656_Len32(jule::U32 _35014_x);
inline jule::I32 _1cc79a920_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1cc79b6ac_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1cc79ceb6_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1e60155e4_f64bits(jule::F64 _612_f);
inline jule::I32 _1e70e1746_randInt(jule::U64 _716_seed, jule::I32 _727_max);
inline jule::Bool _1a6922738_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1a6970ce7_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1a77ba5ad_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1a9b977e0_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n);
inline void _1cc6243d1__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I32 _1cc624799_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I32 _1cc624b1d_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf);
inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf);
inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf);
inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf);
inline jule::U32 _1a67499c2_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo);
inline jule::U32 _1a6749b8c_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo);
inline jule::Slice<jule::Str> _1cc62b372_args(void);
inline jule::Str _1cc62b828_executable(void);
inline jule::U32* __jule_RCNew(void);
inline jule::U32 __jule_RCLoad(jule::U32* _4019_p);
inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p);
inline void __jule_RCAdd(jule::U32* _5722_p);
inline void __jule_RCAddAtomic(jule::U32* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U32* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p);
inline void __jule_RCFree(jule::U32* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I32 _1cc6364c0_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1aa418c75_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1aa40db16_structToStr(_1e71a80b0_Builder _17519_x);
inline jule::Str _1a68ca4d2_toStr(jule::Any _21613_x);
inline jule::Str _1a68cc6b0_toStr(jule::Str _21613_x);
inline jule::Str _1a68cce0d_toStr(jule::I32 _21613_x);
inline jule::Str _1a68d2bb0_toStr(jule::I8 _21613_x);
inline jule::Str _1a68d08e4_toStr(jule::I16 _21613_x);
inline jule::Str _1a68d80c2_toStr(jule::I32 _21613_x);
inline jule::Str _1a68daaa8_toStr(jule::I64 _21613_x);
inline jule::Str _1a68dd605_toStr(jule::U32 _21613_x);
inline jule::Str _1a68db119_toStr(jule::Uintptr _21613_x);
inline jule::Str _1a68e12d9_toStr(jule::U8 _21613_x);
inline jule::Str _1a68e372b_toStr(jule::U16 _21613_x);
inline jule::Str _1a68e5b6d_toStr(jule::U32 _21613_x);
inline jule::Str _1a68e80b0_toStr(jule::U64 _21613_x);
inline jule::Str _1a68eb48c_toStr(jule::F32 _21613_x);
inline jule::Str _1a68eb811_toStr(jule::F64 _21613_x);
inline jule::Str _1a68d849b_toStr(jule::Bool _21613_x);
inline jule::Str _1a76806e8_toStr(jule::I32 _21613_x);
inline jule::Str _1a768b935_toStr(jule::I32 _21613_x);
inline jule::Str _1a76c086a_toStr(jule::I32 _21613_x);
inline jule::Str _1a7859a26_toStr(jule::I32 _21613_x);
inline jule::Str _1a4b13d16_toStr(jule::Ptr<_1a4852e51_Var> _21613_x);
inline jule::Str _1a4b163ac_toStr(jule::Ptr<_1a48d46db_TypeAlias> _21613_x);
inline jule::Str _1a4b19d50_toStr(jule::Ptr<_1a4673ec5_Struct> _21613_x);
inline jule::Str _1a4b1d617_toStr(jule::Ptr<_1a471dc62_Fn> _21613_x);
inline jule::Str _1a4b221cb_toStr(jule::Ptr<_1a4729476_Trait> _21613_x);
inline jule::Str _1a4b25795_toStr(jule::Ptr<_1a472bb2c_Enum> _21613_x);
inline jule::Str _1a4b28d4d_toStr(jule::Ptr<_1a472d337_TypeEnum> _21613_x);
inline jule::Str _1a4b474ba_toStr(jule::Ptr<_1a46710d2_Field> _21613_x);
inline jule::Str _1a4b59686_toStr(jule::Ptr<_1a4276798_Const> _21613_x);
inline jule::Str _1a4b738ae_toStr(jule::Ptr<_1a472b0c1_EnumItem> _21613_x);
inline jule::Str _1a4b84eca_toStr(jule::Ptr<_1a471c28d_Param> _21613_x);
inline jule::Str _1a838673e_toStr(jule::Str _21613_x);
inline jule::Str _1a845e74b_toStr(jule::Ptr<_1a4653c74_IdentTypeDecl> _21613_x);
inline jule::Str _1a8476ab5_toStr(jule::Ptr<_1a4717079_TupleExprModel> _21613_x);
inline jule::Str _1a847905c_toStr(jule::Ptr<_1a4658592_TupleExpr> _21613_x);
inline jule::Str _1a8488e4b_toStr(jule::Ptr<_1a4662117_AssignSt> _21613_x);
inline jule::Str _1a848bee8_toStr(jule::Ptr<_1a465799d_Expr> _21613_x);
inline jule::Str _1a848b5be_toStr(jule::Ptr<_1a47d00ba_Postfix> _21613_x);
inline jule::Str _1a8491e10_toStr(jule::Ptr<_1a47d0571_Assign> _21613_x);
inline jule::Str _1a848e4d4_toStr(jule::Ptr<_1a47d0a27_MultiAssign> _21613_x);
inline jule::Str _1a84975ec_toStr(jule::Ptr<_1a48a2753_Data> _21613_x);
inline jule::Str _1a849ac4e_toStr(jule::Ptr<_1a471396b_FnCallExprModel> _21613_x);
inline jule::Str _1a7ac9a54_toStr(jule::Ptr<_1a47ce581_Label> _21613_x);
inline jule::Str _1a7ae8479_toStr(jule::Ptr<_1a47cba34_Scope> _21613_x);
inline jule::Str _1a7b02917_toStr(jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _21613_x);
inline jule::Str _1a7b0707b_toStr(jule::Ptr<_1a471aa3e_BackendEmitExprModel> _21613_x);
inline jule::Str _1a7b07785_toStr(jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> _21613_x);
inline jule::Str _1a7b0a0a1_toStr(jule::Ptr<_1a4717376_BuiltinPrintCallExprModel> _21613_x);
inline jule::Str _1a7b07257_toStr(jule::Ptr<_1a4717673_BuiltinPrintlnCallExprModel> _21613_x);
inline jule::Str _1a7b10a24_toStr(jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> _21613_x);
inline jule::Str _1a7b14a28_toStr(jule::Ptr<_1a4719653_BuiltinCopyCallExprModel> _21613_x);
inline jule::Str _1a7b16167_toStr(jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> _21613_x);
inline jule::Str _1a7b1a1c1_toStr(jule::Ptr<_1a471ad3b_FreeExprModel> _21613_x);
inline jule::Str _1a7b25ae4_toStr(jule::Ptr<_1a47cc66c_Conditional> _21613_x);
inline jule::Str _1a7b314c3_toStr(jule::Ptr<_1a47cc969_InfIter> _21613_x);
inline jule::Str _1a7b37331_toStr(jule::Ptr<_1a47cce20_WhileIter> _21613_x);
inline jule::Str _1a7b5de4b_toStr(jule::Ptr<_1a47cd86b_RangeIter> _21613_x);
inline jule::Str _1a7b6da60_toStr(jule::Ptr<_1a4667a35_WhileKind> _21613_x);
inline jule::Str _1a7b716cd_toStr(jule::Ptr<_1a466843c_RangeKind> _21613_x);
inline jule::Str _1a84d70a9_toStr(jule::Ptr<_1a47cdc01_ContSt> _21613_x);
inline jule::Str _1a84e0e5e_toStr(jule::Ptr<_1a47cebe1_GotoSt> _21613_x);
inline jule::Str _1a8527094_toStr(jule::Ptr<_1a46592b8_IdentExpr> _21613_x);
inline jule::Str _1a853bbad_toStr(jule::Ptr<_1a47142eb_IndexingExprModel> _21613_x);
inline jule::Str _1a8585399_toStr(jule::Ptr<_1a47d1264_Match> _21613_x);
inline jule::Str _1a8223136_toStr(jule::Ptr<_1a47d2485_FallSt> _21613_x);
inline jule::Str _1a7dcd4b7_toStr(jule::Ptr<_1a47ce0ca_BreakSt> _21613_x);
inline jule::Str _1a7dd4b61_toStr(jule::Ptr<_1a47d282b_RetSt> _21613_x);
inline jule::Str _1a7dde5d8_toStr(jule::Ptr<_1a4663767_ScopeTree> _21613_x);
inline jule::Str _1a7dde86e_toStr(jule::Ptr<_1a46665b1_VarDecl> _21613_x);
inline jule::Str _1a7de4ae9_toStr(jule::Ptr<_1a466a263_TypeAliasDecl> _21613_x);
inline jule::Str _1a7de847c_toStr(jule::Ptr<_1a4669a26_Conditional> _21613_x);
inline jule::Str _1a7dec5b3_toStr(jule::Ptr<_1a466720a_Iter> _21613_x);
inline jule::Str _1a7deeb59_toStr(jule::Ptr<_1a4668be0_ContSt> _21613_x);
inline jule::Str _1a7debc22_toStr(jule::Ptr<_1a4660c4d_LabelSt> _21613_x);
inline jule::Str _1a7e02d49_toStr(jule::Ptr<_1a4661127_GotoSt> _21613_x);
inline jule::Str _1a7e0947c_toStr(jule::Ptr<_1a466b033_MatchCase> _21613_x);
inline jule::Str _1a7e0c958_toStr(jule::Ptr<_1a4661424_FallSt> _21613_x);
inline jule::Str _1a7e11792_toStr(jule::Ptr<_1a4668816_BreakSt> _21613_x);
inline jule::Str _1a7e13d38_toStr(jule::Ptr<_1a466698a_RetSt> _21613_x);
inline jule::Str _1a7e17b72_toStr(jule::Ptr<_1a4658372_UseExpr> _21613_x);
inline jule::Str _1a86dd6cd_toStr(jule::Ptr<_1a4670125_Impl> _21613_x);
inline jule::Str _1a86e3293_toStr(jule::Ptr<_1a466e278_StructDecl> _21613_x);
inline jule::Str _1a86e62a7_toStr(jule::Ptr<_1a4665406_FnDecl> _21613_x);
inline jule::Str _1a86e9970_toStr(jule::Ptr<_1a466e9b5_TraitDecl> _21613_x);
inline jule::Str _1a8700a20_toStr(jule::Ptr<_1a466c62d_EnumDecl> _21613_x);
inline jule::Str _1a87030e9_toStr(jule::Ptr<_1a466d5b8_TypeEnumDecl> _21613_x);
inline jule::Str _1a872b221_toStr(jule::Ptr<_1a471650c_StructSubIdentExprModel> _21613_x);
inline jule::Str _1a872b9a2_toStr(jule::Ptr<_1a4711d65_UnaryExprModel> _21613_x);
inline jule::Str _1a875e95d_toStr(jule::Ptr<_1a4721d20_FnIns> _21613_x);
inline jule::Str _1a795910e_toStr(jule::Ptr<_1a4656183_MapTypeDecl> _21613_x);
inline jule::Str _1a795e994_toStr(jule::Ptr<_1a4654d96_TupleTypeDecl> _21613_x);
inline jule::Str _1a7972da3_toStr(jule::Ptr<_1a4655935_ArrTypeDecl> _21613_x);
inline jule::Str _1a859197c_toStr(jule::Ptr<_1a4654a99_SlcTypeDecl> _21613_x);
inline jule::Str _1a85981e2_toStr(jule::Ptr<_1a4655193_PtrTypeDecl> _21613_x);
inline jule::Str _1a859e3b3_toStr(jule::Ptr<_1a4654714_SptrTypeDecl> _21613_x);
inline jule::Str _1a85e9ebe_toStr(jule::Ptr<_1a4659e34_VariadicExpr> _21613_x);
inline jule::Str _1a8600c50_toStr(jule::Ptr<_1a4713d45_SliceExprModel> _21613_x);
inline jule::Str _1a861aac2_toStr(jule::Ptr<_1a465c1bc_FieldExprPair> _21613_x);
inline jule::Str _1a86245e2_toStr(jule::Ptr<_1a465d7c8_KeyValPair> _21613_x);
inline jule::Str _1a894722d_toStr(jule::Ptr<_1a465b6c7_FnCallExpr> _21613_x);
inline jule::Str _1a8959e44_toStr(jule::Ptr<_1a4712a36_AllocStructLitExprModel> _21613_x);
inline jule::Str _1a896cebd_toStr(jule::Ptr<_1a47130b9_CastingExprModel> _21613_x);
inline jule::Str _1a8985865_toStr(jule::Ptr<_1a47168a3_StructStaticIdentExprModel> _21613_x);
inline jule::Str _1a898802c_toStr(jule::Ptr<_1a465aab1_SubIdentExpr> _21613_x);
inline jule::Str _1a8994c92_toStr(jule::Ptr<_1a4712739_StructLitExprModel> _21613_x);
inline jule::Str _1a89b6b1b_toStr(jule::Ptr<_1a471a6ba_RuneExprModel> _21613_x);
inline jule::Str _1a89d9a0c_toStr(jule::Ptr<_1a4676d30_StructIns> _21613_x);
inline jule::Str _1a79b06d7_toStr(jule::Ptr<_1a48d54cd_Type> _21613_x);
inline jule::Str _1a79d2c15_toStr(jule::Ptr<_1a4716c7c_ArrayExprModel> _21613_x);
inline jule::Str _1a7a1be19_toStr(jule::Ptr<_1a465403d_SubIdentTypeDecl> _21613_x);
inline jule::Str _1a7a21528_toStr(jule::Ptr<_1a4659a5a_UnaryExpr> _21613_x);
inline jule::Str _1a8a5cde3_toStr(jule::Ptr<_1a4653669_TypeDecl> _21613_x);
inline jule::Str _1a8a626bc_toStr(jule::Ptr<_1a465a6d7_NamespaceExpr> _21613_x);
inline jule::Str _1a8a6953c_toStr(jule::Ptr<_1a4654417_NamespaceTypeDecl> _21613_x);
inline jule::Str _1a8a226d2_toStr(jule::Ptr<_1a47155d8_SlicingExprModel> _21613_x);
inline jule::Str _1a8c01927_toStr(jule::Ptr<_1a465e004_SliceExpr> _21613_x);
inline jule::Str _1a8c6cb5d_toStr(jule::Ptr<_1a4715b6b_TraitSubIdentExprModel> _21613_x);
inline jule::Str _1a8d73cca_toStr(jule::Ptr<_1a4715055_MapExprModel> _21613_x);
inline jule::Str _1a8d8436d_toStr(jule::Ptr<_1a47147a2_AnonFnExprModel> _21613_x);
inline jule::Str _1a8d8b430_toStr(jule::Ptr<_1a4657c67_RangeExpr> _21613_x);
inline jule::Str _1a8d8e587_toStr(jule::Ptr<_1a4658938_LitExpr> _21613_x);
inline jule::Str _1a8d9467a_toStr(jule::Ptr<_1a4658d12_UnsafeExpr> _21613_x);
inline jule::Str _1a8d92788_toStr(jule::Ptr<_1a465e961_IndexingExpr> _21613_x);
inline jule::Str _1a8d97529_toStr(jule::Ptr<_1a46600c1_SlicingExpr> _21613_x);
inline jule::Str _1a8d9a75d_toStr(jule::Ptr<_1a465a30d_CastExpr> _21613_x);
inline jule::Str _1a8da1962_toStr(jule::Ptr<_1a465c9e7_StructLit> _21613_x);
inline jule::Str _1a8da7bee_toStr(jule::Ptr<_1a465ce9d_BraceLit> _21613_x);
inline jule::Str _1a8daa5a3_toStr(jule::Ptr<_1a465b067_BinaryExpr> _21613_x);
inline jule::Str _1a8eec591_toStr(jule::Ptr<_1a471198b_BinaryExprModel> _21613_x);
inline jule::Str _1a925e6e3_toStr(jule::Ptr<_1a4717a4c_BuiltinNewCallExprModel> _21613_x);
inline jule::Str _1a9275374_toStr(jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> _21613_x);
inline jule::Str _1a92a9e58_toStr(jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _21613_x);
inline jule::Str _1a92c4c31_toStr(jule::Ptr<_1a4718da0_BuiltinCapCallExprModel> _21613_x);
inline jule::Str _1a931b8d2_toStr(jule::Ptr<_1a4719d29_SizeofExprModel> _21613_x);
inline jule::Str _1a93258db_toStr(jule::Ptr<_1a471a4cd_AlignofExprModel> _21613_x);
inline jule::Str _1a8b58ad2_toStr(jule::Str _21613_x);
inline jule::Str _1a91665b7_toStr(jule::Ptr<_1a6130001_ExceptionalForwardingExprModel> _21613_x);
inline jule::Str _1a91a00b2_toStr(jule::Ptr<_1a6132ae7_StrRuneIter> _21613_x);
inline jule::Str _1a91a7a26_toStr(jule::Ptr<_1a61317d8_MutSlicingExprModel> _21613_x);
inline jule::Str _1a91cec6d_toStr(jule::Ptr<_1a613271d_AppendToSliceExprModel> _21613_x);
inline jule::Str _1a91d25bc_toStr(jule::Ptr<_1a6132344_PushToSliceExprModel> _21613_x);
inline jule::Str _1a91e01bd_toStr(jule::Ptr<_1a6130584_SwapExprModel> _21613_x);
inline jule::Str _1a922e6b3_toStr(jule::Ptr<_1a61309a2_EmptyCompareExprModel> _21613_x);
inline jule::Str _1a9232441_toStr(jule::Ptr<_1a6131255_StrCompExprModel> _21613_x);
inline jule::Str _1a9ab7886_toStr(jule::Ptr<_1a6131b6d_UnsafeBinaryExprModel> _21613_x);
inline jule::Str _1a9ac0c35_toStr(jule::Ptr<_1a6132de4_UnsafeDerefExprModel> _21613_x);
inline jule::Str _1a9ac76cb_toStr(jule::Ptr<_1a6130c9e_RefExprModel> _21613_x);
inline jule::Str _1a9acbc74_toStr(jule::Ptr<_1a4712393_StructArgExprModel> _21613_x);
inline jule::Str _1a9ad353e_toStr(jule::Ptr<_1a61331e1_UnsafeCastingExprModel> _21613_x);
inline jule::Str _1a9ae111d_toStr(jule::Ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel> _21613_x);
inline jule::Str _1a9aeb931_toStr(jule::Ptr<_1a6131e6a_UnsafeIndexingExprModel> _21613_x);
inline jule::Str _1aa16c16b_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1aa408b55_toStr(_1e71a80b0_Builder _21613_x);
inline jule::Str _1aa41549c_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1aa41084e_toStr(jule::Str _21613_x);
inline jule::Str _1aa41c608_toStr(jule::Str _21613_x);
inline void _1cc637669_rev(jule::Slice<jule::U8> _26912_b);
inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen);
inline void _1cc639ca9_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Bool _1cc63ac55__coSpawn(void* _1020_func, void* _1035_args);
inline jule::U64 _1e748408e_hash128to64(_1e7483bd7_u128 _4316_sum);
inline jule::U64 _1e748439c_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1e7484666_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1e74849a7_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1e7484ce8_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1e748516c_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1e748559b_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1e7485a30_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n);
inline _1e7483bd7_u128 _1e7485dd7_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1e7483bd7_u128 _10342_seed);
inline _1e7483bd7_u128 _1e7486536_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1e7483bd7_u128 _1e7486965_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1e7483bd7_u128 _1e7486d94_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1e7483bd7_u128 _16048_seed);
inline jule::U64 _1e748715d_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1cc7a263b_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1cc7a2949_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1cc7a2c13_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1cc7a3054_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1cc7a32da_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I32 _1cc7a35a4_numGroups(jule::I32 _7914_n);
inline jule::Array<jule::I8,8> _1cc7a37b3_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1cc7a3b8c_splitHash(jule::U64 _9414_h);
inline jule::U32 _1cc7a3e89_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups);
inline jule::U32 _1cc7a430d_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I32 _1cd602842_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _1cd602ee6_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _1cd60336a_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1cd62cdcd_Getwd(void);
inline jule::Bool _1ce716218_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1ce781b8a_is16(jule::Slice<_1ce77edec_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1ce78200e_is32(jule::Slice<_1ce78042a_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1ce782817_isExcludingLatin(jule::Ptr<_1ce78089d_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1ce782a59_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1ce783252_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1ce77e946_CaseRange> _31336_cr);
inline jule::Ptr<_1ce77e946_CaseRange> _1ce7835c6_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1ce77e946_CaseRange> _33329_caseRange);
inline jule::I32 _1ce783890_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1ce783d13_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _1ce7841cb_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1ce784550_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _1ce784a06_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _1ce784d47_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _1ce785276_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _1ce7855ea_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _1ce786dd2_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _1ce787256_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _1ce787b80_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1ce788323_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Slice<jule::Str> _1ce788697_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _1ce788a1b_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _1ce789588_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I32 _1ce78990c_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _1ce789de6_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n);
inline jule::Str _1ce78a325_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _1ce78b0a1_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _1ce78b425_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _1ce78ba30_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Bool _1ce78d537_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Bool _1cd6b9b90_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _1cd6b9e9d_isSlash(jule::U8 _5312_c);
inline jule::U8 _1cd6ba267_toUpper(jule::U8 _5512_c);
inline jule::I32 _1cd6ba83e_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1cd6bab08_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _1cd6badc2_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _1cd6bb29b_abs(jule::Str _14612_path);
inline jule::Str _1cd6bb4dd_join(jule::Slice<jule::Str> _1609_elem);
inline jule::Str _1ce78eabb_Clean(jule::Str _10914_path);
inline jule::Str _1ce790193_FromSlash(jule::Str _21214_path);
inline jule::Str _1ce7904d4_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1ce79076a_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1ce790a34_Abs(jule::Str _2468_path);
inline jule::Str _1ce790ced_Base(jule::Str _25213_path);
inline jule::Str _1ce7911c7_Dir(jule::Str _2838_path);
inline jule::Str _1ce791419_VolumeName(jule::Str _30115_path);
inline void _1cd61978d_appendEscapeArg(_1e71a80b0_Builder* _10225_s, jule::Str _10246_arg);
inline jule::Str _1cd619a57_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _1cd619e31_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I32 _1cd61a173_cmdErrorFromCode(jule::I32 _20221_code);
inline jule::I32 _1cd61a382_getLastCmdError(void);
inline jule::I32 _1cd61a849_getLastOsError(void);
inline jule::Bool _1cd62305a_isConsoleHandle(jule::Uintptr _10620_handle);
inline void _1cd631134_Exit(jule::I32 _119_code);
inline jule::Str _1cd631398_Executable(void);
inline jule::Slice<jule::Str> _1cd631563_Args(void);
inline jule::Exceptional<jule::Str> _1cd6319c5_Getwd(void);
inline jule::I32 _1ce797123_getLastFsError(void);
inline jule::Bool _1cc835db7_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1cc836192_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1cc83645b_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1e71b78e9_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _1e71b7c07_argToStr(jule::Any _32813_arg);
inline jule::I32 _1e71b7ec1_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _1e71b8389_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _1e71b9335_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1e71ba798_IsWindows(jule::Str _3714_os);
inline jule::Bool _1e71baaa6_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1e71bad70_IsLinux(jule::Str _4312_os);
inline jule::Bool _1e71bb1b1_IsI386(jule::Str _4611_arch);
inline jule::Bool _1e71bb447_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1e71bb711_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1e71bb9ca_IsUnix(jule::Str _5511_os);
inline jule::Bool _1e71bbda4_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1e71bc0e6_Is64Bit(jule::Str _6112_arch);
inline void _1ce799015_init(void);
inline jule::U32 _1b45232b5_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1b45235c3_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1b452388c_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1b4523bcd_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1b4526241_Frexp(jule::F64 _4714_f);
inline jule::F64 _1b452b6a8_NaN(void);
inline jule::Bool _1b452b9b6_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1b452bc80_Inf(jule::I32 _618_sign);
inline jule::Bool _1b452c148_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1b452c412_normalize(jule::F64 _8214_x);
inline jule::F64 _1b452ddd6_Log(jule::F64 _1118_x);
inline jule::F64 _1b452e7bb_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1b453633e_Modf(jule::F64 _449_f);
inline jule::F64 _1b4536b47_Log2(jule::F64 _449_x);
inline jule::Str _1b4560731_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1b4560d19_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1b4561523_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1b455e554_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1b4561be9_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b456019d_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _1b4562117_roundShortest(_1b4572c3d_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1b455e554_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1b45626ab_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b456019d_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1b4562b95_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b456019d_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1b4563349_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1b455e554_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1b45639cb_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1b455e554_floatInfo* _51232_flt);
inline jule::I32 _1b4563d50_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1b45641c4_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1b4564d62_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1b3ee0843_ConvError _1b45652d5_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1b4565714_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1b4565bba_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1b4566858_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b4566c43_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1b456896a_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b4568c78_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b4569042_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1b456aa8d_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b456aebc_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1b3ee0843_ConvError _1b456b561_atofHex(_1b455e554_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b3ee0843_ConvError _1b456b93a_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError _1b456bb7c_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError _1b456c001_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1b456c375_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1b456cba0_ryuFtoaFixed32(_1b456019d_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1b456d145_ryuFtoaFixed64(_1b456019d_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1b456d981_formatDecimal(_1b456019d_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1b456de59_ryuFtoaShortest(_1b456019d_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1b455e554_floatInfo* _26168_flt);
inline jule::I32 _1b456e1e0_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1b456e4a9_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b456e8d8_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1b455e554_floatInfo* _3963_flt);
inline void _1b4570037_ryuDigits(_1b456019d_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1b45706a8_ryuDigits32(_1b456019d_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b4570ad7_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b4571016_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1b457138a_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1b4571654_divmod1e9(jule::U64 _60214_x);
inline void _1b457458b_trim(_1b4572c3d_decimal* _27414_a);
inline void _1b4574877_rightShift(_1b4572c3d_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1b4574d2d_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1b45750d6_leftShift(_1b4572c3d_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1b457545a_shouldRoundUp(_1b4572c3d_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1b4576b32_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1b4576eea_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1b45772b4_Itoa(jule::I32 _819_i);
inline jule::Str _1b4577605_small(jule::I32 _8610_i);
inline jule::Bool _1b457788b_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1b4577e30_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1b457987c_Throw(jule::Str _910_msg);
inline jule::Bool _1a463d874_IsUnaryOp(jule::U32 _33314_id);
inline jule::Bool _1a463db82_IsBinOp(jule::U32 _34312_id);
inline jule::Bool _1a463e28c_IsStr(jule::Str _36310_k);
inline jule::Bool _1a463e523_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1a463e7dc_IsRune(jule::Str _37011_k);
inline jule::Bool _1a46401c2_IsFloat(jule::Str _37912_k);
inline jule::Bool _1a464048b_IsNum(jule::Str _38710_k);
inline jule::Bool _1a4640a1e_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1a4640cd8_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1a464136b_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1a4641866_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1a4641cd9_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1a46420a3_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1a464236c_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1a4642636_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1a4642900_IsHex(jule::I32 _46710_r);
inline jule::Bool _1a4642bb9_IsAssign(jule::U32 _48213_id);
inline jule::Bool _1a4642e83_IsPostfixOp(jule::U32 _49416_id);
inline jule::Bool _1a464324c_IsAssignOp(jule::U32 _50415_id);
inline _1e71b7487_Log _1a464689e_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1a4643a11_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1a4646c67_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1a46470db_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i);
inline jule::Str _1a46474a4_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i);
inline jule::Str _1a4647828_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i);
inline jule::Str _1a4647b9c_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i);
inline jule::Str _1a4648021_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i);
inline jule::Str _1a46484a5_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i);
inline jule::Str _1a46486e7_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1a46489b1_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1a4648d35_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i);
inline jule::Bool _1a46491a9_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i);
inline jule::Bool _1a464952d_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i);
inline jule::Bool _1a46498a2_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i);
inline jule::Bool _1a4649c26_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i);
inline jule::Str _1a464a221_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1a464a3ec_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1a464a74e_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n);
inline jule::Str _1a464aa18_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1a464acd2_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1a464b09b_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1a464b365_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1e71b7487_Log> _1a4651359_Lex(jule::Ptr<_1a4643a11_Fileset> _80712_f, jule::I32 _80725_mode);
inline void _1a470e0a4_lshiftUnsig(_1a4276798_Const* _58821_c, _1a4276798_Const* _58832_x);
inline void _1a470e3d4_rshiftUnsig(_1a4276798_Const* _59421_c, _1a4276798_Const* _59432_x);
inline jule::Str _1a47942b0_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1a4794579_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1a47948ba_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1a4794b51_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1a4794e1a_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1a4795a20_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1a4795cd9_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1a47960a3_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1a479636c_BitSizeOfUint(jule::U64 _19718_x);
inline void _1a4796515_UpdateTarget(void);
inline void _1a479668b_init(void);
inline jule::I64 _1a479a250_MinI(jule::Str _6113_k);
inline jule::I64 _1a479a55d_MaxI(jule::Str _7913_k);
inline jule::U64 _1a479a827_MaxU(jule::Str _9713_k);
inline jule::F64 _1a479ab68_Min(jule::Str _11512_k);
inline jule::F64 _1a479adee_Max(jule::Str _13312_k);
inline jule::Bool _1a479c021_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1a479c32e_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1a479c5e8_IsInt(jule::Str _4610_k);
inline jule::Bool _1a479c939_IsFloat(jule::Str _5112_k);
inline jule::Bool _1a479cbc0_IsNum(jule::Str _5610_k);
inline jule::Bool _1a479ce89_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1a482585d_FindModuleFile(jule::Slice<_1cd5ae502_Dir>* _1320_dirents);
inline jule::Str _1a4825a6c_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1e71b7487_Log> _1a4825d36_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1a48265c8_IsPub(jule::Str _910_ident);
inline jule::Bool _1a4889493_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a4870e2a_ToRune(jule::Str _2015_lit);
inline jule::Str _1a488b3b8_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a488b709_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a488b990_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a488bd14_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1a488c1aa_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1a494c831_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i);
inline jule::Slice<jule::U8> _1a49543c6_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1a49546b2_FmtByDefault(_1e71a80b0_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1a4954ad0_applyFmtByDefault(_1e71a80b0_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1a4954eed_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1e71a80b0_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1a4955372_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1a495751c_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1a471dc62_Fn> _1a4319a4a_runtimeFindFn(jule::Ptr<_1a480c3d3_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1a4673ec5_Struct> _1a431a09a_runtimeFindStruct(jule::Ptr<_1a480c3d3_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1a47240ec_parameterUsesGenerics(jule::Ptr<_1a4720bba_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1a48a2753_Data> _1a47c2c28_buildAsComptimeMethodData(jule::Ptr<_1a4721d20_FnIns>* _203035_f);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a47c2e37_findComptimePackage(jule::Ptr<_1a48293cd_sema>* _203829_s);
inline jule::Ptr<_1a48a2753_Data> _1a47c32ab_buildComptimeTypeInfoData(jule::Ptr<_1a48293cd_sema>* _204435_s, jule::Ptr<_1a48d54cd_Type>* _204450_t);
inline jule::Ptr<_1a48a2753_Data> _1a47c35ec_buildComptimeValue(jule::Ptr<_1a48a2753_Data>* _205228_d);
inline jule::Str _1a47c6424_toStrConstraints(jule::Ptr<_1a48d3ae7_InsGeneric> _14321_g);
inline jule::Bool _1a47c67dc_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a48d54cd_Type>* _15434_g);
inline jule::Bool _1a47c6aa6_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47c948d_newScopeCheckerBase(jule::Ptr<_1a48293cd_sema>* _3229_s, jule::Ptr<_1a4721d20_FnIns> _3243_owner);
inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47c9856_newScopeChecker(jule::Ptr<_1a48293cd_sema>* _4025_s, jule::Ptr<_1a4721d20_FnIns> _4039_owner);
inline jule::Ptr<_1a47d2cd2_scopeLabel> _1a47c9bca_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1a47d3cc2_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1a48a2753_Data>> _1a47ca01b_getDatasFromTupleData(jule::Ptr<_1a48a2753_Data>* _6231_d);
inline jule::Bool _1a47ca78b_checkMut(jule::Ptr<_1a48293cd_sema>* _9718_s, jule::Ptr<_1a48a2753_Data>* _9729_left, jule::Ptr<_1a48a2753_Data> _9746_right, jule::Ptr<_1a463d137_Token> _9760_op);
inline jule::Bool _1a47cac75_checkAssign(jule::Ptr<_1a48293cd_sema>* _11621_s, jule::Ptr<_1a48a2753_Data>* _11636_left, jule::Ptr<_1a48a2753_Data> _11653_right, jule::Ptr<_1a463d137_Token> _11667_op);
inline jule::Bool _1a47cb14e_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1a47cb391_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U32 _1a47e6521_removeEqFromOp(jule::U32 _214019_op);
inline void _1a47e6752_makeComptimeRange(jule::Ptr<_1a48a2753_Data>* _216927_d);
inline jule::Bool _1a47e6a1b_canComptimeMatch(jule::Ptr<_1a48a2753_Data>* _219226_d);
inline jule::Bool _1a47e6cd5_stmtIsDef(jule::Any* _220015_stmt);
inline jule::I32 _1a47e7159_countMatchType(jule::Ptr<_1a47d1264_Match>* _221220_m, jule::Ptr<_1a48d54cd_Type>* _221232_t);
inline jule::Ptr<_1a48dcbde_TypeSym> _1a47ebc1e_buildType(jule::Ptr<_1a4653669_TypeDecl> _6818_t);
inline jule::Ptr<_1a48a38ca_Value> _1a47ec02c_buildExpr(jule::Ptr<_1a465799d_Expr> _7718_expr);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a47ec2e6_buildTypeAlias(jule::Ptr<_1a466a263_TypeAliasDecl> _8623_decl);
inline jule::Ptr<_1a46710d2_Field> _1a47ec637_buildField(jule::Ptr<_1a466d882_FieldDecl> _9719_decl);
inline jule::Slice<jule::Ptr<_1a46710d2_Field>> _1a47ec8bd_buildFields(jule::Slice<jule::Ptr<_1a466d882_FieldDecl>>* _10821_decls);
inline jule::Ptr<_1a4673ec5_Struct> _1a47ecb87_buildStruct(jule::Ptr<_1a466e278_StructDecl> _11620_decl);
inline jule::Ptr<_1a471c28d_Param> _1a47ece51_buildParam(jule::Ptr<_1a4663ea4_ParamDecl> _12819_decl);
inline jule::Slice<jule::Ptr<_1a471c28d_Param>> _1a47ed32a_buildParams(jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>>* _13921_decls);
inline jule::Ptr<_1a471bbb6_RetType> _1a47ed56c_buildRetType(jule::Ptr<_1a465655c_RetTypeDecl> _14721_decl);
inline jule::Ptr<_1a471dc62_Fn> _1a47ed836_buildFunc(jule::Ptr<_1a4665406_FnDecl> _15718_decl);
inline jule::Slice<jule::Ptr<_1a471dc62_Fn>> _1a47edb00_buildMethods(jule::Slice<jule::Ptr<_1a4665406_FnDecl>>* _17522_decls);
inline jule::Slice<jule::Ptr<_1a48dcbde_TypeSym>> _1a47eddb9_buildTraitInherits(jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>* _18328_inherits);
inline jule::Ptr<_1a4729476_Trait> _1a47ee183_buildTrait(jule::Ptr<_1a466e9b5_TraitDecl> _19119_decl);
inline jule::Ptr<_1a472b0c1_EnumItem> _1a47ee44c_buildEnumItem(jule::Ptr<_1a466ba6c_EnumItemDecl> _20122_decl);
inline jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _1a47ee716_buildEnumItems(jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>>* _20924_decls);
inline jule::Ptr<_1a472bb2c_Enum> _1a47eec11_buildEnum(jule::Ptr<_1a466c62d_EnumDecl> _21718_decl);
inline jule::Ptr<_1a472cc60_TypeEnumItem> _1a47eeddc_buildTypeEnumItem(jule::Ptr<_1a466ce58_TypeEnumItemDecl> _22726_decl);
inline jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> _1a4800184_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>>* _23528_decls);
inline jule::Ptr<_1a472d337_TypeEnum> _1a480044d_buildTypeEnum(jule::Ptr<_1a466d5b8_TypeEnumDecl> _24322_decl);
inline jule::Ptr<_1a4852e51_Var> _1a4800717_buildVar(jule::Ptr<_1a46665b1_VarDecl> _25217_decl);
inline jule::Slice<jule::Ptr<_1a4852e51_Var>> _1a48009d1_buildVars(jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _26918_decls);
inline jule::Ptr<_1a47c7425_Impl> _1a4800c9a_buildImpl(jule::Ptr<_1a4670125_Impl> _27718_decl);
inline jule::Bool _1a48075ba_isImplicitImport(jule::Ptr<_1a480c3d3_ImportInfo> _79021_imp);
inline jule::Ptr<_1a4725065_SymTab> _1a4809721_findVarFileInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _4430_files, jule::Ptr<_1a4852e51_Var>* _4449_v);
inline jule::Ptr<_1a4852e51_Var> _1a4809b94_findVarInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a480a0c3_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1a4673ec5_Struct> _1a480a579_findStructInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1a471dc62_Fn> _1a480a975_findFnInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1a4729476_Trait> _1a480ace9_findTraitInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1a472bb2c_Enum> _1a480b16d_findEnumInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1a472d337_TypeEnum> _1a480b602_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1a4812130_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1a4826c8d_isValidModelForRef(jule::Any* _1428_m);
inline _1e71b7487_Log _1a48272bb_compilerErr(jule::Ptr<_1a463d137_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args);
inline void _1a48275a7_appendRetVars(jule::Slice<jule::Ptr<_1a4852e51_Var>>* _6223_dest, jule::Ptr<_1a4721d20_FnIns>* _6242_f);
inline void _1a48278d7_appendParamVars(jule::Slice<jule::Ptr<_1a4852e51_Var>>* _9225_dest, jule::Ptr<_1a4721d20_FnIns>* _9244_f);
inline void _1a4827bc3_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>* _15234_dest, jule::Ptr<_1a4721d20_FnIns>* _15259_f);
inline jule::Ptr<_1a4725065_SymTab> _1a4828047_findFile(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _19318_files, jule::Ptr<_1a4643a11_Fileset>* _19337_handler);
inline void _1a48283dd_pushSuggestion(_1e71b7487_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args);
inline void _1a4850da5_pushImplemented(jule::Ptr<_1a4729476_Trait> _280324_t, jule::Ptr<_1a4673ec5_Struct>* _280340_d);
inline void _1a4851191_pushImplements(jule::Ptr<_1a4673ec5_Struct>* _282124_s, jule::Ptr<_1a4729476_Trait> _282140_t);
inline void _1a48515e2_pushRuntimeToStr(jule::Ptr<_1a48293cd_sema>* _283926_s, jule::Ptr<_1a48d54cd_Type>* _283941_t, jule::Ptr<_1a463d137_Token>* _283956_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _28406_refers);
inline jule::Bool _1a48518ab_isValidImpAlias(jule::Str _285724_alias);
inline jule::Bool _1a488c809_traitHasReferenceReceiver(jule::Ptr<_1a4729476_Trait>* _1631_t);
inline jule::Bool _1a488cbc2_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1a48a2753_Data>* _3133_d);
inline jule::Bool _1a488d046_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1a48a2753_Data>* _3630_d);
inline jule::Bool _1a488d40e_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1a48a2753_Data>* _5932_d);
inline jule::Bool _1a488d783_intAssignable(jule::Str _8818_kind, jule::Ptr<_1a48a2753_Data>* _8830_d);
inline void _1a4899c78_checkMutRiskOfStructLit(jule::Ptr<_1a48293cd_sema>* _90933_s, jule::Ptr<_1a4712739_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1a48d54cd_Type> _1a48a0ab4_lenKind(void);
inline jule::Bool _1a48a0e16_isGoodValueToInfer(jule::Ptr<_1a48a2753_Data>* _141224_d);
inline jule::Ptr<_1a4652a86_Directive> _1a48cbc55_findDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _435423_directives, jule::Str _435454_d);
inline jule::Any _1a48cc11d_findBuiltinsImport(jule::Str* _436324_ident, jule::Ptr<_1a480c3d3_ImportInfo> _436336_imp);
inline void _1a48cc34e_fitBitsize(jule::Ptr<_1a48a2753_Data>* _437220_d);
inline void _1a48cc67e_makeStructLitAlloc(jule::Ptr<_1a48a2753_Data>* _440128_d, jule::Ptr<_1a4712739_StructLitExprModel>* _440143_lit);
inline jule::Ptr<_1a4852e51_Var> _1a48cca03_buildErrorVar(jule::Ptr<_1a47cba34_Scope>* _441223_s, jule::Ptr<_1a465b6c7_FnCallExpr>* _441239_fc);
inline jule::Any _1a48ccd77_findBuiltinsSema(jule::Str* _442722_ident, jule::Ptr<_1a48293cd_sema> _442738_s);
inline jule::Bool _1a48cd141_isOkForShifting(jule::Ptr<_1a48a2753_Data>* _444225_d);
inline jule::Bool _1a48cd51a_isInstancedStruct(jule::Ptr<_1a4676d30_StructIns> _445922_s);
inline jule::Bool _1a48cd817_isPtrArithmeticCompatible(jule::Ptr<_1a48a2753_Data>* _446335_l, jule::Ptr<_1a48a2753_Data>* _446350_r);
inline void _1a48cdd23_applyRuntimeToStr(jule::Ptr<_1a48293cd_sema>* _448427_s, jule::Ptr<_1a48d54cd_Type>* _448442_from, jule::Ptr<_1a48d54cd_Type>* _448460_to, jule::Ptr<_1a463d137_Token>* _44857_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _448533_refers);
inline void _1a48ce32e_applyCastKindModel(jule::Ptr<_1a48293cd_sema>* _449928_s, jule::Ptr<_1a48a2753_Data>* _449943_d, jule::Ptr<_1a48d54cd_Type>* _449958_t, jule::Ptr<_1a463d137_Token>* _45007_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _450033_refers);
inline void _1a48ce83a_applyCastKind(jule::Ptr<_1a48293cd_sema>* _451023_s, jule::Ptr<_1a48a2753_Data>* _451038_d, jule::Ptr<_1a48d54cd_Type>* _451053_t, jule::Ptr<_1a463d137_Token>* _45117_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _451133_refers);
inline jule::Ptr<_1a48a2753_Data> _1a48cea49_buildVoidData(void);
inline jule::Str _1a48d0033_checkDataForIntegerIndexing(jule::Ptr<_1a48293cd_sema>* _452237_s, jule::Ptr<_1a48a2753_Data>* _452252_d, jule::Ptr<_1a463d137_Token>* _45237_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _452333_refers);
inline void _1a48d053e_applyCastModelByEnum(jule::Ptr<_1a48293cd_sema>* _454830_s, jule::Ptr<_1a48a2753_Data>* _454845_d, jule::Ptr<_1a472bb2c_Enum> _454859_e, jule::Ptr<_1a463d137_Token>* _45497_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _454933_refers);
inline void _1a48d0a5b_castConstByType(jule::Str* _455621_t, jule::Ptr<_1a48a2753_Data>* _455634_d);
inline void _1a48d0c37_updateModelToGenericIns(jule::Any* _459033_m, jule::Ptr<_1a4721d20_FnIns>* _459052_f);
inline jule::Bool _1a48d10ab_pushSubIdentFromExpr(jule::Any _460129_expr, jule::Ptr<_1a465403d_SubIdentTypeDecl>* _460155_t);
inline jule::Str _1a48d1375_constoa(jule::Ptr<_1a4276798_Const>* _462413_c);
inline jule::Ptr<_1a48a2753_Data> _1a48d1919_evalEnumStatic(jule::Ptr<_1a48293cd_sema>* _463524_s, jule::Ptr<_1a472bb2c_Enum>* _463539_enm, jule::Ptr<_1a472b0c1_EnumItem>* _463556_item, jule::Ptr<_1a463d137_Token>* _46367_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _463633_refers);
inline jule::Ptr<_1a4712739_StructLitExprModel> _1a48d1bd3_isLitBased(jule::Any* _465320_m);
inline void _1a48d1ebe_makeImplicitDeref(jule::Ptr<_1a48a2753_Data>* _467027_d, jule::Ptr<_1a463d137_Token> _467041_baseToken);
inline void _1a89e4e35_updateRefer(jule::Ptr<_1a47ea3d2_ReferenceStack> _468123_ref, jule::Ptr<_1a4721d20_FnIns>* _468146_old, jule::Ptr<_1a4721d20_FnIns>* _468159_new);
inline void _1a48d2651_makeVariadic(jule::Ptr<_1a48a2753_Data>* _468922_d, jule::Ptr<_1a48d54cd_Type> _468936_elem);
inline jule::Bool _1a48d2a80_isVarCaptured(jule::Ptr<_1a47d3cc2_scopeChecker> _470318_r, jule::Ptr<_1a47d3cc2_scopeChecker> _470340_s, jule::Ptr<_1a4852e51_Var> _470358_v);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a48d2e04_findNamespace(jule::Trait _472022_lookup, jule::Str _472038_namespace);
inline jule::Bool _1a4901681_kindUsesGenerics(jule::Ptr<_1a48d54cd_Type>* _173126_k, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _173137_generics);
inline jule::Bool _1a4901a49_hasDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _174122_directives, jule::Str _174153_tag);
inline jule::Bool _1a4901d13_canGetPtr(jule::Ptr<_1a48a2753_Data>* _175019_d);
inline jule::Bool _1a4902154_isValidForSptrType(jule::Ptr<_1a48d54cd_Type>* _175328_t);
inline jule::Bool _1a49023da_isValidForRef(jule::Ptr<_1a48d54cd_Type>* _176223_t);
inline jule::Bool _1a49026a4_isBuiltinStrConvertable(jule::Ptr<_1a48d54cd_Type>* _176533_t);
inline jule::Ptr<_1a48dd5e6_Prim> _1a490296d_buildPrimType(jule::Str _176918_kind);
inline void _1a49032cb_applyImplicitCast(jule::Ptr<_1a48293cd_sema>* _179727_s, jule::Ptr<_1a48d54cd_Type>* _179742_dest, jule::Ptr<_1a48a2753_Data>* _179760_d, jule::Ptr<_1a463d137_Token>* _17987_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _179833_refers);
inline jule::Bool _1a4903595_validTypeForXof(jule::Ptr<_1a48d54cd_Type>* _182725_t);
inline __jule_tuple_x_1a4725065_SymTab__jule_tuple_s_1e71b7487_Log _1a4906598_buildSymbols(jule::Ptr<_1a46517aa_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1a4801361_symBuilder> _1667_owner);
inline void _1a49068c8_collectImplicitImports(jule::Ptr<_1a48293cd_sema>* _3132_s, jule::Ptr<_1a4725065_SymTab>* _3147_file);
inline __jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log _1a4906d07_analyzePackage(jule::Slice<jule::Ptr<_1a46517aa_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags);
inline __jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log _1a49072ad_AnalyzePackage(jule::Slice<jule::Ptr<_1a46517aa_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags);
inline jule::Ptr<_1a4721d20_FnIns> _1a4957e79_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a4958265_primTypeAlias(jule::Ptr<_1a48d54cd_Type>* _5723_k);
inline jule::Ptr<_1a4852e51_Var> _1a495bb1a_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1a48d46db_TypeAlias> _1a495be5b_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1a495c1e2_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1a495c4ab_findBuiltinDefStdMem(jule::Str* _20426_ident);
inline jule::Any _1a495c775_findBuiltinDefStdComptime(jule::Str* _22031_ident);
inline jule::Any _1a495cb4e_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident);
inline jule::Any _1a495ce4b_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident);
inline jule::Ptr<_1a48a2753_Data> _1a495d2c0_builtinCallerError(jule::Ptr<_1a48a447a_eval>* _27328_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _27343_fc);
inline jule::Ptr<_1a48a2753_Data> _1a495d6ee_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _30428_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _30443_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a495db2d_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _33130_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _33145_fc, jule::Ptr<_1a48a2753_Data>* _33172_d);
inline jule::Ptr<_1a48a2753_Data> _1a495e05c_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _34326_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _34341_fc, jule::Ptr<_1a48a2753_Data>* _34368_d);
inline jule::Ptr<_1a48a2753_Data> _1a495e48b_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _40528_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _40543_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a495e8ba_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _43127_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _43142_fc, jule::Ptr<_1a48a2753_Data>* _43169_d);
inline jule::Ptr<_1a48a2753_Data> _1a496002a_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _48229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _48244_fc, jule::Ptr<_1a48a2753_Data>* _48271_d);
inline jule::Ptr<_1a48a2753_Data> _1a4960404_callerCopySlice(jule::Ptr<_1a48a2753_Data>* _60225_dest, jule::Ptr<_1a48a447a_eval>* _60243_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _60258_fc, jule::Ptr<_1a48a2753_Data>* _60285_d);
inline jule::Ptr<_1a48a2753_Data> _1a4960833_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _63627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _63642_fc, jule::Ptr<_1a48a2753_Data>* _63669_d);
inline jule::Ptr<_1a48a2753_Data> _1a4960ba7_callerLenSlice(jule::Ptr<_1a48a2753_Data>* _66124_expr, jule::Ptr<_1a48a2753_Data>* _66142_d);
inline jule::Ptr<_1a48a2753_Data> _1a496102b_callerLenMap(jule::Ptr<_1a48a2753_Data>* _66922_expr, jule::Ptr<_1a48a2753_Data>* _66940_d);
inline jule::Ptr<_1a48a2753_Data> _1a49613a0_callerLenArr(jule::Ptr<_1a48a2753_Data>* _67722_expr, jule::Ptr<_1a48a2753_Data>* _67740_d);
inline jule::Ptr<_1a48a2753_Data> _1a4961724_callerLenStr(jule::Ptr<_1a48a2753_Data>* _68422_expr, jule::Ptr<_1a48a2753_Data>* _68440_d);
inline jule::Ptr<_1a48a2753_Data> _1a4961a98_callerLenComptime(jule::Ptr<_1a48a2753_Data>* _69727_d, jule::I32 _69737_n);
inline jule::Ptr<_1a48a2753_Data> _1a4961ec7_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _70426_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _70441_fc, jule::Ptr<_1a48a2753_Data>* _70468_d);
inline jule::Ptr<_1a48a2753_Data> _1a496234b_callerCapSlice(jule::Ptr<_1a48a2753_Data>* _74424_expr, jule::Ptr<_1a48a2753_Data>* _74442_d);
inline jule::Ptr<_1a48a2753_Data> _1a496277a_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _75226_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _75241_fc, jule::Ptr<_1a48a2753_Data>* _75268_d);
inline jule::Ptr<_1a48a2753_Data> _1a4962c64_callerDeleteMap(jule::Ptr<_1a48a447a_eval>* _77525_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _77540_fc, jule::Ptr<_1a48a2753_Data>* _77567_expr, jule::Ptr<_1a48a2753_Data>* _77585_d);
inline jule::Ptr<_1a48a2753_Data> _1a4963193_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _80429_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _80444_fc, jule::Ptr<_1a48a2753_Data>* _80471_d);
inline jule::Ptr<_1a48a2753_Data> _1a49635c2_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _82740_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _82755_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a4963a01_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _86341_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _86356_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a4963e30_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _88338_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _88353_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a49645a1_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _89538_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _89553_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a49649d0_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _90839_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _90854_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a4964e0e_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _92143_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _92158_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a496533d_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _98135_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _98150_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a496576c_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _100636_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _100651_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a4965b9b_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _103133_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _103148_fc, jule::Ptr<_1a48a2753_Data>* );
inline jule::Ptr<_1a48a2753_Data> _1a49660ca_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _105444_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _105459_fc, jule::Ptr<_1a48a2753_Data>* _105486_d);
inline jule::Ptr<_1a53016ce_FileInfo> _1a534ba9d_ParseFile(jule::Ptr<_1a4643a11_Fileset> _2318_f);
inline __jule_tuple_x_1a46517aa_AST__jule_tuple_s_1e71b7487_Log _1a534c175_parseFileset(jule::Ptr<_1a4643a11_Fileset> _5521_f);
inline jule::Ptr<_1a4663767_ScopeTree> _1a534ca05_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a534cd8a_isSt(jule::Ptr<_1a463d137_Token> _149_current, jule::Ptr<_1a463d137_Token> _1433_prev);
inline jule::Bool _1a534d20e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a463d137_Token>>* _2026_tokens, jule::I32* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1a534d5c7_nextStPos(jule::Slice<jule::Ptr<_1a463d137_Token>>* _3415_tokens, jule::I32 _3440_start);
inline __jule_tuple_sx_1a463d137_Token__jule_tuple_bool _1a534d94b_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1a463d137_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _1a534e133_splitStmts(jule::Slice<jule::Ptr<_1a463d137_Token>>* _11720_tokens);
inline jule::Bool _1a5367679_isTypeOp(jule::U32* _87114_id);
inline jule::Bool _1a5367987_isTypeRange(jule::Slice<jule::Ptr<_1a463d137_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1a463d137_Token>> _1a5367c51_getBlockExpr(jule::Slice<jule::Ptr<_1a463d137_Token>>* _91122_tokens);
inline __jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token _1a5368119_splitDelim(jule::Slice<jule::Ptr<_1a463d137_Token>>* _94320_tokens, jule::U32 _94345_delim);
inline jule::I32 _1a53683d3_findLowestPrecOp(jule::Slice<jule::Ptr<_1a463d137_Token>>* _98222_tokens);
inline jule::Ptr<_1a46592b8_IdentExpr> _1a536869c_buildIdentExpr(jule::Ptr<_1a463d137_Token>* _104724_token);
inline __jule_tuple_sx_1a463d137_Token__jule_tuple_int _1a5368966_getRangeExprTokens(jule::Slice<jule::Ptr<_1a463d137_Token>>* _105528_tokens);
inline jule::Bool _1a5368d40_isAnonFnHead(jule::Slice<jule::Ptr<_1a463d137_Token>>* _107818_tokens);
inline jule::Bool _1a53699de_checkAssignTokens(jule::Slice<jule::Ptr<_1a463d137_Token>>* _1623_tokens);
inline _1e71b7487_Log _1a536a99b_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1a4643a11_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1a463d137_Token>> _1a536aec9_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1a463d137_Token>>* _3063_tokens);
inline __jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token _1a536b293_rangeLast(jule::Slice<jule::Ptr<_1a463d137_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log _1a536b749_parts(jule::Slice<jule::Ptr<_1a463d137_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust);
inline jule::U32 _1a536b9d0_getCloseOfBrace(jule::U32 _12820_left);
inline _1e71b7487_Log _1a536be0e_compilerErr(jule::Ptr<_1a463d137_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1a536c2a5_pushSuggestion(_1e71b7487_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1a4653669_TypeDecl> _1a537d21c_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a49e63ad_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a49e17b5_checkArch(jule::Str _2814_arg);
inline jule::Bool _1a4a0b747_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a4a0c8be_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a4a0cb44_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a4a0ce30_initVars(jule::Slice<jule::Str>* _5518_vars, _1a4a0c5a0_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1a5382430_readBuff(jule::Str _1613_path);
inline _1e71b7487_Log _1a538273d_flatCompilerErr(jule::Str _2720_text);
inline jule::Ptr<_1a471dc62_Fn> _1a4966a48_RuntimeFindFn(jule::Ptr<_1a480c3d3_ImportInfo>* _1823_runtime, jule::Str _1851_ident);
inline jule::Ptr<_1a4673ec5_Struct> _1a4967142_RuntimeFindStruct(jule::Ptr<_1a480c3d3_ImportInfo>* _3327_runtime, jule::Str _3355_ident);
inline void _1a538715a_pushPasses(jule::Ptr<_1a480eb55_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1a5387523_getAllUniquePasses(jule::Ptr<_1a480eb55_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _14053_uses);
inline _1a4a0c5a0_CompileInfo _1a5387732_buildCompileInfo(void);
inline void _1a53879da_pushRuntimeToAST(jule::Ptr<_1a46517aa_AST>* _17926_f);
inline void _1a5388238_IterPackages(jule::Ptr<_1a53857a7_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a480eb55_Package>*> _731_f);
inline void _1a53884ad_IterFiles(jule::Ptr<_1a480eb55_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a4725065_SymTab>*> _1640_f);
inline void _1a5388799_IterTraitMethods(jule::Ptr<_1a4729476_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1a471dc62_Fn>*> _2443_f);
inline jule::Bool _1a538a9dd_IsForwarded(jule::Ptr<_1a47cba34_Scope>* _1217_s);
inline jule::Bool _1a538abb9_IsExprComesFromBind(jule::Ptr<_1a48a2753_Data>* _2825_d);
inline jule::Bool _1a538ae83_IsAny(jule::Ptr<_1a48d54cd_Type>* _4015_t);
inline jule::Bool _1a538b2c4_IsClosure(jule::Ptr<_1a47147a2_AnonFnExprModel>* _4915_m);
inline jule::Bool _1a538b55a_IsOpMethod(jule::Ptr<_1a471dc62_Fn>* _5216_m);
inline jule::Bool _1a538b8ce_IsTraitMethod(jule::Ptr<_1a4676d30_StructIns>* _6823_owner, jule::Ptr<_1a4721d20_FnIns>* _6849_f);
inline jule::Bool _1a538bc53_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1a4652a86_Directive> _1a538cade_FindDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1a538cea7_HasDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::I32 _1a538d9e1_FindTraitTypeOffsetS(jule::Ptr<_1a4729476_Trait> _3925_t, jule::Ptr<_1a4676d30_StructIns> _3946_s);
inline jule::I32 _1a538dd65_FindTraitTypeOffset(jule::Ptr<_1a4729476_Trait> _6224_t, jule::Ptr<_1a48d54cd_Type> _6245_k);
inline jule::Ptr<_1a4721d20_FnIns> _1a538e294_FindOperator(jule::Ptr<_1a4676d30_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1a4721d20_FnIns> _1a538e618_FindFnGenericInstance(jule::Ptr<_1a471dc62_Fn>* _14731_f, jule::Slice<jule::Ptr<_1a48d54cd_Type>> _14745_generics);
inline jule::Ptr<_1a4676d30_StructIns> _1a538ea9c_FindStructGenericInstance(jule::Ptr<_1a4673ec5_Struct>* _16335_s, jule::Slice<jule::Ptr<_1a48d54cd_Type>> _16353_generics);
inline jule::Ptr<_1a480c3d3_ImportInfo> _1a538ed99_SelectImport(jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _17821_imports, jule::Str _17851_linkpath);
inline jule::Bool _1a8b76eda_isOrdered(jule::Ptr<_1a4852e51_Var>* _1418_t, jule::Slice<jule::Ptr<_1a4852e51_Var>> _1425_s);
inline jule::Bool _1a8b7cc5a_isOrdered(jule::Ptr<_1a4673ec5_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _1425_s);
inline void _1a8b74614_order(jule::Slice<jule::Ptr<_1a4852e51_Var>> _3717_s);
inline void _1a8b751e7_order(jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _3717_s);
inline void _1a6243664_EliminateDefines(jule::Ptr<_1a53857a7_IR>* _38426_ir);
inline void _1a6247525_eliminateDeadCodeOfScope(jule::Ptr<_1a47cba34_Scope> _21833_s);
inline void _1a624779a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a471dc62_Fn>>* _23033_funcs);
inline void _1a62479cb_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a4673ec5_Struct>>* _23937_structs);
inline void _1a6247c84_eliminateFunctionsScopePackage(jule::Ptr<_1a480eb55_Package>* _24740_pkg);
inline void _1a6247e82_eliminateScopePackage(jule::Ptr<_1a480eb55_Package>* _25431_pkg);
inline void _1a62481b3_EliminateScopes(jule::Ptr<_1a53857a7_IR>* _25925_ir);
inline jule::Uintptr _1a612cd78_typeData(jule::Any* _914_m);
inline jule::Bool _1a612d1ca_equalConst(jule::Ptr<_1a4276798_Const> _1315_l, jule::Ptr<_1a4276798_Const> _1336_r);
inline jule::Bool _1a612d54e_equalCasting(jule::Ptr<_1a47130b9_CastingExprModel> _3217_l, jule::Ptr<_1a47130b9_CastingExprModel> _3245_r);
inline jule::Bool _1a612d917_equalUnary(jule::Ptr<_1a4711d65_UnaryExprModel> _3915_l, jule::Ptr<_1a4711d65_UnaryExprModel> _3941_r);
inline jule::Bool _1a612dc8b_equalIndexing(jule::Ptr<_1a47142eb_IndexingExprModel> _4618_l, jule::Ptr<_1a47142eb_IndexingExprModel> _4647_r);
inline jule::Bool _1a612e110_equalBinary(jule::Ptr<_1a471198b_BinaryExprModel> _5116_l, jule::Ptr<_1a471198b_BinaryExprModel> _5143_r);
inline jule::Bool _1a612e484_equalModels(jule::Any _6216_l, jule::Any _6236_r);
inline void _1a6135138_possibleNilRemove(jule::Ptr<_1a6134159_nils>* _7227_n, jule::Any _7237_m);
inline jule::Bool _1a6135501_isGuaranteedNonNilExpr(jule::Ptr<_1a6134159_nils>* _7832_n, jule::Any _7842_m);
inline jule::Bool _1a61357ba_isNilValidType(jule::Ptr<_1a48d54cd_Type> _8623_t);
inline jule::Uintptr _1a6135b0b_getNilVar(jule::Any _8814_m);
inline jule::Bool _1a613b837_isConstantValidConditionalCase(jule::Ptr<_1a47cbe52_If>* _67636_i);
inline jule::Bool _1a613bb45_isUnreachableExpr(jule::Any* _68523_expr);
inline jule::Bool _1a613be0e_isConstantValidMatchCase(jule::Ptr<_1a47d1c8c_Case>* _70030_case);
inline jule::Bool _1a613c250_isUnreachableConditionalCase(jule::Ptr<_1a47cbe52_If>* _70934_i);
inline jule::Bool _1a613c4d6_isUnreachableMatchCase(jule::Ptr<_1a47d1c8c_Case>* _71328_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a6142a6e_checkForBitShiftOpt(jule::Ptr<_1a4711491_OperandExprModel>* _62225_l, jule::Ptr<_1a4711491_OperandExprModel>* _62254_r);
inline jule::Bool _1a6142e37_areSameLvalueExprModel(jule::Any* _63928_l, jule::Any* _63949_r);
inline void _1a6144ee4_possibleDynamicRemove(jule::Ptr<_1a6143e5a_dynamic>* _7331_d, jule::Any _7344_m);
inline jule::Bool _1a6145302_isDynamicValidType(jule::Ptr<_1a48d54cd_Type> _7927_t);
inline jule::Ptr<_1a48d54cd_Type> _1a6145731_isTypeGuaranteedDynamicData(jule::Ptr<_1a6143e5a_dynamic>* _8137_dy, jule::Ptr<_1a48d54cd_Type> _8155_t, jule::Any _8175_m);
inline jule::Uintptr _1a6145a72_getDynamicVar(jule::Any _10618_m);
inline jule::Bool _1a614968b_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I32 _1a6149a54_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr);
inline jule::Bool _1a6149dc8_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2);
inline void _1a614a208_possibleBoundaryRemove(jule::Ptr<_1a6148624_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a614a4c2_isBoundaryRiskyType(jule::Ptr<_1a48d54cd_Type> _13628_t);
inline jule::Bool _1a614a78b_isBoundaryValidType(jule::Ptr<_1a48d54cd_Type> _14128_t);
inline jule::Uintptr _1a614aa55_getBoundaryVar(jule::Any _14319_m);
inline void _1a614e130_PushOptLevel(jule::I32 _3817_level);
inline void _1a624bb34_detectEnabled(void);
inline void _1aa345ab4_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1aa3446c8_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r);
inline void _1aa340ad1_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r);
inline jule::Bool _1aa33e272_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::U8> _1aa339dc7_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7240_v);
inline jule::U64 _1a5ba117c_unix(void);
inline jule::Bool _1a6257117_isCopyOptimizable(jule::Ptr<_1a48a2753_Data>* _117623_expr);
inline jule::Bool _1a62574d0_isIterCopyOptimizable(jule::Ptr<_1a48a2753_Data>* _118727_expr, jule::Ptr<_1a4852e51_Var>* _118747_v);
inline jule::Bool _1a625790e_captureVarHandling(jule::Ptr<_1a5bab61b_ObjectCoder>* _119428_oc, jule::Ptr<_1a47147a2_AnonFnExprModel>* _119451_m, jule::Ptr<_1a4852e51_Var>* _119483_v);
inline jule::Str _1a6269e60_decomposeCommonEsq(jule::U8 _191623_b);
inline jule::Str _1a626a26d_sbtoa(jule::U8 _194310_b);
inline void _1a626a559_cstrBytes(_1e71a80b0_Builder* _196319_s, jule::Str _196340_ctx);
inline void _1a626a889_cstrLit(_1e71a80b0_Builder* _196917_s, jule::Str _196938_ctx);
inline void _1a626ac30_ftoa(_1e71a80b0_Builder* _197514_s, jule::F64 _197535_f, jule::I32 _197543_bitsize);
inline void _1a626b01b_itoa(_1e71a80b0_Builder* _199314_s, jule::I64 _199335_x);
inline void _1a626b307_utoa(_1e71a80b0_Builder* _201014_s, jule::U64 _201035_x);
inline void _1a626b956_operatorOverloadingBinary(_1e71a80b0_Builder* _202435_buf, jule::Ptr<_1a4676d30_StructIns>* _202463_s, jule::Str* _202485_l, jule::Str* _20253_r, jule::U32 _202511_op, jule::Str _202526_kind);
inline jule::Slice<jule::U8> _1a5bb9162_concatAllParts(jule::Slice<jule::Ptr<_1a463d137_Token>> _138019_parts);
inline jule::Bool _1a5bb9470_isHeadDecl(jule::Ptr<_1a471dc62_Fn>* _139620_m);
inline jule::Bool _1a5bb9739_defaultEq(jule::Ptr<_1a4676d30_StructIns>* _140415_s);
inline jule::Bool _1a5bc86c1_ableToInit(jule::Ptr<_1a48d54cd_Type>* _44920_t);
inline jule::Bool _1a5bc899b_shouldInitialized(jule::Ptr<_1a48d54cd_Type>* _45627_t);
inline void _1ce7a242a_printErrorMessage(jule::Str _3022_msg);
inline void _1ce7a26a0_help(jule::Slice<jule::Str>* _3510_args);
inline void _1ce7a28d1_version(jule::Slice<jule::Str>* _6313_args);
inline void _1ce7a2ae0_toolDistos(void);
inline void _1ce7a2c55_toolDistarch(void);
inline void _1ce7a2e53_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1ce7a3184_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1ce7a34c5_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1ce7a3717_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1ce7a38b0_showInfo(void);
void _1ce7a3a36_main(void);
inline void _1ce7a4383_enableVtp(void);
inline void _1ce7a454d_init(void);
inline void _1a5c3e759_init(void);
inline jule::Ptr<_1cd61d40c_File> _1a5c3ea23_openOutput(jule::Str* _2916_path);
inline void _1a5c3ebbb_clearObjects(void);
inline void _1a5c3eec9_compileIr(jule::Str _5814_compiler, jule::Str _5829_compilerCmd);
inline jule::Bool _1a5c40293_isCppSourceFile(jule::Str _8520_path);
inline void _1a5c404c4_pushCompCmdClang(_1e71a80b0_Builder* _9326_cmd);
inline void _1a5c40705_pushCompCmdGcc(_1e71a80b0_Builder* _11924_cmd);
inline __jule_tuple_str__jule_tuple_str _1a5c40b89_genCompileCmd(jule::Str _14518_sourcePath, jule::Ptr<_1a53857a7_IR>* _14536_ir);
inline jule::Str _1a5c40d21_getCompilePath(void);
inline void _1a5c41052_applyTargetIndependentOptimizations(jule::Ptr<_1a53857a7_IR>* _19145_ir);
inline void _1a5c411ea_checkCompilerFlag(void);
inline void _1a5c41409_checkTargetArch(jule::Str _21320_arch);
inline void _1a5c4163a_checkTargetOs(jule::Str _22118_os);
inline void _1a5c4186b_checkTargetFlag(jule::Str* _22921_target);
inline void _1a5c41a9c_checkOptFlag(jule::Str* _25218_opt);
inline void _1a5c41e65_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a5c42130_checkFlags(jule::Slice<jule::Str>* _28016_args);
inline void _1a5c4233e_setupSemaFlags(jule::I32* _32624_flags);
inline jule::Ptr<_1a53857a7_IR> _1a5c42608_buildIr(jule::Slice<jule::Str>* _33213_args);
inline void _1a5c42839_compileCommand(jule::Slice<jule::Str>* _37224_args);


struct _1a479de24_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a479d2a8_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i);
	void(*_1a479d61b_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB);
	void(*_1a479da39_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB);
	jule::I32(*_1a479dcc0_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a48093d0_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a4808258_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a4808445_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a4808786_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_1a480c3d3_ImportInfo>(*_1a4808ac7_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log(*_1a4808ec3_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1a480927b_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a480c3d3_ImportInfo> _4128__0);
};

struct _1a48d5027_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a48d4a82_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a48d4dc3_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other);
};

struct _1a49058b6_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a480c3d3_ImportInfo>(*_1a4903ba0_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _929_selector);
	jule::Ptr<_1a4852e51_Var>(*_1a490409b_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a48d46db_TypeAlias>(*_1a4904497_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a4673ec5_Struct>(*_1a4904893_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a471dc62_Fn>(*_1a4904c8e_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a4729476_Trait>(*_1a49050d0_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a472bb2c_Enum>(*_1a4905421_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a472d337_TypeEnum>(*_1a4905762_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1a5c377da_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a5c05ba4_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a5c05ce7_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a5c05ec3_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a5c37697_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47a1443_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47a4677_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47a7405_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47aac66_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47ac5c5_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47b7da5_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47bb44c_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5382c27_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4676d30_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4721d20_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4729476_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a472bb2c_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a472d337_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a479e144_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a479eba0_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47a2dc3_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47a60e6_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47a8e0c_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47ae044_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47b5149_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47b9824_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47bd73a_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48d54cd_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48dd5e6_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48e2122_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48e2ae5_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48e36d9_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48e4289_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48e4e16_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48e58d9_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5bba9d2_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4725065_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d3cc2_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a480c3d3_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a480eb55_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48293cd_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3a8374_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3abc07_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3b0414_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3b3b65_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3b7372_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4852e51_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48d46db_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4673ec5_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471dc62_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a46710d2_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4276798_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a472b0c1_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471c28d_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47ce581_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cba34_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4719a2c_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48a2753_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471aa3e_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47187a6_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4717376_BuiltinPrintCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4717673_BuiltinPrintlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4717e26_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4719653_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4719279_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471ad3b_FreeExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471396b_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cc66c_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cc969_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4667a35_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cce20_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466843c_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cd86b_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cdc01_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47cebe1_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d00ba_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d0571_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a46592b8_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47142eb_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d0a27_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d1264_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d2485_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47ce0ca_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47d282b_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4663767_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a46665b1_VarDecl>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466a263_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465799d_Expr>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4669a26_Conditional>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466720a_Iter>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4668be0_ContSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4660c4d_LabelSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4661127_GotoSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4662117_AssignSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466b033_MatchCase>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4661424_FallSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4668816_BreakSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466698a_RetSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4658372_UseExpr>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4670125_Impl>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466e278_StructDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4665406_FnDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466e9b5_TraitDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466c62d_EnumDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a466d5b8_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4655935_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4654a99_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4655193_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4654714_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4656183_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4654d96_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4653c74_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4659e34_VariadicExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4713d45_SliceExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465c1bc_FieldExprPair>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465d7c8_KeyValPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4658592_TupleExpr>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4717079_TupleExprModel>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465b6c7_FnCallExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471a6ba_RuneExprModel>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4716c7c_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465aab1_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465403d_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4659a5a_UnaryExpr>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4653669_TypeDecl>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465a6d7_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4654417_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47155d8_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47130b9_CastingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465e004_SliceExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4712739_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47168a3_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4715b6b_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471650c_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4715055_MapExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47147a2_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4657c67_RangeExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4658938_LitExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4658d12_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465e961_IndexingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a46600c1_SlicingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465a30d_CastExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465c9e7_StructLit>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465ce9d_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a465b067_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4711d65_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471198b_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4712a36_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4717a4c_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a47183cc_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4718aa3_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4718da0_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4719d29_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a471a4cd_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6130001_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6132ae7_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a61317d8_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6132344_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a613271d_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6130584_SwapExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a61309a2_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6131255_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6131b6d_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6132de4_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6130c9e_RefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4712393_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a61331e1_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a61301dd_FnCallIgnoreExceptionalExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6131e6a_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1a8102a60_1a8096509(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47a2444_index(_self_.as<_1a47a1443_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8102a60_1a80b4cca(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47a5667_index(_self_.as<_1a47a4677_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8102a60_1a809c840(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47a847d_index(_self_.as<_1a47a7405_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8102a60_1a80a81a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47abb46_index(_self_.as<_1a47aac66_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8102a60_1a80b1502(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47ad5b5_index(_self_.as<_1a47ac5c5_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8102a60_1a80d1b71(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47b8d95_index(_self_.as<_1a47b7da5_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8102a60_1a80ca010(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48a2753_Data>* _1426_d, jule::I32 _1436_i) {
	_1a47bc55d_index(_self_.as<_1a47bb44c_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a8103104_1a8096509(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47a20d1_ready(_self_.as<_1a47a1443_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a8103104_1a80b4cca(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47a5304_ready(_self_.as<_1a47a4677_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a8103104_1a809c840(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47a811a_ready(_self_.as<_1a47a7405_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a8103104_1a80a81a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47ab7d3_ready(_self_.as<_1a47aac66_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a8103104_1a80b1502(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47ad252_ready(_self_.as<_1a47ac5c5_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a8103104_1a80d1b71(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47b8a32_ready(_self_.as<_1a47b7da5_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a8103104_1a80ca010(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a4852e51_Var>* _1526_keyA, jule::Ptr<_1a4852e51_Var>* _1543_keyB) {
	_1a47bc1ea_ready(_self_.as<_1a47bb44c_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a81037ca_1a8096509(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47a2862_step(_self_.as<_1a47a1443_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a81037ca_1a80b4cca(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47a5a85_step(_self_.as<_1a47a4677_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a81037ca_1a809c840(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47a889b_step(_self_.as<_1a47a7405_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a81037ca_1a80a81a8(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47ac064_step(_self_.as<_1a47aac66_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a81037ca_1a80b1502(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47ad9d3_step(_self_.as<_1a47ac5c5_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a81037ca_1a80d1b71(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47b92b3_step(_self_.as<_1a47b7da5_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a81037ca_1a80ca010(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a4852e51_Var>* _1633_keyA, jule::Ptr<_1a4852e51_Var>* _1650_keyB) {
	_1a47bc97b_step(_self_.as<_1a47bb44c_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a8096509(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a2ae8_len(_self_.as<_1a47a1443_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a80b4cca(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a5d1b_len(_self_.as<_1a47a4677_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a809c840(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a8b32_len(_self_.as<_1a47a7405_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a80a81a8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47ac2ea_len(_self_.as<_1a47aac66_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a80b1502(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47adc69_len(_self_.as<_1a47ac5c5_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a80d1b71(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47b9549_len(_self_.as<_1a47b7da5_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_1a8103eb2_1a80ca010(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47bcc12_len(_self_.as<_1a47bb44c_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1a8104303_1a8b02e44(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a538382c_SetModPath(_self_.as<_1a5382c27_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1a8104754_1a8b02e44(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5383ab3_GetModPath(_self_.as<_1a5382c27_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1a8104b61_1a8b02e44(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _1a5383e04_ModById(_self_.as<_1a5382c27_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1a480c3d3_ImportInfo> __jule_trait_method_1a8105128_1a8b02e44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a5384245_GetImport(_self_.as<_1a5382c27_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log __jule_trait_method_1a8105711_1a8b02e44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1a5384641_ImportPackage(_self_.as<_1a5382c27_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1a81060c4_1a8b02e44(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a480c3d3_ImportInfo> _4128__0) {
	_1a53848e9_Imported(_self_.as<_1a5382c27_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e78ac3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a46771d7_Str(_self_.as<_1a4676d30_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e77e46(jule::Ptr<jule::Uintptr> _self_) {
	return _1a4722194_Str(_self_.as<_1a4721d20_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e91217(jule::Ptr<jule::Uintptr> _self_) {
	return _1a4729872_Str(_self_.as<_1a4729476_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e69d5b(jule::Ptr<jule::Uintptr> _self_) {
	return _1a472bed4_Str(_self_.as<_1a472bb2c_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e7201c(jule::Ptr<jule::Uintptr> _self_) {
	return _1a472d6ab_Str(_self_.as<_1a472d337_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80aed19(jule::Ptr<jule::Uintptr> _self_) {
	return _1a479e540_Str(_self_.as<_1a479e144_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80997c6(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a0057_Str(_self_.as<_1a479eba0_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a8096509(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a180b_Str(_self_.as<_1a47a1443_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80b8097(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a327a_Str(_self_.as<_1a47a2dc3_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80b4cca(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a4a2e_Str(_self_.as<_1a47a4677_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80a0b0c(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a649d_Str(_self_.as<_1a47a60e6_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a809c840(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a78bc_Str(_self_.as<_1a47a7405_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80ab475(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47a92b4_Str(_self_.as<_1a47a8e0c_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80a81a8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47ab00d_Str(_self_.as<_1a47aac66_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80b1502(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47ac97c_Str(_self_.as<_1a47ac5c5_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7ea2d3e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47ae3eb_Str(_self_.as<_1a47ae044_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80bb111(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47b5501_Str(_self_.as<_1a47b5149_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80d1b71(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47b825c_Str(_self_.as<_1a47b7da5_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80cd2cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47b9bcb_Str(_self_.as<_1a47b9824_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80ca010(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47bba35_Str(_self_.as<_1a47bb44c_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a80c1c60(jule::Ptr<jule::Uintptr> _self_) {
	return _1a47bdae2_Str(_self_.as<_1a47bd73a_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e5ab93(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48d58c9_Str(_self_.as<_1a48d54cd_Type>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e6000a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48dd96a_Str(_self_.as<_1a48dd5e6_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e66819(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48e24c9_Str(_self_.as<_1a48e2122_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e765b5(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48e30ac_Str(_self_.as<_1a48e2ae5_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7edda8e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48e3a91_Str(_self_.as<_1a48e36d9_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7edbeee(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48e4641_Str(_self_.as<_1a48e4289_Map>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e74b68(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48e52bd_Str(_self_.as<_1a48e4e16_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a7e680ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1a48e5c91_Str(_self_.as<_1a48e58d9_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1a81065ad_1a9cb4676(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5bbadcd_Str(_self_.as<_1a5bba9d2_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e78ac3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a4677528_Equal(_self_.as<_1a4676d30_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e77e46(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47224d5_Equal(_self_.as<_1a4721d20_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e91217(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a4729bb3_Equal(_self_.as<_1a4729476_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e69d5b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a472c325_Equal(_self_.as<_1a472bb2c_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e7201c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a472d9ec_Equal(_self_.as<_1a472d337_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80aed19(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a479e881_Equal(_self_.as<_1a479e144_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80997c6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a0398_Equal(_self_.as<_1a479eba0_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a8096509(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a1b4c_Equal(_self_.as<_1a47a1443_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80b8097(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a35bb_Equal(_self_.as<_1a47a2dc3_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80b4cca(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a4d70_Equal(_self_.as<_1a47a4677_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80a0b0c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a67de_Equal(_self_.as<_1a47a60e6_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a809c840(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a7c0d_Equal(_self_.as<_1a47a7405_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80ab475(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47a9605_Equal(_self_.as<_1a47a8e0c_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80a81a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47ab34e_Equal(_self_.as<_1a47aac66_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80b1502(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47accbd_Equal(_self_.as<_1a47ac5c5_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7ea2d3e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47ae73c_Equal(_self_.as<_1a47ae044_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80bb111(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47b5842_Equal(_self_.as<_1a47b5149_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80d1b71(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47b859d_Equal(_self_.as<_1a47b7da5_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80cd2cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47ba01c_Equal(_self_.as<_1a47b9824_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80ca010(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47bbd76_Equal(_self_.as<_1a47bb44c_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a80c1c60(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a47bde33_Equal(_self_.as<_1a47bd73a_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e5ab93(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48d5c1a_Equal(_self_.as<_1a48d54cd_Type>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e6000a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48ddcab_Equal(_self_.as<_1a48dd5e6_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e66819(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48e281a_Equal(_self_.as<_1a48e2122_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e765b5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48e33ed_Equal(_self_.as<_1a48e2ae5_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7edda8e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48e3dd2_Equal(_self_.as<_1a48e36d9_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7edbeee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48e4982_Equal(_self_.as<_1a48e4289_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e74b68(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48e560e_Equal(_self_.as<_1a48e4e16_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a7e680ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a48e60d2_Equal(_self_.as<_1a48e58d9_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a8106932_1a9cb4676(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	return _1a5bbb21e_Equal(_self_.as<_1a5bba9d2_customType>(), _3818_other);
}
inline jule::Ptr<_1a480c3d3_ImportInfo> __jule_trait_method_1a8106ea4_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _929_selector) {
	return _1a4725582_SelectPackage(_self_.as<_1a4725065_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1a480c3d3_ImportInfo> __jule_trait_method_1a8106ea4_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _929_selector) {
	return _1a47d429a_SelectPackage(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a480c3d3_ImportInfo> __jule_trait_method_1a8106ea4_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _929_selector) {
	return _1a480c900_SelectPackage(_self_.as<_1a480c3d3_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a480c3d3_ImportInfo> __jule_trait_method_1a8106ea4_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _929_selector) {
	return _1a481012d_SelectPackage(_self_.as<_1a480eb55_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a480c3d3_ImportInfo> __jule_trait_method_1a8106ea4_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _929_selector) {
	return _1a48298a6_SelectPackage(_self_.as<_1a48293cd_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a4852e51_Var> __jule_trait_method_1a8107d2e_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a472597d_FindVar(_self_.as<_1a4725065_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a4852e51_Var> __jule_trait_method_1a8107d2e_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a47d4696_FindVar(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a4852e51_Var> __jule_trait_method_1a8107d2e_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a480cceb_FindVar(_self_.as<_1a480c3d3_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a4852e51_Var> __jule_trait_method_1a8107d2e_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a4810529_FindVar(_self_.as<_1a480eb55_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a4852e51_Var> __jule_trait_method_1a8107d2e_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a4829ca2_FindVar(_self_.as<_1a48293cd_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a48d46db_TypeAlias> __jule_trait_method_1a8108406_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a4725d79_FindTypeAlias(_self_.as<_1a4725065_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a48d46db_TypeAlias> __jule_trait_method_1a8108406_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a47d4a92_FindTypeAlias(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a48d46db_TypeAlias> __jule_trait_method_1a8108406_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a480d1e7_FindTypeAlias(_self_.as<_1a480c3d3_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a48d46db_TypeAlias> __jule_trait_method_1a8108406_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a4810925_FindTypeAlias(_self_.as<_1a480eb55_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a48d46db_TypeAlias> __jule_trait_method_1a8108406_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a482a19d_FindTypeAlias(_self_.as<_1a48293cd_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a4673ec5_Struct> __jule_trait_method_1a8108a11_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a4726275_FindStruct(_self_.as<_1a4725065_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a4673ec5_Struct> __jule_trait_method_1a8108a11_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a47d4e8d_FindStruct(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a4673ec5_Struct> __jule_trait_method_1a8108a11_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a480d5e3_FindStruct(_self_.as<_1a480c3d3_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a4673ec5_Struct> __jule_trait_method_1a8108a11_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a4810d21_FindStruct(_self_.as<_1a480eb55_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a4673ec5_Struct> __jule_trait_method_1a8108a11_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a482a599_FindStruct(_self_.as<_1a48293cd_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a471dc62_Fn> __jule_trait_method_1a810911b_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a4726671_FindFn(_self_.as<_1a4725065_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a471dc62_Fn> __jule_trait_method_1a810911b_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a47d5389_FindFn(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a471dc62_Fn> __jule_trait_method_1a810911b_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a480d9de_FindFn(_self_.as<_1a480c3d3_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a471dc62_Fn> __jule_trait_method_1a810911b_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a481121c_FindFn(_self_.as<_1a480eb55_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a471dc62_Fn> __jule_trait_method_1a810911b_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a482a995_FindFn(_self_.as<_1a48293cd_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a4729476_Trait> __jule_trait_method_1a8109726_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a47269b2_FindTrait(_self_.as<_1a4725065_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1a4729476_Trait> __jule_trait_method_1a8109726_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a47d56ca_FindTrait(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a4729476_Trait> __jule_trait_method_1a8109726_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a480dd30_FindTrait(_self_.as<_1a480c3d3_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a4729476_Trait> __jule_trait_method_1a8109726_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a481155d_FindTrait(_self_.as<_1a480eb55_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a4729476_Trait> __jule_trait_method_1a8109726_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a482acd6_FindTrait(_self_.as<_1a48293cd_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a472bb2c_Enum> __jule_trait_method_1a8109c76_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a4726d03_FindEnum(_self_.as<_1a4725065_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1a472bb2c_Enum> __jule_trait_method_1a8109c76_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a47d5a1b_FindEnum(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a472bb2c_Enum> __jule_trait_method_1a8109c76_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a480e171_FindEnum(_self_.as<_1a480c3d3_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a472bb2c_Enum> __jule_trait_method_1a8109c76_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a481189e_FindEnum(_self_.as<_1a480eb55_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a472bb2c_Enum> __jule_trait_method_1a8109c76_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a482b127_FindEnum(_self_.as<_1a48293cd_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a472d337_TypeEnum> __jule_trait_method_1a810a2c6_1a7e7add3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a4727144_FindTypeEnum(_self_.as<_1a4725065_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1a472d337_TypeEnum> __jule_trait_method_1a810a2c6_1a805098b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a47d5d5c_FindTypeEnum(_self_.as<_1a47d3cc2_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a472d337_TypeEnum> __jule_trait_method_1a810a2c6_1a7e7c533(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a480e4b2_FindTypeEnum(_self_.as<_1a480c3d3_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a472d337_TypeEnum> __jule_trait_method_1a810a2c6_1a7e7d37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a4811be0_FindTypeEnum(_self_.as<_1a480eb55_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a472d337_TypeEnum> __jule_trait_method_1a810a2c6_1a7e7a3dd(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a482b468_FindTypeEnum(_self_.as<_1a48293cd_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1aa3b9396_1aa3a8374(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3a8660_Name(_self_.as<_1aa3a8374_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3b9396_1aa3abc07(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3ab883_Name(_self_.as<_1aa3abc07_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3b9396_1aa3b0414(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b0090_Name(_self_.as<_1aa3b0414_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3b9396_1aa3b3b65(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b37e1_Name(_self_.as<_1aa3b3b65_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3b9396_1aa3b7372(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b6eed_Name(_self_.as<_1aa3b7372_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa3b9484_1aa3a8374(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3a8a39_Short(_self_.as<_1aa3a8374_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa3b9484_1aa3abc07(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3ac279_Short(_self_.as<_1aa3abc07_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa3b9484_1aa3b0414(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b0986_Short(_self_.as<_1aa3b0414_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa3b9484_1aa3b3b65(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b41d7_Short(_self_.as<_1aa3b3b65_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa3b9484_1aa3b7372(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b78e4_Short(_self_.as<_1aa3b7372_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3bad59_1aa3a8374(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3a87a3_What(_self_.as<_1aa3a8374_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3bad59_1aa3abc07(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3abee3_What(_self_.as<_1aa3abc07_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3bad59_1aa3b0414(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b0700_What(_self_.as<_1aa3b0414_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3bad59_1aa3b3b65(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b3e51_What(_self_.as<_1aa3b3b65_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa3bad59_1aa3b7372(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3b765d_What(_self_.as<_1aa3b7372_Flag>().alloc);
}
inline void __jule_trait_method_1aa3bb266_1aa3a8374(jule::Ptr<jule::Uintptr> _self_) {
	_1aa3a88e6_Reset(_self_.as<_1aa3a8374_Flag>().alloc);
}
inline void __jule_trait_method_1aa3bb266_1aa3abc07(jule::Ptr<jule::Uintptr> _self_) {
	_1aa3ac136_Reset(_self_.as<_1aa3abc07_Flag>().alloc);
}
inline void __jule_trait_method_1aa3bb266_1aa3b0414(jule::Ptr<jule::Uintptr> _self_) {
	_1aa3b0843_Reset(_self_.as<_1aa3b0414_Flag>().alloc);
}
inline void __jule_trait_method_1aa3bb266_1aa3b3b65(jule::Ptr<jule::Uintptr> _self_) {
	_1aa3b4094_Reset(_self_.as<_1aa3b3b65_Flag>().alloc);
}
inline void __jule_trait_method_1aa3bb266_1aa3b7372(jule::Ptr<jule::Uintptr> _self_) {
	_1aa3b77a1_Reset(_self_.as<_1aa3b7372_Flag>().alloc);
}


static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a8096509,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a8096509,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a8096509,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a8096509,
};
static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a80b4cca,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a80b4cca,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a80b4cca,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a80b4cca,
};
static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a809c840,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a809c840,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a809c840,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a809c840,
};
static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a80a81a8,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a80a81a8,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a80a81a8,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a80a81a8,
};
static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a80b1502,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a80b1502,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a80b1502,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a80b1502,
};
static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a80d1b71,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a80d1b71,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a80d1b71,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a80d1b71,
};
static _1a479de24_comptimeRangeKindMptrData _1a479de24_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1a479d2a8_index=__jule_trait_method_1a8102a60_1a80ca010,
	._1a479d61b_ready=__jule_trait_method_1a8103104_1a80ca010,
	._1a479da39_step=__jule_trait_method_1a81037ca_1a80ca010,
	._1a479dcc0_len=__jule_trait_method_1a8103eb2_1a80ca010,
};
static _1a48093d0_ImporterMptrData _1a48093d0_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a4808258_SetModPath=__jule_trait_method_1a8104303_1a8b02e44,
	._1a4808445_GetModPath=__jule_trait_method_1a8104754_1a8b02e44,
	._1a4808786_ModById=__jule_trait_method_1a8104b61_1a8b02e44,
	._1a4808ac7_GetImport=__jule_trait_method_1a8105128_1a8b02e44,
	._1a4808ec3_ImportPackage=__jule_trait_method_1a8105711_1a8b02e44,
	._1a480927b_Imported=__jule_trait_method_1a81060c4_1a8b02e44,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e78ac3,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e78ac3,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e77e46,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e77e46,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e91217,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e91217,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e69d5b,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e69d5b,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e7201c,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e7201c,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80aed19,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80aed19,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80997c6,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80997c6,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a8096509,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a8096509,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80b8097,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80b8097,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80b4cca,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80b4cca,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80a0b0c,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80a0b0c,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a809c840,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a809c840,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80ab475,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80ab475,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80a81a8,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80a81a8,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80b1502,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80b1502,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7ea2d3e,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7ea2d3e,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80bb111,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80bb111,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80d1b71,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80d1b71,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80cd2cc,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80cd2cc,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80ca010,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80ca010,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a80c1c60,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a80c1c60,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e5ab93,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e5ab93,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e6000a,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e6000a,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e66819,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e66819,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e765b5,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e765b5,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7edda8e,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7edda8e,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7edbeee,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7edbeee,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e74b68,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e74b68,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a7e680ce,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a7e680ce,
};
static _1a48d5027_KindMptrData _1a48d5027_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1a48d4a82_Str=__jule_trait_method_1a81065ad_1a9cb4676,
	._1a48d4dc3_Equal=__jule_trait_method_1a8106932_1a9cb4676,
};
static _1a49058b6_LookupMptrData _1a49058b6_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1a4903ba0_SelectPackage=__jule_trait_method_1a8106ea4_1a7e7add3,
	._1a490409b_FindVar=__jule_trait_method_1a8107d2e_1a7e7add3,
	._1a4904497_FindTypeAlias=__jule_trait_method_1a8108406_1a7e7add3,
	._1a4904893_FindStruct=__jule_trait_method_1a8108a11_1a7e7add3,
	._1a4904c8e_FindFn=__jule_trait_method_1a810911b_1a7e7add3,
	._1a49050d0_FindTrait=__jule_trait_method_1a8109726_1a7e7add3,
	._1a4905421_FindEnum=__jule_trait_method_1a8109c76_1a7e7add3,
	._1a4905762_FindTypeEnum=__jule_trait_method_1a810a2c6_1a7e7add3,
};
static _1a49058b6_LookupMptrData _1a49058b6_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1a4903ba0_SelectPackage=__jule_trait_method_1a8106ea4_1a805098b,
	._1a490409b_FindVar=__jule_trait_method_1a8107d2e_1a805098b,
	._1a4904497_FindTypeAlias=__jule_trait_method_1a8108406_1a805098b,
	._1a4904893_FindStruct=__jule_trait_method_1a8108a11_1a805098b,
	._1a4904c8e_FindFn=__jule_trait_method_1a810911b_1a805098b,
	._1a49050d0_FindTrait=__jule_trait_method_1a8109726_1a805098b,
	._1a4905421_FindEnum=__jule_trait_method_1a8109c76_1a805098b,
	._1a4905762_FindTypeEnum=__jule_trait_method_1a810a2c6_1a805098b,
};
static _1a49058b6_LookupMptrData _1a49058b6_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1a4903ba0_SelectPackage=__jule_trait_method_1a8106ea4_1a7e7c533,
	._1a490409b_FindVar=__jule_trait_method_1a8107d2e_1a7e7c533,
	._1a4904497_FindTypeAlias=__jule_trait_method_1a8108406_1a7e7c533,
	._1a4904893_FindStruct=__jule_trait_method_1a8108a11_1a7e7c533,
	._1a4904c8e_FindFn=__jule_trait_method_1a810911b_1a7e7c533,
	._1a49050d0_FindTrait=__jule_trait_method_1a8109726_1a7e7c533,
	._1a4905421_FindEnum=__jule_trait_method_1a8109c76_1a7e7c533,
	._1a4905762_FindTypeEnum=__jule_trait_method_1a810a2c6_1a7e7c533,
};
static _1a49058b6_LookupMptrData _1a49058b6_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1a4903ba0_SelectPackage=__jule_trait_method_1a8106ea4_1a7e7d37a,
	._1a490409b_FindVar=__jule_trait_method_1a8107d2e_1a7e7d37a,
	._1a4904497_FindTypeAlias=__jule_trait_method_1a8108406_1a7e7d37a,
	._1a4904893_FindStruct=__jule_trait_method_1a8108a11_1a7e7d37a,
	._1a4904c8e_FindFn=__jule_trait_method_1a810911b_1a7e7d37a,
	._1a49050d0_FindTrait=__jule_trait_method_1a8109726_1a7e7d37a,
	._1a4905421_FindEnum=__jule_trait_method_1a8109c76_1a7e7d37a,
	._1a4905762_FindTypeEnum=__jule_trait_method_1a810a2c6_1a7e7d37a,
};
static _1a49058b6_LookupMptrData _1a49058b6_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1a4903ba0_SelectPackage=__jule_trait_method_1a8106ea4_1a7e7a3dd,
	._1a490409b_FindVar=__jule_trait_method_1a8107d2e_1a7e7a3dd,
	._1a4904497_FindTypeAlias=__jule_trait_method_1a8108406_1a7e7a3dd,
	._1a4904893_FindStruct=__jule_trait_method_1a8108a11_1a7e7a3dd,
	._1a4904c8e_FindFn=__jule_trait_method_1a810911b_1a7e7a3dd,
	._1a49050d0_FindTrait=__jule_trait_method_1a8109726_1a7e7a3dd,
	._1a4905421_FindEnum=__jule_trait_method_1a8109c76_1a7e7a3dd,
	._1a4905762_FindTypeEnum=__jule_trait_method_1a810a2c6_1a7e7a3dd,
};
static _1a5c377da_CommonFlagMptrData _1a5c377da_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1a5c05ba4_Name=__jule_trait_method_1aa3b9396_1aa3a8374,
	._1a5c05ce7_Short=__jule_trait_method_1aa3b9484_1aa3a8374,
	._1a5c05ec3_What=__jule_trait_method_1aa3bad59_1aa3a8374,
	._1a5c37697_Reset=__jule_trait_method_1aa3bb266_1aa3a8374,
};
static _1a5c377da_CommonFlagMptrData _1a5c377da_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1a5c05ba4_Name=__jule_trait_method_1aa3b9396_1aa3abc07,
	._1a5c05ce7_Short=__jule_trait_method_1aa3b9484_1aa3abc07,
	._1a5c05ec3_What=__jule_trait_method_1aa3bad59_1aa3abc07,
	._1a5c37697_Reset=__jule_trait_method_1aa3bb266_1aa3abc07,
};
static _1a5c377da_CommonFlagMptrData _1a5c377da_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1a5c05ba4_Name=__jule_trait_method_1aa3b9396_1aa3b0414,
	._1a5c05ce7_Short=__jule_trait_method_1aa3b9484_1aa3b0414,
	._1a5c05ec3_What=__jule_trait_method_1aa3bad59_1aa3b0414,
	._1a5c37697_Reset=__jule_trait_method_1aa3bb266_1aa3b0414,
};
static _1a5c377da_CommonFlagMptrData _1a5c377da_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1a5c05ba4_Name=__jule_trait_method_1aa3b9396_1aa3b3b65,
	._1a5c05ce7_Short=__jule_trait_method_1aa3b9484_1aa3b3b65,
	._1a5c05ec3_What=__jule_trait_method_1aa3bad59_1aa3b3b65,
	._1a5c37697_Reset=__jule_trait_method_1aa3bb266_1aa3b3b65,
};
static _1a5c377da_CommonFlagMptrData _1a5c377da_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1a5c05ba4_Name=__jule_trait_method_1aa3b9396_1aa3b7372,
	._1a5c05ce7_Short=__jule_trait_method_1aa3b9484_1aa3b7372,
	._1a5c05ec3_What=__jule_trait_method_1aa3bad59_1aa3b7372,
	._1a5c37697_Reset=__jule_trait_method_1aa3bb266_1aa3b7372,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1a76806e8_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1a68d80c2_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1a68daaa8_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1a68e80b0_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1a68d849b_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1a68cc6b0_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1a68eb811_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a4852e51_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a48d46db_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a4673ec5_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a471dc62_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a4729476_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a472bb2c_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a472d337_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a46710d2_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a4276798_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a472b0c1_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a471c28d_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a47ce581_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a47cba34_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a48a2753_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a471aa3e_BackendEmitExprModel> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a4717376_BuiltinPrintCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a4717673_BuiltinPrintlnCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a4719653_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a471ad3b_FreeExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a471396b_FnCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a47cc66c_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a47cc969_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a4667a35_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a47cce20_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a466843c_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a47cd86b_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a47cdc01_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a47cebe1_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a47d00ba_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a47d0571_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a46592b8_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a47142eb_IndexingExprModel> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a47d0a27_MultiAssign> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a47d1264_Match> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a47d2485_FallSt> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a47ce0ca_BreakSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a47d282b_RetSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a4663767_ScopeTree> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a46665b1_VarDecl> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a466a263_TypeAliasDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a465799d_Expr> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a4669a26_Conditional> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a466720a_Iter> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a4668be0_ContSt> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a4660c4d_LabelSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a4661127_GotoSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a4662117_AssignSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a466b033_MatchCase> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a4661424_FallSt> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a4668816_BreakSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a466698a_RetSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a4658372_UseExpr> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a4721d20_FnIns> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a4676d30_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a4670125_Impl> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a466e278_StructDecl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a4665406_FnDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a466e9b5_TraitDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a466c62d_EnumDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a466d5b8_TypeEnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a4655935_ArrTypeDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a4654a99_SlcTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a4655193_PtrTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a4654714_SptrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a4656183_MapTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a4654d96_TupleTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a4653c74_IdentTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a4659e34_VariadicExpr> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a4713d45_SliceExprModel> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a465c1bc_FieldExprPair> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a465d7c8_KeyValPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a4658592_TupleExpr> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a4717079_TupleExprModel> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a465b6c7_FnCallExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a471a6ba_RuneExprModel> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a48d54cd_Type> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a4716c7c_ArrayExprModel> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a465aab1_SubIdentExpr> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a465403d_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a4659a5a_UnaryExpr> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a4653669_TypeDecl> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a465a6d7_NamespaceExpr> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a4654417_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a47155d8_SlicingExprModel> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a47130b9_CastingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a465e004_SliceExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a4712739_StructLitExprModel> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a47168a3_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a4715b6b_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a471650c_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a4715055_MapExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a47147a2_AnonFnExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a4657c67_RangeExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a4658938_LitExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a4658d12_UnsafeExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a465e961_IndexingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a46600c1_SlicingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a465a30d_CastExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a465c9e7_StructLit> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a465ce9d_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a465b067_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a4711d65_UnaryExprModel> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a471198b_BinaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a4712a36_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a4717a4c_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a4718da0_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a4719d29_SizeofExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a471a4cd_AlignofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a6130001_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a6132ae7_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a61317d8_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a6132344_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a613271d_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a6130584_SwapExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a61309a2_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a6131255_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a6131b6d_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a6132de4_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a6130c9e_RefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a4712393_StructArgExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a61331e1_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1a6131e6a_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1a68e12d9_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1a68eb48c_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1a68d2bb0_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1a68d08e4_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1a68e372b_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1a68e5b6d_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
inline jule::Bool __jule_anon1a81e8ded(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4720bba_ParamIns> _25021_p1, jule::Ptr<_1a4720bba_ParamIns> _25036_p2);
struct __jule_anon_1a4b4dd40_ctx{
	jule::Ptr<_1a479eba0_comptimeStructField> _self_;
};
static void __jule_anon_1a4b4dd40_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b4dd40_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b4dd40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _6521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _6536_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b50d0e_ctx{
	jule::Ptr<_1a479eba0_comptimeStructField> _self_;
};
static void __jule_anon_1a4b50d0e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b50d0e_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b50d0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _7221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _7236_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b648d3_ctx{
	jule::Ptr<_1a47a2dc3_comptimeStatic> _self_;
};
static void __jule_anon_1a4b648d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b648d3_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b648d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _17821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _17836_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b6685d_ctx{
	jule::Ptr<_1a47a2dc3_comptimeStatic> _self_;
};
static void __jule_anon_1a4b6685d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b6685d_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b6685d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _18521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _18536_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b77ce2_ctx{
	jule::Ptr<_1a47a60e6_comptimeEnumField> _self_;
};
static void __jule_anon_1a4b77ce2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b77ce2_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b77ce2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _28321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _28336_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b9005c_ctx{
	jule::Ptr<_1a47a8e0c_comptimeParam> _self_;
};
static void __jule_anon_1a4b9005c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b9005c_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b9005c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _40221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _40236_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b91ed7_ctx{
	jule::Ptr<_1a47a8e0c_comptimeParam> _self_;
};
static void __jule_anon_1a4b91ed7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b91ed7_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b91ed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _40921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _40936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4b93e62_ctx{
	jule::Ptr<_1a47a8e0c_comptimeParam> _self_;
};
static void __jule_anon_1a4b93e62_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4b93e62_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b93e62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _41621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _41636_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c2e75b_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c2e75b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c2e75b_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c2e75b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _97421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _97436_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c316d6_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c316d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c316d6_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c316d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _98121_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _98136_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c33661_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c33661_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c33661_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c33661(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _98821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _98836_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c355db_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c355db_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c355db_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c355db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _99521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _99536_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c37566_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c37566_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c37566_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c37566(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _100221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _100236_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c394e1_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c394e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c394e1_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c394e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _100921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _100936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c3b46b_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c3b46b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c3b46b_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c3b46b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _101621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _101636_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c3d3e6_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c3d3e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c3d3e6_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c3d3e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _102321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _102336_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c405e6_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c405e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c405e6_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c405e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _103021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _103036_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c42571_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c42571_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c42571_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c42571(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _103721_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _103736_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c444eb_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c444eb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c444eb_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c444eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _104421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _104436_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c46476_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c46476_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c46476_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c46476(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _105121_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _105136_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c48401_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c48401_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c48401_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c48401(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _105821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _105836_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c4a37b_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c4a37b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c4a37b_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c4a37b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _106521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _106536_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c4c306_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c4c306_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c4c306_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c4c306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _107221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _107236_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c4e281_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c4e281_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c4e281_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c4e281(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _107921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _107936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c5120b_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c5120b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c5120b_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c5120b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _108621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _108636_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a4c53186_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a4c53186_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a4c53186_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c53186(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _109321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _109336_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83706e5_ctx{
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a83706e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83706e5_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83706e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _110021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _110036_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a839bc60_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a839bc60_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a839bc60_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a839bc60(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _126221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _126236_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a839dbda_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a839dbda_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a839dbda_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a839dbda(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _126921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _126936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83a0b65_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a83a0b65_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83a0b65_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a0b65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _127621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _127636_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83a2ae0_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a83a2ae0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83a2ae0_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a2ae0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _128321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _128336_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83a4a6a_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a83a4a6a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83a4a6a_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a4a6a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _129021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _129036_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83a69e5_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a83a69e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83a69e5_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a69e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _129721_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _129736_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83a8970_ctx{
	jule::Ptr<_1a47b5149_comptimeValue> _self_;
};
static void __jule_anon_1a83a8970_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83a8970_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a8970(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _130421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _130436_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83bd6aa_ctx{
	jule::Ptr<_1a47b9824_comptimeFile> _self_;
};
static void __jule_anon_1a83bd6aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83bd6aa_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83bd6aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _142921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _142936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83c0635_ctx{
	jule::Ptr<_1a47b9824_comptimeFile> _self_;
};
static void __jule_anon_1a83c0635_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83c0635_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83c0635(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _143621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _143636_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a83c25b0_ctx{
	jule::Ptr<_1a47b9824_comptimeFile> _self_;
};
static void __jule_anon_1a83c25b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a83c25b0_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83c25b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _144321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _144336_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a843758c_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a843758c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a843758c_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a843758c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _194921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _194936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a8439517_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a8439517_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8439517_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8439517(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _195621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _195636_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a843b492_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a843b492_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a843b492_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a843b492(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _196321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _196336_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a843d41c_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a843d41c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a843d41c_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a843d41c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _197021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _197036_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a8440397_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a8440397_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8440397_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8440397(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _197721_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _197736_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a8442322_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a8442322_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8442322_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8442322(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _198421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _198436_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a844429c_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a844429c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a844429c_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a844429c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _199121_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _199136_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a8446227_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a8446227_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8446227_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8446227(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _199821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _199836_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a8448427_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a8448427_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8448427_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8448427(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _200521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _200536_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a844a3a2_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a844a3a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a844a3a2_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a844a3a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _201221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _201236_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a844c32c_ctx{
	jule::Ptr<_1a47bd73a_comptimeDecl> _self_;
};
static void __jule_anon_1a844c32c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a844c32c_ctx>().dealloc(); }
inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a844c32c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _201921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _201936_fc, jule::Ptr<_1a48a2753_Data>* );
struct __jule_anon_1a8458602_ctx{
	jule::Ptr<_1a47c5126_constraintChecker> _self_;
};
static void __jule_anon_1a8458602_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8458602_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8458602(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>* _6433_generics);
struct __jule_anon_1a86b32c9_ctx{
	jule::Ptr<_1a480c3d3_ImportInfo> *_48528_pkg;
};
static void __jule_anon_1a86b32c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a86b32c9_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a86b32c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480c3d3_ImportInfo> _48635_spkg);
struct __jule_anon_1a826c713_ctx{
	jule::Ptr<_1a4721d20_FnIns> _82643_f;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _82711_generics;
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> *_82659_ignored;
};
static void __jule_anon_1a826c713_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a826c713_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a826c713(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _83342_sema);
struct __jule_anon_1a82856d7_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*> _92946_algo;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _9347_generics;
};
static void __jule_anon_1a82856d7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a82856d7_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a82856d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _93642_sema);
struct __jule_anon_1a8289ec2_ctx{
	jule::Ptr<_1a4721d20_FnIns> _94837_f;
	jule::Ptr<_1a48293cd_sema> _self_;
};
static void __jule_anon_1a8289ec2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8289ec2_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8289ec2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _95237_sema, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>* _95255_generics);
inline jule::Str __jule_anon1a91380d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1a9723a64_ctx{
	jule::Ptr<_1a6240276_ObjectDeadCode> _self_;
};
static void __jule_anon_1a9723a64_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9723a64_ctx>().dealloc(); }
inline void __jule_anon_1a9723a64(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _20331_file);
struct __jule_anon_1a977bbaa_ctx{
	_1a6248878_exprDeadCode *_self_;
};
static void __jule_anon_1a977bbaa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a977bbaa_ctx>().dealloc(); }
inline void __jule_anon_1a977bbaa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1a9b05110_ctx{
	_1a613d680_exprOptimizer *_self_;
};
static void __jule_anon_1a9b05110_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9b05110_ctx>().dealloc(); }
inline void __jule_anon_1a9b05110(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _59047_m);
struct __jule_anon_1a9ccd0c9_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1a9ccd0c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9ccd0c9_ctx>().dealloc(); }
inline void __jule_anon_1a9ccd0c9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9cd1ad3_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
	jule::Ptr<_1a47cd86b_RangeIter> *_9336_it;
};
static void __jule_anon_1a9cd1ad3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9cd1ad3_ctx>().dealloc(); }
inline void __jule_anon_1a9cd1ad3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9d021b9_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
};
static void __jule_anon_1a9d021b9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9d021b9_ctx>().dealloc(); }
inline void __jule_anon_1a9d021b9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9d046a5_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
};
static void __jule_anon_1a9d046a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9d046a5_ctx>().dealloc(); }
inline void __jule_anon_1a9d046a5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9d1d669_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
};
static void __jule_anon_1a9d1d669_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9d1d669_ctx>().dealloc(); }
inline void __jule_anon_1a9d1d669(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9dad8c4_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
};
static void __jule_anon_1a9dad8c4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9dad8c4_ctx>().dealloc(); }
inline void __jule_anon_1a9dad8c4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9daec05_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
	jule::Ptr<_1a47d1264_Match> _76130_m;
};
static void __jule_anon_1a9daec05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9daec05_ctx>().dealloc(); }
inline void __jule_anon_1a9daec05(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a9e305c2_ctx{
	jule::Ptr<_1a624dbe1_scopeCoder> _self_;
	jule::Ptr<_1a47147a2_AnonFnExprModel> _113134_m;
};
static void __jule_anon_1a9e305c2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9e305c2_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a9e305c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4852e51_Var> _113767_v);
struct __jule_anon_1aa2bb991_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa2bb991_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa2bb991_ctx>().dealloc(); }
inline void __jule_anon_1aa2bb991(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _84038_pkg);
struct __jule_anon_1aa2d1797_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
	jule::Ptr<_1a4852e51_Var> _92524_v;
};
static void __jule_anon_1aa2d1797_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa2d1797_ctx>().dealloc(); }
inline void __jule_anon_1aa2d1797(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa2d3887_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
	jule::Ptr<_1a4852e51_Var> _92524_v;
};
static void __jule_anon_1aa2d3887_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa2d3887_ctx>().dealloc(); }
inline void __jule_anon_1aa2d3887(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa2d6093_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa2d6093_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa2d6093_ctx>().dealloc(); }
inline void __jule_anon_1aa2d6093(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa2d723c_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
	jule::Ptr<_1a4852e51_Var> _92524_v;
};
static void __jule_anon_1aa2d723c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa2d723c_ctx>().dealloc(); }
inline void __jule_anon_1aa2d723c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa321573_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa321573_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa321573_ctx>().dealloc(); }
inline void __jule_anon_1aa321573(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _118738_pkg);
struct __jule_anon_1aa322a4c_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa322a4c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa322a4c_ctx>().dealloc(); }
inline void __jule_anon_1aa322a4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _121031_file);
struct __jule_anon_1aa32dddd_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa32dddd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa32dddd_ctx>().dealloc(); }
inline void __jule_anon_1aa32dddd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _124938_pkg);
struct __jule_anon_1aa3340be_ctx{
	jule::Ptr<_1a5ba9a7b_traitHash> _12827_hash;
};
static void __jule_anon_1aa3340be_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa3340be_ctx>().dealloc(); }
inline void __jule_anon_1aa3340be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn>* _128636_m);
struct __jule_anon_1aa336698_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa336698_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa336698_ctx>().dealloc(); }
inline void __jule_anon_1aa336698(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _130038_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aa3d39a9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aa3db61b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon1a4b42619(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480c3d3_ImportInfo> _203925_pkg);
struct __jule_anon_1a89a0a6c_ctx{
	jule::Str _472038_namespace;
};
static void __jule_anon_1a89a0a6c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89a0a6c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a89a0a6c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480c3d3_ImportInfo> _472130_imp);
struct __jule_anon_1aa2bc8a4_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa2bc8a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa2bc8a4_ctx>().dealloc(); }
inline void __jule_anon_1aa2bc8a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _84132_file);
struct __jule_anon_1aa322486_ctx{
	jule::Ptr<_1a480eb55_Package> *_118738_pkg;
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa322486_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa322486_ctx>().dealloc(); }
inline void __jule_anon_1aa322486(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _118832_file);
struct __jule_anon_1aa3375ab_ctx{
	jule::Ptr<_1a5bab61b_ObjectCoder> _self_;
};
static void __jule_anon_1aa3375ab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa3375ab_ctx>().dealloc(); }
inline void __jule_anon_1aa3375ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _130132_file);
jule::Array<jule::Array<jule::Str,2>,5> _1ce7a224e_HelpMap;
jule::Str _1a5c3deea_OutDir;
jule::Str _1a5c3e2e7_OutName;
jule::Str _1a5c3e5a0_Out;
jule::Uintptr _1e73a4ac5_STDIN;
jule::Uintptr _1e73a4d6c_STDOUT;
jule::Uintptr _1e73a5169_STDERR;
jule::Array<jule::U8,256> _1cc620344_first;
jule::Array<_1cc6208e9_acceptRange,16> _1cc620c90_acceptRanges;
jule::Array<jule::U8,32> _1cc793682__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1cc793c6a__DE_BRUIJN64_TAB;
jule::I32 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1ce78089d_RangeTable> _1ce7182e7__L;
jule::Ptr<_1ce78089d_RangeTable> _1ce71920a__LU;
jule::Ptr<_1ce78089d_RangeTable> _1ce7201de_Letter;
jule::Ptr<_1ce78089d_RangeTable> _1ce7264ae_Upper;
jule::Slice<_1ce77e946_CaseRange> _1ce773b9e__CaseRanges;
jule::Array<jule::U8,256> _1ce773e8a__PROPERTIES;
jule::Array<jule::U16,128> _1ce77aac9_asciiFold;
jule::Slice<_1ce77e44b_foldPair> _1ce77adb5_caseOrbit;
jule::Array<jule::Str,4> _1cc8354d2_CppHeaderExts;
jule::Array<jule::Str,3> _1cc833e09_CppExts;
jule::Array<jule::Str,1> _1cc835b97_ObjectiveCppExts;
jule::Str _1ce79807a_PathStdlib;
jule::Str _1ce7982cd_PathExec;
jule::Str _1ce798564_PathWd;
jule::Str _1ce798861_PathApi;
jule::Str _1ce798b19_OS;
jule::Str _1ce798dc2_Arch;
jule::Str _1ce79d7ab_Compiler;
jule::Str _1ce79eba8_CompilerPath;
jule::Str _1ce79edb7_CppStd;
jule::Bool _1ce7a015e_Shadowing;
jule::Bool _1ce7a0417_Transpilation;
jule::Bool _1ce7a06c0_Test;
jule::Bool _1ce7a0978_RC;
jule::Bool _1ce7a0d41_Safety;
jule::Bool _1ce7a1083_Production;
_1b455e554_floatInfo _1b455e91c_f32info;
_1b455e554_floatInfo _1b455ec19_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1b4567639_detailedPowsOfTen;
jule::Slice<jule::I32> _1b4569394_powtab;
jule::Slice<jule::F64> _1b4569e55_f64pow10;
jule::Slice<jule::F32> _1b456a285_f32pow10;
jule::Array<jule::U64,20> _1b456d486_u64pow10;
jule::Slice<_1b4572226_leftCheat> _1b4572655_leftCheats;
jule::Array<jule::I32,5> _1a4590045_Spaces;
jule::Array<jule::U32,6> _1a4590254_UnaryOps;
jule::Array<jule::U32,18> _1a459052e_BinOps;
jule::Array<jule::U32,2> _1a463761a_PostfixOps;
jule::Array<jule::U32,11> _1a4637906_AssignOps;
jule::Array<_1a4645b45_kindPair,28> _1a4646030_keywords;
jule::Array<_1a4645b45_kindPair,46> _1a4646360_basicOps;
jule::I32 _1a4793567_BitSize;
jule::Str _1a47937cb_SysInt;
jule::Str _1a4793a84_SysUint;
jule::Slice<jule::Str> _1a47c47da_builtinConstraints;
jule::Ptr<_1a48d54cd_Type> _1a4958573_primNil;
jule::Ptr<_1a48d54cd_Type> _1a4958870_primVoid;
jule::Ptr<_1a48d54cd_Type> _1a4958b28_primAny;
jule::Ptr<_1a48d54cd_Type> _1a4958e25_primStr;
jule::Ptr<_1a48d54cd_Type> _1a49591cd_primBool;
jule::Ptr<_1a48d54cd_Type> _1a4959486_primUintptr;
jule::Ptr<_1a48d54cd_Type> _1a495973e_primUint;
jule::Ptr<_1a48d54cd_Type> _1a4959b07_primInt;
jule::Ptr<_1a48d54cd_Type> _1a4959d49_primI8;
jule::Ptr<_1a48d54cd_Type> _1a495a0e1_primI16;
jule::Ptr<_1a48d54cd_Type> _1a495a399_primI32;
jule::Ptr<_1a48d54cd_Type> _1a495a652_primI64;
jule::Ptr<_1a48d54cd_Type> _1a495a90a_primU8;
jule::Ptr<_1a48d54cd_Type> _1a495abb3_primU16;
jule::Ptr<_1a48d54cd_Type> _1a495ae6b_primU32;
jule::Ptr<_1a48d54cd_Type> _1a495b455_primU64;
jule::Ptr<_1a48d54cd_Type> _1a495b697_primF32;
jule::Ptr<_1a48d54cd_Type> _1a495b8a6_primF64;
jule::Ptr<_1a53912a7_Meta> _1a5390916_ProgramMeta;
jule::Ptr<_1a6146d3c_data> _1a614637a_emptyData;
jule::Bool _1a614b32a_Copy;
jule::Bool _1a614b627_Deadcode;
jule::Bool _1a614b8d0_Append;
jule::Bool _1a614bbcc_Math;
jule::Bool _1a614be85_Access;
jule::Bool _1a614c23d_Inline;
jule::Bool _1a614c4e6_Ptr;
jule::Bool _1a614c8ae_Cond;
jule::Bool _1a614cb01_Str;
jule::Bool _1a614cd98_Slice;
jule::Bool _1a614d151_Assign;
jule::Bool _1a614d409_Exceptional;
jule::Bool _1a614d6b2_Iter;
jule::Bool _1a614d96a_Dynamic;
jule::Bool _1a614dc23_StdStrings;
jule::Bool _1a62494d3_exprEnabled;
jule::Bool _1a6249868_scopeEnabled;
jule::Array<jule::U64,12> _1a5b9cd27_mdays;
jule::Str _1a624d482_assignArgName;
jule::Ptr<_1a48d54cd_Type> _1a5ba8a8b_generalGCPtr;
jule::Slice<_1ce77e946_CaseRange> _1ce7738b3_CaseRanges;


inline jule::Bool _1cc6208e9_acceptRange_eq(_1cc6208e9_acceptRange *_self_, _1cc6208e9_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1e747d682_LittleEndian_eq(_1e747d682_LittleEndian *_self_, _1e747d682_LittleEndian _other_) { return true; }

inline jule::U32 static__1e747e9e6_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1e7480420_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1e7483bd7_u128_eq(_1e7483bd7_u128 *_self_, _1e7483bd7_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1a9b970a3_group_eq(_1a9b970a3_group *_self_, _1a9b970a3_group _other_) {
	return 
		_1a6922738_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1a9b977e0_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1a9b94c60__Map> static__1a9b95326_make(void) {
	return jule::new_ptr<_1a9b94c60__Map>(_1a9b94c60__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1a9b970a3_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1a9b9547a_initData(_1a9b94c60__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1cc7a35a4_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1a9b970a3_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9b970a3_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I32 __jule_x = _1363_groups; jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bb45ba:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1cc7a37b3_newEmptyMetadata();
			}
			_iter_next_1a9bb45ba:;
			++it;
			_1407_i++;
			goto _iter_begin_1a9bb45ba;
		}
		_iter_end_1a9bb45ba:;
	};
}



inline jule::U64 _1a9b955ce_hash(_1a9b94c60__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1a68cc6b0_toStr(_14616_k);;
	return _1e748715d_hash(_1e73d2bad_StrBytes(_1473_bytes));;
}



inline void _1a9b95733_rehash(_1a9b94c60__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1a9b9547a_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1a9b970a3_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1a9b970a3_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1a9b970a3_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9b970a3_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bb7bc8:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1cc7a37b3_newEmptyMetadata();
			}
			_iter_next_1a9bb7bc8:;
			++it;
			_1617_i++;
			goto _iter_begin_1a9bb7bc8;
		}
		_iter_end_1a9bb7bc8:;
	};
	(*(_self_))._field_limit=({ jule::I32 __jule_x = _15122_n; jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bb7821:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9bb969c:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1a9bb969c;
							};
							{
								(*(_1a9b95c94_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1a9bb969c:;
						++it;
						_1678_s++;
						goto _iter_begin_1a9bb969c;
					}
					_iter_end_1a9bb969c:;
				};
			}
			_iter_next_1a9bb7821:;
			++it;
			_1667_g++;
			goto _iter_begin_1a9bb7821;
		}
		_iter_end_1a9bb7821:;
	};
}



inline jule::I32 _1a9b95887_nextSize(_1a9b94c60__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1a9b959db_lookup(jule::Ptr<_1a9b94c60__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1cc7a3b8c_splitHash(_1a9b955ce_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1cc7a3e89_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1cc7a263b_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1cc7a2c13_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1a9bc0d8a:;
			}
			_iter_end_1a9bc0d8a:;;
			_2018_matches=_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1a9bbca8a:;
	}
	_iter_end_1a9bbca8a:;;
}



inline jule::Bool _1a9b95b40_get(jule::Ptr<_1a9b94c60__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1a9b959db_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1a9b95c94_set(_1a9b94c60__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1a9b95733_rehash(_self_, _1a9b95887_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1cc7a3b8c_splitHash(_1a9b955ce_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1cc7a3e89_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1cc7a263b_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1cc7a2c13_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1a9bc8bc8:;
			}
			_iter_end_1a9bc8bc8:;;
			_2488_matches=_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1cc7a2c13_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1a9bc7b72:;
	}
	_iter_end_1a9bc7b72:;;
}



inline jule::Bool _1a9b95de8_del(jule::Ptr<_1a9b94c60__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1cc7a3b8c_splitHash(_1a9b955ce_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1cc7a3e89_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1cc7a263b_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1cc7a2c13_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1a9bd18b2:;
			}
			_iter_end_1a9bd18b2:;;
			_2838_matches=_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1a9bd063b:;
	}
	_iter_end_1a9bd063b:;;
}



inline void _1a9b9604c_clear(jule::Ptr<_1a9b94c60__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bd815a:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9bd8ac8:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1a9bd8ac8:;
						++it;
						_3298_j++;
						goto _iter_begin_1a9bd8ac8;
					}
					_iter_end_1a9bd8ac8:;
				};
			}
			_iter_next_1a9bd815a:;
			++it;
			_3287_i++;
			goto _iter_begin_1a9bd815a;
		}
		_iter_end_1a9bd815a:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bd0be1:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1a9b970a3_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9bda558:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1a9bda558:;
							++it;
							_3389_j++;
							goto _iter_begin_1a9bda558;
						}
						_iter_end_1a9bda558:;
					};
				};
			}
			_iter_next_1a9bd0be1:;
			++it;
			_3357_i++;
			goto _iter_begin_1a9bd0be1;
		}
		_iter_end_1a9bd0be1:;
	};
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I32 _1a9b961a1_len(jule::Ptr<_1a9b94c60__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I32 _1a9b96305_cap(_1a9b94c60__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1a9ba14db_mapIterator _1a9b96459_iterator(jule::Ptr<_1a9b94c60__Map> _self_) {
	_1a9ba14db_mapIterator _3607_iterator = _1a9ba14db_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1a9b970a3_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1a9ba1a6e_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1a9be61ac__Map> static__1a9be66c9_make(void) {
	return jule::new_ptr<_1a9be61ac__Map>(_1a9be61ac__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1a9be82e1_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1a9be682d_initData(_1a9be61ac__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1cc7a35a4_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1a9be82e1_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9be82e1_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a4721d20_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4721d20_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I32 __jule_x = _1363_groups; jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c13905:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1cc7a37b3_newEmptyMetadata();
			}
			_iter_next_1a9c13905:;
			++it;
			_1407_i++;
			goto _iter_begin_1a9c13905;
		}
		_iter_end_1a9c13905:;
	};
}



inline jule::U64 _1a9be6982_hash(_1a9be61ac__Map* _self_, jule::Ptr<_1a4721d20_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1a875e95d_toStr(_14616_k);;
	return _1e748715d_hash(_1e73d2bad_StrBytes(_1473_bytes));;
}



inline void _1a9be6ad6_rehash(_1a9be61ac__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1a9be682d_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1a9be82e1_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1a9be82e1_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1a9be82e1_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9be82e1_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a4721d20_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4721d20_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c17013:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1cc7a37b3_newEmptyMetadata();
			}
			_iter_next_1a9c17013:;
			++it;
			_1617_i++;
			goto _iter_begin_1a9c17013;
		}
		_iter_end_1a9c17013:;
	};
	(*(_self_))._field_limit=({ jule::I32 __jule_x = _15122_n; jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c16b5b:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9c189d7:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1a9c189d7;
							};
							{
								(*(_1a9be7147_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1a9c189d7:;
						++it;
						_1678_s++;
						goto _iter_begin_1a9c189d7;
					}
					_iter_end_1a9c189d7:;
				};
			}
			_iter_next_1a9c16b5b:;
			++it;
			_1667_g++;
			goto _iter_begin_1a9c16b5b;
		}
		_iter_end_1a9c16b5b:;
	};
}



inline jule::I32 _1a9be6c3a_nextSize(_1a9be61ac__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1a9be6d8e_lookup(jule::Ptr<_1a9be61ac__Map> _self_, jule::Ptr<_1a4721d20_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1cc7a3b8c_splitHash(_1a9be6982_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1cc7a3e89_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1cc7a263b_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1cc7a2c13_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1a9c201c5:;
			}
			_iter_end_1a9c201c5:;;
			_2018_matches=_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1a9c1bdc5:;
	}
	_iter_end_1a9c1bdc5:;;
}



inline jule::Slice<jule::Uintptr> _1a9be6ee3_get(jule::Ptr<_1a9be61ac__Map> _self_, jule::Ptr<_1a4721d20_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1a9be6d8e_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1a9be7147_set(_1a9be61ac__Map* _self_, jule::Ptr<_1a4721d20_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1a9be6ad6_rehash(_self_, _1a9be6c3a_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1cc7a3b8c_splitHash(_1a9be6982_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1cc7a3e89_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1cc7a263b_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1cc7a2c13_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1a9c28013:;
			}
			_iter_end_1a9c28013:;;
			_2488_matches=_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1cc7a2c13_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1a9c26eac:;
	}
	_iter_end_1a9c26eac:;;
}



inline jule::Bool _1a9be729b_del(jule::Ptr<_1a9be61ac__Map> _self_, jule::Ptr<_1a4721d20_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1cc7a3b8c_splitHash(_1a9be6982_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1cc7a3e89_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1cc7a263b_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1cc7a2c13_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1a4721d20_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1a9c30bec:;
			}
			_iter_end_1a9c30bec:;;
			_2838_matches=_1cc7a2949_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1a9c2e976:;
	}
	_iter_end_1a9c2e976:;;
}



inline void _1a9be7400_clear(jule::Ptr<_1a9be61ac__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c37495:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9c37e13:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1a9c37e13:;
						++it;
						_3298_j++;
						goto _iter_begin_1a9c37e13;
					}
					_iter_end_1a9c37e13:;
				};
			}
			_iter_next_1a9c37495:;
			++it;
			_3287_i++;
			goto _iter_begin_1a9c37495;
		}
		_iter_end_1a9c37495:;
	};
	jule::Ptr<_1a4721d20_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c3002b:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1a9be82e1_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9c3a564:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1a9c3a564:;
							++it;
							_3389_j++;
							goto _iter_begin_1a9c3a564;
						}
						_iter_end_1a9c3a564:;
					};
				};
			}
			_iter_next_1a9c3002b:;
			++it;
			_3357_i++;
			goto _iter_begin_1a9c3002b;
		}
		_iter_end_1a9c3002b:;
	};
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I32 _1a9be7554_len(jule::Ptr<_1a9be61ac__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I32 _1a9be76a8_cap(_1a9be61ac__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1a9c0078d_mapIterator _1a9be780c_iterator(jule::Ptr<_1a9be61ac__Map> _self_) {
	_1a9c0078d_mapIterator _3607_iterator = _1a9c0078d_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1a9be82e1_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1a9c00d21_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1a9ba1a6e_init(_1a9ba14db_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1a9b970a3_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1a9b961a1_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1e70e1746_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1a9ba1bc3_next(_1a9ba14db_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1a9ba9659;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1a9ba9659:;
			}
			_iter_end_1a9ba9659:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1a9ba88de:;
	}
	_iter_end_1a9ba88de:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1a9c00d21_init(_1a9c0078d_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1a9be82e1_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1a9be7554_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1e70e1746_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1a4721d20_FnIns__jule_tuple_psuintptr _1a9c00e75_next(_1a9c0078d_mapIterator* _self_) {
	__jule_tuple_px_1a4721d20_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1a9c08994;
					};
					jule::Ptr<_1a4721d20_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1a9c08994:;
			}
			_iter_end_1a9c08994:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1a9c07c29:;
	}
	_iter_end_1a9c07c29:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _1e71a80b0_Builder static__1e71a892e_New(jule::I32 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1e71a80b0_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I32> _1e71a8c70_Write(_1e71a80b0_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1e71a90b1_WriteStr(_1e71a80b0_Builder* _self_, jule::Str _4124_s) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1e71a9369_WriteByte(_1e71a80b0_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1e71a96aa_WriteRune(_1e71a80b0_Builder* _self_, jule::I32 _5525_r) {
	jule::I32 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1cc6229b7_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Str _1e71a9941_Str(_1e71a80b0_Builder* _self_) {
	jule::Str _687_s = _1e73d320d_StrFromBytes((*(_self_))._field_buf);;
	_1e71a9b3e_Clear(_self_);
	return _687_s;;
}



inline void _1e71a9b3e_Clear(_1e71a80b0_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1e71a9dc5_Len(_1e71a80b0_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1e71aa3e2_Buf(_1e71a80b0_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1e71aa69a_SetBuf(_1e71a80b0_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _1ce77e44b_foldPair_eq(_1ce77e44b_foldPair *_self_, _1ce77e44b_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1ce77e946_CaseRange_eq(_1ce77e946_CaseRange *_self_, _1ce77e946_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1a6970ce7_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1ce77edec_Range16_eq(_1ce77edec_Range16 *_self_, _1ce77edec_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1ce78042a_Range32_eq(_1ce78042a_Range32 *_self_, _1ce78042a_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _1ce78e1e7_index(_1ce78dc30_lazyBuff* _self_, jule::I32 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1ce78e4a0_append(_1ce78dc30_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1ce78e736_string(_1ce78dc30_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1e73d2e44_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1cd618acd_cmdAttrs_eq(_1cd618acd_cmdAttrs *_self_, _1cd618acd_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _1cd61d40c_File_eq(_1cd61d40c_File *_self_, _1cd61d40c_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_1cd61d40c_File> static__1cd61dde1_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1cd61d40c_File>(_1cd61d40c_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1cd61d40c_File>> static__1cd61e1aa_Create(jule::Str _7819_path) {
	return static__1cd622213_Open(_7819_path, static_cast<jule::I32>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1cd61e474_Read(jule::Str _9017_path) {
	_1cd62092b_Stat _913_s = ({
		auto except = static__1ce7978d7_Of(_9017_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1cd6210be_IsReg(&_913_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _967_sz = static_cast<jule::I32>(_1cd621355_Size(&_913_s));;
	if ((_967_sz != static_cast<jule::I32>(_1cd621355_Size(&_913_s)))) {
		_967_sz=0LL;
	};
	if ((_967_sz < 512LLU)) {
		_967_sz=512LLU;
	};
	jule::Ptr<_1cd61d40c_File> _1097_f = ({
		auto except = static__1cd622213_Open(_9017_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1cd61d40c_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1107_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_967_sz, _967_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1117_n = 0LL;;
	while ((_1117_n < _967_sz)) {
		{
			jule::I32 _1134_rn = ({
				auto except = _1cd622c19_Read(_1097_f.ptr(), _1107_buf.slice(_1117_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1134_rn == 0LL)) {
				goto _iter_end_1a76a7896;
			};
			_1117_n+=_1134_rn;
		}
	_iter_next_1a76a7896:;
	}
	_iter_end_1a76a7896:;;
	({
		auto except = _1cd620123_Close(_1097_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1107_buf.slice(0LL, _1117_n)};;
}



inline jule::VoidExceptional static__1cd61e81a_Write(jule::Str _12918_path, jule::Slice<jule::U8> _12929_data, jule::I32 _12943_perm) {
	jule::Ptr<_1cd61d40c_File> _1307_f = ({
		auto except = static__1cd622213_Open(_12918_path, static_cast<jule::I32>(769LL), _12943_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1cd61d40c_File>(nullptr);});
	});;
	jule::I32 _1317_n = 0LL;;
	while ((_1317_n < _12929_data.len())) {
		{
			_1317_n+=({
				auto except = _1cd6228c8_Write(_1307_f.ptr(), _12929_data.slice(_1317_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1a76aca55:;
	}
	_iter_end_1a76aca55:;;
	return _1cd620123_Close(_1307_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1cd620123_Close(_1cd61d40c_File* _self_) {
	if ((_1e73abb65_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_1cd61d40c_File>> static__1cd622213_Open(jule::Str _2217_path, jule::I32 _2228_flag, jule::I32 _2241_mode) {
	jule::Slice<jule::U16> _233_utf16Path = _1e7378093_UTF16FromStr(_2217_path);;
	jule::I32 _243_handle = _1e73a5e4a_Wopen((&(_233_utf16Path[0LL])), _2228_flag, _2241_mode);;
	if ((_243_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1cd61d40c_File>>{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1cd61d40c_File>>{.result=static__1cd61dde1_New(static_cast<jule::Uintptr>(_243_handle))};;
}



inline jule::VoidExceptional static__1cd622444_Remove(jule::Str _3519_path) {
	jule::Slice<jule::U16> _363_utf16Path = _1e7378093_UTF16FromStr(_3519_path);;
	if ((!(_1e73a6a61_DeleteFile((&(_363_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1cd6228c8_Write(_1cd61d40c_File* _self_, jule::Slice<jule::U8> _5221_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_5221_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1cc639ca9_handleRW(&(_5221_buf));
	if (_1cd62305a_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1cc624799_writeConsole((*(_self_))._field_handle, _5221_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1e73ac01c_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_5221_buf[0LL])), static_cast<jule::U32>(_5221_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1cd622c19_Read(_1cd61d40c_File* _self_, jule::Slice<jule::U8> _8424_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_8424_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1cc639ca9_handleRW(&(_8424_buf));
	if (_1cd62305a_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1cc624b1d_readConsole((*(_self_))._field_handle, _8424_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1e73ab78b_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_8424_buf[0LL])), static_cast<jule::U32>(_8424_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}








inline jule::Bool _1cd62092b_Stat_eq(_1cd62092b_Stat *_self_, _1cd62092b_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _1cd620d38_IsDir(_1cd62092b_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1cd6210be_IsReg(_1cd62092b_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1cd621355_Size(_1cd62092b_Stat* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<_1cd62092b_Stat> static__1ce7978d7_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<_1cd62092b_Stat>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _163_utf16Path = _1e7378093_UTF16FromStr(_1215_path);;
	struct _stat _177_handle = (struct _stat){};;
	jule::I32 _183_code = _1e73a5a1b_Wstat((&(_163_utf16Path[0LL])), (&(_177_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<_1cd62092b_Stat>{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	_1cd62092b_Stat _227_stat = _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};;
	_227_stat._field_size=_177_handle.st_size;
	if (((_177_handle.st_mode & 16384LLU) == 16384LLU)) {
		_227_stat._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_177_handle.st_mode & 32768LLU) == 32768LLU)) {
		_227_stat._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<_1cd62092b_Stat>{.result=_227_stat};;
}








inline jule::Bool _1e71b7487_Log_eq(_1e71b7487_Log *_self_, _1e71b7487_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1b455e554_floatInfo_eq(_1b455e554_floatInfo *_self_, _1b455e554_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1b4572226_leftCheat_eq(_1b4572226_leftCheat *_self_, _1b4572226_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1b4572c3d_decimal_eq(_1b4572c3d_decimal *_self_, _1b4572c3d_decimal _other_) {
	return 
		_1a77ba5ad_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1b4569707_set(_1b4572c3d_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1a7c706cd:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1a7c70865:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1a7c70667:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1a7c722b2:;
					{
						goto _iter_next_1a7c71a42;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1a7c7235b:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a7c71a42;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1a7c723c2:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a7c71a42;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a7c71a42;
					}
				}
				_match_end_1a7c72180:;
			};
			goto _iter_end_1a7c71a42;
		}
	_iter_next_1a7c71a42:;
	}
	_iter_end_1a7c71a42:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1b4564d62_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1a7242882;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1a7242882:;
		}
		_iter_end_1a7242882:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b4569a48_floatBits(_1b4572c3d_decimal* _self_, _1b455e554_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a7251c15;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1a7250c69;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a7251c15;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b4569394_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1b4569394_powtab[(*(_self_))._field_dp];
			};
			_1b45733d1_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1a724857a:;
	}
	_iter_end_1a724857a:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b4569394_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1b4569394_powtab[(-((*(_self_))._field_dp))];
			};
			_1b45733d1_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1a7246ac8:;
	}
	_iter_end_1a7246ac8:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1b45733d1_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1a7250c69;
	};
	_1b45733d1_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1b4573e81_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1a7250c69;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1a7251c15;
	_julec_label_1a7250c69:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(({ jule::U32 __jule_x = static_cast<jule::U32>(1LLU); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1a7251c15:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b4573128_assign(_1b4572c3d_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1a7254487:;
	}
	_iter_end_1a7254487:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a7254e05:;
	}
	_iter_end_1a7254e05:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b457458b_trim(_self_);
}



inline void _1b45733d1_shift(_1b4572c3d_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a7256d80:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1a7256e29:;
			{
				while ((_17625_k > 28LL)) {
					{
						_1b45750d6_leftShift(_self_, 28LLU);
						_17625_k-=28LL;
					}
				_iter_next_1a7257a2e:;
				}
				_iter_end_1a7257a2e:;;
				_1b45750d6_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1a7256e90:;
			{
				while ((_17625_k < -28LL)) {
					{
						_1b4574877_rightShift(_self_, 28LLU);
						_17625_k+=28LL;
					}
				_iter_next_1a7257952:;
				}
				_iter_end_1a7257952:;;
				_1b4574877_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_1a7256c1a:;
	};
}



inline void _1b4573689_roundDown(_1b4572c3d_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1b457458b_trim(_self_);
}



inline void _1b4573942_roundUp(_1b4572c3d_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1a725add9:;
	}
	_iter_end_1a725add9:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b4573bea_round(_1b4572c3d_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b457545a_shouldRoundUp(_self_, _23221_nd)) {
		_1b4573942_roundUp(_self_, _23221_nd);
	} else {
		_1b4573689_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1b4573e81_roundedInteger(_1b4572c3d_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1a725dd43:;
	}
	_iter_end_1a725dd43:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1a7260d45:;
	}
	_iter_end_1a7260d45:;;
	if (_1b457545a_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1ce615018_AnsiEscape_eq(_1ce615018_AnsiEscape *_self_, _1ce615018_AnsiEscape _other_) { return true; }

inline void static__1ce613e4b_Reset(void) {
	jule::print(_1a68cc6b0_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1ce6152e3_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1a68cc6b0_toStr(_1918_escape));
	jule::print(_1a68cc6b0_toStr(_1931_text));
	static__1ce613e4b_Reset();
}








inline jule::Bool _1b4578529_Logger_eq(_1b4578529_Logger *_self_, _1b4578529_Logger _other_) { return true; }

inline void static__1b45787d2_LogFlat(_1e71b7487_Log* _1421_l) {
	jule::println(_1a68cc6b0_toStr((*(_1421_l))._field_Text));
}



inline void static__1b45789e1_LogError(_1e71b7487_Log* _1922_l) {
	jule::print(_1a68cc6b0_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1a68cc6b0_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1a68cc6b0_toStr((*(_1922_l))._field_Text));
	static__1ce613e4b_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1a68cc6b0_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1a68cc6b0_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1a68cc6b0_toStr(jule::Str::lit(":", 1)));
		jule::print(_1a68cc6b0_toStr(_1b45772b4_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1a68cc6b0_toStr(jule::Str::lit(":", 1)));
		jule::print(_1a68cc6b0_toStr(_1b45772b4_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1ce78ba30_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1ce78a325_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1a68cc6b0_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1b45772b4_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1a68cc6b0_toStr(_434_row));
		jule::print(_1a68cc6b0_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1a68cc6b0_toStr(_388_line));
		jule::print(_1a68cc6b0_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1a68cc6b0_toStr(_1ce783d13_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1a68cc6b0_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1a68cc6b0_toStr(_1ce783d13_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1a68cc6b0_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1a68cc6b0_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1a68cc6b0_toStr(_1ce783d13_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1a68cc6b0_toStr(jule::Str::lit(" | ", 3)));
			static__1ce6152e3_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1a68cc6b0_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1a68cc6b0_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1b4578c22_Log(_1e71b7487_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1a72839e4:;
			{
				static__1b45787d2_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1a7283c9c:;
			{
				static__1b45789e1_LogError(_6417_l);
			}
		}
		_match_end_1a7283b9d:;
	};
}



inline void static__1b4578e53_PrintLogs(jule::Slice<_1e71b7487_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7284770:;
		if (it != expr_end) {
			_1e71b7487_Log *_7510_l = it;
			{
				static__1b4578c22_Log(_7510_l);
			}
			_iter_next_1a7284770:;
			++it;
			goto _iter_begin_1a7284770;
		}
		_iter_end_1a7284770:;
	};
	jule::print(_1a68cc6b0_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1a68cc6b0_toStr(_1b45772b4_Itoa((*(_7423_logs)).len())));
	jule::println(_1a68cc6b0_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1a463d137_Token_eq(_1a463d137_Token *_self_, _1a463d137_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1a463d4de_Prec(_1a463d137_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a72e5902:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a72e5748:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a72e57ae:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a72e5968:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a72e59e0:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a72e522b:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a72e566b:;
	};
}







inline jule::Ptr<_1a4643a11_Fileset> static__1a4643e62_New(jule::Str _1616_path) {
	return jule::new_ptr<_1a4643a11_Fileset>(_1a4643a11_Fileset{._field_Path=_1616_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr)});;
}



inline void _1a464421a_Fill(_1a4643a11_Fileset* _self_, jule::Slice<jule::U8> _2324_data) {
	(*(_self_))._field_Data=_2324_data;
}



inline jule::Str _1a46444a1_Dir(_1a4643a11_Fileset* _self_) {
	return _1ce7911c7_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a4644737_Name(_1a4643a11_Fileset* _self_) {
	return _1ce790ced_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a4644d0e_GetRow(_1a4643a11_Fileset* _self_, jule::I32 _4418_row) {
	jule::I32 _457_n = 0LL;;
	jule::I32 _467_lineStart = 0LL;;
	jule::I32 _477_i = 0LL;;
	for (; (_477_i < (*(_self_))._field_Data.len()); (_477_i)++) {
		{
			if (((*(_self_))._field_Data[_477_i] != '\n')) {
				goto _iter_next_1a72eb1aa;
			};
			(_457_n)++;
			if ((_457_n == _4418_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_467_lineStart, _477_i));;
			};
			_467_lineStart=(_477_i + 1LL);
		}
	_iter_next_1a72eb1aa:;
	}
	_iter_end_1a72eb1aa:;;
	return jule::Str();;
}








inline jule::Bool _1a4645b45_kindPair_eq(_1a4645b45_kindPair *_self_, _1a4645b45_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1a464c19b_pushErr(_1a464bad5_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1e71b7487_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a464689e_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1a464c70c_lex(_1a464bad5_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a464e92e_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1a463d137_Token> _4638_token = _1a4650e19_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a463d137_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1a7329ded:;
	}
	_iter_end_1a7329ded:;;
}



inline jule::Str _1a464ca4d_id(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I32 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1a4641866_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I32 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1a46420a3_IsDecimal(_4824_pr)))) && (!(_1a4641866_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1e73d320d_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1a732d5a5:;
	}
	_iter_end_1a732d5a5:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1e73d320d_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1a464ccd4_resume(_1a464bad5_lex* _self_) {
	jule::I32 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_Data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4977_i]);;
			if (_1a464136b_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a73321be:;
						{
							_1a464e92e_newLine(_self_);
						}
					}
					else {
						_case_begin_1a7331a4d:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a7331d39:;
				};
				goto _iter_next_1a73308a4;
			};
			jule::I32 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5118_j] == '\n')) {
						goto _iter_end_1a733160d;
					};
				}
			_iter_next_1a733160d:;
			}
			_iter_end_1a733160d:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1a73308a4:;
	}
	_iter_end_1a73308a4:;;
	return nullptr;;
}



inline void _1a464d08c_lexLineComment(_1a464bad5_lex* _self_, jule::Ptr<_1a463d137_Token>* _52235_token) {
	jule::I32 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1a7334732;
			};
		}
	_iter_next_1a7334732:;
	}
	_iter_end_1a7334732:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1e73d320d_StrFromBytes((*(*(_self_))._field_file.alloc)._field_Data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1a464d345_lexRangeComment(_1a464bad5_lex* _self_, jule::Ptr<_1a463d137_Token>* _53736_token) {
	jule::I32 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1a7337d95;
			};
			if ((_5414_r == '\n')) {
				_1a464e92e_newLine(_self_);
				goto _iter_next_1a7337d95;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1e73d320d_StrFromBytes((*(*(_self_))._field_file.alloc)._field_Data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a7337d95:;
	}
	_iter_end_1a7337d95:;;
	_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1a464d686_num(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a464a3ec_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a7ce470d;
	};
	__jule_func_result=_1a464a221_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a7ce470d;
	};
	__jule_func_result=_1a46489b1_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a7ce470d;
	};
	__jule_func_result=_1a46486e7_commonNum(_56520_txt);
	_julec_label_1a7ce470d:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a464d9c7_escapeSeq(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1a7ce84c0;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a7ce63ad:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1e73d320d_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a7ce626a:;
			{
				_5887_seq=_1a464aa18_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a7ce62d1:;
			{
				_5887_seq=_1a464acd2_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a7ce5e4b:;
			{
				_5887_seq=_1a464b09b_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1a7ce5720:;
			{
				_5887_seq=_1a464b365_byteEscape(_58726_txt);
			}
		}
		_match_end_1a7ce5cc5:;
	};
	_julec_label_1a7ce84c0:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1a464ddc3_getRune(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1a464d9c7_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I32 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1a464e214_lexRune(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1e71a80b0_Builder _6277_run = static__1e71a892e_New(8LL);;
	({
		auto except = _1e71a9369_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I32 _6307_n = 0LL;;
	jule::I32 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1a7cec2c6;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a464e92e_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1a464ddc3_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1e71a90b1_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1cc6233be_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a7cec2c6;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1a7cec2c6:;
	}
	_iter_end_1a7cec2c6:;;
	if ((_6307_n == 0LL)) {
		_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1e71a9941_Str(&_6277_run);;
}



inline jule::Str _1a464e49a_lexStr(_1a464bad5_lex* _self_) {
	_1e71a80b0_Builder _6677_s = static__1e71a892e_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1e71a9369_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1a7d03112;
			};
			if ((_6754_ch == '\n')) {
				_1a464e92e_newLine(_self_);
				if ((!(_6703_raw))) {
					_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1a464ddc3_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1e71a90b1_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1cc6233be_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1a7d03112;
			};
		}
	_iter_next_1a7d03112:;
	}
	_iter_end_1a7d03112:;;
	return _1e71a9941_Str(&_6677_s);;
}



inline void _1a464e92e_newLine(_1a464bad5_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a464ee90_isOp(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1a463d137_Token>* _70858_t) {
	if ((!(_1a4646c67_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1a465038b_lexBasicOps(_1a464bad5_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1a463d137_Token>* _71845_tok) {
	{
		auto expr = &(_1a4646360_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d097bc:;
		if (it != expr_end) {
			_1a4645b45_kindPair *_71910_pair = it;
			{
				if (_1a464ee90_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1a7d097bc:;
			++it;
			goto _iter_begin_1a7d097bc;
		}
		_iter_end_1a7d097bc:;
	};
	return false;;
}



inline jule::Bool _1a4650787_lexId(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1a463d137_Token>* _72740_t) {
	jule::Str _7283_lex = _1a464ca4d_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1a4650b83_lexNum(_1a464bad5_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1a463d137_Token>* _73741_t) {
	jule::Str _7383_lex = _1a464d686_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1a463d137_Token> _1a4650e19_token(_1a464bad5_lex* _self_) {
	jule::Ptr<_1a463d137_Token> _7497_t = jule::new_ptr<_1a463d137_Token>(_1a463d137_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1a464ccd4_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a4650b83_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1a7d104e8:;
			{
				goto _match_end_1a7d1021d;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1a7d1055e:;
			{
				(*_7497_t.alloc)._field_Kind=_1a464e214_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1a7d105c5:;
			{
				(*_7497_t.alloc)._field_Kind=_1a464e49a_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1a4646c67_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1a7d1063b:;
			{
				_1a464d08c_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1a4646c67_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1a7d106a2:;
			{
				_1a464d345_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1a465038b_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1a7d10718:;
			{
				goto _match_end_1a7d1021d;
			}
		}
		else if (_1a4650787_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1a7d11b37:;
			{
				{
					auto expr = &(_1a4646030_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7d159a4:;
					if (it != expr_end) {
						_1a4645b45_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1a7d159a4;
							};
						}
						_iter_next_1a7d159a4:;
						++it;
						goto _iter_begin_1a7d159a4;
					}
					_iter_end_1a7d159a4:;
				};
			}
		}
		else {
			_case_begin_1a7d10482:;
			{
				jule::I32 _7934_r;
				jule::I32 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a464c19b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1a7d1021d:;
	};
	(*(_self_))._field_column+=_1cc6233be_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1a4652668_Node_eq(_1a4652668_Node *_self_, _1a4652668_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a4653669_TypeDecl_eq(_1a4653669_TypeDecl *_self_, _1a4653669_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a4654417_NamespaceTypeDecl_eq(_1a4654417_NamespaceTypeDecl *_self_, _1a4654417_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a4654714_SptrTypeDecl_eq(_1a4654714_SptrTypeDecl *_self_, _1a4654714_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1a4654a99_SlcTypeDecl_eq(_1a4654a99_SlcTypeDecl *_self_, _1a4654a99_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1a4655193_PtrTypeDecl_eq(_1a4655193_PtrTypeDecl *_self_, _1a4655193_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1a4655539_IsUnsafe(_1a4655193_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a4655935_ArrTypeDecl_eq(_1a4655935_ArrTypeDecl *_self_, _1a4655935_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1a4655ccb_AutoSized(_1a4655935_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1a4656183_MapTypeDecl_eq(_1a4656183_MapTypeDecl *_self_, _1a4656183_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a465799d_Expr_eq(_1a465799d_Expr *_self_, _1a465799d_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a4657c67_RangeExpr_eq(_1a4657c67_RangeExpr *_self_, _1a4657c67_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a4658372_UseExpr_eq(_1a4658372_UseExpr *_self_, _1a4658372_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a4658938_LitExpr_eq(_1a4658938_LitExpr *_self_, _1a4658938_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1a4658d12_UnsafeExpr_eq(_1a4658d12_UnsafeExpr *_self_, _1a4658d12_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a46592b8_IdentExpr_eq(_1a46592b8_IdentExpr *_self_, _1a46592b8_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a4659a5a_UnaryExpr_eq(_1a4659a5a_UnaryExpr *_self_, _1a4659a5a_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a4659e34_VariadicExpr_eq(_1a4659e34_VariadicExpr *_self_, _1a4659e34_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a465a30d_CastExpr_eq(_1a465a30d_CastExpr *_self_, _1a465a30d_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a465a6d7_NamespaceExpr_eq(_1a465a6d7_NamespaceExpr *_self_, _1a465a6d7_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a465aab1_SubIdentExpr_eq(_1a465aab1_SubIdentExpr *_self_, _1a465aab1_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a465b067_BinaryExpr_eq(_1a465b067_BinaryExpr *_self_, _1a465b067_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1a465ba7e_Unhandled(_1a465b6c7_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a465bd15_Ignored(_1a465b6c7_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1a465c1bc_FieldExprPair_eq(_1a465c1bc_FieldExprPair *_self_, _1a465c1bc_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1a465d7c8_KeyValPair_eq(_1a465d7c8_KeyValPair *_self_, _1a465d7c8_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1a465e961_IndexingExpr_eq(_1a465e961_IndexingExpr *_self_, _1a465e961_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a46600c1_SlicingExpr_eq(_1a46600c1_SlicingExpr *_self_, _1a46600c1_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1a4660874_GenericDecl_eq(_1a4660874_GenericDecl *_self_, _1a4660874_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1a4660c4d_LabelSt_eq(_1a4660c4d_LabelSt *_self_, _1a4660c4d_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a4661127_GotoSt_eq(_1a4661127_GotoSt *_self_, _1a4661127_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a4661424_FallSt_eq(_1a4661424_FallSt *_self_, _1a4661424_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1a4661a84_AssignLeft_eq(_1a4661a84_AssignLeft *_self_, _1a4661a84_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a4663107_Stmt_eq(_1a4663107_Stmt *_self_, _1a4663107_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a4663ea4_ParamDecl_eq(_1a4663ea4_ParamDecl *_self_, _1a4663ea4_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1a466435b_IsSelf(_1a4663ea4_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1a466579c_IsAnon(_1a4665406_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1a466698a_RetSt_eq(_1a466698a_RetSt *_self_, _1a466698a_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a466720a_Iter_eq(_1a466720a_Iter *_self_, _1a466720a_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1a46675a1_IsInf(_1a466720a_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1a4667a35_WhileKind_eq(_1a4667a35_WhileKind *_self_, _1a4667a35_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1a4667dcb_IsWhileNext(_1a4667a35_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a466843c_RangeKind_eq(_1a466843c_RangeKind *_self_, _1a466843c_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a4668816_BreakSt_eq(_1a4668816_BreakSt *_self_, _1a4668816_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a4668be0_ContSt_eq(_1a4668be0_ContSt *_self_, _1a4668be0_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a4669196_If_eq(_1a4669196_If *_self_, _1a4669196_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a4669570_Else_eq(_1a4669570_Else *_self_, _1a4669570_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1a466a263_TypeAliasDecl_eq(_1a466a263_TypeAliasDecl *_self_, _1a466a263_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a466b5b6_UseDecl_eq(_1a466b5b6_UseDecl *_self_, _1a466b5b6_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a466ba6c_EnumItemDecl_eq(_1a466ba6c_EnumItemDecl *_self_, _1a466ba6c_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a466ce58_TypeEnumItemDecl_eq(_1a466ce58_TypeEnumItemDecl *_self_, _1a466ce58_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1a466d882_FieldDecl_eq(_1a466d882_FieldDecl *_self_, _1a466d882_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1a4276798_Const> static__1a470550c_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1a4276798_Const>(_1a4276798_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a4276798_Const> static__1a47057c6_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1a4276798_Const>(_1a4276798_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a4276798_Const> static__1a4705a90_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1a4276798_Const>(_1a4276798_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a4276798_Const> static__1a4705d59_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1a4276798_Const>(_1a4276798_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a4276798_Const> static__1a4706123_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1a4276798_Const>(_1a4276798_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1a4276798_Const> static__1a4706332_NewNil(void) {
	return jule::new_ptr<_1a4276798_Const>(_1a4276798_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1a4706992_ReadI64(_1a4276798_Const* _self_) {
	if ((!(_1a470908d_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1a4706c28_ReadU64(_1a4276798_Const* _self_) {
	if ((!(_1a4709324_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1a4706eae_ReadBool(_1a4276798_Const* _self_) {
	if ((!(_1a47095aa_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1a4707245_ReadStr(_1a4276798_Const* _self_) {
	if ((!(_1a4709841_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1a47074cb_ReadF64(_1a4276798_Const* _self_) {
	if ((!(_1a4709ac7_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1a4707762_AsI64(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7d70d0b:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7d71757:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7d717bd:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a7d712b2:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7d71119:;
	};
}



inline jule::U64 _1a47079e8_AsU64(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7d723a1:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7d730c7:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7d7313d:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a7d72879:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a7d72813:;
	};
}



inline jule::F64 _1a4707c7e_AsF64(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7d74b34:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7d73c10:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7d74925:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1a7d741c7:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7d74161:;
	};
}



inline void _1a4708037_SetI64(_1a4276798_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1a47082e0_SetU64(_1a4276798_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1a4708598_SetBool(_1a4276798_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1a4708851_SetStr(_1a4276798_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1a4708b09_SetF64(_1a4276798_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1a470908d_IsI64(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7d7852d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7d7875e:;
			{
				return false;;
			}
		}
		_match_end_1a7d786e8:;
	};
}



inline jule::Bool _1a4709324_IsU64(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7d790bc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7d78891:;
			{
				return false;;
			}
		}
		_match_end_1a7d7882a:;
	};
}



inline jule::Bool _1a47095aa_IsBool(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a7d7950c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7d799e6:;
			{
				return false;;
			}
		}
		_match_end_1a7d79980:;
	};
}



inline jule::Bool _1a4709841_IsStr(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a7d79e8b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7d7a475:;
			{
				return false;;
			}
		}
		_match_end_1a7d7a40e:;
	};
}



inline jule::Bool _1a4709ac7_IsF64(_1a4276798_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7d7a91a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7d7ae04:;
			{
				return false;;
			}
		}
		_match_end_1a7d7ad8d:;
	};
}



inline jule::Bool _1a4709d5d_IsNil(_1a4276798_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a470a4e0_And(_1a4276798_Const* _self_, _1a4276798_Const _23615_x) {
	{
		
		if ((_1a47095aa_IsBool(_self_) && _1a47095aa_IsBool(&_23615_x))) {
			_case_begin_1a7d8039d:;
			{
				return (_1a4706eae_ReadBool(_self_) && _1a4706eae_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1a7d80337:;
			{
				return false;;
			}
		}
		_match_end_1a7d7ede7:;
	};
}



inline jule::Bool _1a470a831_Or(_1a4276798_Const* _self_, _1a4276798_Const _24714_x) {
	{
		
		if ((_1a47095aa_IsBool(_self_) && _1a47095aa_IsBool(&_24714_x))) {
			_case_begin_1a7d8169b:;
			{
				return (_1a4706eae_ReadBool(_self_) || _1a4706eae_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1a7d80d82:;
			{
				return false;;
			}
		}
		_match_end_1a7d80c94:;
	};
}



inline jule::Bool _1a470ab72_Eq(_1a4276798_Const* _self_, _1a4276798_Const _25814_x) {
	{
		
		if (_1a4709d5d_IsNil(_self_)) {
			_case_begin_1a7d82a10:;
			{
				return _1a4709d5d_IsNil(&_25814_x);;
			}
		}
		else if (_1a47095aa_IsBool(_self_)) {
			_case_begin_1a7d82a76:;
			{
				return (_1a47095aa_IsBool(&_25814_x) && (_1a4706eae_ReadBool(_self_) == _1a4706eae_ReadBool(&_25814_x)));;
			}
		}
		else if (_1a4709841_IsStr(_self_)) {
			_case_begin_1a7d82adc:;
			{
				return (_1a4709841_IsStr(&_25814_x) && (_1a4707245_ReadStr(_self_) == _1a4707245_ReadStr(&_25814_x)));;
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d82b64:;
			{
				return (_1a4706992_ReadI64(_self_) == _1a4707762_AsI64(&_25814_x));;
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d82bdb:;
			{
				return (_1a4706c28_ReadU64(_self_) == _1a47079e8_AsU64(&_25814_x));;
			}
		}
		else if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d82d84:;
			{
				return (_1a47074cb_ReadF64(_self_) == _1a4707c7e_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1a7d8216e:;
			{
				return false;;
			}
		}
		_match_end_1a7d82081:;
	};
}



inline jule::Bool _1a470aeb3_Lt(_1a4276798_Const* _self_, _1a4276798_Const _28514_x) {
	{
		
		if (_1a4709841_IsStr(_self_)) {
			_case_begin_1a7d86739:;
			{
				return (_1a4709841_IsStr(&_28514_x) && (_1a4707245_ReadStr(_self_) < _1a4707245_ReadStr(&_28514_x)));;
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d867a0:;
			{
				return (_1a4706992_ReadI64(_self_) < _1a4707762_AsI64(&_28514_x));;
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d86816:;
			{
				return (_1a4706c28_ReadU64(_self_) < _1a47079e8_AsU64(&_28514_x));;
			}
		}
		else if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d8688d:;
			{
				return (_1a47074cb_ReadF64(_self_) < _1a4707c7e_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1a7d834c2:;
			{
				return false;;
			}
		}
		_match_end_1a7d833e5:;
	};
}



inline jule::Bool _1a470b304_LtEq(_1a4276798_Const* _self_, _1a4276798_Const _30816_x) {
	{
		
		if (_1a4709841_IsStr(_self_)) {
			_case_begin_1a7d89440:;
			{
				return (_1a4709841_IsStr(&_30816_x) && (_1a4707245_ReadStr(_self_) <= _1a4707245_ReadStr(&_30816_x)));;
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d894a6:;
			{
				return (_1a4706992_ReadI64(_self_) <= _1a4707762_AsI64(&_30816_x));;
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d8951c:;
			{
				return (_1a4706c28_ReadU64(_self_) <= _1a47079e8_AsU64(&_30816_x));;
			}
		}
		else if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d89594:;
			{
				return (_1a47074cb_ReadF64(_self_) <= _1a4707c7e_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1a7d870ec:;
			{
				return false;;
			}
		}
		_match_end_1a7d87020:;
	};
}



inline jule::Bool _1a470b645_Gt(_1a4276798_Const* _self_, _1a4276798_Const _33114_x) {
	{
		
		if (_1a4709841_IsStr(_self_)) {
			_case_begin_1a7d8c146:;
			{
				return (_1a4709841_IsStr(&_33114_x) && (_1a4707245_ReadStr(_self_) > _1a4707245_ReadStr(&_33114_x)));;
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d8c1ac:;
			{
				return (_1a4706992_ReadI64(_self_) > _1a4707762_AsI64(&_33114_x));;
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d8c223:;
			{
				return (_1a4706c28_ReadU64(_self_) > _1a47079e8_AsU64(&_33114_x));;
			}
		}
		else if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d8c29a:;
			{
				return (_1a47074cb_ReadF64(_self_) > _1a4707c7e_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1a7d89d03:;
			{
				return false;;
			}
		}
		_match_end_1a7d89c26:;
	};
}



inline jule::Bool _1a470b986_GtEq(_1a4276798_Const* _self_, _1a4276798_Const _35416_x) {
	{
		
		if (_1a4709841_IsStr(_self_)) {
			_case_begin_1a7d8ed4c:;
			{
				return (_1a4709841_IsStr(&_35416_x) && (_1a4707245_ReadStr(_self_) >= _1a4707245_ReadStr(&_35416_x)));;
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d8edb3:;
			{
				return (_1a4706992_ReadI64(_self_) >= _1a4707762_AsI64(&_35416_x));;
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d8ee29:;
			{
				return (_1a4706c28_ReadU64(_self_) >= _1a47079e8_AsU64(&_35416_x));;
			}
		}
		else if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d8eea1:;
			{
				return (_1a47074cb_ReadF64(_self_) >= _1a4707c7e_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1a7d8ca09:;
			{
				return false;;
			}
		}
		_match_end_1a7d8c92c:;
	};
}



inline jule::Bool _1a470bcc7_Add(_1a4276798_Const* _self_, _1a4276798_Const _37519_x) {
	{
		
		if (_1a4709841_IsStr(_self_)) {
			_case_begin_1a7d92a53:;
			{
				if ((!(_1a4709841_IsStr(&_37519_x)))) {
					return false;;
				};
				_1a4708851_SetStr(_self_, (_1a4707245_ReadStr(_self_) + _1a4707245_ReadStr(&_37519_x)));
			}
		}
		else if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d92ab9:;
			{
				_1a4708b09_SetF64(_self_, (_1a47074cb_ReadF64(_self_) + _1a4707c7e_AsF64(&_37519_x)));
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d92b30:;
			{
				if (_1a4709ac7_IsF64(&_37519_x)) {
					_1a4708b09_SetF64(_self_, (_1a4707c7e_AsF64(_self_) + _1a47074cb_ReadF64(&_37519_x)));
				} else {
					_1a4708037_SetI64(_self_, (_1a4706992_ReadI64(_self_) + _1a4707762_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d92ba7:;
			{
				if (_1a4709ac7_IsF64(&_37519_x)) {
					_1a4708b09_SetF64(_self_, (_1a4707c7e_AsF64(_self_) + _1a47074cb_ReadF64(&_37519_x)));
				} else {
					_1a47082e0_SetU64(_self_, (jule::U64)(_1a4706c28_ReadU64(_self_) + _1a47079e8_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1a7d90710:;
			{
				return false;;
			}
		}
		_match_end_1a7d90633:;
	};
	return true;;
}



inline jule::Bool _1a470c118_Sub(_1a4276798_Const* _self_, _1a4276798_Const _40419_x) {
	{
		
		if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d9787c:;
			{
				_1a4708b09_SetF64(_self_, (_1a47074cb_ReadF64(_self_) - _1a4707c7e_AsF64(&_40419_x)));
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d978e3:;
			{
				if (_1a4709ac7_IsF64(&_40419_x)) {
					_1a4708b09_SetF64(_self_, (_1a4707c7e_AsF64(_self_) - _1a47074cb_ReadF64(&_40419_x)));
				} else {
					_1a4708037_SetI64(_self_, (_1a4706992_ReadI64(_self_) - _1a4707762_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d97959:;
			{
				if (_1a4709ac7_IsF64(&_40419_x)) {
					_1a4708b09_SetF64(_self_, (_1a4707c7e_AsF64(_self_) - _1a47074cb_ReadF64(&_40419_x)));
				} else {
					_1a47082e0_SetU64(_self_, (jule::U64)(_1a4706c28_ReadU64(_self_) - _1a47079e8_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1a7d970b8:;
			{
				return false;;
			}
		}
		_match_end_1a7d96eb9:;
	};
	return true;;
}



inline jule::Bool _1a470c459_Mul(_1a4276798_Const* _self_, _1a4276798_Const _42819_x) {
	{
		
		if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7d9b793:;
			{
				_1a4708b09_SetF64(_self_, (_1a47074cb_ReadF64(_self_) * _1a4707c7e_AsF64(&_42819_x)));
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7d9b809:;
			{
				if (_1a4709ac7_IsF64(&_42819_x)) {
					_1a4708b09_SetF64(_self_, (_1a4707c7e_AsF64(_self_) * _1a47074cb_ReadF64(&_42819_x)));
				} else {
					_1a4708037_SetI64(_self_, (_1a4706992_ReadI64(_self_) * _1a4707762_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7d9b870:;
			{
				if (_1a4709ac7_IsF64(&_42819_x)) {
					_1a4708b09_SetF64(_self_, (_1a4707c7e_AsF64(_self_) * _1a47074cb_ReadF64(&_42819_x)));
				} else {
					_1a47082e0_SetU64(_self_, (jule::U64)(_1a4706c28_ReadU64(_self_) * _1a47079e8_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1a7d9ad69:;
			{
				return false;;
			}
		}
		_match_end_1a7d9ac7b:;
	};
	return true;;
}



inline jule::Bool _1a470c79a_Div(_1a4276798_Const* _self_, _1a4276798_Const _45619_x) {
	{
		
		if (_1a4709ac7_IsF64(_self_)) {
			_case_begin_1a7da0698:;
			{
				jule::F64 _4594_l = _1a4707c7e_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1a4708b09_SetF64(_self_, ({ jule::F64 __jule_x = _1a47074cb_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7da070e:;
			{
				jule::F64 _4654_l = _1a4707c7e_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1a4708b09_SetF64(_self_, ({ jule::F64 __jule_x = _1a4707c7e_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7da0775:;
			{
				jule::F64 _4714_l = _1a4707c7e_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1a4708b09_SetF64(_self_, ({ jule::F64 __jule_x = _1a4707c7e_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1a7d9ec6e:;
			{
				return false;;
			}
		}
		_match_end_1a7d9eb81:;
	};
	return true;;
}



inline jule::Bool _1a470cadb_Mod(_1a4276798_Const* _self_, _1a4276798_Const _48519_x) {
	{
		
		if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7da457b:;
			{
				jule::I64 _4884_l = _1a4707762_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1a4708037_SetI64(_self_, ({ jule::I64 __jule_x = _1a4706992_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7da4988:;
			{
				jule::U64 _4944_l = _1a47079e8_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1a47082e0_SetU64(_self_, ({ jule::U64 __jule_x = _1a4706c28_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1a7da4504:;
			{
				return false;;
			}
		}
		_match_end_1a7da43e4:;
	};
	return true;;
}



inline jule::Bool _1a470ce2c_BitwiseAnd(_1a4276798_Const* _self_, _1a4276798_Const _50726_x) {
	{
		
		if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7da73e7:;
			{
				_1a4708037_SetI64(_self_, (_1a4706992_ReadI64(_self_) & _1a4707762_AsI64(&_50726_x)));
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7da7804:;
			{
				_1a47082e0_SetU64(_self_, (_1a4706c28_ReadU64(_self_) & _1a47079e8_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1a7da7370:;
			{
				return false;;
			}
		}
		_match_end_1a7da7260:;
	};
	return true;;
}



inline jule::Bool _1a470d26d_BitwiseOr(_1a4276798_Const* _self_, _1a4276798_Const _52125_x) {
	{
		
		if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7da91b8:;
			{
				_1a4708037_SetI64(_self_, (_1a4706992_ReadI64(_self_) | _1a4707762_AsI64(&_52125_x)));
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7da95c5:;
			{
				_1a47082e0_SetU64(_self_, (_1a4706c28_ReadU64(_self_) | _1a47079e8_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1a7da9141:;
			{
				return false;;
			}
		}
		_match_end_1a7da9031:;
	};
	return true;;
}



inline jule::Bool _1a470d5ae_Xor(_1a4276798_Const* _self_, _1a4276798_Const _53519_x) {
	{
		
		if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7daae89:;
			{
				_1a4708037_SetI64(_self_, (_1a4706992_ReadI64(_self_) ^ _1a4707762_AsI64(&_53519_x)));
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7dab396:;
			{
				_1a47082e0_SetU64(_self_, (_1a4706c28_ReadU64(_self_) ^ _1a47079e8_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1a7daae12:;
			{
				return false;;
			}
		}
		_match_end_1a7daad02:;
	};
	return true;;
}



inline jule::Bool _1a470d900_Lshift(_1a4276798_Const* _self_, _1a4276798_Const _54922_x) {
	{
		
		if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7dacc5a:;
			{
				jule::I64 _5524_l = _1a4707762_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1a47079e8_AsU64(&_54922_x);;
					_1a4708037_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1a470e0a4_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7dad167:;
			{
				_1a470e0a4_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1a7dacbd3:;
			{
				return false;;
			}
		}
		_match_end_1a7dacac3:;
	};
	return true;;
}



inline jule::Bool _1a470dc41_Rshift(_1a4276798_Const* _self_, _1a4276798_Const _56922_x) {
	{
		
		if (_1a470908d_IsI64(_self_)) {
			_case_begin_1a7db02e0:;
			{
				jule::I64 _5724_l = _1a4707762_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1a47079e8_AsU64(&_56922_x);;
					_1a4708037_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1a470e3d4_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1a4709324_IsU64(_self_)) {
			_case_begin_1a7db06ec:;
			{
				_1a470e3d4_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1a7db0268:;
			{
				return false;;
			}
		}
		_match_end_1a7db0169:;
	};
	return true;;
}








inline jule::Bool _1a46710d2_Field_eq(_1a46710d2_Field *_self_, _1a46710d2_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1a4676280_FieldIns> _1a4671489_instance(jule::Ptr<_1a46710d2_Field> _self_) {
	return jule::new_ptr<_1a4676280_FieldIns>(_1a4676280_FieldIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Default=jule::Ptr<_1a48a2753_Data>(nullptr)});;
}








inline jule::Bool _1a46730b2_Operators_eq(_1a46730b2_Operators *_self_, _1a46730b2_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1a4676d30_StructIns> _1a467446a_instance(jule::Ptr<_1a4673ec5_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a4676d30_StructIns> _997_ins = jule::new_ptr<_1a4676d30_StructIns>(_1a4676d30_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4676280_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4676280_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4852e51_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1a471dc62_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1a47ea6bd_new(), ._field_Operators=_1a46730b2_Operators{._field_Eq=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Add=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Div=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81b249e:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a4852e51_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1a81b249e:;
			++it;
			goto _iter_begin_1a81b249e;
		}
		_iter_end_1a81b249e:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81b335c:;
		if (it != expr_end) {
			jule::Ptr<_1a46710d2_Field> _11015_f = *it;
			{
				jule::Ptr<_1a4676280_FieldIns> _1118_f2 = _1a4671489_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*_997_ins.alloc)._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4676280_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1a48d6db4_Mutable((*((*(_11015_f))._field_TypeSym))._field_Type))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1a81b335c:;
			++it;
			goto _iter_begin_1a81b335c;
		}
		_iter_end_1a81b335c:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_997_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_997_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471dc62_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a471dc62_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a81b76b3:;
			if (it != expr_end) {
				jule::Ptr<_1a471dc62_Fn> _12316_f = *it;
				{
					jule::Ptr<_1a471dc62_Fn> _1249_fins = jule::new_ptr<_1a471dc62_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471dc62_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1a81b76b3:;
				++it;
				goto _iter_begin_1a81b76b3;
			}
			_iter_end_1a81b76b3:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1a4676d30_StructIns> _1a4674778_appendInstance(_1a4673ec5_Struct* _self_, jule::Ptr<_1a4676d30_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81b7a6a:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _14115_ains = *it;
			{
				if (_1a46779ce_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1a81b7a6a:;
			++it;
			goto _iter_begin_1a81b7a6a;
		}
		_iter_end_1a81b7a6a:;
	};
	{ jule::Slice<jule::Ptr<_1a4676d30_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a471dc62_Fn> _1a4674b74_FindMethod(_1a4673ec5_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81bb0ac:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1a81bb0ac:;
			++it;
			goto _iter_begin_1a81bb0ac;
		}
		_iter_end_1a81bb0ac:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4852e51_Var> _1a4674eb5_FindStatic(_1a4673ec5_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81bc3dd:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1a81bc3dd:;
			++it;
			goto _iter_begin_1a81bc3dd;
		}
		_iter_end_1a81bc3dd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a46710d2_Field> _1a4675306_FindField(_1a4673ec5_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81bd3de:;
		if (it != expr_end) {
			jule::Ptr<_1a46710d2_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1a81bd3de:;
			++it;
			goto _iter_begin_1a81bd3de;
		}
		_iter_end_1a81bd3de:;
	};
	return nullptr;;
}



inline jule::Bool _1a4675647_IsImplements(_1a4673ec5_Struct* _self_, jule::Ptr<_1a4729476_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81be3ce:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1a81be3ce:;
			++it;
			goto _iter_begin_1a81be3ce;
		}
		_iter_end_1a81be3ce:;
	};
	return false;;
}



inline jule::Bool _1a4675988_IsUses(_1a4673ec5_Struct* _self_, jule::Ptr<_1a4673ec5_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81bed5d:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1a81c0886:;
				}
				_iter_end_1a81c0886:;;
			}
			_iter_next_1a81bed5d:;
			++it;
			goto _iter_begin_1a81bed5d;
		}
		_iter_end_1a81bed5d:;
	};
	return false;;
}








inline jule::Bool _1a4676280_FieldIns_eq(_1a4676280_FieldIns *_self_, _1a4676280_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1a46771d7_Str(_1a4676d30_StructIns* _self_) {
	_1e71a80b0_Builder _2417_kind = static__1e71a892e_New(32LL);;
	({
		auto except = _1e71a90b1_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:242:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1e71a9369_WriteByte(&_2417_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:244:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a81c359d:;
			if (it != expr_end) {
				jule::I32 _2458_i = it - expr->begin();
				jule::Ptr<_1a48d3ae7_InsGeneric> *_24511_g = it;
				{
					({
						auto except = _1e71a90b1_WriteStr(&_2417_kind, _1a48d58c9_Str((*((*(_24511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:246:5"));
						(except.result);
					});
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1e71a9369_WriteByte(&_2417_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:248:6"));
						});
					};
				}
				_iter_next_1a81c359d:;
				++it;
				_2458_i++;
				goto _iter_begin_1a81c359d;
			}
			_iter_end_1a81c359d:;
		};
		({
			auto except = _1e71a9369_WriteByte(&_2417_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:251:4"));
		});
	};
	return _1e71a9941_Str(&_2417_kind);;
}



inline jule::Bool _1a4677528_Equal(jule::Ptr<_1a4676d30_StructIns> _self_, jule::Ptr<_1a48d54cd_Type> _25718_other) {
	jule::Ptr<_1a4676d30_StructIns> _2583_s = _1a48d9207_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _2717_i = 0LL;;
	for (; (_2717_i < (*_self_.alloc)._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1a48d5c1a_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Type, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1a81c7948:;
	}
	_iter_end_1a81c7948:;;
	return true;;
}



inline jule::Bool _1a46779ce_Same(_1a4676d30_StructIns* _self_, jule::Ptr<_1a4676d30_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81c9b6a:;
		if (it != expr_end) {
			jule::I32 _2897_i = it - expr->begin();
			jule::Ptr<_1a48d3ae7_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1a48d3ae7_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Type))._field_BindIdent != (*(*(_2904_g2))._field_Type.alloc)._field_BindIdent) || (!(_1a48d5c1a_Equal((*((*(_28910_g))))._field_Type, (*(_2904_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1a81c9b6a:;
			++it;
			_2897_i++;
			goto _iter_begin_1a81c9b6a;
		}
		_iter_end_1a81c9b6a:;
	};
	return true;;
}



inline jule::Ptr<_1a471dc62_Fn> _1a4677dca_FindMethod(_1a4676d30_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81cce37:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1a81cce37:;
			++it;
			goto _iter_begin_1a81cce37;
		}
		_iter_end_1a81cce37:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4676280_FieldIns> _1a467821b_FindField(_1a4676d30_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81ce268:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1a81ce268:;
			++it;
			goto _iter_begin_1a81ce268;
		}
		_iter_end_1a81ce268:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4852e51_Var> _1a467855c_FindStatic(_1a4676d30_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81cea2c:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1a81cea2c:;
			++it;
			goto _iter_begin_1a81cea2c;
		}
		_iter_end_1a81cea2c:;
	};
	return nullptr;;
}








inline jule::Bool _1a4711491_OperandExprModel_eq(_1a4711491_OperandExprModel *_self_, _1a4711491_OperandExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1a471198b_BinaryExprModel_eq(_1a471198b_BinaryExprModel *_self_, _1a471198b_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a4711d65_UnaryExprModel_eq(_1a4711d65_UnaryExprModel *_self_, _1a4711d65_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a4712393_StructArgExprModel_eq(_1a4712393_StructArgExprModel *_self_, _1a4712393_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a4712a36_AllocStructLitExprModel_eq(_1a4712a36_AllocStructLitExprModel *_self_, _1a4712a36_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1a47130b9_CastingExprModel_eq(_1a47130b9_CastingExprModel *_self_, _1a47130b9_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _1a47142eb_IndexingExprModel_eq(_1a47142eb_IndexingExprModel *_self_, _1a47142eb_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1a4714b7b_KeyValPairExprModel_eq(_1a4714b7b_KeyValPairExprModel *_self_, _1a4714b7b_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a47155d8_SlicingExprModel_eq(_1a47155d8_SlicingExprModel *_self_, _1a47155d8_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a4715b6b_TraitSubIdentExprModel_eq(_1a4715b6b_TraitSubIdentExprModel *_self_, _1a4715b6b_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1a471650c_StructSubIdentExprModel_eq(_1a471650c_StructSubIdentExprModel *_self_, _1a471650c_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1a47168a3_StructStaticIdentExprModel_eq(_1a47168a3_StructStaticIdentExprModel *_self_, _1a47168a3_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1a4717376_BuiltinPrintCallExprModel_eq(_1a4717376_BuiltinPrintCallExprModel *_self_, _1a4717376_BuiltinPrintCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a4717673_BuiltinPrintlnCallExprModel_eq(_1a4717673_BuiltinPrintlnCallExprModel *_self_, _1a4717673_BuiltinPrintlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a4717a4c_BuiltinNewCallExprModel_eq(_1a4717a4c_BuiltinNewCallExprModel *_self_, _1a4717a4c_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1a4717e26_BuiltinPanicCallExprModel_eq(_1a4717e26_BuiltinPanicCallExprModel *_self_, _1a4717e26_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a47183cc_BuiltinMakeCallExprModel_eq(_1a47183cc_BuiltinMakeCallExprModel *_self_, _1a47183cc_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1a47187a6_BuiltinAppendCallExprModel_eq(_1a47187a6_BuiltinAppendCallExprModel *_self_, _1a47187a6_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1a4718aa3_BuiltinLenCallExprModel_eq(_1a4718aa3_BuiltinLenCallExprModel *_self_, _1a4718aa3_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a4718da0_BuiltinCapCallExprModel_eq(_1a4718da0_BuiltinCapCallExprModel *_self_, _1a4718da0_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a4719279_BuiltinDeleteCallExprModel_eq(_1a4719279_BuiltinDeleteCallExprModel *_self_, _1a4719279_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1a4719653_BuiltinCopyCallExprModel_eq(_1a4719653_BuiltinCopyCallExprModel *_self_, _1a4719653_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1a4719a2c_BuiltinErrorCallExprModel_eq(_1a4719a2c_BuiltinErrorCallExprModel *_self_, _1a4719a2c_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1a4719d29_SizeofExprModel_eq(_1a4719d29_SizeofExprModel *_self_, _1a4719d29_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a471a4cd_AlignofExprModel_eq(_1a471a4cd_AlignofExprModel *_self_, _1a471a4cd_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a471a6ba_RuneExprModel_eq(_1a471a6ba_RuneExprModel *_self_, _1a471a6ba_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1a471ad3b_FreeExprModel_eq(_1a471ad3b_FreeExprModel *_self_, _1a471ad3b_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1a471c28d_Param_eq(_1a471c28d_Param *_self_, _1a471c28d_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1a4720bba_ParamIns> _1a471c656_instance(jule::Ptr<_1a471c28d_Param> _self_) {
	return jule::new_ptr<_1a4720bba_ParamIns>(_1a4720bba_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr)});;
}



inline jule::Bool _1a471c8dc_IsSelf(_1a471c28d_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a471cb73_IsRef(_1a471c28d_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1a471e218_IsVoid(_1a471dc62_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a471e49e_IsMethod(_1a471dc62_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1a471c28d_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1a471c8dc_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a471e735_IsEntryPoint(_1a471dc62_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a471e9bb_IsInit(_1a471dc62_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a471ec52_IsAnon(_1a471dc62_Fn* _self_) {
	return _1a4640cd8_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a471eed8_AnyVar(_1a471dc62_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a472026e_instanceForce(jule::Ptr<_1a471dc62_Fn> _self_) {
	jule::Ptr<_1a4721d20_FnIns> _1107_ins = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::new_ptr<_1a47cba34_Scope>(_1a47cba34_Scope{._field_Parent=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1a47ea6bd_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4720bba_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81d87e4:;
		if (it != expr_end) {
			jule::Ptr<_1a471c28d_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a471c656_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1a81d87e4:;
			++it;
			goto _iter_begin_1a81d87e4;
		}
		_iter_end_1a81d87e4:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a4720505_instance(jule::Ptr<_1a471dc62_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1a472026e_instanceForce(_self_);;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a4720813_appendInstance(_1a471dc62_Fn* _self_, jule::Ptr<_1a4721d20_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a4721d20_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a4721d20_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81dd7a5:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _15415_ains = *it;
			{
				if (_1a47238b0_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1a81dd7a5:;
			++it;
			goto _iter_begin_1a81dd7a5;
		}
		_iter_end_1a81dd7a5:;
	};
	{ jule::Slice<jule::Ptr<_1a4721d20_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1a4720bba_ParamIns_eq(_1a4720bba_ParamIns *_self_, _1a4720bba_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1a4721061_Str(_1a4720bba_ParamIns* _self_) {
	_1e71a80b0_Builder _1767_s = static__1e71a892e_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1e71a90b1_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:178:4"));
			(except.result);
		});
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		({
			auto except = _1e71a90b1_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:182:4"));
			(except.result);
		});
	};
	if (_1a471c8dc_IsSelf((*(_self_))._field_Decl)) {
		if (_1a471cb73_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1e71a9369_WriteByte(&_1767_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:187:5"));
			});
		};
		({
			auto except = _1e71a90b1_WriteStr(&_1767_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
		return _1e71a9941_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		({
			auto except = _1e71a90b1_WriteStr(&_1767_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1e71a90b1_WriteStr(&_1767_s, _1a48d58c9_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:197:4"));
			(except.result);
		});
	};
	return _1e71a9941_Str(&_1767_s);;
}







inline jule::Str _1a4722194_Str(_1a4721d20_FnIns* _self_) {
	;
	return _1a4723c01_GetKindStr(_self_, false);;
}



inline jule::Bool _1a47224d5_Equal(jule::Ptr<_1a4721d20_FnIns> _self_, jule::Ptr<_1a48d54cd_Type> _22918_other) {
	jule::Ptr<_1a4721d20_FnIns> _2303_f = _1a48d8e71_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1a472297a_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1a472297a_EqualFn(jule::Ptr<_1a4721d20_FnIns> _self_, jule::Ptr<_1a4721d20_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a471e218_IsVoid((*(_self_))._field_Decl) != _1a471e218_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a4720bba_ParamIns>,jule::Ptr<_1a4720bba_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a4720bba_ParamIns>,jule::Ptr<_1a4720bba_ParamIns>>((void*)__jule_anon1a81e8ded, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I32 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1a81eec5b:;
	}
	_iter_end_1a81eec5b:;;
	if ((!(_1a471e218_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1a48d5c1a_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a4722cbb_equalTrait(jule::Ptr<_1a4721d20_FnIns> _self_, jule::Ptr<_1a4721d20_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a472297a_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a48d54cd_Type>> _1a4723052_Types(_1a4721d20_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a82058ee:;
			{
				return nullptr;;
			}
		}
		else if ((_1a48d99aa_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a8205965:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1a820547b:;
			{
				return (*(_1a48d99aa_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1a820536b:;
	};
}



inline jule::Bool _1a47232d8_IsBuiltin(_1a4721d20_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a472356e_IsAnon(_1a4721d20_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a471ec52_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a47238b0_Same(_1a4721d20_FnIns* _self_, jule::Ptr<_1a4721d20_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8208616:;
		if (it != expr_end) {
			jule::I32 _3477_i = it - expr->begin();
			jule::Ptr<_1a48d3ae7_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1a48d3ae7_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Type))._field_BindIdent != (*(*(_3484_g2))._field_Type.alloc)._field_BindIdent) || (!(_1a48d5c1a_Equal((*((*(_34710_g))))._field_Type, (*(_3484_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1a8208616:;
			++it;
			_3477_i++;
			goto _iter_begin_1a8208616;
		}
		_iter_end_1a8208616:;
	};
	return true;;
}



inline jule::Str _1a4723c01_GetKindStr(_1a4721d20_FnIns* _self_, jule::Bool _35922_ident) {
	_1e71a80b0_Builder _3607_s = static__1e71a892e_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1e71a90b1_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:363:4"));
			(except.result);
		});
	};
	({
		auto except = _1e71a90b1_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:366:3"));
		(except.result);
	});
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1e71a9369_WriteByte(&_3607_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:369:4"));
		});
		({
			auto except = _1e71a90b1_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1e71a9369_WriteByte(&_3607_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
	});
	jule::I32 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a821438b:;
			if (it != expr_end) {
				jule::I32 _3768_i = it - expr->begin();
				jule::Ptr<_1a4720bba_ParamIns> *_37611_p = it;
				{
					({
						auto except = _1e71a90b1_WriteStr(&_3607_s, _1a4721061_Str((*(_37611_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:5"));
						(except.result);
					});
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1e71a9369_WriteByte(&_3607_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:379:6"));
						});
					};
				}
				_iter_next_1a821438b:;
				++it;
				_3768_i++;
				goto _iter_begin_1a821438b;
			}
			_iter_end_1a821438b:;
		};
	};
	({
		auto except = _1e71a9369_WriteByte(&_3607_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:383:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1e71a9369_WriteByte(&_3607_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:385:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1a471e218_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1e71a9369_WriteByte(&_3607_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:388:4"));
		});
		({
			auto except = _1e71a90b1_WriteStr(&_3607_s, _1a48d58c9_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:389:4"));
			(except.result);
		});
	};
	return _1e71a9941_Str(&_3607_s);;
}







inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4725582_SelectPackage(_1a4725065_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a821813c:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1a821813c:;
			++it;
			goto _iter_begin_1a821813c;
		}
		_iter_end_1a821813c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4852e51_Var> _1a472597d_FindVar(_1a4725065_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a4727ab2_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a4725d79_FindTypeAlias(_1a4725065_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a4728068_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a4726275_FindStruct(_1a4725065_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8219db9:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1a8219db9:;
			++it;
			goto _iter_begin_1a8219db9;
		}
		_iter_end_1a8219db9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a471dc62_Fn> _1a4726671_FindFn(_1a4725065_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a821bad0:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1a821bad0:;
			++it;
			goto _iter_begin_1a821bad0;
		}
		_iter_end_1a821bad0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4729476_Trait> _1a47269b2_FindTrait(_1a4725065_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a482100c:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1a482100c:;
			++it;
			goto _iter_begin_1a482100c;
		}
		_iter_end_1a482100c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a4726d03_FindEnum(_1a4725065_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b083d2:;
		if (it != expr_end) {
			jule::Ptr<_1a472bb2c_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1a4b083d2:;
			++it;
			goto _iter_begin_1a4b083d2;
		}
		_iter_end_1a4b083d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a4727144_FindTypeEnum(_1a4725065_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b093c2:;
		if (it != expr_end) {
			jule::Ptr<_1a472d337_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1a4b093c2:;
			++it;
			goto _iter_begin_1a4b093c2;
		}
		_iter_end_1a4b093c2:;
	};
	return nullptr;;
}



inline jule::I32 _1a472760b_findVar1(_1a4725065_SymTab* _self_, jule::Ptr<_1a4852e51_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b0a3b2:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1a4b0a3b2:;
			++it;
			_1097_i++;
			goto _iter_begin_1a4b0a3b2;
		}
		_iter_end_1a4b0a3b2:;
	};
	return -1LL;;
}



inline jule::Ptr<_1a4852e51_Var> _1a4727ab2_findVar(_1a4725065_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1a4852e51_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1a4b0c22c:;
		}
		_iter_end_1a4b0c22c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a4b0d6b2:;
			if (it != expr_end) {
				jule::Ptr<_1a4852e51_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1a4b0d6b2:;
				++it;
				goto _iter_begin_1a4b0d6b2;
			}
			_iter_end_1a4b0d6b2:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a4728068_findTypeAlias(_1a4725065_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1a48d46db_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1a4b10571:;
		}
		_iter_end_1a4b10571:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a4b11a06:;
			if (it != expr_end) {
				jule::Ptr<_1a48d46db_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1a4b11a06:;
				++it;
				goto _iter_begin_1a4b11a06;
			}
			_iter_end_1a4b11a06:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a4728464_defByIdent(_1a4725065_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b12c6b:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1a4b12c6b:;
			++it;
			goto _iter_begin_1a4b12c6b;
		}
		_iter_end_1a4b12c6b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b13a08:;
		if (it != expr_end) {
			jule::Ptr<_1a48d46db_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1a4b13a08:;
			++it;
			goto _iter_begin_1a4b13a08;
		}
		_iter_end_1a4b13a08:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b16d91:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1a4b16d91:;
			++it;
			goto _iter_begin_1a4b16d91;
		}
		_iter_end_1a4b16d91:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b166a9:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1a4b166a9:;
			++it;
			goto _iter_begin_1a4b166a9;
		}
		_iter_end_1a4b166a9:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b22c04:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1a4b22c04:;
			++it;
			goto _iter_begin_1a4b22c04;
		}
		_iter_end_1a4b22c04:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b22880:;
		if (it != expr_end) {
			jule::Ptr<_1a472bb2c_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1a4b22880:;
			++it;
			goto _iter_begin_1a4b22880;
		}
		_iter_end_1a4b22880:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b23d59:;
		if (it != expr_end) {
			jule::Ptr<_1a472d337_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1a4b23d59:;
			++it;
			goto _iter_begin_1a4b23d59;
		}
		_iter_end_1a4b23d59:;
	};
	return nullptr;;
}



inline jule::Bool _1a472891a_isDuplicatedIdent(_1a4725065_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b21d35:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a4b21d35:;
			++it;
			goto _iter_begin_1a4b21d35;
		}
		_iter_end_1a4b21d35:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b294be:;
		if (it != expr_end) {
			jule::Ptr<_1a48d46db_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a4b294be:;
			++it;
			goto _iter_begin_1a4b294be;
		}
		_iter_end_1a4b294be:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b29513:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a4b29513:;
			++it;
			goto _iter_begin_1a4b29513;
		}
		_iter_end_1a4b29513:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b30618:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a4b30618:;
			++it;
			goto _iter_begin_1a4b30618;
		}
		_iter_end_1a4b30618:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b32a8d:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1a4b32a8d:;
			++it;
			goto _iter_begin_1a4b32a8d;
		}
		_iter_end_1a4b32a8d:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b32b37:;
		if (it != expr_end) {
			jule::Ptr<_1a472bb2c_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1a4b32b37:;
			++it;
			goto _iter_begin_1a4b32b37;
		}
		_iter_end_1a4b32b37:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b33b38:;
		if (it != expr_end) {
			jule::Ptr<_1a472d337_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1a4b33b38:;
			++it;
			goto _iter_begin_1a4b33b38;
		}
		_iter_end_1a4b33b38:;
	};
	return false;;
}







inline jule::Str _1a4729872_Str(_1a4729476_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a4729bb3_Equal(jule::Ptr<_1a4729476_Trait> _self_, jule::Ptr<_1a48d54cd_Type> _2518_other) {
	jule::Ptr<_1a4729476_Trait> _263_trt = _1a48d948d_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a471dc62_Fn> _1a472a158_FindMethod(_1a4729476_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b36520:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1a4b36520:;
			++it;
			goto _iter_begin_1a4b36520;
		}
		_iter_end_1a4b36520:;
	};
	return _1a472a7da_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a471dc62_Fn> _1a472a7da_findMethodInherit(_1a4729476_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b396dd:;
		if (it != expr_end) {
			jule::Ptr<_1a48dcbde_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_1a4b396dd;
				};
				jule::Ptr<_1a4729476_Trait> _608_t = _1a48d948d_Trait((*_5615_i.alloc)._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a471dc62_Fn> _629_f2 = _1a472a158_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1a4b396dd:;
			++it;
			goto _iter_begin_1a4b396dd;
		}
		_iter_end_1a4b396dd:;
	};
	return nullptr;;
}








inline jule::Bool _1a472b0c1_EnumItem_eq(_1a472b0c1_EnumItem *_self_, _1a472b0c1_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1a472b49a_AutoExpr(_1a472b0c1_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1a472bed4_Str(_1a472bb2c_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a472c325_Equal(jule::Ptr<_1a472bb2c_Enum> _self_, jule::Ptr<_1a48d54cd_Type> _3818_other) {
	jule::Ptr<_1a472bb2c_Enum> _393_enm = _1a48d8437_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a472b0c1_EnumItem> _1a472c754_FindItem(_1a472bb2c_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b3cee9:;
		if (it != expr_end) {
			jule::Ptr<_1a472b0c1_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1a4b3cee9:;
			++it;
			goto _iter_begin_1a4b3cee9;
		}
		_iter_end_1a4b3cee9:;
	};
	return nullptr;;
}








inline jule::Bool _1a472cc60_TypeEnumItem_eq(_1a472cc60_TypeEnumItem *_self_, _1a472cc60_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1a472d6ab_Str(_1a472d337_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a472d9ec_Equal(jule::Ptr<_1a472d337_TypeEnum> _self_, jule::Ptr<_1a48d54cd_Type> _8018_other) {
	jule::Ptr<_1a472d337_TypeEnum> _813_tenm = _1a48d86bd_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a472cc60_TypeEnumItem> _1a472de2b_FindItem(_1a472d337_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4b40293:;
		if (it != expr_end) {
			jule::Ptr<_1a472cc60_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1a4b40293:;
			++it;
			goto _iter_begin_1a4b40293;
		}
		_iter_end_1a4b40293:;
	};
	return nullptr;;
}








inline jule::Bool _1a479e144_comptimeRange_eq(_1a479e144_comptimeRange *_self_, _1a479e144_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a479e540_Str(_1a479e144_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a479e881_Equal(jule::Ptr<_1a479e144_comptimeRange> _self_, jule::Ptr<_1a48d54cd_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1a479eba0_comptimeStructField_eq(_1a479eba0_comptimeStructField *_self_, _1a479eba0_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a47a0057_Str(_1a479eba0_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a47a0398_Equal(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Ptr<_1a48d54cd_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a08a4__Decl(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Ptr<_1a48a447a_eval>* _4127_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a0ca0__Type(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Ptr<_1a48a447a_eval>* _5327_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a10e1_subIdent(jule::Ptr<_1a479eba0_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a4b4ca97:;
			{
				jule::Ptr<_1a4721d20_FnIns> _648_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b4dd40, jule::Ptr<__jule_anon_1a4b4dd40_ctx>::make(__jule_anon_1a4b4dd40_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b4dd40_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a4b4cb30:;
			{
				jule::Ptr<_1a4721d20_FnIns> _718_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b50d0e, jule::Ptr<__jule_anon_1a4b50d0e_ctx>::make(__jule_anon_1a4b50d0e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b50d0e_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1a4b4c8cc:;
			{
				return nullptr;;
			}
		}
		_match_end_1a4b4c9dc:;
	};
}







inline jule::Str _1a47a180b_Str(_1a47a1443_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a47a1b4c_Equal(jule::Ptr<_1a47a1443_comptimeStructFields> _self_, jule::Ptr<_1a48d54cd_Type> _9018_other) {
	return false;;
}



inline void _1a47a20d1_ready(_1a47a1443_comptimeStructFields* _self_, jule::Ptr<_1a4852e51_Var>* _9426_keyA, jule::Ptr<_1a4852e51_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479eba0_comptimeStructField>(_1a479eba0_comptimeStructField{._field_field=jule::Ptr<_1a4676280_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data6)})});
	};
}



inline void _1a47a2444_index(_1a47a1443_comptimeStructFields* _self_, jule::Ptr<_1a48a2753_Data>* _11526_d, jule::I32 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479eba0_comptimeStructField>(_1a479eba0_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data6)});
}



inline void _1a47a2862_step(_1a47a1443_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1a4852e51_Var>* _12633_keyA, jule::Ptr<_1a4852e51_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1a48da25d_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I32 _1a47a2ae8_len(_1a47a1443_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a47a2dc3_comptimeStatic_eq(_1a47a2dc3_comptimeStatic *_self_, _1a47a2dc3_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a47a327a_Str(_1a47a2dc3_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a47a35bb_Equal(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Ptr<_1a48d54cd_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a3ac7__Decl(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Ptr<_1a48a447a_eval>* _15427_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a3ec3__Type(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Ptr<_1a48a447a_eval>* _16627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a4314_subIdent(jule::Ptr<_1a47a2dc3_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a4b6365c:;
			{
				jule::Ptr<_1a4721d20_FnIns> _1778_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b648d3, jule::Ptr<__jule_anon_1a4b648d3_ctx>::make(__jule_anon_1a4b648d3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b648d3_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a4b636e5:;
			{
				jule::Ptr<_1a4721d20_FnIns> _1848_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b6685d, jule::Ptr<__jule_anon_1a4b6685d_ctx>::make(__jule_anon_1a4b6685d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b6685d_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1a4b63492:;
			{
				return nullptr;;
			}
		}
		_match_end_1a4b635a2:;
	};
}







inline jule::Str _1a47a4a2e_Str(_1a47a4677_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a47a4d70_Equal(jule::Ptr<_1a47a4677_comptimeStatics> _self_, jule::Ptr<_1a48d54cd_Type> _20318_other) {
	return false;;
}



inline void _1a47a5304_ready(_1a47a4677_comptimeStatics* _self_, jule::Ptr<_1a4852e51_Var>* _20726_keyA, jule::Ptr<_1a4852e51_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a2dc3_comptimeStatic>(_1a47a2dc3_comptimeStatic{._field_field=jule::Ptr<_1a4852e51_Var>(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data8)})});
	};
}



inline void _1a47a5667_index(_1a47a4677_comptimeStatics* _self_, jule::Ptr<_1a48a2753_Data>* _22826_d, jule::I32 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a2dc3_comptimeStatic>(_1a47a2dc3_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data8)});
}



inline void _1a47a5a85_step(_1a47a4677_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1a4852e51_Var>* _23933_keyA, jule::Ptr<_1a4852e51_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1a48dba67_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I32 _1a47a5d1b_len(_1a47a4677_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a47a60e6_comptimeEnumField_eq(_1a47a60e6_comptimeEnumField *_self_, _1a47a60e6_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a47a649d_Str(_1a47a60e6_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a47a67de_Equal(jule::Ptr<_1a47a60e6_comptimeEnumField> _self_, jule::Ptr<_1a48d54cd_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a6cd9__Decl(jule::Ptr<_1a47a60e6_comptimeEnumField> _self_, jule::Ptr<_1a48a447a_eval>* _26727_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a712a_subIdent(jule::Ptr<_1a47a60e6_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a4b73b89:;
			{
				jule::Ptr<_1a4721d20_FnIns> _2828_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b77ce2, jule::Ptr<__jule_anon_1a4b77ce2_ctx>::make(__jule_anon_1a4b77ce2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b77ce2_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1a4b74250:;
			{
				return nullptr;;
			}
		}
		_match_end_1a4b731b6:;
	};
}







inline jule::Str _1a47a78bc_Str(_1a47a7405_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a47a7c0d_Equal(jule::Ptr<_1a47a7405_comptimeEnumFields> _self_, jule::Ptr<_1a48d54cd_Type> _30118_other) {
	return false;;
}



inline void _1a47a811a_ready(_1a47a7405_comptimeEnumFields* _self_, jule::Ptr<_1a4852e51_Var>* _30526_keyA, jule::Ptr<_1a4852e51_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a60e6_comptimeEnumField>(_1a47a60e6_comptimeEnumField{._field_field=jule::Ptr<_1a472b0c1_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data10)})});
	};
}



inline void _1a47a847d_index(_1a47a7405_comptimeEnumFields* _self_, jule::Ptr<_1a48a2753_Data>* _32626_d, jule::I32 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a60e6_comptimeEnumField>(_1a47a60e6_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data10)});
}



inline void _1a47a889b_step(_1a47a7405_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1a4852e51_Var>* _33733_keyA, jule::Ptr<_1a4852e51_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1a48da77a_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I32 _1a47a8b32_len(_1a47a7405_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a47a8e0c_comptimeParam_eq(_1a47a8e0c_comptimeParam *_self_, _1a47a8e0c_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1a47a92b4_Str(_1a47a8e0c_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a47a9605_Equal(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48d54cd_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47a9b22__Decl(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48a447a_eval>* _36527_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47aa01d__Type(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48a447a_eval>* _37727_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47aa419__Recv(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Ptr<_1a48a447a_eval>* _38527_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _3907_constant = static__1a4705a90_NewBool(_1a471c8dc_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47aa75a_subIdent(jule::Ptr<_1a47a8e0c_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a4b8dc3c:;
			{
				jule::Ptr<_1a4721d20_FnIns> _4018_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b9005c, jule::Ptr<__jule_anon_1a4b9005c_ctx>::make(__jule_anon_1a4b9005c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b9005c_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1a4b8dcd6:;
			{
				jule::Ptr<_1a4721d20_FnIns> _4088_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b91ed7, jule::Ptr<__jule_anon_1a4b91ed7_ctx>::make(__jule_anon_1a4b91ed7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b91ed7_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a4b8dd5d:;
			{
				jule::Ptr<_1a4721d20_FnIns> _4158_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4b93e62, jule::Ptr<__jule_anon_1a4b93e62_ctx>::make(__jule_anon_1a4b93e62_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4b93e62_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1a4b8d92e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a4b8db4e:;
	};
}







inline jule::Str _1a47ab00d_Str(_1a47aac66_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a47ab34e_Equal(jule::Ptr<_1a47aac66_comptimeParams> _self_, jule::Ptr<_1a48d54cd_Type> _43418_other) {
	return false;;
}



inline void _1a47ab7d3_ready(_1a47aac66_comptimeParams* _self_, jule::Ptr<_1a4852e51_Var>* _43826_keyA, jule::Ptr<_1a4852e51_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a8e0c_comptimeParam>(_1a47a8e0c_comptimeParam{._field_param=jule::Ptr<_1a4720bba_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data12)})});
	};
}



inline void _1a47abb46_index(_1a47aac66_comptimeParams* _self_, jule::Ptr<_1a48a2753_Data>* _45926_d, jule::I32 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a8e0c_comptimeParam>(_1a47a8e0c_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data12)});
}



inline void _1a47ac064_step(_1a47aac66_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1a4852e51_Var>* _47033_keyA, jule::Ptr<_1a4852e51_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1a48dac97_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I32 _1a47ac2ea_len(_1a47aac66_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1a47ac97c_Str(_1a47ac5c5_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a47accbd_Equal(jule::Ptr<_1a47ac5c5_comptimeTypeInfos> _self_, jule::Ptr<_1a48d54cd_Type> _49418_other) {
	return false;;
}



inline void _1a47ad252_ready(_1a47ac5c5_comptimeTypeInfos* _self_, jule::Ptr<_1a4852e51_Var>* _49826_keyA, jule::Ptr<_1a4852e51_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47ae044_comptimeTypeInfo>(_1a47ae044_comptimeTypeInfo{._field_base=jule::Ptr<_1a48d54cd_Type>(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data15)})});
	};
}



inline void _1a47ad5b5_index(_1a47ac5c5_comptimeTypeInfos* _self_, jule::Ptr<_1a48a2753_Data>* _51926_d, jule::I32 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data15)});
}



inline void _1a47ad9d3_step(_1a47ac5c5_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1a4852e51_Var>* _52833_keyA, jule::Ptr<_1a4852e51_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data15);
	};
}



inline jule::I32 _1a47adc69_len(_1a47ac5c5_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1a47ae044_comptimeTypeInfo_eq(_1a47ae044_comptimeTypeInfo *_self_, _1a47ae044_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1a47ae3eb_Str(_1a47ae044_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a48d58c9_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a47ae73c_Equal(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48d54cd_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47aed7a__Decl(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _55627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1a48d9207_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4baae8a:;
			{
				_5617_decl=jule::Any((*(_1a48d9207_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1a48d948d_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bab001:;
			{
				_5617_decl=jule::Any(_1a48d948d_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1a48d8437_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4ba99c2:;
			{
				_5617_decl=jule::Any(_1a48d8437_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1a48d86bd_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4ba9a38:;
			{
				_5617_decl=jule::Any(_1a48d86bd_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1a48d8e71_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4ba9a9e:;
			{
				jule::Ptr<_1a4721d20_FnIns> _5728_f = _1a48d8e71_Fn((*(_self_))._field_base);;
				{
					
					if (_1a47232d8_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1a4bb115a:;
						{
							_1a48a4a0d_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1a472356e_IsAnon(_5728_f.ptr())) {
						_case_begin_1a4bb1204:;
						{
							_1a48a4a0d_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1a4bb10c2:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1a4ba995b:;
			{
				_1a48a4a0d_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a4ba983a:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b0276__Str(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _59322_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _5987_constant = static__1a4705d59_NewStr(_1a48d58c9_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958e25_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b0672__Kind(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _60627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a472bb2c_Enum> _6117_enm = _1a480e171_FindEnum(_1a47c2e37_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a472b0c1_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1a48d6897_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1a4bba098:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a48d9207_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bb9eaa:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a48d948d_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bb9c57:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a48d81a1_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bb9cbd:;
			{
				if (_1a48e6456_IsUnsafe(_1a48d81a1_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a48d7e1a_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bb9d34:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a48d8437_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bb9d9a:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a48d86bd_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bba807:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1a48d9724_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bba86d:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a48d8bda_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bba8d4:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a48d8954_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bba94a:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a48d8e71_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bba9c2:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a48d99aa_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bbaa49:;
			{
				_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a48d7b84_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a4bbaac1:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _6434_prim = _1a48d7b84_Prim((*(_self_))._field_base);;
				{
					
					if (_1a48e1d47_IsAny(_6434_prim.ptr())) {
						_case_begin_1a4bc765a:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a48e182a_IsBool(_6434_prim.ptr())) {
						_case_begin_1a4bc756c:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a48e1ab1_IsStr(_6434_prim.ptr())) {
						_case_begin_1a4bc734c:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a48e0a5a_IsF32(_6434_prim.ptr())) {
						_case_begin_1a4bc73b3:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a48e0ce1_IsF64(_6434_prim.ptr())) {
						_case_begin_1a4bc7429:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a48de4d7_IsI8(_6434_prim.ptr())) {
						_case_begin_1a4bc7490:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a48de76d_IsI16(_6434_prim.ptr())) {
						_case_begin_1a4bc7db9:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a48dea04_IsI32(_6434_prim.ptr())) {
						_case_begin_1a4bc7e41:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a48dec8a_IsI64(_6434_prim.ptr())) {
						_case_begin_1a4bc7eb8:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a48e0021_IsU8(_6434_prim.ptr())) {
						_case_begin_1a4bc8040:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a48e02a7_IsU16(_6434_prim.ptr())) {
						_case_begin_1a4bc80b7:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a48e053d_IsU32(_6434_prim.ptr())) {
						_case_begin_1a4bc813e:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a48e07c4_IsU64(_6434_prim.ptr())) {
						_case_begin_1a4bc81b6:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a48e1077_IsInt(_6434_prim.ptr())) {
						_case_begin_1a4bc823d:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a48e130d_IsUint(_6434_prim.ptr())) {
						_case_begin_1a4bc82b5:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a48e1594_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1a4bc833c:;
						{
							_61211_item=_1a472c754_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a4bc71a4:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1a48d58c9_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1a4bc712c:;
				};
			}
		}
		else {
			_case_begin_1a4bb9ae2:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1a48d58c9_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1a4bb9a37:;
	};
	return _1a48d1919_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1a48a7a11_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b0a6d__Bits(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _68627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _6913_prim = _1a48d7b84_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1a48a4a0d_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6963_n = _1a4794579_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1a48a4a0d_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _7017_constant = static__1a470550c_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a4959b07_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b0e69__Elem(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _71027_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48e58d9_Ptr> _7157_ptr = _1a48d81a1_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1a48e6456_IsUnsafe(_7157_ptr)) {
			_1a48a4a0d_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a48e2122_Sptr> _7237_sptr = _1a48d7e1a_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a48e2ae5_Slc> _7277_slice = _1a48d8bda_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a48e4e16_Arr> _7317_array = _1a48d8954_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a472bb2c_Enum> _7357_enm = _1a48d8437_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1a48a4a0d_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b1365__Size(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _74327_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48e4e16_Arr> _7487_arr = _1a48d8954_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1a48a4a0d_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _7537_constant = static__1a470550c_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a4959b07_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b1761__Key(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _76226_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48e4289_Map> _7677_m = _1a48d9724_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1a48a4a0d_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b1b5c__Value(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _77528_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48e4289_Map> _7807_m = _1a48d9724_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1a48a4a0d_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b2058__Fields(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _78829_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4676d30_StructIns> _7937_s = _1a48d9207_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a1443_comptimeStructFields>(_1a47a1443_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	};
	jule::Ptr<_1a472bb2c_Enum> _8037_enm = _1a48d8437_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a7405_comptimeEnumFields>(_1a47a7405_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	};
	_1a48a4a0d_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b2454__Statics(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _81730_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4676d30_StructIns> _8227_s = _1a48d9207_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1a48a4a0d_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47a4677_comptimeStatics>(_1a47a4677_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b2850__Binded(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _83629_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _8417_constant = static__1a4705a90_NewBool(_1a48d637a_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b2c4b__Ordered(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _84926_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _8547_constant = static__1a4705a90_NewBool(_1a48d714a_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b3147__Comparable(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _86229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _8677_constant = static__1a4705a90_NewBool(_1a48d6b2d_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b3543__Mutable(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _87526_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _8807_constant = static__1a4705a90_NewBool(_1a48d6db4_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b393e__Types(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _88828_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48e36d9_Tuple> _8937_tup = _1a48d99aa_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1a48a4a0d_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a47ac5c5_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1a47ac5c5_comptimeTypeInfos>(_1a47ac5c5_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47ae044_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47ae044_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4c1b748:;
		if (it != expr_end) {
			jule::Ptr<_1a48d54cd_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47ae044_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a4828c4b_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1a4c1b748:;
			++it;
			goto _iter_begin_1a4c1b748;
		}
		_iter_end_1a4c1b748:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b3d3a__CanNil(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _91129_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _9167_constant = static__1a4705a90_NewBool(_1a48d73d1_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b4236__GC(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _92425_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _9297_constant = static__1a4705a90_NewBool(_1a48d7667_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b4632__Result(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _93729_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4721d20_FnIns> _9427_f = _1a48d8e71_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1a48a4a0d_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1a4958870_primVoid));;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b4a2d__Params(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Ptr<_1a48a447a_eval>* _95329_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4721d20_FnIns> _9587_f = _1a48d8e71_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1a48a4a0d_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47aac66_comptimeParams>(_1a47aac66_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b4d6e_subIdent(jule::Ptr<_1a47ae044_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a4c2cb99:;
			{
				jule::Ptr<_1a4721d20_FnIns> _9738_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c2e75b, jule::Ptr<__jule_anon_1a4c2e75b_ctx>::make(__jule_anon_1a4c2e75b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c2e75b_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1a4c2cc10:;
			{
				jule::Ptr<_1a4721d20_FnIns> _9808_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c316d6, jule::Ptr<__jule_anon_1a4c316d6_ctx>::make(__jule_anon_1a4c316d6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c316d6_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1a4c2cc76:;
			{
				jule::Ptr<_1a4721d20_FnIns> _9878_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c33661, jule::Ptr<__jule_anon_1a4c33661_ctx>::make(__jule_anon_1a4c33661_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c33661_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1a4c2ce0d:;
			{
				jule::Ptr<_1a4721d20_FnIns> _9948_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c355db, jule::Ptr<__jule_anon_1a4c355db_ctx>::make(__jule_anon_1a4c355db_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c355db_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1a4c2ce85:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10018_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c37566, jule::Ptr<__jule_anon_1a4c37566_ctx>::make(__jule_anon_1a4c37566_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c37566_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1a4c2d00c:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10088_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c394e1, jule::Ptr<__jule_anon_1a4c394e1_ctx>::make(__jule_anon_1a4c394e1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c394e1_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1a4c2d084:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10158_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c3b46b, jule::Ptr<__jule_anon_1a4c3b46b_ctx>::make(__jule_anon_1a4c3b46b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c3b46b_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a4c2d194:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10228_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c3d3e6, jule::Ptr<__jule_anon_1a4c3d3e6_ctx>::make(__jule_anon_1a4c3d3e6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c3d3e6_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a4c2d20a:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10298_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c405e6, jule::Ptr<__jule_anon_1a4c405e6_ctx>::make(__jule_anon_1a4c405e6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c405e6_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a4c2d271:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10368_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c42571, jule::Ptr<__jule_anon_1a4c42571_ctx>::make(__jule_anon_1a4c42571_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c42571_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1a4c2d2d7:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10438_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c444eb, jule::Ptr<__jule_anon_1a4c444eb_ctx>::make(__jule_anon_1a4c444eb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c444eb_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a4c2d35e:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10508_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c46476, jule::Ptr<__jule_anon_1a4c46476_ctx>::make(__jule_anon_1a4c46476_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c46476_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1a4c2d3d6:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10578_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c48401, jule::Ptr<__jule_anon_1a4c48401_ctx>::make(__jule_anon_1a4c48401_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c48401_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1a4c2d45d:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10648_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c4a37b, jule::Ptr<__jule_anon_1a4c4a37b_ctx>::make(__jule_anon_1a4c4a37b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c4a37b_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a4c2d4d5:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10718_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c4c306, jule::Ptr<__jule_anon_1a4c4c306_ctx>::make(__jule_anon_1a4c4c306_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c4c306_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1a4c2d55c:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10788_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c4e281, jule::Ptr<__jule_anon_1a4c4e281_ctx>::make(__jule_anon_1a4c4e281_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c4e281_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1a4c2d5d4:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10858_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c5120b, jule::Ptr<__jule_anon_1a4c5120b_ctx>::make(__jule_anon_1a4c5120b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c5120b_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1a4c2d65b:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10928_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a4c53186, jule::Ptr<__jule_anon_1a4c53186_ctx>::make(__jule_anon_1a4c53186_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a4c53186_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1a4c2d6d3:;
			{
				jule::Ptr<_1a4721d20_FnIns> _10998_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83706e5, jule::Ptr<__jule_anon_1a83706e5_ctx>::make(__jule_anon_1a83706e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83706e5_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1a4c2a504:;
			{
				return nullptr;;
			}
		}
		_match_end_1a4c2c979:;
	};
}








inline jule::Bool _1a47b5149_comptimeValue_eq(_1a47b5149_comptimeValue *_self_, _1a47b5149_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1a47b5501_Str(_1a47b5149_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a47b5842_Equal(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48d54cd_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b5da3__Unwrap(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _112229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b629e__Type(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _113027_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b669a__Lvalue(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _113829_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _11437_constant = static__1a4705a90_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b6a96__Mutable(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _115130_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _11567_constant = static__1a4705a90_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b6e92__Const(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _116428_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _11697_constant = static__1a4705a90_NewBool(_1a48a318d_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b738d__Field(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _117728_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4676d30_StructIns> _11827_s = _1a48d9207_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_1a48a4a0d_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a465799d_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1a48a2753_Data> _11887_d = _1a48c32e0_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a48a318d_IsConst(_11887_d.ptr())))) {
		_1a48a4a0d_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _11963_prim = _1a48d7b84_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_1a48e1ab1_IsStr(_11963_prim.ptr()))))) {
		_1a48a4a0d_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1a4707245_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1a4676280_FieldIns> _12027_f = _1a467821b_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1a48a4a0d_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1a48baeca_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1a47c35ec_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b7789__Method(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Ptr<_1a48a447a_eval>* _121229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1a4676d30_StructIns> _12187_s = static_cast<jule::Ptr<_1a4676d30_StructIns>>(nullptr);;
	if ((_1a48d7e1a_Sptr((*((*(_self_))._field_data))._field_Type.ptr()) != nullptr)) {
		_12187_s=_1a48d9207_Struct((*(_1a48d7e1a_Sptr((*((*(_self_))._field_data))._field_Type)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1a48d9207_Struct((*((*(_self_))._field_data))._field_Type.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1a48a4a0d_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a465799d_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1a48a2753_Data> _12307_d = _1a48c32e0_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a48a318d_IsConst(_12307_d.ptr())))) {
		_1a48a4a0d_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _12383_prim = _1a48d7b84_Prim((*(_12307_d))._field_Type);;
	if (((_12383_prim == nullptr) || (!(_1a48e1ab1_IsStr(_12383_prim.ptr()))))) {
		_1a48a4a0d_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_12307_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1a4707245_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1a471dc62_Fn> _12457_m = _1a4677dca_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1a48a4a0d_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1a48d1ebe_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1a48bb5e6_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1a47c35ec_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47b7aca_subIdent(jule::Ptr<_1a47b5149_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1a839a797:;
			{
				jule::Ptr<_1a4721d20_FnIns> _12618_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a839bc60, jule::Ptr<__jule_anon_1a839bc60_ctx>::make(__jule_anon_1a839bc60_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a839bc60_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a839a80d:;
			{
				jule::Ptr<_1a4721d20_FnIns> _12688_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a839dbda, jule::Ptr<__jule_anon_1a839dbda_ctx>::make(__jule_anon_1a839dbda_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a839dbda_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1a839a874:;
			{
				jule::Ptr<_1a4721d20_FnIns> _12758_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83a0b65, jule::Ptr<__jule_anon_1a83a0b65_ctx>::make(__jule_anon_1a83a0b65_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83a0b65_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a839a8eb:;
			{
				jule::Ptr<_1a4721d20_FnIns> _12828_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83a2ae0, jule::Ptr<__jule_anon_1a83a2ae0_ctx>::make(__jule_anon_1a83a2ae0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83a2ae0_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1a839aad8:;
			{
				jule::Ptr<_1a4721d20_FnIns> _12898_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83a4a6a, jule::Ptr<__jule_anon_1a83a4a6a_ctx>::make(__jule_anon_1a83a4a6a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83a4a6a_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1a839ab4e:;
			{
				jule::Ptr<_1a4721d20_FnIns> _12968_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83a69e5, jule::Ptr<__jule_anon_1a83a69e5_ctx>::make(__jule_anon_1a83a69e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83a69e5_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1a839abb5:;
			{
				jule::Ptr<_1a4721d20_FnIns> _13038_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83a8970, jule::Ptr<__jule_anon_1a83a8970_ctx>::make(__jule_anon_1a83a8970_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83a8970_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1a839a269:;
			{
				return nullptr;;
			}
		}
		_match_end_1a839a654:;
	};
}







inline jule::Str _1a47b825c_Str(_1a47b7da5_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a47b859d_Equal(jule::Ptr<_1a47b7da5_comptimeFiles> _self_, jule::Ptr<_1a48d54cd_Type> _132218_other) {
	return false;;
}



inline void _1a47b8a32_ready(_1a47b7da5_comptimeFiles* _self_, jule::Ptr<_1a4852e51_Var>* _132626_keyA, jule::Ptr<_1a4852e51_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47b9824_comptimeFile>(_1a47b9824_comptimeFile{._field_file=jule::Ptr<_1a4725065_SymTab>(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data18)})});
	};
}



inline void _1a47b8d95_index(_1a47b7da5_comptimeFiles* _self_, jule::Ptr<_1a48a2753_Data>* _134726_d, jule::I32 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47b9824_comptimeFile>(_1a47b9824_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data18)});
}



inline void _1a47b92b3_step(_1a47b7da5_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_1a4852e51_Var>* _135833_keyA, jule::Ptr<_1a4852e51_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a47b9824_comptimeFile>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I32 _1a47b9549_len(_1a47b7da5_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1a47b9824_comptimeFile_eq(_1a47b9824_comptimeFile *_self_, _1a47b9824_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1a47b9bcb_Str(_1a47b9824_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a47ba01c_Equal(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48d54cd_Type> _138218_other) {
	return false;;
}



inline jule::Ptr<_1a48a2753_Data> _1a47ba539__Path(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48a447a_eval>* _138627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _13917_constant = static__1a4705d59_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958e25_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47ba935__Name(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48a447a_eval>* _139927_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _14047_constant = static__1a4705d59_NewStr(_1a4644737_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958e25_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47bad31__Dir(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Ptr<_1a48a447a_eval>* _141226_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a4276798_Const> _14177_constant = static__1a4705d59_NewStr(_1a46444a1_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958e25_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47bb172_subIdent(jule::Ptr<_1a47b9824_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1a83bc38a:;
			{
				jule::Ptr<_1a4721d20_FnIns> _14288_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83bd6aa, jule::Ptr<__jule_anon_1a83bd6aa_ctx>::make(__jule_anon_1a83bd6aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83bd6aa_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a83bc434:;
			{
				jule::Ptr<_1a4721d20_FnIns> _14358_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83c0635, jule::Ptr<__jule_anon_1a83c0635_ctx>::make(__jule_anon_1a83c0635_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83c0635_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1a83bc4ab:;
			{
				jule::Ptr<_1a4721d20_FnIns> _14428_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a83c25b0, jule::Ptr<__jule_anon_1a83c25b0_ctx>::make(__jule_anon_1a83c25b0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a83c25b0_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1a83bc07c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a83bc29c:;
	};
}







inline jule::Str _1a47bba35_Str(_1a47bb44c_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1a47bbd76_Equal(jule::Ptr<_1a47bb44c_comptimeDecls> _self_, jule::Ptr<_1a48d54cd_Type> _146118_other) {
	return false;;
}



inline void _1a47bc1ea_ready(_1a47bb44c_comptimeDecls* _self_, jule::Ptr<_1a4852e51_Var>* _146526_keyA, jule::Ptr<_1a4852e51_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)})});
	};
}



inline void _1a47bc55d_index(_1a47bb44c_comptimeDecls* _self_, jule::Ptr<_1a48a2753_Data>* _148626_d, jule::I32 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)});
}



inline void _1a47bc97b_step(_1a47bb44c_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_1a4852e51_Var>* _149533_keyA, jule::Ptr<_1a4852e51_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a47bd73a_comptimeDecl>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I32 _1a47bcc12_len(_1a47bb44c_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1a47bd73a_comptimeDecl_eq(_1a47bd73a_comptimeDecl *_self_, _1a47bd73a_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1a47bdae2_Str(_1a47bd73a_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1a47bde33_Equal(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48d54cd_Type> _153418_other) {
	return false;;
}



inline jule::Str _1a47be384_declAsStr(_1a47bd73a_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a83cc6a8:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a83cc158:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a83cc565:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a83cc5dc:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a83cc862:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a83cc8d9:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a83ccb5e:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a83ccbc5:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a83ccc3b:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a83ccca2:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1a83cc4ee:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1a83cc28a:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a47be780__Name(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _156527_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a83d2614:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a83d29bb:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471dc62_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a83d2a32:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a472bb2c_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a83d2aa9:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a472d337_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a83d2b31:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4729476_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a83d2ba8:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a46710d2_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a83d3060:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a48d46db_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a83d30c6:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a83d313c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a472b0c1_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a83d31a3:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471c28d_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1a83d2955:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1a83d28de:;
	};
	jule::Ptr<_1a4276798_Const> _15957_constant = static__1a4705d59_NewStr(_15707_name);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958e25_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47beb7b__Public(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _160329_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1a83dbb29:;
			{
				_1a48a4a0d_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a83dbec0:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a83dc036:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471dc62_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a83dc09c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a472bb2c_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a83dc124:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a472d337_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a83dc19b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4729476_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a83dc223:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a46710d2_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a83dc575:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a48d46db_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a83dc5ec:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1a83dbe59:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1a83dbde3:;
	};
	jule::Ptr<_1a4276798_Const> _16337_constant = static__1a4705a90_NewBool(_16087_public);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c0077__Binded(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _164129_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1a83e6738:;
			{
				_1a48a4a0d_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a83e6419:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a83e6480:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471dc62_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a83e64e6:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a48d46db_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a83e655c:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1a83e63a3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1a83e633c:;
	};
	jule::Ptr<_1a4276798_Const> _16677_constant = static__1a4705a90_NewBool(_16467_binded);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c0473__Exceptional(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _167534_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a83ebd37:;
			{
				goto _match_end_1a83ed1bd;
			}
		}
		else {
			_case_begin_1a83ed234:;
			{
				_1a48a4a0d_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a83ed1bd:;
	};
	jule::Ptr<_1a471dc62_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1a471dc62_Fn>(&__jule_any_type10);;
	jule::Ptr<_1a4276798_Const> _16887_constant = static__1a4705a90_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c086e__Mutable(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _169630_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1a840335a:;
			{
				_1a48a4a0d_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a840303b:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471c28d_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a84030a2:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a46710d2_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a8403118:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1a8402ec5:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1a8402e5e:;
	};
	jule::Ptr<_1a4276798_Const> _17217_constant = static__1a4705a90_NewBool(_17017_mutable);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c0c6a__Variadic(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _172931_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1a8409cce:;
			{
				_1a48a4a0d_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a84099b0:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471c28d_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1a8409949:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1a84098d3:;
	};
	jule::Ptr<_1a4276798_Const> _17527_constant = static__1a4705a90_NewBool(_17347_variadic);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c1166__Reference(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _176032_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1a8410664:;
			{
				_1a48a4a0d_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a8410345:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a84103ab:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a471c28d_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1a84102ce:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1a8410268:;
	};
	jule::Ptr<_1a4276798_Const> _17847_constant = static__1a4705a90_NewBool(_17657_ref);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c1562__Params(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _179229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1a8414b74:;
			{
				_1a48a4a0d_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a841646c:;
			{
				jule::Ptr<_1a471dc62_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1a471dc62_Fn>();;
				jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47bd73a_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8419ad0:;
					if (it != expr_end) {
						jule::I32 _18129_i = it - expr->begin();
						jule::Ptr<_1a471c28d_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1a8419ad0:;
						++it;
						_18129_i++;
						goto _iter_begin_1a8419ad0;
					}
					_iter_end_1a8419ad0:;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bb44c_comptimeDecls>(_1a47bb44c_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8416071:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1a841600a:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a47c195d__Fields(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _182729_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1a841d61c:;
			{
				_1a48a4a0d_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a841d2ed:;
			{
				jule::Ptr<_1a472bb2c_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1a472bb2c_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47bd73a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8421950:;
					if (it != expr_end) {
						jule::I32 _18479_i = it - expr->begin();
						jule::Ptr<_1a472b0c1_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1a8421950:;
						++it;
						_18479_i++;
						goto _iter_begin_1a8421950;
					}
					_iter_end_1a8421950:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a841d364:;
			{
				jule::Ptr<_1a4673ec5_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a4673ec5_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47bd73a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8423864:;
					if (it != expr_end) {
						jule::I32 _18539_i = it - expr->begin();
						jule::Ptr<_1a46710d2_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1a8423864:;
						++it;
						_18539_i++;
						goto _iter_begin_1a8423864;
					}
					_iter_end_1a8423864:;
				};
			}
		}
		else {
			_case_begin_1a841d287:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1a841d221:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bb44c_comptimeDecls>(_1a47bb44c_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c1d59__Statics(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _186830_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1a84273e5:;
			{
				_1a48a4a0d_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a84270c6:;
			{
				jule::Ptr<_1a4673ec5_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a4673ec5_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47bd73a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a842a816:;
					if (it != expr_end) {
						jule::I32 _18899_i = it - expr->begin();
						jule::Ptr<_1a4852e51_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1a842a816:;
						++it;
						_18899_i++;
						goto _iter_begin_1a842a816;
					}
					_iter_end_1a842a816:;
				};
			}
		}
		else {
			_case_begin_1a8427060:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1a8426ee9:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bb44c_comptimeDecls>(_1a47bb44c_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c2255__Methods(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Ptr<_1a48a447a_eval>* _190430_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1a842e397:;
			{
				_1a48a4a0d_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a47be384_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a842e078:;
			{
				jule::Ptr<_1a4729476_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1a4729476_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47bd73a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a84326ca:;
					if (it != expr_end) {
						jule::I32 _19249_i = it - expr->begin();
						jule::Ptr<_1a471dc62_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1a84326ca:;
						++it;
						_19249_i++;
						goto _iter_begin_1a84326ca;
					}
					_iter_end_1a84326ca:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a842e0de:;
			{
				jule::Ptr<_1a4673ec5_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a4673ec5_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47bd73a_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47bd73a_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a84345de:;
					if (it != expr_end) {
						jule::I32 _19309_i = it - expr->begin();
						jule::Ptr<_1a471dc62_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1a47bd73a_comptimeDecl>(_1a47bd73a_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1a84345de:;
						++it;
						_19309_i++;
						goto _iter_begin_1a84345de;
					}
					_iter_end_1a84345de:;
				};
			}
		}
		else {
			_case_begin_1a842e012:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1a842de9b:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47bb44c_comptimeDecls>(_1a47bb44c_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c2596_subIdent(jule::Ptr<_1a47bd73a_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a8435da4:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19488_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a843758c, jule::Ptr<__jule_anon_1a843758c_ctx>::make(__jule_anon_1a843758c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a843758c_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a8435e1a:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19558_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a8439517, jule::Ptr<__jule_anon_1a8439517_ctx>::make(__jule_anon_1a8439517_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8439517_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a8435e92:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19628_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a843b492, jule::Ptr<__jule_anon_1a843b492_ctx>::make(__jule_anon_1a843b492_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a843b492_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1a8436019:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19698_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a843d41c, jule::Ptr<__jule_anon_1a843d41c_ctx>::make(__jule_anon_1a843d41c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a843d41c_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a84361c3:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19768_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a8440397, jule::Ptr<__jule_anon_1a8440397_ctx>::make(__jule_anon_1a8440397_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8440397_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1a8436239:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19838_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a8442322, jule::Ptr<__jule_anon_1a8442322_ctx>::make(__jule_anon_1a8442322_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8442322_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1a84362b1:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19908_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a844429c, jule::Ptr<__jule_anon_1a844429c_ctx>::make(__jule_anon_1a844429c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a844429c_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a8436338:;
			{
				jule::Ptr<_1a4721d20_FnIns> _19978_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a8446227, jule::Ptr<__jule_anon_1a8446227_ctx>::make(__jule_anon_1a8446227_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8446227_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a8436459:;
			{
				jule::Ptr<_1a4721d20_FnIns> _20048_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a8448427, jule::Ptr<__jule_anon_1a8448427_ctx>::make(__jule_anon_1a8448427_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8448427_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a84364c0:;
			{
				jule::Ptr<_1a4721d20_FnIns> _20118_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a844a3a2, jule::Ptr<__jule_anon_1a844a3a2_ctx>::make(__jule_anon_1a844a3a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a844a3a2_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1a8436536:;
			{
				jule::Ptr<_1a4721d20_FnIns> _20188_method = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>((void*)__jule_anon_1a844c32c, jule::Ptr<__jule_anon_1a844c32c_ctx>::make(__jule_anon_1a844c32c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a844c32c_ctx_handler), ._field_reloaded=false});;
				return _1a47c2c28_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1a8431652:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8435b62:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*> _1a47c5555_readyFn(jule::Ptr<_1a47c5126_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*>((void*)__jule_anon_1a8458602, jule::Ptr<__jule_anon_1a8458602_ctx>::make(__jule_anon_1a8458602_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8458602_ctx_handler);;
}



inline jule::Bool _1a47c57db_readyFi(jule::Ptr<_1a47c5126_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a483c8a8_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a47c5555_readyFn(_self_)));;
}



inline jule::Bool _1a47c5a72_readySi(jule::Ptr<_1a47c5126_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a47c5555_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a47c5d08_ready(jule::Ptr<_1a47c5126_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a47c57db_readyFi(_self_);;
	};
	return _1a47c5a72_readySi(_self_);;
}



inline jule::Bool _1a47c608e_check(jule::Ptr<_1a47c5126_constraintChecker> _self_) {
	if ((!(_1a47c5d08_ready(_self_)))) {
		return false;;
	};
	_julec_label_1a846924a:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8469701:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_1a48d3ae7_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1a8469701;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a846a911:;
					if (it != expr_end) {
						jule::Ptr<_1a48d54cd_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1a48dd5e6_Prim> _1259_prim = _1a48d7b84_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a48de251_IsConstraint(_1259_prim))) {
								if (_1a47c67dc_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Type))) {
									goto _iter_next_1a8469701;
								};
								goto _iter_next_1a846a911;
							};
							if (_1a48d5c1a_Equal(_12416_c2, (*_12015_g.alloc)._field_Type)) {
								goto _iter_next_1a8469701;
							};
						}
						_iter_next_1a846a911:;
						++it;
						goto _iter_begin_1a846a911;
					}
					_iter_end_1a846a911:;
				};
				_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a47c6424_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1a8469701:;
			++it;
			_1208_i++;
			goto _iter_begin_1a8469701;
		}
		_iter_end_1a8469701:;
	};
	return true;;
}







inline jule::Bool _1a47c7821_IsTraitImpl(_1a47c7425_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a47c7aa7_IsStructImpl(_1a47c7425_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1a47cbe52_If_eq(_1a47cbe52_If *_self_, _1a47cbe52_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a47cc24e_Else_eq(_1a47cc24e_Else *_self_, _1a47cc24e_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1a47cc969_InfIter_eq(_1a47cc969_InfIter *_self_, _1a47cc969_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1a47cce20_WhileIter_eq(_1a47cce20_WhileIter *_self_, _1a47cce20_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1a47cd2b6_IsWhileNext(_1a47cce20_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a47cd86b_RangeIter_eq(_1a47cd86b_RangeIter *_self_, _1a47cd86b_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a47cdc01_ContSt_eq(_1a47cdc01_ContSt *_self_, _1a47cdc01_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1a47ce0ca_BreakSt_eq(_1a47ce0ca_BreakSt *_self_, _1a47ce0ca_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1a47ce581_Label_eq(_1a47ce581_Label *_self_, _1a47ce581_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a47cebe1_GotoSt_eq(_1a47cebe1_GotoSt *_self_, _1a47cebe1_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a47d00ba_Postfix_eq(_1a47d00ba_Postfix *_self_, _1a47d00ba_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a47d0571_Assign_eq(_1a47d0571_Assign *_self_, _1a47d0571_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1a47d2485_FallSt_eq(_1a47d2485_FallSt *_self_, _1a47d2485_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1a47d282b_RetSt_eq(_1a47d282b_RetSt *_self_, _1a47d282b_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a47d2cd2_scopeLabel_eq(_1a47d2cd2_scopeLabel *_self_, _1a47d2cd2_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1a47d3cc2_scopeChecker_eq(_1a47d3cc2_scopeChecker *_self_, _1a47d3cc2_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1a480c3d3_ImportInfo> _1a47d429a_SelectPackage(_1a47d3cc2_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _34829_selector) {
	return _1a48298a6_SelectPackage((*(_self_))._field_s.ptr(), _34829_selector);;
}



inline jule::Ptr<_1a4852e51_Var> _1a47d4696_FindVar(_1a47d3cc2_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded) {
	if ((!(_35935_binded))) {
		jule::Ptr<_1a4852e51_Var> _3618_v = _1a47d7a0c_findVar(_self_, _35923_ident);;
		if ((_3618_v != nullptr)) {
			return _3618_v;;
		};
	};
	return _1a4829ca2_FindVar((*(_self_))._field_s.ptr(), _35923_ident, _35935_binded);;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a47d4a92_FindTypeAlias(_1a47d3cc2_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded) {
	;
	jule::Ptr<_1a48d46db_TypeAlias> _3797_ta = _1a4728068_findTypeAlias((*(_self_))._field_table.ptr(), &(_37629_ident), _37641_binded, true);;
	if ((_3797_ta != nullptr)) {
		return _3797_ta;;
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _3847_parent = (*(_self_))._field_parent;;
	while ((_3847_parent != nullptr)) {
		{
			_3797_ta=_1a4728068_findTypeAlias((*(_3847_parent))._field_table, &(_37629_ident), _37641_binded, true);
			if ((_3797_ta != nullptr)) {
				return _3797_ta;;
			};
			_3847_parent=(*_3847_parent.alloc)._field_parent;
		}
	_iter_next_1a7ab5996:;
	}
	_iter_end_1a7ab5996:;;
	return _1a482a19d_FindTypeAlias((*(_self_))._field_s.ptr(), _37629_ident, _37641_binded);;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a47d4e8d_FindStruct(_1a47d3cc2_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded) {
	return _1a482a599_FindStruct((*(_self_))._field_s.ptr(), _40126_ident, _40138_binded);;
}



inline jule::Ptr<_1a471dc62_Fn> _1a47d5389_FindFn(_1a47d3cc2_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded) {
	return _1a482a995_FindFn((*(_self_))._field_s.ptr(), _41022_ident, _41034_binded);;
}



inline jule::Ptr<_1a4729476_Trait> _1a47d56ca_FindTrait(_1a47d3cc2_scopeChecker* _self_, jule::Str _41925_ident) {
	return _1a482acd6_FindTrait((*(_self_))._field_s.ptr(), _41925_ident);;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a47d5a1b_FindEnum(_1a47d3cc2_scopeChecker* _self_, jule::Str _42824_ident) {
	return _1a482b127_FindEnum((*(_self_))._field_s.ptr(), _42824_ident);;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a47d5d5c_FindTypeEnum(_1a47d3cc2_scopeChecker* _self_, jule::Str _43728_ident) {
	return _1a482b468_FindTypeEnum((*(_self_))._field_s.ptr(), _43728_ident);;
}



inline jule::Bool _1a47d61ae_isUnsafe(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _4457_scope = _self_;;
	_julec_label_1a7abac65:;
	if ((*((*(_4457_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4457_scope.alloc)._field_parent != nullptr)) {
		_4457_scope=(*_4457_scope.alloc)._field_parent;
		goto _julec_label_1a7abac65;
	};
	return false;;
}



inline jule::Bool _1a47d6445_isRoot(_1a47d3cc2_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a47d6643_stop(_1a47d3cc2_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a47d68c9_stopped(_1a47d3cc2_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a47d6b60_isDeferred(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _4787_scope = _self_;;
	_julec_label_1a7abd839:;
	if ((*((*(_4787_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_4787_scope.alloc)._field_parent != nullptr)) {
		_4787_scope=(*_4787_scope.alloc)._field_parent;
		goto _julec_label_1a7abd839;
	};
	return false;;
}



inline void _1a47d6e18_pushCaptured(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4852e51_Var>* _49934_v) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _5007_sc = _self_;;
	for (;;) {
		{
			if (((*(_5007_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5007_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7ac0e68:;
					if (it != expr_end) {
						jule::Ptr<_1a4852e51_Var> _50312_cv = *it;
						{
							if ((_50312_cv == (*(_49934_v)))) {
								goto _julec_label_1a7ac1dae;
							};
						}
						_iter_next_1a7ac0e68:;
						++it;
						goto _iter_begin_1a7ac0e68;
					}
					_iter_end_1a7ac0e68:;
				};
				(*(*(_5007_sc))._field_captured.alloc)=jule::append((*(*(_5007_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_49934_v)); __jule_collection; }));
				_julec_label_1a7ac1dae:;
			};
			if (((*_5007_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1a7ac020e;
			};
			_5007_sc=(*_5007_sc.alloc)._field_parent;
			if ((!(_1a48d2a80_isVarCaptured(_5007_sc, _5007_sc, (*(_49934_v)))))) {
				goto _iter_end_1a7ac020e;
			};
		}
	_iter_next_1a7ac020e:;
	}
	_iter_end_1a7ac020e:;;
}



inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47d719e_getRoot(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _5247_root = _self_;;
	while ((((*(_5247_root))._field_parent != nullptr) && ((*_5247_root.alloc)._field_owner == nullptr))) {
		{
			_5247_root=(*_5247_root.alloc)._field_parent;
		}
	_iter_next_1a7ac2e8c:;
	}
	_iter_end_1a7ac2e8c:;;
	return _5247_root;;
}



inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47d7435_getHardRoot(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _5347_root = _self_;;
	while (((*(_5347_root))._field_parent != nullptr)) {
		{
			_5347_root=(*_5347_root.alloc)._field_parent;
		}
	_iter_next_1a7ac4224:;
	}
	_iter_end_1a7ac4224:;;
	return _5347_root;;
}



inline jule::Ptr<_1a47ea3d2_ReferenceStack> _1a47d76bb_getOwnerRefers(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	return (*((*(_1a47d7435_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1a4852e51_Var> _1a47d7a0c_findVar(_1a47d3cc2_scopeChecker* _self_, jule::Str _54623_ident) {
	;
	;
	jule::Ptr<_1a4852e51_Var> _5497_v = _1a4727ab2_findVar((*(_self_))._field_table.ptr(), &(_54623_ident), false, true);;
	if ((_5497_v != nullptr)) {
		return _5497_v;;
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _5537_parent = (*(_self_))._field_parent;;
	while ((_5537_parent != nullptr)) {
		{
			_5497_v=_1a4727ab2_findVar((*(_5537_parent))._field_table, &(_54623_ident), false, true);
			if ((_5497_v != nullptr)) {
				return _5497_v;;
			};
			_5537_parent=(*_5537_parent.alloc)._field_parent;
		}
	_iter_next_1a7ac6ca4:;
	}
	_iter_end_1a7ac6ca4:;;
	return nullptr;;
}



inline jule::Ptr<_1a47ce581_Label> _1a47d7d4d_findLabel(_1a47d3cc2_scopeChecker* _self_, jule::Str* _56726_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ac8cd9:;
		if (it != expr_end) {
			jule::Any _56815_st = *it;
			{
				{
					auto &_match_expr{ _56815_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_1a7ac95d1:;
						{
							jule::Ptr<_1a47ce581_Label> _5719_label = _56815_st.unsafe_cast_ptr<_1a47ce581_Label>();;
							if (((*(_5719_label))._field_Ident == (*(_56726_ident)))) {
								return _5719_label;;
							};
						}
					}
					_match_end_1a7ac956a:;
				};
			}
			_iter_next_1a7ac8cd9:;
			++it;
			goto _iter_begin_1a7ac8cd9;
		}
		_iter_end_1a7ac8cd9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a47d2cd2_scopeLabel> _1a47d818e_findLabelScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Str* _58332_ident) {
	jule::Ptr<_1a47d2cd2_scopeLabel> _5847_label = _1a47d84d0_findLabelAll(_self_.ptr(), _58332_ident);;
	if (((_5847_label != nullptr) && ((*((*_5847_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5847_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a47d2cd2_scopeLabel> _1a47d84d0_findLabelAll(_1a47d3cc2_scopeChecker* _self_, jule::Str* _59429_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7acea15:;
		if (it != expr_end) {
			jule::Ptr<_1a47d2cd2_scopeLabel> _59515_lbl = *it;
			{
				if (((*((*(_59515_lbl))._field_node))._field_Ident == (*(_59429_ident)))) {
					return _59515_lbl;;
				};
			}
			_iter_next_1a7acea15:;
			++it;
			goto _iter_begin_1a7acea15;
		}
		_iter_end_1a7acea15:;
	};
	return nullptr;;
}



inline jule::Bool _1a47d88cb_isDuplicatedIdent(_1a47d3cc2_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident) {
	jule::Ptr<_1a4852e51_Var> _6073_v = _1a47d4696_FindVar(_self_, (*(_60651_ident)), false);;
	if (((_6073_v != nullptr) && (static_cast<jule::Uintptr>(_6073_v) != _60633_itself))) {
		if (((*_6073_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6073_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a482b875_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1a48d46db_TypeAlias> _6153_ta = _1a47d4a92_FindTypeAlias(_self_, (*(_60651_ident)), false);;
	if (((_6153_ta != nullptr) && (static_cast<jule::Uintptr>(_6153_ta) != _60633_itself))) {
		if (((*_6153_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6153_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a482b875_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1a47d8b84_checkVarDecl(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a46665b1_VarDecl> _62633_decl) {
	jule::Ptr<_1a4852e51_Var> _6277_v = _1a4800717_buildVar(_62633_decl);;
	(*(_6277_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6277_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6277_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1a47d88cb_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6277_v), &((*_6277_v.alloc)._field_Ident))) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*_6277_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6277_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a47d6643_stop(_self_);
		return;;
	};
	_1a4845592_checkVarDecl((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));
	if (((!(_1a48535e4_IsTypeInferred(_6277_v))) && (((*_6277_v.alloc)._field_TypeSym == nullptr) || ((*((*_6277_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1a4848d37_evalVarValue((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));
	if (((!(_1a485335d_IsInitialized(_6277_v))) || ((*((*_6277_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a47dedee_removeInteriorMutRisk(_self_, &((*(*(_6277_v))._field_Value.alloc)._field_Data));
	_1a48489c4_checkVarValue((*(_self_))._field_s, &(_6277_v));
}



inline void _1a47d8e3c_checkTypeAlias(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _65736_ta) {
	if (_1a47d88cb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_65736_ta))), &((*((*(_65736_ta))))._field_Ident))) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_65736_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_65736_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a47d6643_stop(_self_);
		return;;
	};
	_1a483e624_checkTypeAliasDecl((*(_self_))._field_s, _65736_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_65736_ta)); __jule_collection; }));
	if (((*((*((*(_65736_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1a47d6643_stop(_self_);
	};
}



inline void _1a47d91e5_checkTypeAliasDecl(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466a263_TypeAliasDecl> _67339_decl) {
	jule::Ptr<_1a48d46db_TypeAlias> _6747_ta = _1a47ec2e6_buildTypeAlias(_67339_decl);;
	_1a47d8e3c_checkTypeAlias(_self_, &(_6747_ta));
}



inline jule::Ptr<_1a47cba34_Scope> _1a47d947b_getChild(_1a47d3cc2_scopeChecker* _self_) {
	return jule::new_ptr<_1a47cba34_Scope>(_1a47cba34_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1a47d9899_checkChildSsc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _68435_tree, jule::Ptr<_1a47cba34_Scope>* _68463_s, jule::Ptr<_1a47d3cc2_scopeChecker>* _68479_ssc) {
	(*((*(_68463_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_68463_s))))._field_ChildIndex=(*((*(_68479_ssc))))._field_childIndex;
	(*((*(_68479_ssc))))._field_parent=_self_;
	_1a47e5e49_check((*(_68479_ssc)), _68435_tree, _68463_s);
}



inline jule::Ptr<_1a47cba34_Scope> _1a47d9c95_checkChildSc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _69134_tree, jule::Ptr<_1a47d3cc2_scopeChecker>* _69162_ssc) {
	jule::Ptr<_1a47cba34_Scope> _6927_s = _1a47d947b_getChild(_self_.ptr());;
	_1a47d9899_checkChildSsc(_self_, _69134_tree, &(_6927_s), _69162_ssc);
	return _6927_s;;
}



inline jule::Ptr<_1a47cba34_Scope> _1a47da0d6_checkChild(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _69732_tree) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _6987_ssc = _1a47e61d0_newChildChecker(_self_);;
	return _1a47d9c95_checkChildSc(_self_, _69732_tree, &(_6987_ssc));;
}



inline void _1a47da38e_checkAnonScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree> _70235_tree) {
	jule::Ptr<_1a47cba34_Scope> _7037_s = _1a47da0d6_checkChild(_self_, &(_70235_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7037_s, &__jule_any_type19); __jule_collection; }));
}



inline void _1a47da702_processErrorCall(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1a463d137_Token> _70769_err) {
	if (_1a47d6b60_isDeferred(_self_)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), _70769_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _7127_root = _1a47d719e_getRoot(_self_);;
	if ((!((*((*((*(_7127_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a482c2d2_pushErr((*(_self_))._field_s, _70769_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_70738_m))))._field_Func=(*_7127_root.alloc)._field_owner;
}



inline void _1a47da9aa_checkExpr(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a465799d_Expr> _72030_expr) {
	jule::Ptr<_1a48a447a_eval> _7217_eval = _1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
	(*(_7217_eval))._field_ignored=true;
	jule::Ptr<_1a48a2753_Data> _7237_d = _1a48c32e0_evalExpr(_7217_eval, _72030_expr);;
	if (((_7237_d == nullptr) || ((*(_7237_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7237_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a7b01262:;
			{
				jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _7328_m = (*(_7237_d))._field_Model.unsafe_cast_ptr<_1a4719a2c_BuiltinErrorCallExprModel>();;
				_1a47da702_processErrorCall(_self_, &(_7328_m), (*(_72030_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_1a7b0187d:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_1a7b01817:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s, (*(_72030_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7b017a1:;
	};
}



inline jule::Ptr<_1a47cbe52_If> _1a47daceb_checkIf(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4669196_If> _75028_i) {
	jule::Ptr<_1a47cba34_Scope> _7517_s = _1a47da0d6_checkChild(_self_, &((*(_75028_i))._field_Scope));;
	jule::Ptr<_1a48a2753_Data> _7537_d = _1a48c32e0_evalExpr(_1a4839014_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*_75028_i.alloc)._field_Expr);;
	if ((_7537_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _7587_prim = _1a48d7b84_Prim((*(_7537_d))._field_Type.ptr());;
	if (((_7587_prim == nullptr) || (!(_1a48e182a_IsBool(_7587_prim.ptr()))))) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*_75028_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a47cbe52_If>(_1a47cbe52_If{._field_Expr=(*(_7537_d))._field_Model, ._field_Scope=_7517_s});;
}



inline jule::Ptr<_1a47cc24e_Else> _1a47db13c_checkElse(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4669570_Else> _77030_e) {
	return jule::new_ptr<_1a47cc24e_Else>(_1a47cc24e_Else{._field_Scope=_1a47da0d6_checkChild(_self_, &((*(_77030_e))._field_Scope))});;
}



inline void _1a47db3e5_checkConditional(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4669a26_Conditional> _77637_conditional) {
	jule::Ptr<_1a47cc66c_Conditional> _7777_c = jule::new_ptr<_1a47cc66c_Conditional>(_1a47cc66c_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1a47cbe52_If>>(nullptr), ._field_Default=jule::Ptr<_1a47cc24e_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7777_c, &__jule_any_type31); __jule_collection; }));
	(*_7777_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47cbe52_If>>::alloc(0LL, ((*(_77637_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47cbe52_If>(nullptr); __jule_collection; });
	(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47cbe52_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a47daceb_checkIf(_self_, (*_77637_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_77637_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b2809c:;
		if (it != expr_end) {
			jule::Ptr<_1a4669196_If> _78315_elif = *it;
			{
				(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47cbe52_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a47daceb_checkIf(_self_, _78315_elif); __jule_collection; }));
			}
			_iter_next_1a7b2809c:;
			++it;
			goto _iter_begin_1a7b2809c;
		}
		_iter_end_1a7b2809c:;
	};
	if (((*_77637_conditional.alloc)._field_Default != nullptr)) {
		(*_7777_c.alloc)._field_Default=_1a47db13c_checkElse(_self_, (*_77637_conditional.alloc)._field_Default);
	};
}



inline void _1a47db8bd_checkIterScopeSsc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1a4663767_ScopeTree> _79251_tree, jule::Ptr<_1a47cba34_Scope>* _79279_s, jule::Ptr<_1a47d3cc2_scopeChecker> _79294_ssc) {
	(*(_79294_ssc))._field_it=_79234_it;
	_1a47d9899_checkChildSsc(_self_, &(_79251_tree), _79279_s, &(_79294_ssc));
}



inline jule::Ptr<_1a47cba34_Scope> _1a47dbd74_checkIterScopeSc(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1a4663767_ScopeTree> _79750_tree, jule::Ptr<_1a47d3cc2_scopeChecker> _79777_ssc) {
	jule::Ptr<_1a47cba34_Scope> _7987_scope = _1a47d947b_getChild(_self_.ptr());;
	_1a47db8bd_checkIterScopeSsc(_self_, _79733_it, _79750_tree, &(_7987_scope), _79777_ssc);
	return _7987_scope;;
}



inline jule::Ptr<_1a47cba34_Scope> _1a47dc270_checkIterScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1a4663767_ScopeTree>* _80349_tree) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _8047_ssc = _1a47e61d0_newChildChecker(_self_);;
	return _1a47dbd74_checkIterScopeSc(_self_, _80331_it, (*(_80349_tree)), _8047_ssc);;
}



inline void _1a47dc528_checkInfIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _80834_it) {
	jule::Ptr<_1a47cc969_InfIter> _8097_kind = jule::new_ptr<_1a47cc969_InfIter>(_1a47cc969_InfIter{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8097_kind, &__jule_any_type32); __jule_collection; }));
	(*_8097_kind.alloc)._field_Scope=_1a47dc270_checkIterScope(_self_, static_cast<jule::Uintptr>(_8097_kind), &((*((*(_80834_it))))._field_Scope));
}



inline void _1a47dc7d1_checkWhileIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _81436_it) {
	jule::Ptr<_1a4667a35_WhileKind> _8157_wh = (*((*(_81436_it))))._field_Kind.cast_ptr<_1a4667a35_WhileKind>(&__jule_any_type33);;
	if ((((*(_8157_wh))._field_Expr == nullptr) && ((*_8157_wh.alloc)._field_Next == nullptr))) {
		_1a47dc528_checkInfIter(_self_, _81436_it);
		return;;
	};
	jule::Ptr<_1a47cce20_WhileIter> _8217_kind = jule::new_ptr<_1a47cce20_WhileIter>(_1a47cce20_WhileIter{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8217_kind, &__jule_any_type34); __jule_collection; }));
	(*_8217_kind.alloc)._field_Scope=_1a47dc270_checkIterScope(_self_, static_cast<jule::Uintptr>(_8217_kind), &((*((*(_81436_it))))._field_Scope));
	if (((*_8157_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a48a2753_Data> _8268_d = _1a48c32e0_evalExpr(_1a4839014_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*_8157_wh.alloc)._field_Expr);;
		if ((_8268_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a48dd5e6_Prim> _8314_prim = _1a48d7b84_Prim((*(_8268_d))._field_Type.ptr());;
		if ((_8314_prim == nullptr)) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a48e182a_IsBool(_8314_prim.ptr())))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8217_kind.alloc)._field_Expr=(*(_8268_d))._field_Model;
	};
	if (_1a4667dcb_IsWhileNext(_8157_wh)) {
		if ((!(_1a47cb14e_isValidAstStForNextSt(&((*_8157_wh.alloc)._field_Next))))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _8514_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1a47e4a80_checkNode(_self_, &((*_8157_wh.alloc)._field_Next));
		if ((_8514_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8549_st = (*((*(_self_))._field_scope))._field_Stmts[_8514_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8514_n);;
			if ((!(_1a47cb391_isValidStForNextSt(&(_8549_st))))) {
				_1a482c2d2_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8217_kind.alloc)._field_Next=_8549_st;
		};
	};
}



inline void _1a47dcbee_checkComptimeRangeIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _86444_it, jule::Ptr<_1a47cd86b_RangeIter>* _86465_kind, jule::Ptr<_1a48a2753_Data>* _86488_d) {
	if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a482b875_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1a47d88cb_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a482b875_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1a47d88cb_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a466843c_RangeKind> _8787_rang = (*((*(_86444_it))))._field_Kind.cast_ptr<_1a466843c_RangeKind>(&__jule_any_type35);;
	_1a47e6752_makeComptimeRange(_86488_d);
	if ((*((*(_86488_d))))._field_Decl) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_8787_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_86488_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a489c044_rangeChecker _8857_rc = _1a489c044_rangeChecker{._field_sc=_self_, ._field_rang=_8787_rang, ._field_Kind=(*(_86465_kind)), ._field_d=(*(_86488_d))};;
	jule::Bool _8913_ok = _1a489e08a_check(&_8857_rc);;
	if ((!(_8913_ok))) {
		return;;
	};
	jule::Ptr<_1a479e144_comptimeRange> _8967_comptime = _1a48db02d_comptimeRange((*((*(_86488_d))))._field_Type);;
	((_1a479de24_comptimeRangeKindMptrData*)(*(_8967_comptime))._field_kind.safe_type())->_1a479d61b_ready((*(_8967_comptime))._field_kind.data, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
	jule::I32 _8987_i = 0LL;;
	jule::I32 _8993_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_8987_i < ((_1a479de24_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1a479dcc0_len((*_8967_comptime.alloc)._field_kind.data)); (_8987_i)++) {
		{
			jule::Ptr<_1a47d3cc2_scopeChecker> _9018_ssc = _1a47e61d0_newChildChecker(_self_);;
			jule::Ptr<_1a47cba34_Scope> _9028_scope = _1a47d947b_getChild(_self_);;
			if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Scope=_9028_scope;
				(*((*(_9018_ssc))._field_table))._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Scope=_9028_scope;
				(*(*(_9018_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1a479de24_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1a479da39_step((*_8967_comptime.alloc)._field_kind.data, _8987_i, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
			_1a47d9899_checkChildSsc(_self_, &((*((*(_86444_it))))._field_Scope), &(_9028_scope), &(_9018_ssc));
			if ((_8993_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1a7b50dd8;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9028_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_1a7b50dd8:;
	}
	_iter_end_1a7b50dd8:;;
}



inline void _1a47dcea7_checkRangeIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter>* _92136_it) {
	jule::Ptr<_1a466843c_RangeKind> _9227_rang = (*((*(_92136_it))))._field_Kind.cast_ptr<_1a466843c_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_1a48a2753_Data> _9247_d = _1a48c2e9e_evalExpr1(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*(_9227_rang))._field_Expr);;
	if ((_9247_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a47cd86b_RangeIter> _9297_kind = jule::new_ptr<_1a47cd86b_RangeIter>(_1a47cd86b_RangeIter{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Expr=_9247_d, ._field_KeyA=jule::Ptr<_1a4852e51_Var>(nullptr), ._field_KeyB=jule::Ptr<_1a4852e51_Var>(nullptr)});;
	if ((*((*(_92136_it))))._field_Comptime) {
		_1a47dcbee_checkComptimeRangeIter(_self_, _92136_it, &(_9297_kind), &(_9247_d));
		return;;
	};
	if (_1a48d9c41_comptime((*(_9247_d))._field_Type.ptr())) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*_9227_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1a489c044_rangeChecker _9437_rc = _1a489c044_rangeChecker{._field_sc=_self_, ._field_rang=_9227_rang, ._field_Kind=_9297_kind, ._field_d=_9247_d};;
	jule::Bool _9493_ok = _1a489e08a_check(&_9437_rc);;
	if ((!(_9493_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9297_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_1a47d3cc2_scopeChecker> _9567_ssc = _1a47e61d0_newChildChecker(_self_);;
	jule::Ptr<_1a47cba34_Scope> _9577_scope = _1a47d947b_getChild(_self_);;
	if (((*(_9297_kind))._field_KeyA != nullptr)) {
		if (((!(_1a482b875_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1a47d88cb_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyA.alloc)._field_Scope=_9577_scope;
		(*((*(_9567_ssc))._field_table))._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9297_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a482b875_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1a47d88cb_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyB.alloc)._field_Scope=_9577_scope;
		(*(*(_9567_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1a47db8bd_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9297_kind), (*((*(_92136_it))))._field_Scope, &(_9577_scope), _9567_ssc);
	(*_9297_kind.alloc)._field_Scope=_9577_scope;
}



inline void _1a47dd260_checkIter(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466720a_Iter> _98130_it) {
	if (_1a46675a1_IsInf(_98130_it.ptr())) {
		if ((*_98130_it.alloc)._field_Comptime) {
			_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1a47dc528_checkInfIter(_self_, &(_98130_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_98130_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a7b6c135:;
			{
				if ((*_98130_it.alloc)._field_Comptime) {
					_1a482c2d2_pushErr((*(_self_))._field_s, (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1a47dc7d1_checkWhileIter(_self_, &(_98130_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a7b6d301:;
			{
				_1a47dcea7_checkRangeIter(_self_, &(_98130_it));
			}
		}
		else {
			_case_begin_1a7b6d28a:;
			{
				jule::println(_1a68cc6b0_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1a7b6d224:;
	};
}



inline jule::Bool _1a47dd5a1_checkValidContLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _100536_it) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _10067_scope = _self_;;
	_julec_label_1a7b75825:;
	if (((*(_10067_scope))._field_it == _100536_it)) {
		return true;;
	};
	if (((*_10067_scope.alloc)._field_parent != nullptr)) {
		_10067_scope=(*_10067_scope.alloc)._field_parent;
		goto _julec_label_1a7b75825;
	};
	return false;;
}



inline jule::Bool _1a47dd8e2_checkValidBreakLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Uintptr _102137_ptr) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _10227_scope = _self_;;
	_julec_label_1a7b778e3:;
	if (((*(_10227_scope))._field_it == _102137_ptr)) {
		return true;;
	};
	if (((*_10227_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10304_mtch = static_cast<jule::Uintptr>((*(((_1a47d1c8c_Case*)((*_10227_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10304_mtch == _102137_ptr)) {
			return true;;
		};
	};
	if (((*_10227_scope.alloc)._field_parent != nullptr)) {
		_10227_scope=(*_10227_scope.alloc)._field_parent;
		goto _julec_label_1a7b778e3;
	};
	return false;;
}



inline jule::Ptr<_1a47cdc01_ContSt> _1a47ddc33_checkContValidScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668be0_ContSt> _104436_c) {
	if (_1a47d6b60_isDeferred(_self_)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_104436_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_104436_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a47cdc01_ContSt>(_1a47cdc01_ContSt{._field_It=0});;
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _10547_scope = _self_;;
	_julec_label_1a7b7a1a9:;
	{
		
		if (((((*_10547_scope.alloc)._field_it == 0LLU) && ((*_10547_scope.alloc)._field_parent != nullptr)) && ((*_10547_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a7b7bd59:;
			{
				_10547_scope=(*_10547_scope.alloc)._field_parent;
				goto _julec_label_1a7b7a1a9;
			}
		}
		else if (((*_10547_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a7b7bde2:;
			{
				return jule::new_ptr<_1a47cdc01_ContSt>(_1a47cdc01_ContSt{._field_It=(*_10547_scope.alloc)._field_it});;
			}
		}
		_match_end_1a7b7bc9e:;
	};
	_1a482c2d2_pushErr((*(_self_))._field_s, (*_104436_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a47ddedb_checkCont(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668be0_ContSt> _106826_c) {
	jule::Ptr<_1a47cdc01_ContSt> _10697_cont = _1a47ddc33_checkContValidScope(_self_, _106826_c);;
	if ((_10697_cont == nullptr)) {
		return;;
	};
	if (((*(_106826_c))._field_Label != nullptr)) {
		jule::Ptr<_1a47d2cd2_scopeLabel> _10758_label = _1a47c9bca_findLabelParent(&((*(*(_106826_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10758_label == nullptr)) {
			_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10758_label))._field_used=true;
		if ((((*((*(_10758_label))._field_node))._field_Index + 1LL) >= (*((*(*(_10758_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I32 _10884_i = ((*(*(_10758_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_10884_i >= (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _10929_st = (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts[_10884_i];;
			{
				auto &_match_expr{ _10929_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_1a84d2b32:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1a47cc969_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1a84d179b:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1a47cd86b_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_1a84d1988:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1a47cce20_WhileIter>());
					}
				}
				else {
					_case_begin_1a84d1922:;
					{
						_1a482c2d2_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1a84d18ab:;
			};
		};
	};
	if (((*(_10697_cont))._field_It != 0LLU)) {
		if ((!(_1a47dd5a1_checkValidContLabel(_self_, (*(_10697_cont))._field_It)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10697_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _1a47de294_checkLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4660c4d_LabelSt> _111531_l) {
	if ((_1a47d7d4d_findLabel(_self_.ptr(), &((*(_111531_l))._field_Ident)) != nullptr)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*_111531_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_111531_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a47ce581_Label> _11217_label = jule::new_ptr<_1a47ce581_Label>(_1a47ce581_Label{._field_Ident=(*_111531_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11217_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47d2cd2_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a47d2cd2_scopeLabel>(_1a47d2cd2_scopeLabel{._field_token=(*_111531_l.alloc)._field_Token, ._field_node=_11217_label, ._field_used=false}); __jule_collection; }));
}



inline void _1a47de54c_pushGoto(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4661127_GotoSt> _113429_gt) {
	jule::Ptr<_1a47cebe1_GotoSt> _11357_st = jule::new_ptr<_1a47cebe1_GotoSt>(_1a47cebe1_GotoSt{._field_Ident=(*((*_113429_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_113429_gt))._field_Label, ._field_Label=jule::Ptr<_1a47ce581_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11357_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11357_st; __jule_collection; }));
}



inline void _1a47de805_checkPostfix(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt> _114533_a) {
	if (((*(_114533_a))._field_Left.len() > 1LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a465799d_Expr> _11517_expr = (*((*(_114533_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a48a2753_Data> _11527_d = _1a48c32e0_evalExpr(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), _11517_expr);;
	if ((_11527_d == nullptr)) {
		return;;
	};
	_1a47cac75_checkAssign(&((*_self_.alloc)._field_s), &(_11527_d), nullptr, (*_114533_a.alloc)._field_Setter);
	if ((_1a48d81a1_Ptr((*(_11527_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a48e58d9_Ptr> _11608_ptr = _1a48d81a1_Ptr((*(_11527_d))._field_Type);;
		if (_1a48e6456_IsUnsafe(_11608_ptr.ptr())) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_11527_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1a48d7b84_Prim((*(_11527_d))._field_Type.ptr()) == nullptr) || (!(_1a479cbc0_IsNum((*(_1a48d7b84_Prim((*(_11527_d))._field_Type)))._field_Kind))))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_11527_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a47d00ba_Postfix>(_1a47d00ba_Postfix{._field_Expr=(*(_11527_d))._field_Model, ._field_Op=(*((*_114533_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _1a47deb46_isNewAssignIdent(_1a47d3cc2_scopeChecker* _self_, jule::Str _117832_ident) {
	if ((_1a4640a1e_IsIgnoreIdent(_117832_ident) || (_117832_ident).empty())) {
		return false;;
	};
	return (_1a4728464_defByIdent((*(_self_))._field_table.ptr(), &(_117832_ident), false) == nullptr);;
}



inline void _1a47dedee_removeInteriorMutRisk(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a48a2753_Data>* _119143_d) {
	jule::Ptr<_1a4676d30_StructIns> _11923_s = _1a48d9207_Struct((*((*(_119143_d))))._field_Type.ptr());;
	if ((_11923_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _11963_root = _1a47d7435_getHardRoot(_self_);;
	if (((*((*(_11963_root))._field_owner))._field_Owner != _11923_s)) {
		return;;
	};
	(*((*(_119143_d))))._field_Mutable=true;
}



inline jule::Bool _1a47e03a5_checkStructureAssignOp(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4676d30_StructIns>* _120544_s, jule::Ptr<_1a4662117_AssignSt>* _120564_a, jule::Ptr<_1a48a2753_Data>* _120588_r) {
	jule::Ptr<_1a4721d20_FnIns> _120811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_120564_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1a8503988:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1a8503636:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a850369c:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1a8503713:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a8503779:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1a85037e0:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a8503856:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1a850510a:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1a8505171:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1a85051d7:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a8502e1b:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a46771d7_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1a85035ae:;
	};
	if ((_120811_overload == nullptr)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a46771d7_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1a4720bba_ParamIns> _12407_p = (*(_120811_overload))._field_Params[1LL];;
	return _1a4839630_checkAssignType((*(_self_))._field_s, (*((*(_12407_p))._field_Decl))._field_Reference, &((*_12407_p.alloc)._field_Type), _120588_r, (*((*(_120564_a))))._field_Setter, _1a47d76bb_getOwnerRefers(_self_));;
}



inline void _1a47e065d_checkSingleAssign(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt>* _124439_a) {
	jule::Ptr<_1a48a2753_Data> _124511_l = nullptr;;
	if ((!(_1a4640a1e_IsIgnoreIdent((*((*((*(_124439_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a465799d_Expr> _12488_expr = (*((*((*(_124439_a))))._field_Left[0LL]))._field_Expr;;
		_124511_l=_1a48c32e0_evalExpr(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), _12488_expr);
		if ((_124511_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a48a447a_eval> _12557_eval = static_cast<jule::Ptr<_1a48a447a_eval>>(nullptr);;
	if ((_124511_l != nullptr)) {
		_12557_eval=_1a4838bc3_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1), (*(_124511_l))._field_Type);
	} else {
		_12557_eval=_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));
	};
	(*(_12557_eval))._field_unsafety=_1a47d61ae_isUnsafe(_self_);
	jule::Ptr<_1a48a2753_Data> _12627_r = _1a48c32e0_evalExpr(_12557_eval, (*((*(_124439_a))))._field_Right);;
	if ((_12627_r == nullptr)) {
		return;;
	};
	_1a47dedee_removeInteriorMutRisk(_self_, &(_12627_r));
	if ((_124511_l == nullptr)) {
		if (_1a48d6897_Void((*(_12627_r))._field_Type.ptr())) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*((*(_124439_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_124439_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12627_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_1a47cac75_checkAssign(&((*_self_.alloc)._field_s), &(_124511_l), _12627_r, (*((*(_124439_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a48d99aa_Tup((*(_12627_r))._field_Type) != nullptr)) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4711491_OperandExprModel> _12897_lm = jule::new_ptr<_1a4711491_OperandExprModel>(_1a4711491_OperandExprModel{._field_Type=(*(_124511_l))._field_Type, ._field_Model=(*(_124511_l))._field_Model});;
	jule::Ptr<_1a4711491_OperandExprModel> _12937_rm = jule::new_ptr<_1a4711491_OperandExprModel>(_1a4711491_OperandExprModel{._field_Type=(*(_12627_r))._field_Type, ._field_Model=(*(_12627_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a47d0571_Assign>(_1a47d0571_Assign{._field_Left=_12897_lm, ._field_Right=_12937_rm, ._field_Op=(*((*(_124439_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U32>(71LLU))) {
		_1a4890ae8_assignTypeChecker _13008_checker = _1a4890ae8_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_124511_l))._field_Type, ._field_d=_12627_r, ._field_errorToken=(*((*(_124439_a))))._field_Setter, ._field_refers=_1a47d76bb_getOwnerRefers(_self_)};;
		if (_1a4891ae9_check(&_13008_checker)) {
			(*(_12937_rm))._field_Model=(*(_12627_r))._field_Model;
			(*(_12897_lm))._field_Model=(*(_124511_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a4676d30_StructIns> _13137_strct = _1a48d9207_Struct((*(_124511_l))._field_Type);;
	if ((_13137_strct != nullptr)) {
		_1a47e03a5_checkStructureAssignOp(_self_, &(_13137_strct), _124439_a, &(_12627_r));
		return;;
	};
	jule::U32 _13183_id = (*(*((*(_124439_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_1a47e6521_removeEqFromOp((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id);
	_1a48c5710_binaryEval _13207_solver = static__1a48c616c_new(_12557_eval, (*((*(_124439_a))))._field_Setter);;
	({
		jule::Ptr<_1a48a2753_Data> ___jule_assign_arg = _124511_l;
		jule::Ptr<_1a48a2753_Data> _1___jule_assign_arg = _12627_r;
		_13207_solver._field_l = ___jule_assign_arg;
		_13207_solver._field_r = _1___jule_assign_arg;
	});
	_1a48ca34c_evalOp(&_13207_solver);
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_13183_id;
}



inline void _1a47e0c9b_processEndPartOfMultiAssign(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _132649_st, jule::Ptr<_1a4662117_AssignSt>* _132672_a, jule::Ptr<_1a4661a84_AssignLeft>* _13278_lexpr, jule::Ptr<_1a48a2753_Data>* _132738_l, jule::Ptr<_1a48a2753_Data>* _132753_r, jule::Bool _132763_strict) {
	if (((!((*((*(_13278_lexpr))))._field_Reference)) && _1a4640a1e_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident))) {
		if (_1a48d6897_Void((*((*(_132753_r))))._field_Type.ptr())) {
			_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_132672_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a48a2753_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_132672_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13278_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1a8525834:;
				{
					if ((!(_1a47deb46_isNewAssignIdent(_self_, (*((*(_13278_lexpr))))._field_Ident)))) {
						goto _julec_label_1a8531334;
					};
				}
			}
			else {
				_case_begin_1a85257bd:;
				{
					if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
						_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1a8531334;
				}
			}
			_match_end_1a8525757:;
		};
		if (_1a47d88cb_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13278_lexpr))))._field_Ident))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1a47d6643_stop(_self_);
			return;;
		};
		if (_1a4640a1e_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident)) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a4852e51_Var> _13598_v = jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13278_lexpr))))._field_Token, ._field_Ident=(*((*(_13278_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13278_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13278_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_1a48dcbde_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=(*((*(_132672_a))))._field_Right, ._field_Data=(*(_132753_r))}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
		_1a48489c4_checkVarValue((*(_self_))._field_s, &(_13598_v));
		{ jule::Slice<jule::Ptr<_1a48a2753_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=(*((*_13598_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_13598_v.alloc)._field_Mutable, ._field_Reference=(*_13598_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13598_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13598_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = (*((*(_132649_st))))._field_Decls; __jule_push_dest.push(_13598_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13598_v; __jule_collection; }));
		return;;
	};
	_julec_label_1a8531334:;
	if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1a47cac75_checkAssign(&((*_self_.alloc)._field_s), _132738_l, (*(_132753_r)), (*((*(_13278_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _13947_reference = false;;
	if (_1a483ddb5_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_132738_l))))._field_Mutable, _13947_reference, &((*((*(_132738_l))))._field_Type), _132753_r, &((*((*(_13278_lexpr))))._field_Token))) {
		_13947_reference=_132763_strict;
		_1a4839630_checkAssignType((*(_self_))._field_s, _13947_reference, &((*((*(_132738_l))))._field_Type), _132753_r, (*((*(_13278_lexpr))))._field_Token, _1a47d76bb_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1a48a2753_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push((*(_132738_l))); };
}



inline void _1a47e1054_checkMultiAssign(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt>* _140238_a) {
	if ((((*((*((*(_140238_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU)) && ((*(*((*(_140238_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a48a2753_Data> _14077_rd = _1a48c32e0_evalExpr(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*((*(_140238_a))))._field_Right);;
	if ((_14077_rd == nullptr)) {
		return;;
	};
	jule::Bool _14117_strict = false;;
	jule::Slice<jule::Ptr<_1a48a2753_Data>> _14127_right = _1a47ca01b_getDatasFromTupleData(&(_14077_rd));;
	if ((_14127_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14127_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1a853b73a:;
				{
					jule::Ptr<_1a47142eb_IndexingExprModel> _14169_iem = (*(_14127_right[0LL]))._field_Model.unsafe_cast_ptr<_1a47142eb_IndexingExprModel>();;
					if ((_1a48d9724_Map((*((*(_14169_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_14117_strict=true;
						_14127_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=(*(_1a48d9724_Map((*((*(_14169_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_14127_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)}); (*it++) = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1a853b680:;
		};
	};
	{
		
		if (((*((*(_140238_a))))._field_Left.len() > _14127_right.len())) {
			_case_begin_1a853ee36:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_140238_a))))._field_Left.len() < _14127_right.len())) {
			_case_begin_1a853ee9c:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a853b7d4:;
	};
	jule::Ptr<_1a47d0a27_MultiAssign> _14367_st = jule::new_ptr<_1a47d0a27_MultiAssign>(_1a47d0a27_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a48a2753_Data>>(nullptr), ._field_Right=(*(_14077_rd))._field_Model});;
	{
		auto expr = &((*((*(_140238_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8544d09:;
		if (it != expr_end) {
			jule::I32 _14397_i = it - expr->begin();
			{
				jule::Ptr<_1a4661a84_AssignLeft> _14408_lexpr = (*((*(_140238_a))))._field_Left[_14397_i];;
				jule::Ptr<_1a48a2753_Data> _144112_l = nullptr;;
				if ((!(_1a4640a1e_IsIgnoreIdent((*(_14408_lexpr))._field_Ident)))) {
					if ((!((*((*(_140238_a))))._field_Declarative))) {
						goto _julec_label_1a854659c;
					};
					if (((*_14408_lexpr.alloc)._field_Mutable && (*_14408_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1a85493a2;
					};
					{
						auto &_match_expr{ (*((*(_14408_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_1a85477ac:;
							{
								if (_1a47deb46_isNewAssignIdent(_self_, (*_14408_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1a85493a2;
								};
							}
						}
						_match_end_1a8547735:;
					};
					_julec_label_1a854659c:;
					_144112_l=_1a48c32e0_evalExpr(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*_14408_lexpr.alloc)._field_Expr);
					if ((_144112_l == nullptr)) {
						goto _iter_next_1a8544d09;
					};
					_julec_label_1a85493a2:;
				};
				jule::Ptr<_1a48a2753_Data> _14628_r = _14127_right[_14397_i];;
				_1a47dedee_removeInteriorMutRisk(_self_, &(_14628_r));
				_1a47e0c9b_processEndPartOfMultiAssign(_self_, &(_14367_st), _140238_a, &(_14408_lexpr), &(_144112_l), &(_14628_r), _14117_strict);
			}
			_iter_next_1a8544d09:;
			++it;
			_14397_i++;
			goto _iter_begin_1a8544d09;
		}
		_iter_end_1a8544d09:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14367_st, &__jule_any_type43); __jule_collection; }));
}



inline void _1a47e130c_checkAssignSt(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4662117_AssignSt> _146934_a) {
	{
		
		if (_1a4642e83_IsPostfixOp((*((*(_146934_a))._field_Setter))._field_Id)) {
			_case_begin_1a854b250:;
			{
				_1a47de805_checkPostfix(_self_, _146934_a);
			}
		}
		else if (((*(_146934_a))._field_Left.len() == 1LL)) {
			_case_begin_1a854aded:;
			{
				_1a47e065d_checkSingleAssign(_self_, &(_146934_a));
			}
		}
		else {
			_case_begin_1a854ad87:;
			{
				_1a47e1054_checkMultiAssign(_self_, &(_146934_a));
			}
		}
		_match_end_1a854ac99:;
	};
}



inline jule::Ptr<_1a47cba34_Scope> _1a47e1708_checkCaseScope(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1c8c_Case>* _148032_c, jule::Ptr<_1a4663767_ScopeTree>* _148047_tree) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _14817_ssc = _1a47e61d0_newChildChecker(_self_);;
	(*(_14817_ssc))._field_cse=static_cast<jule::Uintptr>((*(_148032_c)));
	return _1a47d9c95_checkChildSc(_self_, _148047_tree, &(_14817_ssc));;
}



inline jule::Ptr<_1a47d1c8c_Case> _1a47e1c69_checkCase(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1264_Match> _148630_m, jule::I32 _148641_i, jule::Ptr<_1a466a719_Case> _148653_c, jule::Ptr<_1a48a2753_Data> _148672_expr) {
	jule::Ptr<_1a47d1c8c_Case> _14877_case = (*(_148630_m))._field_Cases[_148641_i];;
	(*(_14877_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(0LL, (*(_148653_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48a2753_Data>(nullptr); __jule_collection; });
	jule::Bool _14897_constMatched = false;;
	jule::Ptr<_1a48a447a_eval> _14907_eval = _1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
	{
		auto expr = &((*_148653_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85519e7:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _149115_e = *it;
			{
				jule::Ptr<_1a48a2753_Data> _14928_d = _1a48c24cb_evalExprKind(_14907_eval, (*(_149115_e))._field_Kind);;
				if ((_14928_d == nullptr)) {
					goto _iter_next_1a85519e7;
				};
				if ((*_148630_m.alloc)._field_TypeMatch) {
					(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
					if ((_1a47e7159_countMatchType(&(_148630_m), &((*(_14928_d))._field_Type)) > 1LL)) {
						_1a482c2d2_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_14928_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_148630_m.alloc)._field_Comptime) {
						_14897_constMatched=(_14897_constMatched || _1a48d5c1a_Equal((*(_148672_expr))._field_Type, (*(_14928_d))._field_Type));
					} else {
						if ((_1a48d86bd_TypeEnum((*(_148672_expr))._field_Type) != nullptr)) {
							_1a483a08c_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Type), &((*(_14928_d))._field_Type), &((*_149115_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a4729476_Trait> _15117_trt = _1a48d948d_Trait((*(_148672_expr))._field_Type);;
							if ((_15117_trt != nullptr)) {
								_1a483a08c_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Type), &((*(_14928_d))._field_Type), &((*_149115_e.alloc)._field_Token));
							};
						};
					};
					_1a48cdd23_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14928_d))._field_Type), &((*((*_148630_m.alloc)._field_Expr))._field_Type), &((*_149115_e.alloc)._field_Token), _1a47d76bb_getOwnerRefers(_self_));
					goto _iter_next_1a85519e7;
				};
				if ((*(_14928_d))._field_Decl) {
					_1a482c2d2_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1a85519e7;
				};
				if ((*_148630_m.alloc)._field_Comptime) {
					if (((!(_1a48a318d_IsConst(_14928_d.ptr()))) && (_1a48db54a_comptimeTypeInfo((*(_14928_d))._field_Type) == nullptr))) {
						_1a482c2d2_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1a85519e7;
					};
					if ((!(_14897_constMatched))) {
						if (_1a48a318d_IsConst(_14928_d.ptr())) {
							_14897_constMatched=(_1a48a318d_IsConst(_148672_expr.ptr()) && _1a470ab72_Eq((*(_14928_d))._field_Constant.ptr(), (*((*(_148672_expr))._field_Constant))));
						} else {
							jule::Ptr<_1a47ae044_comptimeTypeInfo> _15377_exprCti = _1a48db54a_comptimeTypeInfo((*(_148672_expr))._field_Type);;
							_14897_constMatched=((_15377_exprCti != nullptr) && _1a48d5c1a_Equal((*(_1a48db54a_comptimeTypeInfo((*(_14928_d))._field_Type)))._field_base, (*_15377_exprCti.alloc)._field_base));
						};
					};
				};
				(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
				if ((((!((*_148630_m.alloc)._field_Comptime)) || (_1a48db54a_comptimeTypeInfo((*(_148672_expr))._field_Type) == nullptr)) || (_1a48db54a_comptimeTypeInfo((*(_14928_d))._field_Type) == nullptr))) {
					_1a4890ae8_assignTypeChecker _15479_checker = _1a4890ae8_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_148672_expr))._field_Type, ._field_d=_14928_d, ._field_errorToken=(*_149115_e.alloc)._field_Token, ._field_refers=_1a47d76bb_getOwnerRefers(_self_)};;
					_1a4891ae9_check(&_15479_checker);
				};
			}
			_iter_next_1a85519e7:;
			++it;
			goto _iter_begin_1a85519e7;
		}
		_iter_end_1a85519e7:;
	};
	if (((!((*_148630_m.alloc)._field_Comptime)) || _14897_constMatched)) {
		(*_14877_case.alloc)._field_Scope=_1a47e1708_checkCaseScope(_self_, &(_14877_case), &((*_148653_c.alloc)._field_Scope));
	};
	return _14877_case;;
}



inline void _1a47e2187_checkCases(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase>* _156332_m, jule::Ptr<_1a47d1264_Match> _156356_rm, jule::Ptr<_1a48a2753_Data> _156372_expr) {
	(*(_156356_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47d1c8c_Case>>::alloc(0LL, (*((*(_156332_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47d1c8c_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8565951:;
		if (it != expr_end) {
			jule::I32 _15657_i = it - expr->begin();
			{
				jule::Ptr<_1a47d1c8c_Case> _15668_case = jule::new_ptr<_1a47d1c8c_Case>(_1a47d1c8c_Case{._field_Owner=_156356_rm, ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a48a2753_Data>>(nullptr), ._field_Next=jule::Ptr<_1a47d1c8c_Case>(nullptr)});;
				if ((_15657_i > 0LL)) {
					(*((*_156356_rm.alloc)._field_Cases[(_15657_i - 1LL)]))._field_Next=_15668_case;
				};
				(*_156356_rm.alloc)._field_Cases=jule::append((*_156356_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47d1c8c_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15668_case; __jule_collection; }));
			}
			_iter_next_1a8565951:;
			++it;
			_15657_i++;
			goto _iter_begin_1a8565951;
		}
		_iter_end_1a8565951:;
	};
	if ((((*_156356_rm.alloc)._field_Default != nullptr) && ((*((*(_156332_m))))._field_Cases.len() > 0LL))) {
		(*((*_156356_rm.alloc)._field_Cases[((*_156356_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_156356_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8568e93:;
		if (it != expr_end) {
			jule::I32 _15798_i = it - expr->begin();
			jule::Ptr<_1a466a719_Case> _157915_c = *it;
			{
				_1a47e1c69_checkCase(_self_, _156356_rm, _15798_i, _157915_c, _156372_expr);
			}
			_iter_next_1a8568e93:;
			++it;
			_15798_i++;
			goto _iter_begin_1a8568e93;
		}
		_iter_end_1a8568e93:;
	};
}



inline jule::Ptr<_1a47d1c8c_Case> _1a47e2583_checkDefault(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1264_Match> _158433_m, jule::Ptr<_1a4669570_Else> _158448_d) {
	jule::Ptr<_1a47d1c8c_Case> _15857_def = jule::new_ptr<_1a47d1c8c_Case>(_1a47d1c8c_Case{._field_Owner=_158433_m, ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a48a2753_Data>>(nullptr), ._field_Next=jule::Ptr<_1a47d1c8c_Case>(nullptr)});;
	(*(_15857_def))._field_Scope=_1a47e1708_checkCaseScope(_self_, &(_15857_def), &((*(_158448_d))._field_Scope));
	return _15857_def;;
}



inline void _1a47e28e6_checkComptimePanic(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a463d137_Token> _159239_callToken, jule::Ptr<_1a47cba34_Scope>* _159266_s) {
	if (((*((*(_159266_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15963_stmt = (*((*(_159266_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15963_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a856c68e:;
			{
				jule::Ptr<_1a48a2753_Data> _15994_d = _15963_stmt.unsafe_cast_ptr<_1a48a2753_Data>();;
				{
					auto &_match_expr{ (*(_15994_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1a856d66d:;
						{
							jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> _16029_m = (*(_15994_d))._field_Model.unsafe_cast_ptr<_1a4717e26_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16029_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1a856e839:;
									{
										jule::Ptr<_1a4276798_Const> _16056_c = (*(_16029_m))._field_Expr.unsafe_cast_ptr<_1a4276798_Const>();;
										if ((!(_1a4709841_IsStr(_16056_c.ptr())))) {
											goto _match_end_1a856e7b2;
										};
										if ((_159239_callToken == nullptr)) {
											jule::Ptr<_1a47d3cc2_scopeChecker> _161011_root = _1a47d7435_getHardRoot(_self_);;
											if (((*(_161011_root))._field_calledFrom == nullptr)) {
												_159239_callToken=(*(_16029_m))._field_Token;
											} else {
												_159239_callToken=(*(_161011_root))._field_calledFrom;
											};
										};
										_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), _159239_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a4707245_ReadStr(_16056_c), &__jule_any_type5); __jule_collection; }));
										_1a47d6643_stop(_self_);
									}
								}
								_match_end_1a856e7b2:;
							};
						}
					}
					_match_end_1a856d607:;
				};
			}
		}
		_match_end_1a856bbcc:;
	};
}



inline void _1a47e2c59_processConstMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a47d1264_Match>* _162439_tm, jule::Ptr<_1a466b033_MatchCase>* _162456_m) {
	{
		auto expr = &((*((*(_162439_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856ecac:;
		if (it != expr_end) {
			jule::I32 _16258_i = it - expr->begin();
			jule::Ptr<_1a47d1c8c_Case> _162515_c = *it;
			{
				if (((*(_162515_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a463d137_Token> _162713_token = nullptr;;
					if (((!((*((*(_162439_tm))))._field_TypeMatch)) && ((*(*(_162515_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_162713_token=(*((*((*((*(_162456_m))))._field_Cases[_16258_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a47e28e6_checkComptimePanic(_self_, _162713_token, &((*_162515_c.alloc)._field_Scope));
					(*((*(_162439_tm))))._field_Default=_162515_c;
					(*((*(_162439_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a856ecac:;
			++it;
			_16258_i++;
			goto _iter_begin_1a856ecac;
		}
		_iter_end_1a856ecac:;
	};
	if (((*((*(_162456_m))))._field_Default != nullptr)) {
		(*((*(_162439_tm))))._field_Cases=nullptr;
		(*((*(_162439_tm))))._field_Default=_1a47e2583_checkDefault(_self_, (*(_162439_tm)), (*((*(_162456_m))))._field_Default);
		if (((*((*(_162439_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a463d137_Token> _164113_token = nullptr;;
			if ((!((*((*(_162439_tm))))._field_TypeMatch))) {
				_164113_token=(*((*((*((*(_162456_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a47e28e6_checkComptimePanic(_self_, _164113_token, &((*(*((*(_162439_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_162439_tm))))._field_Cases=nullptr;
	};
}



inline void _1a47e3012_checkTypeMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase>* _165336_m) {
	jule::Ptr<_1a48a2753_Data> _16547_d = _1a48c281c_eval1(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*((*(_165336_m))))._field_Expr);;
	if ((_16547_d == nullptr)) {
		return;;
	};
	if ((*((*(_165336_m))))._field_Comptime) {
		jule::Ptr<_1a47ae044_comptimeTypeInfo> _16608_cti = _1a48db54a_comptimeTypeInfo((*(_16547_d))._field_Type.ptr());;
		if ((_16608_cti == nullptr)) {
			if ((!((*(_16547_d))._field_Decl))) {
				_1a482c2d2_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16547_d))._field_Type=(*(_16608_cti))._field_base;
		};
	} else if (((*(_16547_d))._field_Decl || (!(((((_1a48d7b84_Prim((*(_16547_d))._field_Type.ptr()) != nullptr) && _1a48e1d47_IsAny(_1a48d7b84_Prim((*(_16547_d))._field_Type).ptr())) || (_1a48d948d_Trait((*(_16547_d))._field_Type) != nullptr)) || (_1a48d86bd_TypeEnum((*(_16547_d))._field_Type) != nullptr)))))) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a47d1264_Match> _16747_tm = jule::new_ptr<_1a47d1264_Match>(_1a47d1264_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16547_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_165336_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a47d1c8c_Case>>(nullptr), ._field_Default=jule::Ptr<_1a47d1c8c_Case>(nullptr)});;
	if (((!((*(_16747_tm))._field_Comptime)) && ((*((*(_165336_m))))._field_Default != nullptr))) {
		(*_16747_tm.alloc)._field_Default=_1a47e2583_checkDefault(_self_, _16747_tm, (*((*(_165336_m))))._field_Default);
	};
	_1a47e2187_checkCases(_self_, _165336_m, _16747_tm, _16547_d);
	if ((*_16747_tm.alloc)._field_Comptime) {
		_1a47e2c59_processConstMatch(_self_, &(_16747_tm), _165336_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16747_tm, &__jule_any_type44); __jule_collection; }));
}



inline void _1a47e32ba_checkCommonMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase>* _169638_m) {
	jule::Ptr<_1a48a2753_Data> _169711_d = nullptr;;
	if (((*((*(_169638_m))))._field_Expr == nullptr)) {
		_169711_d=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a4705a90_NewBool(true)});
		(*(_169711_d))._field_Model=jule::Any((*_169711_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_169711_d=_1a48c2e9e_evalExpr1(_1a4839014_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*((*(_169638_m))))._field_Expr);
		if ((_169711_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_169638_m))))._field_Comptime) {
		if ((!(_1a47e6a1b_canComptimeMatch(&(_169711_d))))) {
			_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a48d9c41_comptime((*(_169711_d))._field_Type.ptr())) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a47d1264_Match> _17237_mc = jule::new_ptr<_1a47d1264_Match>(_1a47d1264_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_169711_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_169638_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a47d1c8c_Case>>(nullptr), ._field_Default=jule::Ptr<_1a47d1c8c_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17237_mc, &__jule_any_type44); __jule_collection; }));
	if (((!((*(_17237_mc))._field_Comptime)) && ((*((*(_169638_m))))._field_Default != nullptr))) {
		(*_17237_mc.alloc)._field_Default=_1a47e2583_checkDefault(_self_, _17237_mc, (*((*(_169638_m))))._field_Default);
	};
	_1a47e2187_checkCases(_self_, _169638_m, _17237_mc, _169711_d);
	if ((*_17237_mc.alloc)._field_Comptime) {
		_1a47e2c59_processConstMatch(_self_, &(_17237_mc), _169638_m);
	};
}



inline void _1a47e3573_checkMatch(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466b033_MatchCase> _174731_m) {
	if ((*(_174731_m))._field_TypeMatch) {
		_1a47e3012_checkTypeMatch(_self_, &(_174731_m));
		return;;
	};
	_1a47e32ba_checkCommonMatch(_self_, &(_174731_m));
}



inline void _1a47e382b_checkFall(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4661424_FallSt> _175526_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1a47d6b60_isDeferred(_self_))) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_175526_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1a47d1c8c_Case* _17637_case = ((_1a47d1c8c_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17637_case))._field_Owner))._field_Comptime) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17637_case))._field_Next == nullptr)) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a47d2485_FallSt>(_1a47d2485_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17637_case))._field_Next)}), &__jule_any_type45); __jule_collection; }));
}



inline jule::Ptr<_1a47ce0ca_BreakSt> _1a47e3b6c_checkBreakWithLabel(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668816_BreakSt> _177836_b) {
	jule::Ptr<_1a47ce0ca_BreakSt> _17797_brk = _1a47e3ead_checkPlainBreak(_self_, _177836_b);;
	if ((_17797_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17797_brk))._field_It=0LLU;
	(*(_17797_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a47d2cd2_scopeLabel> _17897_label = _1a47c9bca_findLabelParent(&((*((*(_177836_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17897_label == nullptr)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17897_label))._field_used=true;
	if ((((*((*(_17897_label))._field_node))._field_Index + 1LL) >= (*((*(*(_17897_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _18023_i = ((*(*(_17897_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18023_i >= (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18068_st = (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts[_18023_i];;
		{
			auto &_match_expr{ _18068_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_1a7dc0234:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1a47cc969_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1a7dbdd9d:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1a47cd86b_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_1a7dbe08a:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1a47cce20_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1a7dbe101:;
				{
					(*(_17797_brk))._field_Mtch=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1a47d1264_Match>());
				}
			}
			else {
				_case_begin_1a7dbe024:;
				{
					_1a482c2d2_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1a7dbdead:;
		};
	};
	if (((*(_17797_brk))._field_It != 0LLU)) {
		if ((!(_1a47dd8e2_checkValidBreakLabel(_self_, (*(_17797_brk))._field_It)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*(_17797_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a47dd8e2_checkValidBreakLabel(_self_, (*(_17797_brk))._field_Mtch)))) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17797_brk;;
}



inline jule::Ptr<_1a47ce0ca_BreakSt> _1a47e3ead_checkPlainBreak(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668816_BreakSt> _183632_b) {
	if (_1a47d6b60_isDeferred(_self_)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183632_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _18427_scope = _self_;;
	_julec_label_1a7dc66ad:;
	{
		
		if ((((((*_18427_scope.alloc)._field_it == 0LLU) && ((*_18427_scope.alloc)._field_cse == 0LLU)) && ((*_18427_scope.alloc)._field_parent != nullptr)) && ((*_18427_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a7dc7b76:;
			{
				_18427_scope=(*_18427_scope.alloc)._field_parent;
				goto _julec_label_1a7dc66ad;
			}
		}
		else if (((*_18427_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a7dc7c0e:;
			{
				return jule::new_ptr<_1a47ce0ca_BreakSt>(_1a47ce0ca_BreakSt{._field_It=(*_18427_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18427_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1a7dc7c75:;
			{
				return jule::new_ptr<_1a47ce0ca_BreakSt>(_1a47ce0ca_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1a47d1c8c_Case*)((*_18427_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1a7dc7a77:;
	};
	_1a482c2d2_pushErr((*(_self_))._field_s, (*_183632_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a47e4266_checkBreak(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4668816_BreakSt> _185827_b) {
	if (((*(_185827_b))._field_Label != nullptr)) {
		jule::Ptr<_1a47ce0ca_BreakSt> _18608_brk = _1a47e3b6c_checkBreakWithLabel(_self_, _185827_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18608_brk, &__jule_any_type46); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a47ce0ca_BreakSt> _18657_brk = _1a47e3ead_checkPlainBreak(_self_, _185827_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18657_brk, &__jule_any_type46); __jule_collection; }));
}



inline void _1a47e451e_checkRet(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a466698a_RetSt> _186929_r) {
	if (_1a47d6b60_isDeferred(_self_)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186929_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a47d282b_RetSt> _18747_rt = jule::new_ptr<_1a47d282b_RetSt>(_1a47d282b_RetSt{._field_Func=(*(_1a47d719e_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18747_rt, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1a489e7a5_retTypeChecker> _18797_rtc = jule::new_ptr<_1a489e7a5_retTypeChecker>(_1a489e7a5_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18747_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1a465799d_Expr>>(nullptr), ._field_errorToken=(*_186929_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _18843_ok = _1a48a0795_check(_18797_rtc.ptr(), &((*_186929_r.alloc)._field_Expr));;
	if ((!(_18843_ok))) {
		return;;
	};
	if (((*_186929_r.alloc)._field_Expr != nullptr)) {
		(*_18747_rt.alloc)._field_Expr=(*_18797_rtc.alloc)._field_model;
	};
}



inline void _1a47e47c7_checkUseExpr(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4658372_UseExpr> _189429_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189429_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a47d6b60_isDeferred(_self_)) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1a47e4a80_checkNode(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Any* _191031_node) {
	{
		auto &_match_expr{ (*(_191031_node)) };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a7ddd3c8:;
			{
				_1a47da38e_checkAnonScope(_self_, (*(_191031_node)).cast_ptr<_1a4663767_ScopeTree>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a7ddd73b:;
			{
				_1a47d8b84_checkVarDecl(_self_, (*(_191031_node)).cast_ptr<_1a46665b1_VarDecl>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a7ddd7a2:;
			{
				_1a47d91e5_checkTypeAliasDecl(_self_, (*(_191031_node)).cast_ptr<_1a466a263_TypeAliasDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a7ddd818:;
			{
				_1a47da9aa_checkExpr(_self_, (*(_191031_node)).cast_ptr<_1a465799d_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a7dddb6a:;
			{
				_1a47db3e5_checkConditional(_self_, (*(_191031_node)).cast_ptr<_1a4669a26_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a7dddbd1:;
			{
				_1a47dd260_checkIter(_self_, (*(_191031_node)).cast_ptr<_1a466720a_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a7dddc47:;
			{
				_1a47ddedb_checkCont(_self_, (*(_191031_node)).cast_ptr<_1a4668be0_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a7dddcad:;
			{
				_1a47de294_checkLabel(_self_, (*(_191031_node)).cast_ptr<_1a4660c4d_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a7dddd24:;
			{
				_1a47de54c_pushGoto(_self_, (*(_191031_node)).cast_ptr<_1a4661127_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a7dddd8a:;
			{
				_1a47e130c_checkAssignSt(_self_, (*(_191031_node)).cast_ptr<_1a4662117_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a7ddde01:;
			{
				_1a47e3573_checkMatch(_self_, (*(_191031_node)).cast_ptr<_1a466b033_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a7ddde67:;
			{
				_1a47e382b_checkFall(_self_, (*(_191031_node)).cast_ptr<_1a4661424_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a7dddede:;
			{
				_1a47e4266_checkBreak(_self_, (*(_191031_node)).cast_ptr<_1a4668816_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a7dde066:;
			{
				_1a47e451e_checkRet(_self_, (*(_191031_node)).cast_ptr<_1a466698a_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a7dde0dd:;
			{
				_1a47e47c7_checkUseExpr(_self_, (*(_191031_node)).cast_ptr<_1a4658372_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1a7ddd5a4:;
			{
				jule::println(_1a68cc6b0_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1a7ddd53d:;
	};
}



inline void _1a47e4c7d_checkResult(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	_1a4663107_Stmt _19487_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19487_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a7e1ac0d:;
			{
				jule::Ptr<_1a4658372_UseExpr> _19518_ue = _19487_stmt._field_Data.unsafe_cast_ptr<_1a4658372_UseExpr>();;
				jule::Ptr<_1a48a2753_Data> _19528_d = _1a48c32e0_evalExpr(_1a4839014_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), (*(_19518_ue))._field_Expr);;
				if ((_19528_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19528_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_1a489e7a5_retTypeChecker> _19578_rtc = jule::new_ptr<_1a489e7a5_retTypeChecker>(_1a489e7a5_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_types=_1a4723052_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1a465799d_Expr>>(nullptr), ._field_errorToken=(*((*_19518_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1a48a0795_check(_19578_rtc.ptr(), &((*_19518_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a7e1cb33:;
			{
				jule::Ptr<_1a465799d_Expr> _19648_expr = _19487_stmt._field_Data.unsafe_cast_ptr<_1a465799d_Expr>();;
				jule::Ptr<_1a48a2753_Data> _19658_d = _1a48c32e0_evalExpr(_1a4839014_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)), _19648_expr);;
				if ((_19658_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19658_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1a7e237d7:;
						{
							jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _19719_m = (*(_19658_d))._field_Model.unsafe_cast_ptr<_1a4719a2c_BuiltinErrorCallExprModel>();;
							_1a47da702_processErrorCall(_self_, &(_19719_m), (*(_19648_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19658_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_1a7e239b3:;
						{
							return;;
						}
					}
					_match_end_1a7e2394c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1a7e1c292:;
			{
				_1a47e4a80_checkNode(_self_, &(_19487_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a7e1c22b:;
			{
				_1a47e4a80_checkNode(_self_, &(_19487_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a7e1c1b5:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a47e4e7b_checkTree(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _19937_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19937_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19937_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a4663107_Stmt _20018_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a47e4a80_checkNode(_self_, &(_20018_stmt._field_Data));
			if (_1a47d68c9_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1a7e27654:;
	}
	_iter_end_1a7e27654:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a47e4c7d_checkResult(_self_);
	};
}



inline void _1a47e52de_checkGoto(_1a47d3cc2_scopeChecker* _self_, jule::Ptr<_1a47cebe1_GotoSt>* _201230_gt, jule::Ptr<_1a47d2cd2_scopeLabel>* _201248_label) {
	jule::I32 _20137_n = 0LL;;
	if (((*((*(_201230_gt))))._field_Scope == (*((*((*(_201248_label))))._field_node))._field_Scope)) {
		if (((*((*(_201230_gt))))._field_Index > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*((*(_201230_gt))))._field_Index;
	} else if (((*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_201248_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1a47cba34_Scope> _20268_gtsc = (*((*(_201230_gt))))._field_Scope;;
		while ((((*_20268_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_201248_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20268_gtsc=(*_20268_gtsc.alloc)._field_Parent;
			}
		_iter_next_1a7e2caaa:;
		}
		_iter_end_1a7e2caaa:;;
		if (((*_20268_gtsc.alloc)._field_StmtIndex > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*_20268_gtsc.alloc)._field_StmtIndex;
	} else {
		_20137_n=0LL;
	};
	jule::Ptr<_1a47cba34_Scope> _20487_s = (*((*((*(_201248_label))))._field_node))._field_Scope;;
	jule::I32 _20497_i = ((*(*((*(_201248_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20497_i >= _20137_n); (_20497_i)--) {
				{
					jule::Any _20529_stmt = (*(_20487_s))._field_Stmts[_20497_i];;
					if (_1a47e6cd5_stmtIsDef(&(_20529_stmt))) {
						_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_201230_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_201230_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1a7e315b4:;
			}
			_iter_end_1a7e315b4:;;
			if (((*_20487_s.alloc)._field_ChildIndex > (*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex)) {
				_20487_s=(*_20487_s.alloc)._field_Parent;
				_20497_i=((*_20487_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1a7e31240;
			};
			goto _iter_end_1a7e31240;
		}
	_iter_next_1a7e31240:;
	}
	_iter_end_1a7e31240:;;
}



inline void _1a47e54dc_checkGotos(_1a47d3cc2_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e34276:;
		if (it != expr_end) {
			jule::Ptr<_1a47cebe1_GotoSt> _207015_gt = *it;
			{
				jule::Ptr<_1a47d2cd2_scopeLabel> _20718_label = _1a47d84d0_findLabelAll(_self_, &((*(_207015_gt))._field_Ident));;
				if ((_20718_label == nullptr)) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_207015_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_207015_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1a7e34276;
				};
				(*_207015_gt.alloc)._field_Label=(*(_20718_label))._field_node;
				(*(_20718_label))._field_used=true;
				_1a47e52de_checkGoto(_self_, &(_207015_gt), &(_20718_label));
			}
			_iter_next_1a7e34276:;
			++it;
			goto _iter_begin_1a7e34276;
		}
		_iter_end_1a7e34276:;
	};
}



inline void _1a47e56da_checkLabels(_1a47d3cc2_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e36d5b:;
		if (it != expr_end) {
			jule::Ptr<_1a47d2cd2_scopeLabel> _208310_l = *it;
			{
				if ((!((*(_208310_l))._field_used))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_208310_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_208310_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a7e36d5b:;
			++it;
			goto _iter_begin_1a7e36d5b;
		}
		_iter_end_1a7e36d5b:;
	};
}



inline void _1a47e58d8_checkVars(_1a47d3cc2_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e38b0a:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _209110_v = *it;
			{
				if (((((!((*(_209110_v))._field_Used)) && (!((*_209110_v.alloc)._field_Constant))) && (!(_1a4640a1e_IsIgnoreIdent((*_209110_v.alloc)._field_Ident)))) && (!(_1a4640cd8_IsAnonIdent((*_209110_v.alloc)._field_Ident))))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_209110_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209110_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a7e38b0a:;
			++it;
			goto _iter_begin_1a7e38b0a;
		}
		_iter_end_1a7e38b0a:;
	};
}



inline void _1a47e5ad6_checkAliases(_1a47d3cc2_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3b415:;
		if (it != expr_end) {
			jule::Ptr<_1a48d46db_TypeAlias> _209910_a = *it;
			{
				if ((((!((*(_209910_a))._field_Used)) && (!(_1a4640a1e_IsIgnoreIdent((*_209910_a.alloc)._field_Ident)))) && (!(_1a4640cd8_IsAnonIdent((*_209910_a.alloc)._field_Ident))))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_209910_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209910_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a7e3b415:;
			++it;
			goto _iter_begin_1a7e3b415;
		}
		_iter_end_1a7e3b415:;
	};
}



inline void _1a47e5e49_check(jule::Ptr<_1a47d3cc2_scopeChecker> _self_, jule::Ptr<_1a4663767_ScopeTree>* _210727_tree, jule::Ptr<_1a47cba34_Scope>* _210755_s) {
	(*((*(_210755_s))))._field_Deferred=(*((*(_210727_tree))))._field_Deferred;
	(*((*(_210755_s))))._field_Unsafety=(*((*(_210727_tree))))._field_Unsafety;
	jule::I32 _21113_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_210727_tree));
	(*_self_.alloc)._field_scope=(*(_210755_s));
	_1a47e4e7b_checkTree(_self_);
	if ((_21113_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1a47e58d8_checkVars(_self_);
		_1a47e5ad6_checkAliases(_self_);
		if (_1a47d6445_isRoot(_self_)) {
			_1a47e54dc_checkGotos(_self_);
			_1a47e56da_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47e61d0_newChildChecker(jule::Ptr<_1a47d3cc2_scopeChecker> _self_) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _21317_base = _1a47c948d_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21317_base))._field_parent=_self_;
	(*_21317_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21317_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21317_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21317_base;;
}








inline jule::Bool _1a47e7b4e_directiveChecker_eq(_1a47e7b4e_directiveChecker *_self_, _1a47e7b4e_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1a47e80a0_checkCdef(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a7e45683:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a471dc62_Fn>()))._field_Binded) {
					goto _match_end_1a7e444d9;
				};
				goto _case_begin_1a7e44550;
			}
		}
		else {
			_case_begin_1a7e44550:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a7e444d9:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a47e8358_checkTypedef(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a8636db8:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Binded) {
					goto _match_end_1a8635c1e;
				};
				goto _case_begin_1a8635c85;
			}
		}
		else {
			_case_begin_1a8635c85:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a8635c1e:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a47e8611_checkNamespace(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a863a0db:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Binded))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a8638c11:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a471dc62_Fn>()))._field_Binded))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a863901e:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Binded))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1a8638ea8:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a8638e42:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a463d137_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a482c2d2_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a86457ab:;
			{
				if ((_1a48cbc55_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1a4652a86_Directive> _919_typedef = jule::new_ptr<_1a4652a86_Directive>(_1a4652a86_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4652a86_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1a8645745:;
	};
}



inline void _1a47e88b9_checkDeprecated(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a8648eda:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Binded) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a8647b87:;
			{
				jule::Ptr<_1a471dc62_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a471dc62_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1a471e735_IsEntryPoint(_1078_f)) || _1a471e9bb_IsInit(_1078_f))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a8647e1d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Binded) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1a8647da7:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a8647d41:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a463d137_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a482c2d2_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a482c2d2_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a47e8b72_checkTest(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a8655cd8:;
			{
				jule::Ptr<_1a471dc62_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a471dc62_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1a471e9bb_IsInit(_1444_f)))) && (!(_1a471e735_IsEntryPoint(_1444_f))))) {
					goto _match_end_1a8654b3e;
				};
				if (_1a471e49e_IsMethod(_1444_f)) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1a8654b3e;
				};
				goto _case_begin_1a8654ba5;
			}
		}
		else {
			_case_begin_1a8654ba5:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a8654b3e:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a47e8e2a_checkExport(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a865aa35:;
			{
				jule::Ptr<_1a471dc62_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a471dc62_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1a471e9bb_IsInit(_1654_f)) || _1a471e735_IsEntryPoint(_1654_f)) || _1a471e49e_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a865965a:;
			{
				jule::Ptr<_1a4852e51_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1a4852e51_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1a8659902:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1a865988b:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a463d137_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a482c2d2_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a482c2d2_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a47e91d3_checkDirective(_1a47e7b4e_directiveChecker* _self_, jule::Ptr<_1a4652a86_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1a8667c73:;
			{
				_1a47e80a0_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1a8666b1d:;
			{
				_1a47e8358_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1a8666b84:;
			{
				_1a47e8611_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1a8666bea:;
			{
				_1a47e88b9_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1a8666c61:;
			{
				_1a47e8b72_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1a8666cc7:;
			{
				_1a47e8e2a_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1a8666d3d:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1a8662124:;
			{
				_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a8666a41:;
	};
}



inline void _1a47e93d1_check(_1a47e7b4e_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a866aa34:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _22315_d = *it;
			{
				_1a47e91d3_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1a866aa34:;
			++it;
			goto _iter_begin_1a866aa34;
		}
		_iter_end_1a866aa34:;
	};
}







inline jule::Ptr<_1a47ea3d2_ReferenceStack> static__1a47ea6bd_new(void) {
	return jule::new_ptr<_1a47ea3d2_ReferenceStack>(_1a47ea3d2_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _1a47eaab9_Len(_1a47ea3d2_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a47eae0a_At(_1a47ea3d2_ReferenceStack* _self_, jule::I32 _4218_i) {
	return (*(_self_))._field_buffer[_4218_i];;
}



inline void _1a47eb1b3_Push(_1a47ea3d2_ReferenceStack* _self_, jule::Any _4724_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4724_ref); };
}



inline jule::Bool _1a7986d40_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4721d20_FnIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79881a4:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type63) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1a79881a4:;
			++it;
			goto _iter_begin_1a79881a4;
		}
		_iter_end_1a79881a4:;
	};
	return false;;
}

inline jule::Bool _1a799d61a_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4852e51_Var> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a799e93a:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type7) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1a799e93a:;
			++it;
			goto _iter_begin_1a799e93a;
		}
		_iter_end_1a799e93a:;
	};
	return false;;
}

inline jule::Bool _1a8a32060_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4676d30_StructIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a33418:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type64) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1a8a33418:;
			++it;
			goto _iter_begin_1a8a33418;
		}
		_iter_end_1a8a33418:;
	};
	return false;;
}

inline jule::Bool _1a9135c18_Exist(_1a47ea3d2_ReferenceStack* _self_, jule::Ptr<_1a4729476_Trait> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9137027:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type11) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1a9137027:;
			++it;
			goto _iter_begin_1a9137027;
		}
		_iter_end_1a9137027:;
	};
	return false;;
}








inline jule::Bool _1a47eb8ab_Pass_eq(_1a47eb8ab_Pass *_self_, _1a47eb8ab_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1a4801d67_pushErr(_1a4801361_symBuilder* _self_, jule::Ptr<_1a463d137_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args) {
	{ jule::Slice<_1e71b7487_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a48272bb_compilerErr(_30624_token, true, _30646_fmt, _30666_args)); };
}



inline void _1a48025e8_pushSuggestion(_1a4801361_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args) {
	{
		_1a48283dd_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31530_fmt, _31550_args);
	};
}



inline jule::Bool _1a48029e4_checkCppUseDeclPath(_1a4801361_symBuilder* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _31936_decl, jule::Str* _31958_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3203_ext = _1ce79076a_Ext((*(_31958_path)));;
	if (((!(_1cc836192_IsValidHeaderExt(_3203_ext))) && (!(_1cc83645b_IsValidCppExt(_3203_ext))))) {
		_1a4801d67_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3203_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1cd62092b_Stat _3273_info = ({
		auto except = static__1ce7978d7_Of((*(_31958_path)));
		(except.ok()) ? (except.result) : ({{
			_1a4801d67_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_31936_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1cd620d38_IsDir(&_3273_info)) {
		_1a4801d67_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_31936_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4802d02_buildCppHeaderImport(_1a4801361_symBuilder* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _33941_decl) {
	jule::Str _3407_path = (*((*((*(_33941_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1cc835db7_IsStdHeaderPath(_3407_path)))) {
		_3407_path=_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a46444a1_Dir((*((*((*(_33941_decl))))._field_Token))._field_File.ptr()); (*it++) = _3407_path; __jule_collection; }));
		jule::Bool _3448_ok = _1a48029e4_checkCppUseDeclPath(_self_, _33941_decl, &(_3407_path));;
		if ((!(_3448_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ce790a34_Abs(_3407_path);
			_3407_path = __jule_assign_result.__jule_result_arg0;
			_3448_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3448_ok))) {
			_1a4801d67_pushErr(_self_, &((*((*(_33941_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1a480c3d3_ImportInfo>(_1a480c3d3_ImportInfo{._field_Decl=(*(_33941_decl)), ._field_Path=_3407_path, ._field_LinkPath=(*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1a48031ed_checkAbsPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1a466b5b6_UseDecl>* _36953_decl) {
	jule::Str _3703_modPath = ((_1a48093d0_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a4808445_GetModPath((*(_self_))._field_importer.data);;
	if ((_3703_modPath.len() == 0LL)) {
		_1a4801d67_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1a48025e8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_36933_filepath=_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3703_modPath; (*it++) = _36933_filepath; __jule_collection; }));
	jule::Bool _37813_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ce790a34_Abs(_36933_filepath);
		_36933_filepath = __jule_assign_result.__jule_result_arg0;
		_37813_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37813_ok))) {
		_1a4801d67_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_36953_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1cd62092b_Stat _3853_info = ({
		auto except = static__1ce7978d7_Of(_36933_filepath);
		(except.ok()) ? (except.result) : ({{
			_1a4801d67_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1cd620d38_IsDir(&_3853_info)))) {
		_1a4801d67_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _36933_filepath;;
}



inline jule::Str _1a48035e9_checkStdAbsPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1a466b5b6_UseDecl>* _39856_decl) {
	(_39836_filepath).mut_slice(4LL);;
	_39836_filepath=_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ce79807a_PathStdlib; (*it++) = _39836_filepath; __jule_collection; }));
	jule::Bool _40113_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ce790a34_Abs(_39836_filepath);
		_39836_filepath = __jule_assign_result.__jule_result_arg0;
		_40113_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40113_ok))) {
		_1a4801d67_pushErr(_self_.ptr(), &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39856_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1cd62092b_Stat _4083_info = ({
		auto except = static__1ce7978d7_Of(_39836_filepath);
		(except.ok()) ? (except.result) : ({{
			_1a4801d67_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1cd620d38_IsDir(&_4083_info)))) {
		_1a4801d67_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39836_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1a480393a_checkImpPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _42134_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4223_path = (*((*((*(_42134_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1ce784550_HasSuffix(_4223_path, jule::Str::lit("/", 1))) {
		_1a4801d67_pushErr(_self_.ptr(), &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4273_parts = _1ce788697_SplitAll(_4223_path, jule::Str::lit("/", 1));;
	if ((_4273_parts.len() == 0LL)) {
		_1a4801d67_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4273_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4273_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86a7bd6:;
		if (it != expr_end) {
			jule::Str *_43310_part = it;
			{
				if ((((*(_43310_part))).empty() || _1a4640a1e_IsIgnoreIdent((*(_43310_part))))) {
					_1a4801d67_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43310_part)); __jule_collection; }));
			}
			_iter_next_1a86a7bd6:;
			++it;
			goto _iter_begin_1a86a7bd6;
		}
		_iter_end_1a86a7bd6:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1a48035e9_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1a48031ed_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	};
	return __jule_func_result;;
}



inline void _1a4803be3_assignAlias(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _45133_imp) {
	jule::I32 _4527_i = _1ce7855ea_FindLast((*((*(_45133_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4527_i)++;
	jule::Str _4543_path = (*((*(_45133_imp))))._field_LinkPath.slice(_4527_i);;
	(*((*(_45133_imp))))._field_Alias=_4543_path;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4804034_buildImport(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _45833_decl) {
	if ((*((*(_45833_decl))))._field_Binded) {
		return _1a4802d02_buildCppHeaderImport(_self_.ptr(), _45833_decl);;
	};
	jule::Bool _4623_std;
	jule::Str _4628_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1a480393a_checkImpPath(_self_, _45833_decl);
		_4623_std = __jule_assign_result.__jule_result_arg0;
		_4628_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4628_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1a480c3d3_ImportInfo> _4677_imp = jule::new_ptr<_1a480c3d3_ImportInfo>(_1a480c3d3_ImportInfo{._field_Decl=(*(_45833_decl)), ._field_Path=_4628_filepath, ._field_LinkPath=(*((*((*(_45833_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45833_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4623_std, ._field_Package=jule::new_ptr<_1a480eb55_Package>(_1a480eb55_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45833_decl))))._field_Alias != nullptr)) {
		(*(_4677_imp))._field_Alias=(*(*((*(_45833_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1a48075ba_isImplicitImport(_4677_imp)))) {
		_1a4803be3_assignAlias(_self_, &(_4677_imp));
	};
	return _4677_imp;;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4804375_findUseDecl(_1a4801361_symBuilder* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _48528_pkg) {
	return _1a4725582_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>>((void*)__jule_anon_1a86b32c9, jule::Ptr<__jule_anon_1a86b32c9_ctx>::make(__jule_anon_1a86b32c9_ctx{._48528_pkg=_48528_pkg}).as<jule::Uintptr>(), __jule_anon_1a86b32c9_ctx_handler));;
}



inline jule::Bool _1a48046b6_checkDuplicateUseDecl(_1a4801361_symBuilder* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _49342_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a480c3d3_ImportInfo> _4947_lpkg = _1a4804375_findUseDecl(_self_, _49342_pkg);;
	if ((_4947_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a4801d67_pushErr(_self_, &((*((*((*(_49342_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49342_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1a48025e8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1a4804a07_getAsLinkPath(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Str _50334_path) {
	_1e71a80b0_Builder _5047_sb = static__1e71a892e_New(_50334_path.len());;
	if (_1ce7841cb_HasPrefix(_50334_path, _1ce79807a_PathStdlib)) {
		(_50334_path).mut_slice(_1ce79807a_PathStdlib.len());;
		({
			auto except = _1e71a90b1_WriteStr(&_5047_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:507:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&_5047_sb, _1ce78a325_ReplaceAll(_50334_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:508:4"));
			(except.result);
		});
		({
			auto except = _1e71a9369_WriteByte(&_5047_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
		});
		return _1e71a9941_Str(&_5047_sb);;
	};
	jule::Str _5133_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ce790a34_Abs(((_1a48093d0_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a4808445_GetModPath((*(_self_))._field_importer.data));
		_5133_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50334_path).mut_slice(_5133_root.len());;
	if ((_50334_path[0LL] == 92LLU)) {
		(_50334_path).mut_slice(1LL);;
	};
	({
		auto except = _1e71a9369_WriteByte(&_5047_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:518:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&_5047_sb, _1ce78a325_ReplaceAll(_50334_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:519:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&_5047_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
	});
	return _1e71a9941_Str(&_5047_sb);;
}



inline void _1a4804e25_pushCycleError(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a4801361_symBuilder>* _52432_sb, jule::Str _52449_path, _1e71a80b0_Builder* _52465_message) {
	;
	jule::Str _5263_refersTo = _1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a4804a07_getAsLinkPath(_self_, _1a46444a1_Dir((*((*((*(_52432_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1a4804a07_getAsLinkPath(_self_, _52449_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5303_m = _1e71a9941_Str(_52465_message);;
	({
		auto except = _1e71a90b1_WriteStr(_52465_message, _1ce783d13_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:531:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_52465_message, _5263_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:532:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_52465_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_52465_message, _5303_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
		(except.result);
	});
}



inline void _1a4805343_pushCrossCycleError(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a4801361_symBuilder>* _53737_target, jule::Ptr<_1a480c3d3_ImportInfo>* _53759_imp, jule::Ptr<_1a463d137_Token>* _53778_errorToken) {
	_1e71a80b0_Builder _5387_message = static__1e71a892e_New(32LL);;
	_1a4804e25_pushCycleError(_self_, &(_self_), (*((*(_53759_imp))))._field_Path, &(_5387_message));
	jule::Ptr<_1a4801361_symBuilder> _5427_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a4801361_symBuilder> _5437_old = _self_;;
	while (((*(_5427_owner))._field_owner != nullptr)) {
		{
			_1a4804e25_pushCycleError(_self_, &((*_5437_old.alloc)._field_owner), _1a46444a1_Dir((*((*_5437_old.alloc)._field_table))._field_File.ptr()), &(_5387_message));
			if (((*_5427_owner.alloc)._field_owner == (*(_53737_target)))) {
				_1a4804e25_pushCycleError(_self_, _53737_target, _1a46444a1_Dir((*((*(_5427_owner))._field_table))._field_File), &(_5387_message));
				goto _iter_end_1a86be417;
			};
			_5437_old=_5427_owner;
			_5427_owner=(*_5427_owner.alloc)._field_owner;
		}
	_iter_next_1a86be417:;
	}
	_iter_end_1a86be417:;;
	_1a4801d67_pushErr(_self_, _53778_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e71a9941_Str(&_5387_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a480573e_checkImportCycles(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a480c3d3_ImportInfo> _56034_imp, jule::Ptr<_1a466b5b6_UseDecl>* _56053_decl) {
	if (((*(_56034_imp))._field_Path == _1a46444a1_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a4801d67_pushErr(_self_, &((*((*(_56053_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a4804a07_getAsLinkPath(_self_, (*_56034_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a4801361_symBuilder> _5707_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1a86c38a0:;
	if ((_1a46444a1_Dir((*((*(_5707_owner))._field_table))._field_File) == (*_56034_imp.alloc)._field_Path)) {
		_1a4805343_pushCrossCycleError(_self_, &(_5707_owner), &(_56034_imp), &((*((*(_56053_decl))))._field_Token));
		return false;;
	};
	if (((*(_5707_owner))._field_owner != nullptr)) {
		_5707_owner=(*_5707_owner.alloc)._field_owner;
		goto _julec_label_1a86c38a0;
	};
	return true;;
}



inline void _1a4805b5c_checkPackageAccessibility(_1a4801361_symBuilder* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path) {
	if ((((_1a48093d0_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a4808445_GetModPath((*(_self_))._field_importer.data) == (*(_59164_mod)))) {
		return;;
	};
	;
	jule::I32 _5963_i = _1ce784d47_Find((*(_59175_path)), jule::Str::lit("internal", 8));;
	if ((_5963_i == -1LL)) {
		return;;
	};
	if ((_5963_i == 0LL)) {
		if (((((*(_59175_path)).len() - 8LL) == 0LL) || _1ce7841cb_HasPrefix((*(_59175_path)), jule::Str::lit("internal/", 9)))) {
			_1a4801d67_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59175_path)).slice((_5963_i - 1LL)).equal("/internal", 9)) {
		_1a4801d67_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _6143_n = ((_5963_i + 8LL) + 1LL);;
	if (((_6143_n < (*(_59175_path)).len()) && (*(_59175_path)).slice((_5963_i - 1LL), _6143_n).equal("/internal/", 10))) {
		_1a4801d67_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1a4806058_importPackage(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _62135_imp, jule::Ptr<_1a466b5b6_UseDecl>* _62158_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62135_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a480c3d3_ImportInfo> _6267_port = ((_1a48093d0_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a4808ac7_GetImport((*(_self_))._field_importer.data, (*((*(_62135_imp))))._field_Path);;
	if ((_6267_port != nullptr)) {
		(*((*(_62135_imp))))._field_Package=(*_6267_port.alloc)._field_Package;
		(*((*(_62135_imp))))._field_Duplicate=true;
		jule::Str _6314_oldMod = ((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808445_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808258_SetModPath((*_self_.alloc)._field_importer.data, ((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808786_ModById((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_ModId));
		_1a4805b5c_checkPackageAccessibility(_self_, _62158_decl, &(_6314_oldMod), &((*_6267_port.alloc)._field_Path));
		((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808258_SetModPath((*_self_.alloc)._field_importer.data, _6314_oldMod);
	} else {
		if ((!(_1a480573e_checkImportCycles(_self_, (*(_62135_imp)), _62158_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6404_oldMod = ((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808445_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808258_SetModPath((*_self_.alloc)._field_importer.data, _6404_oldMod);
		});;
		if ((*((*(_62135_imp))))._field_Std) {
			((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808258_SetModPath((*_self_.alloc)._field_importer.data, _1ce79807a_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a46517aa_AST>> _6458_asts;
		jule::Slice<_1e71b7487_Log> _64518_errors;
		({
			__jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log __jule_assign_result = ((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a4808ec3_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_Path, (!((*((*(_62135_imp))))._field_Std)));
			_6458_asts = __jule_assign_result.__jule_result_arg0;
			_64518_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64518_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a4805b5c_checkPackageAccessibility(_self_, _62158_decl, &(_6404_oldMod), &((*((*(_62135_imp))))._field_Path));
		{
			auto expr = &(_6458_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a86d5807:;
			if (it != expr_end) {
				jule::Ptr<_1a46517aa_AST> _65316_ast = *it;
				{
					jule::Ptr<_1a4725065_SymTab> _6549_table = static_cast<jule::Ptr<_1a4725065_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1a4725065_SymTab__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a4906598_buildSymbols(&(_65316_ast), &((*_self_.alloc)._field_importer), _self_);
						_6549_table = __jule_assign_result.__jule_result_arg0;
						_64518_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64518_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62135_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62135_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4725065_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6549_table; __jule_collection; }));
				}
				_iter_next_1a86d5807:;
				++it;
				goto _iter_begin_1a86d5807;
			}
			_iter_end_1a86d5807:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a4806399_importUseDecl(jule::Ptr<_1a4801361_symBuilder> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _66735_decl) {
	jule::Ptr<_1a480c3d3_ImportInfo> _6687_imp = _1a4804034_buildImport(_self_, _66735_decl);;
	if ((_6687_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6737_ok = _1a48046b6_checkDuplicateUseDecl(_self_, &(_6687_imp));;
	if ((!(_6737_ok))) {
		return nullptr;;
	};
	_6737_ok=_1a4806058_importPackage(_self_, &(_6687_imp), _66735_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6687_imp; __jule_collection; }));
	if (_6737_ok) {
		((_1a48093d0_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a480927b_Imported((*_self_.alloc)._field_importer.data, _6687_imp);
		return _6687_imp;;
	};
	return nullptr;;
}



inline void _1a4806597_importUseDecls(jule::Ptr<_1a4801361_symBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86db225:;
		if (it != expr_end) {
			jule::Ptr<_1a466b5b6_UseDecl> _68715_decl = *it;
			{
				_1a4806399_importUseDecl(_self_, &(_68715_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1a86db225;
				};
			}
			_iter_next_1a86db225:;
			++it;
			goto _iter_begin_1a86db225;
		}
		_iter_end_1a86db225:;
	};
}



inline void _1a4806850_appendNode(_1a4801361_symBuilder* _self_, _1a4652668_Node* _69631_node) {
	{
		auto &_match_expr{ (*(_69631_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a86db764:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47c7425_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a4800c9a_buildImpl((*(_69631_node))._field_Data.cast_ptr<_1a4670125_Impl>(&__jule_any_type65)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a86dc7ba:;
			{
				jule::Ptr<_1a48d46db_TypeAlias> _7018_ta = _1a47ec2e6_buildTypeAlias((*(_69631_node))._field_Data.cast_ptr<_1a466a263_TypeAliasDecl>(&__jule_any_type50));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7018_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a86dc831:;
			{
				jule::Ptr<_1a4673ec5_Struct> _7048_srct = _1a47ecb87_buildStruct((*(_69631_node))._field_Data.cast_ptr<_1a466e278_StructDecl>(&__jule_any_type66));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4673ec5_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7048_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a86dc897:;
			{
				jule::Ptr<_1a471dc62_Fn> _7078_f = _1a47ed836_buildFunc((*(_69631_node))._field_Data.cast_ptr<_1a4665406_FnDecl>(&__jule_any_type67));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471dc62_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7078_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a86dc90d:;
			{
				jule::Ptr<_1a4729476_Trait> _7108_t = _1a47ee183_buildTrait((*(_69631_node))._field_Data.cast_ptr<_1a466e9b5_TraitDecl>(&__jule_any_type68));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4729476_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7108_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a86dc974:;
			{
				jule::Ptr<_1a4852e51_Var> _7138_v = _1a4800717_buildVar((*(_69631_node))._field_Data.cast_ptr<_1a46665b1_VarDecl>(&__jule_any_type49));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7138_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a86dd1d3:;
			{
				jule::Ptr<_1a472bb2c_Enum> _7168_e = _1a47eec11_buildEnum((*(_69631_node))._field_Data.cast_ptr<_1a466c62d_EnumDecl>(&__jule_any_type69));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a472bb2c_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7168_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a86dd249:;
			{
				jule::Ptr<_1a472d337_TypeEnum> _7198_e = _1a480044d_buildTypeEnum((*(_69631_node))._field_Data.cast_ptr<_1a466d5b8_TypeEnumDecl>(&__jule_any_type70));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a472d337_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7198_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1a86dc6aa:;
			{
				_1a4801d67_pushErr(_self_, &((*(_69631_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a86dc644:;
	};
}



inline void _1a4806a4d_appendNodes(_1a4801361_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8706cce:;
		if (it != expr_end) {
			_1a4652668_Node _72715_node = *it;
			{
				_1a4806850_appendNode(_self_, &(_72715_node));
			}
			_iter_next_1a8706cce:;
			++it;
			goto _iter_begin_1a8706cce;
		}
		_iter_end_1a8706cce:;
	};
}



inline void _1a4806d06_pushDirectivePass(_1a4801361_symBuilder* _self_, jule::Ptr<_1a4652a86_Directive>* _73238_d) {
	if (((*((*(_73238_d))))._field_Args.len() == 0LL)) {
		_1a4801d67_pushErr(_self_, &((*((*(_73238_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73238_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a463d137_Token> _7374_arg = (*((*(_73238_d))))._field_Args[1LL];;
		_1a4801d67_pushErr(_self_, &(_7374_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73238_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a463d137_Token> _7413_arg = (*((*(_73238_d))))._field_Args[0LL];;
	if (((*(_7413_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a4801d67_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7413_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a4801d67_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1a47eb8ab_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a47eb8ab_Pass{._field_Token=(*((*(_73238_d))))._field_Tag, ._field_Text=(*_7413_arg.alloc)._field_Kind.slice(1LL, ((*_7413_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1a4807004_appendTopDirectives(_1a4801361_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a870e4bd:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _75915_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75915_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1a87106cd:;
						{
							_1a4806d06_pushDirectivePass(_self_, &(_75915_d));
						}
					}
					_match_end_1a8710601:;
				};
			}
			_iter_next_1a870e4bd:;
			++it;
			goto _iter_begin_1a870e4bd;
		}
		_iter_end_1a870e4bd:;
	};
}



inline void _1a4807202_build(jule::Ptr<_1a4801361_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a4725065_SymTab>(_1a4725065_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1a47eb8ab_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a4673ec5_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a471dc62_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a4729476_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a472bb2c_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a472d337_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a47c7425_Impl>>(nullptr)});
	_1a4807004_appendTopDirectives(_self_);
	_1a4806597_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a4806a4d_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1a480c3d3_ImportInfo_eq(_1a480c3d3_ImportInfo *_self_, _1a480c3d3_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1a480c3d3_ImportInfo> _1a480c900_SelectPackage(_1a480c3d3_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a4852e51_Var> _1a480cceb_FindVar(_1a480c3d3_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a4809b94_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a480d1e7_FindTypeAlias(_1a480c3d3_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a480a0c3_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a480d5e3_FindStruct(_1a480c3d3_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a480a579_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1a471dc62_Fn> _1a480d9de_FindFn(_1a480c3d3_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a480a975_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1a4729476_Trait> _1a480dd30_FindTrait(_1a480c3d3_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a480ace9_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a480e171_FindEnum(_1a480c3d3_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a480b16d_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a480e4b2_FindTypeEnum(_1a480c3d3_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1a480e87a_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a480b602_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1a480e87a_isLookupable(_1a480c3d3_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1a480c3d3_ImportInfo> _1a481012d_SelectPackage(_1a480eb55_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a4852e51_Var> _1a4810529_FindVar(_1a480eb55_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1a4809b94_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a4810925_FindTypeAlias(_1a480eb55_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1a480a0c3_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a4810d21_FindStruct(_1a480eb55_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1a480a579_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1a471dc62_Fn> _1a481121c_FindFn(_1a480eb55_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1a480a975_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1a4729476_Trait> _1a481155d_FindTrait(_1a480eb55_Package* _self_, jule::Str _31125_ident) {
	return _1a480ace9_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a481189e_FindEnum(_1a480eb55_Package* _self_, jule::Str _31724_ident) {
	return _1a480b16d_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a4811be0_FindTypeEnum(_1a480eb55_Package* _self_, jule::Str _32328_ident) {
	return _1a480b602_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1a47ae044_comptimeTypeInfo> _1a4828c4b_pushComptimeTypeInfo(_1a48287a6_commonSemaMeta* _self_, jule::Ptr<_1a48d54cd_Type>* _21241_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8765612:;
		if (it != expr_end) {
			jule::Ptr<_1a47ae044_comptimeTypeInfo> _21315_t2 = *it;
			{
				if ((((*((*(_21315_t2))._field_base))._field_BindIdent == (*((*(_21241_t))))._field_BindIdent) && _1a48d5c1a_Equal((*(_21315_t2))._field_base, (*(_21241_t))))) {
					return _21315_t2;;
				};
			}
			_iter_next_1a8765612:;
			++it;
			goto _iter_begin_1a8765612;
		}
		_iter_end_1a8765612:;
	};
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _2187_t1 = jule::new_ptr<_1a47ae044_comptimeTypeInfo>(_1a47ae044_comptimeTypeInfo{._field_base=(*(_21241_t))});;
	{ jule::Slice<jule::Ptr<_1a47ae044_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2187_t1); };
	return _2187_t1;;
}







inline jule::Ptr<_1a480c3d3_ImportInfo> _1a48298a6_SelectPackage(_1a48293cd_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>> _24129_selector) {
	return _1a4725582_SelectPackage((*(_self_))._field_file.ptr(), _24129_selector);;
}



inline jule::Ptr<_1a4852e51_Var> _1a4829ca2_FindVar(_1a48293cd_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	jule::Ptr<_1a4852e51_Var> _2537_v = _1a4809b94_findVarInPackage(&((*(_self_))._field_files), &(_25123_ident), _25135_binded);;
	if ((_2537_v != nullptr)) {
		return _2537_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a482a19d_FindTypeAlias(_1a48293cd_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded) {
	jule::Ptr<_1a48d46db_TypeAlias> _2687_ta = _1a480a0c3_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26629_ident), _26641_binded);;
	if ((_2687_ta != nullptr)) {
		return _2687_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a482a599_FindStruct(_1a48293cd_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded) {
	jule::Ptr<_1a4673ec5_Struct> _2837_s = _1a480a579_findStructInPackage(&((*(_self_))._field_files), &(_28126_ident), _28138_binded);;
	if ((_2837_s != nullptr)) {
		return _2837_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a471dc62_Fn> _1a482a995_FindFn(_1a48293cd_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded) {
	jule::Ptr<_1a471dc62_Fn> _2987_f = _1a480a975_findFnInPackage(&((*(_self_))._field_files), &(_29622_ident), _29634_binded);;
	if ((_2987_f != nullptr)) {
		return _2987_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4729476_Trait> _1a482acd6_FindTrait(_1a48293cd_sema* _self_, jule::Str _31125_ident) {
	jule::Ptr<_1a4729476_Trait> _3137_t = _1a480ace9_findTraitInPackage(&((*(_self_))._field_files), &(_31125_ident));;
	if ((_3137_t != nullptr)) {
		return _3137_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a482b127_FindEnum(_1a48293cd_sema* _self_, jule::Str _32624_ident) {
	jule::Ptr<_1a472bb2c_Enum> _3287_e = _1a480b16d_findEnumInPackage(&((*(_self_))._field_files), &(_32624_ident));;
	if ((_3287_e != nullptr)) {
		return _3287_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a482b468_FindTypeEnum(_1a48293cd_sema* _self_, jule::Str _34128_ident) {
	jule::Ptr<_1a472d337_TypeEnum> _3437_e = _1a480b602_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34128_ident));;
	if ((_3437_e != nullptr)) {
		return _3437_e;;
	};
	return nullptr;;
}



inline jule::Bool _1a482b875_isFlag(_1a48293cd_sema* _self_, jule::I32 _35318_flags) {
	return (((*(_self_))._field_flags & _35318_flags) == _35318_flags);;
}



inline jule::Ptr<_1a4725065_SymTab> _1a482bb0b_getCurrentFile(_1a48293cd_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1a482bdb4_setCurrentFile(_1a48293cd_sema* _self_, jule::Ptr<_1a4725065_SymTab> _35634_f) {
	(*(_self_))._field_file=_35634_f;
}



inline void _1a482c2d2_pushErr(_1a48293cd_sema* _self_, jule::Ptr<_1a463d137_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args) {
	{ jule::Slice<_1e71b7487_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a48272bb_compilerErr(&(_35823_token), true, _35845_fmt, _35865_args)); };
}



inline void _1a482c645_pushSuggestion(_1a48293cd_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args) {
	{
		_1a48283dd_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36330_fmt, _36350_args);
	};
}



inline jule::Bool _1a482ca41_isAccessibleDefine(_1a48293cd_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1a463d137_Token> _36944_token) {
	if ((_36930_public || ((*(_36944_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3743_selfDir = _1a46444a1_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3753_tokenDir = _1a46444a1_Dir((*_36944_token.alloc)._field_File.ptr());;
	if ((_3743_selfDir == _3753_tokenDir)) {
		return true;;
	};
	if ((_1a4812130_isStdPackage(&(_3753_tokenDir), jule::Str::lit("runtime", 7)) && _1a4812130_isStdPackage(&(_3743_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1a482cee7_isDuplicatedIdent(_1a48293cd_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8225996:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> *_39310_f = it;
			{
				if (_1a472891a_isDuplicatedIdent((*(_39310_f)).ptr(), _39229_itself, _39247_ident, _39259_binded)) {
					return true;;
				};
			}
			_iter_next_1a8225996:;
			++it;
			goto _iter_begin_1a8225996;
		}
		_iter_end_1a8225996:;
	};
	return false;;
}



inline void _1a482d35a_checkDirectives(jule::Ptr<_1a48293cd_sema> _self_, jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _40137_d, jule::Any _40163_o) {
	_1a47e7b4e_directiveChecker _4027_dc = _1a47e7b4e_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a4652a86_Directive>>>)(_40137_d)), ._field_o=_40163_o};;
	_1a47e93d1_check(&_4027_dc);
}



inline jule::Bool _1a482d811_checkGenericQuantity(_1a48293cd_sema* _self_, jule::I32 _41036_required, jule::I32 _41051_given, jule::Ptr<_1a463d137_Token> _41063_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41036_required == 0LL) && (_41051_given > 0LL))) {
			_case_begin_1a822869c:;
			{
				_1a482c2d2_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41036_required > 0LL) && (_41051_given == 0LL))) {
			_case_begin_1a8228724:;
			{
				_1a482c2d2_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required < _41051_given)) {
			_case_begin_1a822879b:;
			{
				_1a482c2d2_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required > _41051_given)) {
			_case_begin_1a8228823:;
			{
				_1a482c2d2_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a82285d1:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8228504:;
	};
}



inline jule::Bool _1a482e845_isUseAliasDuplication(_1a48293cd_sema* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _46838_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a822dc68:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _46915_imp2 = *it;
			{
				if ((_46915_imp2 == (*(_46838_imp)))) {
					goto _iter_end_1a822dc68;
				};
				if (((*(_46915_imp2))._field_Alias == (*((*(_46838_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1a822dc68:;
			++it;
			goto _iter_begin_1a822dc68;
		}
		_iter_end_1a822dc68:;
	};
	return false;;
}



inline jule::Bool _1a482eb86_checkAutoAlias(_1a48293cd_sema* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _48035_imp) {
	if ((*((*(_48035_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4853_valid = _1a48518ab_isValidImpAlias((*((*(_48035_imp))))._field_Alias);;
	if (_4853_valid) {
		if (_1a482e845_isUseAliasDuplication(_self_, _48035_imp)) {
			_1a482c2d2_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48035_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1a482c2d2_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48035_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4853_valid;;
}



inline jule::Bool _1a482eec7_checkImport(_1a48293cd_sema* _self_, jule::Ptr<_1a480c3d3_ImportInfo>* _49832_imp) {
	if ((*((*(_49832_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49832_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1a4640a1e_IsIgnoreIdent((*((*(_49832_imp))))._field_Alias)) {
			_1a482c2d2_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1a482e845_isUseAliasDuplication(_self_, _49832_imp)) {
			_1a482c2d2_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49832_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49832_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1a482c2d2_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1a48075ba_isImplicitImport((*(_49832_imp))))) && (!(_1a482eb86_checkAutoAlias(_self_, _49832_imp))))) {
		return false;;
	};
	if (((*((*((*(_49832_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49832_imp))))._field_Duplicate))) {
		jule::Ptr<_1a48293cd_sema> _5258_sema = jule::new_ptr<_1a48293cd_sema>(_1a48293cd_sema{._field_errors=jule::Slice<_1e71b7487_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a4725065_SymTab>>(nullptr), ._field_file=jule::Ptr<_1a4725065_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a484e06d_check(_5258_sema, &((*(*((*(_49832_imp))))._field_Package.alloc)._field_Files));
		if (((*_5258_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5258_sema.alloc)._field_errors);;
			(*_5258_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1a48301c5_checkImports(_1a48293cd_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a823c958:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _54015_file = *it;
			{
				_1a482bdb4_setCurrentFile(_self_, _54015_file);
				{
					auto expr = &((*(_54015_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a823d7a0:;
					if (it != expr_end) {
						jule::Ptr<_1a480c3d3_ImportInfo> _54216_imp = *it;
						{
							jule::Bool _5435_ok = _1a482eec7_checkImport(_self_, &(_54216_imp));;
							if ((!(_5435_ok))) {
								return;;
							};
						}
						_iter_next_1a823d7a0:;
						++it;
						goto _iter_begin_1a823d7a0;
					}
					_iter_end_1a823d7a0:;
				};
			}
			_iter_next_1a823c958:;
			++it;
			goto _iter_begin_1a823c958;
		}
		_iter_end_1a823c958:;
	};
}



inline void _1a48303c3_implFileImpls(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a823dbe0:;
		if (it != expr_end) {
			jule::Ptr<_1a47c7425_Impl> _55315_imp = *it;
			{
				_1a484522e_implImpl(_self_, &(_55315_imp));
			}
			_iter_next_1a823dbe0:;
			++it;
			goto _iter_begin_1a823dbe0;
		}
		_iter_end_1a823dbe0:;
	};
}



inline void _1a48305c1_implImpls(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a824061a:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _55915_file = *it;
			{
				_1a482bdb4_setCurrentFile(_self_.ptr(), _55915_file);
				_1a48303c3_implFileImpls(_self_);
			}
			_iter_next_1a824061a:;
			++it;
			goto _iter_begin_1a824061a;
		}
		_iter_end_1a824061a:;
	};
}



inline void _1a48307be_checkEnums(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82416c6:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _56615_file = *it;
			{
				_1a482bdb4_setCurrentFile(_self_.ptr(), _56615_file);
				{
					
					if ((!(_1a484166a_checkEnumDecls(_self_)))) {
						_case_begin_1a8241d25:;
					}
					else if ((!(_1a4841901_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a82423ec:;
					}
					_match_end_1a8242320:;
				};
			}
			_iter_next_1a82416c6:;
			++it;
			goto _iter_begin_1a82416c6;
		}
		_iter_end_1a82416c6:;
	};
}



inline void _1a48309bc_checkFileInherits(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8243277:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _57615_t = *it;
			{
				jule::Bool _5774_ok = _1a48432b5__checkTraitDeclInherits(_self_, &(_57615_t));;
				if ((!(_5774_ok))) {
					return;;
				};
			}
			_iter_next_1a8243277:;
			++it;
			goto _iter_begin_1a8243277;
		}
		_iter_end_1a8243277:;
	};
}



inline void _1a4830bba_checkInherits(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a824381b:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _58515_file = *it;
			{
				_1a482bdb4_setCurrentFile(_self_.ptr(), _58515_file);
				_1a48309bc_checkFileInherits(_self_);
			}
			_iter_next_1a824381b:;
			++it;
			goto _iter_begin_1a824381b;
		}
		_iter_end_1a824381b:;
	};
}



inline _1a48e78ca_typeChecker _1a4831171_typeChecker(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _59147_generics, jule::Ptr<_1a48e68da_referencer> _5927_referencer) {
	_1a48e78ca_typeChecker _5937_tc = _1a48e78ca_typeChecker{._field_s=_self_, ._field_rootLookup=_59132_l, ._field_lookup=_59132_l, ._field_referencer=_5927_referencer, ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59147_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59132_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
			_case_begin_1a82464cd:;
			{
				jule::Ptr<_1a47d3cc2_scopeChecker> _6028_hard = _1a47d7435_getHardRoot(_59132_l.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
				_5937_tc._field_refers=(*((*(_6028_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1a8246467:;
	};
	if (((_5927_referencer != nullptr) && ((*_5927_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5927_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a8247d70:;
				{
					_5937_tc._field_ownerAlias=(*(_5927_referencer))._field_owner.unsafe_cast_ptr<_1a48d46db_TypeAlias>();
				}
			}
			_match_end_1a8247d09:;
		};
	};
	return _5937_tc;;
}



inline jule::Ptr<_1a48d54cd_Type> _1a483660a_buildTypeWithRefers(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _6197_generics, jule::Ptr<_1a48e68da_referencer> _61935_referencer) {
	return ({ auto _wrap_copy = _1a4831171_typeChecker(_self_, _61864_l, _6197_generics, _61935_referencer); _1a49004b5_checkDecl(&_wrap_copy, _61841_t); });;
}



inline jule::Bool _1a4836aa0_checkTypeSymWithRefers(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dcbde_TypeSym>* _62544_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _6267_generics, jule::Ptr<_1a48e68da_referencer> _62635_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a48dd096_checked((*(_62544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62544_t))))._field_Type=_1a483660a_buildTypeWithRefers(_self_, &((*((*(_62544_t))))._field_Decl), _62561_l, _6267_generics, _62635_referencer);
	__jule_func_result = _1a48dd096_checked((*(_62544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a47c5126_constraintChecker> _1a4836d36_constraintChecker(jule::Ptr<_1a48293cd_sema> _self_) {
	return jule::new_ptr<_1a47c5126_constraintChecker>(_1a47c5126_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_si=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_et=jule::Ptr<_1a463d137_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1a4837232_checkTypeSym(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dcbde_TypeSym>* _64034_t, jule::Trait _64051_l) {
	return _1a4836aa0_checkTypeSymWithRefers(_self_, _64034_t, _64051_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a48d54cd_Type> _1a48376d8_checkTypeSymRefers(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _64540_t, jule::Trait _64563_l, jule::Ptr<_1a47ea3d2_ReferenceStack> _64578_refers) {
	jule::Ptr<_1a48e78ca_typeChecker> _6467_tc = jule::new_ptr<_1a48e78ca_typeChecker>(_1a48e78ca_typeChecker{._field_s=_self_, ._field_rootLookup=_64563_l, ._field_lookup=_64563_l, ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=_64578_refers, ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a49004b5_checkDecl(_6467_tc.ptr(), _64540_t);;
}



inline jule::Ptr<_1a48d54cd_Type> _1a4837b8e_buildTypeWithGenerics(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _6587_generics, jule::Ptr<_1a47ea3d2_ReferenceStack> _65835_refers) {
	jule::Ptr<_1a48e78ca_typeChecker> _6597_tc = jule::new_ptr<_1a48e78ca_typeChecker>(_1a48e78ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=_65835_refers, ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6587_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a49004b5_checkDecl(_6597_tc.ptr(), _65743_t);;
}



inline jule::Ptr<_1a48d54cd_Type> _1a4838321_selectType(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _67532_t) {
	jule::Ptr<_1a48e78ca_typeChecker> _6767_tc = jule::new_ptr<_1a48e78ca_typeChecker>(_1a48e78ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a49004b5_checkDecl(_6767_tc.ptr(), _67532_t);;
}



inline jule::Ptr<_1a48a447a_eval> _1a48387c7_evalpd(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1a48d54cd_Type> _68742_p, jule::Ptr<_1a4852e51_Var> _68756_owner) {
	jule::Ptr<_1a48a447a_eval> _6887_e = jule::new_ptr<_1a48a447a_eval>(_1a48a447a_eval{._field_s=_self_, ._field_lookup=_68727_l, ._field_prefix=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_68756_owner, ._field_field=jule::Ptr<_1a4676280_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _68727_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
			_case_begin_1a825372c:;
			{
				(*(_6887_e))._field_unsafety=_1a47d61ae_isUnsafe(_68727_l.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));
			}
		}
		_match_end_1a82536b6:;
	};
	(*_6887_e.alloc)._field_prefix=_68742_p;
	return _6887_e;;
}



inline jule::Ptr<_1a48a447a_eval> _1a4838bc3_evalp(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1a48d54cd_Type> _70241_p) {
	return _1a48387c7_evalpd(_self_, _70226_l, _70241_p, nullptr);;
}



inline jule::Ptr<_1a48a447a_eval> _1a4839014_eval(jule::Ptr<_1a48293cd_sema> _self_, jule::Trait _70725_l) {
	return _1a4838bc3_evalp(_self_, _70725_l, nullptr);;
}



inline jule::Bool _1a4839630_checkAssignType(jule::Ptr<_1a48293cd_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1a48d54cd_Type>* _71154_dest, jule::Ptr<_1a48a2753_Data>* _7128_d, jule::Ptr<_1a463d137_Token> _71222_errorToken, jule::Ptr<_1a47ea3d2_ReferenceStack> _71253_refers) {
	if ((*((*(_7128_d))))._field_Decl) {
		_1a482c2d2_pushErr(_self_.ptr(), _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71132_destIsRef) {
		if ((!(_1a48d5c1a_Equal((*(_71154_dest)), (*((*(_7128_d))))._field_Type)))) {
			_1a482c2d2_pushErr(_self_, _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_71154_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_7128_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1a4890ae8_assignTypeChecker> _7238_atc = jule::new_ptr<_1a4890ae8_assignTypeChecker>(_1a4890ae8_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71154_dest)), ._field_d=(*(_7128_d)), ._field_errorToken=_71222_errorToken, ._field_refers=_71253_refers});;
		jule::Bool _7304_ok = _1a4891ae9_check(_7238_atc.ptr());;
		if ((!(_7304_ok))) {
			return false;;
		};
	};
	if (((!(_1a48a318d_IsConst((*(_7128_d)).ptr()))) || (_1a48d7b84_Prim((*(_71154_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7407_kind = (*(_1a48d7b84_Prim((*(_71154_dest)).ptr())))._field_Kind;;
	{
		
		if (_1a479c021_IsSigInt(_7407_kind)) {
			_case_begin_1a825b79b:;
			{
				_1a4708037_SetI64((*((*(_7128_d))))._field_Constant.ptr(), _1a4707762_AsI64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1a479c32e_IsUnsigInt(_7407_kind)) {
			_case_begin_1a825b834:;
			{
				_1a47082e0_SetU64((*((*(_7128_d))))._field_Constant.ptr(), _1a47079e8_AsU64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1a479c939_IsFloat(_7407_kind)) {
			_case_begin_1a825b89a:;
			{
				_1a4708b09_SetF64((*((*(_7128_d))))._field_Constant.ptr(), _1a4707c7e_AsF64((*((*(_7128_d))))._field_Constant));
			}
		}
		_match_end_1a825b6e1:;
	};
	return true;;
}



inline jule::Bool _1a4839ad6__checkTypeCompatibility(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d54cd_Type>* _75445_dest, jule::Ptr<_1a48d54cd_Type>* _75463_src, jule::Ptr<_1a463d137_Token> _7557_errorToken) {
	if (((*(_75463_src)) == nullptr)) {
		return false;;
	};
	if ((_1a48d99aa_Tup((*(_75463_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a488dc6c_typeCompatibilityChecker _7637_tcc = _1a488dc6c_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75445_dest)), ._field_src=(*(_75463_src)), ._field_errorToken=_7557_errorToken};;
	return _1a4890466_check(&_7637_tcc);;
}



inline jule::Bool _1a483a08c_checkTypeCompatibility(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d54cd_Type>* _77244_dest, jule::Ptr<_1a48d54cd_Type>* _7738_src, jule::Ptr<_1a463d137_Token>* _77325_errorToken) {
	if (_1a4839ad6__checkTypeCompatibility(_self_, _77244_dest, _7738_src, (*(_77325_errorToken)))) {
		return true;;
	};
	_1a482c2d2_pushErr(_self_, (*(_77325_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_77244_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_7738_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1a483a4aa_pushCompatiblityError(_1a48293cd_sema* _self_, jule::Ptr<_1a48d54cd_Type>* _78142_dest, jule::Ptr<_1a48a2753_Data>* _78160_src, jule::Ptr<_1a463d137_Token>* _7828_errorToken) {
	if ((*((*(_78160_src))))._field_untyped) {
		{
			
			if (_1a470908d_IsI64((*((*(_78160_src))))._field_Constant.ptr())) {
				_case_begin_1a82639d4:;
				{
					_1a482c2d2_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1a4709324_IsU64((*((*(_78160_src))))._field_Constant.ptr())) {
				_case_begin_1a8263a7d:;
				{
					_1a482c2d2_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1a4709ac7_IsF64((*((*(_78160_src))))._field_Constant.ptr())) {
				_case_begin_1a8263ae4:;
				{
					_1a482c2d2_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1a82638a2:;
		};
	};
	_1a482c2d2_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_78160_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a483a961_checkTypeCompatibility1(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d54cd_Type>* _79945_dest, jule::Ptr<_1a48a2753_Data>* _79963_src, jule::Ptr<_1a463d137_Token>* _8008_errorToken) {
	if (_1a4839ad6__checkTypeCompatibility(_self_, _79945_dest, &((*((*(_79963_src))))._field_Type), (*(_8008_errorToken)))) {
		return true;;
	};
	_1a483a4aa_pushCompatiblityError(_self_, _79945_dest, _79963_src, _8008_errorToken);
	return false;;
}



inline jule::Ptr<_1a48d54cd_Type> _1a483ae17_buildNonGenericType(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4653669_TypeDecl>* _81441_ast, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1a48d54cd_Type>>* _81544_ignored) {
	jule::Ptr<_1a48e78ca_typeChecker> _8167_tc = jule::new_ptr<_1a48e78ca_typeChecker>(_1a48e78ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=(*(_8158_generics)), ._field_ignoredGenerics=_81544_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a49004b5_checkDecl(_8167_tc.ptr(), _81441_ast);;
}



inline jule::Bool _1a483b313_buildFnNonGenericTypes(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns> _82643_f, jule::Slice<jule::Ptr<_1a48d54cd_Type>>* _82659_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _82711_generics = nullptr;;
	if (_1a471e49e_IsMethod((*(_82643_f))._field_Decl.ptr())) {
		_82711_generics=jule::append((*(*(_82643_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82643_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82711_generics=(*((*(_82643_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1a483c4ac_basicFnEnvironment(_self_, &(_82643_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a48293cd_sema>*>((void*)__jule_anon_1a826c713, jule::Ptr<__jule_anon_1a826c713_ctx>::make(__jule_anon_1a826c713_ctx{._82643_f=_82643_f,._82711_generics=_82711_generics,._82659_ignored=_82659_ignored}).as<jule::Uintptr>(), __jule_anon_1a826c713_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a483b654_getTraitCheckFnKind(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _84941_f) {
	if (((*((*(_84941_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_84941_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a4721d20_FnIns> _8537_ins = _1a472026e_instanceForce((*(_84941_f)));;
	jule::Ptr<_1a48e78ca_typeChecker> _8557_tc = jule::new_ptr<_1a48e78ca_typeChecker>(_1a48e78ca_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8537_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8273b15:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> _86015_p = *it;
			{
				if ((!(_1a471c8dc_IsSelf((*(_86015_p))._field_Decl.ptr())))) {
					(*_86015_p.alloc)._field_Type=_1a49004b5_checkDecl(_8557_tc.ptr(), &((*((*(*(_86015_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86015_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1a8273b15:;
			++it;
			goto _iter_begin_1a8273b15;
		}
		_iter_end_1a8273b15:;
	};
	if ((!(_1a471e218_IsVoid((*(_84941_f)).ptr())))) {
		(*_8537_ins.alloc)._field_Result=_1a49004b5_checkDecl(_8557_tc, &((*((*((*((*(_84941_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8537_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8537_ins;;
}



inline jule::Bool _1a483bb0a_checkConstraintsFn(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _87840_f, jule::Ptr<_1a463d137_Token>* _87856_et, jule::Ptr<_1a4721d20_FnIns> _87879_exist) {
	jule::Ptr<_1a47c5126_constraintChecker> _8797_cc = _1a4836d36_constraintChecker(_self_);;
	(*(_8797_cc))._field_et=(*(_87856_et));
	(*_8797_cc.alloc)._field_fi=(*(_87840_f));
	if ((_87879_exist != nullptr)) {
		{
			auto expr = &((*_87879_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8278c80:;
			if (it != expr_end) {
				jule::I32 _8839_i = it - expr->begin();
				jule::Ptr<_1a48d3ae7_InsGeneric> _88316_g = *it;
				{
					(*((*((*(_87840_f))))._field_Generics[_8839_i]))._field_Constraint=(*(_88316_g))._field_Constraint;
				}
				_iter_next_1a8278c80:;
				++it;
				_8839_i++;
				goto _iter_begin_1a8278c80;
			}
			_iter_end_1a8278c80:;
		};
	} else {
		(*_8797_cc.alloc)._field_uniq=true;
	};
	return _1a47c608e_check(_8797_cc);;
}



inline jule::Bool _1a483c0b1_checkConstraintsStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _89244_s, jule::Ptr<_1a463d137_Token>* _89264_et, jule::Ptr<_1a4676d30_StructIns> _89287_exist) {
	jule::Ptr<_1a47c5126_constraintChecker> _8937_cc = _1a4836d36_constraintChecker(_self_);;
	(*(_8937_cc))._field_et=(*(_89264_et));
	(*_8937_cc.alloc)._field_si=(*(_89244_s));
	if ((_89287_exist != nullptr)) {
		{
			auto expr = &((*_89287_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a827be4d:;
			if (it != expr_end) {
				jule::I32 _8979_i = it - expr->begin();
				jule::Ptr<_1a48d3ae7_InsGeneric> _89716_g = *it;
				{
					(*((*((*(_89244_s))))._field_Generics[_8979_i]))._field_Constraint=(*(_89716_g))._field_Constraint;
				}
				_iter_next_1a827be4d:;
				++it;
				_8979_i++;
				goto _iter_begin_1a827be4d;
			}
			_iter_end_1a827be4d:;
		};
	} else {
		(*_8937_cc.alloc)._field_uniq=true;
	};
	return _1a47c608e_check(_8937_cc);;
}



inline jule::Bool _1a483c4ac_basicFnEnvironment(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*> _90951_algo) {
	jule::Ptr<_1a48293cd_sema> _9107_sema = (*((*((*(_90940_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a4725065_SymTab> _9117_old = _1a482bb0b_getCurrentFile(_9107_sema.ptr());;
	jule::Ptr<_1a4725065_SymTab> _9127_file = _1a4828047_findFile(&((*_9107_sema.alloc)._field_files), &((*((*(*((*(_90940_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9127_file != nullptr)) {
		_1a482bdb4_setCurrentFile(_9107_sema, _9127_file);
	};
	jule::Bool _9173_ok = _90951_algo(&(_9107_sema));;
	if ((_9107_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_9107_sema.alloc)._field_errors);
		(*_9107_sema.alloc)._field_errors=nullptr;
	};
	_1a482bdb4_setCurrentFile(_9107_sema, _9117_old);
	return _9173_ok;;
}



inline jule::Bool _1a483c8a8_fnEnvironment(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*> _92946_algo) {
	jule::I32 _9307_size = (*((*(_92935_f))))._field_Generics.len();;
	if ((((*((*(_92935_f))))._field_Decl != nullptr) && ((*(*((*(_92935_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9307_size+=(*(*((*((*(_92935_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _9347_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>::alloc(0LL, _9307_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d46db_TypeAlias>(nullptr); __jule_collection; });;
	_1a4827bc3_appendGenericTypeAliases(&(_9347_generics), _92935_f);
	return _1a483c4ac_basicFnEnvironment(_self_, _92935_f, jule::__new_closure<jule::Bool,jule::Ptr<_1a48293cd_sema>*>((void*)__jule_anon_1a82856d7, jule::Ptr<__jule_anon_1a82856d7_ctx>::make(__jule_anon_1a82856d7_ctx{._92946_algo=_92946_algo,._9347_generics=_9347_generics}).as<jule::Uintptr>(), __jule_anon_1a82856d7_ctx_handler));;
}



inline void _1a483cb61_checkFnParamKind(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4720bba_ParamIns>* _94138_p) {
	(*((*((*(_94138_p))))._field_Type))._field_Variadic=(*((*((*(_94138_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_94138_p))))._field_Decl.alloc)._field_Reference && (!(_1a49023da_isValidForRef(&((*((*(_94138_p))))._field_Type)))))) {
		_1a482c2d2_pushErr(_self_.ptr(), (*(*((*(_94138_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_94138_p))))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1a483cea2_reloadFnInsTypes(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns> _94837_f) {
	if ((_1a47232d8_IsBuiltin(_94837_f.ptr()) || _1a472356e_IsAnon(_94837_f))) {
		return true;;
	};
	return _1a483c8a8_fnEnvironment(_self_, &(_94837_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a48293cd_sema>*,jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>*>((void*)__jule_anon_1a8289ec2, jule::Ptr<__jule_anon_1a8289ec2_ctx>::make(__jule_anon_1a8289ec2_ctx{._94837_f=_94837_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8289ec2_ctx_handler));;
}



inline jule::Bool _1a483d458_checkRefValidityForInitExpr(jule::Ptr<_1a48293cd_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1a48a2753_Data>* _98864_d, jule::Ptr<_1a463d137_Token>* _98879_errorToken) {
	if ((!(_1a4826c8d_isValidModelForRef(&((*((*(_98864_d))))._field_Model))))) {
		_1a482c2d2_pushErr(_self_.ptr(), (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98844_leftMut && (!((*((*(_98864_d))))._field_Mutable)))) {
		_1a482c2d2_pushErr(_self_, (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a483d799_isMutRiskyStruct(_1a48293cd_sema* _self_, jule::Ptr<_1a4676d30_StructIns>* _100529_s) {
	{
		auto expr = &((*((*(_100529_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82950ed:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> *_100610_f = it;
			{
				if ((((*((*((*(_100610_f))))._field_Decl))._field_Mutable && _1a48d6db4_Mutable((*(*(_100610_f)).alloc)._field_Type.ptr())) && _1a482ca41_isAccessibleDefine(_self_, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1a82950ed:;
			++it;
			goto _iter_begin_1a82950ed;
		}
		_iter_end_1a82950ed:;
	};
	return false;;
}



inline jule::Bool _1a483ddb5_checkValidityForInitExpr(jule::Ptr<_1a48293cd_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1a48d54cd_Type>* _10334_leftKind, jule::Ptr<_1a48a2753_Data>* _103326_d, jule::Ptr<_1a463d137_Token>* _103341_errorToken) {
	if ((_103241_leftMut && (!((*((*(_103326_d))))._field_Mutable)))) {
		if ((_1a48d6db4_Mutable((*((*(_103326_d))))._field_Type.ptr()) || (*(*((*(_103326_d))))._field_Type.alloc)._field_Variadic)) {
			_1a482c2d2_pushErr(_self_.ptr(), (*(_103341_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_103326_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1a4676d30_StructIns> _10414_s = _1a48d9207_Struct((*((*(_103326_d))))._field_Type);;
		if (((_10414_s != nullptr) && _1a483d799_isMutRiskyStruct(_self_, &(_10414_s)))) {
			_1a482c2d2_pushErr(_self_, (*(_103341_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_103326_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103256_leftRef) {
		if ((!(_1a483d458_checkRefValidityForInitExpr(_self_, _103241_leftMut, _103326_d, _103341_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a4890ae8_assignTypeChecker> _10527_atc = jule::new_ptr<_1a4890ae8_assignTypeChecker>(_1a4890ae8_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_d=(*(_103326_d)), ._field_errorToken=(*(_103341_errorToken)), ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr)});;
	return _1a4891346_checkValidity(_10527_atc.ptr());;
}



inline jule::Bool _1a483e2b1_checkTypeAliasDeclKind(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _106044_ta, jule::Trait _106064_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4725065_SymTab> _10617_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a482bdb4_setCurrentFile(_self_, _10617_old);
	});;
	if (((*((*(_106044_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a4725065_SymTab> _10668_file = _1a4828047_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106044_ta))))._field_Token.alloc)._field_File));;
		if ((_10668_file != nullptr)) {
			_1a482bdb4_setCurrentFile(_self_, _10668_file);
		};
	};
	__jule_func_result=_1a4836aa0_checkTypeSymWithRefers(_self_, &((*((*(_106044_ta))))._field_TypeSym), _106064_l, nullptr, jule::new_ptr<_1a48e68da_referencer>(_1a48e68da_referencer{._field_ident=(*((*(_106044_ta))))._field_Ident, ._field_owner=jule::Any((*(_106044_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106044_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a48d8954_Arr((*((*((*(_106044_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1a48d8954_Arr((*((*((*(_106044_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1a482c2d2_pushErr(_self_, (*((*(*((*(_106044_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a483e624_checkTypeAliasDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _108340_ta, jule::Trait _108360_l) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_108340_ta))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_108340_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1a483e2b1_checkTypeAliasDeclKind(_self_, _108340_ta, _108360_l);
}



inline void _1a483e8cc_checkTypeAliasDeclDup(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48d46db_TypeAlias>* _109143_ta) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_109143_ta))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a482cee7_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_109143_ta))), &((*((*(_109143_ta))))._field_Ident), (*((*(_109143_ta))))._field_Binded)) {
		_1a482c2d2_pushErr(_self_, (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_109143_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a483e2b1_checkTypeAliasDeclKind(_self_, _109143_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));
}



inline jule::Bool _1a483eb63_checkTypeAliasDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82a8a7e:;
		if (it != expr_end) {
			jule::Ptr<_1a48d46db_TypeAlias> _110415_ta = *it;
			{
				_1a483e8cc_checkTypeAliasDeclDup(_self_, &(_110415_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a82a8a7e:;
			++it;
			goto _iter_begin_1a82a8a7e;
		}
		_iter_end_1a82a8a7e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a82d7a14_checkEnumItemsDup(_1a48293cd_sema* _self_, jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82d8e22:;
		if (it != expr_end) {
			jule::Ptr<_1a472b0c1_EnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1a82d8e22;
				} else if (_1a4640a1e_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1a482c2d2_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a82da033:;
						if (it != expr_end) {
							jule::Ptr<_1a472b0c1_EnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1a82da033;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1a482c2d2_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1a82da033;
								};
							}
							_iter_next_1a82da033:;
							++it;
							goto _iter_begin_1a82da033;
						}
						_iter_end_1a82da033:;
					};
				};
			}
			_iter_next_1a82d8e22:;
			++it;
			goto _iter_begin_1a82d8e22;
		}
		_iter_end_1a82d8e22:;
	};
}

inline void _1a82e5a55_checkEnumItemsDup(_1a48293cd_sema* _self_, jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e6e41:;
		if (it != expr_end) {
			jule::Ptr<_1a472cc60_TypeEnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1a82e6e41;
				} else if (_1a4640a1e_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1a482c2d2_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a82e8052:;
						if (it != expr_end) {
							jule::Ptr<_1a472cc60_TypeEnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1a82e8052;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1a482c2d2_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1a82e8052;
								};
							}
							_iter_next_1a82e8052:;
							++it;
							goto _iter_begin_1a82e8052;
						}
						_iter_end_1a82e8052:;
					};
				};
			}
			_iter_next_1a82e6e41:;
			++it;
			goto _iter_begin_1a82e6e41;
		}
		_iter_end_1a82e6e41:;
	};
}



inline void _1a48401c4_checkEnumItemsStr(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472bb2c_Enum>* _113539_e) {
	jule::Ptr<_1a48a447a_eval> _11367_eval = _1a4839014_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82aa81c:;
		if (it != expr_end) {
			jule::Ptr<_1a472b0c1_EnumItem> _113715_item = *it;
			{
				if (_1a472b49a_AutoExpr(_113715_item.ptr())) {
					(*_113715_item.alloc)._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a4705d59_NewStr((*_113715_item.alloc)._field_Ident)})});
					(*((*((*_113715_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113715_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1a48a2753_Data> _11469_d = _1a48c32e0_evalExpr(_11367_eval, (*((*(_113715_item))._field_Value))._field_Expr);;
					if ((_11469_d == nullptr)) {
						goto _iter_next_1a82aa81c;
					};
					if ((!(_1a48a318d_IsConst(_11469_d.ptr())))) {
						_1a482c2d2_pushErr(_self_, (*((*(*(_113715_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1a47ea3d2_ReferenceStack> _11559_refers = static_cast<jule::Ptr<_1a47ea3d2_ReferenceStack>>(nullptr);;
					_1a4839630_checkAssignType(_self_, false, &((*((*((*(_113539_e))))._field_TypeSym))._field_Type), &(_11469_d), (*_113715_item.alloc)._field_Token, _11559_refers);
					(*(*(_113715_item))._field_Value.alloc)._field_Data=_11469_d;
				};
			}
			_iter_next_1a82aa81c:;
			++it;
			goto _iter_begin_1a82aa81c;
		}
		_iter_end_1a82aa81c:;
	};
}



inline void _1a82b69c1_checkEnumItemInt(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48a447a_eval>* _116243_eval, jule::Ptr<_1a472bb2c_Enum>* _116261_e, jule::Ptr<_1a48dd5e6_Prim>* _116272_prim, jule::Ptr<_1a472b0c1_EnumItem>* _116290_item, jule::U64* _1162112_n) {
	if (_1a472b49a_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		{
			
{
				_case_begin_1a82b8dd0:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1a47057c6_NewU64((*(_1162112_n)));
				}
			}
			_match_end_1a82b9793:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1a48a2753_Data> _11778_d = _1a48c32e0_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1a48a318d_IsConst(_11778_d.ptr())))) {
			_1a482c2d2_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a47ea3d2_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1a47ea3d2_ReferenceStack>>(nullptr);;
		_1a4839630_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_TypeSym))._field_Type), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1a82bd951:;
				{
					(*(_1162112_n))=_1a4706c28_ReadU64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a82bec71:;
		};
	};
}

inline void _1a82c754d_checkEnumItemInt(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48a447a_eval>* _116243_eval, jule::Ptr<_1a472bb2c_Enum>* _116261_e, jule::Ptr<_1a48dd5e6_Prim>* _116272_prim, jule::Ptr<_1a472b0c1_EnumItem>* _116290_item, jule::I64* _1162112_n) {
	if (_1a472b49a_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})});
		{
			
{
				_case_begin_1a82ca320:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1a470550c_NewI64((*(_1162112_n)));
				}
			}
			_match_end_1a82ca2a9:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1a48a2753_Data> _11778_d = _1a48c32e0_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1a48a318d_IsConst(_11778_d.ptr())))) {
			_1a482c2d2_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a47ea3d2_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1a47ea3d2_ReferenceStack>>(nullptr);;
		_1a4839630_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_TypeSym))._field_Type), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1a82d0996:;
				{
					(*(_1162112_n))=_1a4706992_ReadI64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a82d091e:;
		};
	};
}



inline void _1a82b2b32_checkEnumItemsInt1(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dd5e6_Prim>* _119841_prim, jule::Ptr<_1a472bb2c_Enum>* _119859_e) {
	jule::U64 _11997_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1a82b4837:;
			{
				_11997_max=_1a479a827_MaxU(_1a48dd96a_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1a82b499c:;
	};
	jule::Ptr<_1a48a447a_eval> _12097_eval = _1a4839014_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));;
	jule::U64 _12107_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a472b0c1_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1a82b69c1_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a82b4161:;
				{
					_12107_n=_1a47079e8_AsU64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a82c0546:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a82bb4cb:;
		if (it != expr_end) {
			jule::Ptr<_1a472b0c1_EnumItem> _122315_item = *it;
			{
				if (((_1a472b49a_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LLU)) && ((jule::U64)(_11997_max - _12107_n) <= 0LLU))) {
					_1a482c2d2_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1a82bb4cb;
				};
				(_12107_n)++;
				_1a82b69c1_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1a82bb4cb:;
			++it;
			goto _iter_begin_1a82bb4cb;
		}
		_iter_end_1a82bb4cb:;
	};
}

inline void _1a82b2e1d_checkEnumItemsInt1(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a48dd5e6_Prim>* _119841_prim, jule::Ptr<_1a472bb2c_Enum>* _119859_e) {
	jule::I64 _11997_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1a82c5408:;
			{
				_11997_max=_1a479a55d_MaxI(_1a48dd96a_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1a82c5392:;
	};
	jule::Ptr<_1a48a447a_eval> _12097_eval = _1a4839014_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));;
	jule::I64 _12107_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a472b0c1_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1a82c754d_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a82c7e11:;
				{
					_12107_n=_1a4707762_AsI64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a82cce49:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a82d268a:;
		if (it != expr_end) {
			jule::Ptr<_1a472b0c1_EnumItem> _122315_item = *it;
			{
				if (((_1a472b49a_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LL)) && ((_11997_max - _12107_n) <= 0LL))) {
					_1a482c2d2_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1a82d268a;
				};
				(_12107_n)++;
				_1a82c754d_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1a82d268a:;
			++it;
			goto _iter_begin_1a82d268a;
		}
		_iter_end_1a82d268a:;
	};
}



inline void _1a4840d73_checkEnumItemsInt(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472bb2c_Enum>* _123339_e) {
	jule::Ptr<_1a48dd5e6_Prim> _12343_prim = _1a48d7b84_Prim((*((*((*(_123339_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1a479c021_IsSigInt((*(_12343_prim))._field_Kind)) {
			_case_begin_1a82c234a:;
			{
				_1a82b2e1d_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		else {
			_case_begin_1a82b237e:;
			{
				_1a82b2b32_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		_match_end_1a82b2307:;
	};
}



inline void _1a484112b_checkEnumDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472bb2c_Enum>* _124335_e) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_124335_e))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a482cee7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124335_e))), &((*((*(_124335_e))))._field_Ident), false)) {
		_1a482c2d2_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124335_e))))._field_Items.len() == 0LL)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a82d7a14_checkEnumItemsDup(_self_, (*((*(_124335_e))))._field_Items);
	if (((*((*(_124335_e))))._field_TypeSym != nullptr)) {
		if ((!(_1a4837232_checkTypeSym(_self_, &((*((*(_124335_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124335_e))))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1a48dd5e6_Prim> _12677_t = _1a48d7b84_Prim((*((*((*(_124335_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12677_t == nullptr)) {
		_1a482c2d2_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a48e1ab1_IsStr(_12677_t.ptr())) {
			_case_begin_1a82e01c0:;
			{
				_1a48401c4_checkEnumItemsStr(_self_, _124335_e);
			}
		}
		else if (_1a479c5e8_IsInt(_1a48dd96a_Str(_12677_t.ptr()))) {
			_case_begin_1a82deda1:;
			{
				_1a4840d73_checkEnumItemsInt(_self_, _124335_e);
			}
		}
		else {
			_case_begin_1a82de268:;
			{
				_1a482c2d2_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a82de356:;
	};
}



inline void _1a48413d4_checkTypeEnumDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a472d337_TypeEnum>* _128439_e) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_128439_e))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a482cee7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128439_e))), &((*((*(_128439_e))))._field_Ident), false)) {
		_1a482c2d2_pushErr(_self_, (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128439_e))))._field_Items.len() == 0LL)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a82e5a55_checkEnumItemsDup(_self_, (*((*(_128439_e))))._field_Items);
	{
		auto expr = &((*((*(_128439_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e64c3:;
		if (it != expr_end) {
			jule::Ptr<_1a472cc60_TypeEnumItem> _129815_item = *it;
			{
				if (((*(_129815_item))._field_TypeSym == nullptr)) {
					_1a482c2d2_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1a82e64c3;
				};
				jule::Bool _13034_ok = _1a4837232_checkTypeSym(_self_, &((*_129815_item.alloc)._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));;
				if ((!(_13034_ok))) {
					goto _iter_next_1a82e64c3;
				};
				jule::Ptr<_1a48dd5e6_Prim> _13074_p = _1a48d7b84_Prim((*((*_129815_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13074_p != nullptr) && _1a48e1d47_IsAny(_13074_p))) {
					_1a482c2d2_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a82e64c3:;
			++it;
			goto _iter_begin_1a82e64c3;
		}
		_iter_end_1a82e64c3:;
	};
	if (((*((*(_128439_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a472cc60_TypeEnumItem> _13138_item = (*((*(_128439_e))))._field_Items[0LL];;
		_1a48d54cd_Type _13144_tk = _1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128439_e)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4)};;
		if ((((*((*(_13138_item))._field_TypeSym))._field_Type != nullptr) && _1a48d5c1a_Equal((*((*(_13138_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1a48d54cd_Type>)((&(_13144_tk))))))) {
			_1a482c2d2_pushErr(_self_, (*_13138_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a472d6ab_Str((*(_128439_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1a484166a_checkEnumDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83024e0:;
		if (it != expr_end) {
			jule::Ptr<_1a472bb2c_Enum> _132515_e = *it;
			{
				_1a484112b_checkEnumDecl(_self_, &(_132515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a83024e0:;
			++it;
			goto _iter_begin_1a83024e0;
		}
		_iter_end_1a83024e0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a4841901_checkTypeEnumDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8303bb7:;
		if (it != expr_end) {
			jule::Ptr<_1a472d337_TypeEnum> _133715_e = *it;
			{
				_1a48413d4_checkTypeEnumDecl(_self_, &(_133715_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a8303bb7:;
			++it;
			goto _iter_begin_1a8303bb7;
		}
		_iter_end_1a8303bb7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a4841c42_checkDeclGenerics(_1a48293cd_sema* _self_, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _134734_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134734_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a830426c:;
		if (it != expr_end) {
			jule::I32 _13497_i = it - expr->begin();
			jule::Ptr<_1a4660874_GenericDecl> *_134910_g = it;
			{
				if (_1a4640a1e_IsIgnoreIdent((*((*(_134910_g))))._field_Ident)) {
					_1a482c2d2_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a830426c;
				};
				_julec_label_1a83061e7:;
				{
					auto expr = _134734_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8306bcb:;
					if (it != expr_end) {
						jule::I32 _13588_j = it - expr->begin();
						jule::Ptr<_1a4660874_GenericDecl> *_135811_ct = it;
						{
							{
								
								if ((_13588_j >= _13497_i)) {
									_case_begin_1a830779d:;
									{
										goto _iter_end_1a8306bcb;
									}
								}
								else if (((*(*(_134910_g)).alloc)._field_Ident == (*((*(_135811_ct))))._field_Ident)) {
									_case_begin_1a8307836:;
									{
										_1a482c2d2_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_134910_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a8306bcb;
									}
								}
								_match_end_1a830769e:;
							};
						}
						_iter_next_1a8306bcb:;
						++it;
						_13588_j++;
						goto _iter_begin_1a8306bcb;
					}
					_iter_end_1a8306bcb:;
				};
			}
			_iter_next_1a830426c:;
			++it;
			_13497_i++;
			goto _iter_begin_1a830426c;
		}
		_iter_end_1a830426c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a4842083_checkFnDeclParamsDup(_1a48293cd_sema* _self_, jule::Ptr<_1a471dc62_Fn>* _137437_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1a83075b1:;
	{
		auto expr = &((*((*(_137437_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83085a1:;
		if (it != expr_end) {
			jule::I32 _13777_i = it - expr->begin();
			jule::Ptr<_1a471c28d_Param> *_137710_p = it;
			{
				{
					auto expr = &((*((*(_137437_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a830a54d:;
					if (it != expr_end) {
						jule::Ptr<_1a4660874_GenericDecl> *_137911_g = it;
						{
							if (((*((*(_137710_p))))._field_Ident == (*((*(_137911_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a482c2d2_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1a83085a1;
							};
						}
						_iter_next_1a830a54d:;
						++it;
						goto _iter_begin_1a830a54d;
					}
					_iter_end_1a830a54d:;
				};
				_julec_label_1a830c561:;
				{
					auto expr = &((*((*(_137437_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a830aa26:;
					if (it != expr_end) {
						jule::I32 _13898_j = it - expr->begin();
						jule::Ptr<_1a471c28d_Param> *_138911_jp = it;
						{
							{
								
								if ((_13898_j >= _13777_i)) {
									_case_begin_1a830d122:;
									{
										goto _iter_end_1a830aa26;
									}
								}
								else if (_1a4640a1e_IsIgnoreIdent((*(*(_137710_p)).alloc)._field_Ident) || _1a4640a1e_IsIgnoreIdent((*((*(_138911_jp))))._field_Ident) || _1a4640cd8_IsAnonIdent((*(*(_137710_p)).alloc)._field_Ident) || _1a4640cd8_IsAnonIdent((*(*(_138911_jp)).alloc)._field_Ident)) {
									_case_begin_1a830d1aa:;
									{
										goto _iter_end_1a830aa26;
									}
								}
								else if (((*(*(_137710_p)).alloc)._field_Ident == (*((*(_138911_jp))))._field_Ident)) {
									_case_begin_1a830d221:;
									{
										__jule_func_result=false;
										_1a482c2d2_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1a83085a1;
									}
								}
								_match_end_1a830cece:;
							};
						}
						_iter_next_1a830aa26:;
						++it;
						_13898_j++;
						goto _iter_begin_1a830aa26;
					}
					_iter_end_1a830aa26:;
				};
			}
			_iter_next_1a83085a1:;
			++it;
			_13777_i++;
			goto _iter_begin_1a83085a1;
		}
		_iter_end_1a83085a1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a48423c4_checkFnDeclResultDup(_1a48293cd_sema* _self_, jule::Ptr<_1a471dc62_Fn>* _141137_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a471e218_IsVoid((*(_141137_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_141137_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8311697:;
		if (it != expr_end) {
			jule::I32 _14187_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> *_141810_v = it;
			{
				if ((_1a4640a1e_IsIgnoreIdent((*((*(_141810_v))))._field_Kind) || _1a4640cd8_IsAnonIdent((*(*(_141810_v)).alloc)._field_Kind))) {
					goto _iter_next_1a8311697;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8312c81:;
					if (it != expr_end) {
						jule::Ptr<_1a4660874_GenericDecl> *_142311_g = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142311_g))))._field_Ident)) {
								goto _julec_label_1a8314326;
							};
						}
						_iter_next_1a8312c81:;
						++it;
						goto _iter_begin_1a8312c81;
					}
					_iter_end_1a8312c81:;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a831317c:;
					if (it != expr_end) {
						jule::Ptr<_1a471c28d_Param> *_142911_p = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142911_p))))._field_Ident)) {
								goto _julec_label_1a8314326;
							};
						}
						_iter_next_1a831317c:;
						++it;
						goto _iter_begin_1a831317c;
					}
					_iter_end_1a831317c:;
				};
				_julec_label_1a83147ee:;
				{
					auto expr = &((*((*((*(_141137_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8314bea:;
					if (it != expr_end) {
						jule::I32 _14378_j = it - expr->begin();
						jule::Ptr<_1a463d137_Token> *_143711_jv = it;
						{
							{
								
								if ((_14378_j >= _14187_i)) {
									_case_begin_1a8315789:;
									{
										goto _iter_end_1a8314bea;
									}
								}
								else if (((*((*(_143711_jv))))._field_Kind == (*(*(_141810_v)).alloc)._field_Kind)) {
									_case_begin_1a8315822:;
									{
										goto _julec_label_1a8314326;
									}
								}
								_match_end_1a8315679:;
							};
						}
						_iter_next_1a8314bea:;
						++it;
						_14378_j++;
						goto _iter_begin_1a8314bea;
					}
					_iter_end_1a8314bea:;
				};
				goto _iter_next_1a8311697;
				_julec_label_1a8314326:;
				_1a482c2d2_pushErr(_self_, (*(_141810_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_141810_v)).alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a8311697:;
			++it;
			_14187_i++;
			goto _iter_begin_1a8311697;
		}
		_iter_end_1a8311697:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a4842715_checkFnVariadicParam(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _145642_f) {
	if (((*((*(_145642_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a471c28d_Param> _14607_param = (*((*(_145642_f))))._field_Params[((*((*(_145642_f))))._field_Params.len() - 1LL)];;
	if (((*(_14607_param))._field_Variadic && (*_14607_param.alloc)._field_Reference)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*_14607_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a48429bd_checkFnDeclPrototype(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _146942_f) {
	if (((*((*(_146942_f))))._field_Exceptional && (*((*(_146942_f))))._field_Binded)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_146942_f))))._field_Exceptional) {
		if (_1a471e735_IsEntryPoint((*(_146942_f)).ptr())) {
			_1a482c2d2_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1a471e9bb_IsInit((*(_146942_f)).ptr())) {
			_1a482c2d2_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a4841c42_checkDeclGenerics(_self_, &((*((*(_146942_f))))._field_Generics))))) {
			_case_begin_1a831c5e8:;
		}
		else if ((!(_1a4842083_checkFnDeclParamsDup(_self_, _146942_f)))) {
			_case_begin_1a831c65e:;
		}
		else if ((!(_1a48423c4_checkFnDeclResultDup(_self_, _146942_f)))) {
			_case_begin_1a831c6c5:;
		}
		else if ((!(_1a4842715_checkFnVariadicParam(_self_, _146942_f)))) {
			_case_begin_1a831c73b:;
		}
		_match_end_1a831a849:;
	};
}



inline jule::Bool _1a4842e74_catchTraitInheritCycle(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait> _149139_t1, jule::Ptr<_1a4729476_Trait> _149155_t2, _1e71a80b0_Builder* _149172_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_149155_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a831ecb0:;
		if (it != expr_end) {
			jule::Ptr<_1a48dcbde_TypeSym> _149315_i = *it;
			{
				if (((*(_149315_i))._field_Type == nullptr)) {
					goto _iter_next_1a831ecb0;
				};
				jule::Ptr<_1a4729476_Trait> _14978_t3 = _1a48d948d_Trait((*_149315_i.alloc)._field_Type.ptr());;
				if ((_149139_t1 == _14978_t3)) {
					_1a4847c04_pushCycleError(_self_.ptr(), &((*(_149155_t2))._field_Ident), &((*(_14978_t3))._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a4842e74_catchTraitInheritCycle(_self_, _149139_t1, _14978_t3, _149172_message)))) {
					_1a4847c04_pushCycleError(_self_, &((*_149155_t2.alloc)._field_Ident), &((*_14978_t3.alloc)._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a831ecb0:;
			++it;
			goto _iter_begin_1a831ecb0;
		}
		_iter_end_1a831ecb0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a48432b5__checkTraitDeclInherits(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _151045_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_151045_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8323577:;
		if (it != expr_end) {
			jule::I32 _15128_i = it - expr->begin();
			jule::Ptr<_1a48dcbde_TypeSym> _151215_it = *it;
			{
				if ((!(_1a4837232_checkTypeSym(_self_, &(_151215_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1a8323577;
				};
				jule::Ptr<_1a4729476_Trait> _15178_t2 = _1a48d948d_Trait((*(_151215_it))._field_Type.ptr());;
				if ((_15178_t2 == nullptr)) {
					_1a482c2d2_pushErr(_self_, (*((*_151215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_151215_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1a8323577;
				};
				{
					auto expr = &((*((*(_151045_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8325403:;
					if (it != expr_end) {
						jule::I32 _15238_j = it - expr->begin();
						jule::Ptr<_1a48dcbde_TypeSym> _152311_it2 = *it;
						{
							if ((_15238_j >= _15128_i)) {
								goto _iter_end_1a8325403;
							};
							if ((((*(_152311_it2))._field_Type != nullptr) && _1a48d5c1a_Equal((*(_151215_it))._field_Type, (*_152311_it2.alloc)._field_Type))) {
								_1a482c2d2_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15178_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1a8325403;
							};
						}
						_iter_next_1a8325403:;
						++it;
						_15238_j++;
						goto _iter_begin_1a8325403;
					}
					_iter_end_1a8325403:;
				};
				if (((*(_151045_t)) == _15178_t2)) {
					_1a482c2d2_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1e71a80b0_Builder _15379_message = static__1e71a892e_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a4842e74_catchTraitInheritCycle(_self_, (*(_151045_t)), _15178_t2, &(_15379_message)));
					if ((_1e71a9dc5_Len(&_15379_message) > 0LL)) {
						jule::Str _154010_errMsg = _1e71a9941_Str(&_15379_message);;
						_1e71a9b3e_Clear(&_15379_message);
						_1a4847c04_pushCycleError(_self_, &((*((*(_151045_t))))._field_Ident), &((*(_15178_t2))._field_Ident), &(_15379_message));
						_154010_errMsg+=_1e71a9941_Str(&_15379_message);
						_1a482c2d2_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_154010_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1a8323577:;
			++it;
			_15128_i++;
			goto _iter_begin_1a8323577;
		}
		_iter_end_1a8323577:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a484356d_checkTraitDeclInherits(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _155144_t) {
	{
		auto expr = &((*((*(_155144_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8323d80:;
		if (it != expr_end) {
			jule::I32 _15528_i = it - expr->begin();
			jule::Ptr<_1a48dcbde_TypeSym> _155215_it = *it;
			{
				jule::Ptr<_1a4729476_Trait> _15538_t1 = _1a48d948d_Trait((*(_155215_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_155144_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a832ee46:;
					if (it != expr_end) {
						jule::I32 _15549_j = it - expr->begin();
						jule::Ptr<_1a48dcbde_TypeSym> _155416_it2 = *it;
						{
							if ((_15549_j == _15528_i)) {
								goto _iter_next_1a832ee46;
							};
							jule::Ptr<_1a4729476_Trait> _15589_t2 = _1a48d948d_Trait((*(_155416_it2))._field_Type);;
							{
								auto expr = &((*(_15538_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a83316d9:;
								if (it != expr_end) {
									jule::Ptr<_1a471dc62_Fn> _155917_t1m = *it;
									{
										jule::Ptr<_1a471dc62_Fn> _156010_t2m = _1a472a158_FindMethod(_15589_t2.ptr(), (*(_155917_t1m))._field_Ident);;
										if ((_156010_t2m == nullptr)) {
											goto _iter_next_1a83316d9;
										};
										jule::Ptr<_1a4721d20_FnIns> _15646_t1f = _1a483b654_getTraitCheckFnKind(_self_, &(_155917_t1m));;
										jule::Ptr<_1a4721d20_FnIns> _15656_t2f = _1a483b654_getTraitCheckFnKind(_self_, &(_156010_t2m));;
										if ((!(_1a4722cbb_equalTrait(_15646_t1f, &(_15656_t2f))))) {
											_1a482c2d2_pushErr(_self_, (*((*_155215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_155144_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15589_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a4723c01_GetKindStr(_15646_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1a4723c01_GetKindStr(_15656_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1a83316d9:;
									++it;
									goto _iter_begin_1a83316d9;
								}
								_iter_end_1a83316d9:;
							};
						}
						_iter_next_1a832ee46:;
						++it;
						_15549_j++;
						goto _iter_begin_1a832ee46;
					}
					_iter_end_1a832ee46:;
				};
			}
			_iter_next_1a8323d80:;
			++it;
			_15528_i++;
			goto _iter_begin_1a8323d80;
		}
		_iter_end_1a8323d80:;
	};
}



inline void _1a4843826_checkTraitDeclMethod(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _157642_f) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_157642_f))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a4640cd8_IsAnonIdent((*((*(_157642_f))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157642_f))))._field_sema=_self_;
	_1a48429bd_checkFnDeclPrototype(_self_, _157642_f);
	jule::Ptr<_1a4721d20_FnIns> _15847_ins = _1a4720505_instance((*(_157642_f)));;
	_1a483cea2_reloadFnInsTypes(_self_, _15847_ins);
	(*(_15847_ins))._field_reloaded=true;
	_1a4720813_appendInstance((*(_157642_f)).ptr(), &(_15847_ins));
}



inline void _1a4843ace_checkTraitDeclMethods(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _159043_t) {
	{
		auto expr = &((*((*(_159043_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8338d51:;
		if (it != expr_end) {
			jule::I32 _15918_i = it - expr->begin();
			jule::Ptr<_1a471dc62_Fn> _159115_f = *it;
			{
				_1a4843826_checkTraitDeclMethod(_self_, &(_159115_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a472a7da_findMethodInherit((*(_159043_t)).ptr(), &((*(_159115_f))._field_Ident)) != nullptr)) {
					_1a482c2d2_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1a8338d51;
				};
				_julec_label_1a833bbcd:;
				{
					auto expr = &((*((*(_159043_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a833c10c:;
					if (it != expr_end) {
						jule::I32 _16078_j = it - expr->begin();
						jule::Ptr<_1a471dc62_Fn> _160711_jf = *it;
						{
							{
								
								if ((_16078_j >= _15918_i)) {
									_case_begin_1a833cb9b:;
									{
										goto _iter_end_1a833c10c;
									}
								}
								else if (((*_159115_f.alloc)._field_Ident == (*(_160711_jf))._field_Ident)) {
									_case_begin_1a833cc34:;
									{
										_1a482c2d2_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1a833c10c;
									}
								}
								_match_end_1a833ca8b:;
							};
						}
						_iter_next_1a833c10c:;
						++it;
						_16078_j++;
						goto _iter_begin_1a833c10c;
					}
					_iter_end_1a833c10c:;
				};
			}
			_iter_next_1a8338d51:;
			++it;
			_15918_i++;
			goto _iter_begin_1a8338d51;
		}
		_iter_end_1a8338d51:;
	};
}



inline void _1a4843d87_checkTraitDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4729476_Trait>* _162636_t) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_162636_t))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a482cee7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162636_t))), &((*((*(_162636_t))))._field_Ident), false)) {
		_1a482c2d2_pushErr(_self_, (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162636_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a484356d_checkTraitDeclInherits(_self_, _162636_t);
	_1a4843ace_checkTraitDeclMethods(_self_, _162636_t);
}



inline jule::Bool _1a484411d_checkTraitDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8342e59:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _164015_t = *it;
			{
				_1a4843d87_checkTraitDecl(_self_, &(_164015_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a8342e59:;
			++it;
			goto _iter_begin_1a8342e59;
		}
		_iter_end_1a8342e59:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a4844519_checkTraitImplMethods(_1a48293cd_sema* _self_, jule::Ptr<_1a4729476_Trait>* _165042_base, jule::Ptr<_1a47c7425_Impl>* _165057_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165057_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834493e:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> *_165210_f = it;
			{
				if ((_1a472a158_FindMethod((*(_165042_base)).ptr(), (*((*(_165210_f))))._field_Ident) == nullptr)) {
					_1a482c2d2_pushErr(_self_, (*(*(_165210_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165042_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165210_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1a834493e:;
			++it;
			goto _iter_begin_1a834493e;
		}
		_iter_end_1a834493e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a4844915_implToStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _166134_dest, jule::Ptr<_1a47c7425_Impl>* _166154_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166154_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83472b0:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _166515_f = *it;
			{
				if (((_1a4674b74_FindMethod((*(_166134_dest)).ptr(), (*(_166515_f))._field_Ident, (*_166515_f.alloc)._field_Statically) != nullptr) || (_1a4675306_FindField((*(_166134_dest)).ptr(), (*_166515_f.alloc)._field_Ident) != nullptr))) {
					_1a482c2d2_pushErr(_self_.ptr(), (*_166515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166515_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1a83472b0;
				};
				if ((((*((*(_166134_dest))))._field_Generics.len() > 0LL) && ((*_166515_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166515_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a834a34b:;
						if (it != expr_end) {
							jule::Ptr<_1a4660874_GenericDecl> _167312_fg = *it;
							{
								{
									auto expr = &((*((*(_166134_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a834aca8:;
									if (it != expr_end) {
										jule::Ptr<_1a4660874_GenericDecl> _167413_dg = *it;
										{
											if (((*(_167312_fg))._field_Ident == (*(_167413_dg))._field_Ident)) {
												_1a482c2d2_pushErr(_self_, (*_167312_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a834aca8:;
										++it;
										goto _iter_begin_1a834aca8;
									}
									_iter_end_1a834aca8:;
								};
							}
							_iter_next_1a834a34b:;
							++it;
							goto _iter_begin_1a834a34b;
						}
						_iter_end_1a834a34b:;
					};
				};
				_1a482d35a_checkDirectives(_self_, &((*_166515_f.alloc)._field_Directives), jule::Any(_166515_f, &__jule_any_type10));
				(*_166515_f.alloc)._field_sema=_self_;
				(*_166515_f.alloc)._field_Owner=(*(_166134_dest));
				{ jule::Slice<jule::Ptr<_1a471dc62_Fn>> &__jule_push_dest = (*((*(_166134_dest))))._field_Methods; __jule_push_dest.push(_166515_f); };
			}
			_iter_next_1a83472b0:;
			++it;
			goto _iter_begin_1a83472b0;
		}
		_iter_end_1a83472b0:;
	};
	{
		auto expr = &((*((*(_166154_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834769a:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _169015_v = *it;
			{
				;
				if (((_1a4674b74_FindMethod((*(_166134_dest)).ptr(), (*(_169015_v))._field_Ident, true) != nullptr) || (_1a4674eb5_FindStatic((*(_166134_dest)).ptr(), (*_169015_v.alloc)._field_Ident) != nullptr))) {
					_1a482c2d2_pushErr(_self_, (*_169015_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169015_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1a834769a;
				};
				{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = (*((*(_166134_dest))))._field_Statics; __jule_push_dest.push(_169015_v); };
			}
			_iter_next_1a834769a:;
			++it;
			goto _iter_begin_1a834769a;
		}
		_iter_end_1a834769a:;
	};
	return __jule_func_result;;
}



inline void _1a4844bbd_implTrait(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a47c7425_Impl>* _170331_decl) {
	jule::Ptr<_1a48d54cd_Type> _17047_base_t = _1a4838321_selectType(_self_, &((*((*(_170331_decl))))._field_Base));;
	if ((_17047_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a4729476_Trait> _17087_base = _1a48d948d_Trait(_17047_base_t.ptr());;
	if ((_17087_base == nullptr)) {
		_1a482c2d2_pushErr(_self_, (*((*((*(_170331_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str(_17047_base_t.ptr()), &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a48d54cd_Type> _17157_destT = _1a4838321_selectType(_self_, &((*((*(_170331_decl))))._field_Dest));;
	if ((_17157_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a4676d30_StructIns> _17197_destS = _1a48d9207_Struct(_17157_destT.ptr());;
	if ((_17197_destS == nullptr)) {
		_1a482c2d2_pushErr(_self_, (*((*((*(_170331_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str(_17157_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4673ec5_Struct> _17267_dest = (*(_17197_destS))._field_Decl;;
	if ((_1a46444a1_Dir((*((*(_17267_dest))._field_Token))._field_File.ptr()) != _1a46444a1_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_170331_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1a4850da5_pushImplemented(_17087_base, &(_17267_dest));
	_1a4851191_pushImplements(&(_17267_dest), _17087_base);
	if (((*((*(_170331_decl))))._field_Statics.len() > 0LL)) {
		_1a482c2d2_pushErr(_self_, (*((*((*(_170331_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a4844519_checkTraitImplMethods(_self_, &(_17087_base), _170331_decl)))) {
			_case_begin_1a835ac41:;
		}
		else if ((!(_1a4844915_implToStruct(_self_, &(_17267_dest), _170331_decl)))) {
			_case_begin_1a835aca7:;
		}
		_match_end_1a8359c84:;
	};
}



inline void _1a4844e76_implStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a47c7425_Impl>* _174632_decl) {
	jule::Ptr<_1a48d54cd_Type> _17477_destT = _1a4838321_selectType(_self_, &((*((*(_174632_decl))))._field_Dest));;
	if ((_17477_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a4676d30_StructIns> _17517_destS = _1a48d9207_Struct(_17477_destT.ptr());;
	if ((_17517_destS == nullptr)) {
		_1a482c2d2_pushErr(_self_, (*((*((*(_174632_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str(_17477_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4673ec5_Struct> _17587_dest = (*(_17517_destS))._field_Decl;;
	if ((_1a46444a1_Dir((*((*(_17587_dest))._field_Token))._field_File.ptr()) != _1a46444a1_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_174632_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a4844915_implToStruct(_self_, &(_17587_dest), _174632_decl)))) {
			_case_begin_1a8361ab0:;
		}
		_match_end_1a8360174:;
	};
}



inline void _1a484522e_implImpl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a47c7425_Impl>* _177030_decl) {
	{
		
		if (_1a47c7821_IsTraitImpl((*(_177030_decl)).ptr())) {
			_case_begin_1a836264e:;
			{
				_1a4844bbd_implTrait(_self_, _177030_decl);
			}
		}
		else if (_1a47c7aa7_IsStructImpl((*(_177030_decl)).ptr())) {
			_case_begin_1a83626e8:;
			{
				_1a4844e76_implStruct(_self_, _177030_decl);
			}
		}
		_match_end_1a836252d:;
	};
}



inline void _1a4845592_checkVarDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _178134_decl, jule::Trait _178150_l) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_178134_decl))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a48535e4_IsTypeInferred((*(_178134_decl)).ptr())) {
		if ((!(_1a485335d_IsInitialized((*(_178134_decl)).ptr())))) {
			_1a482c2d2_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1a47ea3d2_ReferenceStack> _17918_refers = static_cast<jule::Ptr<_1a47ea3d2_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _178150_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4)) {
				_case_begin_1a836681d:;
				{
					_17918_refers=(*((*(_178134_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
				_case_begin_1a8366ce6:;
				{
					_17918_refers=_1a47d76bb_getOwnerRefers(_178150_l.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1a836690b:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1798:5"));;
				}
			}
			_match_end_1a8366895:;
		};
		(*((*((*(_178134_decl))))._field_TypeSym))._field_Type=_1a48376d8_checkTypeSymRefers(_self_, &((*(*((*(_178134_decl))))._field_TypeSym.alloc)._field_Decl), _178150_l, _17918_refers);
	};
	if ((*((*(_178134_decl))))._field_Reference) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1a482c2d2_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1a482c2d2_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a485335d_IsInitialized((*(_178134_decl)).ptr())))) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1a482c2d2_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1a482c2d2_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Reference) {
			_1a482c2d2_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a484584a_checkGlobalVarDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _182740_decl) {
	if (_1a482cee7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182740_decl))), &((*((*(_182740_decl))))._field_Ident), (*((*(_182740_decl))))._field_Binded)) {
		_1a482c2d2_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182740_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182740_decl))))._field_Binded && (*((*(_182740_decl))))._field_Constant)) {
		_1a482c2d2_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182740_decl))))._field_Binded)) && (!((*((*(_182740_decl))))._field_Constant))) && (!((*((*(_182740_decl))))._field_Statically)))) {
		_1a482c2d2_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1a482d35a_checkDirectives(_self_, &((*((*(_182740_decl))))._field_Directives), jule::Any((*(_182740_decl)), &__jule_any_type7));
	_1a4845592_checkVarDecl(_self_, _182740_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));
}



inline jule::Bool _1a4845ad1_checkGlobalDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a879a933:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _184515_decl = *it;
			{
				_1a484584a_checkGlobalVarDecl(_self_, &(_184515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a879a933:;
			++it;
			goto _iter_begin_1a879a933;
		}
		_iter_end_1a879a933:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a4845ecc_checkStructTraitImpl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _185542_strct, jule::Ptr<_1a4729476_Trait>* _185563_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185563_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a879c319:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _185615_tf = *it;
			{
				jule::Bool _18578_exist = false;;
				jule::Ptr<_1a471dc62_Fn> _18588_sf = _1a4674b74_FindMethod((*(_185542_strct)).ptr(), (*(_185615_tf))._field_Ident, (*_185615_tf.alloc)._field_Statically);;
				jule::Ptr<_1a4721d20_FnIns> _18594_tfK = _1a483b654_getTraitCheckFnKind(_self_, &(_185615_tf));;
				if ((_18588_sf != nullptr)) {
					jule::Ptr<_1a4721d20_FnIns> _18619_sfK = _1a483b654_getTraitCheckFnKind(_self_, &(_18588_sf));;
					if ((_18619_sfK != nullptr)) {
						_18578_exist=_1a4722cbb_equalTrait(_18594_tfK, &(_18619_sfK));
					};
				};
				if (_18578_exist) {
					jule::Ptr<_1a4652a86_Directive> _18675_d = _1a48cbc55_findDirective(&((*_18588_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18675_d != nullptr)) {
						_1a482c2d2_pushErr(_self_, (*_18675_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a482c2d2_pushErr(_self_, (*((*(_185542_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185563_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a4723c01_GetKindStr(_18594_tfK, true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1a879c319:;
			++it;
			goto _iter_begin_1a879c319;
		}
		_iter_end_1a879c319:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a484631d_checkStructImpls(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _188138_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188138_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87a372c:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _188315_trt = *it;
			{
				__jule_func_result=(_1a4845ecc_checkStructTraitImpl(_self_, _188138_s, &(_188315_trt)) && __jule_func_result);
			}
			_iter_next_1a87a372c:;
			++it;
			goto _iter_begin_1a87a372c;
		}
		_iter_end_1a87a372c:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a484665e_checkStructFields(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _188939_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188939_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87a4bc3:;
		if (it != expr_end) {
			jule::Ptr<_1a46710d2_Field> _189115_f = *it;
			{
				(*(_189115_f))._field_Owner=(*(_188939_st));
				{
					auto expr = &((*((*(_188939_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a87a58e9:;
					if (it != expr_end) {
						jule::Ptr<_1a46710d2_Field> _189311_cf = *it;
						{
							if ((_189115_f == _189311_cf)) {
								goto _iter_end_1a87a58e9;
							} else if (((*_189115_f.alloc)._field_Ident == (*(_189311_cf))._field_Ident)) {
								_1a482c2d2_pushErr(_self_.ptr(), (*_189115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_189115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a87a58e9:;
						++it;
						goto _iter_begin_1a87a58e9;
					}
					_iter_end_1a87a58e9:;
				};
			}
			_iter_next_1a87a4bc3:;
			++it;
			goto _iter_begin_1a87a4bc3;
		}
		_iter_end_1a87a4bc3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a4846917_checkStructDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _190637_s) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_190637_s))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a482cee7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190637_s))), &((*((*(_190637_s))))._field_Ident), (*((*(_190637_s))))._field_Binded)) {
		_1a482c2d2_pushErr(_self_, (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190637_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a482d35a_checkDirectives(_self_, &((*((*(_190637_s))))._field_Directives), jule::Any((*(_190637_s)), &__jule_any_type9));
	{
		
		if ((!(_1a4841c42_checkDeclGenerics(_self_, &((*((*(_190637_s))))._field_Generics))))) {
			_case_begin_1a87aacc8:;
		}
		else if ((!(_1a484665e_checkStructFields(_self_, _190637_s)))) {
			_case_begin_1a87aad3e:;
		}
		else if ((!(_1a484631d_checkStructImpls(_self_, _190637_s)))) {
			_case_begin_1a87aada5:;
		}
		else if ((!(_1a4847550_checkFuncDeclsBy(_self_, &((*((*(_190637_s))))._field_Methods))))) {
			_case_begin_1a87aae1b:;
		}
		_match_end_1a87aab96:;
	};
}



inline jule::Bool _1a4846b9d_checkStructDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87ad270:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _192615_s = *it;
			{
				_1a4846917_checkStructDecl(_self_, &(_192615_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a87ad270:;
			++it;
			goto _iter_begin_1a87ad270;
		}
		_iter_end_1a87ad270:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a4846e56_checkAnonFuncDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _193639_f) {
	(*((*(_193639_f))))._field_sema=_self_;
	_1a48429bd_checkFnDeclPrototype(_self_, _193639_f);
}



inline void _1a484720e_checkFuncDecl(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _194135_f) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_194135_f))))._field_Ident)) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a471ec52_IsAnon((*(_194135_f)).ptr())) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1a482d35a_checkDirectives(_self_, &((*((*(_194135_f))))._field_Directives), jule::Any((*(_194135_f)), &__jule_any_type10));
	_1a4846e56_checkAnonFuncDecl(_self_, _194135_f);
	if ((((*((*(_194135_f))))._field_Owner == nullptr) && _1a482cee7_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_194135_f))), &((*((*(_194135_f))))._field_Ident), (*((*(_194135_f))))._field_Binded))) {
		if ((*((*(_194135_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a471dc62_Fn> _19535_init = _1a482a995_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19535_init != nullptr)) {
				return;;
			};
		};
		_1a482c2d2_pushErr(_self_, (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194135_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a4847550_checkFuncDeclsBy(jule::Ptr<_1a48293cd_sema> _self_, jule::Slice<jule::Ptr<_1a471dc62_Fn>>* _196338_funcs) {
	{
		auto expr = _196338_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87b5b7e:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _196415_f = *it;
			{
				_1a484720e_checkFuncDecl(_self_, &(_196415_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a87b5b7e:;
			++it;
			goto _iter_begin_1a87b5b7e;
		}
		_iter_end_1a87b5b7e:;
	};
	return true;;
}



inline jule::Bool _1a48477d6_checkFuncDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a4847550_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a4847c04_pushCycleError(_1a48293cd_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _1e71a80b0_Builder* _197953_message) {
	;
	jule::Str _19813_refersTo = _1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_197927_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_197938_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19823_m = _1e71a9941_Str(_197953_message);;
	({
		auto except = _1e71a90b1_WriteStr(_197953_message, _1ce783d13_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1983:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_197953_message, _19813_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1984:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_197953_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1985:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_197953_message, _19823_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1986:3"));
		(except.result);
	});
}



inline void _1a48483a8_checkPackageDecls(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87bc966:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _200615_f = *it;
			{
				_1a482bdb4_setCurrentFile(_self_.ptr(), _200615_f);
				if ((!(_1a483eb63_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a87bc966:;
			++it;
			goto _iter_begin_1a87bc966;
		}
		_iter_end_1a87bc966:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87bcdea:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _201315_f = *it;
			{
				_1a482bdb4_setCurrentFile(_self_, _201315_f);
				if ((!(_1a484411d_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a87bcdea:;
			++it;
			goto _iter_begin_1a87bcdea;
		}
		_iter_end_1a87bcdea:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87bde0c:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _202015_f = *it;
			{
				_1a482bdb4_setCurrentFile(_self_, _202015_f);
				if ((!(_1a4845ad1_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a87bde0c:;
			++it;
			goto _iter_begin_1a87bde0c;
		}
		_iter_end_1a87bde0c:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87bee63:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _202715_f = *it;
			{
				_1a482bdb4_setCurrentFile(_self_, _202715_f);
				{
					
					if ((!(_1a48477d6_checkFuncDecls(_self_)))) {
						_case_begin_1a87c15b3:;
					}
					else if ((!(_1a4846b9d_checkStructDecls(_self_)))) {
						_case_begin_1a87c165c:;
					}
					else {
						_case_begin_1a87c100d:;
						{
							goto _iter_next_1a87bee63;
						}
					}
					_match_end_1a87c1519:;
				};
				return;;
			}
			_iter_next_1a87bee63:;
			++it;
			goto _iter_begin_1a87bee63;
		}
		_iter_end_1a87bee63:;
	};
}



inline void _1a484871b_checkDataForTypeInference(_1a48293cd_sema* _self_, jule::Ptr<_1a48a2753_Data>* _203942_d, jule::Ptr<_1a463d137_Token>* _203953_errToken) {
	{
		
		if (_1a48a2b71_IsNil((*(_203942_d)).ptr())) {
			_case_begin_1a87c275c:;
			{
				_1a482c2d2_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1a48a2e07_IsVoid((*(_203942_d)).ptr())) {
			_case_begin_1a87c2806:;
			{
				_1a482c2d2_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_203942_d))))._field_Type))._field_Variadic) {
			_case_begin_1a87c286c:;
			{
				_1a482c2d2_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a87c262a:;
	};
}



inline void _1a48489c4_checkVarValue(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _205135_v) {
	if (_1a48535e4_IsTypeInferred((*(_205135_v)).ptr())) {
		(*((*(_205135_v))))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Type});
		_1a484871b_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a483ddb5_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*((*((*(_205135_v))))._field_TypeSym))._field_Type), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a48e4e16_Arr> _20648_arr = _1a48d8954_Arr((*((*((*(_205135_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_20648_arr != nullptr)) {
			if ((*_20648_arr.alloc)._field_Auto) {
				jule::Ptr<_1a48e4e16_Arr> _20676_dataArr = _1a48d8954_Arr((*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_20676_dataArr != nullptr)) {
					(*_20648_arr.alloc)._field_N=(*_20676_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a4839630_checkAssignType(_self_, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_205135_v))))._field_Refers)) {
			_1a483ddb5_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_205135_v))))._field_Reference && (!(_1a49023da_isValidForRef(&((*((*((*(_205135_v))))._field_TypeSym))._field_Type)))))) {
		_1a482c2d2_pushErr(_self_.ptr(), (*((*(_205135_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	};
	if ((*((*(_205135_v))))._field_Constant) {
		if (((!(_1a48a318d_IsConst((*((*((*(_205135_v))))._field_Value))._field_Data.ptr()))) && (!(_1a48d9c41_comptime((*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1a482c2d2_pushErr(_self_, (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a48d99aa_Tup((*((*((*(_205135_v))))._field_TypeSym))._field_Type) != nullptr)) {
		(*(*((*(_205135_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1a4848d37_evalVarValue(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _210434_decl, jule::Trait _210450_l) {
	if ((!(_1a485335d_IsInitialized((*(_210434_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a48a447a_eval> _21097_eval = static_cast<jule::Ptr<_1a48a447a_eval>>(nullptr);;
	if (((*((*(_210434_decl))))._field_TypeSym != nullptr)) {
		_21097_eval=_1a48387c7_evalpd(_self_, _210450_l, (*(*((*(_210434_decl))))._field_TypeSym.alloc)._field_Type, (*(_210434_decl)));
	} else {
		_21097_eval=_1a48387c7_evalpd(_self_, _210450_l, nullptr, (*(_210434_decl)));
	};
	(*(_21097_eval))._field_immutable=(!((*((*(_210434_decl))))._field_Mutable));
	(*((*((*(_210434_decl))))._field_Value))._field_Data=_1a48c32e0_evalExpr(_21097_eval, (*(*((*(_210434_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a484919a_checkVar(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4852e51_Var>* _212130_decl, jule::Trait _212146_l) {
	_1a4848d37_evalVarValue(_self_, _212130_decl, _212146_l);
	if (((*((*((*(_212130_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a48489c4_checkVarValue(_self_, _212130_decl);
}



inline void _1a4849398_checkGlobals(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87d9bd6:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _213115_decl = *it;
			{
				if (((*(_213115_decl))._field_Binded || (*_213115_decl.alloc)._field_Used)) {
					goto _iter_next_1a87d9bd6;
				};
				_1a484919a_checkVar(_self_, &(_213115_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));
			}
			_iter_next_1a87d9bd6:;
			++it;
			goto _iter_begin_1a87d9bd6;
		}
		_iter_end_1a87d9bd6:;
	};
}



inline jule::Ptr<_1a4721d20_FnIns> _1a4849794_readyToCheckFn(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _214436_s, jule::Ptr<_1a471dc62_Fn>* _214456_f) {
	jule::Ptr<_1a4721d20_FnIns> _21457_ins = _1a4720505_instance((*(_214456_f)));;
	if (((*((*(_214456_f))))._field_Instances.len() != 0LL)) {
		return _21457_ins;;
	};
	(*(_21457_ins))._field_Owner=(*(_214436_s));
	_1a4720813_appendInstance((*(_214456_f)).ptr(), &(_21457_ins));
	(*_21457_ins.alloc)._field_reloaded=true;
	if (_1a483cea2_reloadFnInsTypes(_self_, _21457_ins)) {
		return _21457_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a4849b90_checkGenericFn(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _216036_f, jule::Ptr<_1a463d137_Token>* _216052_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1a483cea2_reloadFnInsTypes(_self_, (*(_216036_f)));
	(*((*(_216036_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4721d20_FnIns> _21667_existInstance = _1a4720813_appendInstance((*((*(_216036_f))))._field_Decl.ptr(), _216036_f);;
	if ((!(_1a483bb0a_checkConstraintsFn(_self_, _216036_f, _216052_et, _21667_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21667_existInstance != nullptr)) {
		(*(_216036_f))=_21667_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1a484c6ed_checkFnInsCaller(_self_, _216036_f, (*(_216052_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1a484a003_checkTypeMethod(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _218337_s, jule::Ptr<_1a471dc62_Fn>* _218357_f) {
	if (((*((*(_218357_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a4721d20_FnIns> _21887_ins = (*((*(_218357_f))))._field_Instances[0LL];;
	if (((*((*(_21887_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a484c9a6_checkFnIns(_self_, &(_21887_ins));
}



inline jule::Ptr<_1a4721d20_FnIns> _1a484a4a9_checkStructInsOp(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _219638_s, jule::Ptr<_1a471dc62_Fn>* _219658_f, jule::Fn<jule::Bool,jule::Ptr<_1a471dc62_Fn>> _219666_p) {
	if (((((*(_219658_f)) == nullptr) || ((*((*(_219658_f))))._field_Generics.len() > 0LL)) || (!(_219666_p((*(_219658_f))))))) {
		return nullptr;;
	};
	return (*((*(_219658_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a484a8a5_checkStructEnv(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _220636_s, jule::Ptr<_1a463d137_Token> _220655_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a48e78ca_typeChecker _22077_tc = _1a48e78ca_typeChecker{._field_s=(*((*((*(_220636_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220636_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220636_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1a48e68da_referencer>(_1a48e68da_referencer{._field_ident=(*(*((*(_220636_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220636_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220636_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220636_s))))._field_Generics.len() > 0LL)) {
		_22077_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>::alloc(0LL, (*((*(_220636_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d46db_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220636_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a87e86d9:;
			if (it != expr_end) {
				jule::I32 _22209_i = it - expr->begin();
				jule::Ptr<_1a48d3ae7_InsGeneric> _222016_g = *it;
				{
					jule::Ptr<_1a4660874_GenericDecl> _22219_decl = (*(*((*(_220636_s))))._field_Decl.alloc)._field_Generics[_22209_i];;
					{ jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> &__jule_push_dest = _22077_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a48d46db_TypeAlias>(_1a48d46db_TypeAlias{._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22219_decl.alloc)._field_Token, ._field_Ident=(*(_22219_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_222016_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1a87e86d9:;
				++it;
				_22209_i++;
				goto _iter_begin_1a87e86d9;
			}
			_iter_end_1a87e86d9:;
		};
	};
	jule::Ptr<_1a4725065_SymTab> _22307_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a482bdb4_setCurrentFile(_self_, _22307_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220636_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a4725065_SymTab> _22348_file = _1a4828047_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220636_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22348_file != nullptr)) {
			_1a482bdb4_setCurrentFile(_self_, _22348_file);
		};
	};
	if (((*((*(_220636_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a47c5126_constraintChecker> _22418_cc = _1a4836d36_constraintChecker(_self_);;
		(*(_22418_cc))._field_et=_220655_errorToken;
		(*_22418_cc.alloc)._field_si=(*(_220636_s));
		(*_22418_cc.alloc)._field_genericsA=_22077_tc._field_useGenerics;
		(*_22418_cc.alloc)._field_uniq=true;
		if ((!(_1a47c608e_check(_22418_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220636_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _22548_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22077_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220636_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a88021b5:;
			if (it != expr_end) {
				jule::Ptr<_1a4852e51_Var> _225616_v = *it;
				{
					_1a4845592_checkVarDecl(_self_, &(_225616_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));
					_1a484919a_checkVar(_self_, &(_225616_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22548_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a88021b5:;
				++it;
				goto _iter_begin_1a88021b5;
			}
			_iter_end_1a88021b5:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22077_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a48a447a_eval> _22677_eval = _1a4839014_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));;
	(*((*(_220636_s))))._field_Comparable=(!((*(*((*(_220636_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220636_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8805b7a:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> _226915_f = *it;
			{
				jule::Ptr<_1a48d54cd_Type> _22708_kind = _1a49004b5_checkDecl(&_22077_tc, &((*((*((*(_226915_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_22708_kind != nullptr) && __jule_func_result);
				if ((_22708_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220636_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220636_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220636_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220636_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1a8805b7a;
				};
				(*_226915_f.alloc)._field_Type=_22708_kind;
				(*((*(_220636_s))))._field_Mutable=((*((*(_220636_s))))._field_Mutable || ((!((*(*(_226915_f))._field_Decl.alloc)._field_Mutable)) && _1a48d6db4_Mutable((*(_226915_f))._field_Type)));
				(*((*(_220636_s))))._field_Comparable=((*((*(_220636_s))))._field_Comparable && _1a48d6b2d_Comparable((*(_226915_f))._field_Type));
				if (((*(*(_226915_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a8805b7a;
				};
				(*(_22677_eval))._field_prefix=(*_226915_f.alloc)._field_Type;
				(*_22677_eval.alloc)._field_field=_226915_f;
				(*_226915_f.alloc)._field_Default=_1a48c32e0_evalExpr(_22677_eval, (*(*(_226915_f))._field_Decl.alloc)._field_Default);
				if (((*_226915_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a8805b7a;
				};
				;
				_1a4839630_checkAssignType(_self_, false, &((*_226915_f.alloc)._field_Type), &((*_226915_f.alloc)._field_Default), (*((*(*(_226915_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220636_s))))._field_Refers);
			}
			_iter_next_1a8805b7a:;
			++it;
			goto _iter_begin_1a8805b7a;
		}
		_iter_end_1a8805b7a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a484aca1_precheckStructIns(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _230339_s, jule::Ptr<_1a463d137_Token> _230358_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a484a8a5_checkStructEnv(_self_, _230339_s, _230358_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_230339_s))))._field_Comparable && ((*((*(_230339_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1a471dc62_Fn> _23148_decl = _1a4319a4a_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_230339_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8811a21:;
			if (it != expr_end) {
				jule::Ptr<_1a4676280_FieldIns> _231516_field = *it;
				{
					jule::Ptr<_1a48e4e16_Arr> _23169_arr = _1a48d8954_Arr((*(_231516_field))._field_Type.ptr());;
					if ((_23169_arr == nullptr)) {
						goto _iter_next_1a8811a21;
					};
					jule::Ptr<_1a4721d20_FnIns> _23209_f = _1a472026e_instanceForce(_23148_decl);;
					(*(_23209_f))._field_Generics=jule::append((*_23209_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=(*(_23169_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4849b90_checkGenericFn(_self_, &(_23209_f), &((*((*_231516_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2324:6"));;
					};
					_1a47eb1b3_Push((*((*(_230339_s))))._field_Refers.ptr(), jule::Any(_23209_f, &__jule_any_type63));
				}
				_iter_next_1a8811a21:;
				++it;
				goto _iter_begin_1a8811a21;
			}
			_iter_end_1a8811a21:;
		};
	};
	{
		auto expr = &((*((*(_230339_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8815a9c:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _233015_f = *it;
			{
				if (((*(_233015_f))._field_Generics.len() == 0LL)) {
					if ((_1a4849794_readyToCheckFn(_self_, _230339_s, &(_233015_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a8815a9c:;
			++it;
			goto _iter_begin_1a8815a9c;
		}
		_iter_end_1a8815a9c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a484b059_checkStructIns(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns>* _234036_s) {
	{
		auto expr = &((*((*(_234036_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8817571:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _234115_f = *it;
			{
				_1a484a003_checkTypeMethod(_self_, _234036_s, &(_234115_f));
			}
			_iter_next_1a8817571:;
			++it;
			goto _iter_begin_1a8817571;
		}
		_iter_end_1a8817571:;
	};
}



inline void _1a484b312_checkTypeStruct(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _234637_s) {
	if ((*((*(_234637_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234637_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8819078:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _235915_ins = *it;
			{
				_1a484b059_checkStructIns(_self_, &(_235915_ins));
			}
			_iter_next_1a8819078:;
			++it;
			goto _iter_begin_1a8819078;
		}
		_iter_end_1a8819078:;
	};
}



inline void _1a484b510_checkStructTypes(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a881a024:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _236515_s = *it;
			{
				_1a484b312_checkTypeStruct(_self_, &(_236515_s));
			}
			_iter_next_1a881a024:;
			++it;
			goto _iter_begin_1a881a024;
		}
		_iter_end_1a881a024:;
	};
}



inline void _1a484b7b8_checkStructInsOperators(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4676d30_StructIns> _237044_s) {
	{
		auto expr = &((*(_237044_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a881aeae:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _237115_m = *it;
			{
				{
					auto &_match_expr{ (*(_237115_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1a881b641:;
						{
							(*(_237044_s))._field_Operators._field_Eq=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4854a57_Eq);
							(*_237044_s.alloc)._field_Comparable=((*_237044_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1a881bc3a:;
						{
							(*(_237044_s))._field_Operators._field_Gt=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4854d21_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1a881bca1:;
						{
							(*(_237044_s))._field_Operators._field_GtEq=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48550da_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1a881bd17:;
						{
							(*(_237044_s))._field_Operators._field_Lt=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48553a4_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1a881bd7d:;
						{
							(*(_237044_s))._field_Operators._field_LtEq=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485566d_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1a881be05:;
						{
							(*(_237044_s))._field_Operators._field_Shl=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4855cab_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1a881be7c:;
						{
							(*(_237044_s))._field_Operators._field_Shr=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4856075_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1a881c004:;
						{
							(*(_237044_s))._field_Operators._field_Add=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485633e_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1a881c07b:;
						{
							(*(_237044_s))._field_Operators._field_Sub=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4856608_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1a881c103:;
						{
							(*(_237044_s))._field_Operators._field_Div=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48568c2_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1a881c17a:;
						{
							(*(_237044_s))._field_Operators._field_Mul=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4856b8b_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1a881c202:;
						{
							(*(_237044_s))._field_Operators._field_Mod=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4856e55_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1a881c279:;
						{
							(*(_237044_s))._field_Operators._field_BitAnd=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485721e_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1a881c301:;
						{
							(*(_237044_s))._field_Operators._field_BitOr=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48574d8_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1a881c378:;
						{
							(*(_237044_s))._field_Operators._field_BitXor=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48577a2_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1a881c400:;
						{
							(*(_237044_s))._field_Operators._field_Neg=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4857de0_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1a881c477:;
						{
							(*(_237044_s))._field_Operators._field_Pos=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48581a9_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1a881c4ee:;
						{
							(*(_237044_s))._field_Operators._field_BitNot=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4858473_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1a881c576:;
						{
							(*(_237044_s))._field_Operators._field_AddAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4858ab1_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1a881c5ed:;
						{
							(*(_237044_s))._field_Operators._field_SubAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4858d7a_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1a881c675:;
						{
							(*(_237044_s))._field_Operators._field_DivAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4859144_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1a881c6ec:;
						{
							(*(_237044_s))._field_Operators._field_MulAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485940d_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1a881c774:;
						{
							(*(_237044_s))._field_Operators._field_ModAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a48596c7_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1a881c7eb:;
						{
							(*(_237044_s))._field_Operators._field_ShlAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4859991_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1a881c873:;
						{
							(*(_237044_s))._field_Operators._field_ShrAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a4859c5a_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1a881c8ea:;
						{
							(*(_237044_s))._field_Operators._field_BitOrAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485a024_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1a881c972:;
						{
							(*(_237044_s))._field_Operators._field_BitAndAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485a2dd_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1a881c9e9:;
						{
							(*(_237044_s))._field_Operators._field_BitXorAssign=_1a484a4a9_checkStructInsOp(_self_, &(_237044_s), &(_237115_m), static__1a485a5a7_BitXorAssign);
						}
					}
					_match_end_1a881b91b:;
				};
			}
			_iter_next_1a881aeae:;
			++it;
			goto _iter_begin_1a881aeae;
		}
		_iter_end_1a881aeae:;
	};
}



inline void _1a484ba71_precheckStructType(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4673ec5_Struct>* _243440_s) {
	if ((*((*(_243440_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243440_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_243440_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a4676d30_StructIns> _24458_ins = _1a467446a_instance((*(_243440_s)));;
		(*(_24458_ins))._field_Checked=true;
		_1a4674778_appendInstance((*(_243440_s)).ptr(), &(_24458_ins));
		jule::Bool _24484_ok = _1a484aca1_precheckStructIns(_self_, &(_24458_ins), nullptr);;
		if ((!(_24484_ok))) {
			return;;
		};
	};
	_1a484b7b8_checkStructInsOperators(_self_, (*((*(_243440_s))))._field_Instances[0LL]);
}



inline void _1a484bc6e_precheckStructTypes(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88341a3:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _245815_s = *it;
			{
				_1a484ba71_precheckStructType(_self_, &(_245815_s));
			}
			_iter_next_1a88341a3:;
			++it;
			goto _iter_begin_1a88341a3;
		}
		_iter_end_1a88341a3:;
	};
}



inline void _1a484c027_checkRets(_1a48293cd_sema* _self_, jule::Ptr<_1a4721d20_FnIns>* _246330_f) {
	if (_1a471e218_IsVoid((*((*(_246330_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a484e469_missingRetChecker _24673_mrc = static__1a484e865_new();;
	jule::Bool _24683_ok = _1a4850a42_check(&_24673_mrc, (*((*(_246330_f))))._field_Scope);;
	if ((!(_24683_ok))) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_246330_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1a484c38a_checkFnInsSc(_1a48293cd_sema* _self_, jule::Ptr<_1a4721d20_FnIns>* _247433_f, jule::Ptr<_1a47d3cc2_scopeChecker>* _247449_sc) {
	_1a48275a7_appendRetVars(&((*((*((*(_247449_sc))))._field_table))._field_Vars), _247433_f);
	_1a48278d7_appendParamVars(&((*(*((*(_247449_sc))))._field_table.alloc)._field_Vars), _247433_f);
	_1a4827bc3_appendGenericTypeAliases(&((*(*((*(_247449_sc))))._field_table.alloc)._field_TypeAliases), _247433_f);
	_1a47e5e49_check((*(_247449_sc)), &((*((*((*(_247433_f))))._field_Decl))._field_Scope), &((*((*(_247433_f))))._field_Scope));
	if ((!(_1a47d68c9_stopped((*(_247449_sc)).ptr())))) {
		_1a484c027_checkRets(_self_, _247433_f);
	};
}



inline void _1a484c6ed_checkFnInsCaller(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _248738_f, jule::Ptr<_1a463d137_Token> _248753_caller) {
	if ((*((*((*(_248738_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a4725065_SymTab> _24927_old = (*((*(*((*(_248738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a482bdb4_setCurrentFile((*((*((*(_248738_f))))._field_Decl))._field_sema, _24927_old);
	});;
	jule::Ptr<_1a4725065_SymTab> _24947_file = _1a4828047_findFile(&((*(*((*((*(_248738_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24947_file != nullptr)) {
		_1a482bdb4_setCurrentFile((*((*((*(_248738_f))))._field_Decl))._field_sema, _24947_file);
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _24997_sc = _1a47c9856_newScopeChecker(&((*(*((*(_248738_f))))._field_Decl.alloc)._field_sema), (*(_248738_f)));;
	(*(_24997_sc))._field_calledFrom=_248753_caller;
	_1a484c38a_checkFnInsSc(_self_.ptr(), _248738_f, &(_24997_sc));
	if (((*(*((*(_248738_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_248738_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_248738_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a484c9a6_checkFnIns(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a4721d20_FnIns>* _250932_f) {
	_1a484c6ed_checkFnInsCaller(_self_, _250932_f, nullptr);
}



inline void _1a484cc5e_checkFunc(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _251331_f) {
	if ((*((*(_251331_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251331_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_251331_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88427dd:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _252315_ins = *it;
			{
				_1a484c9a6_checkFnIns(_self_, &(_252315_ins));
			}
			_iter_next_1a88427dd:;
			++it;
			goto _iter_begin_1a88427dd;
		}
		_iter_end_1a88427dd:;
	};
}



inline void _1a484d017_checkTestFn(_1a48293cd_sema* _self_, jule::Ptr<_1a4721d20_FnIns>* _252832_f) {
	if ((*((*((*(_252832_f))))._field_Decl))._field_Public) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_252832_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a471e218_IsVoid((*((*(_252832_f))))._field_Decl)))) || ((*(*((*(_252832_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_252832_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_252832_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_252832_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a48e2122_Sptr> _25467_sptr = _1a48d7e1a_Sptr((*((*((*(_252832_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25467_sptr == nullptr)) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4676d30_StructIns> _25533_s = _1a48d9207_Struct((*(_25467_sptr))._field_Elem.ptr());;
	if (((_25533_s == nullptr) || (!(_1a4812130_isStdPackage(&((*((*((*((*(_25533_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a482c2d2_pushErr(_self_, (*(*((*(_252832_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a482c645_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a484d2c0_precheckFunc(jule::Ptr<_1a48293cd_sema> _self_, jule::Ptr<_1a471dc62_Fn>* _256134_f) {
	if ((*((*(_256134_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_256134_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_256134_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a4721d20_FnIns> _25728_ins = _1a472026e_instanceForce((*(_256134_f)));;
		{ jule::Slice<jule::Ptr<_1a4721d20_FnIns>> &__jule_push_dest = (*((*(_256134_f))))._field_Instances; __jule_push_dest.push(_25728_ins); };
		jule::Bool _25744_ok = _1a483cea2_reloadFnInsTypes(_self_, _25728_ins);;
		(*(_25728_ins))._field_reloaded=true;
		if ((_25744_ok && _1a4901a49_hasDirective(&((*((*(_256134_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1a484d017_checkTestFn(_self_, &(_25728_ins));
		};
	};
}



inline void _1a484d4bd_precheckFuncs(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8851533:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _258515_decl = *it;
			{
				{
					auto expr = &((*(_258515_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8851e90:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _258616_m = *it;
						{
							_1a484d2c0_precheckFunc(_self_, &(_258616_m));
						}
						_iter_next_1a8851e90:;
						++it;
						goto _iter_begin_1a8851e90;
					}
					_iter_end_1a8851e90:;
				};
			}
			_iter_next_1a8851533:;
			++it;
			goto _iter_begin_1a8851533;
		}
		_iter_end_1a8851533:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8852336:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _259015_decl = *it;
			{
				_1a484d2c0_precheckFunc(_self_, &(_259015_decl));
			}
			_iter_next_1a8852336:;
			++it;
			goto _iter_begin_1a8852336;
		}
		_iter_end_1a8852336:;
	};
}



inline void _1a484d6bb_checkFuncs(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8853777:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _259715_decl = *it;
			{
				_1a484cc5e_checkFunc(_self_, &(_259715_decl));
			}
			_iter_next_1a8853777:;
			++it;
			goto _iter_begin_1a8853777;
		}
		_iter_end_1a8853777:;
	};
}



inline void _1a484d8b9_checkPackageTypes(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8854569:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _260515_f = *it;
			{
				_1a482bdb4_setCurrentFile(_self_.ptr(), _260515_f);
				_1a4849398_checkGlobals(_self_);
				_1a484d4bd_precheckFuncs(_self_);
				_1a484bc6e_precheckStructTypes(_self_);
			}
			_iter_next_1a8854569:;
			++it;
			goto _iter_begin_1a8854569;
		}
		_iter_end_1a8854569:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88560e8:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _261615_f = *it;
			{
				_1a482bdb4_setCurrentFile(_self_, _261615_f);
				_1a484d6bb_checkFuncs(_self_);
				_1a484b510_checkStructTypes(_self_);
			}
			_iter_next_1a88560e8:;
			++it;
			goto _iter_begin_1a88560e8;
		}
		_iter_end_1a88560e8:;
	};
}



inline void _1a484dab7_setFileSemaFields(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88576c1:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _262415_f = *it;
			{
				(*(_262415_f))._field_sema=_self_;
			}
			_iter_next_1a88576c1:;
			++it;
			goto _iter_begin_1a88576c1;
		}
		_iter_end_1a88576c1:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a885833c:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _262715_st = *it;
			{
				(*(_262715_st))._field_sema=_self_;
			}
			_iter_next_1a885833c:;
			++it;
			goto _iter_begin_1a885833c;
		}
		_iter_end_1a885833c:;
	};
}



inline void _1a484dcb5_setSemaFields(jule::Ptr<_1a48293cd_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a885900d:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _263315_file = *it;
			{
				_1a482bdb4_setCurrentFile(_self_.ptr(), _263315_file);
				_1a484dab7_setFileSemaFields(_self_);
			}
			_iter_next_1a885900d:;
			++it;
			goto _iter_begin_1a885900d;
		}
		_iter_end_1a885900d:;
	};
}



inline void _1a484e06d_check(jule::Ptr<_1a48293cd_sema> _self_, jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _263927_files) {
	(*(_self_))._field_files=(*(_263927_files));
	_1a484dcb5_setSemaFields(_self_);
	_1a48301c5_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a4830bba_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a48305c1_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a48307be_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a48483a8_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a484d8b9_checkPackageTypes(_self_);
}







inline _1a484e469_missingRetChecker static__1a484e865_new(void) {
	return _1a484e469_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1a484eb73_checkConditional(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47cc66c_Conditional> _268732_c) {
	{
		auto expr = &((*(_268732_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a885e695:;
		if (it != expr_end) {
			jule::Ptr<_1a47cbe52_If> _268815_elif = *it;
			{
				if ((_268815_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a4850701_checkScope(_self_, (*(_268815_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a885e695:;
			++it;
			goto _iter_begin_1a885e695;
		}
		_iter_end_1a885e695:;
	};
	return (((*_268732_c.alloc)._field_Default != nullptr) && _1a4850701_checkScope(_self_, (*(*(_268732_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a484eeb4_checkMatch(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47d1264_Match> _269926_m) {
	{
		auto expr = &((*(_269926_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8861763:;
		if (it != expr_end) {
			jule::Ptr<_1a47d1c8c_Case> _270015_c = *it;
			{
				if ((_270015_c == nullptr)) {
					return false;;
				};
				jule::I32 _27044_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27054_ok = _1a4850701_checkScope(_self_, (*(_270015_c))._field_Scope);;
				{
					
					if ((_27044_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a8863237:;
						{
							return false;;
						}
					}
					else if ((!(_27054_ok))) {
						_case_begin_1a88632c0:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a8863336;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a8863336:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_270015_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a8861763;
						}
					}
					_match_end_1a88631c1:;
				};
			}
			_iter_next_1a8861763:;
			++it;
			goto _iter_begin_1a8861763;
		}
		_iter_end_1a8861763:;
	};
	return (((*_269926_m.alloc)._field_Default != nullptr) && _1a4850701_checkScope(_self_, (*(*(_269926_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a48503b0_checkInfIter(_1a484e469_missingRetChecker* _self_, jule::Uintptr _272524_it, jule::Ptr<_1a47cba34_Scope>* _272542_s) {
	jule::I32 _27263_n = (*(_self_))._field_breaked.len();;
	if (_1a4850701_checkScope(_self_, (*(_272542_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27263_n);;
		return true;;
	};
	if ((_27263_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27263_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a8866b75:;
			if (it != expr_end) {
				jule::Uintptr _273211_addr = *it;
				{
					if ((_272524_it == _273211_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27263_n);;
						return false;;
					};
				}
				_iter_next_1a8866b75:;
				++it;
				goto _iter_begin_1a8866b75;
			}
			_iter_end_1a8866b75:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27263_n);;
	};
	return true;;
}



inline jule::Bool _1a4850701_checkScope(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47cba34_Scope> _274326_s) {
	if ((_274326_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_274326_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88682a3:;
		if (it != expr_end) {
			jule::Any _274715_st = *it;
			{
				{
					auto &_match_expr{ _274715_st };
					
					if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1a8868e74:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1a8868c54:;
						{
							jule::Uintptr _27535_addr = (*(_274715_st.unsafe_cast_ptr<_1a47ce0ca_BreakSt>()))._field_It;;
							if ((_27535_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27535_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1a886900c:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1a8869084:;
						{
							jule::Ptr<_1a47cc969_InfIter> _27619_ii = _274715_st.unsafe_cast_ptr<_1a47cc969_InfIter>();;
							if (_1a48503b0_checkInfIter(_self_, static_cast<jule::Uintptr>(_27619_ii), &((*(_27619_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1a886910b:;
						{
							jule::Ptr<_1a47cce20_WhileIter> _27669_wn = _274715_st.unsafe_cast_ptr<_1a47cce20_WhileIter>();;
							if ((_1a47cd2b6_IsWhileNext(_27669_wn.ptr()) && ((*_27669_wn.alloc)._field_Expr == nullptr))) {
								if (_1a48503b0_checkInfIter(_self_, static_cast<jule::Uintptr>(_27669_wn), &((*_27669_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1a8869183:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a886920a:;
						{
							if (_1a4850701_checkScope(_self_, _274715_st.cast_ptr<_1a47cba34_Scope>(&__jule_any_type19))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a8869282:;
						{
							{
								auto &_match_expr{ (*(_274715_st.cast_ptr<_1a48a2753_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_1a887019a:;
									{
										return true;;
									}
								}
								_match_end_1a8870101:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1a8869309:;
						{
							if (_1a484eb73_checkConditional(_self_, _274715_st.cast_ptr<_1a47cc66c_Conditional>(&__jule_any_type31))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type44) {
						_case_begin_1a8869381:;
						{
							if (_1a484eeb4_checkMatch(_self_, _274715_st.cast_ptr<_1a47d1264_Match>(&__jule_any_type44))) {
								return true;;
							};
						}
					}
					_match_end_1a8868ccb:;
				};
			}
			_iter_next_1a88682a3:;
			++it;
			goto _iter_begin_1a88682a3;
		}
		_iter_end_1a88682a3:;
	};
	return false;;
}



inline jule::Bool _1a4850a42_check(_1a484e469_missingRetChecker* _self_, jule::Ptr<_1a47cba34_Scope> _279821_s) {
	return _1a4850701_checkScope(_self_, _279821_s);;
}







inline jule::Bool _1a485335d_IsInitialized(_1a4852e51_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a48535e4_IsTypeInferred(_1a4852e51_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1a485387a_untypedConstant(_1a4852e51_Var* _self_) {
	return (_1a48535e4_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1a4854419_Str(jule::Ptr<_1a471dc62_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _1a471e218_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _1a471cb73_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a4721d20_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1a48dd5e6_Prim> _253_prim = _1a48d7b84_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1a48e1ab1_IsStr(_253_prim.ptr());;
}



inline jule::Bool static__1a485478d_logical(jule::Ptr<_1a471dc62_Fn>* _3221_f, jule::Str _3229_ident) {
	if (((((((((((((((*(_3221_f)) == nullptr) || ((*((*(_3221_f))))._field_Ident != _3229_ident)) || ((*((*(_3221_f))))._field_Owner == nullptr)) || ((*((*(_3221_f))))._field_Instances.len() == 0LL)) || (*((*(_3221_f))))._field_Statically) || (*((*(_3221_f))))._field_Unsafety) || _1a471e218_IsVoid((*(_3221_f)).ptr())) || ((*((*(_3221_f))))._field_Generics.len() != 0LL)) || ((*((*(_3221_f))))._field_Params.len() != 2LL)) || (*((*((*(_3221_f))))._field_Params[0LL]))._field_Mutable) || _1a471cb73_IsRef((*((*(_3221_f))))._field_Params[0LL].ptr())) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a4721d20_FnIns> _497_ins = (*((*(_3221_f))))._field_Instances[0LL];;
	jule::Ptr<_1a48dd5e6_Prim> _503_prim = _1a48d7b84_Prim((*(_497_ins))._field_Result.ptr());;
	if (((_503_prim == nullptr) || (!(_1a48e182a_IsBool(_503_prim.ptr()))))) {
		return false;;
	};
	return ((*_497_ins.alloc)._field_Owner == _1a48d9207_Struct((*((*_497_ins.alloc)._field_Params[1LL]))._field_Type.ptr()));;
}



inline jule::Bool static__1a4854a57_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _5815_f) {
	return static__1a485478d_logical(&(_5815_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a4854d21_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _6315_f) {
	return static__1a485478d_logical(&(_6315_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a48550da_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _6817_f) {
	return static__1a485478d_logical(&(_6817_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a48553a4_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _7315_f) {
	return static__1a485478d_logical(&(_7315_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a485566d_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _7817_f) {
	return static__1a485478d_logical(&(_7817_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a48559e2_result(jule::Ptr<_1a471dc62_Fn>* _8220_f, jule::Str _8228_ident) {
	if (((((((((((((((*(_8220_f)) == nullptr) || ((*((*(_8220_f))))._field_Ident != _8228_ident)) || ((*((*(_8220_f))))._field_Owner == nullptr)) || ((*((*(_8220_f))))._field_Instances.len() == 0LL)) || (*((*(_8220_f))))._field_Statically) || (*((*(_8220_f))))._field_Unsafety) || _1a471e218_IsVoid((*(_8220_f)).ptr())) || ((*((*(_8220_f))))._field_Generics.len() != 0LL)) || ((*((*(_8220_f))))._field_Params.len() != 2LL)) || (*((*((*(_8220_f))))._field_Params[0LL]))._field_Mutable) || _1a471cb73_IsRef((*((*(_8220_f))))._field_Params[0LL].ptr())) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a4721d20_FnIns> _997_ins = (*((*(_8220_f))))._field_Instances[0LL];;
	return (_1a48d9207_Struct((*(_997_ins))._field_Result.ptr()) == (*_997_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a4855cab_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _10416_f) {
	return static__1a48559e2_result(&(_10416_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a4856075_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _10916_f) {
	return static__1a48559e2_result(&(_10916_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a485633e_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _11416_f) {
	return static__1a48559e2_result(&(_11416_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a4856608_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _11916_f) {
	return static__1a48559e2_result(&(_11916_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a48568c2_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _12416_f) {
	return static__1a48559e2_result(&(_12416_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a4856b8b_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _12916_f) {
	return static__1a48559e2_result(&(_12916_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a4856e55_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _13416_f) {
	return static__1a48559e2_result(&(_13416_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a485721e_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _13919_f) {
	return static__1a48559e2_result(&(_13919_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a48574d8_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _14418_f) {
	return static__1a48559e2_result(&(_14418_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a48577a2_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _14919_f) {
	return static__1a48559e2_result(&(_14919_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a4857b26_unary(jule::Ptr<_1a471dc62_Fn>* _15319_f, jule::Str _15327_ident) {
	if (((((((((((((*(_15319_f)) == nullptr) || ((*((*(_15319_f))))._field_Ident != _15327_ident)) || ((*((*(_15319_f))))._field_Owner == nullptr)) || ((*((*(_15319_f))))._field_Instances.len() == 0LL)) || (*((*(_15319_f))))._field_Statically) || (*((*(_15319_f))))._field_Unsafety) || _1a471e218_IsVoid((*(_15319_f)).ptr())) || ((*((*(_15319_f))))._field_Generics.len() != 0LL)) || ((*((*(_15319_f))))._field_Params.len() != 1LL)) || (*((*((*(_15319_f))))._field_Params[0LL]))._field_Mutable) || _1a471cb73_IsRef((*((*(_15319_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a4721d20_FnIns> _1687_ins = (*((*(_15319_f))))._field_Instances[0LL];;
	return (_1a48d9207_Struct((*(_1687_ins))._field_Result.ptr()) == (*_1687_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a4857de0_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _17316_f) {
	return static__1a4857b26_unary(&(_17316_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a48581a9_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _17816_f) {
	return static__1a4857b26_unary(&(_17816_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a4858473_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _18319_f) {
	return static__1a4857b26_unary(&(_18319_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a48587e7_assign(jule::Ptr<_1a471dc62_Fn>* _18720_f, jule::Str _18728_ident) {
	if (((((((((((((((*(_18720_f)) == nullptr) || ((*((*(_18720_f))))._field_Ident != _18728_ident)) || ((*((*(_18720_f))))._field_Owner == nullptr)) || ((*((*(_18720_f))))._field_Instances.len() == 0LL)) || (*((*(_18720_f))))._field_Statically) || (*((*(_18720_f))))._field_Unsafety) || (!(_1a471e218_IsVoid((*(_18720_f)).ptr())))) || ((*((*(_18720_f))))._field_Generics.len() != 0LL)) || ((*((*(_18720_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_18720_f))))._field_Params[0LL]))._field_Mutable))) || _1a471cb73_IsRef((*((*(_18720_f))))._field_Params[0LL].ptr())) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a4858ab1_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _20722_f) {
	return static__1a48587e7_assign(&(_20722_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a4858d7a_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _21222_f) {
	return static__1a48587e7_assign(&(_21222_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a4859144_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _21722_f) {
	return static__1a48587e7_assign(&(_21722_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a485940d_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _22222_f) {
	return static__1a48587e7_assign(&(_22222_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a48596c7_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _22722_f) {
	return static__1a48587e7_assign(&(_22722_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a4859991_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _23222_f) {
	return static__1a48587e7_assign(&(_23222_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a4859c5a_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _23722_f) {
	return static__1a48587e7_assign(&(_23722_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a485a024_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _24224_f) {
	return static__1a48587e7_assign(&(_24224_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a485a2dd_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _24725_f) {
	return static__1a48587e7_assign(&(_24725_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a485a5a7_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn> _25225_f) {
	return static__1a48587e7_assign(&(_25225_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1a488dc6c_typeCompatibilityChecker_eq(_1a488dc6c_typeCompatibilityChecker *_self_, _1a488dc6c_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1a488e29a_pushErr(_1a488dc6c_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1a488e531_checkTrait(_1a488dc6c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a48d6611_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4729476_Trait> _1157_trt = _1a48d948d_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1a48d7e1a_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a79301a1:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1a48d7e1a_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a48d9207_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a793024a;
			}
		}
		else if ((_1a48d9207_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a793024a:;
			{
				jule::Ptr<_1a4676d30_StructIns> _1264_s = _1a48d9207_Struct((*(_self_))._field_src);;
				if ((!(_1a4675647_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1a488c809_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1a488e29a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48d948d_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a79302c2:;
			{
				jule::Ptr<_1a4729476_Trait> _1368_base = _1a48d948d_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1a7935382:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7935618:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7936020:;
								if (it != expr_end) {
									jule::Ptr<_1a4673ec5_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1a7935618;
										};
									}
									_iter_next_1a7936020:;
									++it;
									goto _iter_begin_1a7936020;
								}
								_iter_end_1a7936020:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a7935618:;
						++it;
						goto _iter_begin_1a7935618;
					}
					_iter_end_1a7935618:;
				};
				{
					auto expr = &((*_1157_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a793640a:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1a471dc62_Fn> _1509_m2 = _1a472a158_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a4721d20_FnIns> _1545_m1k = _1a483b654_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1a4721d20_FnIns> _1555_m2k = _1a483b654_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1a4722cbb_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a793640a:;
						++it;
						goto _iter_begin_1a793640a;
					}
					_iter_end_1a793640a:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7930118:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a7930091:;
	};
}



inline jule::Bool _1a488e7b7_checkPtr(_1a488dc6c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a48d6611_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a48e58d9_Ptr> _1707_dest = _1a48d81a1_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a48e6456_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a48d5c1a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a488ea4d_checkPrim(_1a488dc6c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a48dd5e6_Prim> _1794_prim = _1a48d7b84_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1a48e1d47_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a48d5c1a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a488ee49_typeEnum(_1a488dc6c_typeCompatibilityChecker* _self_, jule::Ptr<_1a472d337_TypeEnum>* _18725_e, jule::Ptr<_1a48d54cd_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a793c8c8:;
		if (it != expr_end) {
			jule::Ptr<_1a472cc60_TypeEnumItem> _18815_item = *it;
			{
				if (_1a48d5c1a_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a472d337_TypeEnum> _1928_ke = _1a48d86bd_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type);;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1a793c8c8;
				};
				if (_1a488ee49_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a793c8c8:;
			++it;
			goto _iter_begin_1a793c8c8;
		}
		_iter_end_1a793c8c8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a48901d0_checkTypeEnum(_1a488dc6c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a48d5c1a_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a472d337_TypeEnum> _2077_e = _1a48d86bd_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a488ee49_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a4890466_check(_1a488dc6c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a48d81a1_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a488e7b7_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a48d73d1_NilCompatible((*(_self_))._field_dest)) {
		if (_1a48d6611_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a48d7b84_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a79431d6:;
			{
				__jule_func_result = _1a488ea4d_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d86bd_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a794326e:;
			{
				__jule_func_result = _1a48901d0_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d948d_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a7942b64:;
			{
				__jule_func_result = _1a488e531_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a794279b:;
			{
				__jule_func_result = _1a48d5c1a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a7941d1c:;
	};
}








inline jule::Bool _1a4890ae8_assignTypeChecker_eq(_1a4890ae8_assignTypeChecker *_self_, _1a4890ae8_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1a48910b0_pushErr(_1a4890ae8_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1a4891346_checkValidity(_1a4890ae8_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1a48d8e71_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7945edb:;
			{
				jule::Ptr<_1a4721d20_FnIns> _2524_f = _1a48d8e71_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1a47232d8_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1a794785b:;
						{
							_1a48910b0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1a7947905:;
						{
							_1a48910b0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*((*(_2524_f))._field_Decl))._field_Statically)) && _1a471e49e_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1a794796b:;
						{
							_1a48910b0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*((*(_2524_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1a79479d2:;
						{
							_1a48910b0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1a482c645_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1a794776d:;
				};
			}
		}
		else if ((_1a48d99aa_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7946085:;
			{
				_1a48910b0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1a7945e53:;
	};
	return _2497_valid;;
}



inline jule::Bool _1a48915cc_checkConst(_1a4890ae8_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a48d7b84_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1a48d7b84_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1a479c939_IsFloat(_2813_kind)) {
			_case_begin_1a794e225:;
			{
				if ((!(_1a488cbc2_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1a479c5e8_IsInt(_2813_kind)) {
			_case_begin_1a794e2ad:;
			{
				if ((!(_1a488d783_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1a794e1ae:;
			{
				return false;;
			}
		}
		_match_end_1a794e07c:;
	};
	return true;;
}



inline jule::Bool _1a4891863_checkCompatibility(_1a4890ae8_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a7951546:;
			{
				return false;;
			}
		}
		else if ((!(_1a4891346_checkValidity(_self_)))) {
			_case_begin_1a79515bd:;
			{
				return false;;
			}
		}
		else if (_1a48915cc_checkConst(_self_)) {
			_case_begin_1a7951634:;
			{
				return true;;
			}
		}
		else if ((_1a48d8437_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a795169a:;
			{
				jule::Ptr<_1a48d54cd_Type> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1a48d8437_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1a48d8437_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1a48dd5e6_Prim> _3144_prim = _1a48d7b84_Prim((*(_self_))._field_dest);;
				if (((_3144_prim == nullptr) || _1a48e1d47_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1a794e90c;
				};
				jule::Ptr<_1a48d54cd_Type> _3198_dest = (*(*(_1a48d8437_Enum((*((*(_self_))._field_d))._field_Type.ptr())))._field_TypeSym.alloc)._field_Type;;
				return _1a483a08c_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1a794e90c:;
	};
	return _1a483a961_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a4891ae9_check(_1a4890ae8_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1a4891863_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1a49032cb_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1a7971269_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a7972963:;
			{
				jule::Ptr<_1a48d54cd_Type> _3498_elem = static_cast<jule::Ptr<_1a48d54cd_Type>>(nullptr);;
				{
					
{
						_case_begin_1a7973238:;
						{
							_3498_elem=(*(_1a48d8954_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a797316c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4655935_ArrTypeDecl>()))._field_Elem;
				return _1a4893c0b_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1a79728db:;
	};
	return false;;
}

inline jule::Bool _1a858ee42_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a859153c:;
			{
				jule::Ptr<_1a48d54cd_Type> _3498_elem = static_cast<jule::Ptr<_1a48d54cd_Type>>(nullptr);;
				{
					
{
						_case_begin_1a85948d6:;
						{
							_3498_elem=(*(_1a48d8bda_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a8591c46:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4654a99_SlcTypeDecl>()))._field_Elem;
				return _1a4893c0b_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1a85914b5:;
	};
	return false;;
}

inline jule::Bool _1a859012e_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a8597ca2:;
			{
				jule::Ptr<_1a48d54cd_Type> _3498_elem = static_cast<jule::Ptr<_1a48d54cd_Type>>(nullptr);;
				{
					
{
						_case_begin_1a85985dd:;
						{
							_3498_elem=(*(_1a48d81a1_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a85984ab:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4655193_PtrTypeDecl>()))._field_Elem;
				return _1a4893c0b_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1a8597c2a:;
	};
	return false;;
}

inline jule::Bool _1a8596850_annotateConstraintElem(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a859de73:;
			{
				jule::Ptr<_1a48d54cd_Type> _3498_elem = static_cast<jule::Ptr<_1a48d54cd_Type>>(nullptr);;
				{
					
{
						_case_begin_1a859e825:;
						{
							_3498_elem=(*(_1a48d7e1a_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a859e67c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4654714_SptrTypeDecl>()))._field_Elem;
				return _1a4893c0b_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1a859ddeb:;
	};
	return false;;
}



inline jule::Bool _1a4892de7_annotateConstraintMap(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a7958b8b:;
			{
				jule::Ptr<_1a48e4289_Map> _3698_m = _1a48d9724_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1a4656183_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4656183_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1a4893c0b_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1a4893c0b_annotateConstraint(_self_, &((*_3698_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a7958b14:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a4893238_annotateConstraintTup(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a795e521:;
			{
				jule::Ptr<_1a4654d96_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4654d96_TupleTypeDecl>();;
				jule::Ptr<_1a48e36d9_Tuple> _3858_tup2 = _1a48d99aa_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a79624ad:;
					if (it != expr_end) {
						jule::Ptr<_1a48d54cd_Type> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7964207:;
								if (it != expr_end) {
									jule::Ptr<_1a4653669_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1a4893c0b_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a7964207:;
									++it;
									goto _iter_begin_1a7964207;
								}
								_iter_end_1a7964207:;
							};
						}
						_iter_next_1a79624ad:;
						++it;
						goto _iter_begin_1a79624ad;
					}
					_iter_end_1a79624ad:;
				};
			}
		}
		_match_end_1a795e499:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a4893579_annotateConstraintFn(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a7963cb7:;
			{
				jule::Ptr<_1a4665406_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a4665406_FnDecl>();;
				jule::Ptr<_1a4721d20_FnIns> _4028_f = _1a48d8e71_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7966715:;
					if (it != expr_end) {
						jule::I32 _4039_i = it - expr->begin();
						jule::Ptr<_1a4720bba_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1a4893c0b_annotateConstraint(_self_, &((*(_40316_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a7966715:;
						++it;
						_4039_i++;
						goto _iter_begin_1a7966715;
					}
					_iter_end_1a7966715:;
				};
				if (((*_4018_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1a4893c0b_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a7963c51:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a48938ba_annotateConstraintIdent(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _41944_k) {
	jule::Ptr<_1a4653c74_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a4653c74_IdentTypeDecl>(&__jule_any_type77);;
	jule::Ptr<_1a4676d30_StructIns> _4217_s = _1a48d9207_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a796a1ca:;
		if (it != expr_end) {
			jule::I32 _4227_i = it - expr->begin();
			jule::Ptr<_1a4660874_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1a48d3ae7_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1a489406e_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1a796a1ca;
				};
				jule::Ptr<_1a4653669_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4207_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a796cc6b:;
					if (it != expr_end) {
						jule::Ptr<_1a4653669_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a796d882:;
								if (it != expr_end) {
									jule::Ptr<_1a48d3ae7_InsGeneric> _43717_sg = *it;
									{
										if (_1a4893c0b_annotateConstraint(_self_, &((*(_43717_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1a796d882:;
									++it;
									goto _iter_begin_1a796d882;
								}
								_iter_end_1a796d882:;
							};
						}
						_iter_next_1a796cc6b:;
						++it;
						goto _iter_begin_1a796cc6b;
					}
					_iter_end_1a796cc6b:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1a796a1ca:;
			++it;
			_4227_i++;
			goto _iter_begin_1a796a1ca;
		}
		_iter_end_1a796a1ca:;
	};
	return false;;
}



inline jule::Bool _1a4893c0b_annotateConstraint(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a796dcd3:;
			{
				return _1a48938ba_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1a796dc6c:;
	};
	{
		
		if ((_1a48d8954_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a796eba2:;
			{
				return _1a7971269_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a48d8bda_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a796ec18:;
			{
				return _1a858ee42_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a48d81a1_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a796ec7e:;
			{
				return _1a859012e_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a48d7e1a_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a796ece5:;
			{
				return _1a8596850_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a48d9724_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a796ed5b:;
			{
				return _1a4892de7_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1a48d8e71_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a79702bd:;
			{
				return _1a4893579_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1a48d99aa_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1a7970345:;
			{
				return _1a4893238_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1a796eaa3:;
			{
				return false;;
			}
		}
		_match_end_1a796ea3c:;
	};
}



inline void _1a489406e_pushGeneric(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _47332_k, jule::I32 _47342_i) {
	(*((*(_self_))._field_f))._field_Generics[_47342_i]=jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)});
	jule::Ptr<_1a4660874_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47342_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8597400:;
		if (it != expr_end) {
			jule::Ptr<_1a48d54cd_Type> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1a48d58c9_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1a8597400:;
			++it;
			goto _iter_begin_1a8597400;
		}
		_iter_end_1a8597400:;
	};
	if ((((*_4757_gd.alloc)._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4757_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a4893c0b_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1a48943b0_annotatePrim(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a48963d4_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1a4894701_annotateArr(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48e4e16_Arr> _4937_parr = _1a48d8954_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a48e4e16_Arr> _4977_arr = _1a48d8954_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1a4896725_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4894a42_annotateSlc(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48e2ae5_Slc> _5037_pslc = _1a48d8bda_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a48e2ae5_Slc> _5077_slc = _1a48d8bda_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1a4896725_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4894e3d_checkMapKey(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _51238_k, jule::Ptr<_1a48d54cd_Type>* _51254_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48d54cd_Type>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1a4896725_annotateKind(_self_, _51254_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a489527e_annotateMap(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48e4289_Map> _5217_pmap = _1a48d9724_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a48e4289_Map> _5257_m = _1a48d9724_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1a4894e3d_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1a4894e3d_checkMapKey(_self_, (&((*(_5217_pmap))._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a48955c0_annotateFn(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4721d20_FnIns> _5317_pf = _1a48d8e71_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4721d20_FnIns> _5357_f = _1a48d8e71_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1a85b366e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a471e218_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1a471e218_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1a85b3707:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a85b35c5:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a48d54cd_Type>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85b5594:;
		if (it != expr_end) {
			jule::I32 _5458_i = it - expr->begin();
			jule::Ptr<_1a4720bba_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Type));
				__jule_func_result=(_1a4896725_annotateKind(_self_, &((*(_54515_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1a85b5594:;
			++it;
			_5458_i++;
			goto _iter_begin_1a85b5594;
		}
		_iter_end_1a85b5594:;
	};
	if ((!(_1a471e218_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5317_pf))._field_Result));
		__jule_func_result=(_1a4896725_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a4895911_annotatePtr(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48e58d9_Ptr> _5607_pptr = _1a48d81a1_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a48e58d9_Ptr> _5647_ptr = _1a48d81a1_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1a4896725_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4895c52_annotateSptr(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48e2122_Sptr> _5707_ssptr = _1a48d7e1a_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a48e2122_Sptr> _5747_sptr = _1a48d7e1a_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1a4896725_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4896093_annotateStruct(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4676d30_StructIns> _5807_s = _1a48d9207_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4676d30_StructIns> _5847_s2 = _1a48d9207_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85be56a:;
		if (it != expr_end) {
			jule::I32 _5888_i = it - expr->begin();
			jule::Ptr<_1a48d3ae7_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1a48d3ae7_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1a48d5c1a_Equal((*(_58815_g))._field_Type, (*(_5898_g2))._field_Type)) {
					goto _iter_next_1a85be56a;
				};
				(*(_self_))._field_k=(&((*_58815_g.alloc)._field_Type));
				if ((!(_1a4896725_annotateKind(_self_, &((*_5898_g2.alloc)._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a85be56a:;
			++it;
			_5888_i++;
			goto _iter_begin_1a85be56a;
		}
		_iter_end_1a85be56a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a48963d4_annotateAny(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1a48d58c9_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85c2b34:;
		if (it != expr_end) {
			jule::I32 _6037_i = it - expr->begin();
			jule::Ptr<_1a4660874_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1a85c2b34;
				};
				jule::Ptr<_1a48d3ae7_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Type == nullptr)) {
						_case_begin_1a85c4482:;
						{
							_1a489406e_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1a48d5c1a_Equal((*(_6074_t))._field_Type, (*(_60139_k)))))) {
						_case_begin_1a85c452b:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1a85c433e:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1a85c2b34:;
			++it;
			_6037_i++;
			goto _iter_begin_1a85c2b34;
		}
		_iter_end_1a85c2b34:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a4896725_annotateKind(_1a48924bd_dynamicTypeAnnotation* _self_, jule::Ptr<_1a48d54cd_Type>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a48963d4_annotateAny(_self_, _62240_k)) {
			_case_begin_1a85c6ac2:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48d7b84_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c6b38:;
			{
				__jule_func_result = _1a48943b0_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d8954_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c6b9e:;
			{
				__jule_func_result = _1a4894701_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d8bda_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c6c26:;
			{
				__jule_func_result = _1a4894a42_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d9724_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c6dd0:;
			{
				__jule_func_result = _1a489527e_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d8e71_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c6e46:;
			{
				__jule_func_result = _1a48955c0_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d81a1_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c6eac:;
			{
				__jule_func_result = _1a4895911_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d7e1a_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c7023:;
			{
				__jule_func_result = _1a4895c52_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a48d9207_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1a85c709a:;
			{
				__jule_func_result = _1a4896093_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a85c69a1:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a85c652d:;
	};
}



inline jule::Bool _1a48969ab_annotate(_1a48924bd_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1a4896725_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1a48978be_pushErrToken(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a463d137_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1a482c2d2_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1a4897c32_pushErr(_1a489732a_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1a48978be_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _1a4897eb8_getParams(_1a489732a_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1a471c8dc_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a4898309_checkCounts(_1a489732a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1a471c8dc_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I32 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1a85d3ccc:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*(*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1a85d3b45:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1a85d3815:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1a85d379e:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1a85d3738:;
	};
	_1e71a80b0_Builder _7027_err = static__1e71a892e_New(32LL);;
	({
		auto except = _1e71a90b1_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:703:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:704:3"));
		(except.result);
	});
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85d672a:;
		if (it != expr_end) {
			jule::I32 _7057_i = it - expr->begin();
			jule::Ptr<_1a4720bba_ParamIns> *_70510_p = it;
			{
				({
					auto except = _1e71a90b1_WriteStr(&_7027_err, _1a48d58c9_Str((*((*(_70510_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:706:4"));
					(except.result);
				});
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					({
						auto except = _1e71a90b1_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:708:5"));
						(except.result);
					});
				};
			}
			_iter_next_1a85d672a:;
			++it;
			_7057_i++;
			goto _iter_begin_1a85d672a;
		}
		_iter_end_1a85d672a:;
	};
	({
		auto except = _1e71a9369_WriteByte(&_7027_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:711:3"));
	});
	_1a4897c32_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e71a9941_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a48987b0_checkArg(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a4720bba_ParamIns>* _71629_p, jule::Ptr<_1a48a2753_Data>* _71648_arg, jule::Ptr<_1a463d137_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a47240ec_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1a48a0e16_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1a48924bd_dynamicTypeAnnotation _7219_dta = _1a48924bd_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a48969ab_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1a48978be_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a483ddb5_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1a4839630_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, (*(_71665_errorToken)), _1a48a7a11_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a4898bab_push(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a4720bba_ParamIns>* _74525_p, jule::Ptr<_1a465799d_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a48d54cd_Type> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_74525_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a48a2753_Data> _7557_d = _1a48c32e0_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7473_oldImmut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a48987b0_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a48990a7_pushVariadic(_1a489732a_fnCallArgChecker* _self_, jule::Ptr<_1a4720bba_ParamIns>* _76933_p, jule::I32 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a4713d45_SliceExprModel> _7737_model = jule::new_ptr<_1a4713d45_SliceExprModel>(_1a4713d45_SliceExprModel{._field_ElemType=(*((*(_76933_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1a48d54cd_Type> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a48d54cd_Type> _7847_oldKind = (*((*(_76933_p))))._field_Type;;
	(*((*(_76933_p))))._field_Type=jule::new_ptr<_1a48d54cd_Type>((*(*((*(_76933_p))))._field_Type.alloc));
	(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Type=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1a465799d_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type78) {
					_case_begin_1a85e8ee0:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2ae5_Slc>(_1a48e2ae5_Slc{._field_Elem=(*((*(_76933_p))))._field_Type}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1a85e92dc:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Type;
					}
				}
				_match_end_1a85e9276:;
			};
			jule::Ptr<_1a48a2753_Data> _8068_d = _1a48c2b5d_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a85e8473;
			};
			if ((*((*(_8068_d))._field_Type))._field_Variadic) {
				_7717_variadiced=true;
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a48987b0_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1a85ecc4c:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1a4713d45_SliceExprModel>();
							(*(_7737_model))._field_ElemType=(*((*(_76933_p))))._field_Type;
						}
					}
					else {
						_case_begin_1a8600a63:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1a86009ec:;
				};
				(_76951_i)++;
				goto _iter_end_1a85e8473;
			};
			__jule_func_result=(__jule_func_result && _1a48987b0_checkArg(_self_, _76933_p, &(_8068_d), &((*_7938_arg.alloc)._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1a85e8473:;
	}
	_iter_end_1a85e8473:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1a48978be_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type79)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a48993e8_checkArgs(_1a489732a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8513_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I32 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1a471c8dc_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1a8608dce:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1a4720bba_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*(*(_8628_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1a860a881:;
					{
						__jule_func_result=(_1a48990a7_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1a8609176;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1a860a96e:;
					{
						__jule_func_result=false;
						goto _iter_end_1a8609176;
					}
				}
				else {
					_case_begin_1a860a4b8:;
					{
						__jule_func_result=(_1a4898bab_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1a860a441:;
			};
			(_8557_i)++;
		}
	_iter_next_1a8609176:;
	}
	_iter_end_1a8609176:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8513_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a489967e_checkDynamicTypeAnnotation(_1a489732a_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a860c6b8:;
		if (it != expr_end) {
			jule::Ptr<_1a48d3ae7_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1a4897c32_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a860c6b8:;
			++it;
			goto _iter_begin_1a860c6b8;
		}
		_iter_end_1a860c6b8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a4899915_check(_1a489732a_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _8927_params = _1a4897eb8_getParams(_self_);;
	__jule_func_result=_1a4898309_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a48993e8_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a489967e_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1a489a7e5_pushErr(_1a489a262_structLitChecker* _self_, jule::Ptr<_1a463d137_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1a489ab58_pushSuggestion(_1a489a262_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1a48a4d71_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1a489b076_pushMatch(_1a489a262_structLitChecker* _self_, jule::Ptr<_1a4676280_FieldIns>* _93930_f, jule::Ptr<_1a48a2753_Data>* _93949_d, jule::Ptr<_1a463d137_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a483ddb5_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Type), _93949_d, _93964_errorToken)) {
		_1a4839630_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Type), _93949_d, (*(_93964_errorToken)), _1a48a7a11_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1a4712393_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a4712393_StructArgExprModel>(_1a4712393_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1a489b3d9_checkPair(_1a489a262_structLitChecker* _self_, jule::Ptr<_1a465c1bc_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _95862_exprs) {
	jule::Ptr<_1a4676280_FieldIns> _9607_f = _1a467821b_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1a489a7e5_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1a482ca41_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1a489a7e5_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1a489ab58_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1a8618b8b:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8619b59:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1a861a64e:;
						{
							jule::Ptr<_1a465c1bc_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1a465c1bc_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1a861b001:;
									{
										goto _iter_end_1a8619b59;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1a861cd7c:;
									{
										_1a489a7e5_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1a8619b59;
									}
								}
								_match_end_1a861ae68:;
							};
						}
					}
					_match_end_1a861a5c7:;
				};
			}
			_iter_next_1a8619b59:;
			++it;
			goto _iter_begin_1a8619b59;
		}
		_iter_end_1a8619b59:;
	};
	jule::Ptr<_1a48d54cd_Type> _9867_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Type;
	jule::Ptr<_1a48a2753_Data> _9907_d = _1a48c32e0_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1a489b076_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1a489b72a_readyExprs(_1a489a262_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a862347b:;
		if (it != expr_end) {
			jule::I32 _9998_i = it - expr->begin();
			jule::Ptr<_1a465799d_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1a862416e:;
						{
							jule::Ptr<_1a465d7c8_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1a465d7c8_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_1a8627084:;
									{
										goto _match_end_1a8626b55;
									}
								}
								else {
									_case_begin_1a8626bbb:;
									{
										_1a489a7e5_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1a862347b;
									}
								}
								_match_end_1a8626b55:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1a465c1bc_FieldExprPair>(_1a465c1bc_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type80);
						}
					}
					_match_end_1a86240e7:;
				};
			}
			_iter_next_1a862347b:;
			++it;
			_9998_i++;
			goto _iter_begin_1a862347b;
		}
		_iter_end_1a862347b:;
	};
	return _9987_ok;;
}



inline void _1a489b9d3_check(_1a489a262_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a489b72a_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a862a384:;
		if (it != expr_end) {
			jule::I32 _10298_i = it - expr->begin();
			jule::Ptr<_1a465799d_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1a88ec656:;
						{
							jule::Ptr<_1a465c1bc_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1a465c1bc_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1a489a7e5_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1a489b3d9_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1a862b53e:;
						{
							if (_10287_paired) {
								_1a489a7e5_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a489a7e5_pushErr(_self_, (*_102915_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1a862a384;
							};
							jule::Ptr<_1a4676280_FieldIns> _10479_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10298_i];;
							if ((!(_1a482ca41_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1a489a7e5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1a489ab58_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a48d54cd_Type> _10559_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10479_field.alloc)._field_Type;
							jule::Ptr<_1a48a2753_Data> _10599_d = _1a48c32e0_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1a862a384;
							};
							_1a489b076_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*_102915_expr.alloc)._field_Token));
						}
					}
					_match_end_1a862b4c8:;
				};
			}
			_iter_next_1a862a384:;
			++it;
			_10298_i++;
			goto _iter_begin_1a862a384;
		}
		_iter_end_1a862a384:;
	};
	if ((!(_10287_paired))) {
		jule::I32 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1a8901270:;
				{
					return;;
				}
			}
			_match_end_1a890114e:;
		};
		_1e71a80b0_Builder _10778_idents = static__1e71a892e_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				({
					auto except = _1e71a90b1_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1079:5"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1080:5"));
					(except.result);
				});
			}
		_iter_next_1a89019ce:;
		}
		_iter_end_1a89019ce:;;
		_1a489a7e5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1e71aa3e2_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1a489c044_rangeChecker_eq(_1a489c044_rangeChecker *_self_, _1a489c044_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1a4852e51_Var> _1a489c561_buildVar(_1a489c044_rangeChecker* _self_, jule::Ptr<_1a46665b1_VarDecl>* _109725_decl) {
	jule::Ptr<_1a4852e51_Var> _10987_v = _1a4800717_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1a489c75e_setSizeKey(_1a489c044_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a4640a1e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1a489cb7c_checkRangeExprValidity(_1a489c044_rangeChecker* _self_, jule::Ptr<_1a48a2753_Data>* _111643_d, jule::Ptr<_1a4852e51_Var>* _111654_key, jule::Ptr<_1a48d54cd_Type>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1a48d6db4_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1a483ddb5_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_TypeSym))._field_Type), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a489cd7a_checkSlice(_1a489c044_rangeChecker* _self_) {
	_1a489c75e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a4640a1e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a48e2ae5_Slc> _11357_slc = _1a48d8bda_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_11357_slc))._field_Elem});
	_1a489cb7c_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1a489d078_checkArray(_1a489c044_rangeChecker* _self_) {
	_1a489c75e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a4640a1e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a48e4e16_Arr> _11487_arr = _1a48d8954_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_11487_arr))._field_Elem});
	_1a489cb7c_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1a489d276_checkMapKeyA(_1a489c044_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a4640a1e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a48e4289_Map> _11607_m = _1a48d9724_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_11607_m))._field_Key});
	jule::Ptr<_1a48a2753_Data> _11647_d = jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Type=(*_11607_m.alloc)._field_Key;
	_1a489cb7c_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1a489d474_checkMapKeyB(_1a489c044_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a4640a1e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a48e4289_Map> _11757_m = _1a48d9724_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_11757_m))._field_Val});
	jule::Ptr<_1a48a2753_Data> _11797_d = jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Type=(*_11757_m.alloc)._field_Val;
	_1a489cb7c_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1a489d672_checkMap(_1a489c044_rangeChecker* _self_) {
	_1a489d276_checkMapKeyA(_self_);
	_1a489d474_checkMapKeyB(_self_);
}



inline void _1a489d870_checkStr(_1a489c044_rangeChecker* _self_) {
	_1a489c75e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a4640a1e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_TypeSym;
}



inline void _1a489da6d_checkComptime(_1a489c044_rangeChecker* _self_) {
	_1a489c75e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a4640a1e_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a489c561_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a489dd04_checkComptimeRange(_1a489c044_rangeChecker* _self_) {
	jule::Ptr<_1a479e144_comptimeRange> _12147_range = _1a48db02d_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data6)) {
			_case_begin_1a8923418:;
			{
				_1a489da6d_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a8923726:;
			{
				_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a89236b0:;
	};
}



inline jule::Bool _1a489e08a_check(_1a489c044_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1a8926b9c:;
		}
		else if ((_1a48d8bda_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a892554c:;
			{
				_1a489cd7a_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a48d8954_Arr((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a89255b3:;
			{
				_1a489d078_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a48d9724_Map((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8925b24:;
			{
				_1a489d672_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a48db02d_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8925b8a:;
			{
				return _1a489dd04_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1a89254b4:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _12474_prim = _1a48d7b84_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
				if (((_12474_prim != nullptr) && _1a48e1ab1_IsStr(_12474_prim))) {
					_1a489d870_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a89253c6:;
	};
	_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1a489ec17_prepareTypes(_1a489e7a5_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a4723052_Types((*(_self_))._field_f);
	};
}



inline void _1a489eec0_prepareExprs(_1a489e7a5_retTypeChecker* _self_, jule::Ptr<_1a465799d_Expr>* _127533_e) {
	if (((*(_127533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a892d19d:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127533_e))))._field_Kind.unsafe_cast_ptr<_1a4658592_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1a892ca2c:;
			{
				{ jule::Slice<jule::Ptr<_1a465799d_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127533_e))); };
			}
		}
		_match_end_1a892c598:;
	};
}



inline void _1a48a01bd_checkExprs(_1a489e7a5_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a48a2753_Data>> _12917_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48a2753_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1a48a447a_eval> _12927_eval = _1a4839014_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8930898:;
		if (it != expr_end) {
			jule::I32 _12938_i = it - expr->begin();
			jule::Ptr<_1a465799d_Expr> _129315_expr = *it;
			{
				if ((_12938_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a8930898;
				};
				jule::Ptr<_1a48d54cd_Type> _12988_t = (*(_self_))._field_types[_12938_i];;
				(*(_12927_eval))._field_prefix=_12988_t;
				jule::Ptr<_1a48a2753_Data> _13018_d = _1a48c32e0_evalExpr(_12927_eval, _129315_expr);;
				if ((_13018_d == nullptr)) {
					goto _iter_next_1a8930898;
				};
				{ jule::Slice<jule::Ptr<_1a48a2753_Data>> &__jule_push_dest = _12917_datas; __jule_push_dest.push(_13018_d); };
				if (((!((*(_13018_d))._field_Mutable)) && _1a48d6db4_Mutable((*(_13018_d))._field_Type.ptr()))) {
					_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1a4890ae8_assignTypeChecker _13138_ac = _1a4890ae8_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_12988_t, ._field_d=_13018_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1a47d7435_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1a4891ae9_check(&_13138_ac);
			}
			_iter_next_1a8930898:;
			++it;
			_12938_i++;
			goto _iter_begin_1a8930898;
		}
		_iter_end_1a8930898:;
	};
	if ((_12917_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a4717079_TupleExprModel>(_1a4717079_TupleExprModel{._field_Datas=_12917_datas}), &__jule_any_type83);
	} else if ((_12917_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12917_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a48a0454_tryFuncMultiRetForward(_1a489e7a5_retTypeChecker* _self_) {
	jule::Ptr<_1a48a447a_eval> _13357_eval = _1a4839014_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
	jule::Ptr<_1a48a2753_Data> _13367_d = _1a48c32e0_evalExpr(_13357_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13367_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a48e36d9_Tuple> _13427_tup = _1a48d99aa_Tup((*(_13367_d))._field_Type.ptr());;
	if ((_13427_tup == nullptr)) {
		return false;;
	};
	if (((*(_13427_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1a893b9a3;
	};
	(*(_self_))._field_model=(*(_13367_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8939ad3:;
		if (it != expr_end) {
			jule::I32 _13507_i = it - expr->begin();
			{
				jule::Ptr<_1a48d54cd_Type> _13518_t1 = (*(_self_))._field_types[_13507_i];;
				jule::Ptr<_1a48d54cd_Type> _13528_t2 = (*(_13427_tup))._field_Types[_13507_i];;
				if ((!(_1a4839ad6__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13518_t1), &(_13528_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1a893b9a3;
				};
			}
			_iter_next_1a8939ad3:;
			++it;
			_13507_i++;
			goto _iter_begin_1a8939ad3;
		}
		_iter_end_1a8939ad3:;
	};
	return true;;
	_julec_label_1a893b9a3:;
	_1e71a80b0_Builder _13597_wanted = static__1e71a892e_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a893c146:;
		if (it != expr_end) {
			jule::I32 _13607_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> _136010_t = *it;
			{
				({
					auto except = _1e71a90b1_WriteStr(&_13597_wanted, _1a48d58c9_Str(_136010_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1361:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13607_i) > 1LL)) {
					({
						auto except = _1e71a90b1_WriteStr(&_13597_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1363:5"));
						(except.result);
					});
				};
			}
			_iter_next_1a893c146:;
			++it;
			_13607_i++;
			goto _iter_begin_1a893c146;
		}
		_iter_end_1a893c146:;
	};
	_1e71a80b0_Builder _13667_given = static__1e71a892e_New(32LL);;
	{
		auto expr = &((*(_13427_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a893dd6d:;
		if (it != expr_end) {
			jule::I32 _13677_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> _136710_t = *it;
			{
				({
					auto except = _1e71a90b1_WriteStr(&_13667_given, _1a48d58c9_Str(_136710_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1368:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					({
						auto except = _1e71a90b1_WriteStr(&_13667_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1370:5"));
						(except.result);
					});
				};
			}
			_iter_next_1a893dd6d:;
			++it;
			_13677_i++;
			goto _iter_begin_1a893dd6d;
		}
		_iter_end_1a893dd6d:;
	};
	_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e71a9941_Str(&_13597_wanted), &__jule_any_type5); (*it++) = jule::Any(_1e71a9941_Str(&_13667_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1a48a0795_check(_1a489e7a5_retTypeChecker* _self_, jule::Ptr<_1a465799d_Expr>* _137726_e) {
	_1a489ec17_prepareTypes(_self_);
	_1a489eec0_prepareExprs(_self_, _137726_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1a894225b:;
			{
				if ((!(_1a471eed8_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a471e218_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1a89422c2:;
			{
				_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1a8942338:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a8946caa:;
						{
							if (_1a48a0454_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1a8946c00:;
				};
				_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1a894239e:;
			{
				_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1a8942415:;
			{
				_1a482c2d2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a89420e6:;
	};
	_1a48a01bd_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1a48a2753_Data_eq(_1a48a2753_Data *_self_, _1a48a2753_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1a48a2b71_IsNil(_1a48a2753_Data* _self_) {
	return _1a48d6611_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1a48a2e07_IsVoid(_1a48a2753_Data* _self_) {
	return _1a48d6897_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1a48a318d_IsConst(_1a48a2753_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a48a34ce_GoodOperand(_1a48a2753_Data* _self_, jule::Ptr<_1a48a2753_Data>* _6128_other) {
	if ((_1a48d86bd_TypeEnum((*((*(_6128_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a48d7b84_Prim((*((*(_6128_other))))._field_Type) == nullptr) || (!(_1a48e1d47_IsAny(_1a48d7b84_Prim((*((*(_6128_other))))._field_Type).ptr())))) && (_1a48d948d_Trait((*((*(_6128_other))))._field_Type) == nullptr)) && (!(_1a48d6611_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1a48a38ca_Value_eq(_1a48a38ca_Value *_self_, _1a48a38ca_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1a48a447a_eval_eq(_1a48a447a_eval *_self_, _1a48a447a_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1a48a4a0d_pushErr(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args) {
	_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), _9223_token, _9245_fmt, _9265_args);
}



inline void _1a48a4d71_pushSuggestion(_1a48a447a_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args) {
	_1a482c645_pushSuggestion((*(_self_))._field_s.ptr(), _9730_fmt, _9750_args);
}



inline void _1a48a506e_allowBuiltin(_1a48a447a_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a48a526c_disallowBuiltin(_1a48a447a_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a48a5503_isUnsafe(_1a48a447a_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a48a5789_isGlobal(_1a48a447a_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4)) {
			_case_begin_1a89a7a41:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a89a7e4d:;
			{
				return false;;
			}
		}
		_match_end_1a89a7dd7:;
	};
}



inline jule::Bool _1a48a5a97_applyNumericPrefix(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _12439_d) {
	if ((((((*(_12439_d)) == nullptr) || (!(_1a48a318d_IsConst((*(_12439_d)).ptr())))) || (_1a48d7b84_Prim((*((*(_12439_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _1313_prim = _1a48d7b84_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1313_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a479c939_IsFloat(_1a48dd96a_Str(_1313_prim.ptr()))) {
			_case_begin_1a89aa5d2:;
			{
				(*((*(_12439_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>((*((*(_self_))._field_prefix)));
				_1a4708b09_SetF64((*((*(_12439_d))))._field_Constant.ptr(), _1a4707c7e_AsF64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1a479c021_IsSigInt(_1a48dd96a_Str(_1313_prim.ptr()))) {
			_case_begin_1a89aa648:;
			{
				if ((!(_1a488d046_sigAssignable(_1a48dd96a_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>((*((*(_self_))._field_prefix)));
				_1a4708037_SetI64((*((*(_12439_d))))._field_Constant.ptr(), _1a4707762_AsI64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1a479c32e_IsUnsigInt(_1a48dd96a_Str(_1313_prim.ptr()))) {
			_case_begin_1a89aa6ae:;
			{
				if ((!(_1a488d40e_unsigAssignable(_1a48dd96a_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>((*((*(_self_))._field_prefix)));
				_1a47082e0_SetU64((*((*(_12439_d))))._field_Constant.ptr(), _1a47079e8_AsU64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		_match_end_1a89aa4e4:;
	};
	return true;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a5dd8_litStr(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _15919_l) {
	jule::Str _1607_s = jule::Str();;
	if (_1a463e523_IsRawStr((*((*(_15919_l))))._field_Value)) {
		_1607_s=_1a488b3b8_ToRawStr((*((*(_15919_l))))._field_Value);
	} else {
		_1607_s=_1a488b709_ToStr((*((*(_15919_l))))._field_Value);
	};
	jule::Ptr<_1a4276798_Const> _1667_constant = static__1a4705d59_NewStr(_1607_s);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958e25_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1667_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1667_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a6229_litRune(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _17620_l) {
	jule::I32 _1773_r = _1a4870e2a_ToRune((*((*(_17620_l))))._field_Value);;
	jule::Ptr<_1a48a2753_Data> _1787_data = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_1773_r))});;
	if ((_1773_r <= 255LL)) {
		(*(_1787_data))._field_Type=_1a495a90a_primU8;
	} else {
		(*(_1787_data))._field_Type=_1a495a399_primI32;
	};
	(*(_1787_data))._field_Model=jule::Any(jule::new_ptr<_1a471a6ba_RuneExprModel>(_1a471a6ba_RuneExprModel{._field_Code=_1773_r}), &__jule_any_type85);
	(*_1787_data.alloc)._field_Mutable=true;
	(*_1787_data.alloc)._field_IsRune=true;
	(*_1787_data.alloc)._field_untyped=true;
	return _1787_data;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a656a_litFloat(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _19521_l) {
	jule::F64 _1963_f = ({
		auto except = _1b456c375_ParseFloat((*((*(_19521_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a4276798_Const> _1977_constant = static__1a4706123_NewF64(_1963_f);;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b8a6_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1977_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1977_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a68ab_litInt(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _20723_l) {
	;
	jule::Str _2107_lit = (*((*(_20723_l))))._field_Value;;
	jule::I32 _2117_base = 0LL;;
	{
		
		if (_1ce7841cb_HasPrefix(_2107_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1a89bcb77:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=16LLU;
			}
		}
		else if (_1ce7841cb_HasPrefix(_2107_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1a89bcc65:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=2LLU;
			}
		}
		else if (_1ce7841cb_HasPrefix(_2107_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1a89bc825:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=8LLU;
			}
		}
		else if (((_2107_lit[0LL] == '0') && (_2107_lit.len() > 1LL))) {
			_case_begin_1a89bc88b:;
			{
				(_2107_lit).mut_slice(1LL);;
				_2117_base=8LLU;
			}
		}
		else {
			_case_begin_1a89bc7ae:;
			{
				_2117_base=10LLU;
			}
		}
		_match_end_1a89bc737:;
	};
	jule::Ptr<_1a48a2753_Data> _2317_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	jule::Bool _2337_ok = true;;
	jule::I64 _2343_sig = ({
		auto except = _1b4565bba_ParseInt(_2107_lit, _2117_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2337_ok=false;

			0LL;
		});
	});;
	if (_2337_ok) {
		(*_2317_d.alloc)._field_Constant=static__1a470550c_NewI64(_2343_sig);
		(*_2317_d.alloc)._field_Type=_1a4959b07_primInt;
	} else {
		jule::U64 _2424_unsig = ({
			auto except = _1b4565714_ParseUint(_2107_lit, _2117_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a48a4a0d_pushErr(_self_, (*((*(_20723_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2317_d.alloc)._field_Constant=static__1a47057c6_NewU64(_2424_unsig);
		(*_2317_d.alloc)._field_Type=_1a495973e_primUint;
	};
	(*_2317_d.alloc)._field_Model=jule::Any((*_2317_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2317_d.alloc)._field_untyped=true;
	if ((!(_1a48a5a97_applyNumericPrefix(_self_, &(_2317_d))))) {
		_1a48cc34e_fitBitsize(&(_2317_d));
	};
	return _2317_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a6bec_litNum(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr>* _26223_l) {
	{
		
		if (_1a46401c2_IsFloat((*((*(_26223_l))))._field_Value)) {
			_case_begin_1a89c4e26:;
			{
				return _1a48a656a_litFloat(_self_, _26223_l);;
			}
		}
		else {
			_case_begin_1a89c4db0:;
			{
				return _1a48a68ab_litInt(_self_, _26223_l);;
			}
		}
		_match_end_1a89c4ca0:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48a703d_evalLit(_1a48a447a_eval* _self_, jule::Ptr<_1a4658938_LitExpr> _27123_lit) {
	{
		
		if (_1a463e28c_IsStr((*(_27123_lit))._field_Value)) {
			_case_begin_1a89c6147:;
			{
				return _1a48a5dd8_litStr(_self_, &(_27123_lit));;
			}
		}
		else if (_1a463e7dc_IsRune((*(_27123_lit))._field_Value)) {
			_case_begin_1a89c61ad:;
			{
				return _1a48a6229_litRune(_self_, &(_27123_lit));;
			}
		}
		else if (_1a464048b_IsNum((*(_27123_lit))._field_Value)) {
			_case_begin_1a89c6224:;
			{
				return _1a48a6bec_litNum(_self_, &(_27123_lit));;
			}
		}
		else {
			_case_begin_1a89c5a3c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a89c592c:;
	};
}



inline jule::Any _1a48a737e_findBuiltins(_1a48a447a_eval* _self_, jule::Str* _28429_ident) {
	if (_1a48265c8_IsPub((*(_28429_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data2)) {
				_case_begin_1a89c84ac:;
				{
					jule::Any _2889_def = _1a48cc11d_findBuiltinsImport(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1a480c3d3_ImportInfo>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data2));;
					if ((_2889_def != nullptr)) {
						return _2889_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4)) {
				_case_begin_1a89c8204:;
				{
					jule::Any _2939_def = _1a48ccd77_findBuiltinsSema(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1a48293cd_sema>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
				_case_begin_1a89c8523:;
				{
					jule::Any _2989_def = _1a48ccd77_findBuiltinsSema(_28429_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)))._field_s);;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			_match_end_1a89c8402:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a495c1e2_findBuiltinDef(_28429_ident);;
}



inline jule::Any _1a48a777a_getDef(_1a48a447a_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded) {
	jule::Ptr<_1a4852e51_Var> _3167_v = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a490409b_FindVar((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3167_v != nullptr)) {
		return jule::Any(_3167_v, &__jule_any_type7);;
	};
	jule::Ptr<_1a48d46db_TypeAlias> _3217_ta = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4904497_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3217_ta != nullptr)) {
		return jule::Any(_3217_ta, &__jule_any_type8);;
	};
	if ((!(_31135_binded))) {
		jule::Ptr<_1a472bb2c_Enum> _3278_enm = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4905421_FindEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3278_enm != nullptr)) {
			return jule::Any(_3278_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1a472d337_TypeEnum> _3328_tenm = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4905762_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3328_tenm != nullptr)) {
			return jule::Any(_3328_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1a471dc62_Fn> _3387_f = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4904c8e_FindFn((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3387_f != nullptr)) {
		return jule::Any(_3387_f, &__jule_any_type10);;
	};
	jule::Ptr<_1a4673ec5_Struct> _3437_s = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4904893_FindStruct((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3437_s != nullptr)) {
		return jule::Any(_3437_s, &__jule_any_type9);;
	};
	return _1a48a737e_findBuiltins(_self_, _31123_ident);;
}



inline jule::Ptr<_1a47ea3d2_ReferenceStack> _1a48a7a11_getOwnerRefers(_1a48a447a_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
			_case_begin_1a89d2a05:;
			{
				return _1a47d76bb_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1a89d1394:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1a89d132d:;
	};
	return nullptr;;
}



inline void _1a7984744_pushReference(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns>* _36937_ref) {
	jule::Ptr<_1a47ea3d2_ReferenceStack> _3707_refers = _1a48a7a11_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1a7986d40_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1a47eb1b3_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type63));
	};
}

inline void _1a799b2a5_pushReference(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _36937_ref) {
	jule::Ptr<_1a47ea3d2_ReferenceStack> _3707_refers = _1a48a7a11_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1a799d61a_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1a47eb1b3_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type7));
	};
}

inline void _1a8a2e8ed_pushReference(_1a48a447a_eval* _self_, jule::Ptr<_1a4676d30_StructIns>* _36937_ref) {
	jule::Ptr<_1a47ea3d2_ReferenceStack> _3707_refers = _1a48a7a11_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1a8a32060_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1a47eb1b3_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type64));
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48a810a__evalEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472bb2c_Enum> _37625_enm) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_37625_enm, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a8506_evalEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472bb2c_Enum> _38528_enm, jule::Ptr<_1a463d137_Token> _38540_errorToken) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_38528_enm))._field_Public, (*_38528_enm.alloc)._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, _38540_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_38528_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a48a810a__evalEnum(_self_, _38528_enm);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a8847__evalTypeEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472d337_TypeEnum> _39429_enm) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39429_enm, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a8c43_evalTypeEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a472d337_TypeEnum> _40332_enm, jule::Ptr<_1a463d137_Token> _40348_errorToken) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40332_enm))._field_Public, (*_40332_enm.alloc)._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, _40348_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40332_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a48a8847__evalTypeEnum(_self_, _40332_enm);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a9084__evalStruct(_1a48a447a_eval* _self_, jule::Ptr<_1a4676d30_StructIns> _41227_s) {
	jule::Ptr<_1a48a2753_Data> _4137_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41227_s, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41227_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	if ((((*(_41227_s))._field_Decl != nullptr) && (*(*(_41227_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4137_d))._field_Type))._field_BindIdent=(*(*(_41227_s))._field_Decl.alloc)._field_Ident;
	};
	return _4137_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a9480_evalStruct(_1a48a447a_eval* _self_, jule::Ptr<_1a4673ec5_Struct> _42630_s, jule::Ptr<_1a463d137_Token> _42646_errorToken) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42630_s))._field_Public, (*_42630_s.alloc)._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, _42646_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42630_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a48a9b34_checkDeprecated(_self_, &((*_42630_s.alloc)._field_Directives), _42646_errorToken);
	jule::Ptr<_1a4676d30_StructIns> _4357_ins = _1a467446a_instance(_42630_s);;
	if (((*_42630_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a4676d30_StructIns> _4428_exist = _1a4674778_appendInstance(_42630_s, &(_4357_ins));;
		if ((_4428_exist != nullptr)) {
			_4357_ins=_4428_exist;
		} else {
			if ((!(_1a484aca1_precheckStructIns((*(_self_))._field_s, &(_4357_ins), _42646_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1a48a9084__evalStruct(_self_, _4357_ins);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48a97c1_evalFnIns(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns> _45525_f) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45525_f, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45525_f, &__jule_any_type63), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline void _1a48a9b34_checkDeprecated(_1a48a447a_eval* _self_, jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _46436_directives, jule::Ptr<_1a463d137_Token> _46467_tok) {
	if (_1a48a5503_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a4652a86_Directive> _4693_d = _1a48cbc55_findDirective(_46436_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4693_d != nullptr)) {
		if (((*_4693_d.alloc)._field_Args.len() == 0LL)) {
			_1a48a4a0d_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1a48a4a0d_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4693_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48aa030_evalFn(_1a48a447a_eval* _self_, jule::Ptr<_1a471dc62_Fn> _48026_f, jule::Ptr<_1a463d137_Token> _48034_errorToken) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48026_f))._field_Public, (*_48026_f.alloc)._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, _48034_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48026_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a48a9b34_checkDeprecated(_self_, &((*_48026_f.alloc)._field_Directives), _48034_errorToken);
	jule::Ptr<_1a4721d20_FnIns> _4897_ins = _1a4720505_instance(_48026_f);;
	if (((*_48026_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a4721d20_FnIns> _4968_exist = _1a4720813_appendInstance(_48026_f, &(_4897_ins));;
		if ((_4968_exist != nullptr)) {
			_4897_ins=_4968_exist;
		};
	};
	_1a7984744_pushReference(_self_, &(_4897_ins));
	return _1a48a97c1_evalFnIns(_self_, _4897_ins);;
}



inline void _1a48aa44d_pushIllegalCycleError(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _50538_v1, jule::Ptr<_1a4852e51_Var>* _50549_v2, _1e71a80b0_Builder* _50564_message) {
	;
	jule::Str _5073_refersTo = _1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50538_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_50549_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5083_buf = _1e71aa3e2_Buf(_50564_message);;
	({
		auto except = _1e71a90b1_WriteStr(_50564_message, _1ce783d13_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:509:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_50564_message, _5073_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:510:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_50564_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:511:3"));
	});
	({
		auto except = _1e71a8c70_Write(_50564_message, _5083_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:512:3"));
		(except.result);
	});
}



inline jule::Bool _1a48aa849_checkCrossCycle(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _51532_v, _1e71a80b0_Builder* _51546_message) {
	{
		auto expr = &((*((*(_51532_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a798b20c:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> *_51610_d = it;
			{
				if (((*(_51610_d)) == (*(_self_))._field_owner)) {
					_1a48aa44d_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
				if ((!(_1a48aa849_checkCrossCycle(_self_, _51610_d, _51546_message)))) {
					_1a48aa44d_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
			}
			_iter_next_1a798b20c:;
			++it;
			goto _iter_begin_1a798b20c;
		}
		_iter_end_1a798b20c:;
	};
	return true;;
}



inline jule::Bool _1a48aac45_checkIllegalCycles(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var>* _53239_v, jule::Ptr<_1a463d137_Token> _53248_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53239_v)))) {
		_1a48a4a0d_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e71a80b0_Builder _5457_message = static__1e71a892e_New(32LL);;
	if ((!(_1a48aa849_checkCrossCycle(_self_, _53239_v, &(_5457_message))))) {
		jule::Str _5488_errMsg = _1e71a9941_Str(&_5457_message);;
		_1e71a9b3e_Clear(&_5457_message);
		_1a48aa44d_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53239_v, &(_5457_message));
		_5488_errMsg+=_1e71a9941_Str(&_5457_message);
		_1a48a4a0d_pushErr(_self_, _53248_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5488_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53239_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ab141_evalVar(_1a48a447a_eval* _self_, jule::Ptr<_1a4852e51_Var> _56027_v, jule::Ptr<_1a463d137_Token> _56036_errorToken) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56027_v))._field_Public, (*_56027_v.alloc)._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a48a9b34_checkDeprecated(_self_, &((*_56027_v.alloc)._field_Directives), _56036_errorToken);
	if (((*_56027_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1a79a3422;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4)) {
			_case_begin_1a7994b72:;
			{
				jule::Bool _5774_ok = _1a48aac45_checkIllegalCycles(_self_, &(_56027_v), _56036_errorToken);;
				if ((!(_5774_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
			_case_begin_1a7994545:;
			{
				jule::Ptr<_1a47d3cc2_scopeChecker> _5828_s = (*(_self_))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1);;
				jule::Ptr<_1a47d3cc2_scopeChecker> _5838_root = _1a47d719e_getRoot(_5828_s);;
				if ((((((*_56027_v.alloc)._field_Scope != nullptr) && (!((*_56027_v.alloc)._field_Constant))) && ((*(_5838_root))._field_captured != nullptr)) && _1a48d2a80_isVarCaptured(_5838_root, _5828_s, _56027_v))) {
					_1a47d6e18_pushCaptured(_5838_root, &(_56027_v));
				};
				if (((!((*_56027_v.alloc)._field_Reference)) || _1a48a5503_isUnsafe(_self_))) {
					goto _match_end_1a7994985;
				};
				while ((((*_5828_s.alloc)._field_owner == nullptr) && ((*_5828_s.alloc)._field_parent != nullptr))) {
					{
						_5828_s=(*_5828_s.alloc)._field_parent;
					}
				_iter_next_1a7998868:;
				}
				_iter_end_1a7998868:;;
				if (((((*_5828_s.alloc)._field_owner != nullptr) && (*((*_5828_s.alloc)._field_owner))._field_Anon) && ((*_56027_v.alloc)._field_Scope != (*((*_5828_s.alloc)._field_owner))._field_Scope))) {
					_1a48a4a0d_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1a7994985:;
	};
	if (((*_56027_v.alloc)._field_Scope == nullptr)) {
		_1a799b2a5_pushReference(_self_, &(_56027_v));
	};
	if (((((!((*_56027_v.alloc)._field_Used)) && (!((*_56027_v.alloc)._field_Binded))) && ((*_56027_v.alloc)._field_Scope == nullptr)) && (((*_56027_v.alloc)._field_Value == nullptr) || ((*((*_56027_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1a4725065_SymTab> _6168_varfile = _1a4809721_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56027_v));;
		jule::Ptr<_1a4725065_SymTab> _6178_file = _1a482bb0b_getCurrentFile((*(_self_))._field_s);;
		_1a482bdb4_setCurrentFile((*(_self_))._field_s, _6168_varfile);
		_1a484919a_checkVar((*(_self_))._field_s, &(_56027_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4));
		_1a482bdb4_setCurrentFile((*(_self_))._field_s, _6178_file);
	};
	(*_56027_v.alloc)._field_Used=true;
	if ((((*_56027_v.alloc)._field_TypeSym == nullptr) || ((*((*_56027_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1a79a3422:;
	jule::Ptr<_1a48a2753_Data> _6367_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=(*((*_56027_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56027_v.alloc)._field_Mutable, ._field_Reference=(*_56027_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56027_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56027_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	if ((((*_56027_v.alloc)._field_Value != nullptr) && ((*((*_56027_v.alloc)._field_Value))._field_Data != nullptr))) {
		if (((!((*_56027_v.alloc)._field_Binded)) && _1a485335d_IsInitialized(_56027_v))) {
			(*(_6367_d))._field_IsRune=(*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_IsRune;
		};
		if (((*_56027_v.alloc)._field_Constant && ((*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
			(*_6367_d.alloc)._field_Constant=jule::new_ptr<_1a4276798_Const>((*(*((*((*(_56027_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6367_d.alloc)._field_Model=jule::Any((*_6367_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1a485387a_untypedConstant(_56027_v)) {
				_1a48a5a97_applyNumericPrefix(_self_, &(_6367_d));
				(*_6367_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6367_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ab53c_evalTypeAlias(_1a48a447a_eval* _self_, jule::Ptr<_1a48d46db_TypeAlias> _66033_ta, jule::Ptr<_1a463d137_Token> _66049_errorToken) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66033_ta))._field_Public, (*_66033_ta.alloc)._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, _66049_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66033_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_66033_ta.alloc)._field_Used=true;
	jule::Trait _6697_kind = (*((*((*_66033_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1a48a2753_Data> _67011_d = nullptr;;
	{
		auto &_match_expr{ _6697_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)) {
			_case_begin_1a79adb36:;
			{
				_67011_d=_1a48a9084__evalStruct(_self_, _6697_kind.cast_ptr<_1a4676d30_StructIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3)) {
			_case_begin_1a79b1908:;
			{
				_67011_d=_1a48a810a__evalEnum(_self_, _6697_kind.cast_ptr<_1a472bb2c_Enum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4)) {
			_case_begin_1a79b25a7:;
			{
				_67011_d=_1a48a8847__evalTypeEnum(_self_, _6697_kind.cast_ptr<_1a472d337_TypeEnum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1a79ac53b:;
			{
				_67011_d=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66033_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});
				if ((*_66033_ta.alloc)._field_Binded) {
					(*((*(_67011_d))._field_Type))._field_BindIdent=(*_66033_ta.alloc)._field_Ident;
				} else {
					(*((*(_67011_d))._field_Type))._field_BindIdent=(*(*((*(_66033_ta))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
				};
				(*(_67011_d))._field_Model=jule::Any((*_67011_d.alloc)._field_Type, &__jule_any_type86);
			}
		}
		_match_end_1a79ac3b5:;
	};
	(*((*(_67011_d))._field_Type))._field_Generic=(*_66033_ta.alloc)._field_Generic;
	return _67011_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ab938_evalDef(_1a48a447a_eval* _self_, jule::Any* _69928_def, jule::Ptr<_1a463d137_Token> _69942_ident) {
	{
		auto &_match_expr{ (*(_69928_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a79b56dc:;
			{
				return _1a48ab141_evalVar(_self_, (*(_69928_def)).cast_ptr<_1a4852e51_Var>(&__jule_any_type7), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a79b54ab:;
			{
				return _1a48a8506_evalEnum(_self_, (*(_69928_def)).cast_ptr<_1a472bb2c_Enum>(&__jule_any_type12), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a79b5753:;
			{
				return _1a48a8c43_evalTypeEnum(_self_, (*(_69928_def)).cast_ptr<_1a472d337_TypeEnum>(&__jule_any_type13), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a79b57b9:;
			{
				return _1a48a9480_evalStruct(_self_, (*(_69928_def)).cast_ptr<_1a4673ec5_Struct>(&__jule_any_type9), _69942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a79b5830:;
			{
				jule::Ptr<_1a471dc62_Fn> _7108_f = (*(_69928_def)).cast_ptr<_1a471dc62_Fn>(&__jule_any_type10);;
				if ((!(*(_7108_f))._field_Ident.equal("init", 4))) {
					return _1a48aa030_evalFn(_self_, _7108_f, _69942_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a79b58a7:;
			{
				return _1a48a97c1_evalFnIns(_self_, (*(_69928_def)).cast_ptr<_1a4721d20_FnIns>(&__jule_any_type63));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a79b592e:;
			{
				return _1a48ab53c_evalTypeAlias(_self_, (*(_69928_def)).cast_ptr<_1a48d46db_TypeAlias>(&__jule_any_type8), _69942_ident);;
			}
		}
		_match_end_1a79b55dd:;
	};
	_1a48a4a0d_pushErr(_self_, _69942_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_69942_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48abc79_evalIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a46592b8_IdentExpr> _72329_ident) {
	jule::Any _7247_def = _1a48a777a_getDef(_self_, &((*(_72329_ident))._field_Ident), (*_72329_ident.alloc)._field_Binded);;
	return _1a48ab938_evalDef(_self_, &(_7247_def), (*_72329_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ac0ba_evalUnary(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4659a5a_UnaryExpr> _72830_u) {
	_1a48c3774_unaryEval _7297_unary = static__1a48c3be7_new(_self_);;
	return _1a48c5127_eval(&_7297_unary, _72830_u);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ac40b_evalVariadic(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4659e34_VariadicExpr> _73333_v) {
	if (((*(_73333_v))._field_Expr == nullptr)) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*_73333_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a48d54cd_Type> _7397_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7397_prefix;
	});;
	jule::Ptr<_1a48a2753_Data> _7437_d = _1a48c32e0_evalExpr(_self_, (*_73333_v.alloc)._field_Expr);;
	if ((_7437_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a48d78ed_Variadicable((*(_7437_d))._field_Type.ptr())))) {
		_1a48a4a0d_pushErr(_self_, (*_73333_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_7437_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a48d2651_makeVariadic(&(_7437_d), (*(_1a48d8bda_Slc((*(_7437_d))._field_Type)))._field_Elem);
	return _7437_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ac74c_evalUnsafe(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4658d12_UnsafeExpr> _75531_u) {
	jule::Bool _7563_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a48a2753_Data> _7587_d = _1a48c32e0_evalExpr(_self_, (*(_75531_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7563_unsafety;
	return _7587_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48aca8d_evalArr(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e004_SliceExpr> _76328_s) {
	jule::Ptr<_1a48e4e16_Arr> _7657_pt = _1a48d8954_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a48e4e16_Arr> _7677_arr = jule::new_ptr<_1a48e4e16_Arr>(_1a48e4e16_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7657_pt))._field_Elem});;
	jule::Bool _7737_filled = false;;
	if (((*(_76328_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76328_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type78) {
				_case_begin_1a79c5cb3:;
				{
					if (((*((*((*(_76328_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a4659e34_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1a79c5c08;
					};
					if ((*_7657_pt.alloc)._field_Auto) {
						_1a48a4a0d_pushErr(_self_, (*_76328_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7737_filled=true;
					((*(_76328_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1a79c5c08:;
		};
	};
	(*(_7677_arr))._field_N=(*_76328_s.alloc)._field_Exprs.len();
	if ((!((*_7657_pt.alloc)._field_Auto))) {
		if (((*_7677_arr.alloc)._field_N > (*_7657_pt.alloc)._field_N)) {
			_1a48a4a0d_pushErr(_self_, (*_76328_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7677_arr.alloc)._field_N < (*_7657_pt.alloc)._field_N)) {
			(*_7677_arr.alloc)._field_N=(*_7657_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a4716c7c_ArrayExprModel> _8027_model = jule::new_ptr<_1a4716c7c_ArrayExprModel>(_1a4716c7c_ArrayExprModel{._field_Kind=_7677_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7737_filled) {
		(*(_8027_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8027_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_76328_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1a48d54cd_Type> _8117_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7677_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76328_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79ccced:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _81315_elem = *it;
			{
				jule::Ptr<_1a48a2753_Data> _8148_d = _1a48c32e0_evalExpr(_self_, _81315_elem);;
				if ((_8148_d == nullptr)) {
					goto _iter_next_1a79ccced;
				};
				;
				if (_1a483ddb5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7677_arr.alloc)._field_Elem), &(_8148_d), &((*(_81315_elem))._field_Token))) {
					_1a4839630_checkAssignType((*(_self_))._field_s, false, &((*_7677_arr.alloc)._field_Elem), &(_8148_d), (*_81315_elem.alloc)._field_Token, _1a48a7a11_getOwnerRefers(_self_));
				};
				(*(_8027_model))._field_Elems=jule::append((*_8027_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8148_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1a79ccced:;
			++it;
			goto _iter_begin_1a79ccced;
		}
		_iter_end_1a79ccced:;
	};
	(*_self_.alloc)._field_prefix=_8117_prefix;
	if (_7737_filled) {
		(*_8027_model.alloc)._field_Elems=jule::append((*_8027_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7677_arr, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8027_model, &__jule_any_type87), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ad044_evalExpSlc(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e004_SliceExpr> _84031_s, jule::Ptr<_1a48d54cd_Type> _84055_t, jule::Any _84069_first) {
	jule::Ptr<_1a48e2ae5_Slc> _8417_slc = jule::new_ptr<_1a48e2ae5_Slc>(_1a48e2ae5_Slc{._field_Elem=_84055_t});;
	jule::I32 _8457_i = 0LL;;
	jule::Ptr<_1a4713d45_SliceExprModel> _8467_model = jule::new_ptr<_1a4713d45_SliceExprModel>(_1a4713d45_SliceExprModel{._field_ElemType=_84055_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84031_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84069_first != nullptr)) {
		(*(_8467_model))._field_Elems=jule::append((*_8467_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84069_first; __jule_collection; }));
		_8457_i=1LL;
	};
	jule::Ptr<_1a48d54cd_Type> _8557_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8417_slc))._field_Elem;
	{
		auto expr = (*_84031_s.alloc)._field_Exprs.slice(_8457_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a79d8b83:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _85715_elem = *it;
			{
				jule::Ptr<_1a48a2753_Data> _8588_d = _1a48c32e0_evalExpr(_self_, _85715_elem);;
				if ((_8588_d != nullptr)) {
					;
					if (_1a483ddb5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8417_slc.alloc)._field_Elem), &(_8588_d), &((*(_85715_elem))._field_Token))) {
						_1a4839630_checkAssignType((*(_self_))._field_s, false, &((*_8417_slc.alloc)._field_Elem), &(_8588_d), (*_85715_elem.alloc)._field_Token, _1a48a7a11_getOwnerRefers(_self_));
					};
					(*_8467_model.alloc)._field_Elems=jule::append((*_8467_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8588_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1a79d8b83:;
			++it;
			goto _iter_begin_1a79d8b83;
		}
		_iter_end_1a79d8b83:;
	};
	(*_self_.alloc)._field_prefix=_8557_prefix;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8417_slc, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8467_model, &__jule_any_type79), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ad385_evalSliceExpr(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e004_SliceExpr> _87834_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a48d8954_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1a79dd8be:;
				{
					return _1a48aca8d_evalArr(_self_, _87834_s);;
				}
			}
			else if ((_1a48d8bda_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1a79dd968:;
				{
					jule::Ptr<_1a48e2ae5_Slc> _8849_pt = _1a48d8bda_Slc((*(_self_))._field_prefix);;
					return _1a48ad044_evalExpSlc(_self_, _87834_s, (*(_8849_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1a79dd814:;
		};
	};
	jule::Ptr<_1a48d54cd_Type> _8897_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_87834_s))._field_Exprs.len() == 0LL)) {
		_1a48a4a0d_pushErr(_self_, (*_87834_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a465799d_Expr> _8977_firstExpr = (*_87834_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1a48a2753_Data> _8987_firstElem = _1a48c32e0_evalExpr(_self_, _8977_firstExpr);;
	if ((_8987_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a483ddb5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_8987_firstElem))._field_Type), &(_8987_firstElem), &((*(_8977_firstExpr))._field_Token));
	jule::Ptr<_1a48a2753_Data> _9087_d = _1a48ad044_evalExpSlc(_self_, _87834_s, (*(_8987_firstElem))._field_Type, (*(_8987_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8897_prefix;
	return _9087_d;;
}



inline jule::Bool _1a48ad781_checkIntegerIndexingByData(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _91447_d, jule::Ptr<_1a463d137_Token> _91461_token) {
	jule::Str _9153_errKey = _1a48d0033_checkDataForIntegerIndexing(&((*(_self_))._field_s), _91447_d, &(_91461_token), _1a48a7a11_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9153_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1a79e6a2b:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1a79e670c:;
			{
				_1a48a4a0d_pushErr(_self_, _91461_token, _9153_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_91447_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1a79e6058:;
			{
				_1a48a4a0d_pushErr(_self_, _91461_token, _9153_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a79e6696:;
	};
	return false;;
}



inline void _1a48adb9e_indexingPtr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _92732_d, jule::Ptr<_1a48a2753_Data>* _92747_index, jule::Ptr<_1a465e961_IndexingExpr>* _92766_i) {
	_1a48ad781_checkIntegerIndexingByData(_self_, _92747_index, (*((*(_92766_i))))._field_Token);
	(*((*(_92732_d))))._field_Lvalue=true;
	jule::Ptr<_1a48e58d9_Ptr> _9317_ptr = _1a48d81a1_Ptr((*((*(_92732_d))))._field_Type.ptr());;
	{
		
		if (_1a48e6456_IsUnsafe(_9317_ptr.ptr())) {
			_case_begin_1a79e98ec:;
			{
				_1a48a4a0d_pushErr(_self_, (*((*(_92766_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a48a5503_isUnsafe(_self_)))) {
			_case_begin_1a79e9985:;
			{
				_1a48a4a0d_pushErr(_self_, (*((*(_92766_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a79e9853:;
	};
	(*((*(_92732_d))))._field_Type=(*(_9317_ptr))._field_Elem;
}



inline void _1a48ae0bc_indexingArr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _94332_d, jule::Ptr<_1a48a2753_Data>* _94347_index, jule::Ptr<_1a465e961_IndexingExpr>* _94366_i) {
	jule::Ptr<_1a48e4e16_Arr> _9447_arr = _1a48d8954_Arr((*((*(_94332_d))))._field_Type.ptr());;
	(*((*(_94332_d))))._field_Type=(*(_9447_arr))._field_Elem;
	_1a48ad781_checkIntegerIndexingByData(_self_, _94347_index, (*((*(_94366_i))))._field_Token);
	(*((*(_94332_d))))._field_Lvalue=true;
	if ((_1a48a318d_IsConst((*(_94347_index)).ptr()) && (_1a4707c7e_AsF64((*((*(_94347_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9447_arr.alloc)._field_N)))) {
		_1a48a4a0d_pushErr(_self_, (*((*(_94366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1a48ae4da_indexingSlc(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _95332_d, jule::Ptr<_1a48a2753_Data>* _95347_index, jule::Ptr<_1a465e961_IndexingExpr>* _95366_i) {
	jule::Ptr<_1a48e2ae5_Slc> _9547_slc = _1a48d8bda_Slc((*((*(_95332_d))))._field_Type.ptr());;
	(*((*(_95332_d))))._field_Type=(*(_9547_slc))._field_Elem;
	_1a48ad781_checkIntegerIndexingByData(_self_, _95347_index, (*((*(_95366_i))))._field_Token);
	(*((*(_95332_d))))._field_Lvalue=true;
	if ((!(_1a48a318d_IsConst((*(_95347_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95332_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a7a0211e:;
			{
				jule::Ptr<_1a4713d45_SliceExprModel> _9658_m = (*((*(_95332_d))))._field_Model.unsafe_cast_ptr<_1a4713d45_SliceExprModel>();;
				jule::F64 _9664_indx = _1a4707c7e_AsF64((*((*(_95347_index))))._field_Constant.ptr());;
				if ((_9664_indx >= static_cast<jule::F64>((*(_9658_m))._field_Elems.len()))) {
					_1a48a4a0d_pushErr(_self_, (*((*(_95366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_95332_d))))._field_Model=(*(_9658_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_9664_indx))];
					(*((*(_95332_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1a7a020a8:;
	};
}



inline void _1a48ae908_indexingMap(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _97632_d, jule::Ptr<_1a48a2753_Data>* _97647_index, jule::Ptr<_1a465e961_IndexingExpr>* _97666_i) {
	(*((*(_97632_d))))._field_Lvalue=true;
	if (((*(_97647_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a48e4289_Map> _9817_m = _1a48d9724_Map((*((*(_97632_d))))._field_Type.ptr());;
	_1a4890ae8_assignTypeChecker _9827_atc = _1a4890ae8_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9817_m))._field_Key, ._field_d=(*(_97647_index)), ._field_errorToken=(*((*(_97666_i))))._field_Token, ._field_refers=_1a48a7a11_getOwnerRefers(_self_)};;
	_1a4891ae9_check(&_9827_atc);
	(*((*(_97632_d))))._field_Type=(*_9817_m.alloc)._field_Val;
}



inline void _1a48aed26_indexingStr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _99332_d, jule::Ptr<_1a48a2753_Data>* _99347_index, jule::Ptr<_1a465e961_IndexingExpr>* _99366_i) {
	(*((*(_99332_d))))._field_Type=_1a495a90a_primU8;
	(*((*(_99332_d))))._field_Mutable=false;
	(*((*(_99332_d))))._field_Lvalue=true;
	if (((*(_99347_index)) == nullptr)) {
		return;;
	};
	_1a48ad781_checkIntegerIndexingByData(_self_, _99347_index, (*((*(_99366_i))))._field_Token);
	if ((!(_1a48a318d_IsConst((*(_99347_index)).ptr())))) {
		(*((*(_99332_d))))._field_Constant=nullptr;
		(*((*(_99332_d))))._field_untyped=false;
		return;;
	};
	if (_1a48a318d_IsConst((*(_99332_d)).ptr())) {
		jule::I64 _10114_j = _1a4707762_AsI64((*((*(_99347_index))))._field_Constant.ptr());;
		jule::Str _10124_s = _1a4707245_ReadStr((*((*(_99332_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10114_j) >= _10124_s.len())) {
			_1a48a4a0d_pushErr(_self_, (*((*(_99366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1a47082e0_SetU64((*((*(_99332_d))))._field_Constant, static_cast<jule::U64>(_10124_s[static_cast<jule::I32>(_10114_j)]));
		};
	};
}



inline void _1a48b0244_comptimeRange(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _102134_d, jule::Ptr<_1a48a2753_Data>* _102149_index, jule::Ptr<_1a465e961_IndexingExpr>* _102168_i) {
	if (((*(_102149_index)) == nullptr)) {
		(*(_102134_d))=nullptr;
		return;;
	};
	if ((!(_1a48ad781_checkIntegerIndexingByData(_self_, _102149_index, (*((*((*(_102168_i))))._field_Index))._field_Token)))) {
		(*(_102134_d))=nullptr;
		return;;
	};
	if ((!(_1a48a318d_IsConst((*(_102149_index)).ptr())))) {
		(*(_102134_d))=nullptr;
		_1a48a4a0d_pushErr(_self_, (*(*((*(_102168_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _10363_j = static_cast<jule::I32>(_1a4707762_AsI64((*((*(_102149_index))))._field_Constant.ptr()));;
	jule::Ptr<_1a479e144_comptimeRange> _10377_ci = _1a48db02d_comptimeRange((*((*(_102134_d))))._field_Type.ptr());;
	if ((_10363_j >= ((_1a479de24_comptimeRangeKindMptrData*)(*(_10377_ci))._field_kind.safe_type())->_1a479dcc0_len((*(_10377_ci))._field_kind.data))) {
		(*(_102134_d))=nullptr;
		_1a48a4a0d_pushErr(_self_, (*(*((*(_102168_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1a479de24_comptimeRangeKindMptrData*)(*_10377_ci.alloc)._field_kind.safe_type())->_1a479d2a8_index((*_10377_ci.alloc)._field_kind.data, _102134_d, _10363_j);
}



inline void _1a48b0662_toIndexing(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _104631_d, jule::Ptr<_1a48a2753_Data>* _104646_index, jule::Ptr<_1a465e961_IndexingExpr>* _104665_i) {
	{
		
		if ((_1a48d81a1_Ptr((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7a13a9d:;
			{
				_1a48adb9e_indexingPtr(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1a48d8954_Arr((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7a13b47:;
			{
				_1a48ae0bc_indexingArr(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1a48d8bda_Slc((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7a13bad:;
			{
				_1a48ae4da_indexingSlc(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1a48d9724_Map((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7a13c24:;
			{
				_1a48ae908_indexingMap(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7a13c8a:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _10614_prim = _1a48d7b84_Prim((*((*(_104631_d))))._field_Type);;
				{
					
					if (_1a48e1ab1_IsStr(_10614_prim.ptr())) {
						_case_begin_1a7a181ce:;
						{
							_1a48aed26_indexingStr(_self_, _104631_d, _104646_index, _104665_i);
							return;;
						}
					}
					_match_end_1a7a18124:;
				};
			}
		}
		else if ((_1a48db02d_comptimeRange((*((*(_104631_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7a13d12:;
			{
				_1a48b0244_comptimeRange(_self_, _104631_d, _104646_index, _104665_i);
				return;;
			}
		}
		_match_end_1a7a13938:;
	};
	_1a48a4a0d_pushErr(_self_, (*((*(_104665_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_104631_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a48b0b18_pushGenericsFromExprSubIdent(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465aab1_SubIdentExpr>* _107450_sexpr, jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>* _10758_generics, jule::Ptr<_1a465799d_Expr>* _107541_expr) {
	jule::Ptr<_1a465403d_SubIdentTypeDecl> _10767_t = jule::new_ptr<_1a465403d_SubIdentTypeDecl>(_1a465403d_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>>(nullptr)});;
	if ((!(_1a48d10ab_pushSubIdentFromExpr(jule::Any((*(_107450_sexpr)), &__jule_any_type88), &(_10767_t))))) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*(_107541_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*(_10758_generics)); __jule_push_dest.push(jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Kind=jule::Any(_10767_t, &__jule_any_type89)})); };
	return true;;
}



inline jule::Bool _1a48b1014_pushGenericsFromData(jule::Ptr<_1a48a447a_eval> _self_, jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>* _108542_generics, jule::Ptr<_1a465799d_Expr>* _108575_expr) {
	{
		auto &_match_expr{ (*((*(_108575_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a7a210e9:;
			{
				jule::Ptr<_1a4659a5a_UnaryExpr> _10888_u = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a4659a5a_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10888_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1a8a5833e:;
						{
							jule::Ptr<_1a4655193_PtrTypeDecl> _10919_kind = jule::new_ptr<_1a4655193_PtrTypeDecl>(_1a4655193_PtrTypeDecl{._field_Elem=jule::Ptr<_1a4653669_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _10929__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4653669_TypeDecl>(nullptr); __jule_collection; });;
							_1a48b1014_pushGenericsFromData(_self_, &(_10929__generics), &((*(_10888_u))._field_Expr));
							(*_10919_kind.alloc)._field_Elem=_10929__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*((*(_108575_expr))))._field_Token, ._field_Kind=jule::Any(_10919_kind, &__jule_any_type73)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1a8a583a5:;
						{
							jule::Ptr<_1a4654714_SptrTypeDecl> _11009_kind = jule::new_ptr<_1a4654714_SptrTypeDecl>(_1a4654714_SptrTypeDecl{._field_Elem=jule::Ptr<_1a4653669_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _11019__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4653669_TypeDecl>(nullptr); __jule_collection; });;
							_1a48b1014_pushGenericsFromData(_self_, &(_11019__generics), &((*(_10888_u))._field_Expr));
							(*_11009_kind.alloc)._field_Elem=_11019__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*((*(_108575_expr))))._field_Token, ._field_Kind=jule::Any(_11009_kind, &__jule_any_type74)})); };
						}
					}
					else {
						_case_begin_1a7a21825:;
						{
							_1a48a4a0d_pushErr(_self_.ptr(), (*(_10888_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a7a23a8b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a7a21160:;
			{
				{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push((*((*(_108575_expr))))._field_Kind.cast_ptr<_1a4653669_TypeDecl>(&__jule_any_type91)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a7a1c337:;
			{
				jule::Ptr<_1a465aab1_SubIdentExpr> _11158_sexpr = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a465aab1_SubIdentExpr>();;
				return _1a48b0b18_pushGenericsFromExprSubIdent(_self_, &(_11158_sexpr), _108542_generics, _108575_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a7a1c39d:;
			{
				jule::Ptr<_1a46592b8_IdentExpr> _11188_ident = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a46592b8_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*_11188_ident.alloc)._field_Token, ._field_Ident=(*_11188_ident.alloc)._field_Ident, ._field_Binded=(*(_11188_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)}), &__jule_any_type77)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a7a1e207:;
			{
				{
					auto expr = &((*((*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a4658592_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8a62348:;
					if (it != expr_end) {
						jule::Ptr<_1a465799d_Expr> _112716_texpr = *it;
						{
							if ((!(_1a48b1014_pushGenericsFromData(_self_, _108542_generics, &(_112716_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a8a62348:;
						++it;
						goto _iter_begin_1a8a62348;
					}
					_iter_end_1a8a62348:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a7a1e26d:;
			{
				jule::Ptr<_1a465a6d7_NamespaceExpr> _11338_ns = (*((*(_108575_expr))))._field_Kind.unsafe_cast_ptr<_1a465a6d7_NamespaceExpr>();;
				jule::Ptr<_1a4653c74_IdentTypeDecl> _11348_decl = jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*(_11338_ns))._field_Ident, ._field_Ident=(*((*_11338_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*(_108542_generics)); __jule_push_dest.push(jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*(_11348_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a4654417_NamespaceTypeDecl>(_1a4654417_NamespaceTypeDecl{._field_Namespace=(*_11338_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*_11348_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11348_decl, &__jule_any_type77)})}), &__jule_any_type93)})); };
			}
		}
		else {
			_case_begin_1a7a1c2c1:;
			{
				_1a48a4a0d_pushErr(_self_.ptr(), (*((*(_108575_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a7a1c25a:;
	};
	return true;;
}



inline void _1a48b1377_evalIdentDeclFromIndexing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48a2753_Data>* _115547_d, jule::Ptr<_1a465e961_IndexingExpr>* _115562_i) {
	jule::Ptr<_1a4676d30_StructIns> _11567_s = _1a48d9207_Struct((*((*(_115547_d))))._field_Type.ptr());;
	if ((_11567_s == nullptr)) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*((*(_115562_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_115547_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_115547_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a4653c74_IdentTypeDecl> _116311_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_115562_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a8a6e7b7:;
			{
				jule::Ptr<_1a46592b8_IdentExpr> _11668_expr = (*((*((*(_115562_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a46592b8_IdentExpr>();;
				_116311_decl=jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*_11668_expr.alloc)._field_Token, ._field_Ident=(*_11668_expr.alloc)._field_Ident, ._field_Binded=(*(_11668_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a8a70be7:;
			{
				jule::Ptr<_1a465a6d7_NamespaceExpr> _11738_expr = (*((*((*(_115562_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a465a6d7_NamespaceExpr>();;
				_116311_decl=jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*(_11738_expr))._field_Ident, ._field_Ident=(*((*_11738_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1a8a6ec3a:;
			{
				_1a48a4a0d_pushErr(_self_, (*((*(_115562_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_115547_d))=nullptr;
				return;;
			}
		}
		_match_end_1a8a6ebc4:;
	};
	if ((!(_1a48b1014_pushGenericsFromData(_self_, &((*(_116311_decl))._field_Generics), &((*((*(_115562_i))))._field_Index))))) {
		(*(_115547_d))=nullptr;
		return;;
	};
	_11567_s=({ auto _wrap_copy = _1a48b7d73_typeChecker(_self_); _1a48ebc64_fromStruct(&_wrap_copy, &(_116311_decl), &((*(_11567_s))._field_Decl)); });
	if ((_11567_s == nullptr)) {
		(*(_115547_d))=nullptr;
		return;;
	};
	(*(*((*(_115547_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11567_s, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1a48b182d_checkGenericFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4721d20_FnIns>* _119836_f, jule::Ptr<_1a463d137_Token>* _119852_et, jule::Any* _119876_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a4721d20_FnIns> _11997_old = (*(_119836_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4849b90_checkGenericFn((*(_self_))._field_s, _119836_f, _119852_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1a48d0c37_updateModelToGenericIns(_119876_model, _119836_f);
		_1a89e4e35_updateRefer(_1a48a7a11_getOwnerRefers(_self_), &(_11997_old), _119836_f);
	};
	return __jule_func_result;;
}



inline void _1a48b1b91_evalFnGenericFromIndexing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48a2753_Data>* _121447_d, jule::Ptr<_1a465e961_IndexingExpr>* _121462_i) {
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _12157_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4653669_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1a48b1014_pushGenericsFromData(_self_, &(_12157_generics), &((*((*(_121462_i))))._field_Index))))) {
		(*(_121447_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a4721d20_FnIns> _12217_f = _1a48d8e71_Fn((*((*(_121447_d))))._field_Type.ptr());;
	jule::I32 _12227_genericsLen = 0LL;;
	if (((*(_12217_f))._field_Decl != nullptr)) {
		_12227_genericsLen=(*(*(_12217_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a482d811_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12227_genericsLen, _12157_generics.len(), (*((*((*(_121462_i))))._field_Expr))._field_Token)))) {
		(*(_121447_d))=nullptr;
		return;;
	};
	(*_12217_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(0LL, (*(*(_12217_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d3ae7_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12157_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89eaad9:;
		if (it != expr_end) {
			jule::Ptr<_1a4653669_TypeDecl> _123315_g = *it;
			{
				jule::Ptr<_1a48a2753_Data> _12348_k = _1a48b81b4_evalType(_self_, _123315_g);;
				if ((_12348_k == nullptr)) {
					(*(_121447_d))=nullptr;
					return;;
				};
				(*_12217_f.alloc)._field_Generics=jule::append((*_12217_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=(*(_12348_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1a89eaad9:;
			++it;
			goto _iter_begin_1a89eaad9;
		}
		_iter_end_1a89eaad9:;
	};
	if (_1a47232d8_IsBuiltin(_12217_f)) {
		return;;
	};
	jule::Bool _12463_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a48b182d_checkGenericFn(_self_, &(_12217_f), &((*(*((*(_121462_i))))._field_Expr.alloc)._field_Token), &((*((*(_121447_d))))._field_Model));
		_12463_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12463_ok) {
		(*(*((*(_121447_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12217_f, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1);
	} else {
		(*(_121447_d))=nullptr;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48b1ed2_evalIndexing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465e961_IndexingExpr> _125433_i) {
	jule::Ptr<_1a48d54cd_Type> _12557_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12557_prefix;
	});;
	jule::Ptr<_1a48a2753_Data> _12597_d = _1a48c24cb_evalExprKind(_self_, (*((*(_125433_i))._field_Expr))._field_Kind);;
	if ((_12597_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12597_d))._field_Decl) {
		_1a48b1377_evalIdentDeclFromIndexing(_self_, &(_12597_d), &(_125433_i));
		return _12597_d;;
	};
	if ((_1a48d8e71_Fn((*(_12597_d))._field_Type.ptr()) != nullptr)) {
		_1a48b1b91_evalFnGenericFromIndexing(_self_, &(_12597_d), &(_125433_i));
		return _12597_d;;
	};
	_1a48a2753_Data _12757_oldData = (*(_12597_d));;
	jule::Ptr<_1a48a2753_Data> _12777_index = _1a48c32e0_evalExpr(_self_, (*_125433_i.alloc)._field_Index);;
	if ((_12777_index == nullptr)) {
		return nullptr;;
	};
	_1a47e6752_makeComptimeRange(&(_12597_d));
	(*(_12597_d))._field_Decl=false;
	_1a48b0662_toIndexing(_self_, &(_12597_d), &(_12777_index), &(_125433_i));
	if ((_12597_d == nullptr)) {
		return nullptr;;
	};
	if (_1a48a318d_IsConst(_12597_d.ptr())) {
		(*(_12597_d))._field_Decl=false;
		(*(_12597_d))._field_Model=jule::Any((*(_12597_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_12597_d))._field_Decl) {
		(*(_12597_d))._field_Decl=false;
	} else {
		(*(_12597_d))._field_Model=jule::Any(jule::new_ptr<_1a47142eb_IndexingExprModel>(_1a47142eb_IndexingExprModel{._field_Token=(*_125433_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a48a2753_Data>(_12757_oldData), ._field_Index=_12777_index}), &__jule_any_type42);
	};
	return _12597_d;;
}



inline __jule_tuple_x_1a48a2753_Data__jule_tuple_x_1a48a2753_Data _1a48b2323_evalSlicingExprs(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a46600c1_SlicingExpr>* _131438_s) {
	__jule_tuple_x_1a48a2753_Data__jule_tuple_x_1a48a2753_Data __jule_func_result;
	jule::Ptr<_1a48d54cd_Type> _13157_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13157_prefix;
	});;
	jule::Ptr<_1a48a2753_Data> _131911_l = nullptr;;
	jule::Ptr<_1a48a2753_Data> _132011_r = nullptr;;
	if (((*((*(_131438_s))))._field_Start != nullptr)) {
		_131911_l=_1a48c32e0_evalExpr(_self_, (*((*(_131438_s))))._field_Start);
		if ((_131911_l != nullptr)) {
			_1a48ad781_checkIntegerIndexingByData(_self_, &(_131911_l), (*((*(_131438_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131911_l=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4959b07_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a470550c_NewI64(0LL)});
		(*((*(_131911_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_131911_l.alloc)._field_Model=jule::Any((*_131911_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_131438_s))))._field_To != nullptr)) {
		_132011_r=_1a48c32e0_evalExpr(_self_, (*((*(_131438_s))))._field_To);
		if ((_132011_r != nullptr)) {
			_1a48ad781_checkIntegerIndexingByData(_self_, &(_132011_r), (*((*(_131438_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131911_l;
	__jule_func_result.__jule_result_arg1 = _132011_r;
	return __jule_func_result;;
}



inline void _1a48b25cb_slicingArr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _135027_d) {
	jule::Ptr<_1a48d54cd_Type> _13517_elemType = (*(_1a48d8954_Arr((*((*(_135027_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_135027_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2ae5_Slc>(_1a48e2ae5_Slc{._field_Elem=_13517_elemType}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24)});
	(*((*(_135027_d))))._field_Lvalue=false;
	(*((*(_135027_d))))._field_Mutable=((*((*(_135027_d))))._field_Mutable || (!(_1a48d6db4_Mutable(_13517_elemType.ptr()))));
}



inline void _1a48b29e9_slicingStr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _136527_d, jule::Ptr<_1a48a2753_Data>* _136538_l, jule::Ptr<_1a48a2753_Data>* _136549_r) {
	(*((*(_136527_d))))._field_Lvalue=false;
	(*((*(_136527_d))))._field_Mutable=true;
	if ((!(_1a48a318d_IsConst((*(_136527_d)).ptr())))) {
		return;;
	};
	if ((((*(_136538_l)) == nullptr) || ((*(_136549_r)) == nullptr))) {
		(*((*(_136527_d))))._field_Constant=nullptr;
		(*((*(_136527_d))))._field_untyped=false;
		return;;
	};
	if ((_1a48a318d_IsConst((*(_136538_l)).ptr()) && _1a48a318d_IsConst((*(_136549_r)).ptr()))) {
		jule::I64 _13794_left = _1a4707762_AsI64((*((*(_136538_l))))._field_Constant.ptr());;
		if ((_13794_left < 0LL)) {
			return;;
		};
		jule::Str _13844_s = _1a4707245_ReadStr((*((*(_136527_d))))._field_Constant);;
		jule::I64 _13858_right = static_cast<jule::I64>(0LL);;
		if (((*(_136549_r)) == nullptr)) {
			_13858_right=static_cast<jule::I64>(_13844_s.len());
		} else {
			_13858_right=_1a4707762_AsI64((*((*(_136549_r))))._field_Constant);
		};
		if ((_13794_left > _13858_right)) {
			return;;
		};
		_1a4708851_SetStr((*((*(_136527_d))))._field_Constant, _13844_s.slice(static_cast<jule::I32>(_13794_left), static_cast<jule::I32>(_13858_right)));
		(*((*(_136527_d))))._field_Decl=true;
	} else {
		(*((*(_136527_d))))._field_Constant=nullptr;
		(*((*(_136527_d))))._field_untyped=false;
	};
}



inline void _1a48b2ec2_checkSlicing(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _140333_d, jule::Ptr<_1a48a2753_Data>* _140344_l, jule::Ptr<_1a48a2753_Data>* _140355_r, jule::Ptr<_1a46600c1_SlicingExpr>* _140366_s) {
	{
		
		if ((_1a48d8954_Arr((*((*(_140333_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8a17be4:;
			{
				_1a48b25cb_slicingArr(_self_, _140333_d);
				return;;
			}
		}
		else if ((_1a48d8bda_Slc((*((*(_140333_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8a17c8d:;
			{
				return;;
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_140333_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8a17d04:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _14114_prim = _1a48d7b84_Prim((*((*(_140333_d))))._field_Type);;
				{
					
					if (_1a48e1ab1_IsStr(_14114_prim.ptr())) {
						_case_begin_1a8a1a5cb:;
						{
							_1a48b29e9_slicingStr(_self_, _140333_d, _140344_l, _140355_r);
							return;;
						}
					}
					_match_end_1a8a1a521:;
				};
			}
		}
		_match_end_1a8a17ab2:;
	};
	_1a48a4a0d_pushErr(_self_, (*((*(_140366_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_140333_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1a48a2753_Data> _1a48b3313_evalSlicing(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a46600c1_SlicingExpr> _142232_s) {
	jule::Ptr<_1a48a2753_Data> _14237_d = _1a48c32e0_evalExpr(_self_, (*(_142232_s))._field_Expr);;
	if ((_14237_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a48a2753_Data> _14287_l;
	jule::Ptr<_1a48a2753_Data> _142814_r;
	({
		__jule_tuple_x_1a48a2753_Data__jule_tuple_x_1a48a2753_Data __jule_assign_result = _1a48b2323_evalSlicingExprs(_self_, &(_142232_s));
		_14287_l = __jule_assign_result.__jule_result_arg0;
		_142814_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14287_l == nullptr)) {
		return _14237_d;;
	};
	(*(_14237_d))._field_Decl=false;
	_1a48b2ec2_checkSlicing(_self_, &(_14237_d), &(_14287_l), &(_142814_r), &(_142232_s));
	if (_1a48a318d_IsConst(_14237_d.ptr())) {
		(*(_14237_d))._field_Decl=false;
		(*(_14237_d))._field_Model=jule::Any((*(_14237_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_14237_d))._field_Decl) {
		(*(_14237_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a47155d8_SlicingExprModel> _14468_model = jule::new_ptr<_1a47155d8_SlicingExprModel>(_1a47155d8_SlicingExprModel{._field_Token=(*_142232_s.alloc)._field_Token, ._field_Expr=(*(_14237_d))._field_Model, ._field_Left=(*(_14287_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_142814_r != nullptr)) {
			(*(_14468_model))._field_Right=(*_142814_r.alloc)._field_Model;
		};
		(*(_14237_d))._field_Model=jule::Any(_14468_model, &__jule_any_type94);
	};
	return _14237_d;;
}



inline void _1a48b3731_castPtr(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _145927_t, jule::Ptr<_1a48a2753_Data> _145941_d, jule::Ptr<_1a463d137_Token> _145951_errorToken) {
	(*(_145941_d))._field_Constant=nullptr;
	(*_145941_d.alloc)._field_untyped=false;
	jule::Ptr<_1a48e2122_Sptr> _14623_sptr = _1a48d7e1a_Sptr((*_145941_d.alloc)._field_Type.ptr());;
	if ((_14623_sptr != nullptr)) {
		if ((!(_1a48d5c1a_Equal((*(_1a48d81a1_Ptr(_145927_t.ptr())))._field_Elem, (*_14623_sptr.alloc)._field_Elem)))) {
			_1a48a4a0d_pushErr(_self_, _145951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_145941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_145927_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1a48a5503_isUnsafe(_self_)))) {
		_1a48a4a0d_pushErr(_self_, _145951_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _14753_prim = _1a48d7b84_Prim((*(_145941_d))._field_Type);;
	if (((_1a48d81a1_Ptr((*(_145941_d))._field_Type) == nullptr) && ((_14753_prim == nullptr) || (!(_1a479c5e8_IsInt(_1a48dd96a_Str(_14753_prim.ptr()))))))) {
		_1a48a4a0d_pushErr(_self_, _145951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_145941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_145927_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a48b3b4e_castStruct(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _148130_t, jule::Ptr<_1a48a2753_Data> _148144_d, jule::Ptr<_1a463d137_Token> _148154_errorToken) {
	(*(_148144_d))._field_Constant=nullptr;
	(*_148144_d.alloc)._field_untyped=false;
	jule::Ptr<_1a4729476_Trait> _14847_tr = _1a48d948d_Trait((*_148144_d.alloc)._field_Type.ptr());;
	if ((_14847_tr == nullptr)) {
		_1a48a4a0d_pushErr(_self_, _148154_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_148144_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_148130_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a4676d30_StructIns> _14907_s = _1a48d9207_Struct(_148130_t);;
	_1a8a2e8ed_pushReference(_self_, &(_14907_s));
	if ((!(_1a4675647_IsImplements((*(_14907_s))._field_Decl.ptr(), _14847_tr)))) {
		_1a48a4a0d_pushErr(_self_, _148154_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_148144_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_148130_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a48b406c_castRef(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _149827_t, jule::Ptr<_1a48a2753_Data> _149841_d, jule::Ptr<_1a463d137_Token> _149851_errorToken) {
	(*(_149841_d))._field_Constant=nullptr;
	(*_149841_d.alloc)._field_untyped=false;
	jule::Ptr<_1a48e2122_Sptr> _15017_sptr = _1a48d7e1a_Sptr(_149827_t.ptr());;
	jule::Ptr<_1a48e58d9_Ptr> _15037_ptr = _1a48d81a1_Ptr((*_149841_d.alloc)._field_Type.ptr());;
	if (((_15037_ptr != nullptr) && _1a48d5c1a_Equal((*(_15017_sptr))._field_Elem, (*_15037_ptr.alloc)._field_Elem))) {
		if ((!(_1a48a5503_isUnsafe(_self_)))) {
			_1a48a4a0d_pushErr(_self_, _149851_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a48d9207_Struct((*(_15017_sptr))._field_Elem) != nullptr)) {
		_1a48b3b4e_castStruct(_self_, (*_15017_sptr.alloc)._field_Elem, _149841_d, _149851_errorToken);
		return;;
	};
	_1a48a4a0d_pushErr(_self_, _149851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_149841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_149827_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1a48b448a_castSlc(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _152127_t, jule::Ptr<_1a48a2753_Data> _152141_d, jule::Ptr<_1a463d137_Token> _152151_errorToken) {
	jule::Ptr<_1a4276798_Const> _15223_c = (*(_152141_d))._field_Constant;;
	(*_152141_d.alloc)._field_Constant=nullptr;
	(*_152141_d.alloc)._field_untyped=false;
	if ((_1a48d8437_Enum((*_152141_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1a48d7b84_Prim((*((*(_1a48d8437_Enum((*(_152141_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1a48e1ab1_IsStr(_1a48d7b84_Prim((*((*(_1a48d8437_Enum((*(_152141_d))._field_Type.ptr())))._field_TypeSym))._field_Type).ptr()))))) {
			_1a48a4a0d_pushErr(_self_, _152151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_152141_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_152127_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1a48d7b84_Prim((*_152141_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1a48e1ab1_IsStr(_1a48d7b84_Prim((*(_152141_d))._field_Type).ptr()))))) {
		_1a48a4a0d_pushErr(_self_, _152151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_152141_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_152127_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_152127_t=(*(_1a48d8bda_Slc(_152127_t.ptr())))._field_Elem;
	jule::Ptr<_1a48dd5e6_Prim> _15373_prim = _1a48d7b84_Prim(_152127_t);;
	if (((_15373_prim == nullptr) || ((!(_1a48e0021_IsU8(_15373_prim.ptr()))) && (!(_1a48dea04_IsI32(_15373_prim.ptr())))))) {
		_1a48a4a0d_pushErr(_self_, _152151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*_152141_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_152127_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15223_c != nullptr)) {
		{
			
			if (_1a48e0021_IsU8(_15373_prim.ptr())) {
				_case_begin_1a8a44407:;
				{
					jule::Str _15475_s = _1a4707245_ReadStr(_15223_c);;
					jule::Ptr<_1a4713d45_SliceExprModel> _15489_model = jule::new_ptr<_1a4713d45_SliceExprModel>(_1a4713d45_SliceExprModel{._field_ElemType=_152127_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15475_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15475_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8a45cbb:;
						if (it != expr_end) {
							jule::U8 *_155212_b = it;
							{
								jule::Ptr<_1a4276798_Const> _155310_bc = static__1a47057c6_NewU64(static_cast<jule::U64>((*(_155212_b))));;
								(*(_155310_bc))._field_Kind=(*(_15373_prim))._field_Kind;
								(*(_15489_model))._field_Elems=jule::append((*_15489_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_155310_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1a8a45cbb:;
							++it;
							goto _iter_begin_1a8a45cbb;
						}
						_iter_end_1a8a45cbb:;
					};
					(*_152141_d.alloc)._field_Model=jule::Any(_15489_model, &__jule_any_type79);
					(*_152141_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a48dea04_IsI32(_15373_prim.ptr())) {
				_case_begin_1a8a444a1:;
				{
					jule::Slice<jule::I32> _15605_runes = __jule_strToRunes(_1a4707245_ReadStr(_15223_c));;
					jule::Ptr<_1a4713d45_SliceExprModel> _15619_model = jule::new_ptr<_1a4713d45_SliceExprModel>(_1a4713d45_SliceExprModel{._field_ElemType=_152127_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15605_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15605_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8a491ed:;
						if (it != expr_end) {
							jule::I32 *_156512_r = it;
							{
								jule::Ptr<_1a4276798_Const> _156610_rc = static__1a470550c_NewI64(static_cast<jule::I64>((*(_156512_r))));;
								(*(_156610_rc))._field_Kind=(*(_15373_prim))._field_Kind;
								(*(_15619_model))._field_Elems=jule::append((*_15619_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_156610_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1a8a491ed:;
							++it;
							goto _iter_begin_1a8a491ed;
						}
						_iter_end_1a8a491ed:;
					};
					(*_152141_d.alloc)._field_Model=jule::Any(_15619_model, &__jule_any_type79);
					(*_152141_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1a8a44319:;
		};
	};
}



inline void _1a48b47ed_castStr(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _157627_d, jule::Ptr<_1a463d137_Token> _157637_errorToken) {
	if ((_1a48d8437_Enum((*(_157627_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a472bb2c_Enum> _15788_e = _1a48d8437_Enum((*(_157627_d))._field_Type);;
		if (((_1a48d7b84_Prim((*((*(_15788_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1a48e1ab1_IsStr(_1a48d7b84_Prim((*((*(_15788_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a4276798_Const> _15843_c = (*_157627_d.alloc)._field_Constant;;
	(*_157627_d.alloc)._field_Constant=nullptr;
	(*_157627_d.alloc)._field_untyped=false;
	if ((_1a48d7b84_Prim((*(_157627_d))._field_Type) != nullptr)) {
		jule::Ptr<_1a48dd5e6_Prim> _15884_prim = _1a48d7b84_Prim((*(_157627_d))._field_Type);;
		if (((!(_1a48e0021_IsU8(_15884_prim.ptr()))) && (!(_1a48dea04_IsI32(_15884_prim))))) {
			_1a48a4a0d_pushErr(_self_, _157637_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_157627_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_15843_c != nullptr)) {
			{
				
				if (_1a48e0021_IsU8(_15884_prim)) {
					_case_begin_1a8a51e92:;
					{
						(*_157627_d.alloc)._field_Constant=static__1a4705d59_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1a47079e8_AsU64(_15843_c))));
						(*_157627_d.alloc)._field_Model=jule::Any((*_157627_d.alloc)._field_Constant, &__jule_any_type15);
						(*_157627_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a48dea04_IsI32(_15884_prim)) {
					_case_begin_1a8a5203b:;
					{
						(*_157627_d.alloc)._field_Constant=static__1a4705d59_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1a4707762_AsI64(_15843_c))));
						(*_157627_d.alloc)._field_Model=jule::Any((*_157627_d.alloc)._field_Constant, &__jule_any_type15);
						(*_157627_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1a8a51d71:;
			};
		};
		return;;
	};
	jule::Ptr<_1a48e2ae5_Slc> _16097_s = _1a48d8bda_Slc((*(_157627_d))._field_Type);;
	if ((_16097_s == nullptr)) {
		_1a48a4a0d_pushErr(_self_, _157637_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_157627_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a48d54cd_Type> _16157_t = (*(_16097_s))._field_Elem;;
	jule::Ptr<_1a48dd5e6_Prim> _16163_prim = _1a48d7b84_Prim(_16157_t.ptr());;
	if (((_16163_prim == nullptr) || ((!(_1a48e0021_IsU8(_16163_prim.ptr()))) && (!(_1a48dea04_IsI32(_16163_prim.ptr())))))) {
		_1a48a4a0d_pushErr(_self_, _157637_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_157627_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1a48b4c1b_castInt(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _162327_t, jule::Ptr<_1a48a2753_Data> _162341_d, jule::Ptr<_1a463d137_Token> _162351_errorToken) {
	if (_1a48a318d_IsConst(_162341_d.ptr())) {
		jule::Ptr<_1a48dd5e6_Prim> _16254_prim = _1a48d7b84_Prim(_162327_t.ptr());;
		{
			
			if (_1a479c021_IsSigInt((*(_16254_prim))._field_Kind)) {
				_case_begin_1a8bbb084:;
				{
					_1a4708037_SetI64((*_162341_d.alloc)._field_Constant.ptr(), _1a4707762_AsI64((*(_162341_d))._field_Constant));
				}
			}
			else if (_1a479c32e_IsUnsigInt((*(_16254_prim))._field_Kind)) {
				_case_begin_1a8bbb12d:;
				{
					_1a47082e0_SetU64((*_162341_d.alloc)._field_Constant.ptr(), _1a47079e8_AsU64((*(_162341_d))._field_Constant));
				}
			}
			_match_end_1a8bbaeeb:;
		};
	} else {
		(*(_162341_d))._field_Constant=nullptr;
		(*_162341_d.alloc)._field_untyped=false;
	};
	if ((_1a48d8437_Enum((*(_162341_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a472bb2c_Enum> _16384_e = _1a48d8437_Enum((*(_162341_d))._field_Type);;
		if (_1a479cbc0_IsNum(_1a48d58c9_Str((*((*(_16384_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	if ((_1a48d7e1a_Sptr((*(_162341_d))._field_Type) != nullptr)) {
		jule::Ptr<_1a48dd5e6_Prim> _16454_prim = _1a48d7b84_Prim(_162327_t.ptr());;
		if ((!(_1a48e1594_IsUintptr(_16454_prim.ptr())))) {
			_1a48a4a0d_pushErr(_self_, _162351_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_162341_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_162327_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1a48d81a1_Ptr((*(_162341_d))._field_Type) != nullptr)) {
		jule::Ptr<_1a48dd5e6_Prim> _16524_prim = _1a48d7b84_Prim(_162327_t);;
		if (_1a48e1594_IsUintptr(_16524_prim.ptr())) {
		} else if ((!(_1a48a5503_isUnsafe(_self_)))) {
			_1a48a4a0d_pushErr(_self_, _162351_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _16613_prim = _1a48d7b84_Prim((*(_162341_d))._field_Type);;
	if (((_16613_prim != nullptr) && _1a479cbc0_IsNum(_1a48dd96a_Str(_16613_prim)))) {
		return;;
	};
	_1a48a4a0d_pushErr(_self_, _162351_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_162341_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_162327_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1a48b5139_castNum(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _166927_t, jule::Ptr<_1a48a2753_Data> _166941_d, jule::Ptr<_1a463d137_Token> _166951_errorToken) {
	if (_1a48a318d_IsConst(_166941_d.ptr())) {
		jule::Ptr<_1a48dd5e6_Prim> _16714_prim = _1a48d7b84_Prim(_166927_t.ptr());;
		{
			
			if (_1a479c939_IsFloat((*(_16714_prim))._field_Kind)) {
				_case_begin_1a8bc75bd:;
				{
					_1a4708b09_SetF64((*_166941_d.alloc)._field_Constant.ptr(), _1a4707c7e_AsF64((*(_166941_d))._field_Constant));
				}
			}
			else if (_1a479c021_IsSigInt((*(_16714_prim))._field_Kind)) {
				_case_begin_1a8bc7667:;
				{
					_1a4708037_SetI64((*_166941_d.alloc)._field_Constant.ptr(), _1a4707762_AsI64((*(_166941_d))._field_Constant));
				}
			}
			else if (_1a479c32e_IsUnsigInt((*(_16714_prim))._field_Kind)) {
				_case_begin_1a8bc76cd:;
				{
					_1a47082e0_SetU64((*_166941_d.alloc)._field_Constant.ptr(), _1a47079e8_AsU64((*(_166941_d))._field_Constant));
				}
			}
			_match_end_1a8bc74e1:;
		};
	} else {
		(*(_166941_d))._field_Constant=nullptr;
		(*_166941_d.alloc)._field_untyped=false;
	};
	if ((_1a48d8437_Enum((*(_166941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a472bb2c_Enum> _16864_e = _1a48d8437_Enum((*(_166941_d))._field_Type);;
		if (_1a479cbc0_IsNum(_1a48d58c9_Str((*((*(_16864_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a48dd5e6_Prim> _16923_prim = _1a48d7b84_Prim((*(_166941_d))._field_Type);;
	if (((_16923_prim != nullptr) && _1a479cbc0_IsNum(_1a48dd96a_Str(_16923_prim)))) {
		return;;
	};
	_1a48a4a0d_pushErr(_self_, _166951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_166941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_166927_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1a48b5557_castPrim(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _170028_t, jule::Ptr<_1a48a2753_Data> _170042_d, jule::Ptr<_1a463d137_Token> _170052_errorToken) {
	jule::Ptr<_1a48dd5e6_Prim> _17013_prim = _1a48d7b84_Prim(_170028_t.ptr());;
	{
		
		if (_1a48e1d47_IsAny(_17013_prim.ptr())) {
			_case_begin_1a8bd0c25:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1704:4"));;
			}
		}
		else if (_1a48e1ab1_IsStr(_17013_prim.ptr())) {
			_case_begin_1a8bd08c3:;
			{
				_1a48b47ed_castStr(_self_, _170042_d, _170052_errorToken);
			}
		}
		else if (_1a479c5e8_IsInt(_1a48dd96a_Str(_17013_prim.ptr()))) {
			_case_begin_1a8bd0939:;
			{
				_1a48b4c1b_castInt(_self_, _170028_t, _170042_d, _170052_errorToken);
			}
		}
		else if (_1a479cbc0_IsNum(_1a48dd96a_Str(_17013_prim.ptr()))) {
			_case_begin_1a8bd09a0:;
			{
				_1a48b5139_castNum(_self_, _170028_t, _170042_d, _170052_errorToken);
			}
		}
		else {
			_case_begin_1a8bd085c:;
			{
				_1a48a4a0d_pushErr(_self_, _170052_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str(_170028_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a8bd07d5:;
	};
}



inline void _1a48b58ba_castConstant(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type>* _171633_t, jule::Ptr<_1a48a2753_Data>* _171648_d) {
	if ((((*(_171648_d)) == nullptr) || (!(_1a48a318d_IsConst((*(_171648_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _17203_prim = _1a48d7b84_Prim((*(_171633_t)).ptr());;
	_1a48d0a5b_castConstByType(&((*(_17203_prim))._field_Kind), _171648_d);
	(*((*(_171648_d))))._field_Model=jule::Any((*((*(_171648_d))))._field_Constant, &__jule_any_type15);
}



inline void _1a48b5cd8_castTypeEnum(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type>* _172533_t, jule::Ptr<_1a48a2753_Data>* _172548_d, jule::Ptr<_1a463d137_Token>* _172563_errorToken) {
	jule::I32 _17263_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a483a08c_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_172548_d))))._field_Type), _172533_t, _172563_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17263_n);;
		_1a48a4a0d_pushErr(_self_, (*(_172563_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_172548_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_172533_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_172548_d))))._field_Constant=nullptr;
	(*((*(_172548_d))))._field_untyped=false;
}



inline void _1a48b6206_castTypeEnumT(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type>* _173534_t, jule::Ptr<_1a48a2753_Data>* _173549_d, jule::Ptr<_1a463d137_Token>* _173564_errorToken) {
	jule::I32 _17363_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a483a08c_checkTypeCompatibility((*(_self_))._field_s, _173534_t, &((*((*(_173549_d))))._field_Type), _173564_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17363_n);;
		_1a48a4a0d_pushErr(_self_, (*(_173564_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_173549_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_173534_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_173549_d))))._field_Constant=nullptr;
	(*((*(_173549_d))))._field_untyped=false;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b66ac_evalCastByTypeNData(_1a48a447a_eval* _self_, jule::Ptr<_1a48d54cd_Type> _174539_t, jule::Ptr<_1a48a2753_Data> _174553_d, jule::Ptr<_1a463d137_Token> _174567_errorToken) {
	if (((_174553_d != nullptr) && (*_174553_d.alloc)._field_Decl)) {
		_1a48a4a0d_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a48a2b71_IsNil(_174553_d)) {
			_case_begin_1a8bdd87b:;
			{
				if ((!(_1a48d73d1_NilCompatible(_174539_t.ptr())))) {
					_1a48a4a0d_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_174539_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_174553_d.alloc)._field_Constant=nullptr;
				(*_174553_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a48d7b84_Prim((*_174553_d.alloc)._field_Type.ptr()) != nullptr) && _1a48e1d47_IsAny(_1a48d7b84_Prim((*(_174553_d))._field_Type).ptr()))) {
			_case_begin_1a8bdd628:;
			{
				if ((_1a48d8437_Enum(_174539_t.ptr()) != nullptr)) {
					_1a48a4a0d_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1a48d86bd_TypeEnum(_174539_t.ptr()) != nullptr)) {
					_1a48a4a0d_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_174553_d.alloc)._field_Constant=nullptr;
				(*_174553_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a48d7b84_Prim(_174539_t.ptr()) != nullptr) && _1a48e1d47_IsAny(_1a48d7b84_Prim(_174539_t).ptr()))) {
			_case_begin_1a8bdd68e:;
			{
				(*_174553_d.alloc)._field_Constant=nullptr;
				(*_174553_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a48d86bd_TypeEnum((*_174553_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8bdd705:;
			{
				_1a48b5cd8_castTypeEnum(_self_, &(_174539_t), &(_174553_d), &(_174567_errorToken));
			}
		}
		else if ((_1a48d86bd_TypeEnum(_174539_t.ptr()) != nullptr)) {
			_case_begin_1a8bdd76b:;
			{
				_1a48b6206_castTypeEnumT(_self_, &(_174539_t), &(_174553_d), &(_174567_errorToken));
			}
		}
		else if ((_1a48d81a1_Ptr(_174539_t.ptr()) != nullptr)) {
			_case_begin_1a8bde54c:;
			{
				_1a48b3731_castPtr(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1a48d7e1a_Sptr(_174539_t.ptr()) != nullptr)) {
			_case_begin_1a8bde5b3:;
			{
				_1a48b406c_castRef(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1a48d8bda_Slc(_174539_t.ptr()) != nullptr)) {
			_case_begin_1a8bde629:;
			{
				_1a48b448a_castSlc(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1a48d9207_Struct(_174539_t.ptr()) != nullptr)) {
			_case_begin_1a8bde690:;
			{
				_1a48b3b4e_castStruct(_self_, _174539_t, _174553_d, _174567_errorToken);
			}
		}
		else if ((_1a48d7b84_Prim(_174539_t.ptr()) != nullptr)) {
			_case_begin_1a8bde706:;
			{
				_1a48b5557_castPrim(_self_, _174539_t, _174553_d, _174567_errorToken);
				_1a48b58ba_castConstant(_self_, &(_174539_t), &(_174553_d));
			}
		}
		else {
			_case_begin_1a8bdd4e6:;
			{
				_1a48a4a0d_pushErr(_self_, _174567_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str(_174539_t.ptr()), &__jule_any_type5); __jule_collection; }));
				_174553_d=nullptr;
			}
		}
		_match_end_1a8bdd480:;
	};
	if ((_174553_d == nullptr)) {
		return nullptr;;
	};
	(*_174553_d.alloc)._field_Mutable=((*_174553_d.alloc)._field_Mutable || (!(_1a48d6db4_Mutable((*_174553_d.alloc)._field_Type.ptr()))));
	if (((!((*_174553_d.alloc)._field_Decl)) && ((_1a48d8437_Enum((*(_174553_d))._field_Type) == nullptr) || (!(_1a48d5c1a_Equal((*((*(_1a48d8437_Enum((*(_174553_d))._field_Type)))._field_TypeSym))._field_Type, _174539_t)))))) {
		_1a48ce83a_applyCastKind(&((*(_self_))._field_s), &(_174553_d), &(_174539_t), &(_174567_errorToken), _1a48a7a11_getOwnerRefers(_self_));
		(*((*_174553_d.alloc)._field_Model.cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95)))._field_Token=_174567_errorToken;
	} else {
		(*_174553_d.alloc)._field_Type=_174539_t;
	};
	(*_174553_d.alloc)._field_Decl=false;
	(*_174553_d.alloc)._field_Lvalue=false;
	(*_174553_d.alloc)._field_untyped=false;
	if (_1a48a318d_IsConst(_174553_d)) {
		(*((*_174553_d.alloc)._field_Constant))._field_Kind=(*(_1a48d7b84_Prim(_174539_t.ptr())))._field_Kind;
	};
	return _174553_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b6b63_evalCastT(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48d54cd_Type>* _182231_t, jule::Ptr<_1a465799d_Expr>* _182246_e, jule::Ptr<_1a463d137_Token>* _182266_et) {
	jule::Ptr<_1a48d54cd_Type> _18237_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18237_prefix;
	});;
	if ((_1a48d8bda_Slc((*(_182231_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_182246_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1a8c014a4:;
				{
					(*_self_.alloc)._field_prefix=(*(_182231_t));
				}
			}
			_match_end_1a8c0142c:;
		};
	};
	jule::Ptr<_1a48a2753_Data> _18327_d = _1a48c32e0_evalExpr(_self_, (*(_182246_e)));;
	if (((_18327_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18327_d;;
	};
	return _1a48b66ac_evalCastByTypeNData(_self_, (*(_182231_t)), _18327_d, (*(_182266_et)));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b6ea4_evalCast(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465a30d_CastExpr> _183929_c) {
	jule::Ptr<_1a48dcbde_TypeSym> _18407_t = _1a47ebc1e_buildType((*(_183929_c))._field_Kind);;
	jule::Bool _18413_ok = _1a4837232_checkTypeSym((*(_self_))._field_s, &(_18407_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18413_ok))) {
		return nullptr;;
	};
	return _1a48b6b63_evalCastT(_self_, &((*(_18407_t))._field_Type), &((*_183929_c.alloc)._field_Expr), &((*((*_183929_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b72e5_evalNamespace(_1a48a447a_eval* _self_, jule::Ptr<_1a465a6d7_NamespaceExpr> _184833_s) {
	jule::Ptr<_1a480c3d3_ImportInfo> _18497_imp = _1a48d2e04_findNamespace((*(_self_))._field_lookup, (*((*(_184833_s))._field_Namespace))._field_Kind);;
	if ((_18497_imp == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*_184833_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_184833_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18557_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18497_imp, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data2);
	;
	_1a48a526c_disallowBuiltin(_self_);
	jule::Any _18607_def = _1a48a777a_getDef(_self_, &((*((*_184833_s.alloc)._field_Ident))._field_Kind), false);;
	_1a48a506e_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18557_lookup;
	jule::Ptr<_1a48a2753_Data> _18637_d = _1a48ab938_evalDef(_self_, &(_18607_def), (*_184833_s.alloc)._field_Ident);;
	return _18637_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b779b_evalStructLitExplicit(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4676d30_StructIns> _186742_s, jule::Slice<jule::Ptr<_1a465799d_Expr>> _18687_exprs, jule::Ptr<_1a463d137_Token> _186832_errorToken) {
	jule::Bool _18693_ok = _1a482d811_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_186742_s))._field_Decl))._field_Generics.len(), (*_186742_s.alloc)._field_Generics.len(), _186832_errorToken);;
	if ((!(_18693_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_186742_s.alloc)._field_Decl))) {
		_1a48a4a0d_pushErr(_self_, _186832_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_186742_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1a8a2e8ed_pushReference(_self_, &(_186742_s));
	_1a48a9b34_checkDeprecated(_self_, &((*(*(_186742_s))._field_Decl.alloc)._field_Directives), _186832_errorToken);
	_1a489a262_structLitChecker _18827_slc = _1a489a262_structLitChecker{._field_e=_self_, ._field_errorToken=_186832_errorToken, ._field_s=_186742_s, ._field_args=jule::Slice<jule::Ptr<_1a4712393_StructArgExprModel>>(nullptr)};;
	_1a489b9d3_check(&_18827_slc, &(_18687_exprs));
	jule::Ptr<_1a48a2753_Data> _18897_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_186742_s, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a4712739_StructLitExprModel>(_1a4712739_StructLitExprModel{._field_Strct=_186742_s, ._field_Args=_18827_slc._field_args}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	if ((*(*(_186742_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_18897_d))._field_Type))._field_BindIdent=(*(*(_186742_s))._field_Decl.alloc)._field_Ident;
	};
	return _18897_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b7adc_evalStructLit(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465c9e7_StructLit> _190534_lit) {
	jule::Ptr<_1a48dcbde_TypeSym> _19067_t = _1a47ebc1e_buildType((*(_190534_lit))._field_Kind);;
	jule::Bool _19073_ok = _1a4837232_checkTypeSym((*(_self_))._field_s, &(_19067_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19073_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a4676d30_StructIns> _19127_s = _1a48d9207_Struct((*(_19067_t))._field_Type.ptr());;
	if ((_19127_s == nullptr)) {
		if ((_1a48d7e1a_Sptr((*(_19067_t))._field_Type) != nullptr)) {
			_19127_s=_1a48d9207_Struct((*(_1a48d7e1a_Sptr((*(_19067_t))._field_Type)))._field_Elem.ptr());
			if ((_19127_s != nullptr)) {
				goto _julec_label_1a8c19159;
			};
		};
		_1a48a4a0d_pushErr(_self_, (*((*_190534_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a8c19159:;
	jule::Ptr<_1a48a2753_Data> _19257_d = _1a48b779b_evalStructLitExplicit(_self_, _19127_s, (*_190534_lit.alloc)._field_Exprs, (*(*(_190534_lit))._field_Kind.alloc)._field_Token);;
	if ((_1a48d7e1a_Sptr((*(_19067_t))._field_Type) != nullptr)) {
		jule::Ptr<_1a4712739_StructLitExprModel> _19278_model = (*(_19257_d))._field_Model.cast_ptr<_1a4712739_StructLitExprModel>(&__jule_any_type97);;
		_1a48cc67e_makeStructLitAlloc(&(_19257_d), &(_19278_model));
	};
	return _19257_d;;
}



inline _1a48e78ca_typeChecker _1a48b7d73_typeChecker(_1a48a447a_eval* _self_) {
	return _1a4831171_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b81b4_evalType(_1a48a447a_eval* _self_, jule::Ptr<_1a4653669_TypeDecl> _193728_t) {
	jule::Ptr<_1a48dcbde_TypeSym> _19387_tk = _1a47ebc1e_buildType(_193728_t);;
	jule::Bool _19393_ok = _1a4837232_checkTypeSym((*(_self_))._field_s, &(_19387_tk), (*(_self_))._field_lookup);;
	if ((!(_19393_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=(*(_19387_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19387_tk.alloc)._field_Type, &__jule_any_type86), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline void _1a48b8527_callTypeFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr>* _195032_fc, jule::Ptr<_1a48a2753_Data>* _195059_d) {
	if (((*((*(_195032_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*(_195032_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_195032_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*((*(_195032_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_195059_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_195032_fc))))._field_IsCo) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*(_195032_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_195059_d))=nullptr;
		return;;
	} else if (((*((*(_195032_fc))))._field_Exception != nullptr)) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*(_195032_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_195059_d))=nullptr;
		return;;
	};
	if (((*((*(_195032_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a465799d_Expr> _19668_arg = (*((*(_195032_fc))))._field_Args[0LL];;
		(*(_195059_d))=_1a48b6b63_evalCastT(_self_, &((*((*(_195059_d))))._field_Type), &(_19668_arg), &((*(_19668_arg))._field_Token));
		return;;
	};
	if (((*(_195059_d)) != nullptr)) {
		(*((*(_195059_d))))._field_Decl=false;
	};
}



inline void _1a48b888a_callBuiltinFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr>* _197635_fc, jule::Ptr<_1a48a2753_Data>* _197662_d) {
	if ((!(_1a465ba7e_Unhandled((*(_197635_fc)).ptr())))) {
		_1a48a4a0d_pushErr(_self_.ptr(), (*((*(_197635_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_197662_d))=(*(_1a48d8e71_Fn((*((*(_197662_d))))._field_Type.ptr())))._field_caller(&(_self_), _197635_fc, _197662_d);
	if (((*(_197662_d)) == nullptr)) {
		return;;
	};
	(*((*(_197662_d))))._field_Mutable=true;
}



inline void _1a48b8bed_checkFnOfConcurrentCall(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns>* _198840_f, jule::Ptr<_1a463d137_Token> _198851_errorToken) {
	if (_1a48a5503_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_198840_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c2818a:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> *_199210_p = it;
			{
				if (_1a471c8dc_IsSelf((*((*(_199210_p))))._field_Decl.ptr())) {
					if ((!(_1a471cb73_IsRef((*((*(_199210_p))))._field_Decl)))) {
						_1a48a4a0d_pushErr(_self_, _198851_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_199210_p))))._field_Decl.alloc)._field_Reference) {
					_1a48a4a0d_pushErr(_self_, _198851_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a8c2818a:;
			++it;
			goto _iter_begin_1a8c2818a;
		}
		_iter_end_1a8c2818a:;
	};
}



inline void _1a48b911b_processExceptionalHandler(_1a48a447a_eval* _self_, jule::Ptr<_1a4721d20_FnIns>* _200746_f, jule::Ptr<_1a465b6c7_FnCallExpr>* _200762_fc, jule::Ptr<_1a48a2753_Data>* _200789_d) {
	jule::Bool _20083_resultNeeded = ((!(_1a471e218_IsVoid((*((*(_200746_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a47d3cc2_scopeChecker> _200911_csc = nullptr;;
	jule::Ptr<_1a47cba34_Scope> _201011_ch = nullptr;;
	jule::Ptr<_1a471396b_FnCallExprModel> _20127_model = (*((*(_200789_d))))._field_Model.cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30);;
	jule::Ptr<_1a47d3cc2_scopeChecker> _20167_sc = (*(_self_))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1);;
	_200911_csc=_1a47e61d0_newChildChecker(_20167_sc);
	if (_20083_resultNeeded) {
		(*(_200911_csc))._field_result=(*(_200746_f));
	};
	_201011_ch=_1a47d947b_getChild(_20167_sc);
	(*((*((*(_200762_fc))))._field_Exception))._field_Parent=(*_20167_sc.alloc)._field_tree;
	(*((*_200911_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_200911_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a48cca03_buildErrorVar(&(_201011_ch), _200762_fc); __jule_collection; }));
	_1a47d9899_checkChildSsc(_20167_sc, &((*((*(_200762_fc))))._field_Exception), &(_201011_ch), &(_200911_csc));
	(*(_20127_model))._field_Assigned=_20083_resultNeeded;
	(*_20127_model.alloc)._field_Except=_201011_ch;
	if ((_20083_resultNeeded && ((*_200911_csc.alloc)._field_result != nullptr))) {
		_1a48a4a0d_pushErr(_self_, (*((*(_200762_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1a48b947e_callFn(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr>* _203428_fc, jule::Ptr<_1a48a2753_Data>* _203455_d) {
	jule::Ptr<_1a4721d20_FnIns> _20357_f = _1a48d8e71_Fn((*((*(_203455_d))))._field_Type.ptr());;
	if (_1a47232d8_IsBuiltin(_20357_f.ptr())) {
		_1a48b888a_callBuiltinFn(_self_, _203428_fc, _203455_d);
		return;;
	};
	if (((!(_1a471e49e_IsMethod((*_20357_f.alloc)._field_Decl.ptr()))) && _1a4901a49_hasDirective(&((*(*(_20357_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1a48a4a0d_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_203455_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_203455_d))))._field_Mutable)) && _1a471e49e_IsMethod((*(_20357_f))._field_Decl)) && (!((*(*(_20357_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20357_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a48a4a0d_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a4712739_StructLitExprModel> _20555_lit = _1a48d1bd3_isLitBased(&((*((*(_203455_d))))._field_Model));;
			if ((_20555_lit == nullptr)) {
				_1a48a4a0d_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1a4899c78_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20555_lit));
			};
		};
	} else if (((!(_1a48a5503_isUnsafe(_self_))) && (*(*(_20357_f))._field_Decl.alloc)._field_Unsafety)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20677_dynamicAnnotation = ((((*(*(_20357_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20357_f.alloc)._field_Generics.len() == 0LL)) && ((*_20357_f.alloc)._field_Params.len() > 0LL));;
	if (_20677_dynamicAnnotation) {
		(*_20357_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc((*(*(_20357_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20357_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d3ae7_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20357_f.alloc)._field_Generics.len() != (*(*(_20357_f))._field_Decl.alloc)._field_Generics.len())) {
		_1a482d811_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20357_f))._field_Decl.alloc)._field_Generics.len(), (*_20357_f.alloc)._field_Generics.len(), (*((*(_203428_fc))))._field_Token);
		(*(_203455_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a48293cd_sema> _20767_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20357_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20357_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20767_old != (*_self_.alloc)._field_s)) {
			(*(_20767_old))._field_errors=jule::append((*_20767_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20767_old;
	});;
	_1a489732a_fnCallArgChecker _20897_fcac = _1a489732a_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_203428_fc))))._field_Args, ._field_errorToken=(*((*(_203428_fc))))._field_Token, ._field_f=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_dynamicAnnotation=_20677_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)};;
	if ((!(_20677_dynamicAnnotation))) {
		if ((!((*_20357_f.alloc)._field_reloaded))) {
			jule::Bool _20985_ok = _1a483cea2_reloadFnInsTypes((*(_self_))._field_s, _20357_f);;
			(*_20357_f.alloc)._field_reloaded=true;
			if ((!(_20985_ok))) {
				(*(_203455_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a4721d20_FnIns> _21058_existInstance = _1a4720813_appendInstance((*(_20357_f))._field_Decl, &(_20357_f));;
		if ((_21058_existInstance != nullptr)) {
			_20357_f=_21058_existInstance;
		};
	} else if ((!(_1a483b313_buildFnNonGenericTypes((*(_self_))._field_s, _20357_f, &(_20897_fcac._field_ignored))))) {
		(*(_203455_d))=nullptr;
		return;;
	};
	_20897_fcac._field_f=_20357_f;
	jule::Bool _21167_ok = false;;
	if (((*(*(_20357_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20767_old, (*_self_.alloc)._field_s);
		_21167_ok=_1a4899915_check(&_20897_fcac);
		std::swap(_20767_old, (*_self_.alloc)._field_s);
	} else {
		_21167_ok=_1a4899915_check(&_20897_fcac);
	};
	if (_20677_dynamicAnnotation) {
		if ((!(_21167_ok))) {
			(*(_203455_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a48b182d_checkGenericFn(_self_, &(_20357_f), &((*((*(_203428_fc))))._field_Token), &((*((*(_203455_d))))._field_Model));
			_21167_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21167_ok))) {
			(*(_203455_d))=nullptr;
			return;;
		};
	};
	jule::Any _21377_callModel = (*((*(_203455_d))))._field_Model;;
	if (_1a471e218_IsVoid((*(_20357_f))._field_Decl)) {
		(*(_203455_d))=_1a48cea49_buildVoidData();
	} else {
		(*((*(_203455_d))))._field_Type=(*_20357_f.alloc)._field_Result;
		(*((*(_203455_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a471396b_FnCallExprModel> _21467_model = jule::new_ptr<_1a471396b_FnCallExprModel>(_1a471396b_FnCallExprModel{._field_Token=(*((*(_203428_fc))))._field_Token, ._field_Func=_20357_f, ._field_IsCo=(*((*(_203428_fc))))._field_IsCo, ._field_Expr=_21377_callModel, ._field_Args=_20897_fcac._field_argModels, ._field_Except=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_203455_d))))._field_Model=jule::Any(_21467_model, &__jule_any_type30);
	(*((*(_203455_d))))._field_Mutable=true;
	if ((*(*(_20357_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_203428_fc))))._field_IsCo) {
			_1a482c2d2_pushErr((*(_self_))._field_s, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1a482c645_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a465ba7e_Unhandled((*(_203428_fc)).ptr())) {
				_case_begin_1a8c4ddc5:;
				{
					_1a48a4a0d_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1a465bd15_Ignored((*(_203428_fc)).ptr())) {
				_case_begin_1a8c4daa6:;
				{
					goto _match_end_1a8c4c489;
				}
			}
			else {
				_case_begin_1a8c4c533:;
				{
					_1a48b911b_processExceptionalHandler(_self_, &(_20357_f), _203428_fc, _203455_d);
				}
			}
			_match_end_1a8c4c489:;
		};
	} else if ((!(_1a465ba7e_Unhandled((*(_203428_fc)).ptr())))) {
		_1a48a4a0d_pushErr(_self_, (*((*(_203428_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_203428_fc))))._field_IsCo) {
		(*((*(_21467_model))._field_Func))._field_AsAnon=true;
		(*(*(_21467_model))._field_Func.alloc)._field_CalledCo=true;
		_1a48b8bed_checkFnOfConcurrentCall(_self_, &((*_21467_model.alloc)._field_Func), (*((*(_203428_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48b97c0_evalFnCall(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b6c7_FnCallExpr> _218331_fc) {
	jule::Ptr<_1a48d54cd_Type> _21847_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21847_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_218331_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a8c5435e:;
			{
				if (((*((*((*(_218331_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1a495d2c0_builtinCallerError(&(_self_), &(_218331_fc));;
				};
			}
		}
		_match_end_1a8c542d7:;
	};
	jule::Ptr<_1a48a2753_Data> _21977_d = _1a48c24cb_evalExprKind(_self_, (*(*(_218331_fc))._field_Expr.alloc)._field_Kind);;
	if ((_21977_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_21977_d))._field_Decl) {
		_1a48b8527_callTypeFn(_self_, &(_218331_fc), &(_21977_d));
		return _21977_d;;
	};
	if ((_1a48d8e71_Fn((*(_21977_d))._field_Type.ptr()) == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*_218331_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a48b947e_callFn(_self_, &(_218331_fc), &(_21977_d));
	return _21977_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48b9bbb_evalEnumStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a472bb2c_Enum> _221634_enm, jule::Ptr<_1a463d137_Token> _221650_ident) {
	jule::Ptr<_1a472b0c1_EnumItem> _22177_item = _1a472c754_FindItem(_221634_enm.ptr(), (*(_221650_ident))._field_Kind);;
	if ((_22177_item == nullptr)) {
		_1a48a4a0d_pushErr(_self_, _221650_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_221634_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_221650_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1a48d1919_evalEnumStatic(&((*(_self_))._field_s), &(_221634_enm), &(_22177_item), &(_221650_ident), _1a48a7a11_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ba0b7_evalTypeEnumStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a472d337_TypeEnum> _222438_enm, jule::Ptr<_1a463d137_Token> _222454_ident) {
	jule::Ptr<_1a472cc60_TypeEnumItem> _22257_item = _1a472de2b_FindItem(_222438_enm.ptr(), (*(_222454_ident))._field_Kind);;
	if ((_22257_item == nullptr)) {
		_1a48a4a0d_pushErr(_self_, _222454_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_222438_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_222454_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1a48d8437_Enum((*((*(_22257_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8c5d16a:;
			{
				return _1a48a810a__evalEnum(_self_, _1a48d8437_Enum((*((*(_22257_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1a48d86bd_TypeEnum((*((*(_22257_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8c5b2de:;
			{
				return _1a48a8847__evalTypeEnum(_self_, _1a48d86bd_TypeEnum((*((*(_22257_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1a48d9207_Struct((*((*(_22257_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8c5b355:;
			{
				return _1a48a9084__evalStruct(_self_, _1a48d9207_Struct((*((*(_22257_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1a8c5b278:;
			{
				jule::Ptr<_1a48a2753_Data> _22388_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=(*((*(_22257_item))._field_TypeSym))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
				(*(_22388_d))._field_Model=jule::Any((*_22388_d.alloc)._field_Type, &__jule_any_type86);
				return _22388_d;;
			}
		}
		_match_end_1a8c5b443:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48ba4b3_evalStructStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a4676d30_StructIns> _224736_s, jule::Ptr<_1a463d137_Token> _224751_ident) {
	jule::Ptr<_1a48a2753_Data> _22487_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	;
	jule::Ptr<_1a471dc62_Fn> _22527_method = _1a4677dca_FindMethod(_224736_s.ptr(), (*(_224751_ident))._field_Kind, true);;
	if ((_22527_method != nullptr)) {
		if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22527_method.alloc)._field_Public, (*_22527_method.alloc)._field_Token)))) {
			_1a48a4a0d_pushErr(_self_, _224751_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_224751_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a4721d20_FnIns> _22598_ins = _1a4720505_instance(_22527_method);;
		(*(_22598_ins))._field_Owner=_224736_s;
		_1a7984744_pushReference(_self_, &(_22598_ins));
		(*_22487_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a47168a3_StructStaticIdentExprModel>(_1a47168a3_StructStaticIdentExprModel{._field_Structure=_224736_s, ._field_Expr=(*_22487_d.alloc)._field_Model, ._field_Method=_22598_ins}), &__jule_any_type98);
		(*_22487_d.alloc)._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22598_ins, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)});
		return _22487_d;;
	};
	jule::Ptr<_1a4852e51_Var> _22737_sttc = _1a467855c_FindStatic(_224736_s, (*_224751_ident.alloc)._field_Kind);;
	if ((_22737_sttc != nullptr)) {
		return _1a48ab141_evalVar(_self_, _22737_sttc, _224751_ident);;
	};
	_1a48a4a0d_pushErr(_self_, _224751_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_224736_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_224751_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ba969_evalTraitSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _228237_d, jule::Ptr<_1a4729476_Trait> _228251_trt, jule::Ptr<_1a463d137_Token> _228268_ident) {
	jule::Ptr<_1a471dc62_Fn> _22837_f = _1a472a158_FindMethod(_228251_trt.ptr(), (*(_228268_ident))._field_Kind);;
	if ((_22837_f == nullptr)) {
		_1a48a4a0d_pushErr(_self_, _228268_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_228251_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_228268_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a4720505_instance(_22837_f), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)}), ._field_Mutable=(*(_228237_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a4715b6b_TraitSubIdentExprModel>(_1a4715b6b_TraitSubIdentExprModel{._field_Token=_228268_ident, ._field_Expr=(*_228237_d.alloc)._field_Model, ._field_Method=_22837_f, ._field_Trt=_228251_trt}), &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48baeca_evalStructSubIdentField(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _230444_d, jule::Ptr<_1a4676d30_StructIns>* _230459_s, jule::Ptr<_1a463d137_Token>* _230479_tok, jule::Ptr<_1a4676280_FieldIns>* _2304104_f) {
	jule::Ptr<_1a471650c_StructSubIdentExprModel> _23057_model = jule::new_ptr<_1a471650c_StructSubIdentExprModel>(_1a471650c_StructSubIdentExprModel{._field_Token=(*(_230479_tok)), ._field_Expr=jule::new_ptr<_1a48a2753_Data>((*((*(_230444_d))))), ._field_Method=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Field=(*(_2304104_f)), ._field_Owner=(*(_230459_s))});;
	(*((*(_230444_d))))._field_Model=jule::Any(_23057_model, &__jule_any_type100);
	(*((*(_230444_d))))._field_Type=(*((*(_2304104_f))))._field_Type;
	(*((*(_230444_d))))._field_Lvalue=true;
	if (((*((*((*(_2304104_f))))._field_Decl))._field_Mutable && (!((*((*(_230444_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
				_case_begin_1a8c72da5:;
				{
					jule::Ptr<_1a47d3cc2_scopeChecker> _23205_scope = _1a47d7435_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1));;
					(*((*(_230444_d))))._field_Mutable=(((*(_23205_scope))._field_owner != nullptr) && ((*(*(_23205_scope))._field_owner.alloc)._field_Owner == (*(_230459_s))));
				}
			}
			_match_end_1a8c72d3e:;
		};
	};
	return (*(_230444_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48bb5e6_evalStructSubIdentMethod(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _232945_d, jule::Ptr<_1a4676d30_StructIns>* _232960_s, jule::Ptr<_1a463d137_Token>* _232980_tok, jule::Ptr<_1a471dc62_Fn>* _2329105_m, jule::Bool _2329113_ref) {
	if ((_1a471cb73_IsRef((*((*(_2329105_m))))._field_Params[0LL].ptr()) && (!(_2329113_ref)))) {
		_1a48a4a0d_pushErr(_self_, (*(_232980_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1a48a9b34_checkDeprecated(_self_, &((*((*(_2329105_m))))._field_Directives), (*(_232980_tok)));
	jule::Ptr<_1a4721d20_FnIns> _23367_ins = _1a4720505_instance((*(_2329105_m)));;
	(*(_23367_ins))._field_Owner=(*(_232960_s));
	_1a7984744_pushReference(_self_, &(_23367_ins));
	jule::Ptr<_1a48a2753_Data> _23397_model = jule::new_ptr<_1a48a2753_Data>((*((*(_232945_d)))));;
	(*((*(_232945_d))))._field_Model=jule::Any(jule::new_ptr<_1a471650c_StructSubIdentExprModel>(_1a471650c_StructSubIdentExprModel{._field_Token=(*(_232980_tok)), ._field_Expr=_23397_model, ._field_Method=_23367_ins, ._field_Field=jule::Ptr<_1a4676280_FieldIns>(nullptr), ._field_Owner=(*(_232960_s))}), &__jule_any_type100);
	(*((*(_232945_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23367_ins, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)});
	return (*(_232945_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48bbb57_evalStructSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _235038_d, jule::Ptr<_1a4676d30_StructIns> _235052_s, jule::Ptr<_1a465aab1_SubIdentExpr> _235071_si, jule::Bool _235095_ref) {
	jule::Ptr<_1a4676280_FieldIns> _23517_f = _1a467821b_FindField(_235052_s.ptr(), (*((*(_235071_si))._field_Ident))._field_Kind);;
	if ((_23517_f != nullptr)) {
		if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23517_f.alloc)._field_Decl))._field_Public, (*(*(_23517_f))._field_Decl.alloc)._field_Token)))) {
			_1a48a4a0d_pushErr(_self_, (*_235071_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23517_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1a48baeca_evalStructSubIdentField(_self_, &(_235038_d), &(_235052_s), &((*_235071_si.alloc)._field_Ident), &(_23517_f));;
	};
	;
	jule::Ptr<_1a471dc62_Fn> _23617_m = _1a4677dca_FindMethod(_235052_s, (*(*(_235071_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23617_m == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*_235071_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_235052_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_235071_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s, (*(_23617_m))._field_Public, (*(_23617_m))._field_Token)))) {
		_1a48a4a0d_pushErr(_self_, (*_235071_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23617_m))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a48a4d71_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1a48bb5e6_evalStructSubIdentMethod(_self_, &(_235038_d), &(_235052_s), &((*_235071_si.alloc)._field_Ident), &(_23617_m), _235095_ref);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48bbe98_evalIntTypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _237433_ident) {
	;
	{
		auto &_match_expr{ (*(_237433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a8c83646:;
			{
				jule::Ptr<_1a4276798_Const> _23788_c = static__1a470550c_NewI64(_1a479a55d_MaxI(jule::Str::lit("int", 3)));;
				(*(_23788_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a4959b07_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23788_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23788_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a8c8425c:;
			{
				jule::Ptr<_1a4276798_Const> _23878_c = static__1a470550c_NewI64(static_cast<jule::I64>(_1a479ab68_Min(jule::Str::lit("int", 3))));;
				(*(_23878_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a4959b07_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23878_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23878_c});;
			}
		}
		else {
			_case_begin_1a8c80a72:;
			{
				_1a48a4a0d_pushErr(_self_, _237433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_237433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8c8326c:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bc2d9_evalUintTypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _240134_ident) {
	;
	{
		auto &_match_expr{ (*(_240134_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a8c875c3:;
			{
				jule::Ptr<_1a4276798_Const> _24058_c = static__1a47057c6_NewU64(_1a479a827_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24058_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495973e_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24058_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24058_c});;
			}
		}
		else {
			_case_begin_1a8c861e8:;
			{
				_1a48a4a0d_pushErr(_self_, _240134_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_240134_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8c871e9:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bc62a_evalI8TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _241932_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_241932_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a8c8b3c9:;
			{
				jule::Ptr<_1a4276798_Const> _24258_c = static__1a470550c_NewI64(127LL);;
				(*(_24258_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a4959d49_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24258_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24258_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a8c8aa05:;
			{
				jule::Ptr<_1a4276798_Const> _24348_c = static__1a470550c_NewI64(-128LL);;
				(*(_24348_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a4959d49_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24348_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24348_c});;
			}
		}
		else {
			_case_begin_1a8c8a450:;
			{
				_1a48a4a0d_pushErr(_self_, _241932_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_241932_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8c8a63c:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bc96b_evalI16TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _244833_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_244833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a849b3d1:;
			{
				jule::Ptr<_1a4276798_Const> _24548_c = static__1a470550c_NewI64(32767LL);;
				(*(_24548_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a0e1_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24548_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24548_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a849b447:;
			{
				jule::Ptr<_1a4276798_Const> _24638_c = static__1a470550c_NewI64(-32768LL);;
				(*(_24638_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a0e1_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24638_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24638_c});;
			}
		}
		else {
			_case_begin_1a8c8d3cb:;
			{
				_1a48a4a0d_pushErr(_self_, _244833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_244833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8c8d5b8:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bccac_evalI32TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _247733_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_247733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84a65a6:;
			{
				jule::Ptr<_1a4276798_Const> _24838_c = static__1a470550c_NewI64(2147483647LL);;
				(*(_24838_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a399_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24838_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24838_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a84a71bc:;
			{
				jule::Ptr<_1a4276798_Const> _24928_c = static__1a470550c_NewI64(-2147483648LL);;
				(*(_24928_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a399_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24928_c});;
			}
		}
		else {
			_case_begin_1a84a5ee0:;
			{
				_1a48a4a0d_pushErr(_self_, _247733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_247733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84a61cc:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bd0ed_evalI64TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _250633_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_250633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84aad3b:;
			{
				jule::Ptr<_1a4276798_Const> _25128_c = static__1a470550c_NewI64(jule::MAX_I64);;
				(*(_25128_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a652_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25128_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25128_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a84ab952:;
			{
				jule::Ptr<_1a4276798_Const> _25218_c = static__1a470550c_NewI64(jule::MIN_I64);;
				(*(_25218_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a652_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25218_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25218_c});;
			}
		}
		else {
			_case_begin_1a84aa775:;
			{
				_1a48a4a0d_pushErr(_self_, _250633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_250633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84aa962:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bd43e_evalU8TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _253532_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84b023b:;
			{
				jule::Ptr<_1a4276798_Const> _25408_c = static__1a47057c6_NewU64(255LLU);;
				(*(_25408_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495a90a_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25408_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25408_c});;
			}
		}
		else {
			_case_begin_1a84aea98:;
			{
				_1a48a4a0d_pushErr(_self_, _253532_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_253532_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84aecc9:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bd780_evalU16TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _255433_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84b31ea:;
			{
				jule::Ptr<_1a4276798_Const> _25598_c = static__1a47057c6_NewU64(65535LLU);;
				(*(_25598_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495abb3_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25598_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25598_c});;
			}
		}
		else {
			_case_begin_1a84b2a57:;
			{
				_1a48a4a0d_pushErr(_self_, _255433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_255433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84b2c88:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bdac1_evalU32TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _257333_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84b61a9:;
			{
				jule::Ptr<_1a4276798_Const> _25788_c = static__1a47057c6_NewU64(4294967295LLU);;
				(*(_25788_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495ae6b_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25788_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25788_c});;
			}
		}
		else {
			_case_begin_1a84b5a16:;
			{
				_1a48a4a0d_pushErr(_self_, _257333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_257333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84b5c47:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bde12_evalU64TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _259233_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_259233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84b9168:;
			{
				jule::Ptr<_1a4276798_Const> _25978_c = static__1a47057c6_NewU64(jule::MAX_U64);;
				(*(_25978_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b455_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25978_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25978_c});;
			}
		}
		else {
			_case_begin_1a84b89c5:;
			{
				_1a48a4a0d_pushErr(_self_, _259233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_259233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84b8c06:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48be253_evalF32TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _261133_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_261133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84bc7ed:;
			{
				jule::Ptr<_1a4276798_Const> _26188_c = static__1a4706123_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26188_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b697_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26188_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26188_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a84bd414:;
			{
				jule::Ptr<_1a4276798_Const> _26278_c = static__1a4706123_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26278_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b697_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26278_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26278_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a84bd47a:;
			{
				jule::Ptr<_1a4276798_Const> _26368_c = static__1a4706123_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26368_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b697_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26368_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26368_c});;
			}
		}
		else {
			_case_begin_1a84bc08e:;
			{
				_1a48a4a0d_pushErr(_self_, _261133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_261133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84bc424:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48be594_evalF64TypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a463d137_Token> _265033_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_265033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a84c356d:;
			{
				jule::Ptr<_1a4276798_Const> _26578_c = static__1a4706123_NewF64(jule::MAX_F64);;
				(*(_26578_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b8a6_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26578_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26578_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a84c4184:;
			{
				jule::Ptr<_1a4276798_Const> _26668_c = static__1a4706123_NewF64(jule::MIN_F64);;
				(*(_26668_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b8a6_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26668_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26668_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a84c41ea:;
			{
				jule::Ptr<_1a4276798_Const> _26758_c = static__1a4706123_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26758_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=true, ._field_Type=_1a495b8a6_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26758_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26758_c});;
			}
		}
		else {
			_case_begin_1a84c2d0e:;
			{
				_1a48a4a0d_pushErr(_self_, _265033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_265033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84c3194:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48be990_evalPrimStatic(_1a48a447a_eval* _self_, jule::Str _268930_kind, jule::Ptr<_1a463d137_Token> _268941_ident) {
	{
		auto &_match_expr{ _268930_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1a8d221c9:;
			{
				return _1a48bbe98_evalIntTypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1a8d22c8a:;
			{
				return _1a48bc2d9_evalUintTypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1a8d22d01:;
			{
				return _1a48bc62a_evalI8TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1a8d21d88:;
			{
				return _1a48bc96b_evalI16TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1a8d21dee:;
			{
				return _1a48bccac_evalI32TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1a8d21e65:;
			{
				return _1a48bd0ed_evalI64TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1a8d21ecb:;
			{
				return _1a48bd43e_evalU8TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1a8d22dde:;
			{
				return _1a48bd780_evalU16TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1a8d22e55:;
			{
				return _1a48bdac1_evalU32TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1a8d22ebb:;
			{
				return _1a48bde12_evalU64TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a8d23032:;
			{
				return _1a48be253_evalF32TypeStatic(_self_, _268941_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a8d23098:;
			{
				return _1a48be594_evalF64TypeStatic(_self_, _268941_ident);;
			}
		}
		else {
			_case_begin_1a84c43c6:;
			{
				_1a48a4a0d_pushErr(_self_, _268941_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_268930_kind, &__jule_any_type5); (*it++) = jule::Any((*(_268941_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a84c444d:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48bed8b_evalTypeStatic(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _272134_d, jule::Ptr<_1a465aab1_SubIdentExpr> _272148_si) {
	{
		
		if ((_1a48d7b84_Prim((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d28147:;
			{
				return _1a48be990_evalPrimStatic(_self_, _1a48dd96a_Str(_1a48d7b84_Prim((*(_272134_d))._field_Type).ptr()), (*(_272148_si))._field_Ident);;
			}
		}
		else if ((_1a48d8437_Enum((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d290d2:;
			{
				return _1a48b9bbb_evalEnumStatic(_self_, _1a48d8437_Enum((*(_272134_d))._field_Type), (*(_272148_si))._field_Ident);;
			}
		}
		else if ((_1a48d86bd_TypeEnum((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d29148:;
			{
				return _1a48ba0b7_evalTypeEnumStatic(_self_, _1a48d86bd_TypeEnum((*(_272134_d))._field_Type), (*(_272148_si))._field_Ident);;
			}
		}
		else if ((_1a48d9207_Struct((*(_272134_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d27cd4:;
			{
				return _1a48ba4b3_evalStructStatic(_self_, _1a48d9207_Struct((*(_272134_d))._field_Type), (*(_272148_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1a8d27c6d:;
			{
				_1a48a4a0d_pushErr(_self_, (*(_272148_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_272134_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8d27bb3:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a8d310ea_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47ae044_comptimeTypeInfo>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47b4d6e_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d358d5_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a479eba0_comptimeStructField>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47a10e1_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d3a159_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47a60e6_comptimeEnumField>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47a712a_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d3e922_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47a8e0c_comptimeParam>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47aa75a_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d4441b_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47a2dc3_comptimeStatic>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47a4314_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d48b90_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47b5149_comptimeValue>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47b7aca_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d4d414_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47b9824_comptimeFile>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47bb172_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}

inline jule::Ptr<_1a48a2753_Data> _1a8d52c21_comptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a47bd73a_comptimeDecl>* _273754_ct, jule::Ptr<_1a48a2753_Data>* _273774_d, jule::Ptr<_1a465aab1_SubIdentExpr>* _273785_si) {
	jule::Ptr<_1a48a2753_Data> _27387_cd = _1a47c2596_subIdent((*(_273754_ct)), &((*((*((*(_273785_si))))._field_Ident))._field_Kind));;
	if ((_27387_cd == nullptr)) {
		_1a48a4a0d_pushErr(_self_, (*((*(_273785_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_273774_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_273785_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27387_cd;;
}



inline __jule_tuple_x_1a48a2753_Data__jule_tuple_bool _1a48c073d_tryComptimeObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data>* _274543_d, jule::Ptr<_1a465aab1_SubIdentExpr> _274557_si) {
	__jule_tuple_x_1a48a2753_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a48db54a_comptimeTypeInfo((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e505:;
			{
				jule::Ptr<_1a47ae044_comptimeTypeInfo> _27488_ct = _1a48db54a_comptimeTypeInfo((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d310ea_comptimeObjSubIdent(_self_, &(_27488_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48da25d_comptimeStructField((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e03d:;
			{
				jule::Ptr<_1a479eba0_comptimeStructField> _27518_ct = _1a48da25d_comptimeStructField((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d358d5_comptimeObjSubIdent(_self_, &(_27518_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48da77a_comptimeEnumField((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e0b5:;
			{
				jule::Ptr<_1a47a60e6_comptimeEnumField> _27548_ct = _1a48da77a_comptimeEnumField((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d3a159_comptimeObjSubIdent(_self_, &(_27548_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48dac97_comptimeParam((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e13c:;
			{
				jule::Ptr<_1a47a8e0c_comptimeParam> _27578_ct = _1a48dac97_comptimeParam((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d3e922_comptimeObjSubIdent(_self_, &(_27578_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48dba67_comptimeStatic((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e1b4:;
			{
				jule::Ptr<_1a47a2dc3_comptimeStatic> _27608_ct = _1a48dba67_comptimeStatic((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d4441b_comptimeObjSubIdent(_self_, &(_27608_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48dbced_comptimeValue((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e23b:;
			{
				jule::Ptr<_1a47b5149_comptimeValue> _27638_ct = _1a48dbced_comptimeValue((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d48b90_comptimeObjSubIdent(_self_, &(_27638_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48dc5a1_comptimeFile((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e769:;
			{
				jule::Ptr<_1a47b9824_comptimeFile> _27668_ct = _1a48dc5a1_comptimeFile((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d4d414_comptimeObjSubIdent(_self_, &(_27668_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a48dc084_comptimeDecl((*((*(_274543_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d2e7d0:;
			{
				jule::Ptr<_1a47bd73a_comptimeDecl> _27698_ct = _1a48dc084_comptimeDecl((*((*(_274543_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1a8d52c21_comptimeObjSubIdent(_self_, &(_27698_ct), _274543_d, &(_274557_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a8d2dec7:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a8d2de1c:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c0b39_evalObjSubIdent(_1a48a447a_eval* _self_, jule::Ptr<_1a48a2753_Data> _277635_d, jule::Ptr<_1a465aab1_SubIdentExpr> _277649_si) {
	if (_1a4640a1e_IsIgnoreIdent((*((*(_277649_si))._field_Ident))._field_Kind)) {
		_1a48a4a0d_pushErr(_self_, (*_277649_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a48a2753_Data> _27838_compData;
		jule::Bool _278318_ok;
		({
			__jule_tuple_x_1a48a2753_Data__jule_tuple_bool __jule_assign_result = _1a48c073d_tryComptimeObjSubIdent(_self_, &(_277635_d), _277649_si);
			_27838_compData = __jule_assign_result.__jule_result_arg0;
			_278318_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_278318_ok) {
			return _27838_compData;;
		};
	};
	jule::Ptr<_1a48d54cd_Type> _27897_kind = (*(_277635_d))._field_Type;;
	{
		
		if ((_1a48d81a1_Ptr((*_277635_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d58056:;
			{
				jule::Ptr<_1a48e58d9_Ptr> _27924_ptr = _1a48d81a1_Ptr((*(_277635_d))._field_Type);;
				if (_1a48e6456_IsUnsafe(_27924_ptr.ptr())) {
					goto _match_end_1a8d57ece;
				};
				if ((!(_1a48a5503_isUnsafe(_self_)))) {
					_1a48a4a0d_pushErr(_self_, (*_277649_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_27897_kind=(*(_1a48d81a1_Ptr((*(_277635_d))._field_Type)))._field_Elem;
				_1a48d1ebe_makeImplicitDeref(&(_277635_d), (*_277649_si.alloc)._field_Ident);
			}
		}
		else if ((_1a48d7e1a_Sptr((*_277635_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d58100:;
			{
				_27897_kind=(*(_1a48d7e1a_Sptr((*(_277635_d))._field_Type)))._field_Elem;
				_1a48d1ebe_makeImplicitDeref(&(_277635_d), (*_277649_si.alloc)._field_Ident);
			}
		}
		_match_end_1a8d57ece:;
	};
	{
		
		if ((_1a48d948d_Trait((*_277635_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8d585b7:;
			{
				return _1a48ba969_evalTraitSubIdent(_self_, _277635_d, _1a48d948d_Trait((*(_277635_d))._field_Type), (*_277649_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a48d9207_Struct(_27897_kind.ptr()) != nullptr)) {
			_case_begin_1a8d5b8d9:;
			{
				jule::Ptr<_1a4676d30_StructIns> _28104_s = _1a48d9207_Struct(_27897_kind);;
				if (_1a48cd51a_isInstancedStruct(_28104_s)) {
					jule::Bool _28129_usedReferenceElem = (_1a48d7e1a_Sptr((*_277635_d.alloc)._field_Type.ptr()) != nullptr);;
					return _1a48bbb57_evalStructSubIdent(_self_, _277635_d, _1a48d9207_Struct(_27897_kind), _277649_si, _28129_usedReferenceElem);;
				};
			}
		}
		_match_end_1a8d5b873:;
	};
	_1a48a4a0d_pushErr(_self_, (*_277649_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*_277635_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c0e7a_evalSubIdent(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465aab1_SubIdentExpr> _282033_si) {
	jule::Ptr<_1a48d54cd_Type> _28217_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28217_prefix;
	});;
	jule::Ptr<_1a48a2753_Data> _28247_d = _1a48c24cb_evalExprKind(_self_, (*((*(_282033_si))._field_Expr))._field_Kind);;
	if ((_28247_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28247_d))._field_Decl) {
		return _1a48bed8b_evalTypeStatic(_self_, _28247_d, _282033_si);;
	};
	return _1a48c0b39_evalObjSubIdent(_self_, _28247_d, _282033_si);;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c12bb_evalTuple(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4658592_TupleExpr> _283430_tup) {
	jule::Ptr<_1a48e36d9_Tuple> _28357_tupT = jule::new_ptr<_1a48e36d9_Tuple>(_1a48e36d9_Tuple{._field_Types=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)});;
	(*_28357_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(0LL, (*(_283430_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d54cd_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1a4717079_TupleExprModel> _28387_model = jule::new_ptr<_1a4717079_TupleExprModel>(_1a4717079_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(0LL, (*_283430_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48a2753_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28427_ok = true;;
	{
		auto expr = &((*_283430_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d66916:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _284315_expr = *it;
			{
				jule::Ptr<_1a48a2753_Data> _28448_d = _1a48c32e0_evalExpr(_self_, _284315_expr);;
				if ((_28448_d == nullptr)) {
					_28427_ok=false;
					goto _iter_next_1a8d66916;
				};
				(*_28357_tupT.alloc)._field_Types=jule::append((*_28357_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28448_d))._field_Type; __jule_collection; }));
				(*(_28387_model))._field_Datas=jule::append((*_28387_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28448_d; __jule_collection; }));
			}
			_iter_next_1a8d66916:;
			++it;
			goto _iter_begin_1a8d66916;
		}
		_iter_end_1a8d66916:;
	};
	if ((!(_28427_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28357_tupT, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28387_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c16b7_evalMap(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a48e4289_Map> _286328_m, jule::Ptr<_1a465ce9d_BraceLit> _286341_lit) {
	jule::Ptr<_1a4715055_MapExprModel> _28647_model = jule::new_ptr<_1a4715055_MapExprModel>(_1a4715055_MapExprModel{._field_Kind=_286328_m, ._field_Entries=jule::Slice<jule::Ptr<_1a4714b7b_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_286341_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d6a277:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _286815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_286815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1a8d6a893:;
						{
							goto _match_end_1a8d6ab7e;
						}
					}
					else {
						_case_begin_1a8d6abe5:;
						{
							_1a48a4a0d_pushErr(_self_.ptr(), (*(_286341_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a8d6ab7e:;
				};
				jule::Ptr<_1a465d7c8_KeyValPair> _28788_pair = (*(_286815_expr))._field_Kind.cast_ptr<_1a465d7c8_KeyValPair>(&__jule_any_type81);;
				jule::Ptr<_1a48a2753_Data> _28808_key = _1a48c32e0_evalExpr(_self_, (*(_28788_pair))._field_Key);;
				if ((_28808_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a48a2753_Data> _28858_val = _1a48c32e0_evalExpr(_self_, (*_28788_pair.alloc)._field_Val);;
				if ((_28858_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a483ddb5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_286328_m))._field_Key), &(_28808_key), &((*((*_28788_pair.alloc)._field_Key))._field_Token))) {
					_1a4839630_checkAssignType((*(_self_))._field_s, false, &((*_286328_m.alloc)._field_Key), &(_28808_key), (*(*(_28788_pair))._field_Key.alloc)._field_Token, _1a48a7a11_getOwnerRefers(_self_));
				};
				if (_1a483ddb5_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_286328_m.alloc)._field_Val), &(_28858_val), &((*((*_28788_pair.alloc)._field_Val))._field_Token))) {
					_1a4839630_checkAssignType((*(_self_))._field_s, false, &((*_286328_m.alloc)._field_Val), &(_28858_val), (*(*(_28788_pair))._field_Val.alloc)._field_Token, _1a48a7a11_getOwnerRefers(_self_));
				};
				(*(_28647_model))._field_Entries=jule::append((*_28647_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4714b7b_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a4714b7b_KeyValPairExprModel>(_1a4714b7b_KeyValPairExprModel{._field_Key=(*(_28808_key))._field_Model, ._field_Val=(*(_28858_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1a8d6a277:;
			++it;
			goto _iter_begin_1a8d6a277;
		}
		_iter_end_1a8d6a277:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_286328_m, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28647_model, &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c1a08_evalBraceLit(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465ce9d_BraceLit> _291133_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1a8d77718:;
			{
				_1a48a4a0d_pushErr(_self_, (*(_291133_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a48d9724_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a8d750b7:;
			{
				return _1a48c16b7_evalMap(_self_, _1a48d9724_Map((*(_self_))._field_prefix), _291133_lit);;
			}
		}
		else if ((_1a48d9207_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a8d7512d:;
			{
				return _1a48b779b_evalStructLitExplicit(_self_, _1a48d9207_Struct((*(_self_))._field_prefix), (*(_291133_lit))._field_Exprs, (*_291133_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1a8d7633d:;
			{
				_1a48a4a0d_pushErr(_self_.ptr(), (*(_291133_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8d762b6:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c1d49_evalAnonFunc(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a4665406_FnDecl> _292633_decl) {
	_1a48e78ca_typeChecker _29277_tc = _1a48e78ca_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1a4721d20_FnIns> _29327_ins = _1a48ee9e2_buildFunc(&_29277_tc, _292633_decl);;
	if ((_29327_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29327_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _29377_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4852e51_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
			_case_begin_1a8d7d18b:;
			{
				jule::Ptr<_1a47d3cc2_scopeChecker> _29408_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1);;
				jule::Ptr<_1a47d3cc2_scopeChecker> _29418_scc = _1a47e61d0_newChildChecker(_29408_sc);;
				(*(_29418_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a47d2cd2_scopeLabel>>>(nullptr);
				(*_29418_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>>(nullptr);
				(*_29418_scc.alloc)._field_owner=_29327_ins;
				(*_29418_scc.alloc)._field_childIndex=0LL;
				(*_29418_scc.alloc)._field_it=0LLU;
				(*_29418_scc.alloc)._field_cse=0LLU;
				(*_29418_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a4852e51_Var>>>)((&(_29377_captured))));
				_1a484c38a_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29327_ins), &(_29418_scc));
			}
		}
		else {
			_case_begin_1a8d7dc91:;
			{
				_1a484c9a6_checkFnIns((*_self_.alloc)._field_s, &(_29327_ins));
			}
		}
		_match_end_1a8d7dc2a:;
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29327_ins, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a47147a2_AnonFnExprModel>(_1a47147a2_AnonFnExprModel{._field_Captured=_29377_captured, ._field_Func=_29327_ins, ._field_Global=_1a48a5789_isGlobal(_self_)}), &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c218a_evalBinary(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465b067_BinaryExpr> _296431_op) {
	_1a48c5710_binaryEval _29657_bs = static__1a48c5ce8_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a48dd5e6_Prim> _29684_prim = _1a48d7b84_Prim((*(_self_))._field_prefix);;
		if (((_29684_prim == nullptr) || (!(_1a479cbc0_IsNum(_1a48dd96a_Str(_29684_prim.ptr())))))) {
			jule::Ptr<_1a48d54cd_Type> _29709_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29709_prefix;
			});;
			return _1a48cb859_eval(&_29657_bs, &(_296431_op));;
		};
	};
	return _1a48cb859_eval(&_29657_bs, &(_296431_op));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c24cb_evalExprKind(jule::Ptr<_1a48a447a_eval> _self_, jule::Any _297933_kind) {
	{
		auto &_match_expr{ _297933_kind };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a8d89ebc:;
			{
				jule::Ptr<_1a4657c67_RangeExpr> _29828_e = _297933_kind.unsafe_cast_ptr<_1a4657c67_RangeExpr>();;
				return _1a48c24cb_evalExprKind(_self_, (*((*(_29828_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a8d8a2ec:;
			{
				return _1a48a703d_evalLit(_self_.ptr(), _297933_kind.cast_ptr<_1a4658938_LitExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a8d8a363:;
			{
				return _1a48abc79_evalIdent(_self_.ptr(), _297933_kind.cast_ptr<_1a46592b8_IdentExpr>(&__jule_any_type41));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a8d8a3c9:;
			{
				return _1a48ac0ba_evalUnary(_self_, _297933_kind.cast_ptr<_1a4659a5a_UnaryExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a8d8a440:;
			{
				return _1a48ac40b_evalVariadic(_self_, _297933_kind.cast_ptr<_1a4659e34_VariadicExpr>(&__jule_any_type78));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a8d8a4a6:;
			{
				return _1a48ac74c_evalUnsafe(_self_, _297933_kind.cast_ptr<_1a4658d12_UnsafeExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a8d8a51c:;
			{
				return _1a48ad385_evalSliceExpr(_self_, _297933_kind.cast_ptr<_1a465e004_SliceExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a8d8a918:;
			{
				return _1a48b1ed2_evalIndexing(_self_, _297933_kind.cast_ptr<_1a465e961_IndexingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a8d8a97e:;
			{
				return _1a48b3313_evalSlicing(_self_, _297933_kind.cast_ptr<_1a46600c1_SlicingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a8d8a9e5:;
			{
				return _1a48b6ea4_evalCast(_self_, _297933_kind.cast_ptr<_1a465a30d_CastExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a8d8aa5b:;
			{
				return _1a48b72e5_evalNamespace(_self_.ptr(), _297933_kind.cast_ptr<_1a465a6d7_NamespaceExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a8d8aad3:;
			{
				return _1a48b7adc_evalStructLit(_self_, _297933_kind.cast_ptr<_1a465c9e7_StructLit>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a8d8ab5a:;
			{
				return _1a48b81b4_evalType(_self_.ptr(), _297933_kind.cast_ptr<_1a4653669_TypeDecl>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a8d8abd2:;
			{
				return _1a48b97c0_evalFnCall(_self_, _297933_kind.cast_ptr<_1a465b6c7_FnCallExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8d8ac59:;
			{
				return _1a48c0e7a_evalSubIdent(_self_, _297933_kind.cast_ptr<_1a465aab1_SubIdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a8d8acd1:;
			{
				return _1a48c12bb_evalTuple(_self_, _297933_kind.cast_ptr<_1a4658592_TupleExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a8d8ad58:;
			{
				return _1a48c1a08_evalBraceLit(_self_, _297933_kind.cast_ptr<_1a465ce9d_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a8d8add0:;
			{
				return _1a48c1d49_evalAnonFunc(_self_, _297933_kind.cast_ptr<_1a4665406_FnDecl>(&__jule_any_type67));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a8d8ae57:;
			{
				return _1a48c218a_evalBinary(_self_, _297933_kind.cast_ptr<_1a465b067_BinaryExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1a8d8a286:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d8a220:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c281c_eval1(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _302726_expr) {
	jule::Ptr<_1a48a2753_Data> _30287_d = _1a48c24cb_evalExprKind(_self_, (*(_302726_expr))._field_Kind);;
	if (((_30287_d == nullptr) || ((*(_30287_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a48d8e71_Fn((*(_30287_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8db1268:;
			{
				jule::Ptr<_1a4721d20_FnIns> _30368_f = _1a48d8e71_Fn((*(_30287_d))._field_Type.ptr());;
				if (_1a47232d8_IsBuiltin(_30368_f.ptr())) {
					_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*_302726_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1a8dae970;
				};
				jule::I32 _30414_required = (*((*_30368_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I32 _30424_given = (*_30368_f.alloc)._field_Generics.len();;
				if ((!(_1a482d811_checkGenericQuantity((*(_self_))._field_s, _30414_required, _30424_given, (*_302726_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30368_f))._field_Decl.alloc)._field_Statically)) && _1a471e49e_IsMethod((*(_30368_f))._field_Decl))) {
					_1a482c2d2_pushErr((*(_self_))._field_s, (*_302726_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1a48cbc55_findDirective(&((*(*(_30368_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1a482c2d2_pushErr((*(_self_))._field_s, (*_302726_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30368_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30368_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30287_d))._field_Decl) {
			_case_begin_1a8db12ce:;
			{
				jule::Ptr<_1a4676d30_StructIns> _30558_s = _1a48d9207_Struct((*(_30287_d))._field_Type.ptr());;
				if ((_30558_s == nullptr)) {
					goto _match_end_1a8dae970;
				};
				jule::I32 _30594_required = (*((*(_30558_s))._field_Decl))._field_Generics.len();;
				jule::I32 _30604_given = (*(_30558_s))._field_Generics.len();;
				if ((!(_1a482d811_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30594_required, _30604_given, (*_302726_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1a8dae970:;
	};
	return _30287_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c2b5d_eval(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _307225_expr) {
	jule::Ptr<_1a48a2753_Data> _30737_d = _1a48c281c_eval1(_self_, _307225_expr);;
	if ((_30737_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a48d9c41_comptime((*(_30737_d))._field_Type.ptr()))) {
		_1a482c2d2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_307225_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30737_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c2e9e_evalExpr1(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _308730_expr) {
	jule::Ptr<_1a48a2753_Data> _30887_d = _1a48c281c_eval1(_self_, _308730_expr);;
	{
		
		if ((_30887_d == nullptr)) {
			_case_begin_1a8dbe51d:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30887_d))._field_Decl) {
			_case_begin_1a8dbe5b7:;
			{
				_1a48a4a0d_pushErr(_self_, (*(_308730_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a8dbe496:;
			{
				return _30887_d;;
			}
		}
		_match_end_1a8dbe41e:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c32e0_evalExpr(jule::Ptr<_1a48a447a_eval> _self_, jule::Ptr<_1a465799d_Expr> _310329_expr) {
	jule::Ptr<_1a48a2753_Data> _31047_d = _1a48c2b5d_eval(_self_, _310329_expr);;
	{
		
		if ((_31047_d == nullptr)) {
			_case_begin_1a8dc1586:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31047_d))._field_Decl) {
			_case_begin_1a8dc1630:;
			{
				_1a48a4a0d_pushErr(_self_, (*(_310329_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a8dc150e:;
			{
				return _31047_d;;
			}
		}
		_match_end_1a8dc1487:;
	};
}








inline jule::Bool _1a48c3774_unaryEval_eq(_1a48c3774_unaryEval *_self_, _1a48c3774_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1a48c3774_unaryEval static__1a48c3be7_new(jule::Ptr<_1a48a447a_eval> _312420_e) {
	return _1a48c3774_unaryEval{._field_e=_312420_e, ._field_d=jule::Ptr<_1a48a2753_Data>(nullptr), ._field_u=jule::Ptr<_1a4659a5a_UnaryExpr>(nullptr)};;
}



inline void _1a48c3de5_minus(_1a48c3774_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1a8dc3445:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8dc3830:;
			{
				if ((!(_1a479cbc0_IsNum(_1a48d58c9_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a48d9207_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8dc30e3:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8dc307c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8dc2eb1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a48a318d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a4709ac7_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dc7c0d:;
				{
					_1a4708b09_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1a47074cb_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a470908d_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dc7ceb:;
				{
					_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a4706992_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a4709324_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dc78ab:;
				{
					_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a4707762_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a8dc7834:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3162:5"));;
				}
			}
			_match_end_1a8dc7757:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a48c40e3_plus(_1a48c3774_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1a8dcd395:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8dcd780:;
			{
				if ((!(_1a479cbc0_IsNum(_1a48d58c9_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a48d9207_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8dcd043:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8dccecc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8dccdbc:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a48a318d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a4709ac7_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dd2b5d:;
				{
					_1a4708b09_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1a47074cb_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a470908d_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dd2c4b:;
				{
					_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a4706992_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a4709324_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dd280b:;
				{
					_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a4707762_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a8dd2784:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3207:5"));;
				}
			}
			_match_end_1a8dd26a7:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a48c42e1_caret(_1a48c3774_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1a8dd82c3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8dd86ad:;
			{
				if ((!(_1a479c5e8_IsInt(_1a48d58c9_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a48d9207_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8dd7e71:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8dd7e0a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8dd7cea:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a48a318d_IsConst((*(_self_))._field_d)) {
		jule::I32 _32484_sz = _1a4794579_BitSizeOf((*(_1a48d7b84_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1a470908d_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8ddd75c:;
				{
					{
						auto &_match_expr{ _32484_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1a8dde83a:;
							{
								_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1a4706992_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1a8dde42d:;
							{
								_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1a4706992_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1a8dde494:;
							{
								_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1a4706992_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1a8dde50a:;
							{
								_1a4708037_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1a4706992_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1a8dde263:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3261:6"));;
							}
						}
						_match_end_1a8dde2da:;
					};
				}
			}
			else if (_1a4709324_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8ddd839:;
				{
					{
						auto &_match_expr{ _32484_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1a8de492d:;
							{
								_1a47082e0_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1a4706c28_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1a8de4521:;
							{
								_1a47082e0_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1a4706c28_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1a8de4587:;
							{
								_1a47082e0_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1a4706c28_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1a8de45ed:;
							{
								_1a47082e0_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1a4706c28_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1a8de4345:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3274:6"));;
							}
						}
						_match_end_1a8de43bc:;
					};
				}
			}
			else {
				_case_begin_1a8ddd3c7:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3277:5"));;
				}
			}
			_match_end_1a8ddd361:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a48c44de_excl(_1a48c3774_unaryEval* _self_) {
	jule::Ptr<_1a48dd5e6_Prim> _32913_t = _1a48d7b84_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_32913_t == nullptr) || (!(_1a48e182a_IsBool(_32913_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a48a318d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a47095aa_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a8dec491:;
				{
					_1a4708598_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1a4706eae_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a8dec0c8:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3305:5"));;
				}
			}
			_match_end_1a8debeeb:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a48c46dc_star(_1a48c3774_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1a48d81a1_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8e00ce1:;
			{
				if ((!(_1a48a5503_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a48e58d9_Ptr> _33308_t = _1a48d81a1_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1a48e6456_IsUnsafe(_33308_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Type=(*_33308_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a48d7e1a_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a8e00d68:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1a48d7e1a_Sptr((*((*(_self_))._field_d))._field_Type)))._field_Elem;
			}
		}
		else {
			_case_begin_1a8e00939:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8dee927:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a48c48da_amper(_1a48c3774_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a8e0958b:;
			{
				jule::Ptr<_1a4712739_StructLitExprModel> _33528_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a4712739_StructLitExprModel>();;
				_1a48cc67e_makeStructLitAlloc(&((*(_self_))._field_d), &(_33528_lit));
			}
		}
		else {
			_case_begin_1a8e069c8:;
			{
				{
					
					if (_1a4901d13_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a8e073be:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e58d9_Ptr>(_1a48e58d9_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1a8e065bb:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1a8e06e6d:;
				};
			}
		}
		_match_end_1a8e06962:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a48c4ad8_typeDecl(_1a48c3774_unaryEval* _self_) {
	_1a48e78ca_typeChecker _33777_tc = _1a48e78ca_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a48e68da_referencer>(nullptr), ._field_refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a48d46db_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8c90de5:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a48ed20a_buildPtrFromType(&_33777_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type86);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8c90aa4:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a48eca78_buildSptrFromType(&_33777_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type86);
			}
		}
		else {
			_case_begin_1a8c904dd:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8c90a2c:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a48c4cd6_evalData(_1a48c3774_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8c96725:;
			{
				jule::Ptr<_1a48d54cd_Type> _34028_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a48c2b5d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34028_prefix;
			}
		}
		else {
			_case_begin_1a8c90b1a:;
			{
				(*(_self_))._field_d=_1a48c2b5d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1a8c96307:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c5127_eval(_1a48c3774_unaryEval* _self_, jule::Ptr<_1a4659a5a_UnaryExpr> _341124_u) {
	(*(_self_))._field_u=_341124_u;
	_1a48c4cd6_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a48c4ad8_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a48d54cd_Type> _34223_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8c9adde:;
			{
				_1a48c3de5_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8c9ae55:;
			{
				_1a48c40e3_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8c9aebb:;
			{
				_1a48c42e1_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1a8c9b032:;
			{
				_1a48c44de_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8c9b098:;
			{
				_1a48c46dc_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8c9b10e:;
			{
				_1a48c48da_amper(_self_);
			}
		}
		else {
			_case_begin_1a8c9a8a0:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a8c9ad67:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a8c9b61a:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str(_34223_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1a48a318d_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a8c9956e:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1a8c9d0bc:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1a48c5710_binaryEval_eq(_1a48c5710_binaryEval *_self_, _1a48c5710_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1a48c5710_binaryEval static__1a48c5ce8_newPlain(jule::Ptr<_1a48a447a_eval> _345925_e) {
	return _1a48c5710_binaryEval{._field_e=_345925_e, ._field_l=jule::Ptr<_1a48a2753_Data>(nullptr), ._field_r=jule::Ptr<_1a48a2753_Data>(nullptr), ._field_op=jule::Ptr<_1a463d137_Token>(nullptr)};;
}



inline _1a48c5710_binaryEval static__1a48c616c_new(jule::Ptr<_1a48a447a_eval> _346520_e, jule::Ptr<_1a463d137_Token> _346534_op) {
	return _1a48c5710_binaryEval{._field_e=_346520_e, ._field_l=jule::Ptr<_1a48a2753_Data>(nullptr), ._field_r=jule::Ptr<_1a48a2753_Data>(nullptr), ._field_op=_346534_op};;
}



inline jule::Bool _1a48c6403_checkTypeCompatibility(_1a48c5710_binaryEval* _self_) {
	return _1a483a961_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a48c6689_checkStructCommonOperatorCompatibility(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a4721d20_FnIns> _347911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a8ca3a73:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8ca3721:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8ca3787:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8ca37ed:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8ca3864:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8ca38ca:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8ca3941:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8ca517e:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1a8ca51e5:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8ca525b:;
			{
				_347911_overload=(*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a8ca32ae:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1a8ca3699:;
	};
	if ((_347911_overload == nullptr)) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1a4720bba_ParamIns> _35117_p = (*(_347911_overload))._field_Params[1LL];;
	return _1a4839630_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35117_p))._field_Decl))._field_Reference, &((*_35117_p.alloc)._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, _1a48a7a11_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c6920_evalComptimeTypeInfo(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _35167_r = _1a48db54a_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35167_r == nullptr)) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a47ae044_comptimeTypeInfo> _35217_l = _1a48db54a_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a8cb4501:;
			{
				jule::Ptr<_1a4276798_Const> _35248_constant = static__1a4705a90_NewBool(_1a48d5c1a_Equal((*(_35217_l))._field_base, (*(_35167_r))._field_base));;
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35248_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35248_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8cb5997:;
			{
				jule::Ptr<_1a4276798_Const> _35318_constant = static__1a4705a90_NewBool((!(_1a48d5c1a_Equal((*(_35217_l))._field_base, (*(_35167_r))._field_base))));;
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35318_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35318_constant});;
			}
		}
		else {
			_case_begin_1a8cb2312:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cb4127:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c6ba6_evalNil(_1a48c5710_binaryEval* _self_) {
	if ((!(_1a48d73d1_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8cba6a0:;
			{
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8cb8989:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cba2c6:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c6e3c_evalEnum(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a472bb2c_Enum> _35627_enm = _1a48d8437_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8cbcad1:;
			{
				jule::Ptr<_1a48d54cd_Type> _35668_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1a48d8437_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
					_35668_rkind=(*((*(_1a48d8437_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				if ((!(_1a483a08c_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35627_enm))._field_TypeSym.alloc)._field_Type), &(_35668_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		_match_end_1a8cbca59:;
	};
	if (((_1a48d8437_Enum((*((*(_self_))._field_r))._field_Type) == nullptr) || (_35627_enm != _1a48d8437_Enum((*((*(_self_))._field_r))._field_Type)))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35627_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8cc3730:;
			{
				if ((!(_1a479cbc0_IsNum(_1a48d58c9_Str((*(*(_35627_enm))._field_TypeSym.alloc)._field_Type.ptr()))))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8cc4874:;
			{
				jule::Ptr<_1a472b0c1_EnumItem> _35964_first = (*_35627_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1a470908d_IsI64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a8cc838e:;
						{
							if ((_1a4706992_ReadI64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1a8ccc9ae;
							};
							goto _julec_label_1a8ccb77c;
						}
					}
					else if (_1a4709324_IsU64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a8cc847c:;
						{
							if ((_1a4706c28_ReadU64((*((*((*(_35964_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1a8ccc9ae;
							};
							goto _julec_label_1a8ccb77c;
						}
					}
					else {
						_case_begin_1a8cc7ec6:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3609:5"));;
						}
					}
					_match_end_1a8cc7e4e:;
				};
				_julec_label_1a8ccb77c:;
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1a48a4d71_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1a8ccc9ae:;
				goto _case_begin_1a8cc48da;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8cc48da:;
			{
				if (((_1a48d7b84_Prim((*(*(_35627_enm))._field_TypeSym.alloc)._field_Type.ptr()) == nullptr) || (!(_1a479c5e8_IsInt(_1a48dd96a_Str(_1a48d7b84_Prim((*((*(_35627_enm))._field_TypeSym))._field_Type).ptr())))))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8cbcb47:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35627_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cc3378:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c71c3_evalTypeEnum(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a472d337_TypeEnum> _36297_enm = _1a48d86bd_TypeEnum((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8cd1a3a:;
			{
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8cd0d69:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a472d6ab_Str(_36297_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cd15c8:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c7459_evalSptr(_1a48c5710_binaryEval* _self_) {
	if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8cd4059:;
			{
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8cd2e7b:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cd3b80:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c76e0_evalPtr(_1a48c5710_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a8cd6435:;
			{
				if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8cd7898:;
			{
				if ((_1a48d81a1_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a48e6456_IsUnsafe(_1a48d81a1_Ptr((*((*(_self_))._field_l))._field_Type).ptr())) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1a48cd817_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8cd5a2d:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cd5951:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c7976_evalArr(_1a48c5710_binaryEval* _self_) {
	if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8cde65d:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1a4721d20_FnIns> _37069_f = _1a472026e_instanceForce(_1a4319a4a_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37069_f))._field_Generics=jule::append((*_37069_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=(*(_1a48d8954_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37085_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4849b90_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37069_f), &((*(_self_))._field_op));
						_37085_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37085_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3710:6"));;
					};
					_1a7984744_pushReference((*(_self_))._field_e, &(_37069_f));
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8cd92e5:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8cde284:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c7c0c_evalStruct(_1a48c5710_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1a8ce1033:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a8ce10bb:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1a8ce5752:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8ce57b8:;
			{
				if (((*(_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8ce582e:;
			{
				if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		_match_end_1a8ce0e56:;
	};
	if ((!(_1a48c6689_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c7e93_evalTrait(_1a48c5710_binaryEval* _self_) {
	if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8d01ebc:;
			{
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8d01373:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8d01ae3:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c8229_evalAny(_1a48c5710_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8d04398:;
			{
				_1a49032cb_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1a48a7a11_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8d03991:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8d038b4:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c84b0_evalBool(_1a48c5710_binaryEval* _self_) {
	if ((!(_1a48c6403_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a8d07533:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8d056c9:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8d07159:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c8746_evalStr(_1a48c5710_binaryEval* _self_) {
	jule::Str _38227_rk = _1a48d58c9_Str((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_38227_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_38227_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8d0b7bd:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8d0b6d0:;
			{
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a8d0a28e:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8d0b328:;
	};
}



inline void _1a48c8944_setTypeToGreater(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a48dd5e6_Prim> _38473_lp = _1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1a48dd5e6_Prim> _38483_rp = _1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38483_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38473_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38473_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1a48c8bec_checkModData(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _386433_d) {
	if ((!(_1a48a318d_IsConst((*(_386433_d)).ptr())))) {
		if (((_1a48d7b84_Prim((*((*(_386433_d))))._field_Type.ptr()) == nullptr) || (!(_1a479c5e8_IsInt((*(_1a48d7b84_Prim((*((*(_386433_d))))._field_Type)))._field_Kind))))) {
			_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a488d046_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _386433_d)) {
			_case_begin_1a8d17d18:;
			{
				_1a4708037_SetI64((*((*(_386433_d))))._field_Constant.ptr(), _1a4707762_AsI64((*((*(_386433_d))))._field_Constant));
			}
		}
		else if (_1a488d40e_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _386433_d)) {
			_case_begin_1a8d179e9:;
			{
				_1a47082e0_SetU64((*((*(_386433_d))))._field_Constant.ptr(), _1a47079e8_AsU64((*((*(_386433_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1a8d17983:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8d1791c:;
	};
}



inline void _1a48c8dea_mod(_1a48c5710_binaryEval* _self_) {
	_1a48c8bec_checkModData(_self_, &((*(_self_))._field_l));
	_1a48c8bec_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a48c92e6_numbersAreCompatibile(_1a48c5710_binaryEval* _self_, jule::Str* _388634_lk, jule::Str* _388644_rk) {
	if ((!(_1a479cbc0_IsNum((*(_388644_rk)))))) {
		return false;;
	};
	if ((_1a48a318d_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_388634_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1a48a318d_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a488cbc2_floatAssignable(_388634_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388644_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_388634_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1a48a318d_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a488cbc2_floatAssignable(_388634_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388644_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1a48a318d_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a488d783_intAssignable((*(_388634_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_388634_lk)) == (*(_388644_rk)));;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c957c_shift(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a48dd5e6_Prim> _39143_lk = _1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39143_lk == nullptr)) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _39193_rk = _1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39193_rk == nullptr)) {
		_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a479cbc0_IsNum((*(_39143_lk))._field_Kind))) || (!(_1a479cbc0_IsNum((*(_39193_rk))._field_Kind))))) {
		_1a483a4aa_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1a479c5e8_IsInt((*(_39143_lk))._field_Kind)))) {
		if (((!(_1a48a318d_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39143_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39193_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1a488d783_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1a4708037_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a4707762_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1a495a652_primI64;
		} else if (_1a488d783_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1a47082e0_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a47079e8_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1a495b455_primU64;
		};
	};
	if ((!(_1a479c5e8_IsInt((*(_39193_rk))._field_Kind)))) {
		if (((!(_1a48a318d_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39143_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39193_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1a488d783_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1a4708037_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a4707762_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1a495a652_primI64;
		} else if (_1a488d783_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1a47082e0_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a47079e8_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1a495b455_primU64;
		};
	};
	if ((!(_1a48cd141_isOkForShifting(&((*(_self_))._field_r))))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48c9813_evalFloat(_1a48c5710_binaryEval* _self_) {
	jule::Str _39693_lk = (*(_1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39703_rk = (*(_1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1a48c92e6_numbersAreCompatibile(_self_, &(_39693_lk), &(_39703_rk))))) {
		_1a483a4aa_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8e94934:;
			{
				_1a48c8944_setTypeToGreater(_self_);
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		_match_end_1a8e948ac:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8e96408:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:3994:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8e972a5:;
			{
				_1a48c8944_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8e9731b:;
			{
				_1a48c8944_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8e9589c:;
			{
				if ((!(_1a479c5e8_IsInt(_39703_rk)))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39693_lk, &__jule_any_type5); (*it++) = jule::Any(_39703_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1a48c8dea_mod(_self_);
				_1a48c8944_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a8e94a22:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8e95836:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c9a99_evalInt(_1a48c5710_binaryEval* _self_) {
	jule::Str _40183_lk = (*(_1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _40193_rk = (*(_1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1a48c92e6_numbersAreCompatibile(_self_, &(_40183_lk), &(_40193_rk))))) {
		_1a483a4aa_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8e9d278:;
			{
				return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a49591cd_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
			}
		}
		_match_end_1a8e9d201:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8e9ea60:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4043:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8ea090c:;
			{
				_1a48c8944_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8ea0973:;
			{
				_1a48c8944_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8e9e17a:;
			{
				_1a48c8dea_mod(_self_);
				_1a48c8944_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8e9d366:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8e9e653:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48c9d30_evalPrim(_1a48c5710_binaryEval* _self_) {
	jule::Ptr<_1a48dd5e6_Prim> _40663_prim = _1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1a48e182a_IsBool(_40663_prim.ptr())) {
			_case_begin_1a8ea3c2e:;
			{
				return _1a48c84b0_evalBool(_self_);;
			}
		}
		else if (_1a48e1ab1_IsStr(_40663_prim.ptr())) {
			_case_begin_1a8ea3cc8:;
			{
				return _1a48c8746_evalStr(_self_);;
			}
		}
		_match_end_1a8ea3b96:;
	};
	if ((_1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48dd96a_Str(_40663_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1a479c939_IsFloat((*_40663_prim.alloc)._field_Kind)) {
			_case_begin_1a8ea6b66:;
			{
				return _1a48c9813_evalFloat(_self_);;
			}
		}
		else if (_1a479c5e8_IsInt((*_40663_prim.alloc)._field_Kind)) {
			_case_begin_1a8ea6bee:;
			{
				return _1a48c9a99_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a8ea6b00:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8ea4e1c:;
	};
}



inline jule::Bool _1a48ca0b6_checkSpecialCases(_1a48c5710_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _40913_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_40913_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1a48d6b2d_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1a48d6611_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1a48d6b2d_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1a48d6611_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48ca34c_evalOp(_1a48c5710_binaryEval* _self_) {
	jule::Bool _41063_ok = _1a48ca0b6_checkSpecialCases(_self_);;
	if ((!(_41063_ok))) {
		return nullptr;;
	};
	if ((_1a48d9207_Struct((*((*(_self_))._field_l))._field_Type.ptr()) != nullptr)) {
		return _1a48c7c0c_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _1a48c957c_shift(_self_);;
	};
	{
		
		if (_1a48d6897_Void((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1a8eb0d07:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1a48db54a_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1a8eb0eb1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb0d6d;
			}
		}
		else if ((_1a48db54a_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb0d6d:;
			{
				return _1a48c6920_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1a48e1d47_IsAny(_1a48d7b84_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1a8eb0dd4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb2457;
			}
		}
		else if (_1a48d6611_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1a8eb2457:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb24bd;
			}
		}
		else if (_1a48d6611_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1a8eb24bd:;
			{
				return _1a48c6ba6_evalNil(_self_);;
			}
		}
		else if (((_1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1a48e1d47_IsAny(_1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1a8eb25bc:;
			{
				return _1a48c8229_evalAny(_self_);;
			}
		}
		else if ((_1a48d86bd_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1a8eb2633:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb2699;
			}
		}
		else if ((_1a48d86bd_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2699:;
			{
				return _1a48c71c3_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a48d8437_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1a8eb2710:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb2776;
			}
		}
		else if ((_1a48d8437_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2776:;
			{
				return _1a48c6e3c_evalEnum(_self_);;
			}
		}
		else if ((_1a48d7e1a_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1a8eb27dc:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb2853;
			}
		}
		else if ((_1a48d7e1a_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2853:;
			{
				return _1a48c7459_evalSptr(_self_);;
			}
		}
		else if ((_1a48d81a1_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1a8eb28b9:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb2930;
			}
		}
		else if ((_1a48d81a1_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2930:;
			{
				return _1a48c76e0_evalPtr(_self_);;
			}
		}
		else if ((_1a48d8954_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2996:;
			{
				return _1a48c7976_evalArr(_self_);;
			}
		}
		else if ((_1a48d948d_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1a8eb2a62:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a8eb2ac8;
			}
		}
		else if ((_1a48d948d_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2ac8:;
			{
				return _1a48c7e93_evalTrait(_self_);;
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1a8eb2b3e:;
			{
				return _1a48c9d30_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a8eb0b2b:;
			{
				_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a8eb01be:;
	};
}



inline void _1a48ca605_evalConst(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _417630_d) {
	{
		
		if (((*(_417630_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1a8ec47bb:;
			{
				return;;
			}
		}
		else if ((!(_1a48a318d_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a48a318d_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a8ec4d71:;
			{
				(*((*(_417630_d))))._field_Constant=nullptr;
				(*((*(_417630_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1a8ec46ab:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a8ec4e4d:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470ab72_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8ec73a1:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool((!(_1a470ab72_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a8ec7417:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470a831_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a8ec747d:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470a4e0_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1a8ec74e4:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470b645_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1a8ec756b:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470aeb3_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a8ec75e3:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470b986_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8ec766a:;
			{
				(*((*(_417630_d))))._field_Constant=static__1a4705a90_NewBool(_1a470b304_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8ec76e2:;
			{
				_1a470bcc7_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8ec7769:;
			{
				_1a470c118_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8ec77e1:;
			{
				_1a470c459_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8ec7868:;
			{
				jule::Bool _42164_ok = _1a470c79a_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42164_ok)) && (_1a4707c7e_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a48dd5e6_Prim> _42218_prim = _1a48d7b84_Prim((*((*(_417630_d))))._field_Type.ptr());;
				{
					
					if (_1a479c021_IsSigInt((*(_42218_prim))._field_Kind)) {
						_case_begin_1a8ed8857:;
						{
							_1a4708037_SetI64((*((*(_417630_d))))._field_Constant, _1a4707762_AsI64((*((*(_417630_d))))._field_Constant));
						}
					}
					else if (_1a479c32e_IsUnsigInt((*(_42218_prim))._field_Kind)) {
						_case_begin_1a8ed8901:;
						{
							_1a47082e0_SetU64((*((*(_417630_d))))._field_Constant, _1a47079e8_AsU64((*((*(_417630_d))))._field_Constant));
						}
					}
					_match_end_1a8ed87d0:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8ec78e0:;
			{
				jule::Bool _42294_ok = _1a470cadb_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42294_ok)) && (_1a4707c7e_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1a8ec7967:;
			{
				_1a470d26d_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8ec79de:;
			{
				_1a470ce2c_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8ec7a66:;
			{
				_1a470d5ae_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a8ec7add:;
			{
				_1a470d900_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8ec7b65:;
			{
				_1a470dc41_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417630_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1a8ec668b:;
	};
	(*((*(_417630_d))))._field_Model=jule::Any((*((*(_417630_d))))._field_Constant, &__jule_any_type15);
	_1a48d053e_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _417630_d, _1a48d8437_Enum((*((*(_417630_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1a48a7a11_getOwnerRefers((*(_self_))._field_e));
}



inline void _1a48ca8ad_checkData(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _425430_d) {
	jule::Ptr<_1a4721d20_FnIns> _42553_f = _1a48d8e71_Fn((*((*(_425430_d))))._field_Type.ptr());;
	if ((((_42553_f != nullptr) && ((*_42553_f.alloc)._field_Decl != nullptr)) && _1a471e49e_IsMethod((*(_42553_f))._field_Decl))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1a48caaab_checkDatas(_1a48c5710_binaryEval* _self_) {
	_1a48ca8ad_checkData(_self_, &((*(_self_))._field_l));
	_1a48ca8ad_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a48cad64_setModel(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _426629_d) {
	if (_1a48a318d_IsConst((*(_426629_d)).ptr())) {
		if (((_1a48a318d_IsConst((*(_self_))._field_l.ptr()) && _1a48a318d_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a48a2753_Data> _42777_l;
	jule::Ptr<_1a48a2753_Data> _427714_r;
	({
		jule::Ptr<_1a48a2753_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a48a2753_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42777_l = ___jule_assign_arg;
		_427714_r = _1___jule_assign_arg;
	});
	if ((!(_1a48a34ce_GoodOperand(_42777_l, &(_427714_r))))) {
		std::swap(_42777_l, _427714_r);
	};
	(*((*(_426629_d))))._field_Model=jule::Any(jule::new_ptr<_1a471198b_BinaryExprModel>(_1a471198b_BinaryExprModel{._field_Left=jule::new_ptr<_1a4711491_OperandExprModel>(_1a4711491_OperandExprModel{._field_Type=(*_42777_l.alloc)._field_Type, ._field_Model=(*_42777_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a4711491_OperandExprModel>(_1a4711491_OperandExprModel{._field_Type=(*_427714_r.alloc)._field_Type, ._field_Model=(*_427714_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1a48cb11c_postEval(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _429529_d) {
	(*((*(_429529_d))))._field_Lvalue=false;
	_1a48cad64_setModel(_self_, _429529_d);
}



inline jule::Ptr<_1a48a2753_Data> _1a48cb518_solveExplicit(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a48a2753_Data>* _430034_l, jule::Ptr<_1a48a2753_Data>* _430049_r) {
	({
		jule::Ptr<_1a48a2753_Data> ___jule_assign_arg = (*(_430034_l));
		jule::Ptr<_1a48a2753_Data> _1___jule_assign_arg = (*(_430049_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a48caaab_checkDatas(_self_);
	jule::Ptr<_1a48a2753_Data> _43057_d = _1a48ca34c_evalOp(_self_);;
	({
		jule::Ptr<_1a48a2753_Data> ___jule_assign_arg = (*(_430034_l));
		jule::Ptr<_1a48a2753_Data> _1___jule_assign_arg = (*(_430049_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a48ca605_evalConst(_self_, &(_43057_d));
	if ((_43057_d != nullptr)) {
		(*_43057_d.alloc)._field_Mutable=true;
		_1a48cb11c_postEval(_self_, &(_43057_d));
	};
	return _43057_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a48cb859_eval(_1a48c5710_binaryEval* _self_, jule::Ptr<_1a465b067_BinaryExpr>* _432025_op) {
	if (((*((*((*(_432025_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1a48a4a0d_pushErr((*(_self_))._field_e.ptr(), (*((*(_432025_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1a48a4d71_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a48a2753_Data> _43277_l = _1a48c2e9e_evalExpr1((*(_self_))._field_e, (*((*(_432025_op))))._field_Left);;
	if (((_43277_l == nullptr) || ((*(_43277_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a48d54cd_Type> _43327_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43277_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43327_prefix;
	});;
	jule::Ptr<_1a48a2753_Data> _43357_r = _1a48c2e9e_evalExpr1((*(_self_))._field_e, (*((*(_432025_op))))._field_Right);;
	if (((_43357_r == nullptr) || ((*(_43357_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_432025_op))))._field_Op;
	jule::Ptr<_1a48a2753_Data> _43427_d = _1a48cb518_solveExplicit(_self_, &(_43277_l), &(_43357_r));;
	if ((((_43427_d != nullptr) && (*(_43277_l))._field_IsRune) && (*(_43357_r))._field_IsRune)) {
		(*_43427_d.alloc)._field_IsRune=true;
	};
	return _43427_d;;
}
















inline jule::Bool _1a48d54cd_Type_eq(_1a48d54cd_Type *_self_, _1a48d54cd_Type _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a48d58c9_Str(_1a48d54cd_Type* _self_) {
	if (_1a48d6611_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1e71a80b0_Builder _567_kind = static__1e71a892e_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1e71a90b1_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	if (_1a48d637a_Binded(_self_)) {
		({
			auto except = _1e71a90b1_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:63:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:64:4"));
			(except.result);
		});
	} else {
		({
			auto except = _1e71a90b1_WriteStr(&_567_kind, ((_1a48d5027_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a48d4a82_Str((*(_self_))._field_Kind.data));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:66:4"));
			(except.result);
		});
	};
	return _1e71a9941_Str(&_567_kind);;
}



inline jule::Bool _1a48d5c1a_Equal(jule::Ptr<_1a48d54cd_Type> _self_, jule::Ptr<_1a48d54cd_Type> _7218_other) {
	if (_1a48d6611_IsNil(_self_.ptr())) {
		return _1a48d6611_IsNil(_7218_other.ptr());;
	};
	if (_1a48d637a_Binded(_self_)) {
		return (_1a48d637a_Binded(_7218_other) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1a48d5027_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a48d4dc3_Equal((*_self_.alloc)._field_Kind.data, _7218_other);;
}



inline jule::Bool _1a48d637a_Binded(_1a48d54cd_Type* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a48d6611_IsNil(_1a48d54cd_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a48d6897_Void(_1a48d54cd_Type* _self_) {
	jule::Ptr<_1a48dd5e6_Prim> _923_prim = _1a48d7b84_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a48d6b2d_Comparable(_1a48d54cd_Type* _self_) {
	{
		_1a48d54cd_Type* _998__self = _self_;;
		if ((_1a48d9207_Struct(_998__self) != nullptr)) {
			return (*(_1a48d9207_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1a48d8954_Arr(_998__self) != nullptr)) {
			return _1a48d6b2d_Comparable((*(_1a48d8954_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1a48d9724_Map(_998__self) == nullptr) && (_1a48d8bda_Slc(_998__self) == nullptr)) && (_1a48d8e71_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1a48d6db4_Mutable(_1a48d54cd_Type* _self_) {
	{
		_1a48d54cd_Type* _1138__self = _self_;;
		if ((_1a48d9207_Struct(_1138__self) != nullptr)) {
			return (*(_1a48d9207_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1a48d948d_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1a48d7b84_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1a48dd5e6_Prim> _1215_p = _1a48d7b84_Prim(_1138__self);;
			return _1a48e1d47_IsAny(_1215_p.ptr());;
		};
		if ((_1a48d8954_Arr(_1138__self) != nullptr)) {
			return _1a48d6db4_Mutable((*(_1a48d8954_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1a48d8bda_Slc(_1138__self) != nullptr) || (_1a48d81a1_Ptr(_1138__self) != nullptr)) || (_1a48d7e1a_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1a48d714a_Ordered(_1a48d54cd_Type* _self_) {
	{
		_1a48d54cd_Type* _1368__self = _self_;;
		jule::Ptr<_1a48dd5e6_Prim> _1374_prim = _1a48d7b84_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1a479cbc0_IsNum((*_1374_prim.alloc)._field_Kind) || _1a48e1ab1_IsStr(_1374_prim));;
		};
		if ((_1a48d81a1_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a4676d30_StructIns> _1444_s = _1a48d9207_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a472bb2c_Enum> _1514_enm = _1a48d8437_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1a479cbc0_IsNum(_1a48d58c9_Str((*((*_1514_enm.alloc)._field_TypeSym))._field_Type.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a48d73d1_NilCompatible(_1a48d54cd_Type* _self_) {
	{
		_1a48d54cd_Type* _1628__self = _self_;;
		jule::Ptr<_1a48dd5e6_Prim> _1644_prim = _1a48d7b84_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1a48e1d47_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1a48d6611_IsNil(_1628__self) || (_1a48d8e71_Fn(_1628__self) != nullptr)) || (_1a48d7e1a_Sptr(_1628__self) != nullptr)) || (_1a48d81a1_Ptr(_1628__self) != nullptr)) || (_1a48d948d_Trait(_1628__self) != nullptr)) || (_1a48d8bda_Slc(_1628__self) != nullptr)) || (_1a48d9724_Map(_1628__self) != nullptr)) || (_1a48d86bd_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1a48d7667_GC(_1a48d54cd_Type* _self_) {
	{
		_1a48d54cd_Type* _1838__self = _self_;;
		jule::Ptr<_1a48dd5e6_Prim> _1844_prim = _1a48d7b84_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1a48e1d47_IsAny(_1844_prim) || _1a48e1ab1_IsStr(_1844_prim));;
		};
		return ((((_1a48d7e1a_Sptr(_1838__self) != nullptr) || (_1a48d8bda_Slc(_1838__self) != nullptr)) || (_1a48d948d_Trait(_1838__self) != nullptr)) || (_1a48d86bd_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1a48d78ed_Variadicable(_1a48d54cd_Type* _self_) {
	{
		_1a48d54cd_Type* _1968__self = _self_;;
		return (_1a48d8bda_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1a48dd5e6_Prim> _1a48d7b84_Prim(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)) {
			_case_begin_1a8781a3a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48dd5e6_Prim>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1a90e0079:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e0013:;
	};
}



inline jule::Ptr<_1a48e2122_Sptr> _1a48d7e1a_Sptr(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)) {
			_case_begin_1a90e0e37:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48e2122_Sptr>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1a90e0c7d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e0c17:;
	};
}



inline jule::Ptr<_1a48e58d9_Ptr> _1a48d81a1_Ptr(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28)) {
			_case_begin_1a90e1bb3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48e58d9_Ptr>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1a90e1a09:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e1993:;
	};
}



inline jule::Ptr<_1a472bb2c_Enum> _1a48d8437_Enum(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3)) {
			_case_begin_1a90e293e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a472bb2c_Enum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1a90e2785:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e271e:;
	};
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a48d86bd_TypeEnum(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4)) {
			_case_begin_1a90e36ba:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a472d337_TypeEnum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1a90e3511:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e349a:;
	};
}



inline jule::Ptr<_1a48e4e16_Arr> _1a48d8954_Arr(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data27)) {
			_case_begin_1a90e4446:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48e4e16_Arr>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1a90e428c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e4226:;
	};
}



inline jule::Ptr<_1a48e2ae5_Slc> _1a48d8bda_Slc(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24)) {
			_case_begin_1a90e51c2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48e2ae5_Slc>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1a90e5018:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e4ea2:;
	};
}



inline jule::Ptr<_1a4721d20_FnIns> _1a48d8e71_Fn(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)) {
			_case_begin_1a90e5e4d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4721d20_FnIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1a90e5c94:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e5c2d:;
	};
}



inline jule::Ptr<_1a4676d30_StructIns> _1a48d9207_Struct(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)) {
			_case_begin_1a90e6bc9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4676d30_StructIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1a90e6a20:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e69a9:;
	};
}



inline jule::Ptr<_1a4729476_Trait> _1a48d948d_Trait(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data2)) {
			_case_begin_1a90e7955:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4729476_Trait>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1a90e779b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e7735:;
	};
}



inline jule::Ptr<_1a48e4289_Map> _1a48d9724_Map(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data26)) {
			_case_begin_1a90e84b1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48e4289_Map>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1a90e8714:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e869d:;
	};
}



inline jule::Ptr<_1a48e36d9_Tuple> _1a48d99aa_Tup(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data25)) {
			_case_begin_1a90e943a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a48e36d9_Tuple>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1a90e9281:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e921a:;
	};
}



inline jule::Bool _1a48d9c41_comptime(_1a48d54cd_Type* _self_) {
	return (((((((((((((((_1a48db2b4_comptimeTypeInfos(_self_) != nullptr) || (_1a48db54a_comptimeTypeInfo(_self_) != nullptr)) || (_1a48d9ec7_comptimeStructFields(_self_) != nullptr)) || (_1a48da25d_comptimeStructField(_self_) != nullptr)) || (_1a48da4e4_comptimeEnumFields(_self_) != nullptr)) || (_1a48da77a_comptimeEnumField(_self_) != nullptr)) || (_1a48db7d1_comptimeStatics(_self_) != nullptr)) || (_1a48dba67_comptimeStatic(_self_) != nullptr)) || (_1a48daa11_comptimeParams(_self_) != nullptr)) || (_1a48dac97_comptimeParam(_self_) != nullptr)) || (_1a48dbced_comptimeValue(_self_) != nullptr)) || (_1a48dc837_comptimeFiles(_self_) != nullptr)) || (_1a48dc5a1_comptimeFile(_self_) != nullptr)) || (_1a48dc084_comptimeDecl(_self_) != nullptr)) || (_1a48dc31a_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1a47a1443_comptimeStructFields> _1a48d9ec7_comptimeStructFields(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data7)) {
			_case_begin_1a90e9e96:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47a1443_comptimeStructFields>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1a90ee3a7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90ee341:;
	};
}



inline jule::Ptr<_1a479eba0_comptimeStructField> _1a48da25d_comptimeStructField(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data6)) {
			_case_begin_1a90eec26:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a479eba0_comptimeStructField>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1a90eea6c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90eea06:;
	};
}



inline jule::Ptr<_1a47a7405_comptimeEnumFields> _1a48da4e4_comptimeEnumFields(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data11)) {
			_case_begin_1a91009a2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47a7405_comptimeEnumFields>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1a91007e8:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9100782:;
	};
}



inline jule::Ptr<_1a47a60e6_comptimeEnumField> _1a48da77a_comptimeEnumField(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data10)) {
			_case_begin_1a910172d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47a60e6_comptimeEnumField>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1a9101574:;
			{
				return nullptr;;
			}
		}
		_match_end_1a910150d:;
	};
}



inline jule::Ptr<_1a47aac66_comptimeParams> _1a48daa11_comptimeParams(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data13)) {
			_case_begin_1a91024a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47aac66_comptimeParams>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1a9102300:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9102289:;
	};
}



inline jule::Ptr<_1a47a8e0c_comptimeParam> _1a48dac97_comptimeParam(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data12)) {
			_case_begin_1a9103235:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47a8e0c_comptimeParam>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1a910307b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9103015:;
	};
}



inline jule::Ptr<_1a479e144_comptimeRange> _1a48db02d_comptimeRange(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)) {
			_case_begin_1a9103eb1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a479e144_comptimeRange>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1a9103d07:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9103c91:;
	};
}



inline jule::Ptr<_1a47ac5c5_comptimeTypeInfos> _1a48db2b4_comptimeTypeInfos(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data14)) {
			_case_begin_1a9104c3c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47ac5c5_comptimeTypeInfos>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1a9104a83:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9104a1c:;
	};
}



inline jule::Ptr<_1a47ae044_comptimeTypeInfo> _1a48db54a_comptimeTypeInfo(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data15)) {
			_case_begin_1a91059b8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47ae044_comptimeTypeInfo>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1a910580e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9105798:;
	};
}



inline jule::Ptr<_1a47a4677_comptimeStatics> _1a48db7d1_comptimeStatics(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data9)) {
			_case_begin_1a9106524:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47a4677_comptimeStatics>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1a9106777:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9106711:;
	};
}



inline jule::Ptr<_1a47a2dc3_comptimeStatic> _1a48dba67_comptimeStatic(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data8)) {
			_case_begin_1a910749d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47a2dc3_comptimeStatic>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1a91072e4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a910727d:;
	};
}



inline jule::Ptr<_1a47b5149_comptimeValue> _1a48dbced_comptimeValue(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data16)) {
			_case_begin_1a9108229:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47b5149_comptimeValue>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1a9108070:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9108009:;
	};
}



inline jule::Ptr<_1a47bd73a_comptimeDecl> _1a48dc084_comptimeDecl(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20)) {
			_case_begin_1a9108ea5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47bd73a_comptimeDecl>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1a9108ceb:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9108c85:;
	};
}



inline jule::Ptr<_1a47bb44c_comptimeDecls> _1a48dc31a_comptimeDecls(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data19)) {
			_case_begin_1a9109c31:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47bb44c_comptimeDecls>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1a9109a77:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9109a11:;
	};
}



inline jule::Ptr<_1a47b9824_comptimeFile> _1a48dc5a1_comptimeFile(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data18)) {
			_case_begin_1a910a9ac:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47b9824_comptimeFile>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1a910a803:;
			{
				return nullptr;;
			}
		}
		_match_end_1a910a78c:;
	};
}



inline jule::Ptr<_1a47b7da5_comptimeFiles> _1a48dc837_comptimeFiles(_1a48d54cd_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data17)) {
			_case_begin_1a910b738:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a47b7da5_comptimeFiles>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1a910b57e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a910b518:;
	};
}








inline jule::Bool _1a48dcbde_TypeSym_eq(_1a48dcbde_TypeSym *_self_, _1a48dcbde_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1a48dd096_checked(_1a48dcbde_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1a48dd5e6_Prim_eq(_1a48dd5e6_Prim *_self_, _1a48dd5e6_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1a48dd96a_Str(_1a48dd5e6_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a48ddcab_Equal(jule::Ptr<_1a48dd5e6_Prim> _self_, jule::Ptr<_1a48d54cd_Type> _51418_other) {
	jule::Ptr<_1a48dd5e6_Prim> _5153_prim = _1a48d7b84_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1a48de251_IsConstraint(_1a48dd5e6_Prim* _self_) {
	return ((((!(_1a48e1ab1_IsStr(_self_))) && (!(_1a48e1d47_IsAny(_self_)))) && (!(_1a48e182a_IsBool(_self_)))) && (!(_1a479cbc0_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a48de4d7_IsI8(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1a48de76d_IsI16(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1a48dea04_IsI32(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1a48dec8a_IsI64(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1a48e0021_IsU8(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1a48e02a7_IsU16(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1a48e053d_IsU32(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1a48e07c4_IsU64(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1a48e0a5a_IsF32(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1a48e0ce1_IsF64(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1a48e1077_IsInt(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1a48e130d_IsUint(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1a48e1594_IsUintptr(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1a48e182a_IsBool(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1a48e1ab1_IsStr(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1a48e1d47_IsAny(_1a48dd5e6_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1a48e2122_Sptr_eq(_1a48e2122_Sptr *_self_, _1a48e2122_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a48e24c9_Str(_1a48e2122_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a48d58c9_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a48e281a_Equal(jule::Ptr<_1a48e2122_Sptr> _self_, jule::Ptr<_1a48d54cd_Type> _59118_other) {
	jule::Ptr<_1a48e2122_Sptr> _5923_sptr = _1a48d7e1a_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1a48d5c1a_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1a48e2ae5_Slc_eq(_1a48e2ae5_Slc *_self_, _1a48e2ae5_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a48e30ac_Str(_1a48e2ae5_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a48d58c9_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a48e33ed_Equal(jule::Ptr<_1a48e2ae5_Slc> _self_, jule::Ptr<_1a48d54cd_Type> _61018_other) {
	jule::Ptr<_1a48e2ae5_Slc> _6113_slc = _1a48d8bda_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1a48d5c1a_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1a48e3a91_Str(_1a48e36d9_Tuple* _self_) {
	_1e71a80b0_Builder _6277_s = static__1e71a892e_New(16LL);;
	({
		auto except = _1e71a9369_WriteByte(&_6277_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:628:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&_6277_s, _1a48d58c9_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:629:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a911ca8a:;
		if (it != expr_end) {
			jule::Ptr<_1a48d54cd_Type> *_63010_t = it;
			{
				({
					auto except = _1e71a9369_WriteByte(&_6277_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:631:4"));
				});
				({
					auto except = _1e71a90b1_WriteStr(&_6277_s, _1a48d58c9_Str((*(_63010_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:632:4"));
					(except.result);
				});
			}
			_iter_next_1a911ca8a:;
			++it;
			goto _iter_begin_1a911ca8a;
		}
		_iter_end_1a911ca8a:;
	};
	({
		auto except = _1e71a9369_WriteByte(&_6277_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:634:3"));
	});
	return _1e71a9941_Str(&_6277_s);;
}



inline jule::Bool _1a48e3dd2_Equal(jule::Ptr<_1a48e36d9_Tuple> _self_, jule::Ptr<_1a48d54cd_Type> _63918_other) {
	jule::Ptr<_1a48e36d9_Tuple> _6403_tup = _1a48d99aa_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _6477_i = 0LL;;
	for (; (_6477_i < (*_self_.alloc)._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1a48d5c1a_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1a9120a38:;
	}
	_iter_end_1a9120a38:;;
	return true;;
}








inline jule::Bool _1a48e4289_Map_eq(_1a48e4289_Map *_self_, _1a48e4289_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1a48e4641_Str(_1a48e4289_Map* _self_) {
	_1e71a80b0_Builder _6677_s = static__1e71a892e_New(16LL);;
	({
		auto except = _1e71a90b1_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:668:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_6677_s, _1a48d58c9_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:669:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&_6677_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:670:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&_6677_s, _1a48d58c9_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:671:3"));
		(except.result);
	});
	return _1e71a9941_Str(&_6677_s);;
}



inline jule::Bool _1a48e4982_Equal(jule::Ptr<_1a48e4289_Map> _self_, jule::Ptr<_1a48d54cd_Type> _67618_other) {
	jule::Ptr<_1a48e4289_Map> _6773_m = _1a48d9724_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1a48d5c1a_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1a48d5c1a_Equal((*_self_.alloc)._field_Val, (*(_6773_m))._field_Val));;
}








inline jule::Bool _1a48e4e16_Arr_eq(_1a48e4e16_Arr *_self_, _1a48e4e16_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1a48e52bd_Str(_1a48e4e16_Arr* _self_) {
	_1e71a80b0_Builder _6957_s = static__1e71a892e_New(16LL);;
	({
		auto except = _1e71a9369_WriteByte(&_6957_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:696:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&_6957_s, _1b45772b4_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:697:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&_6957_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:698:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&_6957_s, _1a48d58c9_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:699:3"));
		(except.result);
	});
	return _1e71a9941_Str(&_6957_s);;
}



inline jule::Bool _1a48e560e_Equal(jule::Ptr<_1a48e4e16_Arr> _self_, jule::Ptr<_1a48d54cd_Type> _70418_other) {
	jule::Ptr<_1a48e4e16_Arr> _7053_arr = _1a48d8954_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1a48d5c1a_Equal((*_self_.alloc)._field_Elem, (*(_7053_arr))._field_Elem));;
}








inline jule::Bool _1a48e58d9_Ptr_eq(_1a48e58d9_Ptr *_self_, _1a48e58d9_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a48e5c91_Str(_1a48e58d9_Ptr* _self_) {
	if (_1a48e6456_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a48d58c9_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a48e60d2_Equal(jule::Ptr<_1a48e58d9_Ptr> _self_, jule::Ptr<_1a48d54cd_Type> _72818_other) {
	jule::Ptr<_1a48e58d9_Ptr> _7293_ptr = _1a48d81a1_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1a912bb32:;
			{
				return false;;
			}
		}
		else if (_1a48e6456_IsUnsafe(_self_.ptr())) {
			_case_begin_1a912b4d3:;
			{
				return _1a48e6456_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1a48e6456_IsUnsafe(_7293_ptr.ptr())) {
			_case_begin_1a912b549:;
			{
				return _1a48e6456_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1a912b060:;
			{
				return _1a48d5c1a_Equal((*(_self_))._field_Elem, (*(_7293_ptr))._field_Elem);;
			}
		}
		_match_end_1a912aed8:;
	};
}



inline jule::Bool _1a48e6456_IsUnsafe(_1a48e58d9_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a48e68da_referencer_eq(_1a48e68da_referencer *_self_, _1a48e68da_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1a48e815b_pushErr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a463d137_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1a482c2d2_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1a48e8359_allowBuiltin(_1a48e78ca_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a48e8557_disallowBuiltin(_1a48e78ca_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1a913153d_pushReference(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4676d30_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a8a32060_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1a47eb1b3_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type64));
}

inline void _1a9134013_pushReference(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4729476_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a9135c18_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1a47eb1b3_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1a48e8ab8_pushReferenceByKind(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a48d54cd_Type>* _84240_k) {
	{
		
		if ((_1a48d9207_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1a9130152:;
			{
				jule::Ptr<_1a4676d30_StructIns> _8458_t = _1a48d9207_Struct((*(_84240_k)).ptr());;
				_1a913153d_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1a48d948d_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1a91301eb:;
			{
				jule::Ptr<_1a4729476_Trait> _8488_t = _1a48d948d_Trait((*(_84240_k)).ptr());;
				_1a9134013_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1a9130031:;
	};
}



inline void _1a48e8ed6_pushCycleError(_1a48e78ca_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1e71a80b0_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1a91380d3, nullptr, nullptr);;
	jule::Str _8653_m = _1e71a9941_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1e71a90b1_WriteStr(_85353_message, _1ce783d13_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:869:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_85353_message, _8683_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:870:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_85353_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:871:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_85353_message, _8653_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:872:3"));
		(except.result);
	});
}



inline jule::Bool _1a48e93d2_checkCrossCycle(_1a48e78ca_typeChecker* _self_, jule::Any _87527_decl, _1e71a80b0_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a913c6c0:;
			{
				jule::Ptr<_1a48d46db_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1a48d46db_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a913d68d:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1a913de96:;
									{
										_1a48e8ed6_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1a48e93d2_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1a913e02e:;
									{
										_1a48e8ed6_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1a913dd86:;
							};
						}
						_iter_next_1a913d68d:;
						++it;
						goto _iter_begin_1a913d68d;
					}
					_iter_end_1a913d68d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a913c527:;
			{
				jule::Ptr<_1a4673ec5_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1a4673ec5_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9140a25:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1a914133e:;
									{
										_1a48e8ed6_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1a48e93d2_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1a91413c7:;
									{
										_1a48e8ed6_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1a914122e:;
							};
						}
						_iter_next_1a9140a25:;
						++it;
						goto _iter_begin_1a9140a25;
					}
					_iter_end_1a9140a25:;
				};
			}
		}
		_match_end_1a913c659:;
	};
	return true;;
}



inline jule::Bool _1a48e97cd_checkIllegalCycles(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a91437a3:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1a4673ec5_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a91436b5:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1a48d46db_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a91435a5:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a48e815b_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e71a80b0_Builder _9327_message = static__1e71a892e_New(32LL);;
	if ((!(_1a48e93d2_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _1e71a9941_Str(&_9327_message);;
		_1e71a9b3e_Clear(&_9327_message);
		_1a48e8ed6_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_1e71a9941_Str(&_9327_message);
		_1a48e815b_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9148720:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90967_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9146c5c:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1a9148ed4:;
						{
							jule::Ptr<_1a4673ec5_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a4673ec5_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4673ec5_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1a4673ec5_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1a9148d3b:;
				};
			}
		}
		_match_end_1a9148687:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a48e9bc9_fromTypeAlias(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _95930_decl, jule::Ptr<_1a48d46db_TypeAlias>* _95962_ta) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1a48e815b_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1a48e815b_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a914e65a:;
			if (it != expr_end) {
				jule::Ptr<_1a48d46db_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type != nullptr) && _1a48d5c1a_Equal((*((*((*(_95962_ta))))._field_TypeSym))._field_Type, (*(*(_97611_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a914e65a;
					};
				}
				_iter_next_1a914e65a:;
				++it;
				goto _iter_begin_1a914e65a;
			}
			_iter_end_1a914e65a:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a80005a6:;
			if (it != expr_end) {
				jule::Ptr<_1a48d46db_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1a48e815b_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7ec55c0:;
						if (it != expr_end) {
							jule::Ptr<_1a48d46db_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1a48e815b_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1a7ec55c0:;
							++it;
							goto _iter_begin_1a7ec55c0;
						}
						_iter_end_1a7ec55c0:;
					};
				}
				_iter_next_1a80005a6:;
				++it;
				goto _iter_begin_1a80005a6;
			}
			_iter_end_1a80005a6:;
		};
	};
	if (((*(*((*(_95962_ta))))._field_TypeSym.alloc)._field_Type == nullptr)) {
		jule::Bool _10034_ok = _1a483e2b1_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)) {
			_case_begin_1a889e2d9:;
			{
				jule::Bool _10114_ok = _1a48e97cd_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind.cast_ptr<_1a4676d30_StructIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1a889e262:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1a48d54cd_Type> _10237_tk = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind});;
	_1a48e8ab8_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data21);;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a48ea0c5_fromEnum(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _103625_decl, jule::Ptr<_1a472bb2c_Enum>* _103657_e) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1a48e815b_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1a48e815b_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a48ea4c1_fromTypeEnum(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _104829_decl, jule::Ptr<_1a472d337_TypeEnum>* _104861_e) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1a48e815b_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1a48e815b_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1a4729476_Trait> _1a48ea8bc_fromTrait(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _106026_decl, jule::Ptr<_1a4729476_Trait>* _106058_t) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1a48e815b_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1a48e815b_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a9134013_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1a48eacb8_checkStructIns(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4676d30_StructIns>* _107335_ins, jule::Ptr<_1a463d137_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a484aca1_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1a484b7b8_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1a484b059_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a48eb071_appendUsedStructReference(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4673ec5_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9025bb3:;
			{
				jule::Ptr<_1a4673ec5_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a4673ec5_Struct>();;
				if ((!(_1a4675988_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4673ec5_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1a9025b4c:;
	};
}



inline jule::Ptr<_1a4676d30_StructIns> _1a48eb46c_buildStructInstance(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _110740_decl, jule::Ptr<_1a4673ec5_Struct>* _110772_s) {
	jule::Ptr<_1a48e68da_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
				_case_begin_1a9028c1b:;
				{
					jule::Ptr<_1a47d3cc2_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1);;
					jule::Ptr<_1a47d3cc2_scopeChecker> _11199_hard = _1a47d7435_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1a9028ba5;
					};
					jule::I32 _11235_n = ((*(*(_11199_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1a9028ba5:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a4676d30_StructIns> _11377_ins = _1a467446a_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d3ae7_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a902e01d:;
		if (it != expr_end) {
			jule::Ptr<_1a4653669_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1a48d54cd_Type> _11408_kind = _1a4900174_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1a902e01d:;
			++it;
			goto _iter_begin_1a902e01d;
		}
		_iter_end_1a902e01d:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1a4676d30_StructIns> _1a48eb868_fromStructIns(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4676d30_StructIns>* _115534_ins, jule::Ptr<_1a463d137_Token> _115555_token) {
	jule::Ptr<_1a4676d30_StructIns> _11567_existInstance = _1a4674778_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1a483c0b1_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1a913153d_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1a48eacb8_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1a913153d_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1a4676d30_StructIns> _1a48ebc64_fromStruct(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _117331_decl, jule::Ptr<_1a4673ec5_Struct>* _117363_s) {
	if ((!(_1a482ca41_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1a48e815b_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1a48e815b_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a4676d30_StructIns>(_1a4676d30_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1a4676280_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a471dc62_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Operators=_1a46730b2_Operators{._field_Eq=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Add=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Div=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1a4721d20_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1a48e97cd_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1a48eb071_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1a4676d30_StructIns> _11977_ins = _1a48eb46c_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1a482d811_checkGenericQuantity((*(_self_))._field_s, (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*(_11977_ins))._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1a48eb868_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1a48ec0a5_getDef(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9039622:;
		if (it != expr_end) {
			jule::Ptr<_1a4660874_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1a490296d_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22);;
				};
			}
			_iter_next_1a9039622:;
			++it;
			goto _iter_begin_1a9039622;
		}
		_iter_end_1a9039622:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9039985:;
		if (it != expr_end) {
			jule::Ptr<_1a48d46db_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1a48e815b_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1a4676d30_StructIns> _12309_st = _1a48d9207_Struct((*((*_122415_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1a48e97cd_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1a9039985:;
			++it;
			goto _iter_begin_1a9039985;
		}
		_iter_end_1a9039985:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1a472bb2c_Enum> _12428_e = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4905421_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1a48ea0c5_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3);;
		};
		jule::Ptr<_1a472d337_TypeEnum> _12478_te = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4905762_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1a48ea4c1_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4);;
		};
		jule::Ptr<_1a4729476_Trait> _12528_t = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a49050d0_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1a48ea8bc_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a48e815b_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4673ec5_Struct> _12617_s = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4904893_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1a48ebc64_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0);;
	};
	jule::Ptr<_1a48d46db_TypeAlias> _12667_ta = ((_1a49058b6_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a4904497_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1a495be5b_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1a48e9bc9_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1a48e815b_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1a48ec3e6_buildIdent(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653c74_IdentTypeDecl> _127830_decl) {
	return _1a48ec0a5_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1a48ec737_buildSubIdent(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a465403d_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1a48ec3e6_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4)) {
			_case_begin_1a9047a3c:;
			{
				goto _match_end_1a904809d;
			}
		}
		else {
			_case_begin_1a9047b19:;
			{
				_1a48e815b_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a904809d:;
	};
	jule::Ptr<_1a472d337_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1a472d337_TypeEnum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9048d07:;
		if (it != expr_end) {
			jule::I32 _12967_i = it - expr->begin();
			jule::Ptr<_1a4653c74_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1a472cc60_TypeEnumItem> _12978_item = _1a472de2b_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1a48e815b_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1a48e8ab8_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_12978_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data21);;
				};
				_12947_t=_1a48d86bd_TypeEnum((*(*(_12978_item))._field_TypeSym.alloc)._field_Type.ptr());
				if ((_12947_t == nullptr)) {
					_1a48e815b_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a9048d07:;
			++it;
			_12967_i++;
			goto _iter_begin_1a9048d07;
		}
		_iter_end_1a9048d07:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a48e2122_Sptr> _1a48eca78_buildSptrFromType(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a48d54cd_Type>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1a904e2c4:;
			{
				return nullptr;;
			}
		}
		else if ((_1a48d9207_Struct((*(_131638_elem)).ptr()) != nullptr)) {
			_case_begin_1a904e36d:;
			{
				jule::Ptr<_1a4676d30_StructIns> _13224_s = _1a48d9207_Struct((*(_131638_elem)).ptr());;
				if ((((*(_13224_s))._field_Decl != nullptr) && (*(*(_13224_s))._field_Decl.alloc)._field_Binded)) {
					_1a48e815b_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a48d8954_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1a48d8954_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1a904e3d4:;
			{
				_1a48e815b_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a904d812:;
	};
	return jule::new_ptr<_1a48e2122_Sptr>(_1a48e2122_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1a48e2122_Sptr> _1a48ecdb9_buildSptr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654714_SptrTypeDecl> _133629_decl) {
	jule::Bool _13373_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13373_cycleRisk;
	});;
	jule::Ptr<_1a48d54cd_Type> _13417_elem = _1a49004b5_checkDecl(_self_, &((*(_133629_decl))._field_Elem));;
	return _1a48eca78_buildSptrFromType(_self_, &(_13417_elem));;
}



inline jule::Ptr<_1a48e58d9_Ptr> _1a48ed20a_buildPtrFromType(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a48d54cd_Type>* _134537_elem) {
	{
		
		if (((*(_134537_elem)) == nullptr)) {
			_case_begin_1a90546a3:;
			{
				return nullptr;;
			}
		}
		else if (((_1a48d8954_Arr((*(_134537_elem)).ptr()) != nullptr) && (*(_1a48d8954_Arr((*(_134537_elem)).ptr())))._field_Auto)) {
			_case_begin_1a905474c:;
			{
				_1a48e815b_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a48e58d9_Ptr>(_1a48e58d9_Ptr{._field_Elem=jule::Ptr<_1a48d54cd_Type>(nullptr)});;
			}
		}
		_match_end_1a9054582:;
	};
	return jule::new_ptr<_1a48e58d9_Ptr>(_1a48e58d9_Ptr{._field_Elem=(*(_134537_elem))});;
}



inline jule::Ptr<_1a48e58d9_Ptr> _1a48ed54b_buildPtr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4655193_PtrTypeDecl> _136028_decl) {
	jule::Bool _13613_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13613_cycleRisk;
	});;
	jule::Ptr<_1a48d54cd_Type> _13657_elem = static_cast<jule::Ptr<_1a48d54cd_Type>>(nullptr);;
	if ((!(_1a4655539_IsUnsafe(_136028_decl.ptr())))) {
		_13657_elem=_1a49004b5_checkDecl(_self_, &((*_136028_decl.alloc)._field_Elem));
		return _1a48ed20a_buildPtrFromType(_self_, &(_13657_elem));;
	};
	return jule::new_ptr<_1a48e58d9_Ptr>(_1a48e58d9_Ptr{._field_Elem=_13657_elem});;
}



inline jule::Ptr<_1a48e2ae5_Slc> _1a48ed88c_buildSlc(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654a99_SlcTypeDecl> _137728_decl) {
	jule::Bool _13783_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13783_cycleRisk;
	});;
	jule::Ptr<_1a48d54cd_Type> _13827_elem = _1a49004b5_checkDecl(_self_, &((*(_137728_decl))._field_Elem));;
	{
		
		if ((_13827_elem == nullptr)) {
			_case_begin_1a9059a71:;
			{
				return nullptr;;
			}
		}
		else if (((_1a48d8954_Arr(_13827_elem.ptr()) != nullptr) && (*(_1a48d8954_Arr(_13827_elem)))._field_Auto)) {
			_case_begin_1a9059ad7:;
			{
				_1a48e815b_pushErr(_self_, (*((*_137728_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9059a0a:;
	};
	return jule::new_ptr<_1a48e2ae5_Slc>(_1a48e2ae5_Slc{._field_Elem=_13827_elem});;
}



inline jule::Ptr<_1a48e4e16_Arr> _1a48edbcd_buildArr(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4655935_ArrTypeDecl> _139828_decl) {
	jule::I32 _13997_n = 0LL;;
	if ((!(_1a4655ccb_AutoSized(_139828_decl.ptr())))) {
		jule::Ptr<_1a48a2753_Data> _14028_size = _1a48c32e0_evalExpr(_1a4839014_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139828_decl.alloc)._field_Size);;
		if ((_14028_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a48a318d_IsConst(_14028_size.ptr())))) {
			_1a48e815b_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a48d7b84_Prim((*(_14028_size))._field_Type.ptr()) == nullptr) || (!(_1a479c5e8_IsInt((*(_1a48d7b84_Prim((*(_14028_size))._field_Type)))._field_Kind))))) {
			_1a48e815b_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13997_n=static_cast<jule::I32>(_1a4707762_AsI64((*(_14028_size))._field_Constant.ptr()));
		if ((_13997_n < 0LL)) {
			_1a48e815b_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14205_max = _1a479a55d_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1a4793567_BitSize != 64LL) && (static_cast<jule::I64>(_13997_n) > _14205_max))) {
				_1a48e815b_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d1375_constoa(&((*(_14028_size))._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1b4576eea_FmtInt(_14205_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a48d54cd_Type> _14297_elem = _1a49004b5_checkDecl(_self_, &((*_139828_decl.alloc)._field_Elem));;
	{
		
		if ((_14297_elem == nullptr)) {
			_case_begin_1a9064e55:;
			{
				return nullptr;;
			}
		}
		else if (((_1a48d8954_Arr(_14297_elem.ptr()) != nullptr) && (*(_1a48d8954_Arr(_14297_elem)))._field_Auto)) {
			_case_begin_1a9064eee:;
			{
				_1a48e815b_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9064dcd:;
	};
	return jule::new_ptr<_1a48e4e16_Arr>(_1a48e4e16_Arr{._field_Auto=_1a4655ccb_AutoSized(_139828_decl), ._field_N=_13997_n, ._field_Elem=_14297_elem});;
}



inline jule::Ptr<_1a48e4289_Map> _1a48ee01e_buildMap(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4656183_MapTypeDecl> _144728_decl) {
	jule::Bool _14483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14483_cycleRisk;
	});;
	jule::Ptr<_1a48d54cd_Type> _14527_key = _1a49004b5_checkDecl(_self_, &((*(_144728_decl))._field_Key));;
	if ((_14527_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a48d54cd_Type> _14577_val = _1a49004b5_checkDecl(_self_, &((*_144728_decl.alloc)._field_Val));;
	if ((_14577_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a48d8437_Enum(_14577_val.ptr()) != nullptr)) {
		_1a48e815b_pushErr(_self_, (*((*_144728_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1a4673ec5_Struct> _14668_s = _1a431a09a_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1a48eb071_appendUsedStructReference(_self_, &(_14668_s));
		jule::Ptr<_1a4676d30_StructIns> _14688_ins = _1a467446a_instance(_14668_s);;
		(*(_14688_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=_14527_key, ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=_14577_val, ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); __jule_collection; });
		_1a48eb868_fromStructIns(_self_, &(_14688_ins), (*((*_144728_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1a48e4289_Map>(_1a48e4289_Map{._field_Key=_14527_key, ._field_Val=_14577_val});;
}



inline jule::Ptr<_1a48e36d9_Tuple> _1a48ee360_buildTuple(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654d96_TupleTypeDecl> _147930_decl) {
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _14807_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(0LL, (*(_147930_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d54cd_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147930_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a906e24a:;
		if (it != expr_end) {
			jule::Ptr<_1a4653669_TypeDecl> _148115_t = *it;
			{
				jule::Ptr<_1a48d54cd_Type> _14828_kind = _1a49004b5_checkDecl(_self_, &(_148115_t));;
				if ((_14828_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a48d54cd_Type>> &__jule_push_dest = _14807_types; __jule_push_dest.push(_14828_kind); };
			}
			_iter_next_1a906e24a:;
			++it;
			goto _iter_begin_1a906e24a;
		}
		_iter_end_1a906e24a:;
	};
	return jule::new_ptr<_1a48e36d9_Tuple>(_1a48e36d9_Tuple{._field_Types=_14807_types});;
}



inline jule::Bool _1a48ee6a1_checkFuncTypes(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4721d20_FnIns>* _149235_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149235_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9070ca7:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> _149315_p = *it;
			{
				(*(_149315_p))._field_Type=_1a4900174_build(_self_, &((*((*((*((*_149315_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_149315_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a483cb61_checkFnParamKind((*(_self_))._field_s, &(_149315_p));
			}
			_iter_next_1a9070ca7:;
			++it;
			goto _iter_begin_1a9070ca7;
		}
		_iter_end_1a9070ca7:;
	};
	if ((!(_1a471e218_IsVoid((*((*(_149235_f))))._field_Decl.ptr())))) {
		(*((*(_149235_f))))._field_Result=_1a4900174_build(_self_, &((*(*((*((*((*((*(_149235_f))))._field_Decl))._field_Result))._field_TypeSym))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149235_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a48ee9e2_buildFunc(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4665406_FnDecl> _151029_decl) {
	jule::Bool _15113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15113_cycleRisk;
	});;
	if (((*(_151029_decl))._field_Generics.len() > 0LL)) {
		_1a48e815b_pushErr(_self_, (*_151029_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a471dc62_Fn> _15207_f = _1a47ed836_buildFunc(_151029_decl);;
	jule::I32 _15223_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a4846e56_checkAnonFuncDecl((*(_self_))._field_s, &(_15207_f));
	if ((_15223_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a4721d20_FnIns> _15287_ins = _1a472026e_instanceForce(_15207_f);;
	(*(_15287_ins))._field_Anon=true;
	(*_15287_ins.alloc)._field_AsAnon=true;
	jule::Bool _15323_ok = _1a48ee6a1_checkFuncTypes(_self_, &(_15287_ins));;
	if ((!(_15323_ok))) {
		return nullptr;;
	};
	return _15287_ins;;
}



inline jule::Trait _1a48eed33_buildNamespace(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4654417_NamespaceTypeDecl> _154034_ns) {
	jule::Ptr<_1a480c3d3_ImportInfo> _15417_imp = _1a48d2e04_findNamespace((*(_self_))._field_lookup, (*((*(_154034_ns))._field_Namespace))._field_Kind);;
	if (((_15417_imp == nullptr) || (!(_1a480e87a_isLookupable(_15417_imp.ptr()))))) {
		_1a48e815b_pushErr(_self_, (*_154034_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_154034_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a48e8557_disallowBuiltin(_self_);
	jule::Trait _15487_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15417_imp, (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data2);
	jule::Ptr<_1a48d54cd_Type> _15507_kind = _1a49004b5_checkDecl(_self_, &((*_154034_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15487_lookup;
	_1a48e8359_allowBuiltin(_self_);
	return jule::Trait(_15507_kind, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data21);;
}



inline jule::Ptr<_1a48d54cd_Type> _1a4900174_build(_1a48e78ca_typeChecker* _self_, jule::Any* _155626_declKind) {
	jule::Trait _155711_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155626_declKind)) };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a907e139:;
			{
				jule::Trait _15608_t = _1a48ec3e6_buildIdent(_self_, (*(_155626_declKind)).cast_ptr<_1a4653c74_IdentTypeDecl>(&__jule_any_type77));;
				if ((_15608_t != nullptr)) {
					_155711_kind=_15608_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a907d59a:;
			{
				jule::Trait _15658_t = _1a48ec737_buildSubIdent(_self_, (*(_155626_declKind)).cast_ptr<_1a465403d_SubIdentTypeDecl>(&__jule_any_type89));;
				if ((_15658_t != nullptr)) {
					_155711_kind=_15658_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a907d611:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a48e2122_Sptr> _15718_t = _1a48ecdb9_buildSptr(_self_, (*(_155626_declKind)).cast_ptr<_1a4654714_SptrTypeDecl>(&__jule_any_type74));;
				if ((_15718_t != nullptr)) {
					_155711_kind=jule::Trait(_15718_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a907d677:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a48e58d9_Ptr> _15778_t = _1a48ed54b_buildPtr(_self_, (*(_155626_declKind)).cast_ptr<_1a4655193_PtrTypeDecl>(&__jule_any_type73));;
				if ((_15778_t != nullptr)) {
					_155711_kind=jule::Trait(_15778_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a907d6dd:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a48e2ae5_Slc> _15838_t = _1a48ed88c_buildSlc(_self_, (*(_155626_declKind)).cast_ptr<_1a4654a99_SlcTypeDecl>(&__jule_any_type72));;
				if ((_15838_t != nullptr)) {
					_155711_kind=jule::Trait(_15838_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a907d754:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a48e4e16_Arr> _15898_t = _1a48edbcd_buildArr(_self_, (*(_155626_declKind)).cast_ptr<_1a4655935_ArrTypeDecl>(&__jule_any_type71));;
				if ((_15898_t != nullptr)) {
					_155711_kind=jule::Trait(_15898_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a907d7ba:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a48e4289_Map> _15958_t = _1a48ee01e_buildMap(_self_, (*(_155626_declKind)).cast_ptr<_1a4656183_MapTypeDecl>(&__jule_any_type75));;
				if ((_15958_t != nullptr)) {
					_155711_kind=jule::Trait(_15958_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a907e249:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a48e36d9_Tuple> _16018_t = _1a48ee360_buildTuple(_self_, (*(_155626_declKind)).cast_ptr<_1a4654d96_TupleTypeDecl>(&__jule_any_type76));;
				if ((_16018_t != nullptr)) {
					_155711_kind=jule::Trait(_16018_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a907e2b0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a4721d20_FnIns> _16078_t = _1a48ee9e2_buildFunc(_self_, (*(_155626_declKind)).cast_ptr<_1a4665406_FnDecl>(&__jule_any_type67));;
				if ((_16078_t != nullptr)) {
					_155711_kind=jule::Trait(_16078_t, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a907e326:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16138_t = _1a48eed33_buildNamespace(_self_, (*(_155626_declKind)).cast_ptr<_1a4654417_NamespaceTypeDecl>(&__jule_any_type93));;
				if ((_16138_t != nullptr)) {
					_155711_kind=_16138_t;
				};
			}
		}
		else {
			_case_begin_1a907d534:;
			{
				_1a48e815b_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a907d4bd:;
	};
	if ((_155711_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155711_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data21)) {
			_case_begin_1a908c851:;
			{
				return _155711_kind.cast_ptr<_1a48d54cd_Type>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1a9089cb0:;
			{
				jule::Ptr<_1a48d54cd_Type> _16288_tk = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_155711_kind});;
				{
					auto &_match_expr{ _155711_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)) {
						_case_begin_1a908abd4:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a48d54cd_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16288_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)) {
						_case_begin_1a908aa5d:;
						{
							jule::Ptr<_1a4676d30_StructIns> _16355_s = _155711_kind.cast_ptr<_1a4676d30_StructIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0);;
							if ((((*(_16355_s))._field_Decl != nullptr) && (*(*(_16355_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16288_tk))._field_BindIdent=(*(*(_16355_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1a908ab6d:;
				};
				return _16288_tk;;
			}
		}
		_match_end_1a9089265:;
	};
}



inline jule::Ptr<_1a48d54cd_Type> _1a49004b5_checkDecl(_1a48e78ca_typeChecker* _self_, jule::Ptr<_1a4653669_TypeDecl>* _164430_decl) {
	jule::Ptr<_1a463d137_Token> _16467_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_164430_decl))))._field_Token;
	jule::Ptr<_1a48d54cd_Type> _16497_kind = _1a4900174_build(_self_, &((*((*(_164430_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16467_errorToken;
	return _16497_kind;;
}








inline jule::Bool _1a490098d_identTypeLookup_eq(_1a490098d_identTypeLookup *_self_, _1a490098d_identTypeLookup _other_) { return true; }

inline jule::Bool static__1a4900e11_prim(jule::Str* _167118_ident, jule::Ptr<_1a48dd5e6_Prim> _167130_t) {
	return ((*(_167130_t))._field_Kind == (*(_167118_ident)));;
}



inline jule::Bool static__1a4901285_exist(jule::Str* _167519_ident, jule::Ptr<_1a48d54cd_Type>* _167536_k) {
	{
		
		if ((_1a48d7b84_Prim((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a909269c:;
			{
				return static__1a4900e11_prim(_167519_ident, _1a48d7b84_Prim((*(_167536_k)).ptr()));;
			}
		}
		else if ((_1a48d7e1a_Sptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9092724:;
			{
				jule::Ptr<_1a48e2122_Sptr> _16808_sptr = _1a48d7e1a_Sptr((*(_167536_k)).ptr());;
				return static__1a4901285_exist(_167519_ident, &((*(_16808_sptr))._field_Elem));;
			}
		}
		else if ((_1a48d81a1_Ptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a909279b:;
			{
				jule::Ptr<_1a48e58d9_Ptr> _16838_ptr = _1a48d81a1_Ptr((*(_167536_k)).ptr());;
				return static__1a4901285_exist(_167519_ident, &((*(_16838_ptr))._field_Elem));;
			}
		}
		else if ((_1a48d8bda_Slc((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9092823:;
			{
				jule::Ptr<_1a48e2ae5_Slc> _16868_slc = _1a48d8bda_Slc((*(_167536_k)).ptr());;
				return static__1a4901285_exist(_167519_ident, &((*(_16868_slc))._field_Elem));;
			}
		}
		else if ((_1a48d8954_Arr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a90929ee:;
			{
				jule::Ptr<_1a48e4e16_Arr> _16898_arr = _1a48d8954_Arr((*(_167536_k)).ptr());;
				return static__1a4901285_exist(_167519_ident, &((*(_16898_arr))._field_Elem));;
			}
		}
		else if ((_1a48d9724_Map((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9092a65:;
			{
				jule::Ptr<_1a48e4289_Map> _16928_m = _1a48d9724_Map((*(_167536_k)).ptr());;
				return (static__1a4901285_exist(_167519_ident, &((*(_16928_m))._field_Key)) || static__1a4901285_exist(_167519_ident, &((*_16928_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a48d9207_Struct((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9092acb:;
			{
				jule::Ptr<_1a4676d30_StructIns> _16968_s = _1a48d9207_Struct((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_16968_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9099c26:;
					if (it != expr_end) {
						jule::Ptr<_1a48d3ae7_InsGeneric> _169716_g = *it;
						{
							if (static__1a4901285_exist(_167519_ident, &((*(_169716_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1a9099c26:;
						++it;
						goto _iter_begin_1a9099c26;
					}
					_iter_end_1a9099c26:;
				};
				return false;;
			}
		}
		else if ((_1a48d8e71_Fn((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9092b42:;
			{
				jule::Ptr<_1a4721d20_FnIns> _17048_f = _1a48d8e71_Fn((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17048_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a909b882:;
					if (it != expr_end) {
						jule::Ptr<_1a4720bba_ParamIns> _170516_p = *it;
						{
							if (_1a471c8dc_IsSelf((*(_170516_p))._field_Decl.ptr())) {
								goto _iter_next_1a909b882;
							};
							if (static__1a4901285_exist(_167519_ident, &((*_170516_p.alloc)._field_Type))) {
								return true;;
							};
						}
						_iter_next_1a909b882:;
						++it;
						goto _iter_begin_1a909b882;
					}
					_iter_end_1a909b882:;
				};
				if (((*_17048_f.alloc)._field_Result != nullptr)) {
					return static__1a4901285_exist(_167519_ident, &((*_17048_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a48d99aa_Tup((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9092bb9:;
			{
				jule::Ptr<_1a48e36d9_Tuple> _17188_tup = _1a48d99aa_Tup((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17188_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a909e203:;
					if (it != expr_end) {
						jule::Ptr<_1a48d54cd_Type> _171916_t = *it;
						{
							if (static__1a4901285_exist(_167519_ident, &(_171916_t))) {
								return true;;
							};
						}
						_iter_next_1a909e203:;
						++it;
						goto _iter_begin_1a909e203;
					}
					_iter_end_1a909e203:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a909257b:;
			{
				return false;;
			}
		}
		_match_end_1a909246b:;
	};
}















inline void _1a534ecc1_stop(_1a534e61c_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a5350057_stopped(_1a534e61c_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a53502dd_finished(_1a534e61c_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a5350574_isLastSt(_1a534e61c_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a53508d7_pushErr(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a463d137_Token> _15423_token, jule::Str _15445_fmt) {
	_1a536d30b_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1a5350c4a_pushSuggestion(_1a534e61c_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1a536d66e_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1a5351003_insertAsNext(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a534dc7b_stmt>(_1a534dc7b_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1a534dc7b_stmt> _1a5351289_next(_1a534e61c_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a4663767_ScopeTree> _1a5351685_buildScope(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _17331_tokens, jule::Ptr<_1a463d137_Token> _17360_end) {
	jule::Ptr<_1a4663767_ScopeTree> _1747_s = _1a534ca05_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1a534e61c_scopeParser _1777_ssp = _1a534e61c_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a534dc7b_stmt>>(nullptr), ._field_pos=0};;
	_1a535b508_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1a46665b1_VarDecl> _1a53519c6_buildVarSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _18431_tokens) {
	jule::Ptr<_1a46665b1_VarDecl> _1857_v = _1a53710cd_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1a466698a_RetSt> _1a5351d17_buildRetSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _19230_tokens) {
	jule::Ptr<_1a466698a_RetSt> _1937_st = jule::new_ptr<_1a466698a_RetSt>(_1a466698a_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1a466720a_Iter> _1a5352158_buildWhileNextIter(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _20339_s) {
	jule::Ptr<_1a466720a_Iter> _2047_it = jule::new_ptr<_1a466720a_Iter>(_1a466720a_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a4667a35_WhileKind> _2087_kind = jule::new_ptr<_1a4667a35_WhileKind>(_1a4667a35_WhileKind{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1a5350574_isLastSt(_self_)) {
		_1a53508d7_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1a5351289_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _2207_stTokens = _1a5367c51_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1a534dc7b_stmt> _2228_stmt = jule::new_ptr<_1a534dc7b_stmt>(_1a534dc7b_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1a535b195_buildSt(_self_, &(_2228_stmt));
	};
	jule::I32 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _2317_blockTokens = _1a536aec9_range(&(_2307_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1a534ecc1_stop(_self_);
		_1a53508d7_pushErr(_self_, (*_2047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1a53508d7_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2047_it.alloc)._field_Scope=_1a5351685_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type33);
	return _2047_it;;
}



inline jule::Ptr<_1a4667a35_WhileKind> _1a5352499_buildWhileIterKind(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _24839_tokens) {
	return jule::new_ptr<_1a4667a35_WhileKind>(_1a4667a35_WhileKind{._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a463d137_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a53527da_getRangeKindKeysTokens(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _2557_vars;
	jule::Slice<_1e71b7487_Log> _25513_errs;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(_25443_toks, static_cast<jule::U32>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1a46665b1_VarDecl> _1a5352b2b_buildRangeKindKey(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a46665b1_VarDecl> _2647_key = jule::new_ptr<_1a46665b1_VarDecl>(_1a46665b1_VarDecl{._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1a53508d7_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1a53508d7_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a53508d7_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2647_key.alloc)._field_Ident=(*(*(_2647_key))._field_Token.alloc)._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _1a5352e6c_buildRangeKindKeys(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93de323:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1a5352b2b_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1a93de323:;
			++it;
			goto _iter_begin_1a93de323;
		}
		_iter_end_1a93de323:;
	};
	return _28711_keys;;
}



inline void _1a53532d0_setupRangeKindKeysPlain(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a466843c_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1a463d137_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _2957_keyTokens = _1a53527da_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1a53508d7_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _3027_keys = _1a5352e6c_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1a5353643_setupRangeKindKeysExplicit(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a466843c_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1a463d137_Token>>* _30974_tokens) {
	jule::I32 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3117_rang = _1a536aec9_range(&(_3107_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1a53508d7_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1a53532d0_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1a53539a6_setupRangeKindKeys(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a466843c_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1a463d137_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1a5353643_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1a53532d0_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1a466843c_RangeKind> _1a5353e5c_buildRangeIterKind(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1a463d137_Token>>* _3278_exprTokens, jule::Ptr<_1a463d137_Token>* _32742_inToken) {
	jule::Ptr<_1a466843c_RangeKind> _3287_rng = jule::new_ptr<_1a466843c_RangeKind>(_1a466843c_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1a46665b1_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1a46665b1_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1a53508d7_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*_3287_rng.alloc)._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1a53539a6_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1a5354358_buildCommonIterKind(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _34240_tokens, jule::Ptr<_1a463d137_Token>* _34266_errTok) {
	jule::I32 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93ea0ba:;
		if (it != expr_end) {
			jule::I32 _3448_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a93ea98e:;
						{
							(_3437_braceN)++;
							goto _iter_next_1a93ea0ba;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a93ead79:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1a93eac7a:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1a93ea0ba;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1a93ebe46:;
						{
							jule::Slice<jule::Ptr<_1a463d137_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1a463d137_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1a5353e5c_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type35);;
						}
					}
					_match_end_1a93ec5a6:;
				};
			}
			_iter_next_1a93ea0ba:;
			++it;
			_3448_i++;
			goto _iter_begin_1a93ea0ba;
		}
		_iter_end_1a93ea0ba:;
	};
	return jule::Any(_1a5352499_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_1a466720a_Iter> _1a5354699_buildCommonIter(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _36935_tokens) {
	jule::Ptr<_1a466720a_Iter> _3707_it = jule::new_ptr<_1a466720a_Iter>(_1a466720a_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1a534ecc1_stop(_self_);
		_1a53508d7_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3807_exprTokens = _1a5367c51_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*_3707_it.alloc)._field_Kind=_1a5354358_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I32 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3857_scopeTokens = _1a536aec9_range(&(_3847_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1a534ecc1_stop(_self_);
		_1a53508d7_pushErr(_self_, (*_3707_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1a53508d7_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3707_it.alloc)._field_Scope=_1a5351685_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1a466720a_Iter> _1a53549da_buildIterSt(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1a5352158_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1a5354699_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1a4668816_BreakSt> _1a5354d2b_buildBreakSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _40633_tokens) {
	jule::Ptr<_1a4668816_BreakSt> _4077_brk = jule::new_ptr<_1a4668816_BreakSt>(_1a4668816_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1a53508d7_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1a53508d7_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1a4668be0_ContSt> _1a535516c_buildContSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _42432_tokens) {
	jule::Ptr<_1a4668be0_ContSt> _4257_cont = jule::new_ptr<_1a4668be0_ContSt>(_1a4668be0_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1a53508d7_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1a53508d7_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1a4669196_If> _1a53554ad_buildIf(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _44228_tokens) {
	jule::Ptr<_1a4669196_If> _4437_model = jule::new_ptr<_1a4669196_If>(_1a4669196_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _4477_exprTokens = _1a5367c51_getBlockExpr(_44228_tokens);;
	jule::I32 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1a53508d7_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _4547_scopeTokens = _1a536aec9_range(&(_4487_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1a534ecc1_stop(_self_);
		_1a53508d7_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a463d137_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1a53508d7_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*_4437_model.alloc)._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1a5351685_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1a4669570_Else> _1a53557ee_buildElse(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _47530_tokens) {
	jule::Ptr<_1a4669570_Else> _4767_els = jule::new_ptr<_1a4669570_Else>(_1a4669570_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I32 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _4817_scopeTokens = _1a536aec9_range(&(_4807_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1a53508d7_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1a534ecc1_stop(_self_);
			_1a53508d7_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1a53508d7_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1a5351685_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1a4669a26_Conditional> _1a5355b40_buildIfElseChain(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _49936_tokens) {
	jule::Ptr<_1a4669a26_Conditional> _5007_chain = jule::new_ptr<_1a4669a26_Conditional>(_1a4669a26_Conditional{._field_Head=_1a53554ad_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1a4669196_If>>(nullptr), ._field_Default=jule::Ptr<_1a4669570_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1a9418cdc;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1a4669196_If> _5129_elif = _1a53554ad_buildIf(_self_, &(_49936_tokens));;
				(*_5007_chain.alloc)._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4669196_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1a9418cdc;
			};
			(*_5007_chain.alloc)._field_Default=_1a53557ee_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1a9418cdc;
		}
	_iter_next_1a9418cdc:;
	}
	_iter_end_1a9418cdc:;;
	return _5007_chain;;
}



inline jule::Ptr<_1a465799d_Expr> _1a5355e81_buildCoCallSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _52233_tokens) {
	jule::Ptr<_1a463d137_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1a465799d_Expr> _5257_e = _1a536d9b0_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a941cdce:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1a465b6c7_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a941d4a6:;
			{
				_1a53508d7_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1a941d440:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1a4661127_GotoSt> _1a53562c2_buildGotoSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _53832_tokens) {
	jule::Ptr<_1a4661127_GotoSt> _5397_gt = jule::new_ptr<_1a4661127_GotoSt>(_1a4661127_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1a53508d7_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1a53508d7_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a463d137_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a53508d7_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1a4661424_FallSt> _1a5356613_buildFallSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _55832_tokens) {
	jule::Ptr<_1a4661424_FallSt> _5597_fll = jule::new_ptr<_1a4661424_FallSt>(_1a4661424_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1a53508d7_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1a466a263_TypeAliasDecl> _1a5356954_buildTypeAliasSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _56837_tokens) {
	jule::Ptr<_1a466a263_TypeAliasDecl> _5697_tad = _1a5370253_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1a5356e2c_pushCaseExpr(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _57432_tokens, jule::Ptr<_1a463d137_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I32 _5808_i = 0LL;;
		jule::Ptr<_1a4653669_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1a465799d_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1a465799d_Expr>(_1a465799d_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type91)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1a53508d7_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a465799d_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1a536d9b0_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1a465799d_Expr__jule_tuple_bool _1a53573d3_buildCaseExprs(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _59735_tokens, jule::Ptr<_1a463d137_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1a465799d_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a465799d_Expr>(nullptr); __jule_collection; });;
	jule::I32 _5997_braceN = 0LL;;
	jule::I32 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9429d64:;
		if (it != expr_end) {
			jule::I32 _6018_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a942b5c4:;
						{
							(_5997_braceN)++;
							goto _iter_next_1a9429d64;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1a942b9ae:;
						{
							(_5997_braceN)--;
							goto _iter_next_1a9429d64;
						}
					}
					_match_end_1a942b8b0:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1a9429d64;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1a942d175:;
						{
							jule::Slice<jule::Ptr<_1a463d137_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1a53508d7_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1a5356e2c_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1a942d1db:;
						{
							(*(_59765_colon))=_60115_tok;
							_1a5356e2c_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1a942cb7a:;
				};
			}
			_iter_next_1a9429d64:;
			++it;
			_6018_i++;
			goto _iter_begin_1a9429d64;
		}
		_iter_end_1a9429d64:;
	};
	_1a53508d7_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a4663767_ScopeTree> _1a5357724_buildCaseScope(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _63935_tokens) {
	jule::I32 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1a463d137_Token>> _6438_next;
			({
				__jule_tuple_sx_1a463d137_Token__jule_tuple_bool __jule_assign_result = _1a534d94b_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1a9431e6a;
			};
			jule::Ptr<_1a463d137_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1a9431e6a;
			};
			jule::Slice<jule::Ptr<_1a463d137_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1a4663767_ScopeTree> _6538_scope = _1a5351685_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1a9431e6a:;
	}
	_iter_end_1a9431e6a:;;
	jule::Ptr<_1a463d137_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a4663767_ScopeTree> _6617_scope = _1a5351685_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1a466a719_Case__jule_tuple_bool _1a5357b20_buildCase(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1a466a719_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a466a719_Case> _6677_c = jule::new_ptr<_1a466a719_Case>(_1a466a719_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a465799d_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a463d137_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1a53508d7_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1a465799d_Expr__jule_tuple_bool __jule_assign_result = _1a53573d3_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*_6677_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6677_c.alloc)._field_Scope=_1a5357724_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a466a719_Case__jule_tuple_x_1a4669570_Else _1a535801b_buildCases(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1a466a719_Case__jule_tuple_x_1a4669570_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a466a719_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1a4669570_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a463d137_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1a53508d7_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1a943b3a3;
			};
			jule::Ptr<_1a466a719_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1a466a719_Case__jule_tuple_bool __jule_assign_result = _1a5357b20_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1a4669570_Else>(_1a4669570_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1a53508d7_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a466a719_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1a943b3a3:;
	}
	_iter_end_1a943b3a3:;;
	if (_6887_defNotLast) {
		_1a53508d7_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a466b033_MatchCase> _1a535835c_buildMatchCase(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _71934_tokens) {
	jule::Ptr<_1a466b033_MatchCase> _7207_m = jule::new_ptr<_1a466b033_MatchCase>(_1a466b033_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1a463d137_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1a466a719_Case>>(nullptr), ._field_Default=jule::Ptr<_1a4669570_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7307_exprTokens = _1a5367c51_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*_7207_m.alloc)._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*_7207_m.alloc)._field_TypeMatch) {
		_1a53508d7_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I32 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7387_blockToks = _1a536aec9_range(&(_7377_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1a534ecc1_stop(_self_);
		_1a53508d7_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a5350c4a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1a53508d7_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7207_m.alloc)._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1a466a719_Case__jule_tuple_x_1a4669570_Else __jule_assign_result = _1a535801b_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1a4663767_ScopeTree> _1a535869d_buildScopeSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1a463d137_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1a53508d7_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*_7557_token.alloc)._field_Id == static_cast<jule::U32>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1a53508d7_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1a53508d7_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I32 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7827_scopeTokens = _1a536aec9_range(&(_7817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1a53508d7_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1a53508d7_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a4663767_ScopeTree> _7897_scope = _1a5351685_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1a4660c4d_LabelSt> _1a53589de_buildLabelSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _79533_tokens) {
	jule::Ptr<_1a4660c4d_LabelSt> _7967_lbl = jule::new_ptr<_1a4660c4d_LabelSt>(_1a4660c4d_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1a5351003_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool _1a5358d30_buildIdSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _81030_tokens) {
	__jule_tuple__1a4662cc7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a463d137_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1a9452e47:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a53589de_buildLabelSt(_self_, _81030_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a94536a6:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a5369637_assignInfo> _1a5359171_buildAssignInfo(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _82436_tokens) {
	jule::Ptr<_1a5369637_assignInfo> _8257_info = jule::new_ptr<_1a5369637_assignInfo>(_1a5369637_assignInfo{._field_l=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr), ._field_setter=jule::Ptr<_1a463d137_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9454e7c:;
		if (it != expr_end) {
			jule::I32 _8298_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a94558b7:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a9455c4c:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1a9455b4d:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1a9456da2:;
						{
							goto _iter_next_1a9454e7c;
						}
					}
					else if (((!(_1a464324c_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1a9456e18:;
						{
							goto _iter_next_1a9454e7c;
						}
					}
					_match_end_1a9456d08:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1a4642e83_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1a9454e7c;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1a4642e83_IsPostfixOp((*(*(_8257_info))._field_setter.alloc)._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1a53508d7_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1a9454e7c;
			}
			_iter_next_1a9454e7c:;
			++it;
			_8298_i++;
			goto _iter_begin_1a9454e7c;
		}
		_iter_end_1a9454e7c:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1a4661a84_AssignLeft> _1a53594b2_buildAssignL(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _86933_tokens) {
	jule::Ptr<_1a4661a84_AssignLeft> _8707_l = jule::new_ptr<_1a4661a84_AssignLeft>(_1a4661a84_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*_8707_l.alloc)._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>> _1a5359803_buildAssignLs(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a945e2b6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _88215_part = *it;
			{
				jule::Ptr<_1a4661a84_AssignLeft> _8838_l = _1a53594b2_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1a945e2b6:;
			++it;
			goto _iter_begin_1a945e2b6;
		}
		_iter_end_1a945e2b6:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool _1a5359b44_buildPlainAssign(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _88937_tokens) {
	__jule_tuple__1a4662cc7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a5369637_assignInfo> _8907_info = _1a5359171_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4662117_AssignSt> _8957_assign = jule::new_ptr<_1a4662117_AssignSt>(_1a4662117_AssignSt{._field_Declarative=false, ._field_Setter=(*_8907_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1a536d9b0_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1a535a040_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_8957_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a4661a84_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1a9465586:;
				{
					jule::Ptr<_1a46665b1_VarDecl> _9159_decl = jule::new_ptr<_1a46665b1_VarDecl>(_1a46665b1_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type49);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1a9465520:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type57);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _9297_parts;
	jule::Slice<_1e71b7487_Log> _92914_errs;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_8957_assign.alloc)._field_Left=_1a5359803_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1a536d9b0_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a535a040_buildDeclAssign1(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _94337_lefts, jule::Ptr<_1a4662117_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _9457_parts;
	jule::Slice<_1e71b7487_Log> _94514_errs;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(_94337_lefts, static_cast<jule::U32>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a946b559:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1a463d137_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1a53508d7_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1a53508d7_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1a53508d7_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1a4661a84_AssignLeft> _9798_l = _1a53594b2_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_9798_l.alloc)._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1a946b559:;
			++it;
			goto _iter_begin_1a946b559;
		}
		_iter_end_1a946b559:;
	};
	return true;;
}



inline __jule_tuple_x_1a4662117_AssignSt__jule_tuple_bool _1a535a381_buildDeclAssign(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _99135_tokens) {
	__jule_tuple_x_1a4662117_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1a463d137_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4662117_AssignSt> _10027_assign = jule::new_ptr<_1a4662117_AssignSt>(_1a4662117_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a4661a84_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	jule::I32 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _10077_rang = _1a536aec9_range(&(_10067_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1a53508d7_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a53508d7_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1a463d137_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1a536d9b0_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1a535a040_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a4662cc7_StmtData__jule_tuple_bool _1a535a6c2_buildAssignSt(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _102534_tokens) {
	__jule_tuple__1a4662cc7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a53699de_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1a947c306:;
			{
				({
					__jule_tuple_x_1a4662117_AssignSt__jule_tuple_bool __jule_assign_result = _1a535a381_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a947b47b:;
			{
				({
					__jule_tuple__1a4662cc7_StmtData__jule_tuple_bool __jule_assign_result = _1a5359b44_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a947b8dd:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a4658372_UseExpr> _1a535aa13_buildUseExpr(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1a53508d7_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1a4658372_UseExpr> _10437_ue = jule::new_ptr<_1a4658372_UseExpr>(_1a4658372_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1a536d9b0_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1a535ad54_buildConstSt(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1a53508d7_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1a9481926:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a466720a_Iter> _10598_iter = _1a53549da_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1a9481717:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a466b033_MatchCase> _10668_mt = _1a535835c_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1a9480a46:;
			{
				return jule::Any(_1a53519c6_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		_match_end_1a9481261:;
	};
}



inline jule::Any _1a535b195_buildSt(_1a534e61c_scopeParser* _self_, jule::Ptr<_1a534dc7b_stmt>* _107628_st) {
	jule::Ptr<_1a463d137_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1a4662cc7_StmtData__jule_tuple_bool __jule_assign_result = _1a5358d30_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1a4662cc7_StmtData__jule_tuple_bool __jule_assign_result = _1a535a6c2_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1a9487850:;
			{
				return jule::Any(_1a535aa13_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1a94876c9:;
			{
				return _1a535ad54_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1a9487ab4:;
			{
				return jule::Any(_1a53519c6_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1a9487b2a:;
			{
				return jule::Any(_1a5351d17_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1a9487b91:;
			{
				return jule::Any(_1a53549da_buildIterSt(_self_, _107628_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1a9487c07:;
			{
				return jule::Any(_1a5354d2b_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1a9487c6d:;
			{
				return jule::Any(_1a535516c_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1a9487ce5:;
			{
				return jule::Any(_1a5355b40_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1a9487d6c:;
			{
				return jule::Any(_1a5355e81_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1a9487de4:;
			{
				return jule::Any(_1a53562c2_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1a9487e6b:;
			{
				return jule::Any(_1a5356613_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1a9487ee3:;
			{
				return jule::Any(_1a5356954_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1a948806a:;
			{
				return jule::Any(_1a535835c_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a94880e2:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1a948750e;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1a535869d_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type48);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1a9488169:;
			{
				return jule::Any(_1a535869d_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1a94881e1:;
			{
				return jule::Any(_1a535869d_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		_match_end_1a948750e:;
	};
	jule::Ptr<_1a465799d_Expr> _11327_expr = _1a536d9b0_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type51);;
	};
	_1a53508d7_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1a535b508_build(_1a534e61c_scopeParser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _114026_tokens, jule::Ptr<_1a4663767_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a534e133_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1a5350574_isLastSt(_self_))) && (!(_1a53502dd_finished(_self_))))) {
		{
			jule::Ptr<_1a534dc7b_stmt> _11488_st = _1a5351289_next(_self_);;
			jule::Any _11498_data = _1a535b195_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1a4663107_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a4663107_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1a5350057_stopped(_self_)) {
				goto _iter_end_1a9495440;
			};
		}
	_iter_next_1a9495440:;
	}
	_iter_end_1a9495440:;;
}








inline jule::Bool _1a535c042_exprBuilder_eq(_1a535c042_exprBuilder *_self_, _1a535c042_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1a535c74b_pushErr(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1a536d30b_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1a535caae_pushSuggestion(_1a535c042_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1a536d66e_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1a4658592_TupleExpr> _1a535ce00_buildTuple(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _2331_parts) {
	jule::Ptr<_1a4658592_TupleExpr> _247_tuple = jule::new_ptr<_1a4658592_TupleExpr>(_1a4658592_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a465799d_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94b9d49:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a53672e4_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1a94b9d49:;
			++it;
			goto _iter_begin_1a94b9d49;
		}
		_iter_end_1a94b9d49:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1a4658938_LitExpr> _1a535d241_buildLit(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token> _3324_token) {
	return jule::new_ptr<_1a4658938_LitExpr>(_1a4658938_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1a535d8c3_buildSingle(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1a94bca3e:;
			{
				return jule::Any(_1a535d241_buildLit(_self_, _4431_token), &__jule_any_type104);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1a94bcab6:;
			{
				return jule::Any(jule::new_ptr<_1a4659e34_VariadicExpr>(_1a4659e34_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)}), &__jule_any_type78);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1a94bcb2c:;
			{
				return jule::Any(_1a536869c_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_1a94bc973:;
	};
	_1a535c74b_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a46592b8_IdentExpr> _1a535dc14_buildBindIdent(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1a535c74b_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a463d137_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a535c74b_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a46592b8_IdentExpr> _757_expr = _1a536869c_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1a4659a5a_UnaryExpr> _1a535e055_buildUnary(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _8030_tokens) {
	jule::Ptr<_1a463d137_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1a535c74b_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a463d874_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1a535c74b_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a4659a5a_UnaryExpr>(_1a4659a5a_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1a53672e4_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1a465aab1_SubIdentExpr> _1a535e396_buildObjSubIdent(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _10136_tokens) {
	jule::I32 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1a463d137_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a465aab1_SubIdentExpr>(_1a465aab1_SubIdentExpr{._field_Expr=_1a53672e4_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1a465a6d7_NamespaceExpr> _1a535e6d7_buildNamespace(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _11635_tokens) {
	jule::Ptr<_1a465a6d7_NamespaceExpr> _1177_ns = jule::new_ptr<_1a465a6d7_NamespaceExpr>(_1a465a6d7_NamespaceExpr{._field_Namespace=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1a535c74b_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1a535c74b_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1a535c74b_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1a535c74b_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1a535c74b_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a535c74b_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a535ea28_buildType(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _15030_tokens) {
	jule::I32 _1517_i = 0LL;;
	jule::Ptr<_1a4653669_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1a535c74b_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1a535c74b_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1a535ed69_buildSubIdent(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _16434_tokens) {
	jule::I32 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1a463d137_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1a94d51a5:;
			{
				return jule::Any(_1a535e396_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1a94d57d2:;
			{
				return jule::Any(_1a535e6d7_buildNamespace(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1a94d5848:;
			{
				return jule::Any(_1a535ea28_buildType(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		_match_end_1a94d56b1:;
	};
	if (_1a5368d40_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1a535ea28_buildType(_self_, _16434_tokens), &__jule_any_type91);;
	};
	_1a535c74b_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a4659e34_VariadicExpr> _1a53601aa_buildVariadic(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _18633_tokens) {
	jule::Ptr<_1a463d137_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1a4659e34_VariadicExpr>(_1a4659e34_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1a53672e4_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1a4657c67_RangeExpr> _1a53604eb_buildBetweenParentheses(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1a535c74b_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1a4657c67_RangeExpr>(_1a4657c67_RangeExpr{._field_Expr=_1a53672e4_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1a465a30d_CastExpr> _1a536083c_tryBuildCast(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _20733_tokens) {
	jule::I32 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a7369a:;
		if (it != expr_end) {
			jule::I32 _2097_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8a7403b:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1a8a7369a;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8a74426:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1a8a74327:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1a8a7369a;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a463d137_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1a463d137_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a463d137_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a465a30d_CastExpr> _2418_cast = jule::new_ptr<_1a465a30d_CastExpr>(_1a465a30d_CastExpr{._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1a535c74b_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1a535c74b_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I32 _2559_typeIndex = 0LL;;
					jule::Ptr<_1a4653669_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1a535c74b_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I32 _26610_j = 0LL;;
						_1a536aec9_range(&(_26610_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1a53672e4_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1a8a7369a:;
			++it;
			_2097_i++;
			goto _iter_begin_1a8a7369a;
		}
		_iter_end_1a8a7369a:;
	};
	return nullptr;;
}



inline void _1a5360c5a_pushArg(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a465799d_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1a463d137_Token>> _28152_tokens, jule::Ptr<_1a463d137_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a465799d_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1a53672e4_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a465799d_Expr>> _1a536109b_buildArgs(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _29611_args = nullptr;;
	jule::I32 _2977_last = 0LL;;
	jule::I32 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a82104:;
		if (it != expr_end) {
			jule::I32 _3007_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8a82cd6:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8a831c1:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1a8a830c2:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1a8a82104;
				};
				_1a5360c5a_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1a8a82104:;
			++it;
			_3007_i++;
			goto _iter_begin_1a8a82104;
		}
		_iter_end_1a8a82104:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1a5360c5a_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1a5360c5a_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1a465b6c7_FnCallExpr> _1a5361893_buildFnCall(_1a535c042_exprBuilder* _self_, jule::Ptr<_1a463d137_Token>* _35632_token, jule::Slice<jule::Ptr<_1a463d137_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1a463d137_Token>>* _35687_args) {
	return jule::new_ptr<_1a465b6c7_FnCallExpr>(_1a465b6c7_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1a53672e4_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1a536109b_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1a5361bd4_buildParenthesesRange(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _36442_tokens) {
	jule::Ptr<_1a463d137_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1a465a30d_CastExpr> _3678_expr = _1a536083c_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type108);;
		};
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token __jule_assign_result = _1a536b293_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1a53604eb_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type103);;
	};
	if (_1a5368d40_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1a535ea28_buildType(_self_, _36442_tokens), &__jule_any_type91);;
	};
	return jule::Any(_1a5361893_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type84);;
}



inline jule::Ptr<_1a4658d12_UnsafeExpr> _1a5362025_buildUnsafeExpr(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _38635_tokens) {
	jule::Ptr<_1a463d137_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I32 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3907_rangeTokens = _1a536aec9_range(&(_3897_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a4658d12_UnsafeExpr>(_1a4658d12_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1a53672e4_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1a4665406_FnDecl> _1a5362366_buildAnonFn(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _40132_tokens) {
	jule::Ptr<_1a4665406_FnDecl> _4027_f = _1a5374499_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1a466579c_IsAnon(_4027_f.ptr())))) {
		_1a535c74b_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1a53626a7_buildUnsafe(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a8a95db5:;
			{
				return jule::Any(_1a5362366_buildAnonFn(_self_, _41032_tokens), &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1a8a95249:;
			{
				return jule::Any(_1a5362025_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type105);;
			}
		}
		_match_end_1a8a9569a:;
	};
}



inline void _1a5362ac5_pushRangeLitPart(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _42036_part, jule::Ptr<_1a463d137_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a5362e16_getBraceRangeLitExprParts(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _43711_parts = nullptr;;
	jule::I32 _4397_last = 0LL;;
	jule::I32 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a9966b:;
		if (it != expr_end) {
			jule::I32 _4427_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8a9a34d:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8a9a738:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1a8a9a639:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1a8a9966b;
				};
				_1a5362ac5_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1a8a9966b:;
			++it;
			_4427_i++;
			goto _iter_begin_1a8a9966b;
		}
		_iter_end_1a8a9966b:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1a5362ac5_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1a5362ac5_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1a465c1bc_FieldExprPair> _1a5363257_buildFieldExprPair(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1a535c74b_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a465c1bc_FieldExprPair> _4787_pair = jule::new_ptr<_1a465c1bc_FieldExprPair>(_1a465c1bc_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1a53672e4_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1a465799d_Expr> _1a5363598_buildStructLitExpr(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _48639_tokens) {
	jule::Ptr<_1a463d137_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*_4877_token.alloc)._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1a465799d_Expr>(_1a465799d_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a5363257_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type80)});;
		};
	};
	return _1a53672e4_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a465799d_Expr>> _1a53638d9_buildStructLitExprs(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _5027_parts = _1a5362e16_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a465799d_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a465799d_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aa406b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a465799d_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1a5363598_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1a8aa406b:;
			++it;
			goto _iter_begin_1a8aa406b;
		}
		_iter_end_1a8aa406b:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1a465c9e7_StructLit> _1a5363c2a_buildTypedStructLiteral(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _51443_tokens) {
	jule::I32 _5157_i = 0LL;;
	jule::Ptr<_1a4653669_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1a535c74b_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1a463d137_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1a535c74b_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a465c9e7_StructLit>(_1a465c9e7_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1a53638d9_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1a465799d_Expr> _1a536406b_buildBraceLitPart(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1a463d137_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _53914_r;
	({
		__jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token __jule_assign_result = _1a5368119_splitDelim(_53838_tokens, static_cast<jule::U32>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1a465799d_Expr>(_1a465799d_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a465d7c8_KeyValPair>(_1a465d7c8_KeyValPair{._field_Key=_1a53672e4_buildFromTokens(_self_, _5397_l), ._field_Val=_1a53672e4_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type81)});;
	};
	return _1a53672e4_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1a465ce9d_BraceLit> _1a53643ac_buildBraceLit(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _55534_tokens) {
	jule::Ptr<_1a465ce9d_BraceLit> _5567_lit = jule::new_ptr<_1a465ce9d_BraceLit>(_1a465ce9d_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a465799d_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _5617_parts = _1a5362e16_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a465799d_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aadcce:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a536406b_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1a8aadcce:;
			++it;
			goto _iter_begin_1a8aadcce;
		}
		_iter_end_1a8aadcce:;
	};
	return _5567_lit;;
}



inline jule::Any _1a53646ed_buildBraceRange(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1a463d137_Token>> _5757_exprTokens;
	jule::I32 _57519_rangeN;
	({
		__jule_tuple_sx_1a463d137_Token__jule_tuple_int __jule_assign_result = _1a5368966_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1a8ab072b:;
			{
				return jule::Any(_1a53643ac_buildBraceLit(_self_, _57436_tokens), &__jule_any_type110);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1a8ab07b4:;
			{
				_1a535c74b_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8ab06b5:;
	};
	jule::Ptr<_1a463d137_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1a5366b62_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1a8ab4202:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I32 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1a463d137_Token>> _5979_rangeTokens = _1a536aec9_range(&(_5969_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57436_tokens);;
					jule::Ptr<_1a465b6c7_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1a465b6c7_FnCallExpr>();;
					if (_1a465bd15_Ignored(_5989_model.ptr())) {
						_1a535c74b_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_5989_model.alloc)._field_Exception=_1a536e4a5_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1a8ab3267:;
				{
					_1a535c74b_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1a8ab36a7:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a8ab8844:;
			{
				return _1a53626a7_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a8ab88aa:;
			{
				return jule::Any(_1a5362366_buildAnonFn(_self_, _57436_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a8ab8921:;
			{
				return jule::Any(_1a5363c2a_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type109);;
			}
		}
		else {
			_case_begin_1a8ab3861:;
			{
				_1a535c74b_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8ab7b84:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a5364a3e_getEnumerableParts(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _6287_parts;
	jule::Slice<_1e71b7487_Log> _62814_errors;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(&(_62638_tokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1a465e004_SliceExpr> _1a5364d80_buildSlice(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _63330_tokens) {
	jule::Ptr<_1a465e004_SliceExpr> _6347_slc = jule::new_ptr<_1a465e004_SliceExpr>(_1a465e004_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a465799d_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _6397_parts = _1a5364a3e_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a465799d_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8abd75b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1a8abd75b;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a465799d_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a53672e4_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1a8abd75b:;
			++it;
			goto _iter_begin_1a8abd75b;
		}
		_iter_end_1a8abd75b:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1a465e961_IndexingExpr> _1a5365336_buildIndexing(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1a463d137_Token>> _6567_tokens, jule::Ptr<_1a463d137_Token> _65636_errorToken) {
	jule::Ptr<_1a463d137_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a465799d_Expr> _6637_expr = _1a53672e4_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a465799d_Expr> _6677_index = _1a53672e4_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a465e961_IndexingExpr>(_1a465e961_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1a46600c1_SlicingExpr> _1a5365952_buildSlicing(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1a463d137_Token>>* _67967_start, jule::Slice<jule::Ptr<_1a463d137_Token>>* _6808_to, jule::Ptr<_1a463d137_Token>* _68034_errorToken, jule::Ptr<_1a463d137_Token> _68065_end) {
	jule::Ptr<_1a46600c1_SlicingExpr> _6817_slc = jule::new_ptr<_1a46600c1_SlicingExpr>(_1a46600c1_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1a53672e4_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_To=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1a53672e4_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*_6817_slc.alloc)._field_To=_1a53672e4_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1a5365c93_buildBracketRange(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _69537_tokens) {
	jule::Ptr<_1a463d137_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _6977_exprTokens;
	jule::I32 _69719_rangeN;
	({
		__jule_tuple_sx_1a463d137_Token__jule_tuple_int __jule_assign_result = _1a5368966_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1a5364d80_buildSlice(_self_, _69537_tokens), &__jule_any_type96);;
	} else if ((_69719_rangeN > 0LL)) {
		_1a535c74b_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _71318_to;
	({
		__jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token __jule_assign_result = _1a5368119_splitDelim(&(_7127_splitTokens), static_cast<jule::U32>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1a5365952_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type107);;
	};
	return jule::Any(_1a5365336_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type106);;
}



inline jule::Any _1a53660d4_buildExclRight(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _72035_tokens) {
	jule::Ptr<_1a463d137_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1a5366b62_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a8acb37e:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1a465b6c7_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a4663767_ScopeTree>(_1a4663767_ScopeTree{._field_Parent=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1a4663107_Stmt>(nullptr), ._field_End=jule::Ptr<_1a463d137_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1a8acb769:;
	};
	_1a535c74b_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a5366425_buildData(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a8accea7:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a8acd01d:;
			{
				return _1a535d8c3_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a8acd084:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1a535dc14_buildBindIdent(_self_, _73830_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_1a8accd75:;
	};
	jule::Ptr<_1a463d137_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1a53601aa_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type78);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1a463d874_IsUnaryOp((*_7507_token.alloc)._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*_7507_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1a535ea28_buildType(_self_, _73830_tokens), &__jule_any_type91);;
			};
		};
		return jule::Any(_1a535e055_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type90);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1a8ad2d25:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1a463d137_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1a8ad2c9d;
						};
					};
					jule::Ptr<_1a463d137_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1a8ad2c9d;
					};
					return jule::Any(_1a535ea28_buildType(_self_, _73830_tokens), &__jule_any_type91);;
				}
			}
			_match_end_1a8ad2c9d:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1a8ad5e5a:;
			{
				return _1a535ed69_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1a8ad5ec1:;
			{
				return _1a53660d4_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1a8ad6037:;
			{
				return _1a5361bd4_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1a8ad609d:;
			{
				return _1a53646ed_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1a8ad6114:;
			{
				return _1a5365c93_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1a8ad5de4:;
	};
	_1a535c74b_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a5366821_buildBinary(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _80732_tokens, jule::I32 _80757_i) {
	jule::Ptr<_1a463d137_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1a5367679_isTypeOp(&((*(_8087_op))._field_Id)) && _1a5367987_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1a535ea28_buildType(_self_, _80732_tokens), &__jule_any_type91);;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1a535c74b_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a535caae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a465b067_BinaryExpr>(_1a465b067_BinaryExpr{._field_Left=_1a53672e4_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1a53672e4_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type111);;
}



inline jule::Any _1a5366b62_build(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1a535ea28_buildType(_self_, _83226_tokens), &__jule_any_type91);;
	};
	jule::I32 _8363_i = _1a53683d3_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1a5366425_buildData(_self_, _83226_tokens);;
	};
	return _1a5366821_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1a5366ea3_buildKind(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _8447_parts;
	jule::Slice<_1e71b7487_Log> _84414_errors;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(_84330_tokens, static_cast<jule::U32>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1a535ce00_buildTuple(_self_, &(_8447_parts)), &__jule_any_type82);;
	};
	return _1a5366b62_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1a465799d_Expr> _1a53672e4_buildFromTokens(_1a535c042_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1a5366ea3_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a465799d_Expr>(_1a465799d_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1a536cb57_stop(_1a536c827_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a536cddd_stopped(_1a536c827_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a536d30b_pushErr(_1a536c827_parser* _self_, jule::Ptr<_1a463d137_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1e71b7487_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a536be0e_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1a536d66e_pushSuggestion(_1a536c827_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1a536c2a5_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1a465799d_Expr> _1a536d9b0_buildExpr(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _17831_tokens) {
	return _1a53672e4_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1a4652a86_Directive> _1a536dd01_buildDirective(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1a536d30b_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1a536d30b_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a4652a86_Directive>(_1a4652a86_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1a536e0a9_pushDirective(_1a536c827_parser* _self_, jule::Ptr<_1a4652a86_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9514bb8:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a9514bb8:;
			++it;
			goto _iter_begin_1a9514bb8;
		}
		_iter_end_1a9514bb8:;
	};
	{ jule::Slice<jule::Ptr<_1a4652a86_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1a4663767_ScopeTree> _1a536e4a5_buildScope(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _21032_tokens, jule::Ptr<_1a463d137_Token> _21061_end) {
	jule::Ptr<_1a4663767_ScopeTree> _2117_s = _1a534ca05_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1a534e61c_scopeParser _2137_sp = _1a534e61c_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a534dc7b_stmt>>(nullptr), ._field_pos=0};;
	_1a535b508_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool _1a536e95b__buildType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a537d9d1_typeBuilder _2227_tb = _1a537d9d1_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1a53819e5_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool _1a536ee12_buildType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a463d137_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1a4653669_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536e95b__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1a536d30b_pushErr(_self_, _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a466a263_TypeAliasDecl> _1a5370253_buildTypeAliasDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _24240_tokens) {
	jule::I32 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a536d30b_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a466a263_TypeAliasDecl> _2487_tad = jule::new_ptr<_1a466a263_TypeAliasDecl>(_1a466a263_TypeAliasDecl{._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr)});;
	jule::Ptr<_1a463d137_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_, _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*_2527_token.alloc)._field_Id != static_cast<jule::U32>(8LLU))) {
		_1a536d30b_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1a4653669_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1a536d30b_pushErr(_self_, (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1a48265c8_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1a53705b6_buildVarTypeAndExpr(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a46665b1_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1a463d137_Token>>* _28264_tokens) {
	jule::I32 _2837_i = 0LL;;
	jule::Ptr<_1a463d137_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1a536d30b_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a4653669_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*_2847_tok.alloc)._field_Id != static_cast<jule::U32>(71LLU))) {
		_1a536d30b_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1a536d30b_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1a536d9b0_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1a5370929_buildVarCommon(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a46665b1_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1a463d137_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*(*((*(_31536_v))))._field_Token.alloc)._field_Kind;
	(*((*(_31536_v))))._field_Public=_1a48265c8_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1a53705b6_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1a5370c8c_buildVarBegin(_1a536c827_parser* _self_, jule::Ptr<_1a46665b1_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1a463d137_Token>>* _33157_tokens) {
	jule::Ptr<_1a463d137_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1a95315b9:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1a9531278;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1a9531278:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1a536d30b_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1a95312de:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1a9530e6a:;
			{
				(*(_33157_tokens))=nullptr;
				_1a536d30b_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9531212:;
	};
}



inline jule::Ptr<_1a46665b1_VarDecl> _1a53710cd_buildVar(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _35929_tokens) {
	jule::Ptr<_1a46665b1_VarDecl> _3607_v = jule::new_ptr<_1a46665b1_VarDecl>(_1a46665b1_VarDecl{._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	_1a5370c8c_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1a5370929_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1a4660874_GenericDecl> _1a537141e_buildGeneric(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _37834_tokens) {
	jule::Ptr<_1a4660874_GenericDecl> _3797_g = jule::new_ptr<_1a4660874_GenericDecl>(_1a4660874_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1a46603bd_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_3797_g.alloc)._field_Ident=(*(*(_3797_g))._field_Token.alloc)._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1a536d30b_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1a536d30b_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a463d137_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _3978_parts;
		jule::Slice<_1e71b7487_Log> _39715_errors;
		({
			__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(&(_3968_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1a46603bd_Constraint>(_1a46603bd_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4653669_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a953e4d9:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a463d137_Token>> _40316_part = *it;
				{
					jule::I32 _4049_i = 0LL;;
					jule::Ptr<_1a4653669_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1a536d30b_pushErr(_self_, _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a953e4d9:;
				++it;
				goto _iter_begin_1a953e4d9;
			}
			_iter_end_1a953e4d9:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _1a537181a_buildGenerics(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _41535_tokens, jule::Ptr<_1a463d137_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1a536d30b_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _4217_parts;
	jule::Slice<_1e71b7487_Log> _42114_errors;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(_41535_tokens, static_cast<jule::U32>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4660874_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9544a61:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a4660874_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1a537141e_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1a9544a61:;
			++it;
			goto _iter_begin_1a9544a61;
		}
		_iter_end_1a9544a61:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1a4663ea4_ParamDecl> _1a5371b5b_buildSelfParam(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a4663ea4_ParamDecl> _4407_param = jule::new_ptr<_1a4663ea4_ParamDecl>(_1a4663ea4_ParamDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1a536d30b_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_1e71a80b0_Builder _4527_ident = static__1e71a892e_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		({
			auto except = _1e71a90b1_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:455:4"));
			(except.result);
		});
		if ((_43534_tokens.len() == 1LL)) {
			_1a536d30b_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		({
			auto except = _1e71a90b1_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:464:4"));
			(except.result);
		});
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1a536d30b_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_1e71a9941_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1a5372079_paramTypeBegin(_1a536c827_parser* _self_, jule::Ptr<_1a4663ea4_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_1a463d137_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1a463d137_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1a536d30b_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1a954c63a;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1a954c63a:;
	}
	_iter_end_1a954c63a:;;
}



inline void _1a53723dc_buildParamType(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4663ea4_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1a463d137_Token>>* _49065_tokens) {
	jule::I32 _4917_i = 0LL;;
	_1a5372079_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a5372750_buildParamBody(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4663ea4_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1a463d137_Token>> _50364_tokens) {
	jule::Ptr<_1a463d137_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1a536d30b_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a53723dc_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1a53723dc_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1a4663ea4_ParamDecl> _1a5372a91_buildParam(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _52331_tokens) {
	jule::Ptr<_1a4663ea4_ParamDecl> _5247_param = jule::new_ptr<_1a4663ea4_ParamDecl>(_1a4663ea4_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1a536d30b_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*(*(_5247_param))._field_Token.alloc)._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1a536d30b_pushErr(_self_, _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*(*(_5247_param))._field_Token.alloc)._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a53723dc_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1a5372750_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1a5372d49_checkParams(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a955ceec:;
		if (it != expr_end) {
			jule::Ptr<_1a4663ea4_ParamDecl> _56715_param = *it;
			{
				if ((_1a466435b_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1a955ceec;
				};
				if (((*_56715_param.alloc)._field_Token == nullptr)) {
					_1a536d30b_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_56715_param.alloc)._field_Kind=jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)}), &__jule_any_type77)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1a955ceec:;
			++it;
			goto _iter_begin_1a955ceec;
		}
		_iter_end_1a955ceec:;
	};
}



inline jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>> _1a5373245_buildParams(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _5877_parts;
	jule::Slice<_1e71b7487_Log> _58714_errs;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(_58633_tokens, static_cast<jule::U32>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1a4663ea4_ParamDecl> _5958_param = _1a5371b5b_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1a466435b_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9564ac5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1a9564ac5;
				};
				jule::Ptr<_1a4663ea4_ParamDecl> _6068_param = _1a5372a91_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1a9564ac5:;
			++it;
			goto _iter_begin_1a9564ac5;
		}
		_iter_end_1a9564ac5:;
	};
	_1a5372d49_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool _1a5373641_buildMultiRetType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _61639_tokens, jule::I32* _61669_i) {
	__jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a465655c_RetTypeDecl>(_1a465655c_RetTypeDecl{._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _6267_rangeTokens = _1a536aec9_range(_61669_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _6287_parts;
	jule::Slice<_1e71b7487_Log> _62814_errs;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(&(_6267_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4653669_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a463d137_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a463d137_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a956abca:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1a956abca;
				};
				jule::Ptr<_1a463d137_Token> _6408_token = _63615_part[0LL];;
				jule::I32 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1a536d30b_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1a956abca;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1a463d137_Token> _6579_newToken = jule::new_ptr<_1a463d137_Token>((*_6408_token.alloc));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a463d137_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a463d137_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1a4653669_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1a536d30b_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1a956abca:;
			++it;
			goto _iter_begin_1a956abca;
		}
		_iter_end_1a956abca:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a4654d96_TupleTypeDecl>(_1a4654d96_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type76)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool _1a5373a3c_buildRetType(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _68734_tokens, jule::I32* _68764_i) {
	__jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a465655c_RetTypeDecl>(_1a465655c_RetTypeDecl{._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a463d137_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1a9574c6c:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1a9574ce4:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1a9574d5a:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1a536d30b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a9576851:;
						{
							({
								__jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a5373641_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a9576d7e:;
						{
							_1a536d30b_pushErr(_self_, _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1a9576cd5:;
				};
				({
					__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1a9574c06:;
	};
	((*(_68764_i)))++;
	_1a536d30b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a4665406_FnDecl> _1a5373ee3_buildFnPrototype(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1a4665406_FnDecl> _7277_f = jule::new_ptr<_1a4665406_FnDecl>(_1a4665406_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1a465655c_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1a536d30b_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*(*(_7277_f))._field_Token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1a536d30b_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a463d137_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1a536d30b_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*_7277_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1a463d137_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7737_genericsTokens = _1a536aec9_range(_72668_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*_7277_f.alloc)._field_Generics=_1a537181a_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1a536d30b_pushErr(_self_, (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _7837_paramsToks = _1a536aec9_range(_72668_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*_7277_f.alloc)._field_Params=_1a5373245_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1a463d137_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*_7277_f.alloc)._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*_7277_f.alloc)._field_Public=_1a48265c8_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a465655c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a5373a3c_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1a4665406_FnDecl> _1a5374499_buildFn(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I32 _8047_i = 0LL;;
	jule::Ptr<_1a4665406_FnDecl> _8057_f = _1a5373ee3_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1a536d30b_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _8217_blockTokens = _1a536aec9_range(&(_8047_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*_8057_f.alloc)._field_Scope=_1a536e4a5_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1a536d30b_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, (*_8057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1a537480c_buildBindUseDecl(_1a536c827_parser* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1a463d137_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1a536d30b_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a463d137_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if (((((*(_8417_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1a463e28c_IsStr((*_8417_token.alloc)._field_Kind)))) || _1a463e523_IsRawStr((*_8417_token.alloc)._field_Kind))) {
		_1a536d30b_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1a5374b70_parseUseDecl(_1a536c827_parser* _self_, jule::Ptr<_1a466b5b6_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1a463d137_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1a537480c_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1a463d137_Token> _8567_token = _85058_tokens[0LL];;
	if ((((((*(_8567_token))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U32>(4LLU))) && (!(_1a463e28c_IsStr((*_8567_token.alloc)._field_Kind)))) || _1a463e523_IsRawStr((*_8567_token.alloc)._field_Kind))) {
		_1a536d30b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_8567_token.alloc)._field_Id == static_cast<jule::U32>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1a536d30b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*_8567_token.alloc)._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1a463e28c_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1a536d30b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1a466b5b6_UseDecl> _1a537506b_buildUseDecl(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _88032_tokens, jule::Bool _88057_binded) {
	jule::Ptr<_1a466b5b6_UseDecl> _8817_decl = jule::new_ptr<_1a466b5b6_UseDecl>(_1a466b5b6_UseDecl{._field_Token=_88032_tokens[0LL], ._field_Path=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Alias=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Binded=_88057_binded});;
	if ((_88032_tokens.len() < 2LL)) {
		_1a536d30b_pushErr(_self_, (*(_8817_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88032_tokens).mut_slice(1LL);;
	_1a5374b70_parseUseDecl(_self_, &(_8817_decl), _88032_tokens);
	return _8817_decl;;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a5375467_buildTypeEnumItemKind(jule::Ptr<_1a536c827_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_1a463d137_Token>>* _89456_tokens) {
	jule::I32 _8957_braceN = 0LL;;
	jule::I32 _8963_exprStart = (*(_89443_i));;
	for (; ((*(_89443_i)) < (*(_89456_tokens)).len()); ((*(_89443_i)))++) {
		{
			jule::Ptr<_1a463d137_Token> _8984_t = (*(_89456_tokens))[(*(_89443_i))];;
			{
				auto &_match_expr{ (*(_8984_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a959bb73:;
					{
						(_8957_braceN)++;
						goto _iter_next_1a959b106;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a959bea3:;
					{
						(_8957_braceN)--;
					}
				}
				_match_end_1a959bbea:;
			};
			if ((_8957_braceN > 0LL)) {
				goto _iter_next_1a959b106;
			};
			if ((((*(_8984_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_89443_i)) + 1LL) >= (*(_89456_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a463d137_Token>> _91413_kindTokens = nullptr;;
				if (((*_8984_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart, (*(_89443_i)));
				} else {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart);
				};
				jule::I32 _9209_j = 0LL;;
				jule::Ptr<_1a4653669_TypeDecl> _9219_kind;
				({
					__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_91413_kindTokens), (&(_9209_j)), true);
					_9219_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9209_j < _91413_kindTokens.len())) {
					_1a536d30b_pushErr(_self_, _91413_kindTokens[_9209_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9219_kind;;
			};
		}
	_iter_next_1a959b106:;
	}
	_iter_end_1a959b106:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>> _1a53757a8_buildTypeEnumItems(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _93140_tokens) {
	jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>> _9327_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a466ce58_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _9337_i = 0LL;;
	for (; (_9337_i < (*(_93140_tokens)).len()); (_9337_i)++) {
		{
			jule::Ptr<_1a463d137_Token> _9358_t = (*(_93140_tokens))[_9337_i];;
			jule::Ptr<_1a466ce58_TypeEnumItemDecl> _9368_item = jule::new_ptr<_1a466ce58_TypeEnumItemDecl>(_1a466ce58_TypeEnumItemDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr)});;
			(*_9368_item.alloc)._field_Token=_9358_t;
			if ((((*((*_9368_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_93140_tokens)).len() - _9337_i) > 2LL))) {
				_9358_t=(*(_93140_tokens))[(_9337_i + 1LL)];
				if (((*(_9358_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_9368_item.alloc)._field_Ident=(*(*(_9368_item))._field_Token.alloc)._field_Kind;
					_9337_i+=2LL;
					if (((_9337_i >= (*(_93140_tokens)).len()) || ((*((*(_93140_tokens))[_9337_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1a536d30b_pushErr(_self_.ptr(), _9358_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1a95a1e75;
					};
				};
			};
			(*_9368_item.alloc)._field_Kind=_1a5375467_buildTypeEnumItemKind(_self_, &(_9337_i), _93140_tokens);
			{ jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>> &__jule_push_dest = _9327_items; __jule_push_dest.push(_9368_item); };
		}
	_iter_next_1a95a1e75:;
	}
	_iter_end_1a95a1e75:;;
	return _9327_items;;
}



inline jule::Ptr<_1a466d5b8_TypeEnumDecl> _1a5375ae9_buildTypeEnumDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _95539_tokens) {
	jule::I32 _9567_i = 1LL;;
	jule::Ptr<_1a466d5b8_TypeEnumDecl> _9577_e = jule::new_ptr<_1a466d5b8_TypeEnumDecl>(_1a466d5b8_TypeEnumDecl{._field_Token=(*(_95539_tokens))[_9567_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if (((*((*(_9577_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_.ptr(), (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Ident=(*(*(_9577_e))._field_Token.alloc)._field_Kind;
	_9567_i+=3LL;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _9677_itemTokens = _1a536aec9_range(&(_9567_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _95539_tokens);;
	if ((_9677_itemTokens == nullptr)) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9577_e;;
	} else if ((_9567_i < (*(_95539_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_95539_tokens))[_9567_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Public=_1a48265c8_IsPub((*_9577_e.alloc)._field_Ident);
	(*_9577_e.alloc)._field_End=(*(_95539_tokens))[(_9567_i - 1LL)];
	(*_9577_e.alloc)._field_Items=_1a53757a8_buildTypeEnumItems(_self_, &(_9677_itemTokens));
	return _9577_e;;
}



inline jule::Ptr<_1a465799d_Expr> _1a5375ee5_buildEnumItemExpr(jule::Ptr<_1a536c827_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_1a463d137_Token>>* _98252_tokens) {
	jule::I32 _9837_braceN = 0LL;;
	jule::I32 _9843_exprStart = (*(_98239_i));;
	for (; ((*(_98239_i)) < (*(_98252_tokens)).len()); ((*(_98239_i)))++) {
		{
			jule::Ptr<_1a463d137_Token> _9864_t = (*(_98252_tokens))[(*(_98239_i))];;
			{
				auto &_match_expr{ (*(_9864_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a95b0329:;
					{
						(_9837_braceN)++;
						goto _iter_next_1a95ae7ac;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a95b0659:;
					{
						(_9837_braceN)--;
					}
				}
				_match_end_1a95b03a1:;
			};
			if ((_9837_braceN > 0LL)) {
				goto _iter_next_1a95ae7ac;
			};
			if ((((*(_9864_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_98239_i)) + 1LL) >= (*(_98252_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a463d137_Token>> _100213_exprTokens = nullptr;;
				if (((*_9864_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart, (*(_98239_i)));
				} else {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart);
				};
				return _1a536d9b0_buildExpr(_self_, &(_100213_exprTokens));;
			};
		}
	_iter_next_1a95ae7ac:;
	}
	_iter_end_1a95ae7ac:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>> _1a5376336_buildEnumItems(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _101436_tokens) {
	jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>> _10157_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a466ba6c_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _10167_i = 0LL;;
	for (; (_10167_i < (*(_101436_tokens)).len()); (_10167_i)++) {
		{
			jule::Ptr<_1a463d137_Token> _10188_t = (*(_101436_tokens))[_10167_i];;
			jule::Ptr<_1a466ba6c_EnumItemDecl> _10198_item = jule::new_ptr<_1a466ba6c_EnumItemDecl>(_1a466ba6c_EnumItemDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr)});;
			(*_10198_item.alloc)._field_Token=_10188_t;
			if (((*((*_10198_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1a536d30b_pushErr(_self_.ptr(), (*_10198_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10198_item.alloc)._field_Ident=(*(*(_10198_item))._field_Token.alloc)._field_Kind;
			if ((((_10167_i + 1LL) >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[(_10167_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_10167_i + 1LL) < (*(_101436_tokens)).len())) {
					(_10167_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
				goto _iter_next_1a95b420c;
			};
			(_10167_i)++;
			_10188_t=(*(_101436_tokens))[_10167_i];
			(_10167_i)++;
			if (((*(_10188_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1a536d30b_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1a95b420c;
			};
			if (((_10167_i >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[_10167_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1a536d30b_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1a95b420c;
			};
			(*_10198_item.alloc)._field_Expr=_1a5375ee5_buildEnumItemExpr(_self_, &(_10167_i), _101436_tokens);
			{ jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
		}
	_iter_next_1a95b420c:;
	}
	_iter_end_1a95b420c:;;
	return _10157_items;;
}



inline jule::Ptr<_1a466c62d_EnumDecl> _1a5376677_buildEnumDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _105135_tokens) {
	if (((*(_105135_tokens)).len() < 3LL)) {
		_1a536d30b_pushErr(_self_.ptr(), (*(_105135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a466c62d_EnumDecl> _10567_e = jule::new_ptr<_1a466c62d_EnumDecl>(_1a466c62d_EnumDecl{._field_Token=(*(_105135_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a463d137_Token>(nullptr)});;
	if (((*((*(_10567_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Ident=(*(*(_10567_e))._field_Token.alloc)._field_Kind;
	jule::I32 _10647_i = 2LL;;
	if (((*((*(_105135_tokens))[_10647_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_10647_i)++;
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1a536d30b_pushErr(_self_, (*(_105135_tokens))[(_10647_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
		({
			__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, _105135_tokens, (&(_10647_i)), true);
			(*_10567_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1a536cb57_stop(_self_);
			_1a536d30b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
	} else {
		(*_10567_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _10817_itemTokens = _1a536aec9_range(&(_10647_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _105135_tokens);;
	if ((_10817_itemTokens == nullptr)) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10567_e;;
	} else if ((_10647_i < (*(_105135_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_105135_tokens))[_10647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Public=_1a48265c8_IsPub((*_10567_e.alloc)._field_Ident);
	(*_10567_e.alloc)._field_End=(*(_105135_tokens))[(_10647_i - 1LL)];
	(*_10567_e.alloc)._field_Items=_1a5376336_buildEnumItems(_self_, &(_10817_itemTokens));
	return _10567_e;;
}



inline jule::Any _1a53769b8_buildNodeEnumDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _109639_tokens) {
	if ((((*(_109639_tokens)).len() > 3LL) && ((*((*(_109639_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_109639_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1a5375ae9_buildTypeEnumDecl(_self_, _109639_tokens), &__jule_any_type70);;
		};
	};
	return jule::Any(_1a5376677_buildEnumDecl(_self_, _109639_tokens), &__jule_any_type69);;
}



inline jule::Ptr<_1a466d882_FieldDecl> _1a5376d09_buildField(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _110531_tokens) {
	jule::Ptr<_1a466d882_FieldDecl> _11067_f = jule::new_ptr<_1a466d882_FieldDecl>(_1a466d882_FieldDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	(*_11067_f.alloc)._field_Mutable=((*(_110531_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_11067_f.alloc)._field_Mutable) {
		if ((_110531_tokens.len() == 1LL)) {
			_1a536d30b_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(1LL);;
	};
	(*_11067_f.alloc)._field_Token=_110531_tokens[0LL];
	if (((*((*_11067_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_, (*_11067_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11067_f.alloc)._field_Ident=(*(*(_11067_f))._field_Token.alloc)._field_Kind;
	if ((_110531_tokens.len() == 1LL)) {
		_1a536d30b_pushErr(_self_, _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110531_tokens.len() < 3LL) || ((*(_110531_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1a536d30b_pushErr(_self_, _110531_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110531_tokens).mut_slice(2LL);;
	jule::I32 _11347_i = 0LL;;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_110531_tokens), (&(_11347_i)), true);
		(*_11067_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11347_i < _110531_tokens.len())) {
		jule::Ptr<_1a463d137_Token> _11374_token = _110531_tokens[_11347_i];;
		if (((*(_11374_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a536d30b_pushErr(_self_, _110531_tokens[_11347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11347_i)++;
		if ((_11347_i >= _110531_tokens.len())) {
			_1a536d30b_pushErr(_self_, _11374_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(_11347_i);;
		(*_11067_f.alloc)._field_Default=_1a536d9b0_buildExpr(_self_, &(_110531_tokens));
	};
	(*_11067_f.alloc)._field_Public=_1a48265c8_IsPub((*_11067_f.alloc)._field_Ident);
	return _11067_f;;
}



inline jule::Slice<jule::Ptr<_1a466d882_FieldDecl>> _1a537714a_buildStructDeclFields(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _115442_tokens) {
	jule::Slice<jule::Ptr<_1a466d882_FieldDecl>> _115511_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _11567_stmts = _1a534e133_splitStmts(&(_115442_tokens));;
	{
		auto expr = &(_11567_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d60db:;
		if (it != expr_end) {
			jule::Ptr<_1a534dc7b_stmt> _115715_stmt = *it;
			{
				_115442_tokens=(*(_115715_stmt))._field_tokens;
				jule::Ptr<_1a466d882_FieldDecl> _11598_f = _1a5376d09_buildField(_self_, _115442_tokens);;
				{ jule::Slice<jule::Ptr<_1a466d882_FieldDecl>> &__jule_push_dest = _115511_fields; __jule_push_dest.push(_11598_f); };
			}
			_iter_next_1a95d60db:;
			++it;
			goto _iter_begin_1a95d60db;
		}
		_iter_end_1a95d60db:;
	};
	return _115511_fields;;
}



inline jule::Ptr<_1a466e278_StructDecl> _1a537748b_buildStructDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _116537_tokens) {
	if (((*(_116537_tokens)).len() < 3LL)) {
		_1a536d30b_pushErr(_self_.ptr(), (*(_116537_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _11717_i = 1LL;;
	jule::Ptr<_1a466e278_StructDecl> _11727_s = jule::new_ptr<_1a466e278_StructDecl>(_1a466e278_StructDecl{._field_Token=(*(_116537_tokens))[_11717_i], ._field_End=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1a466d882_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>(nullptr)});;
	if (((*((*(_11727_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11717_i)++;
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	(*_11727_s.alloc)._field_Ident=(*(*(_11727_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a463d137_Token> _11863_errorToken = (*(_116537_tokens))[_11717_i];;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _11877_genericsTokens = _1a536aec9_range(&(_11717_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _116537_tokens);;
	if ((_11877_genericsTokens != nullptr)) {
		(*_11727_s.alloc)._field_Generics=_1a537181a_buildGenerics(_self_, &(_11877_genericsTokens), &(_11863_errorToken));
	};
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_116537_tokens))[(_11717_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _11977_bodyTokens = _1a536aec9_range(&(_11717_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _116537_tokens);;
	if ((_11977_bodyTokens == nullptr)) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	if ((_11717_i < (*(_116537_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11727_s.alloc)._field_Public=_1a48265c8_IsPub((*_11727_s.alloc)._field_Ident);
	(*_11727_s.alloc)._field_Fields=_1a537714a_buildStructDeclFields(_self_, _11977_bodyTokens);
	(*_11727_s.alloc)._field_End=(*(_116537_tokens))[(_11717_i - 1LL)];
	return _11727_s;;
}



inline void _1a5377744_checkMethodReceiver(_1a536c827_parser* _self_, jule::Ptr<_1a4665406_FnDecl>* _121336_f) {
	if ((*((*(_121336_f))))._field_Statically) {
		if ((((*((*(_121336_f))))._field_Params.len() > 0LL) && _1a466435b_IsSelf((*((*(_121336_f))))._field_Params[0LL].ptr()))) {
			_1a536d30b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121336_f))))._field_Params.len() == 0LL)) {
		_1a536d30b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4663ea4_ParamDecl> _12253_param = (*((*(_121336_f))))._field_Params[0LL];;
	if ((!(_1a466435b_IsSelf(_12253_param.ptr())))) {
		_1a536d30b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a5377aa7_buildTraitBody(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a466e9b5_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1a463d137_Token>> _123260_tokens) {
	jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _12337_stmts = _1a534e133_splitStmts(&(_123260_tokens));;
	{
		auto expr = &(_12337_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95e7949:;
		if (it != expr_end) {
			jule::Ptr<_1a534dc7b_stmt> _123415_stmt = *it;
			{
				_123260_tokens=(*(_123415_stmt))._field_tokens;
				if ((_123260_tokens.len() == 0LL)) {
					goto _iter_next_1a95e7949;
				};
				{
					auto &_match_expr{ (*(_123260_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1a95eb5b8:;
						{
							jule::Ptr<_1a4665406_FnDecl> _12419_f = _1a5374499_buildFn(_self_, &(_123260_tokens), true, true);;
							if ((_12419_f == nullptr)) {
								goto _match_end_1a95e8c14;
							};
							_1a5377744_checkMethodReceiver(_self_, &(_12419_f));
							if (((*(_12419_f))._field_Generics.len() > 0LL)) {
								_1a536d30b_pushErr(_self_, (*(_12419_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a4665406_FnDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Methods; __jule_push_dest.push(_12419_f); };
						}
					}
					else {
						_case_begin_1a95e850a:;
						{
							jule::I32 _12519_i = 0LL;;
							jule::Ptr<_1a4653669_TypeDecl> _12529_ti;
							jule::Bool _125213_ok;
							({
								__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_123260_tokens), (&(_12519_i)), true);
								_12529_ti = __jule_assign_result.__jule_result_arg0;
								_125213_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125213_ok))) {
								goto _match_end_1a95e8c14;
							};
							if ((_12519_i < _123260_tokens.len())) {
								_1a536d30b_pushErr(_self_, _123260_tokens[_12519_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Inherits; __jule_push_dest.push(_12529_ti); };
						}
					}
					_match_end_1a95e8c14:;
				};
			}
			_iter_next_1a95e7949:;
			++it;
			goto _iter_begin_1a95e7949;
		}
		_iter_end_1a95e7949:;
	};
}



inline jule::Ptr<_1a466e9b5_TraitDecl> _1a5377de8_buildTraitDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _126436_tokens) {
	if (((*(_126436_tokens)).len() < 3LL)) {
		_1a536d30b_pushErr(_self_.ptr(), (*(_126436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a466e9b5_TraitDecl> _12697_t = jule::new_ptr<_1a466e9b5_TraitDecl>(_1a466e9b5_TraitDecl{._field_Token=(*(_126436_tokens))[1LL], ._field_End=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a4665406_FnDecl>>(nullptr)});;
	if (((*((*(_12697_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a536d30b_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Ident=(*(*(_12697_t))._field_Token.alloc)._field_Kind;
	jule::I32 _12777_i = 2LL;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _12787_bodyTokens = _1a536aec9_range(&(_12777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _126436_tokens);;
	if ((_12787_bodyTokens == nullptr)) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12777_i < (*(_126436_tokens)).len())) {
		_1a536d30b_pushErr(_self_, (*(_126436_tokens))[_12777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Public=_1a48265c8_IsPub((*_12697_t.alloc)._field_Ident);
	_1a5377aa7_buildTraitBody(_self_, &(_12697_t), _12787_bodyTokens);
	(*_12697_t.alloc)._field_End=(*(_126436_tokens))[(_12777_i - 1LL)];
	return _12697_t;;
}



inline jule::Ptr<_1a4665406_FnDecl> _1a5378239_buildBindFn(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _129432_tokens) {
	(_129432_tokens).mut_slice(1LL);;
	jule::Ptr<_1a4665406_FnDecl> _12967_f = _1a5374499_buildFn(_self_, &(_129432_tokens), false, true);;
	if ((_12967_f != nullptr)) {
		(*_12967_f.alloc)._field_Public=false;
		(*_12967_f.alloc)._field_Binded=true;
	};
	return _12967_f;;
}



inline jule::Ptr<_1a46665b1_VarDecl> _1a537857a_buildBindVar(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _130433_tokens) {
	(_130433_tokens).mut_slice(1LL);;
	jule::Ptr<_1a46665b1_VarDecl> _13067_v = _1a53710cd_buildVar(_self_, _130433_tokens);;
	if ((_13067_v != nullptr)) {
		(*_13067_v.alloc)._field_Public=false;
		(*_13067_v.alloc)._field_Binded=true;
		if (((*_13067_v.alloc)._field_Expr != nullptr)) {
			_1a536d30b_pushErr(_self_, (*_13067_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13067_v;;
}



inline jule::Ptr<_1a466e278_StructDecl> _1a53788bb_buildBindStruct(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _131736_tokens) {
	(_131736_tokens).mut_slice(1LL);;
	jule::Ptr<_1a466e278_StructDecl> _13197_s = _1a537748b_buildStructDecl(_self_, &(_131736_tokens));;
	if ((_13197_s != nullptr)) {
		(*_13197_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13197_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a960b133:;
			if (it != expr_end) {
				jule::Ptr<_1a466d882_FieldDecl> _132216_f = *it;
				{
					(*(_132216_f))._field_Public=true;
				}
				_iter_next_1a960b133:;
				++it;
				goto _iter_begin_1a960b133;
			}
			_iter_end_1a960b133:;
		};
		(*_13197_s.alloc)._field_Binded=true;
	};
	return _13197_s;;
}



inline jule::Ptr<_1a466a263_TypeAliasDecl> _1a5378c0c_buildBindTypeAlias(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _133139_tokens) {
	(_133139_tokens).mut_slice(1LL);;
	jule::Ptr<_1a466a263_TypeAliasDecl> _13337_t = _1a5370253_buildTypeAliasDecl(_self_, &(_133139_tokens));;
	if ((_13337_t != nullptr)) {
		(*_13337_t.alloc)._field_Public=false;
		(*_13337_t.alloc)._field_Binded=true;
	};
	return _13337_t;;
}



inline jule::Ptr<_1a466b5b6_UseDecl> _1a537904d_buildBindUse(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _134133_tokens) {
	if ((_134133_tokens.len() == 1LL)) {
		_1a536d30b_pushErr(_self_.ptr(), _134133_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134133_tokens).mut_slice(1LL);;
	;
	return _1a537506b_buildUseDecl(_self_, _134133_tokens, true);;
}



inline jule::Any _1a537938e_buildBind(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _135231_tokens) {
	jule::Ptr<_1a463d137_Token> _13537_token = (*(_135231_tokens))[0LL];;
	if (((*(_135231_tokens)).len() == 1LL)) {
		_1a536d30b_pushErr(_self_.ptr(), _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13537_token=(*(_135231_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13537_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a96121e4:;
			{
				return jule::Any(_1a5378239_buildBindFn(_self_, (*(_135231_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1a9611d4d:;
			{
				return jule::Any(_1a537857a_buildBindVar(_self_, (*(_135231_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1a9611db4:;
			{
				return jule::Any(_1a53788bb_buildBindStruct(_self_, (*(_135231_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1a9611e2a:;
			{
				return jule::Any(_1a5378c0c_buildBindTypeAlias(_self_, (*(_135231_tokens))), &__jule_any_type50);;
			}
		}
		else {
			_case_begin_1a96117ed:;
			{
				_1a536d30b_pushErr(_self_, _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9611cd7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4665406_FnDecl> _1a53796d0_getMethod(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _137631_tokens) {
	jule::I32 _13777_i = 0LL;;
	jule::Ptr<_1a463d137_Token> _13787_token = (*(_137631_tokens))[_13777_i];;
	if (((*(_13787_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1a536d30b_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1a536d30b_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id != static_cast<jule::U32>(29LLU))) {
		_1a536d30b_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a5374499_buildFn(_self_, _137631_tokens, true, false);;
}



inline void _1a5379a43_parseImplBody(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4670125_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1a463d137_Token>>* _140557_tokens) {
	jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _14067_stmts = _1a534e133_splitStmts(_140557_tokens);;
	{
		auto expr = &(_14067_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a961a153:;
		if (it != expr_end) {
			jule::Ptr<_1a534dc7b_stmt> _140715_stmt = *it;
			{
				(*(_140557_tokens))=(*(_140715_stmt))._field_tokens;
				jule::Ptr<_1a463d137_Token> _14098_token = (*(_140557_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1a961b154:;
						{
							_1a536e0a9_pushDirective(_self_.ptr(), _1a536dd01_buildDirective(_self_, (*(_140557_tokens))));
							goto _iter_next_1a961a153;
						}
					}
					_match_end_1a961b396:;
				};
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1a961c9a2:;
						{
							jule::Ptr<_1a46665b1_VarDecl> _14189_v = _1a53710cd_buildVar(_self_, (*(_140557_tokens)));;
							if ((_14189_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Statics; __jule_push_dest.push(_14189_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1a961c5d9:;
						{
							jule::Ptr<_1a4665406_FnDecl> _14259_f = _1a53796d0_getMethod(_self_, _140557_tokens);;
							if ((_14259_f != nullptr)) {
								_1a5377744_checkMethodReceiver(_self_, &(_14259_f));
								_1a537a47d_applyFnMeta(_self_, &(_14259_f));
								{ jule::Slice<jule::Ptr<_1a4665406_FnDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Methods; __jule_push_dest.push(_14259_f); };
							};
						}
					}
					else {
						_case_begin_1a961b4ea:;
						{
							_1a536d30b_pushErr(_self_, _14098_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1a961a153;
						}
					}
					_match_end_1a961b9b2:;
				};
			}
			_iter_next_1a961a153:;
			++it;
			goto _iter_begin_1a961a153;
		}
		_iter_end_1a961a153:;
	};
}



inline jule::Ptr<_1a4670125_Impl> _1a5379d84_buildImpl(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _143830_tokens) {
	jule::Ptr<_1a463d137_Token> _14397_token = _143830_tokens[0LL];;
	if ((_143830_tokens.len() < 2LL)) {
		_1a536d30b_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _14457_i = 1LL;;
	jule::Ptr<_1a4653669_TypeDecl> _14477_base;
	jule::Bool _144717_ok;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		_14477_base = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1a536d30b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4670125_Impl> _14567_ipl = jule::new_ptr<_1a4670125_Impl>(_1a4670125_Impl{._field_End=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Base=_14477_base, ._field_Dest=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a4665406_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a46665b1_VarDecl>>(nullptr)});;
	_14397_token=_143830_tokens[_14457_i];
	if (((*(_14397_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_14397_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_14567_ipl))._field_Base, (*_14567_ipl.alloc)._field_Dest);
			goto _julec_label_1a962934e;
		};
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14457_i)++;
	if ((_14457_i >= _143830_tokens.len())) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		(*_14567_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a962934e:;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _14947_bodyTokens = _1a536aec9_range(&(_14457_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_143830_tokens));;
	if ((_14947_bodyTokens == nullptr)) {
		_1a536cb57_stop(_self_);
		_1a536d30b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14457_i < _143830_tokens.len())) {
		_1a536d30b_pushErr(_self_, _143830_tokens[_14457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14567_ipl.alloc)._field_End=_143830_tokens[(_14457_i - 1LL)];
	_1a5379a43_parseImplBody(_self_, &(_14567_ipl), &(_14947_bodyTokens));
	return _14567_ipl;;
}



inline jule::Any _1a537a1c5_buildNodeData(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _150935_tokens) {
	jule::Ptr<_1a463d137_Token> _15107_token = (*(_150935_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15107_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a962e51e:;
			{
				jule::Ptr<_1a4665406_FnDecl> _15148_f = _1a5374499_buildFn(_self_, _150935_tokens, false, false);;
				if ((_15148_f != nullptr)) {
					(*_15148_f.alloc)._field_Global=true;
				};
				return jule::Any(_15148_f, &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1a962ec28:;
			{
				return jule::Any(_1a53710cd_buildVar(_self_, (*(_150935_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1a962ec8e:;
			{
				return jule::Any(_1a5370253_buildTypeAliasDecl(_self_, _150935_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1a962e134:;
			{
				return _1a53769b8_buildNodeEnumDecl(_self_, _150935_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1a962e19a:;
			{
				return jule::Any(_1a537748b_buildStructDecl(_self_, _150935_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1a962e211:;
			{
				return jule::Any(_1a5377de8_buildTraitDecl(_self_, _150935_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1a962e277:;
			{
				return jule::Any(_1a5379d84_buildImpl(_self_, (*(_150935_tokens))), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a962e2dd:;
			{
				return _1a537938e_buildBind(_self_, _150935_tokens);;
			}
		}
		else {
			_case_begin_1a962dd37:;
			{
				_1a536d30b_pushErr(_self_.ptr(), _15107_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a962e0bd:;
	};
}



inline void _1a537a47d_applyFnMeta(_1a536c827_parser* _self_, jule::Ptr<_1a4665406_FnDecl>* _154232_f) {
	(*((*(_154232_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a537a736_applyMeta(_1a536c827_parser* _self_, _1a4652668_Node* _154730_node) {
	{
		auto &_match_expr{ (*(_154730_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a9635dd8:;
			{
				jule::Ptr<_1a46665b1_VarDecl> _15508_v = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a46665b1_VarDecl>();;
				if ((_15508_v == nullptr)) {
					return;;
				};
				(*(_15508_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a9635b41:;
			{
				jule::Ptr<_1a4665406_FnDecl> _15578_f = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a4665406_FnDecl>();;
				if ((_15578_f == nullptr)) {
					return;;
				};
				_1a537a47d_applyFnMeta(_self_, &(_15578_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a9635e82:;
			{
				jule::Ptr<_1a466e278_StructDecl> _15638_sd = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a466e278_StructDecl>();;
				if ((_15638_sd == nullptr)) {
					return;;
				};
				(*(_15638_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1a9635d50:;
	};
}



inline void _1a537a9de_pushUseDecl(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a466b5b6_UseDecl>* _157233_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a466b5b6_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157233_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a536d30b_pushErr(_self_, (*((*(_157233_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1a536d66e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a537ad30_pushMetaNodes(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _158035_tokens) {
	{
		auto &_match_expr{ (*((*(_158035_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1a963c52c:;
			{
				;
				jule::Ptr<_1a466b5b6_UseDecl> _15848_decl = _1a537506b_buildUseDecl(_self_.ptr(), (*(_158035_tokens)), false);;
				_1a537a9de_pushUseDecl(_self_, &(_15848_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a963c5a4:;
			{
				if ((((*(_158035_tokens)).len() > 1LL) && ((*((*(_158035_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1a466b5b6_UseDecl> _15899_decl = _1a537904d_buildBindUse(_self_, (*(_158035_tokens)));;
					_1a537a9de_pushUseDecl(_self_, &(_15899_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1a963c61a:;
			{
				_1a536e0a9_pushDirective(_self_.ptr(), _1a536dd01_buildDirective(_self_, (*(_158035_tokens))));
				return true;;
			}
		}
		_match_end_1a963c41c:;
	};
	return false;;
}



inline _1a4652668_Node _1a537b171_parseNode(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _160031_st) {
	_1a4652668_Node _16017_node = _1a4652668_Node{._field_Token=(*(_160031_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1a537ad30_pushMetaNodes(_self_, _160031_st)) {
		return _16017_node;;
	};
	jule::Any _16097_data = _1a537a1c5_buildNodeData(_self_, _160031_st);;
	if ((_16097_data == nullptr)) {
		return _16017_node;;
	};
	_16017_node._field_Data=_16097_data;
	_1a537a736_applyMeta(_self_, &(_16017_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a536d30b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16017_node;;
}



inline void _1a537b429_appendNode(jule::Ptr<_1a536c827_parser> _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _162432_st) {
	if (((*(_162432_st)).len() == 0LL)) {
		return;;
	};
	_1a4652668_Node _16287_node = _1a537b171_parseNode(_self_, _162432_st);;
	if (((_16287_node._field_Data != nullptr) && (!(_1a536cddd_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1a4652668_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16287_node; __jule_collection; }));
	};
}



inline void _1a537b902_removeRange(_1a536c827_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_1a463d137_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges) {
	jule::U32 _16353_close = _1a536b9d0_getCloseOfBrace(_163435_id);;
	for (; (_163427_i >= 0LL); (_163427_i)--) {
		{
			jule::Ptr<_1a463d137_Token> _16374_tok = (*(_163451_tokens))[(*(_163481_ranges))[_163427_i]];;
			if (((*(_16374_tok))._field_Id != _16353_close)) {
				goto _iter_next_1a96477ac;
			};
			(*(_163481_ranges))=jule::append((*(_163481_ranges)).slice(0LL, _163427_i),(*(_163481_ranges)).slice((_163427_i + 1LL)));
			goto _iter_end_1a96477ac;
		}
	_iter_next_1a96477ac:;
	}
	_iter_end_1a96477ac:;;
}



inline void _1a537bd20_pushWrongOrderCloseErr(_1a536c827_parser* _self_, jule::Ptr<_1a463d137_Token>* _164639_t, jule::Slice<jule::Ptr<_1a463d137_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges) {
	{
		auto &_match_expr{ (*((*(_164658_tokens))[(*(_164684_ranges))[((*(_164684_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1a9649bbb:;
			{
				_1a536d30b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1a9649c43:;
			{
				_1a536d30b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1a9649ca9:;
			{
				_1a536d30b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9649aab:;
	};
}



inline void _1a537c2e8_pushRangeClose(_1a536c827_parser* _self_, jule::Ptr<_1a463d137_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_1a463d137_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges) {
	jule::I32 _16583_n = (*(_165796_ranges)).len();;
	if ((_16583_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165730_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1a964ccbd:;
				{
					_1a536d30b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1a964cd45:;
				{
					_1a536d30b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1a964cdab:;
				{
					_1a536d30b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1a964cc02:;
		};
		return;;
	} else if (((*((*(_165766_tokens))[(*(_165796_ranges))[(_16583_n - 1LL)]]))._field_Id != _165748_left)) {
		_1a537bd20_pushWrongOrderCloseErr(_self_, &(_165730_t), _165766_tokens, _165796_ranges);
	};
	_1a537b902_removeRange(_self_, (_16583_n - 1LL), (*(_165730_t))._field_Id, _165766_tokens, _165796_ranges);
}



inline void _1a537c5a1_checkRanges(_1a536c827_parser* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>>* _167528_tokens) {
	jule::Slice<jule::I32> _167611_ranges = nullptr;;
	{
		auto expr = _167528_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9651189:;
		if (it != expr_end) {
			jule::I32 _16787_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> *_167810_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167810_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a9652036:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _167611_ranges; __jule_push_dest.push(_16787_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a96520be:;
						{
							_1a537c2e8_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(74LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1a9652135:;
						{
							_1a537c2e8_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(72LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1a965219b:;
						{
							_1a537c2e8_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(76LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					_match_end_1a9651e6a:;
				};
			}
			_iter_next_1a9651189:;
			++it;
			_16787_i++;
			goto _iter_begin_1a9651189;
		}
		_iter_end_1a9651189:;
	};
	{
		auto expr = &(_167611_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9651266:;
		if (it != expr_end) {
			jule::I32 _169310_i = *it;
			{
				jule::Ptr<_1a463d137_Token> _16944_token = (*(_167528_tokens))[_169310_i];;
				{
					auto &_match_expr{ (*(_16944_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a965505b:;
						{
							_1a536d30b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a96550c2:;
						{
							_1a536d30b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a9655138:;
						{
							_1a536d30b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1a9654cc5:;
				};
			}
			_iter_next_1a9651266:;
			++it;
			goto _iter_begin_1a9651266;
		}
		_iter_end_1a9651266:;
	};
}



inline void _1a537c859_parse(jule::Ptr<_1a536c827_parser> _self_, jule::Ptr<_1a4643a11_Fileset>* _170627_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a46517aa_AST>(_1a46517aa_AST{._field_File=(*(_170627_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1a466b5b6_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1a4652668_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a535c042_exprBuilder>(_1a535c042_exprBuilder{._field_p=_self_});
	_1a537c5a1_checkRanges(_self_, &((*((*(_170627_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _17197_stmts = _1a534e133_splitStmts(&((*((*(_170627_f))))._field_Tokens));;
	jule::I32 _17227_i = 0LL;;
	for (; (_17227_i < _17197_stmts.len()); (_17227_i)++) {
		{
			jule::Ptr<_1a534dc7b_stmt> _17248_stmt = _17197_stmts[_17227_i];;
			if (((*(_17248_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_17248_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1a9658e0b;
			};
			if ((!(_1e71b9335_IsTopDirective((*((*_17248_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1a9658e0b;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4652a86_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a536dd01_buildDirective(_self_, (*_17248_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1a9658e0b:;
	}
	_iter_end_1a9658e0b:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17227_i < _17197_stmts.len()) && (!(_1a536cddd_stopped(_self_)))); (_17227_i)++) {
		{
			jule::Ptr<_1a534dc7b_stmt> _17418_stmt = _17197_stmts[_17227_i];;
			_1a537b429_appendNode(_self_, &((*(_17418_stmt))._field_tokens));
		}
	_iter_next_1a965be0e:;
	}
	_iter_end_1a965be0e:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a536d30b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1a537e0a8_pushErr(_1a537d9d1_typeBuilder* _self_, jule::Ptr<_1a463d137_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1a536d30b_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a537e41b_pushSuggestion(_1a537d9d1_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1a536d66e_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a537e6a2_buildNamespace(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a4653669_TypeDecl> _457_t = jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1a4654417_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1a4654417_NamespaceTypeDecl>(_1a4654417_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Kind=jule::Ptr<_1a4653669_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1a537e0a8_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a537e41b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1a537e0a8_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a537e41b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1a537e0a8_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a537e41b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1a537e0a8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a537e41b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1a537ee55_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type93);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _1a537e938_buildGenerics(_1a537d9d1_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a463d137_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _857_parts = _1a537ebbe_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1a537e0a8_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4653669_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9671dbe:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _9215_part = *it;
			{
				jule::I32 _938_j = 0LL;;
				jule::Ptr<_1a4653669_TypeDecl> _948_t;
				({
					__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1a537e0a8_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1a4653669_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1a9671dbe:;
			++it;
			goto _iter_begin_1a9671dbe;
		}
		_iter_end_1a9671dbe:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a537ebbe_identGenerics(_1a537d9d1_typeBuilder* _self_) {
	jule::I32 _1043_first = (*((*(_self_))._field_i));;
	jule::I32 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a463d137_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1a9676456:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1a9676786:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1a96764cd:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1a9675631;
			};
		}
	_iter_next_1a9675631:;
	}
	_iter_end_1a9675631:;;
	jule::Slice<jule::Ptr<_1a463d137_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1207_parts;
	jule::Slice<_1e71b7487_Log> _12014_errors;
	({
		__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a536b749_parts(&(_1197_tokens), static_cast<jule::U32>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a537ee55_buildIdent(_1a537d9d1_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1a537e6a2_buildNamespace(_self_);;
	};
	jule::Ptr<_1a463d137_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a4653c74_IdentTypeDecl> _1337_it = jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a4653669_TypeDecl> _1397_itd = jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type77)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1a537e938_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a537e0a8_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a537e0a8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1a465403d_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1a465403d_SubIdentTypeDecl>(_1a465403d_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1a4653669_TypeDecl> _1587_ident = _1a537ee55_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a968240c:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1a4653c74_IdentTypeDecl>(&__jule_any_type77); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a967b813:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1a465403d_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1a9682385:;
	};
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type89)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a53801db_buildCppLink(_1a537d9d1_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1a537e0a8_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a4653669_TypeDecl> _1777_t = _1a537ee55_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1a4653c74_IdentTypeDecl>(&__jule_any_type77)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a5380472_buildFn(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a4665406_FnDecl> _1847_f = _1a5373ee3_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a466579c_IsAnon(_1847_f.ptr())))) {
		_1a537e0a8_pushErr(_self_, (*(_1847_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type67)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a5380708_buildPtr(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a537e0a8_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4655193_PtrTypeDecl>(_1a4655193_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type73)});;
	};
	jule::Ptr<_1a4653669_TypeDecl> _2157_elem = _1a538175e_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4655193_PtrTypeDecl>(_1a4655193_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a538098e_buildSptr(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a537e0a8_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a4653669_TypeDecl> _2367_elem = _1a538175e_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4654714_SptrTypeDecl>(_1a4654714_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a5380c25_buildSlc(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a4653669_TypeDecl> _2527_elem = _1a538175e_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4654a99_SlcTypeDecl>(_1a4654a99_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a5380eab_buildArr(_1a537d9d1_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a463d137_Token>> _2657_exprTokens = _1a536aec9_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a537e0a8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a4653669_TypeDecl> _2717_elem = _1a538175e_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4655935_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1a4655935_ArrTypeDecl>(_1a4655935_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1a465799d_Expr>(nullptr)});;
	jule::Ptr<_1a463d137_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1a536d9b0_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type71)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a5381242_buildMap(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a537e0a8_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a463d137_Token>> _3027_keyTokens = _1a536aec9_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a537e0a8_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1a537e0a8_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a4656183_MapTypeDecl> _3117_mapt = jule::new_ptr<_1a4656183_MapTypeDecl>(_1a4656183_MapTypeDecl{._field_Key=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1a4653669_TypeDecl>(nullptr)});;
	jule::I32 _3127_j = 0LL;;
	jule::Ptr<_1a4653669_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1a537e0a8_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1a4653669_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_assign_result = _1a536ee12_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type75)});;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a53814c8_buildEnumerable(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a537e0a8_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1a5380c25_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a5380eab_buildArr(_self_);;
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a538175e_step(_1a537d9d1_typeBuilder* _self_) {
	jule::Ptr<_1a463d137_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1a8ae3d47:;
			{
				return _1a537ee55_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a8ae4232:;
			{
				return _1a53801db_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a8ae4298:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1a4653669_TypeDecl> _3589_f = _1a5380472_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1a4665406_FnDecl>(&__jule_any_type67)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a8ae430e:;
			{
				return _1a5380472_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8ae4375:;
			{
				return _1a5380708_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8ae43ec:;
			{
				return _1a538098e_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a8ae4474:;
			{
				return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a4654714_SptrTypeDecl>(_1a4654714_SptrTypeDecl{._field_Elem=_1a538098e_buildSptr(_self_)}), &__jule_any_type74)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1a8ae44eb:;
			{
				return _1a53814c8_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1a8ae4573:;
			{
				return _1a5381242_buildMap(_self_);;
			}
		}
		_match_end_1a8ae3dbe:;
	};
	((*((*(_self_))._field_i)))++;
	_1a537e0a8_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool _1a53819e5_build(_1a537d9d1_typeBuilder* _self_) {
	__jule_tuple_x_1a4653669_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a4653669_TypeDecl> _3897_root = _1a538175e_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a537d21c_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1a4a0c5a0_CompileInfo_eq(_1a4a0c5a0_CompileInfo *_self_, _1a4a0c5a0_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1a4a0deec_pushErr(_1a4a0d969_directiveEval* _self_, jule::Ptr<_1a463d137_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1e71b7487_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1e71b7487_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1e71b78e9_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1a4a0e3e8_splitOperans(_1a4a0d969_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1a463d137_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1a463d137_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a8b1d06e:;
					{
						(_367_rangeN)++;
						goto _iter_next_1a8b1c5e0;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a8b1d39e:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1a8b1d0e6:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1a8b1c5e0;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1a8b1c5e0:;
	}
	_iter_end_1a8b1c5e0:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1a4a0deec_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a4a0e739_evalDirectiveIdent(_1a4a0d969_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b20e62:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1a8b20e62:;
			++it;
			goto _iter_begin_1a8b20e62;
		}
		_iter_end_1a8b20e62:;
	};
	return false;;
}



inline jule::Bool _1a4a0ea7a_evalDirectivePart(_1a4a0d969_directiveEval* _self_, jule::Slice<jule::Ptr<_1a463d137_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1a4a0deec_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1a4a0e739_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1a4a0ed11_eval(_1a4a0d969_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a4a0deec_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1047_logicalOrParts = _1a4a0e3e8_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b2697e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a463d137_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> _1118_logicalAndParts = _1a4a0e3e8_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b284a8:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a463d137_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1a463d137_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1a463d137_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1a4a0deec_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1a4a0ea7a_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1a8b284a8:;
						++it;
						goto _iter_begin_1a8b284a8;
					}
					_iter_end_1a8b284a8:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1a8b2697e:;
			++it;
			goto _iter_begin_1a8b2697e;
		}
		_iter_end_1a8b2697e:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1a5382c27_Importer> static__1a5383156_New(_1a4a0c5a0_CompileInfo _4416_info) {
	jule::Ptr<_1a5382c27_Importer> _457_imp = jule::new_ptr<_1a5382c27_Importer>(_1a5382c27_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ce79807a_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1a4a0ce30_initVars(&((*(_457_imp))._field_vars), &(_4416_info));
	return _457_imp;;
}



inline jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _1a53833dc_AllPackages(_1a5382c27_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a538382c_SetModPath(_1a5382c27_Importer* _self_, jule::Str _6126_path) {
	(*(_self_))._field_mod=_6126_path;
}



inline jule::Str _1a5383ab3_GetModPath(_1a5382c27_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a5383e04_ModById(_1a5382c27_Importer* _self_, jule::I32 _6919_id) {
	return (*(_self_))._field_mods[_6919_id];;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a5384245_GetImport(_1a5382c27_Importer* _self_, jule::Str _7325_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b2e921:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _7415_p = *it;
			{
				if (_1ce78d537_EqualFold((*(_7415_p))._field_Path, _7325_path)) {
					return _7415_p;;
				};
			}
			_iter_next_1a8b2e921:;
			++it;
			goto _iter_begin_1a8b2e921;
		}
		_iter_end_1a8b2e921:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log _1a5384641_ImportPackage(_1a5382c27_Importer* _self_, jule::Str _8329_path, jule::Bool _8340_updateMod) {
	__jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log __jule_func_result;
	jule::Slice<_1cd5ae502_Dir> _847_dirents = ({
		auto except = static__1ce791936_Read(_8329_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1e71b7487_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a538273d_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8329_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1cd5ae502_Dir>(nullptr);});
	});;
	if (_8340_updateMod) {
		jule::Str _894_newMod = _1a4825a6c_FindModuleFileDeep(_8329_path);;
		if ((_894_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_894_newMod;
			jule::Slice<_1e71b7487_Log> _929_errs = _1a4825d36_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_929_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _929_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a46517aa_AST>> _997_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a46517aa_AST>>::alloc(0LL, _847_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a46517aa_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_847_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b31b54:;
		if (it != expr_end) {
			_1cd5ae502_Dir _10010_dirent = *it;
			{
				if ((_1cd620d38_IsDir(&_10010_dirent._field_Stat) || (!(_1ce784550_HasSuffix(_10010_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1a8b31b54;
				};
				jule::Str _1064__path = _1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8329_path; (*it++) = _10010_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1a4643a11_Fileset> _1078_file = static__1a4643e62_New(_1064__path);;
				_1a464421a_Fill(_1078_file.ptr(), _1a5382430_readBuff((*_1078_file.alloc)._field_Path));
				jule::Slice<_1e71b7487_Log> _1098_errors = _1a4651359_Lex(_1078_file, static_cast<jule::I32>(0LL));;
				if ((_1098_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1098_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a53016ce_FileInfo> _1148_finfo = _1a534ba9d_ParseFile(_1078_file);;
				if (((*(_1148_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1148_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a4a0b747_isPassFileAnnotation(_10010_dirent._field_Name)))) {
					goto _iter_next_1a8b31b54;
				};
				jule::Bool _1244_r;
				jule::Slice<_1e71b7487_Log> _12411_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a5384d28_isPassBuildDirectives(_self_, &((*_1148_finfo.alloc)._field_Ast));
					_1244_r = __jule_assign_result.__jule_result_arg0;
					_12411_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12411_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12411_logs;
					return __jule_func_result;;
				};
				if ((!(_1244_r))) {
					goto _iter_next_1a8b31b54;
				};
				{ jule::Slice<jule::Ptr<_1a46517aa_AST>> &__jule_push_dest = _997_asts; __jule_push_dest.push((*_1148_finfo.alloc)._field_Ast); };
			}
			_iter_next_1a8b31b54:;
			++it;
			goto _iter_begin_1a8b31b54;
		}
		_iter_end_1a8b31b54:;
	};
	__jule_func_result.__jule_result_arg0 = _997_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a53848e9_Imported(_1a5382c27_Importer* _self_, jule::Ptr<_1a480c3d3_ImportInfo> _14028_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b33c88:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _14210_p = *it;
			{
				if ((((*(_14210_p))._field_Binded == (*(_14028_imp))._field_Binded) && _1ce78d537_EqualFold((*_14210_p.alloc)._field_Path, (*_14028_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1a8b33c88:;
			++it;
			goto _iter_begin_1a8b33c88;
		}
		_iter_end_1a8b33c88:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8b3add3:;
			if (it != expr_end) {
				jule::I32 _1508_i = it - expr->begin();
				jule::Str _15011_mod = *it;
				{
					if (((*(_self_))._field_mod == _15011_mod)) {
						(*_14028_imp.alloc)._field_ModId=_1508_i;
						goto _julec_label_1a8b3a531;
					};
				}
				_iter_next_1a8b3add3:;
				++it;
				_1508_i++;
				goto _iter_begin_1a8b3add3;
			}
			_iter_end_1a8b3add3:;
		};
		(*_14028_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1a8b3a531:;
	};
	{ jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14028_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1e71b7487_Log _1a5384d28_isPassBuildDirectives(_1a5382c27_Importer* _self_, jule::Ptr<_1a46517aa_AST>* _16742_file) {
	__jule_tuple_bool__jule_tuple_s_1e71b7487_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16742_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b33c44:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _16815_td = *it;
			{
				if (((*((*(_16815_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1a8b33c44;
				};
				_1a4a0d969_directiveEval _1728_de = _1a4a0d969_directiveEval{._field_logs=jule::Slice<_1e71b7487_Log>(nullptr), ._field_d=_16815_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1764_result = _1a4a0ed11_eval(&_1728_de);;
				if ((_1728_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1728_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1764_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1a8b33c44:;
			++it;
			goto _iter_begin_1a8b33c44;
		}
		_iter_end_1a8b33c44:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1a538905d_ExprInspector> static__1a538938d_New(void) {
	return jule::new_ptr<_1a538905d_ExprInspector>(_1a538905d_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1a5389646_args(_1a538905d_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b84d61:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1a53898ee_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1a8b84d61:;
			++it;
			goto _iter_begin_1a8b84d61;
		}
		_iter_end_1a8b84d61:;
	};
}



inline void _1a53898ee_inspect(_1a538905d_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a8b86280:;
			{
				jule::Ptr<_1a471198b_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1a471198b_BinaryExprModel>(&__jule_any_type113);;
				_1a53898ee_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1a53898ee_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a8b86406:;
			{
				jule::Ptr<_1a4711d65_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112);;
				_1a53898ee_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a8b862e6:;
			{
				jule::Ptr<_1a4712739_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1a4712739_StructLitExprModel>(&__jule_any_type97);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b8a76d:;
					if (it != expr_end) {
						jule::Ptr<_1a4712393_StructArgExprModel> _4416_arg = *it;
						{
							_1a53898ee_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1a8b8a76d:;
						++it;
						goto _iter_begin_1a8b8a76d;
					}
					_iter_end_1a8b8a76d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a8b866c0:;
			{
				jule::Ptr<_1a4712739_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1a4712a36_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b8be56:;
					if (it != expr_end) {
						jule::Ptr<_1a4712393_StructArgExprModel> _4916_arg = *it;
						{
							_1a53898ee_inspect(_self_, &((*((*(_4916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1a8b8be56:;
						++it;
						goto _iter_begin_1a8b8be56;
					}
					_iter_end_1a8b8be56:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a8b86736:;
			{
				jule::Ptr<_1a47130b9_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95);;
				_1a53898ee_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a8b8679c:;
			{
				jule::Ptr<_1a471396b_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30);;
				_1a53898ee_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1a5389646_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a8b86813:;
			{
				jule::Ptr<_1a4713d45_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1a4713d45_SliceExprModel>(&__jule_any_type79);;
				_1a5389646_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a8b86879:;
			{
				jule::Ptr<_1a4716c7c_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1a4716c7c_ArrayExprModel>(&__jule_any_type87);;
				_1a5389646_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a8b86901:;
			{
				jule::Ptr<_1a47142eb_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42);;
				_1a53898ee_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1a53898ee_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a8b86978:;
			{
				jule::Ptr<_1a4715055_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1a4715055_MapExprModel>(&__jule_any_type101);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b934e0:;
					if (it != expr_end) {
						jule::Ptr<_1a4714b7b_KeyValPairExprModel> _7116_entry = *it;
						{
							_1a53898ee_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1a53898ee_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1a8b934e0:;
						++it;
						goto _iter_begin_1a8b934e0;
					}
					_iter_end_1a8b934e0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a8b86a00:;
			{
				jule::Ptr<_1a47155d8_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1a47155d8_SlicingExprModel>(&__jule_any_type94);;
				_1a53898ee_inspect(_self_, &((*(_768_s))._field_Expr));
				_1a53898ee_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1a53898ee_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a8b86a77:;
			{
				jule::Ptr<_1a4715b6b_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1a4715b6b_TraitSubIdentExprModel>(&__jule_any_type99);;
				_1a53898ee_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8b86aee:;
			{
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				_1a53898ee_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a8b86b76:;
			{
				jule::Ptr<_1a4717079_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1a4717079_TupleExprModel>(&__jule_any_type83);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b980c7:;
					if (it != expr_end) {
						jule::Ptr<_1a48a2753_Data> _9016_d = *it;
						{
							_1a53898ee_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1a8b980c7:;
						++it;
						goto _iter_begin_1a8b980c7;
					}
					_iter_end_1a8b980c7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a8b86bed:;
			{
				jule::Ptr<_1a4717a4c_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1a4717a4c_BuiltinNewCallExprModel>(&__jule_any_type115);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1a53898ee_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8b86c75:;
			{
				jule::Ptr<_1a4717376_BuiltinPrintCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1a4717376_BuiltinPrintCallExprModel>(&__jule_any_type24);;
				_1a53898ee_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a8b86cec:;
			{
				jule::Ptr<_1a4717673_BuiltinPrintlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1a4717673_BuiltinPrintlnCallExprModel>(&__jule_any_type25);;
				_1a53898ee_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a8b86d74:;
			{
				jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1a4717e26_BuiltinPanicCallExprModel>(&__jule_any_type26);;
				_1a53898ee_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a8b86deb:;
			{
				jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1a4719a2c_BuiltinErrorCallExprModel>(&__jule_any_type20);;
				_1a53898ee_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a8b86e73:;
			{
				jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1a47183cc_BuiltinMakeCallExprModel>(&__jule_any_type116);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1a53898ee_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*_1118_b.alloc)._field_Cap != nullptr)) {
					_1a53898ee_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a8b86eea:;
			{
				jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1a47187a6_BuiltinAppendCallExprModel>(&__jule_any_type23);;
				_1a53898ee_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1a53898ee_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a8b87072:;
			{
				jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1a4718aa3_BuiltinLenCallExprModel>(&__jule_any_type117);;
				_1a53898ee_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a8b870e9:;
			{
				jule::Ptr<_1a4718da0_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1a4718da0_BuiltinCapCallExprModel>(&__jule_any_type118);;
				_1a53898ee_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a8b87171:;
			{
				jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1a4719279_BuiltinDeleteCallExprModel>(&__jule_any_type28);;
				_1a53898ee_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1a53898ee_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a8b871e8:;
			{
				jule::Ptr<_1a4719d29_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1a4719d29_SizeofExprModel>(&__jule_any_type119);;
				_1a53898ee_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a8b87270:;
			{
				jule::Ptr<_1a471a4cd_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1a471a4cd_AlignofExprModel>(&__jule_any_type120);;
				_1a53898ee_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a8b872e7:;
			{
				jule::Ptr<_1a471ad3b_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1a471ad3b_FreeExprModel>(&__jule_any_type29);;
				_1a53898ee_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8b8736e:;
			{
				jule::Ptr<_1a471aa3e_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1a471aa3e_BackendEmitExprModel>(&__jule_any_type22);;
				_1a5389646_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1a8b86219:;
	};
}



inline void _1a5389c62_Inspect(_1a538905d_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1a53898ee_inspect(_self_, _15228_m);
}








inline jule::Bool _1a5390d89_MetaStrBuilder_eq(_1a5390d89_MetaStrBuilder *_self_, _1a5390d89_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1a53912a7_Meta_eq(_1a53912a7_Meta *_self_, _1a53912a7_Meta _other_) {
	return 
		(_self_->_field_StrBuilder == _other_._field_StrBuilder) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1a53912a7_Meta> static__1a5391692_Collect(jule::Ptr<_1a53857a7_IR> _3624_ir) {
	jule::Ptr<_1a53912a7_Meta> _377_meta = jule::new_ptr<_1a53912a7_Meta>(_1a53912a7_Meta{._field_StrBuilder=jule::Ptr<_1a5390d89_MetaStrBuilder>(nullptr), ._field_EntryPoint=jule::Ptr<_1a471dc62_Fn>(nullptr)});;
	(*_377_meta.alloc)._field_StrBuilder=static__1a539195b_CollectStrBuilder(&(_3624_ir));
	return _377_meta;;
}



inline jule::Ptr<_1a5390d89_MetaStrBuilder> static__1a539195b_CollectStrBuilder(jule::Ptr<_1a53857a7_IR>* _4335_ir) {
	;
	;
	jule::Ptr<_1a480c3d3_ImportInfo> _467_p = _1a538ed99_SelectImport((*((*(_4335_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_467_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4676d30_StructIns> _507_b = _1a48d9207_Struct((*((*(_1a480d1e7_FindTypeAlias(_467_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1a5390d89_MetaStrBuilder> _517_meta = jule::new_ptr<_1a5390d89_MetaStrBuilder>(_1a5390d89_MetaStrBuilder{._field_Write=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1a4721d20_FnIns>(nullptr)});;
	;
	{
		(*_517_meta.alloc)._field_Write=(*(_1a4677dca_FindMethod(_507_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_517_meta.alloc)._field_WriteByte=(*(_1a4677dca_FindMethod(_507_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_517_meta.alloc)._field_WriteRune=(*(_1a4677dca_FindMethod(_507_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_517_meta.alloc)._field_WriteStr=(*(_1a4677dca_FindMethod(_507_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _517_meta;;
}












inline jule::Bool _1a623e4a6_specialCaseDefines_eq(_1a623e4a6_specialCaseDefines *_self_, _1a623e4a6_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1a623e71a_isAllMethodsLive(_1a623e4a6_specialCaseDefines* _self_, jule::Ptr<_1a4673ec5_Struct> _1928_s) {
	return ((_1928_s == (*(_self_))._field_runtime_Map) || (_1928_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1a6240276_ObjectDeadCode> static__1a62407e8_new(jule::Ptr<_1a53857a7_IR>* _3921_ir) {
	return jule::new_ptr<_1a6240276_ObjectDeadCode>(_1a6240276_ObjectDeadCode{._field_live=_1a623ecc0_liveTable{._field_vars=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1a4721d20_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1a4676d30_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1a4729476_Trait>>(nullptr)}, ._field_ir=(*(_3921_ir)), ._field_scd=_1a623e4a6_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1a4673ec5_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1a4673ec5_Struct>(nullptr)}});;
}



inline jule::Bool _1a96d27e2_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4676d30_StructIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1a4676d30_StructIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1a96d44d6:;
			{
				_4611_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1a96d43a4:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96d441a:;
		if (it != expr_end) {
			jule::I32 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1a96d441a:;
			++it;
			_577_i++;
			goto _iter_begin_1a96d441a;
		}
		_iter_end_1a96d441a:;
	};
	return false;;
}

inline jule::Bool _1a96d96d9_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4721d20_FnIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1a4721d20_FnIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1a96db323:;
			{
				_4611_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1a96db257:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96db2bd:;
		if (it != expr_end) {
			jule::I32 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1a96db2bd:;
			++it;
			_577_i++;
			goto _iter_begin_1a96db2bd;
		}
		_iter_end_1a96db2bd:;
	};
	return false;;
}

inline jule::Bool _1a970e4de_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4729476_Trait>* _4527_t) {
	jule::Slice<jule::Ptr<_1a4729476_Trait>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1a9711249:;
			{
				_4611_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1a97110a1:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9712316:;
		if (it != expr_end) {
			jule::I32 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1a9712316:;
			++it;
			_577_i++;
			goto _iter_begin_1a9712316;
		}
		_iter_end_1a9712316:;
	};
	return false;;
}

inline jule::Bool _1a9719719_isLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4852e51_Var>* _4527_t) {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1a971b133:;
			{
				_4611_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1a971b287:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a971bcc1:;
		if (it != expr_end) {
			jule::I32 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1a971bcc1:;
			++it;
			_577_i++;
			goto _iter_begin_1a971bcc1;
		}
		_iter_end_1a971bcc1:;
	};
	return false;;
}



inline void _1a96d4ecb_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4676d30_StructIns> _6532_t) {
	{
		
{
			_case_begin_1a96d687e:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4676d30_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1a96d563b:;
	};
}

inline void _1a96dcdc4_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4721d20_FnIns> _6532_t) {
	{
		
{
			_case_begin_1a96ddd3c:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4721d20_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1a96dd237:;
	};
}

inline void _1a970ee6d_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4729476_Trait> _6532_t) {
	{
		
{
			_case_begin_1a97133d3:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4729476_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1a9711b84:;
	};
}

inline void _1a971cb7e_pushLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4852e51_Var> _6532_t) {
	{
		
{
			_case_begin_1a971d8b6:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1a971c40e:;
	};
}



inline void _1a6241167_pushStructAsLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4676d30_StructIns>* _7838_s) {
	if (_1a96d27e2_isLive(_self_, _7838_s)) {
		return;;
	};
	_1a96d4ecb_pushLive(_self_, (*(_7838_s)));
	_1a6241420_setReferencesAsLive(_self_, &((*((*(_7838_s))))._field_Refers));
	jule::Bool _843_allLive = _1a623e71a_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_7838_s))))._field_Decl);;
	{
		auto expr = &((*((*(_7838_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96d7d03:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _8515_m = *it;
			{
				{
					auto expr = &((*(_8515_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a96d86c7:;
					if (it != expr_end) {
						jule::Ptr<_1a4721d20_FnIns> _8616_ins = *it;
						{
							if (_1a96d96d9_isLive(_self_, &(_8616_ins))) {
								goto _iter_next_1a96d86c7;
							};
							if (_843_allLive) {
								_1a96dcdc4_pushLive(_self_, _8616_ins);
								_1a6241420_setReferencesAsLive(_self_, &((*(_8616_ins))._field_Refers));
								goto _iter_next_1a96d86c7;
							};
							if (_1a538b8ce_IsTraitMethod(_7838_s, &(_8616_ins))) {
								_1a96dcdc4_pushLive(_self_, _8616_ins);
								_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Eq)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Gt)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_GtEq)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Lt)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_LtEq)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shl)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shr)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Add)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Sub)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Div)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mul)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mod)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAnd)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOr)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXor)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Neg)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Pos)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitNot)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_AddAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_SubAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_DivAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_MulAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ModAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShlAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShrAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOrAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAndAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXorAssign)) {
									_1a96dcdc4_pushLive(_self_, _8616_ins);
									_1a6241420_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1a471dc62_Fn> _1249__str = _1a4677dca_FindMethod((*(_7838_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1249__str != nullptr) && static__1a4854419_Str(_1249__str))) {
								jule::Ptr<_1a4721d20_FnIns> _12610_fins = (*_1249__str.alloc)._field_Instances[0LL];;
								_1a96dcdc4_pushLive(_self_, _12610_fins);
								_1a6241420_setReferencesAsLive(_self_, &((*(_12610_fins))._field_Refers));
							};
						}
						_iter_next_1a96d86c7:;
						++it;
						goto _iter_begin_1a96d86c7;
					}
					_iter_end_1a96d86c7:;
				};
			}
			_iter_next_1a96d7d03:;
			++it;
			goto _iter_begin_1a96d7d03;
		}
		_iter_end_1a96d7d03:;
	};
}



inline void _1a6241420_setReferencesAsLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a47ea3d2_ReferenceStack>* _13441_rs) {
	if (((*(_13441_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1387_i = 0LL;;
	for (; (_1387_i < _1a47eaab9_Len((*(_13441_rs)).ptr())); (_1387_i)++) {
		{
			jule::Any _1408_ref = _1a47eae0a_At((*(_13441_rs)).ptr(), _1387_i);;
			{
				auto &_match_expr{ _1408_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1a970d1d0:;
					{
						jule::Ptr<_1a4729476_Trait> _1439_t = _1408_ref.unsafe_cast_ptr<_1a4729476_Trait>();;
						if (_1a970e4de_isLive(_self_, &(_1439_t))) {
							goto _iter_next_1a970c366;
						};
						_1a970ee6d_pushLive(_self_, _1439_t);
						{
							auto expr = &((*(_1439_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a970de06:;
							if (it != expr_end) {
								jule::Ptr<_1a471dc62_Fn> _14817_ins = *it;
								{
									{
										auto expr = &((*(_14817_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a9712756:;
										if (it != expr_end) {
											jule::Ptr<_1a4721d20_FnIns> _14918_mins = *it;
											{
												if (_1a96d96d9_isLive(_self_, &(_14918_mins))) {
													goto _iter_next_1a9712756;
												};
												_1a96dcdc4_pushLive(_self_, _14918_mins);
												_1a6241420_setReferencesAsLive(_self_, &((*(_14918_mins))._field_Refers));
											}
											_iter_next_1a9712756:;
											++it;
											goto _iter_begin_1a9712756;
										}
										_iter_end_1a9712756:;
									};
								}
								_iter_next_1a970de06:;
								++it;
								goto _iter_begin_1a970de06;
							}
							_iter_end_1a970de06:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type63) {
					_case_begin_1a970d015:;
					{
						jule::Ptr<_1a4721d20_FnIns> _1589_f = _1408_ref.unsafe_cast_ptr<_1a4721d20_FnIns>();;
						if (_1a96d96d9_isLive(_self_, &(_1589_f))) {
							goto _match_end_1a970d08c;
						};
						if ((((*(_1589_f))._field_Owner != nullptr) && (!((*((*_1589_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1a96d27e2_isLive(_self_, &((*_1589_f.alloc)._field_Owner))))) {
								_1a96d4ecb_pushLive(_self_, (*_1589_f.alloc)._field_Owner);
								_1a6241420_setReferencesAsLive(_self_, &((*(*(_1589_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1a96dcdc4_pushLive(_self_, _1589_f);
						_1a6241420_setReferencesAsLive(_self_, &((*_1589_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1a970d246:;
					{
						jule::Ptr<_1a4852e51_Var> _1719_v = _1408_ref.unsafe_cast_ptr<_1a4852e51_Var>();;
						if (_1a9719719_isLive(_self_, &(_1719_v))) {
							goto _match_end_1a970d08c;
						};
						_1a971cb7e_pushLive(_self_, _1719_v);
						_1a6241420_setReferencesAsLive(_self_, &((*(_1719_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1a970d2ac:;
					{
						jule::Ptr<_1a4676d30_StructIns> _1789_s = _1408_ref.unsafe_cast_ptr<_1a4676d30_StructIns>();;
						_1a6241167_pushStructAsLive(_self_, &(_1789_s));
					}
				}
				_match_end_1a970d08c:;
			};
		}
	_iter_next_1a970c366:;
	}
	_iter_end_1a970c366:;;
}



inline void _1a62416c8_inits(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a480eb55_Package>* _18427_pkg) {
	{
		auto expr = &((*((*(_18427_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a970c564:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _18515_file = *it;
			{
				{
					auto expr = &((*(_18515_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9720c81:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _18616_f = *it;
						{
							if ((*(_18616_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a4721d20_FnIns> _18810_ins = (*(_18616_f))._field_Instances[0LL];;
								if ((!(_1a96d96d9_isLive(_self_, &(_18810_ins))))) {
									_1a96dcdc4_pushLive(_self_, _18810_ins);
								};
								_1a6241420_setReferencesAsLive(_self_, &((*(_18810_ins))._field_Refers));
							};
						}
						_iter_next_1a9720c81:;
						++it;
						goto _iter_begin_1a9720c81;
					}
					_iter_end_1a9720c81:;
				};
			}
			_iter_next_1a970c564:;
			++it;
			goto _iter_begin_1a970c564;
		}
		_iter_end_1a970c564:;
	};
}



inline void _1a6241981_collectLivePackage(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a480eb55_Package>* _19840_pkg) {
	_1a62416c8_inits(_self_, _19840_pkg);
	_1a53884ad_IterFiles(_19840_pkg, jule::__new_closure<void,jule::Ptr<_1a4725065_SymTab>*>((void*)__jule_anon_1a9723a64, jule::Ptr<__jule_anon_1a9723a64_ctx>::make(__jule_anon_1a9723a64_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9723a64_ctx_handler));
	if (_1ce7a06c0_Test) {
		if ((((*((*(_19840_pkg))))._field_Files.len() > 0LL) && _1a538bc53_IsStdPackage((*((*((*((*(_19840_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1a4673ec5_Struct> _2289_s = _1a4810d21_FindStruct((*(_19840_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1a4676d30_StructIns> _2299_ins = (*(_2289_s))._field_Instances[0LL];;
			_1a6241167_pushStructAsLive(_self_, &(_2299_ins));
			{
				auto expr = &((*(_2299_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a972a0a9:;
				if (it != expr_end) {
					jule::Ptr<_1a471dc62_Fn> _23117_m = *it;
					{
						{
							auto expr = &((*(_23117_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a972ab26:;
							if (it != expr_end) {
								jule::Ptr<_1a4721d20_FnIns> _23218_mins = *it;
								{
									if (_1a96d96d9_isLive(_self_, &(_23218_mins))) {
										goto _iter_next_1a972ab26;
									};
									_1a96dcdc4_pushLive(_self_, _23218_mins);
									_1a6241420_setReferencesAsLive(_self_, &((*(_23218_mins))._field_Refers));
								}
								_iter_next_1a972ab26:;
								++it;
								goto _iter_begin_1a972ab26;
							}
							_iter_end_1a972ab26:;
						};
					}
					_iter_next_1a972a0a9:;
					++it;
					goto _iter_begin_1a972a0a9;
				}
				_iter_end_1a972a0a9:;
			};
		};
		{
			auto expr = &((*((*(_19840_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9726c10:;
			if (it != expr_end) {
				jule::Ptr<_1a4725065_SymTab> _24116_file = *it;
				{
					{
						auto expr = &((*(_24116_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a972d2dd:;
						if (it != expr_end) {
							jule::Ptr<_1a471dc62_Fn> _24217_f = *it;
							{
								if (_1a538cea7_HasDirective(&((*(_24217_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1a4721d20_FnIns> _24411_ins = (*_24217_f.alloc)._field_Instances[0LL];;
									if ((!(_1a96d96d9_isLive(_self_, &(_24411_ins))))) {
										_1a96dcdc4_pushLive(_self_, _24411_ins);
									};
									_1a6241420_setReferencesAsLive(_self_, &((*(_24411_ins))._field_Refers));
								};
							}
							_iter_next_1a972d2dd:;
							++it;
							goto _iter_begin_1a972d2dd;
						}
						_iter_end_1a972d2dd:;
					};
				}
				_iter_next_1a9726c10:;
				++it;
				goto _iter_begin_1a9726c10;
			}
			_iter_end_1a9726c10:;
		};
	};
}



inline void _1a6241b7e_collectLive(jule::Ptr<_1a6240276_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a972ebc4:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _25615_used = *it;
			{
				if ((!((*(_25615_used))._field_Binded))) {
					_1a6241981_collectLivePackage(_self_, &((*_25615_used.alloc)._field_Package));
				};
			}
			_iter_next_1a972ebc4:;
			++it;
			goto _iter_begin_1a972ebc4;
		}
		_iter_end_1a972ebc4:;
	};
	_1a6241981_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1a471dc62_Fn> _2647_main = _1a481121c_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2647_main != nullptr)) {
		jule::Ptr<_1a4721d20_FnIns> _2668_ins = (*_2647_main.alloc)._field_Instances[0LL];;
		if ((!(_1a96d96d9_isLive(_self_, &(_2668_ins))))) {
			_1a96dcdc4_pushLive(_self_, _2668_ins);
		};
		_1a6241420_setReferencesAsLive(_self_, &((*(_2668_ins))._field_Refers));
	};
}



inline void _1a6241e37_removeDeadGlobals(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a4852e51_Var>>* _27439_vars) {
	jule::I32 _2757_i = 0LL;;
	while ((_2757_i < (*(_27439_vars)).len())) {
		{
			jule::Ptr<_1a4852e51_Var> _2774_v = (*(_27439_vars))[_2757_i];;
			if (_1a9719719_isLive(_self_, &(_2774_v))) {
				(_2757_i)++;
				goto _iter_next_1a9734c1d;
			};
			(*(_27439_vars))=jule::append((*(_27439_vars)).slice(0LL, _2757_i),(*(_27439_vars)).slice((_2757_i + 1LL)));
		}
	_iter_next_1a9734c1d:;
	}
	_iter_end_1a9734c1d:;;
}



inline void _1a62421e0_removeDeadFns(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a471dc62_Fn>>* _28635_funcs) {
	jule::I32 _2877_i = 0LL;;
	while ((_2877_i < (*(_28635_funcs)).len())) {
		{
			jule::Ptr<_1a471dc62_Fn> _2898_f = (*(_28635_funcs))[_2877_i];;
			jule::I32 _2908_j = 0LL;;
			while ((_2908_j < (*(_2898_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a4721d20_FnIns> _2925_ins = (*(_2898_f))._field_Instances[_2908_j];;
					if (_1a96d96d9_isLive(_self_, &(_2925_ins))) {
						(_2908_j)++;
						goto _iter_next_1a97375c2;
					};
					(*_2898_f.alloc)._field_Instances=jule::append((*_2898_f.alloc)._field_Instances.slice(0LL, _2908_j),(*_2898_f.alloc)._field_Instances.slice((_2908_j + 1LL)));
				}
			_iter_next_1a97375c2:;
			}
			_iter_end_1a97375c2:;;
			if (((*_2898_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_28635_funcs))=jule::append((*(_28635_funcs)).slice(0LL, _2877_i),(*(_28635_funcs)).slice((_2877_i + 1LL)));
				goto _iter_next_1a973677a;
			};
			(_2877_i)++;
		}
	_iter_next_1a973677a:;
	}
	_iter_end_1a973677a:;;
}



inline void _1a6242498_removeDeadStructs(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a4673ec5_Struct>>* _30739_structs) {
	jule::I32 _3087_i = 0LL;;
	while ((_3087_i < (*(_30739_structs)).len())) {
		{
			jule::Ptr<_1a4673ec5_Struct> _3108_s = (*(_30739_structs))[_3087_i];;
			jule::I32 _3118_j = 0LL;;
			while ((_3118_j < (*(_3108_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a4676d30_StructIns> _3139_ins = (*(_3108_s))._field_Instances[_3118_j];;
					_1a62421e0_removeDeadFns(_self_, &((*(_3139_ins))._field_Methods));
					if ((((*_3139_ins.alloc)._field_Methods.len() != 0LL) || _1a96d27e2_isLive(_self_, &(_3139_ins)))) {
						(_3118_j)++;
						goto _iter_next_1a973b274;
					};
					(*_3108_s.alloc)._field_Instances=jule::append((*_3108_s.alloc)._field_Instances.slice(0LL, _3118_j),(*_3108_s.alloc)._field_Instances.slice((_3118_j + 1LL)));
				}
			_iter_next_1a973b274:;
			}
			_iter_end_1a973b274:;;
			if (((*_3108_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_30739_structs))=jule::append((*(_30739_structs)).slice(0LL, _3087_i),(*(_30739_structs)).slice((_3087_i + 1LL)));
				goto _iter_next_1a973a42c;
			};
			(_3087_i)++;
		}
	_iter_next_1a973a42c:;
	}
	_iter_end_1a973a42c:;;
}



inline void _1a6242751_removeDeadTraits(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a4729476_Trait>>* _32938_traits) {
	jule::I32 _3307_i = 0LL;;
	while ((_3307_i < (*(_32938_traits)).len())) {
		{
			jule::Ptr<_1a4729476_Trait> _3328_t = (*(_32938_traits))[_3307_i];;
			if ((!(_1a970e4de_isLive(_self_, &(_3328_t))))) {
				(*(_32938_traits))=jule::append((*(_32938_traits)).slice(0LL, _3307_i),(*(_32938_traits)).slice((_3307_i + 1LL)));
				goto _iter_next_1a973eb3a;
			};
			jule::I32 _3378_j = 0LL;;
			while ((_3378_j < (*(_3328_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a4673ec5_Struct> _3395_s = (*(_3328_t))._field_Implemented[_3378_j];;
					if (((*(_3395_s))._field_Instances.len() > 0LL)) {
						(_3378_j)++;
						goto _iter_next_1a9740586;
					};
					(*_3328_t.alloc)._field_Implemented=jule::append((*_3328_t.alloc)._field_Implemented.slice(0LL, _3378_j),(*_3328_t.alloc)._field_Implemented.slice((_3378_j + 1LL)));
				}
			_iter_next_1a9740586:;
			}
			_iter_end_1a9740586:;;
			(_3307_i)++;
		}
	_iter_next_1a973eb3a:;
	}
	_iter_end_1a973eb3a:;;
}



inline void _1a6242a09_removeDeadsFile(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a4725065_SymTab>* _35037_file) {
	_1a62421e0_removeDeadFns(_self_, &((*((*(_35037_file))))._field_Funcs));
	_1a6242498_removeDeadStructs(_self_, &((*((*(_35037_file))))._field_Structs));
	_1a6242751_removeDeadTraits(_self_, &((*((*(_35037_file))))._field_Traits));
	_1a6241e37_removeDeadGlobals(_self_, &((*((*(_35037_file))))._field_Vars));
}



inline void _1a6242cb2_removeDeadsPackage(jule::Ptr<_1a6240276_ObjectDeadCode> _self_, jule::Ptr<_1a480eb55_Package>* _35740_pkg) {
	{
		auto expr = &((*((*(_35740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974514b:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _35815_file = *it;
			{
				_1a6242a09_removeDeadsFile(_self_, &(_35815_file));
			}
			_iter_next_1a974514b:;
			++it;
			goto _iter_begin_1a974514b;
		}
		_iter_end_1a974514b:;
	};
}



inline void _1a6242eb0_removeDeads(jule::Ptr<_1a6240276_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97458dd:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _36415_used = *it;
			{
				if ((!((*(_36415_used))._field_Binded))) {
					_1a6242cb2_removeDeadsPackage(_self_, &((*_36415_used.alloc)._field_Package));
				};
			}
			_iter_next_1a97458dd:;
			++it;
			goto _iter_begin_1a97458dd;
		}
		_iter_end_1a97458dd:;
	};
	_1a6242cb2_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1a62431ad_collectSpecialCaseDefines(jule::Ptr<_1a6240276_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1a4967142_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1a4967142_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1a62433ab_elimanate(jule::Ptr<_1a6240276_ObjectDeadCode> _self_) {
	_1a62431ad_collectSpecialCaseDefines(_self_);
	_1a6241b7e_collectLive(_self_);
	_1a6242eb0_removeDeads(_self_);
}








inline jule::Bool _1a62442e1_scopeDeadCode_eq(_1a62442e1_scopeDeadCode *_self_, _1a62442e1_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1a624480d_optimizeChild(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cba34_Scope>* _1935_s) {
	jule::Ptr<_1a62442e1_scopeDeadCode> _207_sdc = jule::new_ptr<_1a62442e1_scopeDeadCode>(_1a62442e1_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a6247228_optimizeStmts(_207_sdc);
	};
}



inline void _1a6244ab6_optimizeBodyChildExceptional(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cba34_Scope>* _2950_s) {
	jule::Ptr<_1a62442e1_scopeDeadCode> _307_sdc = jule::new_ptr<_1a62442e1_scopeDeadCode>(_1a62442e1_scopeDeadCode{._field_parent=jule::Ptr<_1a62442e1_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a6247228_optimizeStmts(_307_sdc);
	};
}



inline void _1a6244d6e_optimizeBodyChild(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cba34_Scope>* _3939_s) {
	jule::Ptr<_1a62442e1_scopeDeadCode> _407_sdc = jule::new_ptr<_1a62442e1_scopeDeadCode>(_1a62442e1_scopeDeadCode{._field_parent=jule::Ptr<_1a62442e1_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a6247228_optimizeStmts(_407_sdc);
	};
}



inline void _1a6245127_optimizeExprModel(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1a6248878_exprDeadCode _493_edc = static__1a6248c96_new(&(_self_));;
	_1a624904e_optimize(&_493_edc, _4839_model);
}



inline void _1a6245325_eliminateFollowed(_1a62442e1_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a62442e1_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*_607_parent.alloc)._field_parent;
		}
	_iter_next_1a9757c74:;
	}
	_iter_end_1a9757c74:;;
}



inline void _1a62455cd_pushGoto(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cebe1_GotoSt> _6929_gt) {
	jule::I32 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1a975b0a7:;
	}
	_iter_end_1a975b0a7:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1a6245886_pushLabel(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47ce581_Label> _7930_l) {
	jule::I32 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1a975d2a7;
			};
			(_807_i)++;
		}
	_iter_next_1a975d2a7:;
	}
	_iter_end_1a975d2a7:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47ce581_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1a6245b3e_optimizeRangeIter(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cd86b_RangeIter> _9238_it) {
	_1a6245127_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1a6244d6e_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1a6245de7_optimizeWhileIter(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cce20_WhileIter> _9738_it) {
	_1a6245127_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1a624702a_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1a6244d6e_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1a62461a0_optimizeInfIter(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cc969_InfIter> _10536_it) {
	_1a6244d6e_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1a6246458_optimizeConditional(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47cc66c_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a976506c:;
		if (it != expr_end) {
			jule::Ptr<_1a47cbe52_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1a6245127_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1a6244d6e_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1a976506c:;
			++it;
			goto _iter_begin_1a976506c;
		}
		_iter_end_1a976506c:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a624480d_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1a6244d6e_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a6246711_optimizeMatch(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47d1264_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9768603:;
		if (it != expr_end) {
			jule::Ptr<_1a47d1c8c_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9769082:;
					if (it != expr_end) {
						jule::Ptr<_1a48a2753_Data> _12916_expr = *it;
						{
							_1a6245127_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1a9769082:;
						++it;
						goto _iter_begin_1a9769082;
					}
					_iter_end_1a9769082:;
				};
				_1a6244d6e_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1a9768603:;
			++it;
			goto _iter_begin_1a9768603;
		}
		_iter_end_1a9768603:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1a624480d_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1a6244d6e_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a62469b9_optimizeAssign(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47d0571_Assign> _14535_assign) {
	_1a6245127_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1a6245127_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1a6246c72_optimizeMultiAssign(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Ptr<_1a47d0a27_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a976d44e:;
		if (it != expr_end) {
			jule::Ptr<_1a48a2753_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1a6245127_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1a976d44e:;
			++it;
			goto _iter_begin_1a976d44e;
		}
		_iter_end_1a976d44e:;
	};
	_1a6245127_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1a624702a_optimizeStmt(jule::Ptr<_1a62442e1_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a97700ee:;
			{
				jule::Ptr<_1a47cba34_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1a47cba34_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1a6247525_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1a624480d_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a976ed68:;
			{
				_1a6245b3e_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1a47cd86b_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a9770176:;
			{
				_1a6245de7_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1a47cce20_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a97701ed:;
			{
				_1a62461a0_optimizeInfIter(_self_, _15933_st.cast_ptr<_1a47cc969_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a9770275:;
			{
				_1a6246458_optimizeConditional(_self_, _15933_st.cast_ptr<_1a47cc66c_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a97702ec:;
			{
				_1a6246711_optimizeMatch(_self_, _15933_st.cast_ptr<_1a47d1264_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a9770374:;
			{
				_1a62469b9_optimizeAssign(_self_, _15933_st.cast_ptr<_1a47d0571_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a97703eb:;
			{
				_1a6246c72_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1a47d0a27_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a9770473:;
			{
				jule::Ptr<_1a48a2753_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1a48a2753_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1a976ee9a;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_1a9775c09:;
						{
							_1a6245325_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1a977637a:;
						{
							_1a6245127_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1a9776314:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a97704ea:;
			{
				_1a6245325_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a9770572:;
			{
				_1a62455cd_pushGoto(_self_, _15933_st.cast_ptr<_1a47cebe1_GotoSt>(&__jule_any_type38));
				_1a6245325_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a97705e9:;
			{
				_1a6245886_pushLabel(_self_, _15933_st.cast_ptr<_1a47ce581_Label>(&__jule_any_type18));
			}
		}
		_match_end_1a976ee9a:;
	};
}



inline void _1a6247228_optimizeStmts(jule::Ptr<_1a62442e1_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a624702a_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1a977905e:;
	}
	_iter_end_1a977905e:;;
}








inline jule::Bool _1a6248878_exprDeadCode_eq(_1a6248878_exprDeadCode *_self_, _1a6248878_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1a6248878_exprDeadCode static__1a6248c96_new(jule::Ptr<_1a62442e1_scopeDeadCode>* _1421_s) {
	return _1a6248878_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1a624904e_optimize(_1a6248878_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1a538905d_ExprInspector> _217_inspector = static__1a538938d_New();;
	_1a5389c62_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1a977bbaa, jule::Ptr<__jule_anon_1a977bbaa_ctx>::make(__jule_anon_1a977bbaa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a977bbaa_ctx_handler));
}








inline jule::Bool _1a6130001_ExceptionalForwardingExprModel_eq(_1a6130001_ExceptionalForwardingExprModel *_self_, _1a6130001_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a61301dd_FnCallIgnoreExceptionalExprModel_eq(_1a61301dd_FnCallIgnoreExceptionalExprModel *_self_, _1a61301dd_FnCallIgnoreExceptionalExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a6130584_SwapExprModel_eq(_1a6130584_SwapExprModel *_self_, _1a6130584_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a61309a2_EmptyCompareExprModel_eq(_1a61309a2_EmptyCompareExprModel *_self_, _1a61309a2_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1a6130c9e_RefExprModel_eq(_1a6130c9e_RefExprModel *_self_, _1a6130c9e_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1a6131255_StrCompExprModel_eq(_1a6131255_StrCompExprModel *_self_, _1a6131255_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1a61317d8_MutSlicingExprModel_eq(_1a61317d8_MutSlicingExprModel *_self_, _1a61317d8_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a6131b6d_UnsafeBinaryExprModel_eq(_1a6131b6d_UnsafeBinaryExprModel *_self_, _1a6131b6d_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a6131e6a_UnsafeIndexingExprModel_eq(_1a6131e6a_UnsafeIndexingExprModel *_self_, _1a6131e6a_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a6132344_PushToSliceExprModel_eq(_1a6132344_PushToSliceExprModel *_self_, _1a6132344_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1a613271d_AppendToSliceExprModel_eq(_1a613271d_AppendToSliceExprModel *_self_, _1a613271d_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1a6132ae7_StrRuneIter_eq(_1a6132ae7_StrRuneIter *_self_, _1a6132ae7_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1a6132de4_UnsafeDerefExprModel_eq(_1a6132de4_UnsafeDerefExprModel *_self_, _1a6132de4_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a61331e1_UnsafeCastingExprModel_eq(_1a61331e1_UnsafeCastingExprModel *_self_, _1a61331e1_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a6133d18_nilVar_eq(_1a6133d18_nilVar *_self_, _1a6133d18_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1a61345ee_pushVar(_1a6134159_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1a614be85_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9940940:;
		if (it != expr_end) {
			_1a6133d18_nilVar _2815_v = *it;
			{
				if ((_2815_v._field_var == _2323_var)) {
					_2815_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1a9940940:;
			++it;
			goto _iter_begin_1a9940940;
		}
		_iter_end_1a9940940:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99417cb:;
		if (it != expr_end) {
			_1a6133d18_nilVar _3515_v = *it;
			{
				if ((_3515_v._field_var == 0LLU)) {
					_3515_v._field_var=_2323_var;
					_3515_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1a99417cb:;
			++it;
			goto _iter_begin_1a99417cb;
		}
		_iter_end_1a99417cb:;
	};
	{ jule::Slice<_1a6133d18_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a6133d18_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1a6134940_removeVar(_1a6134159_nils* _self_, jule::Uintptr _4625_var) {
	if ((_4625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9150837:;
			if (it != expr_end) {
				_1a6133d18_nilVar _4816_v = *it;
				{
					if ((_4816_v._field_var == _4625_var)) {
						_4816_v._field_var=0LLU;
						_4816_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1a9150837:;
				++it;
				goto _iter_begin_1a9150837;
			}
			_iter_end_1a9150837:;
		};
	};
	return false;;
}



inline jule::Bool _1a6134c81_isSafe(_1a6134159_nils* _self_, jule::Uintptr _6022_var) {
	if ((_6022_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9151b35:;
			if (it != expr_end) {
				_1a6133d18_nilVar _6211_v = *it;
				{
					if ((_6211_v._field_var == _6022_var)) {
						return _6211_v._field_safe;;
					};
				}
				_iter_next_1a9151b35:;
				++it;
				goto _iter_begin_1a9151b35;
			}
			_iter_end_1a9151b35:;
		};
	};
	return false;;
}








inline jule::Bool _1a6136cc7_scopeOptimizer_eq(_1a6136cc7_scopeOptimizer *_self_, _1a6136cc7_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1a6136cc7_scopeOptimizer> static__1a6137338_new(jule::Ptr<_1a47cba34_Scope> _2320_scope) {
	jule::Ptr<_1a6136cc7_scopeOptimizer> _247_sc = jule::new_ptr<_1a6136cc7_scopeOptimizer>(_1a6136cc7_scopeOptimizer{._field_parent=jule::Ptr<_1a6136cc7_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1a6146d3c_data>(_1a6146d3c_data{._field_boundary=jule::new_ptr<_1a6148624_boundary>(_1a6148624_boundary{._field_vars=jule::Slice<_1a61482d3_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1a6134159_nils>(_1a6134159_nils{._field_vars=jule::Slice<_1a6133d18_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1a6143e5a_dynamic>(_1a6143e5a_dynamic{._field_vars=jule::Slice<_1a6143b19_dynamicVar>(nullptr)}), ._field_flags=0LL})});;
	return _247_sc;;
}



inline void _1a61375e1_setCurrentStmt(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1a61377de_removeCurrent(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a6137a75_isLastStmt(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_) {
	jule::Ptr<_1a6136cc7_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*_457_r.alloc)._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1a915dd84:;
	}
	_iter_end_1a915dd84:;;
	return true;;
}



inline jule::Bool _1a6137d0b_isIter(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_) {
	jule::Ptr<_1a6136cc7_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*_557_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_1a91616d3:;
					{
						return true;;
					}
				}
				_match_end_1a9161639:;
			};
		}
	_iter_next_1a91602b4:;
	}
	_iter_end_1a91602b4:;;
	return false;;
}



inline void _1a61380b4_optimizeData(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a48a2753_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9162915:;
			{
				jule::Ptr<_1a471396b_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1a471396b_FnCallExprModel>();;
				if (_1ce7a1083_Production) {
					if (((!(_1a47232d8_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1a538bc53_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1a61375e1_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a613dd45_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a614d409_Exceptional && (*(*((*(_708_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a538a9dd_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1a6137a75_isLastStmt(_self_)) && (!(_1a6137d0b_isIter(_self_))))) {
					_1a61375e1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a6130001_ExceptionalForwardingExprModel>(_1a6130001_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1a916288d:;
	};
	jule::I32 _943_dataFlags = (*((*_self_.alloc)._field_data))._field_flags;;
	(*(*(_self_))._field_data.alloc)._field_flags|=static_cast<jule::I32>(1LL);
	static__1a613dd45_optimizeData(&((*_6733_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
	(*(*(_self_))._field_data.alloc)._field_flags=_943_dataFlags;
}



inline void _1a613836c_optimizeVar(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a4852e51_Var> _10032_v) {
	if (((*(_10032_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a61357ba_isNilValidType((*((*_10032_v.alloc)._field_TypeSym))._field_Type)) && _1a6135501_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a61345ee_pushVar((*((*(_self_))._field_data))._field_nils, _1a6135b0b_getNilVar(jule::Any(_10032_v, &__jule_any_type7)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a48d54cd_Type> _1099_kind = _1a6145731_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_10032_v))._field_TypeSym.alloc)._field_Type, (*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1099_kind != nullptr)) {
				if (_1a6145302_isDynamicValidType((*(*(_10032_v))._field_TypeSym.alloc)._field_Type)) {
					_1a6144400_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a6145a72_getDynamicVar(jule::Any(_10032_v, &__jule_any_type7)), _1099_kind);
				};
			};
		};
		static__1a613dd45_optimizeData(&((*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a6138625_optimizeConditional(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cc66c_Conditional> _12140_c) {
	_1a6146765_dataCheckpoint _1227_checkpoint = _1a61471e4_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9175153:;
		if (it != expr_end) {
			jule::Ptr<_1a47cbe52_If> _12315_elif = *it;
			{
				static__1a613dd45_optimizeData(&((*(_12315_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a613b2a4_optimizeChild(_self_, (*_12315_elif.alloc)._field_Scope);
				if ((((*(_12140_c))._field_Elifs.len() > 1LL) || ((*_12140_c.alloc)._field_Default != nullptr))) {
					_1a614749c_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
				};
			}
			_iter_next_1a9175153:;
			++it;
			goto _iter_begin_1a9175153;
		}
		_iter_end_1a9175153:;
	};
	if (((*_12140_c.alloc)._field_Default != nullptr)) {
		_1a613b2a4_optimizeChild(_self_, (*(*(_12140_c))._field_Default.alloc)._field_Scope);
		_1a614749c_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
	};
	if ((!(_1a614c8ae_Cond))) {
		return;;
	};
	jule::Bool _1397_constCase = false;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9178cd3:;
		if (it != expr_end) {
			jule::I32 _1428_i = it - expr->begin();
			jule::Ptr<_1a47cbe52_If> _14215_elif = *it;
			{
				if ((!(_1a613b837_isConstantValidConditionalCase(&(_14215_elif))))) {
					goto _iter_next_1a9178cd3;
				};
				_1397_constCase=true;
				((*(_12140_c))._field_Elifs).mut_slice(0LL, _1428_i);;
				(*_12140_c.alloc)._field_Default=jule::new_ptr<_1a47cc24e_Else>(_1a47cc24e_Else{._field_Scope=(*(_14215_elif))._field_Scope});
				goto _iter_end_1a9178cd3;
			}
			_iter_next_1a9178cd3:;
			++it;
			_1428_i++;
			goto _iter_begin_1a9178cd3;
		}
		_iter_end_1a9178cd3:;
	};
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a47cbe52_If>* _1597_i = (&((*(_12140_c))._field_Elifs[0LL]));;
	jule::Ptr<_1a47cbe52_If>* _1603_end = (&((*_12140_c.alloc)._field_Elifs[((*_12140_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1597_i <= _1603_end); (_1597_i)++) {
		{
			{
				if (_1a613c250_isUnreachableConditionalCase(&((*(_1597_i))))) {
					(*(_1597_i))=nullptr;
				};
			};
		}
	_iter_next_1a917c3ad:;
	}
	_iter_end_1a917c3ad:;;
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1397_constCase))) {
		return;;
	};
	jule::I32 _1787_only = -1LL;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a917dcb6:;
		if (it != expr_end) {
			jule::I32 _1797_j = it - expr->begin();
			jule::Ptr<_1a47cbe52_If> _17910_elif = *it;
			{
				if ((_17910_elif != nullptr)) {
					if ((_1787_only != -1LL)) {
						return;;
					};
					_1787_only=_1797_j;
				};
			}
			_iter_next_1a917dcb6:;
			++it;
			_1797_j++;
			goto _iter_begin_1a917dcb6;
		}
		_iter_end_1a917dcb6:;
	};
	if ((_1787_only != -1LL)) {
		_1a61375e1_setCurrentStmt(_self_, jule::Any((*((*_12140_c.alloc)._field_Elifs[_1787_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1a6138a43_buildDefaultConstantTrueCase(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d1c8c_Case> _19549_case, jule::I32* _19573_i, jule::Ptr<_1a47d1264_Match>* _19586_m) {
	(*(_19549_case))._field_Exprs=nullptr;
	jule::I32 _1973_start = (*(_19573_i));;
	_julec_label_1a9181cec:;
	for (;;) {
		{
			if (((*((*_19549_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a9181c97;
			};
			jule::Any *_2039_stmt = &((*(*(_19549_case))._field_Scope.alloc)._field_Stmts[((*(*(_19549_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2039_stmt)) };
				
				if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1a9183c11:;
					{
						((*(_19573_i)))++;
						if (((*(_19573_i)) >= (*((*(_19586_m))))._field_Cases.len())) {
							(*(_2039_stmt))=jule::Any((*((*((*(_19586_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_1a9181c97;
						};
						_19549_case=(*((*(_19586_m))))._field_Cases[(*(_19573_i))];
						(*(_2039_stmt))=jule::Any((*_19549_case.alloc)._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_1a9183cdd:;
					{
						goto _iter_end_1a9181c97;
					}
				}
				_match_end_1a9183b9a:;
			};
		}
	_iter_next_1a9181c97:;
	}
	_iter_end_1a9181c97:;;
	(*((*(_19586_m))))._field_Default=(*((*(_19586_m))))._field_Cases[_1973_start];
	((*((*(_19586_m))))._field_Cases).mut_slice(0LL, _1973_start);;
}



inline void _1a6138ceb_optimizeMatch(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d1264_Match> _22134_m) {
	jule::Uintptr _2227_var = 0LLU;;
	if ((_1a614d96a_Dynamic && (*(_22134_m))._field_TypeMatch)) {
		_2227_var=_1a6145a72_getDynamicVar((*((*_22134_m.alloc)._field_Expr))._field_Model);
	};
	_1a6146765_dataCheckpoint _2267_checkpoint = _1a61471e4_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9187b7c:;
		if (it != expr_end) {
			jule::Ptr<_1a47d1c8c_Case> _22715_case = *it;
			{
				{
					auto expr = &((*(_22715_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9188573:;
					if (it != expr_end) {
						jule::Ptr<_1a48a2753_Data> _22816_expr = *it;
						{
							static__1a613dd45_optimizeData(&((*(_22816_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1a9188573:;
						++it;
						goto _iter_begin_1a9188573;
					}
					_iter_end_1a9188573:;
				};
				if ((((*_22715_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a48d54cd_Type> _2339_kind = _1a6145731_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_22715_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2339_kind != nullptr)) {
						_1a6144400_pushVar((*((*(_self_))._field_data))._field_dynamic, _2227_var, _2339_kind);
					} else {
						_1a6144741_removeVar((*((*(_self_))._field_data))._field_dynamic, _2227_var);
					};
				};
				_1a613b2a4_optimizeChild(_self_, (*_22715_case.alloc)._field_Scope);
				if ((((*_22134_m.alloc)._field_Cases.len() > 1LL) || ((*_22134_m.alloc)._field_Default != nullptr))) {
					_1a614749c_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
				};
			}
			_iter_next_1a9187b7c:;
			++it;
			goto _iter_begin_1a9187b7c;
		}
		_iter_end_1a9187b7c:;
	};
	if (((*_22134_m.alloc)._field_Default != nullptr)) {
		_1a613b2a4_optimizeChild(_self_, (*(*(_22134_m))._field_Default.alloc)._field_Scope);
		_1a614749c_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
	};
	if ((!(_1a614c8ae_Cond))) {
		return;;
	};
	jule::Bool _2547_constCase = false;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919016d:;
		if (it != expr_end) {
			jule::I32 _25712_i = it - expr->begin();
			jule::Ptr<_1a47d1c8c_Case> _25719_case = *it;
			{
				if ((!(_1a613be0e_isConstantValidMatchCase(&(_25719_case))))) {
					goto _iter_next_1a919016d;
				};
				_2547_constCase=true;
				_1a6138a43_buildDefaultConstantTrueCase(_self_, _25719_case, &(_25712_i), &(_22134_m));
				goto _iter_end_1a919016d;
			}
			_iter_next_1a919016d:;
			++it;
			_25712_i++;
			goto _iter_begin_1a919016d;
		}
		_iter_end_1a919016d:;
	};
	if (((*_22134_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a47d1c8c_Case>* _2717_i = (&((*(_22134_m))._field_Cases[0LL]));;
	jule::Ptr<_1a47d1c8c_Case>* _2723_end = (&((*_22134_m.alloc)._field_Cases[((*_22134_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2717_i <= _2723_end); (_2717_i)++) {
		{
			{
				if (_1a613c4d6_isUnreachableMatchCase(&((*(_2717_i))))) {
					(*(_2717_i))=nullptr;
				};
			};
		}
	_iter_next_1a9192c31:;
	}
	_iter_end_1a9192c31:;;
	if ((!(_2547_constCase))) {
		return;;
	};
	jule::I32 _2867_only = -1LL;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919400c:;
		if (it != expr_end) {
			jule::I32 _2877_j = it - expr->begin();
			jule::Ptr<_1a47d1c8c_Case> _28710_case = *it;
			{
				if ((_28710_case != nullptr)) {
					if ((_2867_only != -1LL)) {
						return;;
					};
					_2867_only=_2877_j;
				};
			}
			_iter_next_1a919400c:;
			++it;
			_2877_j++;
			goto _iter_begin_1a919400c;
		}
		_iter_end_1a919400c:;
	};
	if ((_2867_only != -1LL)) {
		_1a61375e1_setCurrentStmt(_self_, jule::Any((*((*_22134_m.alloc)._field_Cases[_2867_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1a61390a4_optimizeRangeIter(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cd86b_RangeIter> _30338_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30338_it))._field_KeyA != nullptr))) {
		_1a6148ab9_pushVar((*((*(_self_))._field_data))._field_boundary, _1a614aa55_getBoundaryVar((*((*_30338_it.alloc)._field_Expr))._field_Model), jule::Any((*_30338_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1a613b2a4_optimizeChild(_self_, (*_30338_it.alloc)._field_Scope);
	if (_1a614d6b2_Iter) {
		{
			auto &_match_expr{ (*((*(_30338_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1a9198c26:;
				{
					jule::Ptr<_1a47130b9_CastingExprModel> _3159_cem = (*((*(_30338_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a47130b9_CastingExprModel>();;
					jule::Ptr<_1a48dd5e6_Prim> _3165_eprim = _1a48d7b84_Prim((*(_3159_cem))._field_ExprType.ptr());;
					if (((_3165_eprim == nullptr) || (!(_1a48e1ab1_IsStr(_3165_eprim.ptr()))))) {
						goto _match_end_1a9198b9e;
					};
					jule::Ptr<_1a48e2ae5_Slc> _3209_s = _1a48d8bda_Slc((*_3159_cem.alloc)._field_Type.ptr());;
					if ((_3209_s == nullptr)) {
						goto _match_end_1a9198b9e;
					};
					jule::Ptr<_1a48dd5e6_Prim> _3245_prim = _1a48d7b84_Prim((*(_3209_s))._field_Elem.ptr());;
					if ((_3245_prim == nullptr)) {
						goto _match_end_1a9198b9e;
					};
					{
						
						if (_1a48e0021_IsU8(_3245_prim.ptr())) {
							_case_begin_1a919c631:;
							{
								(*_30338_it.alloc)._field_Expr=(*_3159_cem.alloc)._field_Expr;
							}
						}
						else if (_1a48dea04_IsI32(_3245_prim.ptr())) {
							_case_begin_1a919c80c:;
							{
								static__1a613dd45_optimizeData(&((*((*_3159_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a61375e1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a6132ae7_StrRuneIter>(_1a6132ae7_StrRuneIter{._field_Expr=(*_3159_cem.alloc)._field_Expr, ._field_Base=_30338_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1a919c444:;
					};
				}
			}
			_match_end_1a9198b9e:;
		};
	};
	static__1a613dd45_optimizeData(&((*(*(_30338_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a613935c_optimizeWhileIter(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cce20_WhileIter> _34838_it) {
	static__1a613dd45_optimizeData(&((*(_34838_it))._field_Expr), &((*(_self_))._field_data));
	_1a613aeeb_optimizeStmt(_self_, (*_34838_it.alloc)._field_Next);
	_1a613b2a4_optimizeChild(_self_, (*_34838_it.alloc)._field_Scope);
}



inline jule::Bool _1a613969d_substr(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _35427_a) {
	if (((*((*(_35427_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_35427_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a91a51d8:;
			{
				jule::Ptr<_1a47155d8_SlicingExprModel> _3608_sem = (*((*(_35427_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a47155d8_SlicingExprModel>();;
				if (_1a612e484_equalModels((*((*_35427_a.alloc)._field_Left))._field_Model, (*(_3608_sem))._field_Expr)) {
					_1a61375e1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a61317d8_MutSlicingExprModel>(_1a61317d8_MutSlicingExprModel{._field_Token=(*_3608_sem.alloc)._field_Token, ._field_Expr=(*_3608_sem.alloc)._field_Expr, ._field_Left=(*_3608_sem.alloc)._field_Left, ._field_Right=(*_3608_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1a91a5161:;
	};
	return false;;
}



inline jule::Bool _1a61399de_strAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _37430_a) {
	if ((!(_1a614cb01_Str))) {
		return false;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _3783_lp = _1a48d7b84_Prim((*((*(_37430_a))._field_Left))._field_Type.ptr());;
	if (((_3783_lp == nullptr) || (!(_1a48e1ab1_IsStr(_3783_lp.ptr()))))) {
		return false;;
	};
	return _1a613969d_substr(_self_, _37430_a);;
}



inline jule::Bool _1a6139d30_sliceAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _38532_a) {
	if (((!(_1a614cd98_Slice)) || (_1a48d8bda_Slc((*((*(_38532_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1a613969d_substr(_self_, _38532_a);;
}



inline void _1a613a0d8_optimizePostfix(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d00ba_Postfix> _39336_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a614a208_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_39336_postfix))._field_Expr);
	};
	static__1a613dd45_optimizeData(&((*_39336_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a613a391_optimizeAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0571_Assign> _40035_assign) {
	if ((((*((*(_40035_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1a612e484_equalModels((*((*_40035_assign.alloc)._field_Left))._field_Model, (*((*_40035_assign.alloc)._field_Right))._field_Model))) {
		_1a61377de_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a614a4c2_isBoundaryRiskyType((*(*(_40035_assign))._field_Left.alloc)._field_Type)) {
			_1a614a208_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_40035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1a6135501_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_40035_assign))._field_Right.alloc)._field_Model)) {
			if (_1a61357ba_isNilValidType((*(*(_40035_assign))._field_Left.alloc)._field_Type)) {
				;
				_1a61345ee_pushVar((*((*(_self_))._field_data))._field_nils, _1a6135b0b_getNilVar((*(*(_40035_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a6135138_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_40035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a48d54cd_Type> _4248_kind = _1a6145731_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_40035_assign))._field_Right.alloc)._field_Type, (*(*(_40035_assign))._field_Right.alloc)._field_Model);;
		if ((_4248_kind != nullptr)) {
			if (_1a6145302_isDynamicValidType((*(*(_40035_assign))._field_Left.alloc)._field_Type)) {
				_1a6144400_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a6145a72_getDynamicVar((*(*(_40035_assign))._field_Left.alloc)._field_Model), _4248_kind);
			};
		} else {
			_1a6144ee4_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_40035_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a61399de_strAssign(_self_, _40035_assign) || _1a6139d30_sliceAssign(_self_, _40035_assign)) {
			_case_begin_1a91b72b6:;
			{
				return;;
			}
		}
		_match_end_1a91b9098:;
	};
	static__1a613dd45_optimizeData(&((*(*(_40035_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a613dd45_optimizeData(&((*(*(_40035_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_40035_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(47LLU) || _match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a91bcbb2:;
			{
				if (((!(_1a614bbcc_Math)) || (_1a48d9207_Struct((*(*(_40035_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1a91bcb3a;
				};
				jule::U32 _4514_oldId;
				jule::Str _45111_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*(*(_40035_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_40035_assign))._field_Op.alloc)._field_Kind;
					_4514_oldId = ___jule_assign_arg;
					_45111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_40035_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1a91c115a:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1a91c11c1:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_1a91c0cd6:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_1a91c0d5d:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(47LLU)) {
						_case_begin_1a91c0dd5:;
						{
							(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(67LLU);
							(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1a91c0852:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:469:5"));;
						}
					}
					_match_end_1a91c0b82:;
				};
				jule::Ptr<_1a471198b_BinaryExprModel> _4718_b = jule::new_ptr<_1a471198b_BinaryExprModel>(_1a471198b_BinaryExprModel{._field_Left=(*_40035_assign.alloc)._field_Left, ._field_Right=(*_40035_assign.alloc)._field_Right, ._field_Op=(*_40035_assign.alloc)._field_Op});;
				jule::Any _4768_model = jule::Any(_4718_b, &__jule_any_type113);;
				static__1a613dd45_optimizeData(&(_4768_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type113_compare(_4768_model, _4718_b))) {
					if (((*(*(_40035_assign))._field_Op.alloc)._field_Id == static_cast<jule::U32>(67LLU))) {
						_1a61377de_removeCurrent(_self_);
						return;;
					};
					(*_40035_assign.alloc)._field_Right=jule::new_ptr<_1a4711491_OperandExprModel>((*(*(_40035_assign))._field_Right.alloc));
					(*(_4718_b))._field_Op=jule::new_ptr<_1a463d137_Token>((*(*(_4718_b))._field_Op.alloc));
					(*(*(_40035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_40035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_40035_assign))._field_Right.alloc)._field_Model=_4768_model;
					return;;
				};
				(*(*(_40035_assign))._field_Op.alloc)._field_Id=_4514_oldId;
				(*(*(_40035_assign))._field_Op.alloc)._field_Kind=_45111_oldKind;
				return;;
			}
		}
		_match_end_1a91bcb3a:;
	};
	if (_1a614b8d0_Append) {
		{
			auto &_match_expr{ (*((*(_40035_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_1a91cbd58:;
				{
					jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> _5029_m = (*(*(_40035_assign))._field_Right.alloc)._field_Model.cast_ptr<_1a47187a6_BuiltinAppendCallExprModel>(&__jule_any_type23);;
					if ((!(_1a6142e37_areSameLvalueExprModel(&((*(*(_40035_assign))._field_Left.alloc)._field_Model), &((*(_5029_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5029_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type79) {
							_case_begin_1a91ce8b6:;
							{
								_1a61375e1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a6132344_PushToSliceExprModel>(_1a6132344_PushToSliceExprModel{._field_Dest=(*_5029_m.alloc)._field_Dest, ._field_Elems=(*(_5029_m))._field_Elements.unsafe_cast_ptr<_1a4713d45_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1a91cd909:;
							{
								_1a61375e1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a613271d_AppendToSliceExprModel>(_1a613271d_AppendToSliceExprModel{._field_Dest=(*(*(_40035_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5029_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1a91cd893:;
					};
				}
			}
			_match_end_1a91cbcd1:;
		};
	};
}



inline jule::Bool _1a613a6d2_tryOptimizeSwap(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _52437_assign) {
	if (((((!(_1a614d151_Assign)) || ((*((*(_52437_assign))))._field_Left.len() != 2LL)) || ((*((*(_52437_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52437_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a4717079_TupleExprModel> _52911_tup;;
	{
		auto &_match_expr{ (*((*(_52437_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a91d6615:;
			{
				_52911_tup=(*((*(_52437_assign))))._field_Right.unsafe_cast_ptr<_1a4717079_TupleExprModel>();
			}
		}
		_match_end_1a91d658d:;
	};
	if (((_52911_tup == nullptr) || ((*(_52911_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a612e484_equalModels((*((*((*(_52437_assign))))._field_Left[0LL]))._field_Model, (*((*(_52911_tup))._field_Datas[0LL]))._field_Model) && _1a612e484_equalModels((*((*((*(_52437_assign))))._field_Left[1LL]))._field_Model, (*((*(_52911_tup))._field_Datas[1LL]))._field_Model))) {
		_1a61377de_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a612e484_equalModels((*((*((*(_52437_assign))))._field_Left[0LL]))._field_Model, (*((*(_52911_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a612e484_equalModels((*((*((*(_52437_assign))))._field_Left[1LL]))._field_Model, (*((*(_52911_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a6130584_SwapExprModel> _5517_model = jule::new_ptr<_1a6130584_SwapExprModel>(_1a6130584_SwapExprModel{._field_Left=(*((*(_52437_assign))))._field_Left[0LL], ._field_Right=(*((*(_52437_assign))))._field_Left[1LL]});;
	static__1a613dd45_optimizeData(&((*((*(_5517_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a613dd45_optimizeData(&((*((*_5517_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a61375e1_setCurrentStmt(_self_, jule::Any(_5517_model, &__jule_any_type126));
	return true;;
}



inline void _1a613a98a_optimizeMultiAssign(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d0a27_MultiAssign> _56140_assign) {
	if (_1a613a6d2_tryOptimizeSwap(_self_, &(_56140_assign))) {
		return;;
	};
	jule::Ptr<_1a4717079_TupleExprModel> _5687_tup = static_cast<jule::Ptr<_1a4717079_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56140_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a91e2ab6:;
			{
				_5687_tup=(*(_56140_assign))._field_Right.unsafe_cast_ptr<_1a4717079_TupleExprModel>();
			}
		}
		_match_end_1a91e2a3e:;
	};
	{
		auto expr = &((*(_56140_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91e192d:;
		if (it != expr_end) {
			jule::I32 _5738_i = it - expr->begin();
			jule::Ptr<_1a48a2753_Data> _57315_l = *it;
			{
				if ((_57315_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a614a4c2_isBoundaryRiskyType((*_57315_l.alloc)._field_Type)) {
							_1a614a208_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_57315_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5687_tup != nullptr) && _1a6135501_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5687_tup.alloc)._field_Datas[_5738_i]))._field_Model))) {
							if (_1a61357ba_isNilValidType((*_57315_l.alloc)._field_Type)) {
								;
								_1a61345ee_pushVar((*((*(_self_))._field_data))._field_nils, _1a6135b0b_getNilVar((*_57315_l.alloc)._field_Model), true);
							};
						} else {
							_1a6135138_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_57315_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5687_tup != nullptr))) {
						jule::Ptr<_1a48d54cd_Type> _59110_kind = _1a6145731_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5687_tup.alloc)._field_Datas[_5738_i]))._field_Type, (*((*(_5687_tup))._field_Datas[_5738_i]))._field_Model);;
						if ((_59110_kind != nullptr)) {
							if (_1a6145302_isDynamicValidType((*_57315_l.alloc)._field_Type)) {
								_1a6144400_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a6145a72_getDynamicVar((*_57315_l.alloc)._field_Model), _59110_kind);
							};
						} else {
							_1a6144ee4_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_57315_l.alloc)._field_Model);
						};
					};
					static__1a613dd45_optimizeData(&((*_57315_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1a91e192d:;
			++it;
			_5738_i++;
			goto _iter_begin_1a91e192d;
		}
		_iter_end_1a91e192d:;
	};
	static__1a613dd45_optimizeData(&((*_56140_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a613ac43_optimizeRet(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47d282b_RetSt> _60732_r) {
	static__1a613dd45_optimizeData(&((*(_60732_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a614d409_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60732_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9200057:;
			{
				goto _match_end_1a9200112;
			}
		}
		else {
			_case_begin_1a9200178:;
			{
				return;;
			}
		}
		_match_end_1a9200112:;
	};
	jule::Ptr<_1a471396b_FnCallExprModel> _6217_fc = (*_60732_r.alloc)._field_Expr.cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30);;
	if (((((!((*((*((*(_6217_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6217_fc.alloc)._field_Except == nullptr)) || ((*((*_6217_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a538a9dd_IsForwarded(&((*_6217_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a61375e1_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a6130001_ExceptionalForwardingExprModel>(_1a6130001_ExceptionalForwardingExprModel{._field_Expr=_6217_fc}), &__jule_any_type121));
}



inline void _1a613aeeb_optimizeStmt(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Any _63133_stmt) {
	{
		auto &_match_expr{ _63133_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a9203599:;
			{
				_1a613b2a4_optimizeChild(_self_, _63133_stmt.cast_ptr<_1a47cba34_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a9203324:;
			{
				_1a61380b4_optimizeData(_self_, _63133_stmt.cast_ptr<_1a48a2753_Data>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9203632:;
			{
				_1a613836c_optimizeVar(_self_, _63133_stmt.cast_ptr<_1a4852e51_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a92036cb:;
			{
				_1a6138625_optimizeConditional(_self_, _63133_stmt.cast_ptr<_1a47cc66c_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a9203742:;
			{
				_1a61390a4_optimizeRangeIter(_self_, _63133_stmt.cast_ptr<_1a47cd86b_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a92037a8:;
			{
				_1a613935c_optimizeWhileIter(_self_, _63133_stmt.cast_ptr<_1a47cce20_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a9203830:;
			{
				_1a613b2a4_optimizeChild(_self_, (*(_63133_stmt.unsafe_cast_ptr<_1a47cc969_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a92038a7:;
			{
				_1a613a391_optimizeAssign(_self_, _63133_stmt.cast_ptr<_1a47d0571_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a920392e:;
			{
				_1a613a98a_optimizeMultiAssign(_self_, _63133_stmt.cast_ptr<_1a47d0a27_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a92039a6:;
			{
				_1a6138ceb_optimizeMatch(_self_, _63133_stmt.cast_ptr<_1a47d1264_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a9203a2d:;
			{
				_1a613ac43_optimizeRet(_self_, _63133_stmt.cast_ptr<_1a47d282b_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a9203aa5:;
			{
				_1a613a0d8_optimizePostfix(_self_, _63133_stmt.cast_ptr<_1a47d00ba_Postfix>(&__jule_any_type39));
			}
		}
		_match_end_1a9203445:;
	};
}



inline void _1a613b2a4_optimizeChild(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_, jule::Ptr<_1a47cba34_Scope> _66034_child) {
	jule::Ptr<_1a6136cc7_scopeOptimizer> _6617_so = static__1a6137338_new(_66034_child);;
	(*(_6617_so))._field_parent=_self_;
	(*_6617_so.alloc)._field_data=(*(_self_))._field_data;
	_1a613b4a2_optimize(_6617_so);
}



inline void _1a613b4a2_optimize(jule::Ptr<_1a6136cc7_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a613aeeb_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1a920bd55:;
	}
	_iter_end_1a920bd55:;;
}








inline jule::Bool _1a613d680_exprOptimizer_eq(_1a613d680_exprOptimizer *_self_, _1a613d680_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1a613da59_optimize(jule::Any* _2226_model) {
	static__1a613dd45_optimizeData(_2226_model, &(_1a614637a_emptyData));
}



inline void static__1a613dd45_optimizeData(jule::Any* _2630_model, jule::Ptr<_1a6146d3c_data>* _2659_d) {
	if (_1a62494d3_exprEnabled) {
		jule::Ptr<_1a613d680_exprOptimizer> _298_exop = jule::new_ptr<_1a613d680_exprOptimizer>(_1a613d680_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2630_model)), ._field_data=(*(_2659_d)), ._field_inspector=static__1a538938d_New()});;
		_1a614262e_do(_298_exop.ptr());
	};
}



inline jule::Bool _1a613e186_selfCmpCond(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _3828_m) {
	if (((_1a48d7b84_Prim((*((*((*(_3828_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1a479c939_IsFloat((*(_1a48d7b84_Prim((*((*((*(_3828_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1a612e484_equalModels((*(*((*(_3828_m))))._field_Left.alloc)._field_Model, (*((*((*(_3828_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_3828_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a921ce87:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a4705a90_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1a921d020:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a4705a90_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1a921bd76:;
			{
				return false;;
			}
		}
		_match_end_1a921cd44:;
	};
}



inline jule::Bool _1a613e4c7_boolCond(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _6725_m) {
	jule::Ptr<_1a48dd5e6_Prim> _683_lp = _1a48d7b84_Prim((*((*((*(_6725_m))))._field_Left))._field_Type.ptr());;
	if (((_683_lp == nullptr) || (!(_1a48e182a_IsBool(_683_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9222772:;
			{
				std::swap((*((*(_6725_m))))._field_Left, (*((*(_6725_m))))._field_Right);
			}
		}
		else {
			_case_begin_1a922194c:;
			{
				{
					auto &_match_expr{ (*((*((*(_6725_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1a9220c37:;
						{
							goto _match_end_1a9222277;
						}
					}
					else {
						_case_begin_1a92222dd:;
						{
							return false;;
						}
					}
					_match_end_1a9222277:;
				};
			}
		}
		_match_end_1a92218d6:;
	};
	jule::Ptr<_1a4276798_Const> _857_c = (*((*((*(_6725_m))))._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a92243bc:;
			{
				if (_1a4706eae_ReadBool(_857_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				} else {
					_1a4708598_SetBool(_857_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a9224466:;
			{
				if (_1a4706eae_ReadBool(_857_c.ptr())) {
					_1a4708598_SetBool(_857_c, true);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1a9222541:;
		}
		_match_end_1a9224334:;
	};
	return false;;
}



inline jule::Bool _1a613e818_strCond(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel> _12023_m) {
	jule::Ptr<_1a48dd5e6_Prim> _1213_lp = _1a48d7b84_Prim((*((*(_12023_m))._field_Left))._field_Type.ptr());;
	if (((_1213_lp == nullptr) || (!(_1a48e1ab1_IsStr(_1213_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12023_m.alloc)._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*(_12023_m))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12023_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a922b0b6:;
			{
				std::swap((*_12023_m.alloc)._field_Left, (*_12023_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1a922a291:;
			{
				{
					auto &_match_expr{ (*((*(_12023_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1a9228d1c:;
						{
							goto _match_end_1a922aabb;
						}
					}
					else {
						_case_begin_1a922ab32:;
						{
							return false;;
						}
					}
					_match_end_1a922aabb:;
				};
			}
		}
		_match_end_1a922a22a:;
	};
	jule::Ptr<_1a4276798_Const> _1417_c = (*((*_12023_m.alloc)._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*(_12023_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a922ad96:;
			{
				if ((_1a4707245_ReadStr(_1417_c.ptr())).empty()) {
					jule::Any _1459_model = jule::Any(jule::new_ptr<_1a61309a2_EmptyCompareExprModel>(_1a61309a2_EmptyCompareExprModel{._field_Expr=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1459_model))))));
					goto _match_end_1a922cb12;
				};
				jule::Any _1528_model = jule::Any(jule::new_ptr<_1a6131255_StrCompExprModel>(_1a6131255_StrCompExprModel{._field_Left=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Right=_1417_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1528_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a922cbbc:;
			{
				if ((_1a4707245_ReadStr(_1417_c.ptr())).empty()) {
					jule::Any _1609_model = jule::Any(jule::new_ptr<_1a61309a2_EmptyCompareExprModel>(_1a61309a2_EmptyCompareExprModel{._field_Expr=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1609_model))))));
					goto _match_end_1a922cb12;
				};
				jule::Any _1678_model = jule::Any(jule::new_ptr<_1a6131255_StrCompExprModel>(_1a6131255_StrCompExprModel{._field_Left=(*(*(_12023_m))._field_Left.alloc)._field_Model, ._field_Right=_1417_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1678_model))))));
			}
		}
		_match_end_1a922cb12:;
	};
	return true;;
}



inline jule::Bool _1a613ecbe_tryNeutralElement1(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _17735_m, jule::Ptr<_1a4276798_Const> _17766_c, jule::Ptr<_1a4711491_OperandExprModel>* _17792_nc) {
	if (_1a4709841_IsStr(_17766_c.ptr())) {
		if ((!(_1a614cb01_Str))) {
			return false;;
		};
		if (((_1a4707245_ReadStr(_17766_c.ptr())).empty() && ((*((*((*(_17735_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_17792_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a614bbcc_Math)) || (_1a4707c7e_AsF64(_17766_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_17735_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a9a85ed6:;
			{
				if (((*(_17792_nc)) == (*((*(_17735_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_17792_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_17766_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a9a86b1e:;
			{
				if (_1a479c939_IsFloat((*(_1a48d7b84_Prim((*((*(_17792_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1a9a869cb;
				};
				_1a4708037_SetI64(_17766_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_17766_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a9a86b85:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_17792_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1a9a869cb:;
	};
	return false;;
}



inline jule::Bool _1a6140110_tryNeutralElement(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _22734_m) {
	{
		auto &_match_expr{ (*((*((*(_22734_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9a8ad10:;
			{
				jule::Ptr<_1a4276798_Const> _2318_c = (*((*((*(_22734_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a4276798_Const>();;
				return _1a613ecbe_tryNeutralElement1(_self_, _22734_m, _2318_c, &((*((*(_22734_m))))._field_Right));;
			}
		}
		_match_end_1a9a8ac88:;
	};
	{
		auto &_match_expr{ (*((*((*(_22734_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9a8b32c:;
			{
				jule::Ptr<_1a4276798_Const> _2368_c = (*((*((*(_22734_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a4276798_Const>();;
				return _1a613ecbe_tryNeutralElement1(_self_, _22734_m, _2368_c, &((*((*(_22734_m))))._field_Left));;
			}
		}
		_match_end_1a9a8b2b6:;
	};
	return false;;
}



inline void _1a61403b8_checkBinaryForBoundary(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _24239_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24239_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a9a8e781:;
			{
				jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _2488_blc = (*((*((*(_24239_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a4718aa3_BuiltinLenCallExprModel>();;
				if ((!(_1a614a78b_isBoundaryValidType((*((*(_2488_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_24239_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_24239_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24239_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24239_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1a9a92a81:;
							{
								jule::Ptr<_1a4276798_Const> _26010_c = jule::new_ptr<_1a4276798_Const>((*((*((*((*(_24239_m))))._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15))));;
								_1a470c118_Sub(_26010_c, (*(static__1a470550c_NewI64(1LL))));
								_1a6148ab9_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a614aa55_getBoundaryVar((*(*(_2488_blc))._field_Expr.alloc)._field_Model), jule::Any(_26010_c, &__jule_any_type15));
							}
						}
						_match_end_1a9a92a09:;
					};
					return;;
				};
				_1a6148ab9_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a614aa55_getBoundaryVar((*(*(_2488_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24239_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a9a8e709:;
	};
	{
		auto &_match_expr{ (*((*((*(_24239_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a9a8ee24:;
			{
				jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _2718_blc = (*((*((*(_24239_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a4718aa3_BuiltinLenCallExprModel>();;
				if ((!(_1a614a78b_isBoundaryValidType((*(*(_2718_blc))._field_Expr.alloc)._field_Type)))) {
					return;;
				};
				if ((((*(*((*(_24239_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_24239_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24239_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24239_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1a9a99802:;
							{
								jule::Ptr<_1a4276798_Const> _28310_c = jule::new_ptr<_1a4276798_Const>((*((*((*((*(_24239_m))))._field_Left))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15))));;
								_1a470c118_Sub(_28310_c, (*(static__1a470550c_NewI64(1LL))));
								_1a6148ab9_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a614aa55_getBoundaryVar((*(*(_2718_blc))._field_Expr.alloc)._field_Model), jule::Any(_28310_c, &__jule_any_type15));
							}
						}
						_match_end_1a9a9977a:;
					};
					return;;
				};
				_1a6148ab9_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a614aa55_getBoundaryVar((*(*(_2718_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24239_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a9a8ed9c:;
	};
}



inline void _1a6140671_checkBinaryForNil(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel>* _29434_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _2987_var = _1a6135b0b_getNilVar((*((*((*(_29434_m))))._field_Left))._field_Model);;
	if ((_2987_var != 0LLU)) {
		if ((!(_1a61357ba_isNilValidType((*(*((*(_29434_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29434_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1a9aa01a9:;
				{
					_1a61345ee_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2987_var, ((*((*((*(_29434_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1a9aa0132:;
		};
		return;;
	};
	_2987_var=_1a6135b0b_getNilVar((*((*((*(_29434_m))))._field_Right))._field_Model);
	if ((_2987_var != 0LLU)) {
		if ((!(_1a61357ba_isNilValidType((*(*((*(_29434_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29434_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1a9aa2893:;
				{
					_1a61345ee_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2987_var, ((*(*((*(_29434_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1a9aa281b:;
		};
		return;;
	};
}



inline void _1a6140929_binary(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471198b_BinaryExprModel> _32622_m) {
	if ((((*((*(_self_))._field_data))._field_flags & static_cast<jule::I32>(1LL)) != static_cast<jule::I32>(1LL))) {
		_1a61403b8_checkBinaryForBoundary(_self_, &(_32622_m));
		_1a6140671_checkBinaryForNil(_self_, &(_32622_m));
	};
	if (_1a614c8ae_Cond) {
		{
			
			if (_1a613e818_strCond(_self_, _32622_m) || _1a613e4c7_boolCond(_self_, &(_32622_m)) || _1a613e186_selfCmpCond(_self_, &(_32622_m))) {
				_case_begin_1a9aa51c0:;
				{
					return;;
				}
			}
			_match_end_1a9aa50b0:;
		};
	};
	if (_1a6140110_tryNeutralElement(_self_, &(_32622_m))) {
		return;;
	};
	if ((!(_1a614bbcc_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32622_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9aa4e28:;
			{
				goto _match_end_1a9aa6435;
			}
		}
		else {
			_case_begin_1a9aa649b:;
			{
				return;;
			}
		}
		_match_end_1a9aa6435:;
	};
	jule::Ptr<_1a48dd5e6_Prim> _3613_lp = _1a48d7b84_Prim((*((*(_32622_m))._field_Left))._field_Type.ptr());;
	if ((_3613_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _3653_rp = _1a48d7b84_Prim((*((*(_32622_m))._field_Right))._field_Type);;
	if ((_3653_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32622_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a9aa8da5:;
			{
				jule::Bool _3724_ok;
				jule::U64 _3728_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a6142a6e_checkForBitShiftOpt(&((*_32622_m.alloc)._field_Left), &((*_32622_m.alloc)._field_Right));
					_3724_ok = __jule_assign_result.__jule_result_arg0;
					_3728_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3724_ok) {
					(*_32622_m.alloc)._field_Op=jule::new_ptr<_1a463d137_Token>((*(*(_32622_m))._field_Op.alloc));
					(*(*(_32622_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
					(*(*(_32622_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1a4276798_Const> _3779_c = (*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
					_1a47082e0_SetU64(_3779_c.ptr(), _3728_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a9aa8e1b:;
			{
				jule::Bool _3844_ok;
				jule::U64 _3848_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a6142a6e_checkForBitShiftOpt(&((*_32622_m.alloc)._field_Left), &((*_32622_m.alloc)._field_Right));
					_3844_ok = __jule_assign_result.__jule_result_arg0;
					_3848_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3844_ok) {
					(*_32622_m.alloc)._field_Op=jule::new_ptr<_1a463d137_Token>((*(*(_32622_m))._field_Op.alloc));
					(*(*(_32622_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
					(*(*(_32622_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1a4276798_Const> _3899_c = (*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
					_1a47082e0_SetU64(_3899_c.ptr(), _3848_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a9aa8e82:;
			{
				jule::Ptr<_1a4276798_Const> _3968_c = (*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
				if ((_1a4707c7e_AsF64(_3968_c.ptr()) == 2LL)) {
					(*_32622_m.alloc)._field_Op=jule::new_ptr<_1a463d137_Token>((*(*(_32622_m))._field_Op.alloc));
					(*(*(_32622_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(65LLU);
					(*(*(_32622_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1a4708037_SetI64(_3968_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a9aa8ee8:;
			{
				jule::F64 _4084_s = _1a4707c7e_AsF64((*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15).ptr());;
				if ((_4084_s == 0LL)) {
					(*((*(_self_))._field_model))=(*(*(_32622_m))._field_Left.alloc)._field_Model;
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a9aa905e:;
			{
				jule::I32 _4154_z = _1a4794579_BitSizeOf((*(_3613_lp))._field_Kind);;
				jule::U64 _4164_s = _1a47079e8_AsU64((*((*_32622_m.alloc)._field_Right))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15).ptr());;
				if ((_4164_s >= static_cast<jule::U64>(_4154_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1a47057c6_NewU64(0LLU), &__jule_any_type15);
					return;;
				};
			}
		}
		else {
			_case_begin_1a9aa8a0e:;
			{
				return;;
			}
		}
		_match_end_1a9aa8d2d:;
	};
	jule::Any _4297_model = jule::Any(jule::new_ptr<_1a6131b6d_UnsafeBinaryExprModel>(_1a6131b6d_UnsafeBinaryExprModel{._field_Node=_32622_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4297_model))))));
}



inline void _1a6140bd2_unary(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a4711d65_UnaryExprModel> _43321_m) {
	if ((!(_1a614c4e6_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43321_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a9aba12a:;
			{
				{
					auto &_match_expr{ (*((*(_43321_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1a9abc13d:;
						{
							jule::Ptr<_1a4711d65_UnaryExprModel> _4419_um = (*((*(_43321_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a4711d65_UnaryExprModel>();;
							if (((*((*(_4419_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4419_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1a9abc0b6:;
				};
				if ((!(_1a614be85_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a61357ba_isNilValidType((*(*(_43321_m))._field_Expr.alloc)._field_Type))) {
					jule::Uintptr _4555_var = _1a6135b0b_getNilVar((*(*(_43321_m))._field_Expr.alloc)._field_Model);;
					if (_1a6134c81_isSafe((*((*(_self_))._field_data))._field_nils, _4555_var)) {
						jule::Any _45710_model = jule::Any(jule::new_ptr<_1a6132de4_UnsafeDerefExprModel>(_1a6132de4_UnsafeDerefExprModel{._field_Base=_43321_m}), &__jule_any_type130);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_45710_model))))));
						return;;
					};
					_1a61345ee_pushVar((*((*(_self_))._field_data))._field_nils, _4555_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a9aba191:;
			{
				{
					auto &_match_expr{ (*((*(_43321_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1a9ac55ec:;
						{
							jule::Ptr<_1a4852e51_Var> _4679_v = (*((*(_43321_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
							if ((*(_4679_v))._field_Reference) {
								jule::Any _46910_model = jule::Any(jule::new_ptr<_1a6130c9e_RefExprModel>(_1a6130c9e_RefExprModel{._field_Var=_4679_v}), &__jule_any_type131);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46910_model))))));
							};
						}
					}
					_match_end_1a9ac5575:;
				};
			}
		}
		_match_end_1a9aba0b4:;
	};
}



inline void _1a6140e8a_structureLit(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a4712739_StructLitExprModel> _47628_m) {
	{
		auto expr = &((*(_47628_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ac7a1c:;
		if (it != expr_end) {
			jule::Ptr<_1a4712393_StructArgExprModel> _47715_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a614a4c2_isBoundaryRiskyType((*((*(_47715_arg))._field_Expr))._field_Type)) {
						_1a614a208_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_47715_arg, &__jule_any_type132));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a6135138_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_47715_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a6144ee4_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_47715_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1a9ac7a1c:;
			++it;
			goto _iter_begin_1a9ac7a1c;
		}
		_iter_end_1a9ac7a1c:;
	};
}



inline void _1a6141243_casting(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47130b9_CastingExprModel> _49223_m) {
	jule::Bool _4933_valid = _1a6145302_isDynamicValidType((*(_49223_m))._field_ExprType);;
	jule::Uintptr _4943_var = _1a6145a72_getDynamicVar((*((*_49223_m.alloc)._field_Expr))._field_Model);;
	if (((_4933_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a6144b3c_isFits((*((*(_self_))._field_data))._field_dynamic, _4943_var, (*_49223_m.alloc)._field_Type))) {
		jule::Any _4968_model = jule::Any(jule::new_ptr<_1a61331e1_UnsafeCastingExprModel>(_1a61331e1_UnsafeCastingExprModel{._field_Base=_49223_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4968_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4933_valid)) {
		_1a6144400_pushVar((*((*(_self_))._field_data))._field_dynamic, _4943_var, (*_49223_m.alloc)._field_Type);
	};
}



inline void _1a61415a6_args(_1a613d680_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a4720bba_ParamIns>> _50620_params, jule::Slice<jule::Any>* _50652_args) {
	{
		auto expr = _50652_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ad8a50:;
		if (it != expr_end) {
			jule::I32 _5078_i = it - expr->begin();
			jule::Any _50715_arg = *it;
			{
				if ((_5078_i >= _50620_params.len())) {
					goto _iter_next_1a9ad8a50;
				};
				jule::Ptr<_1a4720bba_ParamIns> _5118_p = _50620_params[_5078_i];;
				if (((*((*(_5118_p))._field_Decl))._field_Mutable && (*(*(_5118_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1a614a4c2_isBoundaryRiskyType((*_5118_p.alloc)._field_Type)) {
							_1a614a208_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _50715_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1a6135138_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _50715_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1a6144ee4_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _50715_arg);
					};
				};
			}
			_iter_next_1a9ad8a50:;
			++it;
			_5078_i++;
			goto _iter_begin_1a9ad8a50;
		}
		_iter_end_1a9ad8a50:;
	};
}



inline void _1a614185e_scope(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47cba34_Scope>* _52822_s) {
	jule::Ptr<_1a6136cc7_scopeOptimizer> _5297_scopt = static__1a6137338_new((*(_52822_s)));;
	(*(_5297_scopt))._field_data=(*(_self_))._field_data;
	_1a613b4a2_optimize(_5297_scopt);
}



inline void _1a6141b17_optimizeStrBuilderCall(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _53439_m) {
	;
	{
		if (((*((*(_1a5390916_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel>(_1a61301dd_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1a5390916_ProgramMeta))._field_StrBuilder.alloc)._field_WriteByte == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel>(_1a61301dd_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1a5390916_ProgramMeta))._field_StrBuilder.alloc)._field_WriteRune == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel>(_1a61301dd_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1a5390916_ProgramMeta))._field_StrBuilder.alloc)._field_WriteStr == (*((*(_53439_m))))._field_Func)) {
			jule::Any _5419_model = jule::Any(jule::new_ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel>(_1a61301dd_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_53439_m))}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5419_model))))));
			return;;
		};
	};
}



inline void _1a6141dc0_funcCall(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a471396b_FnCallExprModel> _55024_m) {
	_1a61415a6_args(_self_, (*((*(_55024_m))._field_Func))._field_Params, &((*_55024_m.alloc)._field_Args));
	if (((*_55024_m.alloc)._field_Except != nullptr)) {
		_1a614185e_scope(_self_, &((*_55024_m.alloc)._field_Except));
	};
	{
		
		if ((_1a614dc23_StdStrings && ((*(_1a5390916_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1a9ae8ea0:;
			{
				_1a6141b17_optimizeStrBuilderCall(_self_, &(_55024_m));
			}
		}
		_match_end_1a9ae8763:;
	};
}



inline void _1a6142178_indexing(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47142eb_IndexingExprModel> _56124_m) {
	if ((!(_1a614be85_Access))) {
		return;;
	};
	jule::Bool _5663_array = (_1a48d8954_Arr((*((*(_56124_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_5663_array && _1a48a318d_IsConst((*_56124_m.alloc)._field_Index.ptr()))) {
		jule::Any _5698_model = jule::Any(jule::new_ptr<_1a6131e6a_UnsafeIndexingExprModel>(_1a6131e6a_UnsafeIndexingExprModel{._field_Node=_56124_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5698_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a614a78b_isBoundaryValidType((*(*(_56124_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _5754_var = _1a614aa55_getBoundaryVar((*(*(_56124_m))._field_Expr.alloc)._field_Model);;
		if (_1a6149306_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5754_var, (*(*(_56124_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5779_model = jule::Any(jule::new_ptr<_1a6131e6a_UnsafeIndexingExprModel>(_1a6131e6a_UnsafeIndexingExprModel{._field_Node=_56124_m}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5779_model))))));
			return;;
		};
		_1a6148ab9_pushVar((*((*(_self_))._field_data))._field_boundary, _5754_var, (*(*(_56124_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1a6142431_anonFunc(_1a613d680_exprOptimizer* _self_, jule::Ptr<_1a47147a2_AnonFnExprModel> _58524_m) {
	_1a614185e_scope(_self_, &((*((*(_58524_m))._field_Func))._field_Scope));
}



inline void _1a614262e_do(_1a613d680_exprOptimizer* _self_) {
	_1a5389c62_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1a9b05110, jule::Ptr<__jule_anon_1a9b05110_ctx>::make(__jule_anon_1a9b05110_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9b05110_ctx_handler));
}








inline jule::Bool _1a6143b19_dynamicVar_eq(_1a6143b19_dynamicVar *_self_, _1a6143b19_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1a6144400_pushVar(jule::Ptr<_1a6143e5a_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1a48d54cd_Type> _2442_kind) {
	if (((!(_1a614d96a_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1a6145731_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1495a:;
		if (it != expr_end) {
			_1a6143b19_dynamicVar _3015_v = *it;
			{
				if ((_3015_v._field_var == _2424_var)) {
					_3015_v._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1a9b1495a:;
			++it;
			goto _iter_begin_1a9b1495a;
		}
		_iter_end_1a9b1495a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b15450:;
		if (it != expr_end) {
			_1a6143b19_dynamicVar _3715_v = *it;
			{
				if ((_3715_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1a48d54cd_Type> _1___jule_assign_arg = _2442_kind;
						_3715_v._field_var = ___jule_assign_arg;
						_3715_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1a9b15450:;
			++it;
			goto _iter_begin_1a9b15450;
		}
		_iter_end_1a9b15450:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1a6143b19_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a6143b19_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1a6144741_removeVar(_1a6143e5a_dynamic* _self_, jule::Uintptr _4725_var) {
	if ((_4725_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9b17661:;
			if (it != expr_end) {
				_1a6143b19_dynamicVar _4916_v = *it;
				{
					if ((_4916_v._field_var == _4725_var)) {
						_4916_v._field_var=0LLU;
						_4916_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1a9b17661:;
				++it;
				goto _iter_begin_1a9b17661;
			}
			_iter_end_1a9b17661:;
		};
	};
	return false;;
}



inline jule::Bool _1a6144b3c_isFits(_1a6143e5a_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1a48d54cd_Type> _6136_kind) {
	if ((_6122_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9b19025:;
			if (it != expr_end) {
				_1a6143b19_dynamicVar _6311_v = *it;
				{
					if ((_6311_v._field_var == _6122_var)) {
						return ((_6311_v._field_kind != nullptr) && _1a48d5c1a_Equal(_6311_v._field_kind, _6136_kind));;
					};
				}
				_iter_next_1a9b19025:;
				++it;
				goto _iter_begin_1a9b19025;
			}
			_iter_end_1a9b19025:;
		};
	};
	return false;;
}








inline jule::Bool _1a6146d3c_data_eq(_1a6146d3c_data *_self_, _1a6146d3c_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic) &&
		(_self_->_field_flags == _self_->_field_flags);
}

inline _1a6146765_dataCheckpoint _1a61471e4_getCheckpoint(_1a6146d3c_data* _self_) {
	_1a6146765_dataCheckpoint _347_c = _1a6146765_dataCheckpoint{._field_boundary=_1a6148624_boundary{._field_vars=jule::Slice<_1a61482d3_boundaryVar>(nullptr)}, ._field_nils=_1a6134159_nils{._field_vars=jule::Slice<_1a6133d18_nilVar>(nullptr)}, ._field_dynamic=_1a6143e5a_dynamic{._field_vars=jule::Slice<_1a6143b19_dynamicVar>(nullptr)}};;
	_347_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a61482d3_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a61482d3_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_347_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1ae17:;
		if (it != expr_end) {
			jule::I32 _367_i = it - expr->begin();
			{
				_347_c._field_boundary._field_vars[_367_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_347_c._field_boundary._field_vars[_367_i]._field_maxSize);
			}
			_iter_next_1a9b1ae17:;
			++it;
			_367_i++;
			goto _iter_begin_1a9b1ae17;
		}
		_iter_end_1a9b1ae17:;
	};
	_347_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a6133d18_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a6133d18_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_347_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a6143b19_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a6143b19_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1a48d54cd_Type>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _347_c;;
}



inline void _1a614749c_loadCheckpoint(_1a6146d3c_data* _self_, _1a6146765_dataCheckpoint* _4435_c) {
	(*((*(_self_))._field_boundary))=(*(_4435_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_4435_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_4435_c))._field_dynamic;
}











inline void _1a6148ab9_pushVar(_1a6148624_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1a614be85_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1a614968b_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b30305:;
		if (it != expr_end) {
			_1a61482d3_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9b310e7:;
						if (it != expr_end) {
							jule::I32 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1a6149dc8_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1a9b310e7:;
							++it;
							_349_i++;
							goto _iter_begin_1a9b310e7;
						}
						_iter_end_1a9b310e7:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1a9b30305:;
			++it;
			goto _iter_begin_1a9b30305;
		}
		_iter_end_1a9b30305:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b30b74:;
		if (it != expr_end) {
			_1a61482d3_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1a9b30b74:;
			++it;
			goto _iter_begin_1a9b30b74;
		}
		_iter_end_1a9b30b74:;
	};
	{ jule::Slice<_1a61482d3_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a61482d3_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1a6149306_fitsMaxSize(_1a6148624_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9b35a14:;
			if (it != expr_end) {
				_1a61482d3_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1a6149a54_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1a9b35a14:;
				++it;
				goto _iter_begin_1a9b35a14;
			}
			_iter_end_1a9b35a14:;
		};
	};
	return false;;
}








inline jule::Bool _1a6249a66_Optimizer_eq(_1a6249a66_Optimizer *_self_, _1a6249a66_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1a6249a66_Optimizer> static__1a624a02d_New(jule::Ptr<_1a53857a7_IR>* _2121_ir) {
	return jule::new_ptr<_1a6249a66_Optimizer>(_1a6249a66_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1a624a2d6_optimizeExpr(_1a6249a66_Optimizer* _self_, jule::Any* _2733_model) {
	static__1a613da59_optimize(_2733_model);
}



inline void _1a624a58e_optimizeGlobal(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a4852e51_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1a624a2d6_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a624a847_optimizeFunction(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a471dc62_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b3bc4b:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1a6136cc7_scopeOptimizer> _428_so = static__1a6137338_new((*(_4115_ins))._field_Scope);;
				_1a613b4a2_optimize(_428_so);
			}
			_iter_next_1a9b3bc4b:;
			++it;
			goto _iter_begin_1a9b3bc4b;
		}
		_iter_end_1a9b3bc4b:;
	};
}



inline void _1a624ab00_optimizeStruct(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a4673ec5_Struct>* _4735_s) {
	if ((*((*(_4735_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4735_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b3d423:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b3dd2a:;
					if (it != expr_end) {
						jule::Ptr<_1a4676280_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1a624a2d6_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1a9b3dd2a:;
						++it;
						goto _iter_begin_1a9b3dd2a;
					}
					_iter_end_1a9b3dd2a:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b3e27b:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _5716_m = *it;
						{
							_1a624a847_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1a9b3e27b:;
						++it;
						goto _iter_begin_1a9b3e27b;
					}
					_iter_end_1a9b3e27b:;
				};
			}
			_iter_next_1a9b3d423:;
			++it;
			goto _iter_begin_1a9b3d423;
		}
		_iter_end_1a9b3d423:;
	};
}



inline void _1a624ada8_optimizeGlobals(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b40645:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b41459:;
					if (it != expr_end) {
						jule::Ptr<_1a4852e51_Var> _6516_v = *it;
						{
							_1a624a58e_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1a9b41459:;
						++it;
						goto _iter_begin_1a9b41459;
					}
					_iter_end_1a9b41459:;
				};
			}
			_iter_next_1a9b40645:;
			++it;
			goto _iter_begin_1a9b40645;
		}
		_iter_end_1a9b40645:;
	};
}



inline void _1a624b161_optimizeFunctions(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b41a0e:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b42878:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _7316_func = *it;
						{
							_1a624a847_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1a9b42878:;
						++it;
						goto _iter_begin_1a9b42878;
					}
					_iter_end_1a9b42878:;
				};
			}
			_iter_next_1a9b41a0e:;
			++it;
			goto _iter_begin_1a9b41a0e;
		}
		_iter_end_1a9b41a0e:;
	};
}



inline void _1a624b419_optimizeStructs(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b42e2d:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b43c97:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> _8116_s = *it;
						{
							_1a624ab00_optimizeStruct(_self_, &(_8116_s));
						}
						_iter_next_1a9b43c97:;
						++it;
						goto _iter_begin_1a9b43c97;
					}
					_iter_end_1a9b43c97:;
				};
			}
			_iter_next_1a9b42e2d:;
			++it;
			goto _iter_begin_1a9b42e2d;
		}
		_iter_end_1a9b42e2d:;
	};
}



inline void _1a624b6c2_optimizePackage(_1a6249a66_Optimizer* _self_, jule::Ptr<_1a480eb55_Package>* _8736_p) {
	_1a624ada8_optimizeGlobals(_self_, _8736_p);
	_1a624b161_optimizeFunctions(_self_, _8736_p);
	_1a624b419_optimizeStructs(_self_, _8736_p);
}



inline void _1a624b8c0_Optimize(_1a6249a66_Optimizer* _self_) {
	_1a624bb34_detectEnabled();
	if (_1a614b627_Deadcode) {
		_1a6243664_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a6249868_scopeEnabled || _1a62494d3_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9b45cee:;
			if (it != expr_end) {
				jule::Ptr<_1a480c3d3_ImportInfo> _10316_u = *it;
				{
					if ((!((*(_10316_u))._field_Binded))) {
						_1a624b6c2_optimizePackage(_self_, &((*_10316_u.alloc)._field_Package));
					};
				}
				_iter_next_1a9b45cee:;
				++it;
				goto _iter_begin_1a9b45cee;
			}
			_iter_end_1a9b45cee:;
		};
		_1a624b6c2_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a614b627_Deadcode) {
		_1a62481b3_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1a5b9d8b6_AbsTime_eq(_1a5b9d8b6_AbsTime *_self_, _1a5b9d8b6_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1a5b9e08c_Time_eq(_1a5b9e08c_Time *_self_, _1a5b9e08c_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1a5b9e08c_Time static__1a5b9e477_Unix(jule::U64 _9117_sec) {
	return _1a5b9e08c_Time{._field_sec=_9117_sec};;
}



inline _1a5b9e08c_Time static__1a5b9e686_Now(void) {
	return static__1a5b9e477_Unix(_1a5ba117c_unix());;
}



inline _1a5b9d8b6_AbsTime _1a5ba0d6e_Abs(_1a5b9e08c_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a5b9cd27_mdays[static_cast<jule::I32>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a5b9cd27_mdays[static_cast<jule::I32>(_1697_months)];
		}
	_iter_next_1a9b7578a:;
	}
	_iter_end_1a9b7578a:;;
	_1a5b9d8b6_AbsTime _1747_t = _1a5b9d8b6_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1a624dbe1_scopeCoder_eq(_1a624dbe1_scopeCoder *_self_, _1a624dbe1_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1a624dbe1_scopeCoder> static__1a624e3d9_new(jule::Ptr<_1a5bab61b_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1a624dbe1_scopeCoder>(_1a624dbe1_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1a9cbc5b3_iterHead(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a614b32a_Copy && _1a6257117_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1a9cc2b5c:;
				{
					jule::Ptr<_1a4852e51_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1a626890e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1a9cc1089;
					};
					goto _case_begin_1a9cc1100;
				}
			}
			else {
				_case_begin_1a9cc1100:;
				{
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a626890e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1a9cc1089:;
		};
	} else {
		_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, _4452_begin);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
}



inline void _1a624eab0_rangeIndexIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter>* _9336_it) {
	_1e71a80b0_Builder _947_sb = static__1e71a892e_New(64LL);;
	static__1a6272c8c_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1e71a9941_Str(&_947_sb);;
	_1e71a9b3e_Clear(&_947_sb);
	static__1a6273364_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1e71a9941_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1a9cbc5b3_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1a5bb39b9_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1a9ccd0c9, jule::Ptr<__jule_anon_1a9ccd0c9_ctx>::make(__jule_anon_1a9ccd0c9_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1a9ccd0c9_ctx_handler));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1a614b32a_Copy && _1a62574d0_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1a5bb39b9_varInitExpr((*(_self_))._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1a9cd1ad3, jule::Ptr<__jule_anon_1a9cd1ad3_ctx>::make(__jule_anon_1a9cd1ad3_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1a9cd1ad3_ctx_handler));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	_1a62563ad_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, _993_next);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1a62729a1_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5babd36_write((*(_self_))._field_oc, _963_begin);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273078_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a624ed68_rangeHashmapIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter>* _16038_it) {
	_1e71a80b0_Builder _1617_sb = static__1e71a892e_New(64LL);;
	static__1a6272c8c_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1e71a9941_Str(&_1617_sb);;
	_1e71a9b3e_Clear(&_1617_sb);
	static__1a6273364_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1e71a9941_Str(&_1617_sb);;
	jule::Ptr<_1a48e4289_Map> _1687__map = _1a48d9724_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a4673ec5_Struct> _1697_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a4676d30_StructIns> _1707_ins = _1a538ea9c_FindStructGenericInstance(&(_1697_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a4721d20_FnIns> _1727_f = (*(_1a4677dca_FindMethod(_1707_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1a4673ec5_Struct> _1747_itDecl = _1a4967142_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1a4676d30_StructIns> _1757_iterator = _1a538ea9c_FindStructGenericInstance(&(_1747_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1a4721d20_FnIns> _1767_nextCall = (*(_1a4677dca_FindMethod(_1757_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5bbeac4_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1757_iterator);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1727_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, _1633_begin);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5bc0cd4_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1a5bb39b9_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1a9d021b9, jule::Ptr<__jule_anon_1a9d021b9_ctx>::make(__jule_anon_1a9d021b9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9d021b9_ctx_handler));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1a5bb39b9_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1a9d046a5, jule::Ptr<__jule_anon_1a9d046a5_ctx>::make(__jule_anon_1a9d046a5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9d046a5_ctx_handler));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	_1a62563ad_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, _1663_next);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5babd36_write((*(_self_))._field_oc, _1633_begin);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273078_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6250121_strRuneIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a6132ae7_StrRuneIter> _24332_it) {
	_1e71a80b0_Builder _2447_sb = static__1e71a892e_New(64LL);;
	static__1a6272c8c_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _1e71a9941_Str(&_2447_sb);;
	_1e71a9b3e_Clear(&_2447_sb);
	static__1a6273364_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _1e71a9941_Str(&_2447_sb);;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a614b32a_Copy && _1a6257117_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1a9d13818:;
				{
					jule::Ptr<_1a4852e51_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1a626890e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1a9d11c45;
					};
					goto _case_begin_1a9d11cab;
				}
			}
			else {
				_case_begin_1a9d11cab:;
				{
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a626890e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1a9d11c45:;
		};
	} else {
		_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2557_ref) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2557_ref) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a5bb39b9_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1a9d1d669, jule::Ptr<__jule_anon_1a9d1d669_ctx>::make(__jule_anon_1a9d1d669_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9d1d669_ctx_handler));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a5bb39b9_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	_1a5babd36_write((*(_self_))._field_oc, _2463_begin);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1a62729a1_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a62563ad_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, _2493_next);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a62729a1_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5babd36_write((*(_self_))._field_oc, _2463_begin);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a62503c9_ifCase(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cbe52_If> _35527_i) {
	if (((*(_35527_i))._field_Expr != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35527_i.alloc)._field_Expr);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a62563ad_scope(_self_, (*_35527_i.alloc)._field_Scope);
}



inline void _1a6250682_conditional(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cc66c_Conditional> _36432_c) {
	jule::Bool _3657_writed = false;;
	{
		auto expr = &((*(_36432_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d33bce:;
		if (it != expr_end) {
			jule::Ptr<_1a47cbe52_If> _36615_elif = *it;
			{
				if ((_36615_elif == nullptr)) {
					goto _iter_next_1a9d33bce;
				};
				if (_3657_writed) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3657_writed=true;
				_1a62503c9_ifCase(_self_, _36615_elif);
			}
			_iter_next_1a9d33bce:;
			++it;
			goto _iter_begin_1a9d33bce;
		}
		_iter_end_1a9d33bce:;
	};
	if (((*_36432_c.alloc)._field_Default != nullptr)) {
		if (_3657_writed) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a62563ad_scope(_self_, (*(*(_36432_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a625093a_infIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cc969_InfIter> _38428_it) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a62563ad_scope(_self_, (*(_38428_it))._field_Scope);
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273364_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273078_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a6250be3_whileIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cce20_WhileIter> _40130_it) {
	if ((((*(_40130_it))._field_Expr != nullptr) && ((*_40130_it.alloc)._field_Next == nullptr))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_40130_it))._field_Expr != nullptr)) {
			_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_40130_it.alloc)._field_Next != nullptr)) {
			_1a6255d4c_st(_self_, (*_40130_it.alloc)._field_Next);
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_40130_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a62563ad_scope(_self_, (*_40130_it.alloc)._field_Scope);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273364_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273078_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a6250e9b_rangeIter(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cd86b_RangeIter> _44030_it) {
	{
		
		if ((_1a48d8bda_Slc((*((*(_44030_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9d4e436:;
			{
				_1a624eab0_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1a48d8954_Arr((*((*(_44030_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9d4e0d4:;
			{
				_1a624eab0_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1a48d9724_Map((*((*(_44030_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9d4e14a:;
			{
				_1a624ed68_rangeHashmapIter(_self_, &(_44030_it));
			}
		}
		else {
			_case_begin_1a9d4e06d:;
			{
				_1a624eab0_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		_match_end_1a9d4de5d:;
	};
}



inline void _1a6251254_cont(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cdc01_ContSt> _45321_c) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a6273364_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45321_c))._field_It);
}



inline void _1a625150c_label(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47ce581_Label> _45822_l) {
	static__1a6273650_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45822_l));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a62517b5_gotoSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cebe1_GotoSt> _46323_gt) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a6273650_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46323_gt))._field_Label));
}



inline void _1a6251a6d_postfix(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d00ba_Postfix> _46828_p) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46828_p))._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a5babd36_write((*(_self_))._field_oc, (*_46828_p.alloc)._field_Op);
}



inline void _1a6251d26_assignLeft(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Any* _47532_model) {
	{
		auto &_match_expr{ (*(_47532_model)) };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a9d58451:;
			{
				jule::Ptr<_1a47142eb_IndexingExprModel> _4788_iem = (*(_47532_model)).cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42);;
				jule::Ptr<_1a48e4289_Map> _4794__map = _1a48d9724_Map((*((*(_4788_iem))._field_Expr))._field_Type.ptr());;
				if ((_4794__map == nullptr)) {
					goto _match_end_1a9d583da;
				};
				jule::Ptr<_1a4673ec5_Struct> _4858_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1a4676d30_StructIns> _4868_ins = _1a538ea9c_FindStructGenericInstance(&(_4858_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4794__map))._field_Key; (*it++) = (*(_4794__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a4721d20_FnIns> _4888_f = (*(_1a4677dca_FindMethod(_4868_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4888_f));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4788_iem))._field_Expr.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1ce7a1083_Production))) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_4788_iem.alloc)._field_Token));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4788_iem.alloc)._field_Index))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1a9d583da:;
	};
	_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47532_model)));
}



inline void _1a62520ce_shl(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _50724_a) {
	_1a6251d26_assignLeft(_self_, &((*((*(_50724_a))._field_Left))._field_Model));
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a625d052_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50724_a.alloc)._field_Left), &((*_50724_a.alloc)._field_Right));
}



inline void _1a6252387_shr(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _51324_a) {
	_1a6251d26_assignLeft(_self_, &((*((*(_51324_a))._field_Left))._field_Model));
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a625d3b5_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51324_a.alloc)._field_Left), &((*_51324_a.alloc)._field_Right));
}



inline void _1a6252640_divByZeroAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _51936_a) {
	_1a6251d26_assignLeft(_self_, &((*((*(_51936_a))._field_Left))._field_Model));
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a625c23d_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51936_a.alloc)._field_Op), &((*_51936_a.alloc)._field_Left), &((*_51936_a.alloc)._field_Right));
}



inline void _1a6252b18_operatorOverloadingAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _52547_s, jule::Ptr<_1a4711491_OperandExprModel>* _52573_l, jule::Ptr<_1a4711491_OperandExprModel>* _5268_r, jule::U32 _52636_op) {
	;
	jule::Ptr<_1a4721d20_FnIns> _5287_f = _1a538e294_FindOperator(_52547_s, _52636_op, false);;
	if ((_5287_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:530:4"));;
	};
	static__1a627172a_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5287_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a6251d26_assignLeft(_self_, &((*((*(_52573_l))))._field_Model));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5268_r))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6252dc1_assign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0571_Assign> _54027_a) {
	{
		auto &_match_expr{ (*((*(_54027_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a9d6de06:;
			{
				if ((_1ce7a0d41_Safety && (_1a48d9207_Struct((*((*(_54027_a))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1a6252640_divByZeroAssign(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1a9d6de7d:;
			{
				if ((_1a48d9207_Struct((*((*(_54027_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a62520ce_shl(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a9d6dee4:;
			{
				if ((_1a48d9207_Struct((*((*(_54027_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a6252387_shr(_self_, _54027_a);
					return;;
				};
			}
		}
		_match_end_1a9d6dd3a:;
	};
	if ((((*((*(_54027_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1a48d9207_Struct((*((*_54027_a.alloc)._field_Left))._field_Type.ptr()) != nullptr))) {
		jule::Ptr<_1a4676d30_StructIns> _5638_s = _1a48d9207_Struct((*((*(_54027_a))._field_Left))._field_Type);;
		_1a6252b18_operatorOverloadingAssign(_self_, &(_5638_s), &((*_54027_a.alloc)._field_Left), &((*_54027_a.alloc)._field_Right), (*(*(_54027_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1a6251d26_assignLeft(_self_, &((*(*(_54027_a))._field_Left.alloc)._field_Model));
	_1a5babd36_write((*_self_.alloc)._field_oc, (*(*(_54027_a))._field_Op.alloc)._field_Kind);
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_54027_a.alloc)._field_Right))._field_Model);
}



inline void _1a6253179_mapLookupAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _57337_a) {
	jule::Ptr<_1a47142eb_IndexingExprModel> _5757_iem = (*((*(_57337_a))))._field_Right.cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42);;
	jule::Ptr<_1a48e4289_Map> _5767__map = _1a48d9724_Map((*((*(_5757_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a4673ec5_Struct> _5787_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a4676d30_StructIns> _5797_ins = _1a538ea9c_FindStructGenericInstance(&(_5787_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5767__map))._field_Key; (*it++) = (*_5767__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a4721d20_FnIns> _5817_f = (*(_1a4677dca_FindMethod(_5797_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5817_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a6251d26_assignLeft(_self_, &((*(*(_5757_iem))._field_Expr.alloc)._field_Model));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5757_iem.alloc)._field_Index))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57337_a))))._field_Left[0LL] != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[0LL]))._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57337_a))))._field_Left[1LL] != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[1LL]))._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6253432_multiAssignTup(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _60636_a) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1a4717079_TupleExprModel> _6167_tup = (*((*(_60636_a))))._field_Right.cast_ptr<_1a4717079_TupleExprModel>(&__jule_any_type83);;
	{
		auto expr = &((*(_6167_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d84922:;
		if (it != expr_end) {
			jule::I32 _6188_i = it - expr->begin();
			jule::Ptr<_1a48a2753_Data> _61815_r = *it;
			{
				_1a5bac6d8_indent((*(_self_))._field_oc);
				jule::Ptr<_1a48a2753_Data> _6208_l = (*((*(_60636_a))))._field_Left[_6188_i];;
				if ((_6208_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6208_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1a9d8799c:;
							{
								jule::Ptr<_1a4852e51_Var> _62410_v = (*(_6208_l))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
								if ((!((*(_62410_v))._field_Reference))) {
									goto _match_end_1a9d87936;
								};
								{
									auto expr = &((*((*(_60636_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a9d8897b:;
									if (it != expr_end) {
										jule::Ptr<_1a4852e51_Var> _63113_dv = *it;
										{
											if ((_62410_v == _63113_dv)) {
												goto _julec_label_1a9d897b2;
											};
										}
										_iter_next_1a9d8897b:;
										++it;
										goto _iter_begin_1a9d8897b;
									}
									_iter_end_1a9d8897b:;
								};
								goto _match_end_1a9d87936;
								_julec_label_1a9d897b2:;
								static__1a62729a1_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _62410_v);
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61815_r))._field_Model);
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_60636_a))))._field_Left[_6188_i]=nullptr;
								goto _iter_next_1a9d84922;
							}
						}
						_match_end_1a9d87936:;
					};
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6208_l.alloc)._field_Type);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a6270c02_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a624d482_assignArgName, static_cast<jule::Uintptr>(_6188_i));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_61815_r.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a9d84922:;
			++it;
			_6188_i++;
			goto _iter_begin_1a9d84922;
		}
		_iter_end_1a9d84922:;
	};
	{
		auto expr = &((*((*(_60636_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d8e8e9:;
		if (it != expr_end) {
			jule::I32 _6608_i = it - expr->begin();
			jule::Ptr<_1a48a2753_Data> _66015_l = *it;
			{
				if ((_66015_l == nullptr)) {
					goto _iter_next_1a9d8e8e9;
				};
				_1a5bac6d8_indent((*(_self_))._field_oc);
				_1a6251d26_assignLeft(_self_, &((*(_66015_l))._field_Model));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a6270c02_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a624d482_assignArgName, static_cast<jule::Uintptr>(_6608_i));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a9d8e8e9:;
			++it;
			_6608_i++;
			goto _iter_begin_1a9d8e8e9;
		}
		_iter_end_1a9d8e8e9:;
	};
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a62536da_multiAssignFn(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign>* _67635_a) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	jule::Ptr<_1a471396b_FnCallExprModel> _6817_f = (*((*(_67635_a))))._field_Right.cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30);;
	_1a5bc67bd_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6817_f))._field_Func))._field_Result));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_67635_a))))._field_Right);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a48e36d9_Tuple> _6877_tup = _1a48d99aa_Tup((*(*(_6817_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_67635_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d984b3:;
		if (it != expr_end) {
			jule::I32 _6888_i = it - expr->begin();
			jule::Ptr<_1a48a2753_Data> _68815_l = *it;
			{
				if ((_68815_l == nullptr)) {
					goto _iter_next_1a9d984b3;
				};
				;
				_1a5bac6d8_indent((*(_self_))._field_oc);
				_1a6251d26_assignLeft(_self_, &((*(_68815_l))._field_Model));
				{
					
					if (_1a48d5c1a_Equal((*(_6877_tup))._field_Types[_6888_i], (*(_68815_l))._field_Type)) {
						_case_begin_1a9da3699:;
						{
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_6888_i));
						}
					}
					else if (_1a538ae83_IsAny(&((*(_68815_l))._field_Type))) {
						_case_begin_1a9da05a8:;
						{
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_6888_i));
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a5bad83d_pushAnyType((*(_self_))._field_oc, (*(_6877_tup))._field_Types[_6888_i])));
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1a9d997a0:;
						{
							if ((_1a48d948d_Trait((*(_6877_tup))._field_Types[_6888_i].ptr()) != nullptr)) {
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1a4729476_Trait> _70910_t1 = _1a48d948d_Trait((*(_68815_l))._field_Type.ptr());;
								jule::Ptr<_1a4729476_Trait> _71010_t2 = _1a48d948d_Trait((*(_6877_tup))._field_Types[_6888_i].ptr());;
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_6888_i));
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1a5bae212_pushAndWriteMaskMapper((*(_self_))._field_oc, _70910_t1, _71010_t2);
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1a9d9a6a2;
							};
							jule::Ptr<_1a4729476_Trait> _7185_t = _1a48d948d_Trait((*(_68815_l))._field_Type);;
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_6888_i));
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1a6271a16_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7185_t);
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a538dd65_FindTraitTypeOffset(_7185_t, (*(_6877_tup))._field_Types[_6888_i])));
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1a9d9a6a2:;
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a9d984b3:;
			++it;
			_6888_i++;
			goto _iter_begin_1a9d984b3;
		}
		_iter_end_1a9d984b3:;
	};
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a6253993_multiAssign(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d0a27_MultiAssign> _73532_a) {
	{
		auto expr = &((*(_73532_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9da910b:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _73815_d = *it;
			{
				_1a5bb39b9_varInitExpr((*(_self_))._field_oc, &(_73815_d), nullptr);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1a5bac6d8_indent((*(_self_))._field_oc);
			}
			_iter_next_1a9da910b:;
			++it;
			goto _iter_begin_1a9da910b;
		}
		_iter_end_1a9da910b:;
	};
	{
		auto &_match_expr{ (*(_73532_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a9da9826:;
			{
				_1a6253179_mapLookupAssign(_self_, &(_73532_a));
				return;;
			}
		}
		_match_end_1a9da97b0:;
	};
	{
		auto &_match_expr{ (*(_73532_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a9da98ae:;
			{
				_1a6253432_multiAssignTup(_self_, &(_73532_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9dab372:;
			{
				_1a62536da_multiAssignFn(_self_, &(_73532_a));
			}
		}
		else {
			_case_begin_1a9dab30b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:757:4"));;
			}
		}
		_match_end_1a9dab295:;
	};
}



inline jule::Fn<void> _1a6253cd4_matchExpr(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d1264_Match> _76130_m) {
	if ((!(_1a48a318d_IsConst((*(_76130_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1a9dad8c4, jule::Ptr<__jule_anon_1a9dad8c4_ctx>::make(__jule_anon_1a9dad8c4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9dad8c4_ctx_handler);;
	};
	if (((!(_1a47095aa_IsBool((*(*(_76130_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1a4706eae_ReadBool((*((*(_76130_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1a9daec05, jule::Ptr<__jule_anon_1a9daec05_ctx>::make(__jule_anon_1a9daec05_ctx{._self_=_self_,._76130_m=_76130_m}).as<jule::Uintptr>(), __jule_anon_1a9daec05_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a6254147_case(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d1264_Match> _77125_m, jule::Ptr<_1a47d1c8c_Case> _77146_c) {
	if ((((*(_77146_c))._field_Exprs.len() != 0LL) && (!((*(_77125_m))._field_Comptime)))) {
		if ((((*_77125_m.alloc)._field_Cases.len() > 0LL) && ((*(_77125_m))._field_Cases[0LL] == _77146_c))) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_77146_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9db3e90:;
			if (it != expr_end) {
				jule::I32 _7789_i = it - expr->begin();
				jule::Ptr<_1a48a2753_Data> _77816_expr = *it;
				{
					{
						
						if ((!((*_77125_m.alloc)._field_TypeMatch))) {
							_case_begin_1a9dbb9c0:;
							{
								jule::Fn<void> _7816_caseExpr = _1a6253cd4_matchExpr(_self_, _77125_m);;
								if (_1a48a34ce_GoodOperand((*_77125_m.alloc)._field_Expr.ptr(), &(_77816_expr))) {
									if ((_7816_caseExpr != nullptr)) {
										_7816_caseExpr();
										_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_77816_expr))._field_Model);
								} else {
									_1a625e7a1_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77816_expr))._field_Model);
									if ((_7816_caseExpr != nullptr)) {
										_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7816_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1a9db4a62:;
							{
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a48d54cd_Type> _79710_tk = (*(_77816_expr))._field_Model.cast_ptr<_1a48d54cd_Type>(&__jule_any_type86);;
								if ((_1a48d948d_Trait((*((*_77125_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a625aa99_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a48d7e1a_Sptr((*(_77816_expr))._field_Type) != nullptr));
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a6271a16_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a48d948d_Trait((*((*(_77125_m))._field_Expr))._field_Type));
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a538dd65_FindTraitTypeOffset(_1a48d948d_Trait((*((*(_77125_m))._field_Expr))._field_Type), (*_77816_expr.alloc)._field_Type)));
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _8077_j = _1a5bad83d_pushAnyType((*(_self_))._field_oc, _79710_tk);;
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_8077_j));
								};
							}
						}
						_match_end_1a9db4952:;
					};
					if ((((*_77146_c.alloc)._field_Exprs.len() - _7789_i) > 1LL)) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1a9db3e90:;
				++it;
				_7789_i++;
				goto _iter_begin_1a9db3e90;
			}
			_iter_end_1a9db3e90:;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_77125_m))._field_Default == _77146_c) && ((*_77125_m.alloc)._field_Cases.len() != 0LL))) {
		_1a5bac6d8_indent((*(_self_))._field_oc);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a6273c27_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_77146_c));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_77146_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a5bac6d8_indent((*(_self_))._field_oc);
		_1a62563ad_scope(_self_, (*_77146_c.alloc)._field_Scope);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6254400_matchSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d1264_Match> _84128_m) {
	if ((((*(_84128_m))._field_Cases.len() == 0LL) && ((*_84128_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_84128_m.alloc)._field_Comptime && (((*_84128_m.alloc)._field_Default == nullptr) || ((*((*((*_84128_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((!((*_84128_m.alloc)._field_Comptime)) && (!(_1a48a318d_IsConst((*_84128_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a614b32a_Copy && _1a6257117_isCopyOptimizable(&((*_84128_m.alloc)._field_Expr)))) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_84128_m))._field_Expr.alloc)._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	if (((*_84128_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_84128_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9dd030d:;
			if (it != expr_end) {
				jule::Ptr<_1a47d1c8c_Case> _86916_c = *it;
				{
					if ((_86916_c == nullptr)) {
						goto _iter_next_1a9dd030d;
					};
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a5bac6d8_indent((*(_self_))._field_oc);
					_1a6254147_case(_self_, _84128_m, _86916_c);
				}
				_iter_next_1a9dd030d:;
				++it;
				goto _iter_begin_1a9dd030d;
			}
			_iter_end_1a9dd030d:;
		};
	};
	if (((*_84128_m.alloc)._field_Default != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a6254147_case(_self_, _84128_m, (*_84128_m.alloc)._field_Default);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a627393b_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_84128_m));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a62546a8_fallSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d2485_FallSt> _89623_f) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a6273c27_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89623_f))._field_DestCase);
}



inline void _1a6254961_breakSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47ce0ca_BreakSt> _90124_b) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_90124_b))._field_It != 0LLU)) {
		static__1a6273078_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_90124_b.alloc)._field_It);
	} else {
		static__1a627393b_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_90124_b))._field_Mtch);
	};
}



inline void _1a6254c19_setResult(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d282b_RetSt> _91030_r) {
	if (((*((*((*((*(_91030_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91030_r.alloc)._field_Expr);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a5bac6d8_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_91030_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a9dda192:;
			{
				jule::Slice<jule::Ptr<_1a48a2753_Data>> _9208_datas = (*((*(_91030_r))._field_Expr.unsafe_cast_ptr<_1a4717079_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9208_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9dddd77:;
					if (it != expr_end) {
						jule::I32 _9218_i = it - expr->begin();
						jule::Ptr<_1a48a2753_Data> _92111_data = *it;
						{
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_9218_i));
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_92111_data))._field_Model);
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1a5bac6d8_indent((*(_self_))._field_oc);
						}
						_iter_next_1a9dddd77:;
						++it;
						_9218_i++;
						goto _iter_begin_1a9dddd77;
					}
					_iter_end_1a9dddd77:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9ddcd21:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a626890e_model((*((*(_self_))._field_oc))._field_ec, (*_91030_r.alloc)._field_Expr);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1a9ddc936:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:934:4"));;
			}
		}
		_match_end_1a9ddc8c0:;
	};
}



inline void _1a6254ec2_retSt(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47d282b_RetSt> _93826_r) {
	if (_1a471e218_IsVoid((*((*(_93826_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_93826_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_93826_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_93826_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_93826_r))._field_Func.alloc)._field_Result);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93826_r.alloc)._field_Expr);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93826_r.alloc)._field_Expr);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_93826_r))._field_Expr != nullptr)) {
		_1a6254c19_setResult(_self_, _93826_r);
	};
	if ((*((*((*_93826_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a5bc67bd_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_93826_r))._field_Func.alloc)._field_Result));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a625527a_var(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4852e51_Var> _97424_v) {
	if ((!((*(_97424_v))._field_Constant))) {
		_1a5bb3c72_var((*(_self_))._field_oc, _97424_v);
	};
}



inline void _1a6255533_mutSlicing(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a61317d8_MutSlicingExprModel> _98031_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_98031_m))._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1ce7a1083_Production))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_98031_m.alloc)._field_Token));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_98031_m.alloc)._field_Left);
	if (((*_98031_m.alloc)._field_Right != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_98031_m.alloc)._field_Right);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a62557db_swap(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a6130584_SwapExprModel> _99725_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a625e7a1_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99725_m))._field_Left))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a625e7a1_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_99725_m.alloc)._field_Right))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6255a94_exceptionalForwarding(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a6130001_ExceptionalForwardingExprModel> _100542_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a62611cb_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_100542_m))._field_Expr));
}



inline void _1a6255d4c_st(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Any _101123_st) {
	if ((_101123_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _101123_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a9e0b05e:;
			{
				_1a62563ad_scope(_self_, _101123_st.cast_ptr<_1a47cba34_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9e0b2d4:;
			{
				_1a625527a_var(_self_, _101123_st.cast_ptr<_1a4852e51_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a9e0b34a:;
			{
				_1a626890e_model((*((*(_self_))._field_oc))._field_ec, (*(_101123_st.unsafe_cast_ptr<_1a48a2753_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a9e0baba:;
			{
				_1a6250682_conditional(_self_, _101123_st.cast_ptr<_1a47cc66c_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a9e0bb31:;
			{
				_1a625093a_infIter(_self_, _101123_st.cast_ptr<_1a47cc969_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a9e0bb97:;
			{
				_1a6250be3_whileIter(_self_, _101123_st.cast_ptr<_1a47cce20_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a9e0bc0d:;
			{
				_1a6250e9b_rangeIter(_self_, _101123_st.cast_ptr<_1a47cd86b_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a9e0bc74:;
			{
				_1a6251254_cont(_self_, _101123_st.cast_ptr<_1a47cdc01_ContSt>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a9e0bcda:;
			{
				_1a625150c_label(_self_, _101123_st.cast_ptr<_1a47ce581_Label>(&__jule_any_type18));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a9e0bd51:;
			{
				_1a62517b5_gotoSt(_self_, _101123_st.cast_ptr<_1a47cebe1_GotoSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a9e0bdb7:;
			{
				_1a6251a6d_postfix(_self_, _101123_st.cast_ptr<_1a47d00ba_Postfix>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a9e0be2d:;
			{
				_1a6252dc1_assign(_self_, _101123_st.cast_ptr<_1a47d0571_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a9e0be94:;
			{
				_1a6253993_multiAssign(_self_, _101123_st.cast_ptr<_1a47d0a27_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a9e0c00a:;
			{
				_1a6254400_matchSt(_self_, _101123_st.cast_ptr<_1a47d1264_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a9e0c071:;
			{
				_1a62546a8_fallSt(_self_, _101123_st.cast_ptr<_1a47d2485_FallSt>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a9e0c0e8:;
			{
				_1a6254961_breakSt(_self_, _101123_st.cast_ptr<_1a47ce0ca_BreakSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a9e0c170:;
			{
				_1a6254ec2_retSt(_self_, _101123_st.cast_ptr<_1a47d282b_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a9e0c1e7:;
			{
				_1a62663e0_pushToSlice((*((*(_self_))._field_oc))._field_ec, _101123_st.cast_ptr<_1a6132344_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a9e0c26e:;
			{
				_1a6266698_appendToSlice((*((*(_self_))._field_oc))._field_ec, _101123_st.cast_ptr<_1a613271d_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a9e0c2e6:;
			{
				_1a6255533_mutSlicing(_self_, _101123_st.cast_ptr<_1a61317d8_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1a9e0c36d:;
			{
				_1a62557db_swap(_self_, _101123_st.cast_ptr<_1a6130584_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a9e0c3e5:;
			{
				_1a6255a94_exceptionalForwarding(_self_, _101123_st.cast_ptr<_1a6130001_ExceptionalForwardingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a9e0c46c:;
			{
				_1a6250121_strRuneIter(_self_, _101123_st.cast_ptr<_1a6132ae7_StrRuneIter>(&__jule_any_type122));
			}
		}
		else {
			_case_begin_1a9e0adc7:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1a9e0ad61:;
	};
}



inline void _1a6256105_scopeStmts(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cba34_Scope>* _106732_s) {
	{
		auto expr = &((*((*(_106732_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e1a0d4:;
		if (it != expr_end) {
			jule::Any _106815_st = *it;
			{
				_1a5bac6d8_indent((*(_self_))._field_oc);
				_1a6255d4c_st(_self_, _106815_st);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a9e1a0d4:;
			++it;
			goto _iter_begin_1a9e1a0d4;
		}
		_iter_end_1a9e1a0d4:;
	};
}



inline void _1a62563ad_scope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47cba34_Scope> _107626_s) {
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	if ((*(_107626_s))._field_Deferred) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a6256105_scopeStmts(_self_, &(_107626_s));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_107626_s.alloc)._field_Deferred) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a6256666_commonFuncScope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _109137_f) {
	if ((!(_1a471e218_IsVoid((*((*(_109137_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a48e36d9_Tuple> _10938_tup = _1a48d99aa_Tup((*((*(_109137_f))))._field_Result.ptr());;
		if ((_10938_tup != nullptr)) {
			_1a5bac6d8_indent((*(_self_))._field_oc);
			_1a5bc60e7_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10938_tup);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10938_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a9e21d33:;
				if (it != expr_end) {
					jule::I32 _109810_i = it - expr->begin();
					jule::Ptr<_1a48d54cd_Type> _109817_t = *it;
					{
						if (_1a5bc899b_shouldInitialized(&(_109817_t))) {
							_1a5bac6d8_indent((*(_self_))._field_oc);
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_109810_i));
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a6269aca_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _109817_t);
							_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1a9e21d33:;
					++it;
					_109810_i++;
					goto _iter_begin_1a9e21d33;
				}
				_iter_end_1a9e21d33:;
			};
		} else if (((*((*(*((*(_109137_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a5bac6d8_indent((*(_self_))._field_oc);
			_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_109137_f))))._field_Result);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a5bc899b_shouldInitialized(&((*((*(_109137_f))))._field_Result))) {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a6269aca_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_109137_f))))._field_Result);
			};
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a6256105_scopeStmts(_self_, &((*((*(_109137_f))))._field_Scope));
	if (((*(*((*(_109137_f))))._field_Decl.alloc)._field_Exceptional && _1a471e218_IsVoid((*((*(_109137_f))))._field_Decl))) {
		_1a5bac6d8_indent((*_self_.alloc)._field_oc);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a62569c9_anonFuncScope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel> _113134_m, jule::Str _113161_ident) {
	if (((*((*(_113134_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11353_closure = _1a538b2c4_IsClosure(&(_113134_m));;
	if (_11353_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a4852e51_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1a4852e51_Var>>((void*)__jule_anon_1a9e305c2, jule::Ptr<__jule_anon_1a9e305c2_ctx>::make(__jule_anon_1a9e305c2_ctx{._self_=_self_,._113134_m=_113134_m}).as<jule::Uintptr>(), __jule_anon_1a9e305c2_ctx_handler); __jule_collection; }));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	if (_11353_closure) {
		_1a5bac6d8_indent((*(_self_))._field_oc);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a5babd36_write((*(_self_))._field_oc, _113161_ident);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a5babd36_write((*(_self_))._field_oc, _113161_ident);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a6256666_commonFuncScope(_self_, &((*_113134_m.alloc)._field_Func));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11353_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a6256c82_funcScope(jule::Ptr<_1a624dbe1_scopeCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _116330_f) {
	if (((*(_116330_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a6256666_commonFuncScope(_self_, &(_116330_f));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1a625a13c_exprCoder> static__1a625a538_new(jule::Ptr<_1a5bab61b_ObjectCoder>* _4821_oc) {
	return jule::new_ptr<_1a625a13c_exprCoder>(_1a625a13c_exprCoder{._field_oc=(*(_4821_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a4852e51_Var>>>(nullptr)});;
}



inline void _1a625a7e1_string(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const>* _5424_c) {
	jule::Str _553_content = _1a4707245_ReadStr((*(_5424_c)).ptr());;
	if ((_553_content.len() == 0LL)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _603_len = _1b4576eea_FmtInt(static_cast<jule::I64>(_553_content.len()), 10LL);;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a626a889_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _553_content);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5babd36_write((*(_self_))._field_oc, _603_len);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a625aa99_boolean(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Bool _6924_b) {
	if (_6924_b) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a625ac97_nilLit(jule::Ptr<_1a625a13c_exprCoder> _self_) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a625b0d8_ftoaSpecialCases(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::F64* _8134_x) {
	{
		
		if (_1b452b9b6_IsNaN((*(_8134_x)))) {
			_case_begin_1a9e5496a:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1b452c148_IsInf((*(_8134_x)), 1LL)) {
			_case_begin_1a9e54a14:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1b452c148_IsInf((*(_8134_x)), -1LL)) {
			_case_begin_1a9e54a8b:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1a9e548d2:;
			{
				return false;;
			}
		}
		_match_end_1a9e547c2:;
	};
	return true;;
}



inline void _1a625b391_float32(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const>* _9525_c) {
	jule::F64 _963_x = _1a4707c7e_AsF64((*(_9525_c)).ptr());;
	if (_1a625b0d8_ftoaSpecialCases(_self_, &(_963_x))) {
		return;;
	};
	{
		
		if ((_963_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a9e58c27:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_963_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a9e58100:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1a9e57c6a:;
			{
				_1a626ac30_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _963_x, 32LL);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1a9e57a06:;
	};
}



inline void _1a625b649_float64(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const>* _11425_c) {
	jule::F64 _1153_x = _1a4707c7e_AsF64((*(_11425_c)).ptr());;
	if (_1a625b0d8_ftoaSpecialCases(_self_, &(_1153_x))) {
		return;;
	};
	{
		
		if ((_1153_x == jule::MAX_F64)) {
			_case_begin_1a9e5b565:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1153_x == jule::MIN_F64)) {
			_case_begin_1a9e5b246:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1a9e5b1d0:;
			{
				_1a626ac30_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1153_x, 64LL);
			}
		}
		_match_end_1a9e5ae6b:;
	};
}



inline void _1a625b902_constant(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4276798_Const> _13229_c) {
	{
		
		if (_1a4709841_IsStr(_13229_c.ptr())) {
			_case_begin_1a9e5d3e1:;
			{
				_1a625a7e1_string(_self_, &(_13229_c));
			}
		}
		else if (_1a47095aa_IsBool(_13229_c.ptr())) {
			_case_begin_1a9e5d457:;
			{
				_1a625aa99_boolean(_self_, _1a4706eae_ReadBool(_13229_c));
			}
		}
		else if (_1a4709ac7_IsF64(_13229_c.ptr())) {
			_case_begin_1a9e5d4bd:;
			{
				{
					
					if (((*_13229_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1a9e60e0a:;
						{
							_1a625b391_float32(_self_, &(_13229_c));
						}
					}
					else {
						_case_begin_1a9e60a64:;
						{
							_1a625b649_float64(_self_, &(_13229_c));
						}
					}
					_match_end_1a9e60954:;
				};
			}
		}
		else if (_1a470908d_IsI64(_13229_c.ptr())) {
			_case_begin_1a9e5d534:;
			{
				_1a626b01b_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1a4706992_ReadI64(_13229_c));
			}
		}
		else if (_1a4709324_IsU64(_13229_c.ptr())) {
			_case_begin_1a9e5d59a:;
			{
				_1a626b307_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1a4706c28_ReadU64(_13229_c));
			}
		}
		else if (_1a4709d5d_IsNil(_13229_c.ptr())) {
			_case_begin_1a9e5d611:;
			{
				_1a625ac97_nilLit(_self_);
			}
		}
		else {
			_case_begin_1a9e5d37a:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1a9e5d27b:;
	};
}



inline void _1a625bd20_operatorOverloadingUnary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _15646_s, jule::U32 _15667_op, jule::Any _15686_e) {
	;
	jule::Ptr<_1a4721d20_FnIns> _1587_f = _1a538e294_FindOperator(_15646_s, _15667_op, true);;
	if ((_1587_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:160:4"));;
	};
	static__1a627172a_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1587_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a625e7a1_possibleRefExpr(_self_, _15686_e);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a625c23d_divByZeroBinary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a463d137_Token>* _16833_op, jule::Ptr<_1a4711491_OperandExprModel>* _16857_l, jule::Ptr<_1a4711491_OperandExprModel>* _16890_r) {
	;
	;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_16857_l))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16890_r))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_16890_r))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1ce7a1083_Production))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1a5bae4ba_locInfo((*(_self_))._field_oc, _16833_op);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a9e6e7dc:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a9e7301b:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1a9e72e72:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a625c936__unsafeBinary(jule::Ptr<_1a625a13c_exprCoder> _self_, _1e71a80b0_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1a48d54cd_Type>* _2088_lk, jule::Ptr<_1a48d54cd_Type>* _20830_rk, jule::U32 _20847_op, jule::Str _20862_kind) {
	if ((_1a48d9207_Struct((*(_2088_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1a4676d30_StructIns> _2118_s = _1a48d9207_Struct((*(_2088_lk)).ptr());;
		_1a626b956_operatorOverloadingBinary(_20735_buf, &(_2118_s), _20759_l, _20768_r, _20847_op, _20862_kind);
		return;;
	};
	if (((_20847_op == static_cast<jule::U32>(50LLU)) || (_20847_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_1a538ae83_IsAny(_2088_lk)) {
				_case_begin_1a9e77a6a:;
				{
					if (((!(_1a48d6611_IsNil((*(_20830_rk)).ptr()))) && (!(_1a538ae83_IsAny(_20830_rk))))) {
						({
							auto except = _1e71a9369_WriteByte(_20735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
						});
						if ((_20847_op == static_cast<jule::U32>(51LLU))) {
							({
								auto except = _1e71a9369_WriteByte(_20735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:225:7"));
							});
						};
						jule::I32 _2276_i = _1a5bad83d_pushAnyType((*(_self_))._field_oc, (*(_20830_rk)));;
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:228:6"));
							(except.result);
						});
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, _1b45772b4_Itoa(_2276_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:229:6"));
							(except.result);
						});
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:230:6"));
							(except.result);
						});
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, (*(_20759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:231:6"));
							(except.result);
						});
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
							(except.result);
						});
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, (*(_20768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:233:6"));
							(except.result);
						});
						({
							auto except = _1e71a90b1_WriteStr(_20735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:234:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1a48d8954_Arr((*(_2088_lk)).ptr()) != nullptr)) {
				_case_begin_1a9e77b14:;
				{
					jule::Ptr<_1a48e4e16_Arr> _2405_arr = _1a48d8954_Arr((*(_2088_lk)).ptr());;
					jule::Ptr<_1a471dc62_Fn> _2419_f = _1a4966a48_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1a4721d20_FnIns> _2429_ins = _1a538e618_FindFnGenericInstance(&(_2419_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2405_arr))._field_Elem; __jule_collection; }));;
					if ((_20847_op == static_cast<jule::U32>(51LLU))) {
						({
							auto except = _1e71a9369_WriteByte(_20735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:244:6"));
						});
					};
					static__1a627172a_funcIns(_20735_buf, &(_2429_ins));
					({
						auto except = _1e71a9369_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:247:5"));
					});
					({
						auto except = _1e71a90b1_WriteStr(_20735_buf, (*(_20759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:248:5"));
						(except.result);
					});
					({
						auto except = _1e71a90b1_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:249:5"));
						(except.result);
					});
					({
						auto except = _1e71a90b1_WriteStr(_20735_buf, (*(_20768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:250:5"));
						(except.result);
					});
					({
						auto except = _1e71a90b1_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
						(except.result);
					});
					({
						auto except = _1e71a90b1_WriteStr(_20735_buf, _1b45772b4_Itoa((*_2405_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:252:5"));
						(except.result);
					});
					({
						auto except = _1e71a9369_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
					return;;
				}
			}
			_match_end_1a9e7797c:;
		};
	};
	{
		auto &_match_expr{ _20847_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a9e77b9c:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _2614_lp = _1a48d7b84_Prim((*(_2088_lk)).ptr());;
				if (((_2614_lp != nullptr) && _1a479c32e_IsUnsigInt((*_2614_lp.alloc)._field_Kind))) {
					({
						auto except = _1e71a9369_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:5"));
					});
					_1a5bbc341_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20735_buf, _2614_lp);
					({
						auto except = _1e71a9369_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:265:5"));
					});
				};
			}
		}
		_match_end_1a9e7b761:;
	};
	({
		auto except = _1e71a9369_WriteByte(_20735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:269:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_20735_buf, (*(_20759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:270:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:271:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_20735_buf, _20862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:272:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:273:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_20735_buf, (*(_20768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:274:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_20735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:275:3"));
	});
}



inline void _1a625cbde_unsafeBinary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471198b_BinaryExprModel> _27833_m) {
	jule::I32 _2793_i = _1e71a9dc5_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2807_oldbuf = _1e71aa3e2_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_27833_m))._field_Left))._field_Model);
	jule::Str _2823_l = __jule_bytesToStr(_1e71aa3e2_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1e71aa69a_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_1a625e7a1_possibleRefExpr(_self_, (*((*_27833_m.alloc)._field_Right))._field_Model);
	jule::Str _2853_r = __jule_bytesToStr(_1e71aa3e2_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1e71aa69a_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_1a625c936__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2823_l), &(_2853_r), &((*(*(_27833_m))._field_Left.alloc)._field_Type), &((*(*(_27833_m))._field_Right.alloc)._field_Type), (*((*_27833_m.alloc)._field_Op))._field_Id, (*(*(_27833_m))._field_Op.alloc)._field_Kind);
}



inline void _1a625d052_shl(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4711491_OperandExprModel>* _29025_l, jule::Ptr<_1a4711491_OperandExprModel>* _29058_r) {
	;
	;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_29025_l))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29058_r))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_29058_r))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a4794579_BitSizeOf((*(_1a48d7b84_Prim((*((*(_29025_l))))._field_Type.ptr())))._field_Kind)));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a625d3b5_shr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4711491_OperandExprModel>* _31825_l, jule::Ptr<_1a4711491_OperandExprModel>* _31858_r) {
	;
	;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_31825_l))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31858_r))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_31858_r))))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a4794579_BitSizeOf((*(_1a48d7b84_Prim((*((*(_31825_l))))._field_Type.ptr())))._field_Kind)));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a625d66d_binary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471198b_BinaryExprModel> _34627_m) {
	{
		auto &_match_expr{ (*((*(_34627_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a9ea9849:;
			{
				if ((_1ce7a0d41_Safety && (_1a48d9207_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1a625c23d_divByZeroBinary(_self_, &((*_34627_m.alloc)._field_Op), &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a9ea98c1:;
			{
				if ((_1a48d9207_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a625d052_shl(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a9ea9937:;
			{
				if ((_1a48d9207_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a625d3b5_shr(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1a9ea977d:;
	};
	_1a625cbde_unsafeBinary(_self_, _34627_m);
}



inline void _1a625d926_var(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4852e51_Var> _37024_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9eae750:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a4852e51_Var>> _37110_prefix = *it;
			{
				if (_37110_prefix(_37024_m)) {
					return;;
				};
			}
			_iter_next_1a9eae750:;
			++it;
			goto _iter_begin_1a9eae750;
		}
		_iter_end_1a9eae750:;
	};
	if ((*(_37024_m))._field_Binded) {
		jule::Ptr<_1a4652a86_Directive> _3774_d = _1a538cade_FindDirective(&((*_37024_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3774_d != nullptr)) {
			_1a5bac0de_writeBytes((*_self_.alloc)._field_oc, _1a5bb9162_concatAllParts((*_3774_d.alloc)._field_Args));
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a62729a1_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _37024_m);
}



inline void _1a625dbce_structureIns(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676d30_StructIns> _38633_m) {
	_1a5bbeac4_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38633_m);
}



inline void _1a625de87_unary(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4711d65_UnaryExprModel> _39026_m) {
	if ((_1a48d9207_Struct((*((*(_39026_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a4676d30_StructIns> _3938_s = _1a48d9207_Struct((*((*(_39026_m))._field_Expr))._field_Type);;
		_1a625bd20_operatorOverloadingUnary(_self_, &(_3938_s), (*((*_39026_m.alloc)._field_Op))._field_Id, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a9eb5a64:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a9eb63c2:;
			{
				if ((_1ce7a1083_Production || (_1a48d7e1a_Sptr((*((*(_39026_m))._field_Expr))._field_Type) == nullptr))) {
					goto _match_end_1a9eb6328;
				};
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_39026_m.alloc)._field_Op));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1a9eb6328:;
	};
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a5babd36_write((*(_self_))._field_oc, (*(*(_39026_m))._field_Op.alloc)._field_Kind);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr(_self_, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a625e240_structureLit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4712739_StructLitExprModel> _42133_m) {
	if ((*((*((*(_42133_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a5bbeac4_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_42133_m.alloc)._field_Strct);
	if ((*(*((*(_42133_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4327_inited = false;;
	_julec_label_1a9ebd682:;
	{
		auto expr = &((*(*(_42133_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ec183e:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> _43415_f = *it;
			{
				{
					auto expr = &((*_42133_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9ec2554:;
					if (it != expr_end) {
						jule::Ptr<_1a4712393_StructArgExprModel> _43516_arg = *it;
						{
							if (((*(_43516_arg))._field_Field == _43415_f)) {
								if (_4327_inited) {
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1a62726b5_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43415_f))._field_Decl));
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1a625e7a1_possibleRefExpr(_self_, (*((*_43516_arg.alloc)._field_Expr))._field_Model);
								_4327_inited=true;
								goto _iter_next_1a9ec183e;
							};
						}
						_iter_next_1a9ec2554:;
						++it;
						goto _iter_begin_1a9ec2554;
					}
					_iter_end_1a9ec2554:;
				};
				if ((*(*((*(_42133_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4327_inited=false;
					goto _iter_next_1a9ec183e;
				};
				if (_4327_inited) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4327_inited=_1a6268c50_handleFieldByDefault(_self_, &(_43415_f));
			}
			_iter_next_1a9ec183e:;
			++it;
			goto _iter_begin_1a9ec183e;
		}
		_iter_end_1a9ec183e:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a625e4e8_allocStructure(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4712a36_AllocStructLitExprModel> _46435_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a62723c9_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_46435_m))._field_Lit))._field_Strct));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a625e240_structureLit(_self_, (*_46435_m.alloc)._field_Lit);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a625e7a1_possibleRefExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _47232_expr) {
	{
		auto &_match_expr{ _47232_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9ec9d0e:;
			{
				jule::Ptr<_1a4852e51_Var> _4754_v = _47232_expr.unsafe_cast_ptr<_1a4852e51_Var>();;
				if ((*(_4754_v))._field_Reference) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a626890e_model(_self_, _47232_expr);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1a9ec9c98:;
	};
	_1a626890e_model(_self_, _47232_expr);
}



inline void _1a625ebbe_castTraitFromTrait(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47130b9_CastingExprModel>* _48640_m, jule::Ptr<_1a4729476_Trait> _48672_t1, jule::Ptr<_1a4729476_Trait> _48694_t2) {
	_1a625e7a1_possibleRefExpr(_self_, (*((*((*(_48640_m))))._field_Expr))._field_Model);
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a5bae212_pushAndWriteMaskMapper((*(_self_))._field_oc, _48672_t1, _48694_t2);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a625ee77_casting(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47130b9_CastingExprModel> _49928_m) {
	{
		
		if (_1a538ae83_IsAny(&((*(_49928_m))._field_Type))) {
			_case_begin_1a9ece907:;
			{
				if (_1a48d6611_IsNil((*_49928_m.alloc)._field_ExprType.ptr())) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a48d86bd_TypeEnum((*(_49928_m))._field_ExprType) != nullptr)) {
					_1a625e7a1_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _5104_i = _1a5bad83d_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_ExprType);;
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49928_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1a9ed15da:;
						{
							jule::Ptr<_1a48dd5e6_Prim> _5145_prim = _1a48d7b84_Prim((*(_49928_m))._field_ExprType);;
							if (((_5145_prim != nullptr) && _1a479c5e8_IsInt((*_5145_prim.alloc)._field_Kind))) {
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a5bbc341_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5145_prim);
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a625e7a1_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1a9ed381d;
							};
							goto _case_begin_1a9ed3884;
						}
					}
					else {
						_case_begin_1a9ed3884:;
						{
							_1a625e7a1_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1a9ed381d:;
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_5104_i));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a538ae83_IsAny(&((*(_49928_m))._field_ExprType))) {
			_case_begin_1a9ece9a1:;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a48d7e1a_Sptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a48d7e1a_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1ce7a1083_Production))) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a5bad83d_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_Type)));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a48d81a1_Ptr((*(_49928_m))._field_ExprType.ptr()) != nullptr) || (_1a48d81a1_Ptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9ecea17:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a625e7a1_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a48d948d_Trait((*(_49928_m))._field_ExprType.ptr()) != nullptr)) {
			_case_begin_1a9ecea7d:;
			{
				if ((_1a48d948d_Trait((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1a625ebbe_castTraitFromTrait(_self_, &(_49928_m), _1a48d948d_Trait((*(_49928_m))._field_Type), _1a48d948d_Trait((*(_49928_m))._field_ExprType));
					return;;
				};
				_1a625e7a1_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a48d7e1a_Sptr((*(_49928_m))._field_Type) != nullptr)) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a48d7e1a_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1ce7a1083_Production))) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a6271a16_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a48d948d_Trait((*(_49928_m))._field_ExprType));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a538dd65_FindTraitTypeOffset(_1a48d948d_Trait((*(_49928_m))._field_ExprType), (*_49928_m.alloc)._field_Type)));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a48d948d_Trait((*(_49928_m))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9eceae4:;
			{
				_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a625e7a1_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a6271a16_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a48d948d_Trait((*(_49928_m))._field_Type));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_1a538dd65_FindTraitTypeOffset(_1a48d948d_Trait((*(_49928_m))._field_Type), (*_49928_m.alloc)._field_ExprType)));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1a9ece770:;
	};
	jule::Ptr<_1a48dd5e6_Prim> _5967_prim = _1a48d7b84_Prim((*(_49928_m))._field_Type.ptr());;
	if (((_5967_prim != nullptr) && _1a48e1ab1_IsStr(_5967_prim))) {
		jule::Ptr<_1a48dd5e6_Prim> _5988_eprim = _1a48d7b84_Prim((*_49928_m.alloc)._field_ExprType.ptr());;
		if (((_5988_eprim != nullptr) && (_5967_prim != nullptr))) {
			if (_1a48e0021_IsU8(_5988_eprim)) {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1a625e7a1_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1a48e2ae5_Slc> _6098_slc = _1a48d8bda_Slc((*(_49928_m))._field_ExprType);;
		if ((_6098_slc != nullptr)) {
			_5988_eprim=_1a48d7b84_Prim((*_6098_slc.alloc)._field_Elem.ptr());
			if (_1a48dea04_IsI32(_5988_eprim)) {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1a625e7a1_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5967_prim=_1a48d7b84_Prim((*(_49928_m))._field_ExprType);
	if (((_5967_prim != nullptr) && _1a48e1ab1_IsStr(_5967_prim))) {
		jule::Ptr<_1a48e2ae5_Slc> _6258_slc = _1a48d8bda_Slc((*(_49928_m))._field_Type);;
		if ((_6258_slc != nullptr)) {
			_5967_prim=_1a48d7b84_Prim((*(_6258_slc))._field_Elem);
			if (_1a48dea04_IsI32(_5967_prim)) {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1a625e7a1_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a625e7a1_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6260230_args(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _64626_m) {
	jule::I32 _6477_j = 0LL;;
	if (((((*((*((*(_64626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64626_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a471c8dc_IsSelf((*((*((*((*(_64626_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6477_j)++;
	};
	{
		auto expr = &((*((*(_64626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa016224:;
		if (it != expr_end) {
			jule::I32 _6527_i = it - expr->begin();
			jule::Any _65210_arg = *it;
			{
				jule::Ptr<_1a4720bba_ParamIns> _6534_p = (*(*((*(_64626_m))))._field_Func.alloc)._field_Params[_6477_j];;
				if ((((*(_6534_p))._field_Decl != nullptr) && (*(*(_6534_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1aa01904b:;
							{
								jule::Ptr<_1a4852e51_Var> _6576_v = _65210_arg.unsafe_cast_ptr<_1a4852e51_Var>();;
								if ((*(_6576_v))._field_Reference) {
									_1a626890e_model(_self_, _65210_arg);
									goto _julec_label_1aa01ba98;
								};
							}
						}
						_match_end_1aa018ed5:;
					};
					_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a626890e_model(_self_, _65210_arg);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1aa01ba98;
				};
				_1a625e7a1_possibleRefExpr(_self_, _65210_arg);
				_julec_label_1aa01ba98:;
				if ((((*((*(_64626_m))))._field_Args.len() - _6527_i) > 1LL)) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6477_j)++;
			}
			_iter_next_1aa016224:;
			++it;
			_6527_i++;
			goto _iter_begin_1aa016224;
		}
		_iter_end_1aa016224:;
	};
}



inline void _1a62604d8_modelForCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _67733_expr) {
	{
		auto &_match_expr{ _67733_expr };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1aa01caee:;
			{
				_1a6263b18_funcIns(_self_, _67733_expr.cast_ptr<_1a4721d20_FnIns>(&__jule_any_type63));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa017eb2:;
			{
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _6838_ssie = _67733_expr.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>();;
				if (((*(_6838_ssie))._field_Method != nullptr)) {
					_1a6263b18_funcIns(_self_, (*_6838_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1aa01ca88:;
	};
	_1a625e7a1_possibleRefExpr(_self_, _67733_expr);
}



inline void _1a6260791_pushCallInf(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _69229_m) {
	if ((_1ce7a1083_Production || (!((*((*((*(_69229_m))))._field_Func))._field_Anon)))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_69229_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1aa0216a2:;
				{
					if ((*((*((*((*((*((*(_69229_m))))._field_Expr.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1aa02163b:;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*((*(_69229_m))))._field_Token));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69229_m))))._field_Args.len() != 0LL)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a6260ad2_isWrapped(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _71531_m) {
	if ((((!(_1a47232d8_IsBuiltin((*((*(_71531_m))))._field_Func.ptr()))) && ((*((*(*((*(_71531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a471c8dc_IsSelf((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1aa026465:;
				{
					jule::Ptr<_1a471650c_StructSubIdentExprModel> _7199_ssie = (*((*(_71531_m))))._field_Expr.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>();;
					{
						
						if (_1a471cb73_IsRef((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a48d7e1a_Sptr((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1aa028214:;
							{
								goto _match_end_1aa0273bc;
							}
						}
						else {
							_case_begin_1aa027444:;
							{
								if ((_1a48d9207_Struct((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									if ((!((*(*(_7199_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a626890e_model(_self_, (*(*(_7199_ssie))._field_Expr.alloc)._field_Model);
										_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1aa0273bc:;
					};
				}
			}
			_match_end_1aa0263ee:;
		};
	};
	return false;;
}



inline jule::Bool _1a6260e23_writeReceiver(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _73934_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73934_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa02cc41:;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*((*(_73934_m.unsafe_cast_ptr<_1a4711d65_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aa02ce50:;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*((*((*(_73934_m.unsafe_cast_ptr<_1a6132de4_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa02cdd9:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:748:4"));;
			}
		}
		_match_end_1aa02cd73:;
	};
}



inline void _1a62611cb_pureFuncCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _75234_m) {
	jule::Bool _7533_wrapped = _1a6260ad2_isWrapped(_self_, _75234_m);;
	_1a62604d8_modelForCall(_self_, (*((*(_75234_m))))._field_Expr);
	if ((!(_1a47232d8_IsBuiltin((*((*(_75234_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75234_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a538cea7_HasDirective(&((*(*((*((*(_75234_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa032295:;
					if (it != expr_end) {
						jule::I32 _75911_i = it - expr->begin();
						jule::Ptr<_1a48d3ae7_InsGeneric> _75918_g = *it;
						{
							_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75918_g))._field_Type);
							if ((((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() - _75911_i) > 1LL)) {
								_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1aa032295:;
						++it;
						_75911_i++;
						goto _iter_begin_1aa032295;
					}
					_iter_end_1aa032295:;
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a6260791_pushCallInf(_self_, _75234_m);
	if (((*(*((*(_75234_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_75234_m))))._field_Func.alloc)._field_Anon)))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a47232d8_IsBuiltin((*((*(_75234_m))))._field_Func))) && ((*(*((*((*(_75234_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a471c8dc_IsSelf((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75234_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1aa038ea0:;
				{
					jule::Ptr<_1a471650c_StructSubIdentExprModel> _7839_ssie = (*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>();;
					{
						
						if (_1a471cb73_IsRef((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1aa03d23a:;
							{
								_1a6260e23_writeReceiver(_self_, (*((*(_7839_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a48d7e1a_Sptr((*((*(_7839_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1aa03e7d0:;
							{
								jule::Bool _7906_safe = _1a6260e23_writeReceiver(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);;
								if (_7906_safe) {
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1ce7a1083_Production))) {
										_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*((*(_75234_m))))._field_Token));
										_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1aa03a006:;
							{
								if ((_1a48d9207_Struct((*((*(_7839_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7839_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1aa03a853:;
											{
												jule::Ptr<_1a4852e51_Var> _8048_v = (*((*(_7839_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
												if ((*(_8048_v))._field_Reference) {
													goto _match_end_1aa03ad2b;
												};
												goto _case_begin_1aa03ad92;
											}
										}
										else {
											_case_begin_1aa03ad92:;
											{
												_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1aa03ad2b:;
									};
								};
								if (_7533_wrapped) {
									_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a48d81a1_Ptr((*((*(_7839_ssie))._field_Expr))._field_Type) == nullptr)) {
									_1a626890e_model(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1a625e7a1_possibleRefExpr(_self_, (*((*((*(*(_7839_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1aa039e7e:;
					};
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1aa038b3c:;
				{
					_1a625e7a1_possibleRefExpr(_self_, (*((*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_1a4715b6b_TraitSubIdentExprModel>()))._field_Expr);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1aa038e28:;
		};
	};
	_1a6260230_args(_self_, _75234_m);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7533_wrapped) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a6261484_coFuncCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel>* _84232_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8497_i = jule::Str();;
	if ((((*((*((*(_84232_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84232_m))))._field_Func.alloc)._field_AsAnon)) {
		_8497_i=_1b45772b4_Itoa(_1a5bacd6a_pushCoSpawn((*(_self_))._field_oc, (*((*(_84232_m))))._field_Func));
		jule::Str _8524_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8497_i);;
		_1a5babd36_write((*(_self_))._field_oc, _8524_t);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1a5babd36_write((*(_self_))._field_oc, _8524_t);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1a5bac6d8_indent((*(_self_))._field_oc);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1a62604d8_modelForCall(_self_, (*((*(_84232_m))))._field_Expr);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84232_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa055450:;
			if (it != expr_end) {
				jule::I32 _8748_j = it - expr->begin();
				{
					_1a5bac6d8_indent((*(_self_))._field_oc);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_8748_j));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1a625e7a1_possibleRefExpr(_self_, (*((*(_84232_m))))._field_Args[_8748_j]);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1aa055450:;
				++it;
				_8748_j++;
				goto _iter_begin_1aa055450;
			}
			_iter_end_1aa055450:;
		};
		_1a5bac6d8_indent((*(_self_))._field_oc);
	};
	if (!(_8497_i).empty()) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8497_i).empty()) {
		static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84232_m))))._field_Func));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8497_i));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8497_i).empty()) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8497_i).empty()) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a62617e7_writeUseExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _92034_f, jule::Ptr<_1a48a2753_Data> _92055_d) {
	if ((_1a48d99aa_Tup((*(_92055_d))._field_Type.ptr()) == nullptr)) {
		_1a625e7a1_possibleRefExpr(_self_, (*_92055_d.alloc)._field_Model);
		_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a4717079_TupleExprModel> _9267_tup = (*_92055_d.alloc)._field_Model.cast_ptr<_1a4717079_TupleExprModel>(&__jule_any_type83);;
	_1a5bc60e7_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a48d99aa_Tup((*((*(_92034_f))))._field_Result.ptr()));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9267_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0671cb:;
		if (it != expr_end) {
			jule::I32 _9297_i = it - expr->begin();
			jule::Ptr<_1a48a2753_Data> _92910_data = *it;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_9297_i));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a625e7a1_possibleRefExpr(_self_, (*(_92910_data))._field_Model);
				if ((((*(_9267_tup))._field_Datas.len() - _9297_i) > 1LL)) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aa0671cb:;
			++it;
			_9297_i++;
			goto _iter_begin_1aa0671cb;
		}
		_iter_end_1aa0671cb:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a6261b5a_funcCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471396b_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional) {
	if ((*(_94129_m))._field_IsCo) {
		_1a6261484_coFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (((_1a47232d8_IsBuiltin((*_94129_m.alloc)._field_Func.ptr()) || (!((*((*(*(_94129_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_94129_m.alloc)._field_Except != nullptr) && ((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a62611cb_pureFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (_94156_ignoreExceptional) {
		_1a62611cb_pureFuncCall(_self_, &(_94129_m));
		if (((*(*(_94129_m))._field_Func.alloc)._field_Result != nullptr)) {
			_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a62611cb_pureFuncCall(_self_, &(_94129_m));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if (((*_94129_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_94129_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_94129_m.alloc)._field_Assigned)))) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a62563ad_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9795_forwarded = _1a538a9dd_IsForwarded(&((*_94129_m.alloc)._field_Except));;
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9795_forwarded) {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9849_stmt = (*(*(_94129_m))._field_Except.alloc)._field_Stmts[((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9849_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_1aa075b24:;
					{
						((*((*(_94129_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_94129_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a5bac2dc_addIndent((*(_self_))._field_oc);
						_1a6256105_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_94129_m.alloc)._field_Except));
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a5bac6d8_indent((*(_self_))._field_oc);
						_1a62617e7_writeUseExpr(_self_, &((*_94129_m.alloc)._field_Func), _9849_stmt.cast_ptr<_1a48a2753_Data>(&__jule_any_type21));
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a5bac4da_doneIndent((*(_self_))._field_oc);
						_1a5bac6d8_indent((*(_self_))._field_oc);
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1aa077087:;
					{
						_1a62563ad_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
					}
				}
				_match_end_1aa077021:;
			};
			if (_9795_forwarded) {
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a6269aca_initExpr(_self_, (*(*(_94129_m))._field_Func.alloc)._field_Result);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a5bac4da_doneIndent((*(_self_))._field_oc);
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_94129_m.alloc)._field_Token));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a471e218_IsVoid((*((*(_94129_m))._field_Func))._field_Decl)))) {
			_1a5bac6d8_indent((*(_self_))._field_oc);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a5bac4da_doneIndent((*(_self_))._field_oc);
	};
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a6261e13_slice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4713d45_SliceExprModel> _102426_m) {
	if (((*(_102426_m))._field_Elems.len() == 0LL)) {
		_1a5bbdc27_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102426_m.alloc)._field_ElemType);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a5bbdc27_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102426_m.alloc)._field_ElemType);
	jule::Str _10323_size = _1b45772b4_Itoa((*_102426_m.alloc)._field_Elems.len());;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a5babd36_write((*(_self_))._field_oc, _10323_size);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5babd36_write((*(_self_))._field_oc, _10323_size);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_102426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa08aed0:;
		if (it != expr_end) {
			jule::I32 _10427_i = it - expr->begin();
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a625e7a1_possibleRefExpr(_self_, (*(_102426_m))._field_Elems[_10427_i]);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1aa08aed0:;
			++it;
			_10427_i++;
			goto _iter_begin_1aa08aed0;
		}
		_iter_end_1aa08aed0:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a62621bb_indexing(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47142eb_IndexingExprModel> _105329_m) {
	{
		auto &_match_expr{ (*((*(_105329_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aa08ed5d:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1ce7a1083_Production))) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*(_105329_m))._field_Token));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10644_s = _1a4707245_ReadStr((*((*(_105329_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a4276798_Const>().ptr());;
				_1a626a889_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10644_s);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_10644_s.len()));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a625e7a1_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Index))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1aa08ece7:;
	};
	{
		
		if ((_1a48d9724_Map((*((*_105329_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa098ac0:;
			{
				jule::Ptr<_1a48e4289_Map> _10778__map = _1a48d9724_Map((*((*(_105329_m))._field_Expr))._field_Type);;
				jule::Ptr<_1a4673ec5_Struct> _10788_s = _1a4967142_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1a4676d30_StructIns> _10798_ins = _1a538ea9c_FindStructGenericInstance(&(_10788_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10778__map))._field_Key; (*it++) = (*_10778__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a4721d20_FnIns> _10818_f = (*(_1a4677dca_FindMethod(_10798_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_10818_f));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1ce7a1083_Production || (_1a48d81a1_Ptr((*((*_105329_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr) || _1a538abb9_IsExprComesFromBind(&((*_105329_m.alloc)._field_Expr))) {
			_case_begin_1aa09620a:;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1aa0960ea:;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Expr))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_105329_m.alloc)._field_Token));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a625e7a1_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1aa093625:;
	};
}



inline void _1a6262474_unsafeIndexing(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6131e6a_UnsafeIndexingExprModel> _110535_m) {
	_1a625e7a1_possibleRefExpr(_self_, (*((*((*(_110535_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1ce7a1083_Production || (_1a48d81a1_Ptr((*(*((*(_110535_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1a48d9724_Map((*((*((*(_110535_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1aa0a5192:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a625e7a1_possibleRefExpr(_self_, (*((*(*(_110535_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1aa0a2bea:;
			{
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a625e7a1_possibleRefExpr(_self_, (*((*(*(_110535_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1aa0a379a:;
	};
}



inline void _1a626272c_anonFunc(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel> _112229_m) {
	jule::Bool _11233_closure = _1a538b2c4_IsClosure(&(_112229_m));;
	jule::Str _11243_ident = _1a5bad4ec_pushAnonFn((*(_self_))._field_oc, &(_112229_m));;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a5bc1147_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112229_m))._field_Func);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1a5babd36_write((*(_self_))._field_oc, _11243_ident);
	if (_11233_closure) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a5babd36_write((*(_self_))._field_oc, _11243_ident);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1a5babd36_write((*(_self_))._field_oc, _11243_ident);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_112229_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa0a988e:;
			if (it != expr_end) {
				jule::I32 _11369_i = it - expr->begin();
				jule::Ptr<_1a4852e51_Var> _113616_v = *it;
				{
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a62729a1_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _113616_v);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a625d926_var(_self_, _113616_v);
					if ((((*_112229_m.alloc)._field_Captured.len() - _11369_i) > 1LL)) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1aa0a988e:;
				++it;
				_11369_i++;
				goto _iter_begin_1aa0a988e;
			}
			_iter_end_1aa0a988e:;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a5babd36_write((*(_self_))._field_oc, _11243_ident);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a62629d5_mapExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4715055_MapExprModel> _115328_m) {
	jule::Ptr<_1a4673ec5_Struct> _11547_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a4676d30_StructIns> _11557_ins = _1a538ea9c_FindStructGenericInstance(&(_11547_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_115328_m))._field_Kind))._field_Key; (*it++) = (*(*(_115328_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a4721d20_FnIns> _11577_maker = (*(_1a4677dca_FindMethod(_11557_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_115328_m.alloc)._field_Entries.len() == 0LL)) {
		static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11577_maker));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1a4721d20_FnIns> _11647_f = (*(_1a4677dca_FindMethod(_11557_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a5bbe3ed_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115328_m.alloc)._field_Kind);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11577_maker));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_115328_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0bb6c5:;
		if (it != expr_end) {
			jule::Ptr<_1a4714b7b_KeyValPairExprModel> _117415_pair = *it;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11647_f));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a625e7a1_possibleRefExpr(_self_, (*(_117415_pair))._field_Key);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1a625e7a1_possibleRefExpr(_self_, (*_117415_pair.alloc)._field_Val);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1aa0bb6c5:;
			++it;
			goto _iter_begin_1aa0bb6c5;
		}
		_iter_end_1aa0bb6c5:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a6262c8d_slicing(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47155d8_SlicingExprModel> _118928_m) {
	_1a625e7a1_possibleRefExpr(_self_, (*(_118928_m))._field_Expr);
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1ce7a1083_Production))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_118928_m.alloc)._field_Token));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a625e7a1_possibleRefExpr(_self_, (*_118928_m.alloc)._field_Left);
	if (((*_118928_m.alloc)._field_Right != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a625e7a1_possibleRefExpr(_self_, (*_118928_m.alloc)._field_Right);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6263046_traitSub(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4715b6b_TraitSubIdentExprModel> _120529_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a6271a16_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_120529_m))._field_Trt);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a625e7a1_possibleRefExpr(_self_, (*_120529_m.alloc)._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1ce7a1083_Production))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_120529_m.alloc)._field_Token));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a627143e_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_120529_m.alloc)._field_Method));
}



inline void _1a62632ee_structureSub(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471650c_StructSubIdentExprModel> _122133_m) {
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_122133_m))._field_Expr))._field_Model);
	if (((*_122133_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a62726b5_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_122133_m.alloc)._field_Field))._field_Decl));
}



inline void _1a62635a7_array(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4716c7c_ArrayExprModel> _123026_m) {
	if ((((*((*(_123026_m))._field_Kind))._field_N == 0LL) || (((*_123026_m.alloc)._field_Elems.len() == 0LL) && (!(_1a5bc86c1_ableToInit(&((*(*(_123026_m))._field_Kind.alloc)._field_Elem))))))) {
		_1a5bbee37_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_123026_m.alloc)._field_Kind);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_123026_m.alloc)._field_Elems.len() == 2LL) && ((*(_123026_m))._field_Elems[1LL] == nullptr))) {
		_1a5bbee37_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_123026_m.alloc)._field_Kind);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a625e7a1_possibleRefExpr(_self_, (*(_123026_m))._field_Elems[0LL]);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a5bbee37_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_123026_m.alloc)._field_Kind);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_123026_m.alloc)._field_Elems.len() != (*(*(_123026_m))._field_Kind.alloc)._field_N)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_123026_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0d7438:;
		if (it != expr_end) {
			jule::I32 _12637_i = it - expr->begin();
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a625e7a1_possibleRefExpr(_self_, (*_123026_m.alloc)._field_Elems[_12637_i]);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1aa0d7438:;
			++it;
			_12637_i++;
			goto _iter_begin_1aa0d7438;
		}
		_iter_end_1aa0d7438:;
	};
	if ((((*_123026_m.alloc)._field_Elems.len() != (*(*(_123026_m))._field_Kind.alloc)._field_N) && _1a5bc86c1_ableToInit(&((*(*(_123026_m))._field_Kind.alloc)._field_Elem)))) {
		_1a62692b1_fillCollectionByDefault(_self_, &((*(*(_123026_m))._field_Kind.alloc)._field_Elem));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1a6263860_funcInsCommon(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _128034_m) {
	_1a5bc14aa_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _128034_m);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a6263b18_funcIns(_self_, _128034_m);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6263b18_funcIns(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _128728_m) {
	if ((((*(_128728_m))._field_Decl != nullptr) && (*(*(_128728_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a4652a86_Directive> _12894_d = _1a538cade_FindDirective(&((*(*(_128728_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12894_d != nullptr)) {
			_1a5bac0de_writeBytes((*(_self_))._field_oc, _1a5bb9162_concatAllParts((*_12894_d.alloc)._field_Args));
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_128728_m));
}



inline void _1a6263dc1_tuple(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717079_TupleExprModel> _129826_m) {
	{
		auto expr = &((*_129826_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0e4b71:;
		if (it != expr_end) {
			jule::I32 _12998_i = it - expr->begin();
			jule::Ptr<_1a48a2753_Data> _129915_d = *it;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*(_129915_d))._field_Model);
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_129826_m))._field_Datas.len() - _12998_i) > 1LL)) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a5bac6d8_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1aa0e4b71:;
			++it;
			_12998_i++;
			goto _iter_begin_1aa0e4b71;
		}
		_iter_end_1aa0e4b71:;
	};
}



inline void _1a6264179_newCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717a4c_BuiltinNewCallExprModel> _130928_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_130928_m))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_130928_m.alloc)._field_Init != nullptr)) {
		_1a625e7a1_possibleRefExpr(_self_, (*_130928_m.alloc)._field_Init);
	} else if (_1a5bc86c1_ableToInit(&((*_130928_m.alloc)._field_Type))) {
		_1a6269aca_initExpr(_self_, (*_130928_m.alloc)._field_Type);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6264432_printCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717376_BuiltinPrintCallExprModel> _132130_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1a471dc62_Fn> _13237_decl = _1a4966a48_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1a4721d20_FnIns> _13247_f = _1a538e618_FindFnGenericInstance(&(_13237_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_132130_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13247_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr(_self_, (*(*(_132130_m))._field_Expr.alloc)._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a62646da_printlnCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717673_BuiltinPrintlnCallExprModel> _133132_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1a471dc62_Fn> _13337_decl = _1a4966a48_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1a4721d20_FnIns> _13347_f = _1a538e618_FindFnGenericInstance(&(_13337_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_133132_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13347_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr(_self_, (*(*(_133132_m))._field_Expr.alloc)._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a6264993_panicCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> _134130_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1a625e7a1_possibleRefExpr(_self_, (*(_134130_m))._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a5bae4ba_locInfo((*(_self_))._field_oc, &((*_134130_m.alloc)._field_Token));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a6264c4b_errorCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _134930_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a471e218_IsVoid((*((*(_134930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1aa1074be:;
				{
					jule::Ptr<_1a4852e51_Var> _13545_v = (*((*(_134930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
					if (((*(_13545_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1aa107458:;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a5bc67bd_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1aa10ba12:;
				{
					jule::Ptr<_1a4852e51_Var> _13665_v = (*((*(_134930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>();;
					if (((*(_13665_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1aa10b99b:;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_134930_m))._field_Err))._field_Model);
	jule::I32 _13753_i = _1a5bad83d_pushAnyType((*(_self_))._field_oc, (*(*(_134930_m))._field_Err.alloc)._field_Type);;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_13753_i));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a6265004_copyCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719653_BuiltinCopyCallExprModel> _138129_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_138129_m))._field_Dest))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a625e7a1_possibleRefExpr(_self_, (*((*_138129_m.alloc)._field_Src))._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a62652ac_lenCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _138928_m) {
	jule::Ptr<_1a48e4289_Map> _13907__map = _1a48d9724_Map((*((*(_138928_m))._field_Expr))._field_Type.ptr());;
	if ((_13907__map != nullptr)) {
		jule::Ptr<_1a4673ec5_Struct> _13928_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1a4676d30_StructIns> _13938_ins = _1a538ea9c_FindStructGenericInstance(&(_13928_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13907__map.alloc)._field_Key; (*it++) = (*_13907__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1a4721d20_FnIns> _13958_f = (*(_1a4677dca_FindMethod(_13938_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13958_f));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a625e7a1_possibleRefExpr(_self_, (*(*(_138928_m))._field_Expr.alloc)._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a625e7a1_possibleRefExpr(_self_, (*(*(_138928_m))._field_Expr.alloc)._field_Model);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a6265565_capCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4718da0_BuiltinCapCallExprModel> _140628_m) {
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_140628_m))._field_Expr))._field_Model);
	_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a626581d_deleteCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> _141131_m) {
	jule::Ptr<_1a48e4289_Map> _14127__map = _1a48d9724_Map((*((*(_141131_m))._field_Dest))._field_Type.ptr());;
	if ((_14127__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1414:4"));;
	};
	jule::Ptr<_1a4673ec5_Struct> _14167_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a4676d30_StructIns> _14177_ins = _1a538ea9c_FindStructGenericInstance(&(_14167_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14127__map))._field_Key; (*it++) = (*(_14127__map))._field_Val; __jule_collection; }));;
	;
	if (((*_141131_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1a4721d20_FnIns> _14208_f = (*(_1a4677dca_FindMethod(_14177_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14208_f));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a625e7a1_possibleRefExpr(_self_, (*(*(_141131_m))._field_Dest.alloc)._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a625e7a1_possibleRefExpr(_self_, (*(*(_141131_m))._field_Key.alloc)._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1a4721d20_FnIns> _14288_f = (*(_1a4677dca_FindMethod(_14177_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14288_f));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a625e7a1_possibleRefExpr(_self_, (*(*(_141131_m))._field_Dest.alloc)._field_Model);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a6265ac6_makeCallSlice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel>* _143635_m) {
	jule::Ptr<_1a48e2ae5_Slc> _14377_slice = _1a48d8bda_Slc((*((*(_143635_m))))._field_Type.ptr());;
	jule::Bool _14383_init = _1a5bc86c1_ableToInit(&((*(_14377_slice))._field_Elem));;
	if (_14383_init) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_143635_m))))._field_Type);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_143635_m))))._field_Len);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_143635_m))))._field_Cap != nullptr)) {
		_1a625e7a1_possibleRefExpr(_self_, (*((*(_143635_m))))._field_Cap);
	} else {
		_1a625e7a1_possibleRefExpr(_self_, (*((*(_143635_m))))._field_Len);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14383_init))) {
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a6269569_initCollection(_self_, &((*_14377_slice.alloc)._field_Elem));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a6265d7e_makeCallStr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel>* _146033_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a625e7a1_possibleRefExpr(_self_, (*((*(_146033_m))))._field_Len);
	if (((*((*(_146033_m))))._field_Cap != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a625e7a1_possibleRefExpr(_self_, (*((*(_146033_m))))._field_Cap);
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6266137_makeCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> _147129_m) {
	if ((_1a48d8bda_Slc((*(_147129_m))._field_Type.ptr()) != nullptr)) {
		_1a6265ac6_makeCallSlice(_self_, &(_147129_m));
		return;;
	};
	_1a6265d7e_makeCallStr(_self_, &(_147129_m));
}



inline void _1a62663e0_pushToSlice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6132344_PushToSliceExprModel> _147932_m) {
	;
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a5bbdc27_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147932_m))._field_Elems))._field_ElemType);
	jule::Bool _14877_ptr = false;;
	{
		auto &_match_expr{ (*(_147932_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa1397ba:;
			{
				jule::Ptr<_1a4711d65_UnaryExprModel> _14918_u = (*(_147932_m))._field_Dest.unsafe_cast_ptr<_1a4711d65_UnaryExprModel>();;
				if ((_1a48d81a1_Ptr((*((*(_14918_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a625e7a1_possibleRefExpr(_self_, (*(*(_14918_u))._field_Expr.alloc)._field_Model);
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14877_ptr=true;
					goto _match_end_1aa1382ad;
				};
				goto _case_begin_1aa138324;
			}
		}
		else {
			_case_begin_1aa138324:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a625e7a1_possibleRefExpr(_self_, (*_147932_m.alloc)._field_Dest);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1aa1382ad:;
	};
	if (((*(*(_147932_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14877_ptr) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a625e7a1_possibleRefExpr(_self_, (*((*(_147932_m))._field_Elems))._field_Elems[0LL]);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14877_ptr) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa((*(*(_147932_m))._field_Elems.alloc)._field_Elems.len()));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147932_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa141c45:;
		if (it != expr_end) {
			jule::Any _152515_e = *it;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14877_ptr) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a625e7a1_possibleRefExpr(_self_, _152515_e);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1aa141c45:;
			++it;
			goto _iter_begin_1aa141c45;
		}
		_iter_end_1aa141c45:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6266698_appendToSlice(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a613271d_AppendToSliceExprModel> _153934_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr(_self_, (*(_153934_m))._field_Dest);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a625e7a1_possibleRefExpr(_self_, (*_153934_m.alloc)._field_Slice);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a6266951_appendCall(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> _154731_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a625e7a1_possibleRefExpr(_self_, (*(_154731_m))._field_Dest);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a625e7a1_possibleRefExpr(_self_, (*_154731_m.alloc)._field_Elements);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6266c09_sizeof(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4719d29_SizeofExprModel> _155527_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a625e7a1_possibleRefExpr(_self_, (*(_155527_m))._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6266eb2_alignof(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471a4cd_AlignofExprModel> _156128_m) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a625e7a1_possibleRefExpr(_self_, (*(_156128_m))._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a626726a_runeLit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471a6ba_RuneExprModel> _156724_m) {
	if (((*(_156724_m))._field_Code <= 127LL)) {
		({
			auto except = _1e71a9369_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1569:4"));
		});
		jule::Str _15708_b = _1a626a26d_sbtoa(static_cast<jule::U8>((*_156724_m.alloc)._field_Code));;
		if (_15708_b.equal("'", 1)) {
			({
				auto except = _1e71a9369_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1572:5"));
			});
		};
		({
			auto except = _1e71a90b1_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15708_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1574:4"));
			(except.result);
		});
		({
			auto except = _1e71a9369_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1575:4"));
		});
		return;;
	};
	_1a626b01b_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_156724_m.alloc)._field_Code));
}



inline void _1a6267523_structureStatic(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a47168a3_StructStaticIdentExprModel> _158136_m) {
	static__1a627172a_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_158136_m))._field_Method));
}



inline void _1a62677cb_backendEmit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471aa3e_BackendEmitExprModel> _158532_m) {
	if (((*(_158532_m))._field_Exprs.len() == 0LL)) {
		_1a5babd36_write((*(_self_))._field_oc, (*_158532_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15903_n = _1e71a9dc5_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15917_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_158532_m.alloc)._field_Exprs.len(), (*_158532_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_158532_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa151e86:;
		if (it != expr_end) {
			jule::I32 _15928_i = it - expr->begin();
			jule::Any _159215_expr = *it;
			{
				_1a625e7a1_possibleRefExpr(_self_, _159215_expr);
				jule::Slice<jule::U8> _15948_buf = _1e71aa3e2_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15917_args[_15928_i]=jule::Any(__jule_bytesToStr(_15948_buf.slice(_15903_n)), &__jule_any_type5);
				{
					_1e71aa69a_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15948_buf.slice(0LL, _15903_n));
				};
			}
			_iter_next_1aa151e86:;
			++it;
			_15928_i++;
			goto _iter_begin_1aa151e86;
		}
		_iter_end_1aa151e86:;
	};
	_1a5babd36_write((*(_self_))._field_oc, _1a495751c_Format((*_158532_m.alloc)._field_Code, _15917_args));
}



inline void _1a6267a84_free(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a471ad3b_FreeExprModel> _160125_m) {
	_1a625e7a1_possibleRefExpr(_self_, (*(_160125_m))._field_Expr);
	if (_1ce7a0978_RC) {
		_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a6267d3c_strComp(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6131255_StrCompExprModel> _161028_m) {
	if ((*(_161028_m))._field_NotEq) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16143_s = _1a4707245_ReadStr((*_161028_m.alloc)._field_Right.ptr());;
	_1a625e7a1_possibleRefExpr(_self_, (*_161028_m.alloc)._field_Left);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a626a889_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16143_s);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_16143_s.len()));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_161028_m.alloc)._field_NotEq) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a62680e5_emptyCompare(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a61309a2_EmptyCompareExprModel> _162633_m) {
	if ((*(_162633_m))._field_Neg) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a625e7a1_possibleRefExpr(_self_, (*_162633_m.alloc)._field_Expr);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a626839d_unsafeDeref(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a6132de4_UnsafeDerefExprModel> _163532_m) {
	{
		
		if ((_1a48d7e1a_Sptr((*((*((*(_163532_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa1609de:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a625e7a1_possibleRefExpr(_self_, (*(*((*(_163532_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1aa160626:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1642:4"));;
			}
		}
		_match_end_1aa160516:;
	};
}



inline void _1a6268656_unsafeCasting(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a61331e1_UnsafeCastingExprModel> _164634_m) {
	{
		
		if (_1a538ae83_IsAny(&((*((*(_164634_m))._field_Base))._field_ExprType))) {
			_case_begin_1aa1636c3:;
			{
				_1a625e7a1_possibleRefExpr(_self_, (*((*(*(_164634_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a48d7e1a_Sptr((*(*(_164634_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a48d7e1a_Sptr((*((*(_164634_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a5bc181d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_164634_m))._field_Base.alloc)._field_Type);
				};
				_1a5babd36_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1aa16330a:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1659:4"));;
			}
		}
		_match_end_1aa16321c:;
	};
}



inline void _1a626890e_model(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Any _166326_m) {
	{
		auto &_match_expr{ _166326_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa164042:;
			{
				_1a5babd36_write((*(_self_))._field_oc, _166326_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1aa16907a:;
			{
				_1a5babd36_write((*(_self_))._field_oc, (*(_166326_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1aa1690e1:;
			{
				_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _166326_m.cast_ptr<_1a48d54cd_Type>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aa169157:;
			{
				_1a625b902_constant(_self_, _166326_m.cast_ptr<_1a4276798_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa1691bd:;
			{
				_1a625d926_var(_self_, _166326_m.cast_ptr<_1a4852e51_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa169234:;
			{
				_1a625dbce_structureIns(_self_, _166326_m.cast_ptr<_1a4676d30_StructIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1aa16929a:;
			{
				_1a6263860_funcInsCommon(_self_, _166326_m.cast_ptr<_1a4721d20_FnIns>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1aa169e16:;
			{
				_1a625cbde_unsafeBinary(_self_, (*(_166326_m.unsafe_cast_ptr<_1a6131b6d_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aa169e7c:;
			{
				_1a625d66d_binary(_self_, _166326_m.cast_ptr<_1a471198b_BinaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa169ee3:;
			{
				_1a625de87_unary(_self_, _166326_m.cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa16a059:;
			{
				_1a625e240_structureLit(_self_, _166326_m.cast_ptr<_1a4712739_StructLitExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aa16a0c0:;
			{
				_1a625e4e8_allocStructure(_self_, _166326_m.cast_ptr<_1a4712a36_AllocStructLitExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aa16a136:;
			{
				_1a625ee77_casting(_self_, _166326_m.cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1aa16a19c:;
			{
				_1a6261b5a_funcCall(_self_, _166326_m.cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1aa16a213:;
			{
				_1a6261e13_slice(_self_, _166326_m.cast_ptr<_1a4713d45_SliceExprModel>(&__jule_any_type79));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1aa16a28a:;
			{
				_1a62635a7_array(_self_, _166326_m.cast_ptr<_1a4716c7c_ArrayExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1aa16a312:;
			{
				_1a6262474_unsafeIndexing(_self_, _166326_m.cast_ptr<_1a6131e6a_UnsafeIndexingExprModel>(&__jule_any_type135));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa16a389:;
			{
				_1a62621bb_indexing(_self_, _166326_m.cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1aa16a411:;
			{
				_1a626272c_anonFunc(_self_, _166326_m.cast_ptr<_1a47147a2_AnonFnExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aa16a488:;
			{
				_1a62629d5_mapExpr(_self_, _166326_m.cast_ptr<_1a4715055_MapExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aa16a510:;
			{
				_1a6262c8d_slicing(_self_, _166326_m.cast_ptr<_1a47155d8_SlicingExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aa16a587:;
			{
				_1a6263046_traitSub(_self_, _166326_m.cast_ptr<_1a4715b6b_TraitSubIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa16a60e:;
			{
				_1a62632ee_structureSub(_self_, _166326_m.cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aa16a686:;
			{
				_1a6263dc1_tuple(_self_, _166326_m.cast_ptr<_1a4717079_TupleExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa16a70d:;
			{
				_1a6264432_printCall(_self_, _166326_m.cast_ptr<_1a4717376_BuiltinPrintCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa16a785:;
			{
				_1a62646da_printlnCall(_self_, _166326_m.cast_ptr<_1a4717673_BuiltinPrintlnCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa16a80c:;
			{
				_1a6264179_newCall(_self_, _166326_m.cast_ptr<_1a4717a4c_BuiltinNewCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aa16a884:;
			{
				_1a6264993_panicCall(_self_, _166326_m.cast_ptr<_1a4717e26_BuiltinPanicCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aa16a90b:;
			{
				_1a6264c4b_errorCall(_self_, _166326_m.cast_ptr<_1a4719a2c_BuiltinErrorCallExprModel>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aa16a983:;
			{
				_1a6266137_makeCall(_self_, _166326_m.cast_ptr<_1a47183cc_BuiltinMakeCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa16aa0a:;
			{
				_1a6266951_appendCall(_self_, _166326_m.cast_ptr<_1a47187a6_BuiltinAppendCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aa16aa82:;
			{
				_1a6265004_copyCall(_self_, _166326_m.cast_ptr<_1a4719653_BuiltinCopyCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aa16ab09:;
			{
				_1a62652ac_lenCall(_self_, _166326_m.cast_ptr<_1a4718aa3_BuiltinLenCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aa16ab81:;
			{
				_1a6265565_capCall(_self_, _166326_m.cast_ptr<_1a4718da0_BuiltinCapCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1aa16ac08:;
			{
				_1a626581d_deleteCall(_self_, _166326_m.cast_ptr<_1a4719279_BuiltinDeleteCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aa16ac80:;
			{
				_1a6266c09_sizeof(_self_, _166326_m.cast_ptr<_1a4719d29_SizeofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1aa16ad07:;
			{
				_1a6266eb2_alignof(_self_, _166326_m.cast_ptr<_1a471a4cd_AlignofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa16ad7e:;
			{
				_1a626726a_runeLit(_self_, _166326_m.cast_ptr<_1a471a6ba_RuneExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa16ae06:;
			{
				_1a6267523_structureStatic(_self_, _166326_m.cast_ptr<_1a47168a3_StructStaticIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa16ae7d:;
			{
				_1a62677cb_backendEmit(_self_, _166326_m.cast_ptr<_1a471aa3e_BackendEmitExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aa16b005:;
			{
				_1a6267a84_free(_self_, _166326_m.cast_ptr<_1a471ad3b_FreeExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1aa16b07c:;
			{
				_1a6267d3c_strComp(_self_, _166326_m.cast_ptr<_1a6131255_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1aa16b104:;
			{
				_1a625d926_var(_self_, (*(_166326_m.unsafe_cast_ptr<_1a6130c9e_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1aa16b17b:;
			{
				_1a62680e5_emptyCompare(_self_, _166326_m.cast_ptr<_1a61309a2_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aa16b203:;
			{
				_1a626839d_unsafeDeref(_self_, _166326_m.cast_ptr<_1a6132de4_UnsafeDerefExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1aa16b27a:;
			{
				_1a6268656_unsafeCasting(_self_, _166326_m.cast_ptr<_1a61331e1_UnsafeCastingExprModel>(&__jule_any_type133));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aa16b302:;
			{
				_1a6261b5a_funcCall(_self_, (*(_166326_m.unsafe_cast_ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel>()))._field_Base, true);
			}
		}
		else {
			_case_begin_1aa169014:;
			{
				_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1aa168e26:;
	};
}



inline jule::Bool _1a6268c50_handleFieldByDefault(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676280_FieldIns>* _176542_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_176542_f))))._field_Default != nullptr)) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1a62726b5_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_176542_f))))._field_Decl));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1a625e7a1_possibleRefExpr(_self_, (*(*((*(_176542_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a5bc86c1_ableToInit(&((*((*(_176542_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1a62726b5_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_176542_f))))._field_Decl));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1a6269aca_initExpr(_self_, (*((*(_176542_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a6269008_initStructLit(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _178635_s) {
	if ((*((*((*(_178635_s))))._field_Decl))._field_Binded) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a5bbeac4_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_178635_s)));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a5bbeac4_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_178635_s)));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17957_inited = false;;
	{
		auto expr = &((*((*(_178635_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa18dca3:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> _179615_f = *it;
			{
				if (_17957_inited) {
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17957_inited=_1a6268c50_handleFieldByDefault(_self_, &(_179615_f));
			}
			_iter_next_1aa18dca3:;
			++it;
			goto _iter_begin_1aa18dca3;
		}
		_iter_end_1aa18dca3:;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a62692b1_fillCollectionByDefault(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48d54cd_Type>* _180845_elem) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a6269aca_initExpr(_self_, (*(_180845_elem)));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1a6269569_initCollection(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48d54cd_Type>* _182336_elem) {
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1a62692b1_fillCollectionByDefault(_self_, _182336_elem);
}



inline void _1a6269822_initArray(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48e4e16_Arr>* _183731_arr) {
	if (((*((*(_183731_arr))))._field_N == 0LL)) {
		_1a5bbee37_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183731_arr)));
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a5bbee37_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183731_arr)));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1a6269569_initCollection(_self_, &((*((*(_183731_arr))))._field_Elem));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a6269aca_initExpr(jule::Ptr<_1a625a13c_exprCoder> _self_, jule::Ptr<_1a48d54cd_Type> _185129_t) {
	if (_1a48d73d1_NilCompatible(_185129_t.ptr())) {
		if ((_1a48d9724_Map(_185129_t) != nullptr)) {
			_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _185129_t);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1a48d81a1_Ptr(_185129_t) != nullptr)) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _185129_t);
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a48e36d9_Tuple> _18667_tup = _1a48d99aa_Tup(_185129_t);;
	if ((_18667_tup != nullptr)) {
		_1a5bc60e7_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18667_tup);
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18667_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa1a7470:;
			if (it != expr_end) {
				jule::I32 _18709_i = it - expr->begin();
				jule::Ptr<_1a48d54cd_Type> _187016_tt = *it;
				{
					if ((!(_1a5bc899b_shouldInitialized(&(_187016_tt))))) {
						goto _iter_next_1aa1a7470;
					};
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a5babd36_write((*(_self_))._field_oc, _1b45772b4_Itoa(_18709_i));
					_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a6269aca_initExpr(_self_, _187016_tt);
					if ((((*_18667_tup.alloc)._field_Types.len() - _18709_i) > 1LL)) {
						_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1aa1a7470:;
				++it;
				_18709_i++;
				goto _iter_begin_1aa1a7470;
			}
			_iter_end_1aa1a7470:;
		};
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a472bb2c_Enum> _18857_enm = _1a48d8437_Enum(_185129_t);;
	if ((_18857_enm != nullptr)) {
		_1a626890e_model(_self_, (*((*((*((*_18857_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _18903_prim = _1a48d7b84_Prim(_185129_t);;
	if ((_18903_prim != nullptr)) {
		if (_1a479cbc0_IsNum((*_18903_prim.alloc)._field_Kind)) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a48e182a_IsBool(_18903_prim)) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a48e1ab1_IsStr(_18903_prim)) {
			_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a48d8954_Arr(_185129_t) != nullptr)) {
		jule::Ptr<_1a48e4e16_Arr> _19028_arr = _1a48d8954_Arr(_185129_t);;
		_1a6269822_initArray(_self_, &(_19028_arr));
		return;;
	};
	jule::Ptr<_1a4676d30_StructIns> _19067_s = _1a48d9207_Struct(_185129_t);;
	if ((_19067_s != nullptr)) {
		_1a6269008_initStructLit(_self_, &(_19067_s));
		return;;
	};
	_1a5bc181d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _185129_t);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1a626c6c1_TestCoder_eq(_1a626c6c1_TestCoder *_self_, _1a626c6c1_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1a626c6c1_TestCoder> static__1a626cb77_New(jule::Ptr<_1a5bab61b_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1a626c6c1_TestCoder>(_1a626c6c1_TestCoder{._field_t=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a626ce0d_findTestingPackage(jule::Ptr<_1a626c6c1_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1b2e1a:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1aa1b2e1a:;
			++it;
			goto _iter_begin_1aa1b2e1a;
		}
		_iter_end_1aa1b2e1a:;
	};
	return nullptr;;
}



inline void _1a626d1b6_appendTest(jule::Ptr<_1a626c6c1_TestCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _3531_f) {
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a626d903_callTmReset(_self_);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1a626a889_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	static__1a627172a_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a626d46e_appendPackageTests(jule::Ptr<_1a626c6c1_TestCoder> _self_, jule::Ptr<_1a480eb55_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1b96e6:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1ba175:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _5216_f = *it;
						{
							if (_1a538cea7_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1a626d1b6_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1aa1ba175:;
						++it;
						goto _iter_begin_1aa1ba175;
					}
					_iter_end_1aa1ba175:;
				};
			}
			_iter_next_1aa1b96e6:;
			++it;
			goto _iter_begin_1aa1b96e6;
		}
		_iter_end_1aa1b96e6:;
	};
}



inline jule::Bool _1a626d705_readyTestingPackage(jule::Ptr<_1a626c6c1_TestCoder> _self_) {
	jule::Ptr<_1a480c3d3_ImportInfo> _617_p = _1a626ce0d_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1a480d5e3_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1a4677dca_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a4677dca_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a4677dca_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a626d903_callTmReset(jule::Ptr<_1a626c6c1_TestCoder> _self_) {
	static__1a627143e_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a626db01_callTmFailed(jule::Ptr<_1a626c6c1_TestCoder> _self_) {
	static__1a627143e_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a626dcee_callTmSkipped(jule::Ptr<_1a626c6c1_TestCoder> _self_) {
	static__1a627143e_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a626deec_Serialize(jule::Ptr<_1a626c6c1_TestCoder> _self_) {
	_1a5bb8ace_serializeHead((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	if ((!(_1a626d705_readyTestingPackage(_self_)))) {
		_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1a5bac4da_doneIndent((*(_self_))._field_oc);
		_1a5bb7db9_end((*(_self_))._field_oc);
		return;;
	};
	_1e71a80b0_Builder _1097_tb = static__1e71a892e_New(40LL);;
	_1a5bbeac4_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1a5bbca17_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1e71aa3e2_Buf(&_1097_tb));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a5bac0de_writeBytes((*(_self_))._field_oc, _1e71aa3e2_Buf(&_1097_tb));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a5bac2dc_addIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a626db01_callTmFailed(_self_);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a626dcee_callTmSkipped(_self_);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a626d46e_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a5bac4da_doneIndent((*(_self_))._field_oc);
	_1a5bac6d8_indent((*(_self_))._field_oc);
	_1a5babd36_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5bb7db9_end((*(_self_))._field_oc);
}








inline jule::Bool _1a627031c_identCoder_eq(_1a627031c_identCoder *_self_, _1a627031c_identCoder _other_) { return true; }

inline void static__1a627085b_writeIdentTo(_1e71a80b0_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1db74b:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1aa1dbac0;
				};
			}
			_iter_next_1aa1db74b:;
			++it;
			goto _iter_begin_1aa1db74b;
		}
		_iter_end_1aa1db74b:;
	};
	({
		auto except = _1e71a90b1_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1aa1dbac0:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1aa1dc6c5:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1e71a9369_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1aa1dc6c5;
				};
				({
					auto except = _1e71a90b1_WriteStr(_2630_buf, _1b4576eea_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1aa1dc6c5:;
			it += len;
			goto _iter_begin_1aa1dc6c5;
		}
	};
}



inline void static__1a6270c02_toOut(_1e71a80b0_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1e71a9369_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1e71a90b1_WriteStr(_5423_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1e71a9369_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1a627085b_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1a6271153_toLocal(_1e71a80b0_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1e71a9369_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_6925_buf, _1b45772b4_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_6925_buf, _1b45772b4_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1a627085b_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1a627143e_func(_1e71a80b0_Builder* _7722_buf, jule::Ptr<_1a471dc62_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1aa1e19e8:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1a471e49e_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1aa1e1a92:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1e71a90b1_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1aa1e18c7:;
	};
	jule::Ptr<_1a4652a86_Directive> _873_export = _1a538cade_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1e71a90b1_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1a6270c02_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1a627172a_funcIns(_1e71a80b0_Builder* _9525_buf, jule::Ptr<_1a4721d20_FnIns>* _9553_f) {
	if (_1a47232d8_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1e71a90b1_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*(*((*(_9553_f))))._field_Decl.alloc)._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1a627143e_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1a6270c02_toOut(_9525_buf, (*(*((*(_9553_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1a6271a16_traitDecl(_1e71a80b0_Builder* _11027_buf, jule::Ptr<_1a4729476_Trait> _11050_t) {
	static__1a6270c02_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1a6271d02_param(_1e71a80b0_Builder* _11423_buf, jule::Ptr<_1a471c28d_Param>* _11447_p) {
	if ((_1a4640cd8_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1a4640a1e_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1a471c8dc_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1e71a90b1_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1a6271153_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1a6271153_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*((*((*(_11447_p))))._field_Token))._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1a62720dd_structure(_1e71a80b0_Builder* _12927_buf, jule::Ptr<_1a4673ec5_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1a538cea7_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1e71a90b1_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1e71a90b1_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1a6270c02_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1a62723c9_structureIns(_1e71a80b0_Builder* _14030_buf, jule::Ptr<_1a4676d30_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1a62720dd_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1a6270c02_toOut(_14030_buf, (*(*((*(_14054_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1a62726b5_field(_1e71a80b0_Builder* _14823_buf, jule::Ptr<_1a46710d2_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1e71a90b1_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1e71a90b1_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1a627085b_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1a62729a1_var(_1e71a80b0_Builder* _15821_buf, jule::Ptr<_1a4852e51_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1aa202d17:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1aa202058:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1aa2010bd:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder == -1LL)) {
			_case_begin_1aa201134:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder >= 0LL)) {
			_case_begin_1aa20119a:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(_15821_buf, _1b45772b4_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Scope != nullptr)) {
			_case_begin_1aa201211:;
			{
				static__1a6271153_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1aa201057:;
			{
				jule::Ptr<_1a4652a86_Directive> _1764_export = _1a538cade_FindDirective(&((*(_15848_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1e71a90b1_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1a6270c02_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1aa200e47:;
	};
}



inline void static__1a6272c8c_iterBegin(_1e71a80b0_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1e71a90b1_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_18527_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1a6273078_iterEnd(_1e71a80b0_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1e71a90b1_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_19025_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1a6273364_iterNext(_1e71a80b0_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1e71a90b1_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_19526_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1a6273650_label(_1e71a80b0_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1e71a90b1_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_20023_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1a627393b_matchEnd(_1e71a80b0_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1e71a90b1_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_20526_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1a6273c27_caseBegin(_1e71a80b0_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1e71a90b1_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_21027_buf, _1b4576b32_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1a5ba8d66_SerializationInfo_eq(_1a5ba8d66_SerializationInfo *_self_, _1a5ba8d66_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1a5ba9284_traitCast_eq(_1a5ba9284_traitCast *_self_, _1a5ba9284_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1a5ba965d_anonHash_eq(_1a5ba965d_anonHash *_self_, _1a5ba965d_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1a5ba9d78_metadata_eq(_1a5ba9d78_metadata *_self_, _1a5ba9d78_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1a5bab61b_ObjectCoder> static__1a5baba7d_New(jule::Ptr<_1a53857a7_IR>* _12021_ir, _1a5ba8d66_SerializationInfo _12035_info) {
	jule::Ptr<_1a5bab61b_ObjectCoder> _1217_oc = jule::new_ptr<_1a5bab61b_ObjectCoder>(_1a5bab61b_ObjectCoder{._field_Buf=_1e71a80b0_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1e71a80b0_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1e71a80b0_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1e71a80b0_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1e71a80b0_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1e71a80b0_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_12021_ir)), ._field_info=_12035_info, ._field_anons=jule::Slice<jule::Ptr<_1a5ba965d_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1a9b95326_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1a5ba9284_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1a4721d20_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1a5ba9a7b_traitHash>>(nullptr), ._field_traitMetMap=static__1a9be66c9_make(), ._field_ec=jule::Ptr<_1a625a13c_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1a624dbe1_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1a5bbb61a_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1a5ba9d78_metadata{._field_concurrent=false}});;
	(*(_1217_oc))._field_ec=static__1a625a538_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_sc=static__1a624e3d9_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_tc=static__1a5bbbb6a_new(&(_1217_oc));
	return _1217_oc;;
}



inline void _1a5babd36_write(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Str _13322_s) {
	({
		auto except = _1e71a90b1_WriteStr(&(*(_self_))._field_Buf, _13322_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:134:3"));
		(except.result);
	});
}



inline void _1a5bac0de_writeBytes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b) {
	({
		auto except = _1e71a8c70_Write(&(*(_self_))._field_Buf, _13727_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:138:3"));
		(except.result);
	});
}



inline void _1a5bac2dc_addIndent(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1a5bac4da_doneIndent(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a5bac6d8_indent(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	({
		auto except = _1e71a8c70_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:153:3"));
		(except.result);
	});
}



inline jule::I32 _1a5baca29_findAnyType(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a48d54cd_Type>* _15633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa216336:;
		if (it != expr_end) {
			jule::I32 _1578_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> _15715_at = *it;
			{
				if (_1a48d5c1a_Equal(_15715_at, (*(_15633_t)))) {
					return _1578_i;;
				};
			}
			_iter_next_1aa216336:;
			++it;
			_1578_i++;
			goto _iter_begin_1aa216336;
		}
		_iter_end_1aa216336:;
	};
	return -1LL;;
}



inline jule::I32 _1a5bacd6a_pushCoSpawn(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _16532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa216de7:;
		if (it != expr_end) {
			jule::I32 _1667_i = it - expr->begin();
			jule::Ptr<_1a4721d20_FnIns> _16610_sf = *it;
			{
				if (((*(_16610_sf))._field_Params.len() == (*(_16532_f))._field_Params.len())) {
					{
						auto expr = &((*_16610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa218921:;
						if (it != expr_end) {
							jule::I32 _1689_j = it - expr->begin();
							jule::Ptr<_1a4720bba_ParamIns> *_16812_sp = it;
							{
								if ((!(_1a48d5c1a_Equal((*((*(_16812_sp))))._field_Type, (*((*(_16610_sf))._field_Params[_1689_j]))._field_Type)))) {
									goto _iter_end_1aa218921;
								};
							}
							_iter_next_1aa218921:;
							++it;
							_1689_j++;
							goto _iter_begin_1aa218921;
						}
						_iter_end_1aa218921:;
					};
					return _1667_i;;
				};
			}
			_iter_next_1aa216de7:;
			++it;
			_1667_i++;
			goto _iter_begin_1aa216de7;
		}
		_iter_end_1aa216de7:;
	};
	jule::I32 _1763_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1773_is = _1b45772b4_Itoa(_1763_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4721d20_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16532_f; __jule_collection; }));
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:182:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:185:3"));
	});
	_1a5bc14aa_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16532_f);
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:190:3"));
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa21dc23:;
		if (it != expr_end) {
			jule::I32 _1938_j = it - expr->begin();
			jule::Ptr<_1a4720bba_ParamIns> _19315_p = *it;
			{
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:194:4"));
				});
				_1a5bc181d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19315_p))._field_Type);
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1b45772b4_Itoa(_1938_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
					(except.result);
				});
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:200:4"));
				});
			}
			_iter_next_1aa21dc23:;
			++it;
			_1938_j++;
			goto _iter_begin_1aa21dc23;
		}
		_iter_end_1aa21dc23:;
	};
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:204:3"));
	});
	{
		
		if ((_1ce798b19_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1aa223d49:;
			{
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:208:4"));
					(except.result);
				});
			}
		}
		else if (_1e71bb9ca_IsUnix(_1ce798b19_OS)) {
			_case_begin_1aa223e26:;
			{
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:210:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1aa221a4a:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:212:4"));;
			}
		}
		_match_end_1aa223783:;
	};
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:215:3"));
		(except.result);
	});
	;
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:235:3"));
		(except.result);
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa22b813:;
		if (it != expr_end) {
			jule::I32 _2387_j = it - expr->begin();
			{
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1b45772b4_Itoa(_2387_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:242:4"));
					(except.result);
				});
				if ((((*_16532_f.alloc)._field_Params.len() - _2387_j) > 1LL)) {
					({
						auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:244:5"));
						(except.result);
					});
				};
			}
			_iter_next_1aa22b813:;
			++it;
			_2387_j++;
			goto _iter_begin_1aa22b813;
		}
		_iter_end_1aa22b813:;
	};
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:247:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:252:3"));
		(except.result);
	});
	{
		
		if ((_1ce798b19_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1aa230dcd:;
			{
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:256:4"));
					(except.result);
				});
			}
		}
		else if (_1e71bb9ca_IsUnix(_1ce798b19_OS)) {
			_case_begin_1aa230eaa:;
			{
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:259:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1aa22dace:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:261:4"));;
			}
		}
		_match_end_1aa230a15:;
	};
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:263:3"));
		(except.result);
	});
	return _1763_i;;
}



inline jule::I32 _1a5bad1ab_pushDealloc(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a48d54cd_Type> _26832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa233441:;
		if (it != expr_end) {
			jule::I32 _2697_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> _26910_dt = *it;
			{
				if (_1a48d5c1a_Equal(_26910_dt, _26832_t)) {
					return _2697_i;;
				};
			}
			_iter_next_1aa233441:;
			++it;
			_2697_i++;
			goto _iter_begin_1aa233441;
		}
		_iter_end_1aa233441:;
	};
	jule::I32 _2743_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26832_t; __jule_collection; }));
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_deallocObj, _1b45772b4_Itoa(_2743_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:278:3"));
		(except.result);
	});
	_1a5bc181d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26832_t);
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:280:3"));
		(except.result);
	});
	return _2743_i;;
}



inline jule::Str _1a5bad4ec_pushAnonFn(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel>* _28432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28432_m))))._field_Func))._field_CalledCo);
	jule::Bool _2873_closure = _1a538b2c4_IsClosure(_28432_m);;
	if (_2873_closure) {
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:290:4"));
			(except.result);
		});
		jule::I32 _2914_l = _1e71a9dc5_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:293:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1e71aa3e2_Buf(&(*_self_.alloc)._field_anonObj).slice(_2914_l));
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:295:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa23b24b:;
			if (it != expr_end) {
				jule::Ptr<_1a4852e51_Var> _29616_v = *it;
				{
					({
						auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:297:5"));
					});
					_1a5bc181d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29616_v))._field_TypeSym))._field_Type);
					({
						auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:299:5"));
					});
					if ((*_29616_v.alloc)._field_Reference) {
						({
							auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:301:6"));
						});
					};
					static__1a62729a1_var(&((*_self_.alloc)._field_anonObj), _29616_v);
					({
						auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:304:5"));
						(except.result);
					});
				}
				_iter_next_1aa23b24b:;
				++it;
				goto _iter_begin_1aa23b24b;
			}
			_iter_end_1aa23b24b:;
		};
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:306:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:313:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a5ba965d_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a5ba965d_anonHash>(_1a5ba965d_anonHash{._field_expr=(*(_28432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1a5bb40d5_anonFuncInsDecl(_self_, _28432_m, __jule_func_result);
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:322:3"));
	});
	return __jule_func_result;;
}



inline jule::I32 _1a5bad83d_pushAnyType(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a48d54cd_Type> _32632_t) {
	jule::Ptr<_1a48d54cd_Type> _3277_orig = _32632_t;;
	if ((_1a48d8437_Enum(_32632_t.ptr()) != nullptr)) {
		_32632_t=(*((*(_1a48d8437_Enum(_32632_t)))._field_TypeSym))._field_Type;
	};
	jule::I32 _3317_i = _1a5baca29_findAnyType(_self_, &(_32632_t));;
	if ((_3317_i != -1LL)) {
		return _3317_i;;
	};
	_3317_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));
	jule::Str _3373_si = _1b45772b4_Itoa(_3317_i);;
	if ((_1a48d7e1a_Sptr(_32632_t) != nullptr)) {
		_1e71a80b0_Builder _3398_elemKind = static__1e71a892e_New(40LL);;
		_1a5bc181d_kind((*_self_.alloc)._field_tc.ptr(), &(_3398_elemKind), (*(_1a48d7e1a_Sptr(_32632_t)))._field_Elem);
		jule::I32 _3434_di = _1a5bad1ab_pushDealloc(_self_, (*(_1a48d7e1a_Sptr(_32632_t)))._field_Elem);;
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:347:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:348:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:349:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _1b45772b4_Itoa(_3434_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:356:4"));
			(except.result);
		});
		_1a5bbca17_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1e71aa3e2_Buf(&_3398_elemKind));
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:358:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:359:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:360:4"));
			(except.result);
		});
	} else {
		_1e71a80b0_Builder _3628_kindB = static__1e71a892e_New(40LL);;
		_1a5bc181d_kind((*_self_.alloc)._field_tc.ptr(), &(_3628_kindB), _32632_t);
		jule::Str _3644_kind = _1e71a9941_Str(&_3628_kindB);;
		jule::I32 _3674_di = _1a5bad1ab_pushDealloc(_self_, _32632_t);;
		jule::Str _3728_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3728_lmodel+=_3644_kind;
		_3728_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3758_rmodel = _3728_lmodel;;
		_3758_rmodel+=jule::Str::lit("other)", 6);
		_3728_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:379:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:380:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:381:4"));
			(except.result);
		});
		if (_1a48d6b2d_Comparable(_32632_t)) {
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			_1a625c936__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3728_lmodel), &(_3758_rmodel), &(_32632_t), &(_32632_t), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:385:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:387:5"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:388:5"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:389:5"));
				(except.result);
			});
			jule::I32 _3909_n = _1e71a9dc5_Len(&(*_self_.alloc)._field_anyObj);;
			_1a626a559_cstrBytes(&((*_self_.alloc)._field_anyObj), _1a48d58c9_Str(_32632_t));
			_3909_n=(_1e71a9dc5_Len(&(*_self_.alloc)._field_anyObj) - _3909_n);
			_3909_n+=37LL;
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:394:5"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _1b45772b4_Itoa(_3909_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:395:5"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:5"));
				(except.result);
			});
		};
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:400:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:401:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:402:4"));
			(except.result);
		});
		jule::Ptr<_1a471dc62_Fn> _4038_decl = _1a4966a48_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1a4721d20_FnIns> _4048_f = _1a538e618_FindFnGenericInstance(&(_4038_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _3277_orig; __jule_collection; }));;
		static__1a627172a_funcIns(&((*_self_.alloc)._field_anyObj), &(_4048_f));
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:4"));
			(except.result);
		});
		if ((_1a48d81a1_Ptr(_32632_t) == nullptr)) {
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:408:5"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3644_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:409:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3644_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:411:5"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:5"));
				(except.result);
			});
		};
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _1b45772b4_Itoa(_3674_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:421:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:422:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:423:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:424:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _3373_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:425:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:426:4"));
			(except.result);
		});
	};
	return _3317_i;;
}



inline void _1a5badae6_pushResultIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _43135_f) {
	jule::Str _4323_s = __jule_bytesToStr(_1a5bc6acb_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_43135_f))))._field_Result)));;
	jule::Bool _4336_ok;
	_1a9b959db_lookup((*_self_.alloc)._field_resultMap, _4323_s, nullptr, &(_4336_ok));
	if (_4336_ok) {
		return;;
	};
	(*_1a9b95c94_set(((*_self_.alloc)._field_resultMap).ptr(), _4323_s))=false;
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:438:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, _4323_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1a48d99aa_Tup((*((*(_43135_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa261b89:;
		if (it != expr_end) {
			jule::I32 _4418_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> _44115_t = *it;
			{
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:442:4"));
				});
				_1a5bc181d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _44115_t);
				({
					auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:444:4"));
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:445:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, _1b45772b4_Itoa(_4418_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:446:4"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:447:4"));
					(except.result);
				});
			}
			_iter_next_1aa261b89:;
			++it;
			_4418_i++;
			goto _iter_begin_1aa261b89;
		}
		_iter_end_1aa261b89:;
	};
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:449:3"));
		(except.result);
	});
}



inline void _1a5badd9e_pushResult(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _45232_f) {
	if ((_1a471e218_IsVoid((*(_45232_f)).ptr()) || ((*((*((*(_45232_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _4567_n = (*((*(_45232_f))))._field_Instances.len();;
	if (((*((*(_45232_f))))._field_Generics.len() == 0LL)) {
		_4567_n=1LL;
	};
	{
		auto expr = (*((*(_45232_f))))._field_Instances.slice(0LL, _4567_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa266c6b:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _46015_ins = *it;
			{
				_1a5badae6_pushResultIns(_self_, &(_46015_ins));
			}
			_iter_next_1aa266c6b:;
			++it;
			goto _iter_begin_1aa266c6b;
		}
		_iter_end_1aa266c6b:;
	};
}



inline void _1a5bae212_pushAndWriteMaskMapper(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4729476_Trait> _46543_t1, jule::Ptr<_1a4729476_Trait> _46565_t2) {
	_1e71a80b0_Builder _4667_ident = static__1e71a892e_New(32LL);;
	({
		auto except = _1e71a90b1_WriteStr(&_4667_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:467:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_4667_ident, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46565_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:468:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_4667_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:469:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_4667_ident, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46543_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:470:3"));
		(except.result);
	});
	({
		auto except = _1e71a8c70_Write(&(*(_self_))._field_Buf, _1e71aa3e2_Buf(&_4667_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:471:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa26e955:;
		if (it != expr_end) {
			_1a5ba9284_traitCast _47410_m = *it;
			{
				if (((_47410_m._field_t1 == _46543_t1) && (_47410_m._field_t2 == _46565_t2))) {
					return;;
				};
			}
			_iter_next_1aa26e955:;
			++it;
			goto _iter_begin_1aa26e955;
		}
		_iter_end_1aa26e955:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1a5ba9284_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a5ba9284_traitCast{._field_t1=_46543_t1, ._field_t2=_46565_t2}; __jule_collection; }));
	;
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:484:3"));
		(except.result);
	});
	({
		auto except = _1e71a8c70_Write(&(*_self_.alloc)._field_anyObj, _1e71aa3e2_Buf(&_4667_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:485:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:486:3"));
		(except.result);
	});
	_1e71a80b0_Builder _4887_t1Ident = static__1e71a892e_New(16LL);;
	_1e71a80b0_Builder _4897_t2Ident = static__1e71a892e_New(16LL);;
	static__1a6271a16_traitDecl(&(_4887_t1Ident), _46543_t1);
	static__1a6271a16_traitDecl(&(_4897_t2Ident), _46565_t2);
	{
		auto expr = &((*(_46543_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa270082:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _49315_s1 = *it;
			{
				{
					auto expr = &((*(_46565_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa274064:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> _49411_s2 = *it;
						{
							if ((_49315_s1 == _49411_s2)) {
								{
									auto expr = &((*(_49315_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aa274e55:;
									if (it != expr_end) {
										jule::Ptr<_1a4676d30_StructIns> _49618_s1i = *it;
										{
											jule::I32 _4977_i1 = _1a538d9e1_FindTraitTypeOffsetS(_46543_t1, _49618_s1i);;
											jule::I32 _4987_i2 = _1a538d9e1_FindTraitTypeOffsetS(_46565_t2, _49618_s1i);;
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1e71a8c70_Write(&(*_self_.alloc)._field_anyObj, _1e71aa3e2_Buf(&_4897_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _1b45772b4_Itoa(_4987_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:502:7"));
												(except.result);
											});
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:503:7"));
												(except.result);
											});
											({
												auto except = _1e71a8c70_Write(&(*_self_.alloc)._field_anyObj, _1e71aa3e2_Buf(&_4887_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:504:7"));
												(except.result);
											});
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:505:7"));
												(except.result);
											});
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, _1b45772b4_Itoa(_4977_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:506:7"));
												(except.result);
											});
											({
												auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:507:7"));
												(except.result);
											});
										}
										_iter_next_1aa274e55:;
										++it;
										goto _iter_begin_1aa274e55;
									}
									_iter_end_1aa274e55:;
								};
							};
						}
						_iter_next_1aa274064:;
						++it;
						goto _iter_begin_1aa274064;
					}
					_iter_end_1aa274064:;
				};
			}
			_iter_next_1aa270082:;
			++it;
			goto _iter_begin_1aa270082;
		}
		_iter_end_1aa270082:;
	};
	({
		auto except = _1e71a90b1_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:512:3"));
		(except.result);
	});
}



inline void _1a5bae4ba_locInfo(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a463d137_Token>* _51625_t) {
	jule::Str *_5174_loc = &((*((*((*(_51625_t))))._field_File))._field_Path);;
	if (_1ce7a1083_Production) {
		{
			
			if (_1ce7841cb_HasPrefix((*(_5174_loc)), _1ce79807a_PathStdlib)) {
				_case_begin_1aa27a444:;
				{
					_1a626a559_cstrBytes(&((*(_self_))._field_Buf), (*(_5174_loc)).slice((_1ce7911c7_Dir(_1ce79807a_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1ce7841cb_HasPrefix((*(_5174_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1aa27a521:;
				{
					_1a626a559_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5174_loc)).slice((_1ce7911c7_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1aa27a07b:;
				{
					_1a626a559_cstrBytes(&((*(_self_))._field_Buf), (*(_5174_loc)));
				}
			}
			_match_end_1aa279e9e:;
		};
	} else {
		_1a626a559_cstrBytes(&((*(_self_))._field_Buf), (*(_5174_loc)));
	};
	_1a5babd36_write(_self_, jule::Str::lit(":", 1));
	_1a5babd36_write(_self_, _1b45772b4_Itoa((*((*(_51625_t))))._field_Row));
	_1a5babd36_write(_self_, jule::Str::lit(":", 1));
	_1a5babd36_write(_self_, _1b45772b4_Itoa((*((*(_51625_t))))._field_Column));
}



inline void _1a5bae6b8_head(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5b9e08c_Time _5433_time = static__1a5b9e686_Now();;
	_1a5b9d8b6_AbsTime _5443_abs = _1a5ba0d6e_Abs(&_5433_time);;
	_1a5babd36_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a5babd36_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a5babd36_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
	_1a5babd36_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a5babd36_write(_self_, _1b4576b32_FmtUint(_5443_abs._field_Day, 10LL));
	_1a5babd36_write(_self_, jule::Str::lit("/", 1));
	_1a5babd36_write(_self_, _1b4576b32_FmtUint(_5443_abs._field_Month, 10LL));
	_1a5babd36_write(_self_, jule::Str::lit("/", 1));
	_1a5babd36_write(_self_, _1b4576b32_FmtUint(_5443_abs._field_Year, 10LL));
	_1a5babd36_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a5babd36_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a5babd36_write(_self_, jule::Str::lit(" ", 1));
	_1a5babd36_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1ce7a1083_Production) {
		_1a5babd36_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1ce7a0978_RC))) {
		_1a5babd36_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1ce7a0d41_Safety))) {
		_1a5babd36_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a5bae971_links(_self_, true);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a5babd36_write(_self_, _1ce798861_PathApi);
	_1a5babd36_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1a5bae971_links(_self_, false);
}



inline void _1a5bae971_links(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Bool _58322_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa287143:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _58410_used = *it;
			{
				{
					
					if ((!((*(_58410_used))._field_Binded))) {
						_case_begin_1aa287e79:;
						{
							goto _iter_next_1aa287143;
						}
					}
					else if (_1cc835db7_IsStdHeaderPath((*(_58410_used))._field_Path)) {
						_case_begin_1aa288012:;
						{
							if ((!(_58322_std))) {
								goto _iter_next_1aa287143;
							};
							_1a5babd36_write(_self_, jule::Str::lit("#include ", 9));
							_1a5babd36_write(_self_, (*_58410_used.alloc)._field_Path);
							_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1cc836192_IsValidHeaderExt(_1ce79076a_Ext((*(_58410_used))._field_Path))) {
						_case_begin_1aa288078:;
						{
							if (_58322_std) {
								goto _iter_next_1aa287143;
							};
							_1a5babd36_write(_self_, jule::Str::lit("#include \"", 10));
							_1a5babd36_write(_self_, (*_58410_used.alloc)._field_Path);
							_1a5babd36_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1aa287d25:;
				};
			}
			_iter_next_1aa287143:;
			++it;
			goto _iter_begin_1aa287143;
		}
		_iter_end_1aa287143:;
	};
}



inline void _1a5baec29_prepareStructure(_1a5bab61b_ObjectCoder* _self_, jule::Ptr<_1a4673ec5_Struct>* _60637_s) {
	{
		auto expr = &((*((*(_60637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa287ad3:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _60715_ins = *it;
			{
				{
					auto expr = &((*(_60715_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa28bc19:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _60816_m = *it;
						{
							if ((*(_60816_m))._field_Statically) {
								goto _iter_next_1aa28bc19;
							};
							{
								auto expr = &((*_60816_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa28c7ca:;
								if (it != expr_end) {
									jule::Ptr<_1a4721d20_FnIns> _61217_mins = *it;
									{
										jule::Ptr<_1a4720bba_ParamIns> _61310_p = (*(_61217_mins))._field_Params[0LL];;
										_1e71a80b0_Builder _61410_kind = static__1e71a892e_New(40LL);;
										_1a5bc181d_kind((*(_self_))._field_tc.ptr(), &(_61410_kind), (*(_61310_p))._field_Type);
										if ((!(_1a471cb73_IsRef((*_61310_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1e71a90b1_WriteStr(&_61410_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:617:7"));
												(except.result);
											});
										};
										(*_61310_p.alloc)._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a5bba9d2_customType>(_1a5bba9d2_customType{._field_kind=_1e71a9941_Str(&_61410_kind)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data29)});
									}
									_iter_next_1aa28c7ca:;
									++it;
									goto _iter_begin_1aa28c7ca;
								}
								_iter_end_1aa28c7ca:;
							};
						}
						_iter_next_1aa28bc19:;
						++it;
						goto _iter_begin_1aa28bc19;
					}
					_iter_end_1aa28bc19:;
				};
			}
			_iter_next_1aa287ad3:;
			++it;
			goto _iter_begin_1aa287ad3;
		}
		_iter_end_1aa287ad3:;
	};
}



inline void _1a5baee27_prepareStructures(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa285570:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _63015_s = *it;
			{
				if (((*(_63015_s))._field_Token != nullptr)) {
					_1a5baec29_prepareStructure(_self_.ptr(), &(_63015_s));
				};
			}
			_iter_next_1aa285570:;
			++it;
			goto _iter_begin_1aa285570;
		}
		_iter_end_1aa285570:;
	};
}



inline void _1a5bb01d0_structurePlainDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4673ec5_Struct>* _63740_s) {
	{
		auto expr = &((*((*(_63740_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa291db7:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _63815_ins = *it;
			{
				_1a5babd36_write(_self_, jule::Str::lit("struct ", 7));
				static__1a62723c9_structureIns(&((*_self_.alloc)._field_Buf), &(_63815_ins));
				_1a5babd36_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa291db7:;
			++it;
			goto _iter_begin_1aa291db7;
		}
		_iter_end_1aa291db7:;
	};
}



inline void _1a5bb03cd_structurePlainDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2934d4:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _64615_s = *it;
			{
				if (((*(_64615_s))._field_Token != nullptr)) {
					_1a5bb01d0_structurePlainDecl(_self_, &(_64615_s));
				};
			}
			_iter_next_1aa2934d4:;
			++it;
			goto _iter_begin_1aa2934d4;
		}
		_iter_end_1aa2934d4:;
	};
}



inline void _1a5bb0686_fieldDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676280_FieldIns>* _65331_f) {
	_1a5bc181d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_65331_f))))._field_Type);
	_1a5babd36_write(_self_, jule::Str::lit(" ", 1));
	static__1a62726b5_field(&((*_self_.alloc)._field_Buf), &((*((*(_65331_f))))._field_Decl));
	_1a5babd36_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a5bb0aa4_structureOperatorEq(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Str _66036_ident, jule::Ptr<_1a4676d30_StructIns>* _66053_s, jule::Bool _66074_decl) {
	if ((!(_1a5bb9739_defaultEq(_66053_s)))) {
		return;;
	};
	_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
	if (_1a614c23d_Inline) {
		_1a5babd36_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a5babd36_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1a5babd36_write(_self_, _66036_ident);
	_1a5babd36_write(_self_, jule::Str::lit("_eq", 3));
	_1a5babd36_write(_self_, jule::Str::lit("(", 1));
	_1a5babd36_write(_self_, _66036_ident);
	_1a5babd36_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1a5babd36_write(_self_, _66036_ident);
	_1a5babd36_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_66074_decl) {
		_1a5babd36_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1a5babd36_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_66053_s))))._field_Fields.len() == 0LL)) {
		_1a5babd36_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1a5bac2dc_addIndent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
	_1a5bac6d8_indent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("return ", 7));
	_1a5bac2dc_addIndent(_self_);
	jule::Bool _6917_writed = false;;
	jule::Str _6947_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6957_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_66053_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa29d3ac:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> _69715_f = *it;
			{
				jule::Ptr<_1a4676d30_StructIns> _6994_strct = _1a48d9207_Struct((*(_69715_f))._field_Type.ptr());;
				if ((((_6994_strct != nullptr) && ((*_6994_strct.alloc)._field_Decl != nullptr)) && (*(*(_6994_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1aa29d3ac;
				};
				if (_6917_writed) {
					_1a5babd36_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6917_writed=true;
				_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
				_1a5bac6d8_indent(_self_);
				_1e71a80b0_Builder _7108_fIdent = static__1e71a892e_New((*((*_69715_f.alloc)._field_Decl))._field_Ident.len());;
				static__1a62726b5_field(&(_7108_fIdent), &((*_69715_f.alloc)._field_Decl));
				_6947_lmodel+=_1e73d2e44_BytesStr(_1e71aa3e2_Buf(&_7108_fIdent));
				_6957_rmodel+=_1e73d2e44_BytesStr(_1e71aa3e2_Buf(&_7108_fIdent));
				_1a625c936__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6947_lmodel), &(_6957_rmodel), &((*_69715_f.alloc)._field_Type), &((*_69715_f.alloc)._field_Type), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6947_lmodel).mut_slice(0LL, (_6947_lmodel.len() - _1e71a9dc5_Len(&_7108_fIdent)));;
				_6957_rmodel=_6947_lmodel.slice(0LL, (_6957_rmodel.len() - _1e71a9dc5_Len(&_7108_fIdent)));
			}
			_iter_next_1aa29d3ac:;
			++it;
			goto _iter_begin_1aa29d3ac;
		}
		_iter_end_1aa29d3ac:;
	};
	_1a5bac4da_doneIndent(_self_);
	if ((!(_6917_writed))) {
		_1a5babd36_write(_self_, jule::Str::lit("true", 4));
	};
	_1a5babd36_write(_self_, jule::Str::lit(";\n", 2));
	_1a5bac4da_doneIndent(_self_);
	_1a5bac6d8_indent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1a5bb0e17_structureOperators(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _72840_s, jule::Bool _72861_decl) {
	_1e71a80b0_Builder _7297_sb = static__1e71a892e_New(40LL);;
	static__1a62723c9_structureIns(&(_7297_sb), _72840_s);
	jule::Str _7313_ident = _1e71a9941_Str(&_7297_sb);;
	_1a5bb0aa4_structureOperatorEq(_self_, _7313_ident, _72840_s, _72861_decl);
}



inline void _1a5bb11c0_structureInsDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _73738_s) {
	{
		auto expr = &((*((*(_73738_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2a75c5:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _73815_m = *it;
			{
				if (_1a5bb9470_isHeadDecl(&(_73815_m))) {
					_1a5bb2523_funcDecl(_self_, &(_73815_m), false);
				};
			}
			_iter_next_1aa2a75c5:;
			++it;
			goto _iter_begin_1aa2a75c5;
		}
		_iter_end_1aa2a75c5:;
	};
	_1a5babd36_write(_self_, jule::Str::lit("struct ", 7));
	static__1a62723c9_structureIns(&((*_self_.alloc)._field_Buf), _73738_s);
	_1a5babd36_write(_self_, jule::Str::lit(" {\n", 3));
	_1a5bac2dc_addIndent(_self_);
	{
		auto expr = &((*((*(_73738_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2a8ecd:;
		if (it != expr_end) {
			jule::Ptr<_1a4676280_FieldIns> _74915_f = *it;
			{
				_1a5bac6d8_indent(_self_);
				_1a5bb0686_fieldDecl(_self_, &(_74915_f));
				_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1aa2a8ecd:;
			++it;
			goto _iter_begin_1aa2a8ecd;
		}
		_iter_end_1aa2a8ecd:;
	};
	_1a5bac4da_doneIndent(_self_);
	_1a5bac6d8_indent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("};", 2));
	;
	_1a5bb0e17_structureOperators(_self_, _73738_s, true);
}



inline void _1a5bb1478_structureDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4673ec5_Struct>* _76335_s) {
	{
		auto expr = &((*((*(_76335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2abd8d:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _76415_ins = *it;
			{
				_1a5bb11c0_structureInsDecl(_self_, &(_76415_ins));
			}
			_iter_next_1aa2abd8d:;
			++it;
			goto _iter_begin_1aa2abd8d;
		}
		_iter_end_1aa2abd8d:;
	};
}



inline void _1a5bb1676_structureDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2ac630:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _77015_s = *it;
			{
				if (((*(_77015_s))._field_Token != nullptr)) {
					_1a5bb1478_structureDecl(_self_, &(_77015_s));
					_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1aa2ac630:;
			++it;
			goto _iter_begin_1aa2ac630;
		}
		_iter_end_1aa2ac630:;
	};
}



inline void _1a5bb1874_structureMethodDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2ad653:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _77915_s = *it;
			{
				if (((*(_77915_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_77915_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa2b0776:;
						if (it != expr_end) {
							jule::Ptr<_1a4676d30_StructIns> _78117_ins = *it;
							{
								{
									auto expr = &((*(_78117_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aa2b11c2:;
									if (it != expr_end) {
										jule::Ptr<_1a471dc62_Fn> _78218_m = *it;
										{
											if ((!(_1a5bb9470_isHeadDecl(&(_78218_m))))) {
												_1a5badd9e_pushResult(_self_, &(_78218_m));
												_1a5bb2523_funcDecl(_self_, &(_78218_m), false);
											};
										}
										_iter_next_1aa2b11c2:;
										++it;
										goto _iter_begin_1aa2b11c2;
									}
									_iter_end_1aa2b11c2:;
								};
							}
							_iter_next_1aa2b0776:;
							++it;
							goto _iter_begin_1aa2b0776;
						}
						_iter_end_1aa2b0776:;
					};
				};
			}
			_iter_next_1aa2ad653:;
			++it;
			goto _iter_begin_1aa2ad653;
		}
		_iter_end_1aa2ad653:;
	};
}



inline void _1a5bb1d4c_funcHead(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _79730_buf, jule::Ptr<_1a4721d20_FnIns>* _79758_f, jule::Bool _79775_ptr, jule::Str _79786_ident) {
	if ((((!(_79775_ptr)) && _1a614c23d_Inline) && (!(_1a471e735_IsEntryPoint((*((*(_79758_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1e71a90b1_WriteStr(_79730_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:799:4"));
			(except.result);
		});
	};
	_1a5bc0cd4_funcInsResult((*(_self_))._field_tc.ptr(), _79730_buf, _79758_f);
	if (_79775_ptr) {
		({
			auto except = _1e71a90b1_WriteStr(_79730_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:803:4"));
			(except.result);
		});
		static__1a627172a_funcIns(_79730_buf, _79758_f);
		({
			auto except = _1e71a9369_WriteByte(_79730_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:805:4"));
		});
	} else {
		({
			auto except = _1e71a9369_WriteByte(_79730_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:807:4"));
		});
		if ((_79786_ident).empty()) {
			static__1a627172a_funcIns(_79730_buf, _79758_f);
		} else {
			({
				auto except = _1e71a90b1_WriteStr(_79730_buf, _79786_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:811:5"));
				(except.result);
			});
		};
	};
}



inline void _1a5bb21b0_funcDeclIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns>* _81633_f, jule::Bool _81650_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_81633_f))))._field_CalledCo);
	_1a5bac6d8_indent(_self_);
	_1a5bb1d4c_funcHead(_self_, &((*_self_.alloc)._field_Buf), _81633_f, _81650_ptr, jule::Str());
	_1a5bb3656_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _81633_f);
	_1a5babd36_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a5bb2523_funcDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _82430_f, jule::Bool _82444_ptr) {
	{
		auto expr = &((*((*(_82430_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2b7d33:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _82515_c = *it;
			{
				_1a5bb21b0_funcDeclIns(_self_, &(_82515_c), _82444_ptr);
			}
			_iter_next_1aa2b7d33:;
			++it;
			goto _iter_begin_1aa2b7d33;
		}
		_iter_end_1aa2b7d33:;
	};
}



inline void _1a5bb27cb_funcDeclTrait(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _83035_f) {
	{
		auto expr = &((*((*(_83035_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2b8c68:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _83115_c = *it;
			{
				jule::Ptr<_1a48d54cd_Type> _8328_k = (*((*(_83115_c))._field_Params[0LL]))._field_Type;;
				(*((*(_83115_c))._field_Params[0LL]))._field_Type=_1a5ba8a8b_generalGCPtr;
				_1a5bb21b0_funcDeclIns(_self_, &(_83115_c), true);
				(*((*(_83115_c))._field_Params[0LL]))._field_Type=_8328_k;
			}
			_iter_next_1aa2b8c68:;
			++it;
			goto _iter_begin_1aa2b8c68;
		}
		_iter_end_1aa2b8c68:;
	};
}



inline void _1a5bb29c9_funcDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5388238_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a480eb55_Package>*>((void*)__jule_anon_1aa2bb991, jule::Ptr<__jule_anon_1aa2bb991_ctx>::make(__jule_anon_1aa2bb991_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa2bb991_ctx_handler));
}



inline void _1a5bb2c82_traitDataTypeMethods(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a5ba9a7b_traitHash>* _85242_hash) {
	{
		auto expr = &((*((*(_85242_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2bbd6a:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _85315_m = *it;
			{
				jule::Ptr<_1a4721d20_FnIns> _8548_ins = (*(_85315_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8548_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1aa2c0ba4:;
					if (it != expr_end) {
						jule::I32 _8559_i = it - expr.begin();
						jule::Ptr<_1a4720bba_ParamIns> _85516_ip = *it;
						{
							if (_1a4640cd8_IsAnonIdent((*((*(_85516_ip))._field_Decl))._field_Ident)) {
								(*(*(_85516_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1b45772b4_Itoa(_8559_i));
							};
						}
						_iter_next_1aa2c0ba4:;
						++it;
						_8559_i++;
						goto _iter_begin_1aa2c0ba4;
					}
					_iter_end_1aa2c0ba4:;
				};
				_1a5badd9e_pushResult(_self_, &(_85315_m));
				_1a5bb27cb_funcDeclTrait(_self_, &(_85315_m));
			}
			_iter_next_1aa2bbd6a:;
			++it;
			goto _iter_begin_1aa2bbd6a;
		}
		_iter_end_1aa2bbd6a:;
	};
}



inline void _1a5bb2e80_traitDataTypes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2c005a:;
		if (it != expr_end) {
			jule::Ptr<_1a5ba9a7b_traitHash> _86615_hash = *it;
			{
				_1a5babd36_write(_self_, jule::Str::lit("struct ", 7));
				static__1a6271a16_traitDecl(&((*_self_.alloc)._field_Buf), (*(_86615_hash))._field_traitDecl);
				_1a5babd36_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1a5bac2dc_addIndent(_self_);
				_1a5bac6d8_indent(_self_);
				_1a5babd36_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a5bb2c82_traitDataTypeMethods(_self_, &(_86615_hash));
				_1a5bac4da_doneIndent(_self_);
				_1a5bac6d8_indent(_self_);
				_1a5babd36_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1aa2c005a:;
			++it;
			goto _iter_begin_1aa2c005a;
		}
		_iter_end_1aa2c005a:;
	};
}



inline void _1a5bb32e3_paramIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _88030_buf, jule::Ptr<_1a4720bba_ParamIns>* _88058_p) {
	_1a5bc060d_paramIns((*(_self_))._field_tc.ptr(), _88030_buf, _88058_p);
	({
		auto except = _1e71a9369_WriteByte(_88030_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:882:3"));
	});
	static__1a6271d02_param(_88030_buf, &((*((*(_88058_p))))._field_Decl));
}



inline void _1a5bb3656_paramsIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _88631_buf, jule::Ptr<_1a4721d20_FnIns>* _88659_f) {
	if (((!((*((*(_88659_f))))._field_AsAnon)) && ((*((*(_88659_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1e71a90b1_WriteStr(_88631_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:888:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1e71a9369_WriteByte(_88631_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:891:3"));
	});
	if ((*((*(_88659_f))))._field_AsAnon) {
		({
			auto except = _1e71a90b1_WriteStr(_88631_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:893:4"));
			(except.result);
		});
		if (((*((*(_88659_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1e71a90b1_WriteStr(_88631_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:895:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_88659_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2c93d8:;
		if (it != expr_end) {
			jule::I32 _8988_i = it - expr->begin();
			jule::Ptr<_1a4720bba_ParamIns> _89815_p = *it;
			{
				_1a5bb32e3_paramIns(_self_, _88631_buf, &(_89815_p));
				if ((((*((*(_88659_f))))._field_Params.len() - _8988_i) > 1LL)) {
					({
						auto except = _1e71a90b1_WriteStr(_88631_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:901:5"));
						(except.result);
					});
				};
			}
			_iter_next_1aa2c93d8:;
			++it;
			_8988_i++;
			goto _iter_begin_1aa2c93d8;
		}
		_iter_end_1aa2c93d8:;
	};
	({
		auto except = _1e71a9369_WriteByte(_88631_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:904:3"));
	});
}



inline void _1a5bb39b9_varInitExpr(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4852e51_Var>* _90733_v, jule::Fn<void> _90748_init) {
	if ((*((*(_90733_v))))._field_Statically) {
		_1a5babd36_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a5bc181d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90733_v))))._field_TypeSym))._field_Type);
	_1a5babd36_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90733_v))))._field_Reference) {
		_1a5babd36_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a62729a1_var(&((*_self_.alloc)._field_Buf), (*(_90733_v)));
	if ((_90748_init != nullptr)) {
		_1a5babd36_write(_self_, jule::Str::lit(" = ", 3));
		_90748_init();
	};
	_1a5babd36_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a5bb3c72_var(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4852e51_Var> _92524_v) {
	if (_1a4640a1e_IsIgnoreIdent((*(_92524_v))._field_Ident)) {
		return;;
	};
	if ((((*_92524_v.alloc)._field_Value != nullptr) && ((*(*(_92524_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92524_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92524_v.alloc)._field_Reference) {
				_1a5bb39b9_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1aa2d1797, jule::Ptr<__jule_anon_1aa2d1797_ctx>::make(__jule_anon_1aa2d1797_ctx{._self_=_self_,._92524_v=_92524_v}).as<jule::Uintptr>(), __jule_anon_1aa2d1797_ctx_handler));
			} else {
				_1a5bb39b9_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1aa2d3887, jule::Ptr<__jule_anon_1aa2d3887_ctx>::make(__jule_anon_1aa2d3887_ctx{._self_=_self_,._92524_v=_92524_v}).as<jule::Uintptr>(), __jule_anon_1aa2d3887_ctx_handler));
			};
			return;;
		};
		_1a5bb39b9_varInitExpr(_self_, &(_92524_v), nullptr);
		return;;
	};
	if ((*_92524_v.alloc)._field_Reference) {
		_1a5bb39b9_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1aa2d6093, jule::Ptr<__jule_anon_1aa2d6093_ctx>::make(__jule_anon_1aa2d6093_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa2d6093_ctx_handler));
		return;;
	};
	if (_1a5bc899b_shouldInitialized(&((*((*_92524_v.alloc)._field_TypeSym))._field_Type))) {
		_1a5bb39b9_varInitExpr(_self_, &(_92524_v), jule::__new_closure<void>((void*)__jule_anon_1aa2d723c, jule::Ptr<__jule_anon_1aa2d723c_ctx>::make(__jule_anon_1aa2d723c_ctx{._self_=_self_,._92524_v=_92524_v}).as<jule::Uintptr>(), __jule_anon_1aa2d723c_ctx_handler));
		return;;
	};
	_1a5bb39b9_varInitExpr(_self_, &(_92524_v), nullptr);
}



inline void _1a5bb40d5_anonFuncInsDecl(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel>* _95637_m, jule::Str _95664_ident) {
	_1a5bb1d4c_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95637_m))))._field_Func), false, _95664_ident);
	_1a5bb3656_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95637_m))))._field_Func));
	({
		auto except = _1e71a9369_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:959:3"));
	});
}



inline void _1a5bb4448_anonFuncIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a47147a2_AnonFnExprModel>* _96233_m, jule::Str _96260_ident) {
	_1a5bb1d4c_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_96233_m))))._field_Func), false, _96260_ident);
	_1a5bb3656_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_96233_m))))._field_Func));
	_1a5babd36_write(_self_, jule::Str::lit(" ", 1));
	_1a62569c9_anonFuncScope((*_self_.alloc)._field_sc, (*(_96233_m)), _96260_ident);
	if (((*((*((*(_96233_m))))._field_Func))._field_Scope != nullptr)) {
		_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a5bb47ab_funcIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4721d20_FnIns> _97228_f, jule::Str _97245_ident) {
	_1a5bb1d4c_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_97228_f), false, _97245_ident);
	_1a5bb3656_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_97228_f));
	_1a5babd36_write(_self_, jule::Str::lit(" ", 1));
	_1a6256c82_funcScope((*_self_.alloc)._field_sc, _97228_f);
	if (((*(_97228_f))._field_Scope != nullptr)) {
		_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a5bb4a64_func(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _98226_f) {
	{
		auto expr = &((*((*(_98226_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2e0a70:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _98315_ins = *it;
			{
				_1a5bb47ab_funcIns(_self_, _98315_ins, jule::Str());
			}
			_iter_next_1aa2e0a70:;
			++it;
			goto _iter_begin_1aa2e0a70;
		}
		_iter_end_1aa2e0a70:;
	};
}



inline void _1a5bb4dc7_funcTrait(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _98827_s, jule::Ptr<_1a4721d20_FnIns>* _98853_f) {
	(*((*(_98853_f))))._field_Scope=nullptr;
	_1e71a80b0_Builder _9917_nident = static__1e71a892e_New(30LL);;
	({
		auto except = _1e71a90b1_WriteStr(&_9917_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:992:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_9917_nident, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98853_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:993:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_9917_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:994:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(&_9917_nident, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98827_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:995:3"));
		(except.result);
	});
	jule::Ptr<_1a48d54cd_Type> _9977_k = (*((*((*(_98853_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_98853_f))))._field_Params[0LL]))._field_Type=_1a5ba8a8b_generalGCPtr;
	_1a5bb47ab_funcIns(_self_, (*(_98853_f)), _1e71a9941_Str(&_9917_nident));
	(*((*((*(_98853_f))))._field_Params[0LL]))._field_Type=_9977_k;
}



inline __jule_tuple_x_1a4721d20_FnIns__jule_tuple_bool _1a5bb5218_findTraitMetMap(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a471dc62_Fn>* _100337_m) {
	__jule_tuple_x_1a4721d20_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a4721d20_FnIns> _10047_mins = (*((*(_100337_m))))._field_Instances[0LL];;
	{
		_1a9c0078d_mapIterator it = _1a9be780c_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1aa2e634a:;
		__jule_tuple_px_1a4721d20_FnIns__jule_tuple_psuintptr __iterator_result = _1a9c00e75_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1a4721d20_FnIns> _100512_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_100512_f))._field_Decl))._field_Public == (*((*(_100337_m))))._field_Public) && ((*(*(_100512_f))._field_Decl.alloc)._field_Ident == (*((*(_100337_m))))._field_Ident)) && _1a472297a_EqualFn(_100512_f, &(_10047_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100512_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa2e634a:;
			goto _iter_begin_1aa2e634a;
		}
		_iter_end_1aa2e634a:;
	};
	__jule_func_result.__jule_result_arg0 = _10047_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a5bb557b_traitWrapper(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4729476_Trait>* _101534_t, jule::Ptr<_1a471dc62_Fn>* _101556_m) {
	_julec_label_1aa2e8a78:;
	{
		auto expr = &((*((*(_101534_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2e8c32:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _101715_imp = *it;
			{
				jule::Ptr<_1a4721d20_FnIns> _10188_mepf;
				jule::Bool _101814_exist;
				({
					__jule_tuple_x_1a4721d20_FnIns__jule_tuple_bool __jule_assign_result = _1a5bb5218_findTraitMetMap(_self_, _101556_m);
					_10188_mepf = __jule_assign_result.__jule_result_arg0;
					_101814_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101814_exist) {
					jule::Slice<jule::Uintptr> _10219_vals = _1a9be6ee3_get((*_self_.alloc)._field_traitMetMap, _10188_mepf);;
					{
						auto expr = &(_10219_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa2eac12:;
						if (it != expr_end) {
							jule::Uintptr _102212_val = *it;
							{
								if ((_102212_val == static_cast<jule::Uintptr>(_101715_imp))) {
									goto _iter_next_1aa2e8c32;
								};
							}
							_iter_next_1aa2eac12:;
							++it;
							goto _iter_begin_1aa2eac12;
						}
						_iter_end_1aa2eac12:;
					};
					(*_1a9be7147_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10188_mepf))=jule::append(_10219_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101715_imp); __jule_collection; }));
				} else {
					(*_1a9be7147_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10188_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101715_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_101715_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa2eb949:;
					if (it != expr_end) {
						jule::Ptr<_1a4676d30_StructIns> _103216_ins = *it;
						{
							_1a5bb4dc7_funcTrait(_self_, &(_103216_ins), &(_10188_mepf));
							;
							jule::Ptr<_1a471dc62_Fn> _10369_sm = _1a4677dca_FindMethod(_103216_ins.ptr(), (*((*(_101556_m))))._field_Ident, false);;
							if (((_10369_sm == nullptr) || ((*(_10369_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a5bac2dc_addIndent(_self_);
							_1a5babd36_write(_self_, jule::Str::lit("{\n", 2));
							_1a5bac6d8_indent(_self_);
							if (((*((*(_101556_m))))._field_Exceptional || (!(_1a471e218_IsVoid((*(_101556_m)).ptr()))))) {
								_1a5babd36_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a627143e_func(&((*_self_.alloc)._field_Buf), &(_10369_sm));
							_1a5babd36_write(_self_, jule::Str::lit("(", 1));
							_1a5babd36_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a5bbeac4_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _103216_ins);
							_1a5babd36_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10535_ptr = (!(_1a471cb73_IsRef((*((*(_101556_m))))._field_Params[0LL].ptr())));;
							if (_10535_ptr) {
								_1a5babd36_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101556_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1aa303830:;
								if (it != expr_end) {
									jule::Ptr<_1a471c28d_Param> _105712_mp = *it;
									{
										_1a5babd36_write(_self_, jule::Str::lit(", ", 2));
										static__1a6271d02_param(&((*_self_.alloc)._field_Buf), &(_105712_mp));
									}
									_iter_next_1aa303830:;
									++it;
									goto _iter_begin_1aa303830;
								}
								_iter_end_1aa303830:;
							};
							_1a5babd36_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a5bac4da_doneIndent(_self_);
						}
						_iter_next_1aa2eb949:;
						++it;
						goto _iter_begin_1aa2eb949;
					}
					_iter_end_1aa2eb949:;
				};
			}
			_iter_next_1aa2e8c32:;
			++it;
			goto _iter_begin_1aa2e8c32;
		}
		_iter_end_1aa2e8c32:;
	};
}



inline void _1a5bb5779_traitWrappers(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2ed63d:;
		if (it != expr_end) {
			jule::Ptr<_1a5ba9a7b_traitHash> _106815_hash = *it;
			{
				if (((*((*(_106815_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1aa2ed63d;
				};
				{
					auto expr = &((*_106815_hash.alloc)._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa305e5e:;
					if (it != expr_end) {
						jule::Ptr<_1a471dc62_Fn> _107216_m = *it;
						{
							_1a5bb557b_traitWrapper(_self_, &((*_106815_hash.alloc)._field_traitDecl), &(_107216_m));
						}
						_iter_next_1aa305e5e:;
						++it;
						goto _iter_begin_1aa305e5e;
					}
					_iter_end_1aa305e5e:;
				};
			}
			_iter_next_1aa2ed63d:;
			++it;
			goto _iter_begin_1aa2ed63d;
		}
		_iter_end_1aa2ed63d:;
	};
}



inline void _1a5bb5adc_traitDataMethods(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a5ba9a7b_traitHash>* _107938_hash, jule::Ptr<_1a4676d30_StructIns> _107956_s) {
	{
		auto expr = &((*((*(_107938_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa306ec6:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _108015_m = *it;
			{
				_1a5bac6d8_indent(_self_);
				_1a5babd36_write(_self_, jule::Str::lit(".", 1));
				static__1a627143e_func(&((*_self_.alloc)._field_Buf), &(_108015_m));
				_1a5babd36_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1a4721d20_FnIns> _10854_mepf;
				jule::Bool _108510_exist;
				({
					__jule_tuple_x_1a4721d20_FnIns__jule_tuple_bool __jule_assign_result = _1a5bb5218_findTraitMetMap(_self_, &(_108015_m));
					_10854_mepf = __jule_assign_result.__jule_result_arg0;
					_108510_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_108510_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1087:5"));;
				};
				_1a5babd36_write(_self_, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10854_mepf)), 15LL));
				_1a5babd36_write(_self_, jule::Str::lit("_", 1));
				_1a5babd36_write(_self_, _1b4576b32_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_107956_s)), 15LL));
				_1a5babd36_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1aa306ec6:;
			++it;
			goto _iter_begin_1aa306ec6;
		}
		_iter_end_1aa306ec6:;
	};
}



inline void _1a5bb600a_traitData(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a5ba9a7b_traitHash>* _109731_hash, jule::I32 _109749_i, jule::Ptr<_1a4676d30_StructIns>* _109762_s) {
	_1e71a80b0_Builder _10987_ident = static__1e71a892e_New((*((*((*(_109731_hash))))._field_traitDecl))._field_Ident.len());;
	static__1a6271a16_traitDecl(&(_10987_ident), (*((*(_109731_hash))))._field_traitDecl);
	_1a5babd36_write(_self_, jule::Str::lit("static ", 7));
	_1a5bac0de_writeBytes(_self_, _1e71aa3e2_Buf(&_10987_ident));
	_1a5babd36_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a5bac0de_writeBytes(_self_, _1e71aa3e2_Buf(&_10987_ident));
	_1a5babd36_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a5babd36_write(_self_, _1b45772b4_Itoa(_109749_i));
	_1a5babd36_write(_self_, jule::Str::lit(" {\n", 3));
	_1a5bac2dc_addIndent(_self_);
	_1a5bac6d8_indent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a5babd36_write(_self_, _1b45772b4_Itoa(_1a5bad1ab_pushDealloc(_self_, jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_109762_s)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)}))));
	_1a5babd36_write(_self_, jule::Str::lit(",\n", 2));
	_1a5bb5adc_traitDataMethods(_self_, _109731_hash, (*(_109762_s)));
	_1a5bac4da_doneIndent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a5bb6208_traitDatas(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa311d8d:;
		if (it != expr_end) {
			jule::Ptr<_1a5ba9a7b_traitHash> _111915_hash = *it;
			{
				jule::I32 _11208_i = 0LL;;
				{
					auto expr = &((*((*(_111915_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa312ca1:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> _112116_s = *it;
						{
							{
								auto expr = &((*(_112116_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa313840:;
								if (it != expr_end) {
									jule::Ptr<_1a4676d30_StructIns> _112217_ins = *it;
									{
										_1a5bb600a_traitData(_self_, &(_111915_hash), _11208_i, &(_112217_ins));
										(_11208_i)++;
									}
									_iter_next_1aa313840:;
									++it;
									goto _iter_begin_1aa313840;
								}
								_iter_end_1aa313840:;
							};
						}
						_iter_next_1aa312ca1:;
						++it;
						goto _iter_begin_1aa312ca1;
					}
					_iter_end_1aa312ca1:;
				};
			}
			_iter_next_1aa311d8d:;
			++it;
			goto _iter_begin_1aa311d8d;
		}
		_iter_end_1aa311d8d:;
	};
}



inline void _1a5bb6406_globalDecls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3125ca:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _113115_v = *it;
			{
				_1a5bc181d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_113115_v))._field_TypeSym))._field_Type);
				_1a5babd36_write(_self_, jule::Str::lit(" ", 1));
				static__1a62729a1_var(&((*_self_.alloc)._field_Buf), _113115_v);
				_1a5babd36_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa3125ca:;
			++it;
			goto _iter_begin_1aa3125ca;
		}
		_iter_end_1aa3125ca:;
	};
}



inline void _1a5bb6604_decls(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5bb03cd_structurePlainDecls(_self_);
	_1a5bb1676_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1e71a9dc5_Len(&(*_self_.alloc)._field_Buf);
	_1a5bb1874_structureMethodDecls(_self_);
	_1a5bb29c9_funcDecls(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5bb2e80_traitDataTypes(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1e71a9dc5_Len(&(*_self_.alloc)._field_Buf);
	_1a5bb5779_traitWrappers(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5bb6208_traitDatas(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1e71a9dc5_Len(&(*_self_.alloc)._field_Buf);
	_1a5bb6406_globalDecls(_self_);
}



inline void _1a5bb68ac_structureMethods(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _115738_s) {
	{
		auto expr = &((*((*(_115738_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa31ac32:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _115815_f = *it;
			{
				_1a5bb4a64_func(_self_, &(_115815_f));
				_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1aa31ac32:;
			++it;
			goto _iter_begin_1aa31ac32;
		}
		_iter_end_1aa31ac32:;
	};
}



inline void _1a5bb6b65_structureIns(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4676d30_StructIns>* _116434_s) {
	;
	_1a5bb0e17_structureOperators(_self_, _116434_s, false);
	_1a5bb68ac_structureMethods(_self_, _116434_s);
}



inline void _1a5bb6e1d_structure(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4673ec5_Struct>* _117031_s) {
	{
		auto expr = &((*((*(_117031_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa31d20c:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _117115_ins = *it;
			{
				_1a5bb6b65_structureIns(_self_, &(_117115_ins));
				_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1aa31d20c:;
			++it;
			goto _iter_begin_1aa31d20c;
		}
		_iter_end_1aa31d20c:;
	};
}



inline void _1a5bb711b_structures(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa31d949:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _117815_s = *it;
			{
				if (((*(_117815_s))._field_Token != nullptr)) {
					_1a5bb6e1d_structure(_self_, &(_117815_s));
					_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1aa31d949:;
			++it;
			goto _iter_begin_1aa31d949;
		}
		_iter_end_1aa31d949:;
	};
}



inline void _1a5bb7319_funcs(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5388238_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a480eb55_Package>*>((void*)__jule_anon_1aa321573, jule::Ptr<__jule_anon_1aa321573_ctx>::make(__jule_anon_1aa321573_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa321573_ctx_handler));
}



inline void _1a5bb75c2_pushInit(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a480eb55_Package>* _120930_pkg) {
	_1a53884ad_IterFiles(_120930_pkg, jule::__new_closure<void,jule::Ptr<_1a4725065_SymTab>*>((void*)__jule_anon_1aa322a4c, jule::Ptr<__jule_anon_1aa322a4c_ctx>::make(__jule_anon_1aa322a4c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa322a4c_ctx_handler));
}



inline void _1a5bb77c0_anonHashes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_julec_label_1aa32738c:;
	jule::Slice<jule::Ptr<_1a5ba965d_anonHash>> _12267_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12267_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa328e1b:;
		if (it != expr_end) {
			jule::Ptr<_1a5ba965d_anonHash> _122815_h = *it;
			{
				_1a5bb4448_anonFuncIns(_self_, &((*(_122815_h))._field_expr), (*_122815_h.alloc)._field_ident);
			}
			_iter_next_1aa328e1b:;
			++it;
			goto _iter_begin_1aa328e1b;
		}
		_iter_end_1aa328e1b:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1aa32738c;
	};
}



inline void _1a5bb79bd_initGlobals(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa32a439:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _123715_v = *it;
			{
				({
					auto except = _1e71a9369_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1238:4"));
				});
				static__1a62729a1_var(&((*_self_.alloc)._field_Buf), _123715_v);
				_1a5babd36_write(_self_, jule::Str::lit(" = ", 3));
				_1a626890e_model((*_self_.alloc)._field_ec, (*((*((*(_123715_v))._field_Value))._field_Data))._field_Model);
				_1a5babd36_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa32a439:;
			++it;
			goto _iter_begin_1aa32a439;
		}
		_iter_end_1aa32a439:;
	};
}



inline void _1a5bb7bbb_initCaller(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5babd36_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a5bac2dc_addIndent(_self_);
	_1a5388238_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a480eb55_Package>*>((void*)__jule_anon_1aa32dddd, jule::Ptr<__jule_anon_1aa32dddd_ctx>::make(__jule_anon_1aa32dddd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa32dddd_ctx_handler));
	_1a5bac4da_doneIndent(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a5bb7db9_end(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5babd36_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5bb79bd_initGlobals(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1ce7a06c0_Test) {
		_1a5babd36_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1a627143e_func(&((*_self_.alloc)._field_Buf), &((*(_1a5390916_ProgramMeta))._field_EntryPoint));
		_1a5babd36_write(_self_, jule::Str::lit("();", 3));
	};
	_1a5babd36_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1a5bb8172_buildTraitHash(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, jule::Ptr<_1a4729476_Trait>* _128136_t) {
	jule::Ptr<_1a5ba9a7b_traitHash> _12827_hash = jule::new_ptr<_1a5ba9a7b_traitHash>(_1a5ba9a7b_traitHash{._field_traitDecl=(*(_128136_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471dc62_Fn>>::alloc(0LL, (*((*(_128136_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a471dc62_Fn>(nullptr); __jule_collection; })});;
	_1a5388799_IterTraitMethods(_128136_t, jule::__new_closure<void,jule::Ptr<_1a471dc62_Fn>*>((void*)__jule_anon_1aa3340be, jule::Ptr<__jule_anon_1aa3340be_ctx>::make(__jule_anon_1aa3340be_ctx{._12827_hash=_12827_hash}).as<jule::Uintptr>(), __jule_anon_1aa3340be_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a5ba9a7b_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12827_hash; __jule_collection; }));
}



inline void _1a5bb8370_buildTraitHashes(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5388238_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a480eb55_Package>*>((void*)__jule_anon_1aa336698, jule::Ptr<__jule_anon_1aa336698_ctx>::make(__jule_anon_1aa336698_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa336698_ctx_handler));
}



inline void _1a5bb86d3_insertBuf(jule::Ptr<_1a5bab61b_ObjectCoder> _self_, _1e71a80b0_Builder* _131131_buf, jule::I32 _131154_pos) {
	if ((_1e71a9dc5_Len(_131131_buf) > 0LL)) {
		jule::Slice<jule::U8> _13138_ibuf = _1e71aa3e2_Buf(&(*(_self_))._field_Buf);;
		_13138_ibuf=_1aa339dc7_Insert(_13138_ibuf, _131154_pos, _1e71aa3e2_Buf(_131131_buf));
		{
			_1e71aa69a_SetBuf(&(*_self_.alloc)._field_Buf, _13138_ibuf);
		};
	};
}



inline void _1a5bb88d1_implementRC(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1a5bb47ab_funcIns(_self_, (*(_1a4966a48_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAddAtomic", 12)))))._field_Instances[0LL], jule::Str::lit("__jule_RCAdd", 12));
		_1a5bb47ab_funcIns(_self_, (*(_1a4966a48_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoadAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCLoad", 13));
		_1a5bb47ab_funcIns(_self_, (*(_1a4966a48_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDropAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1a5bb47ab_funcIns(_self_, (*(_1a4966a48_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAdd", 6)))))._field_Instances[0LL], jule::Str());
		_1a5bb47ab_funcIns(_self_, (*(_1a4966a48_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoad", 7)))))._field_Instances[0LL], jule::Str());
		_1a5bb47ab_funcIns(_self_, (*(_1a4966a48_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDrop", 7)))))._field_Instances[0LL], jule::Str());
	};
}



inline void _1a5bb8ace_serializeHead(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5bb8370_buildTraitHashes(_self_);
	_1a5baee27_prepareStructures(_self_);
	_1a5bae6b8_head(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
	_1a5bb6604_decls(_self_);
	_1a5bb86d3_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_resultDecls);
	_1a5babd36_write(_self_, jule::Str::lit("\n", 1));
	_1a5bb711b_structures(_self_);
	_1a5bb7319_funcs(_self_);
	_1a5bb7bbb_initCaller(_self_);
	_1a5babd36_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5bb77c0_anonHashes(_self_);
	_1a5bb88d1_implementRC(_self_);
	_1a5bb86d3_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_deallocObj);
	_1a5bb86d3_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_anyObj);
	_1a5bb86d3_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_anonObj);
	_1a5bb86d3_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e71a9dc5_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1a5bb8ccc_Serialize(jule::Ptr<_1a5bab61b_ObjectCoder> _self_) {
	_1a5bb8ace_serializeHead(_self_);
	_1a5bb7db9_end(_self_);
}








inline jule::Bool _1a5bba9d2_customType_eq(_1a5bba9d2_customType *_self_, _1a5bba9d2_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a5bbadcd_Str(_1a5bba9d2_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a5bbb21e_Equal(jule::Ptr<_1a5bba9d2_customType> _self_, jule::Ptr<_1a48d54cd_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1a5bbb61a_typeCoder_eq(_1a5bbb61a_typeCoder *_self_, _1a5bbb61a_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1a5bbb61a_typeCoder> static__1a5bbbb6a_new(jule::Ptr<_1a5bab61b_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1a5bbb61a_typeCoder> _517_tc = jule::new_ptr<_1a5bbb61a_typeCoder>(_1a5bbb61a_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1a5bc4205_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1a5bc4711_new(&(_517_tc));
	return _517_tc;;
}



inline void _1a5bbbecd_toType(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1a47942b0_RealKindOf(_5754_id);
	};
	({
		auto except = _1e71a90b1_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1e71a9369_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1e71a9369_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1e71a90b1_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1a5bbc341_prim(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _7125_buf, jule::Ptr<_1a48dd5e6_Prim> _7148_p) {
	_1a5bbbecd_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1a5bbc6a4_tuple(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _7626_buf, jule::Ptr<_1a48e36d9_Tuple> _7653_t) {
	({
		auto except = _1e71a90b1_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*_7653_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa362a15:;
		if (it != expr_end) {
			jule::I32 _788_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> _7815_tk = *it;
			{
				_1a5bc181d_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1e71a9369_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1aa362a15:;
			++it;
			_788_i++;
			goto _iter_begin_1aa362a15;
		}
		_iter_end_1aa362a15:;
	};
	({
		auto except = _1e71a9369_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1a5bbca17_asSptr(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1e71a90b1_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1e71a8c70_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1a5bbcd7a_sptr(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _9525_buf, jule::Ptr<_1a48e2122_Sptr> _9552_sptr) {
	({
		auto except = _1e71a90b1_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1a5bc181d_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1e71a9369_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1a5bbd1dd_ptr(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _10224_buf, jule::Ptr<_1a48e58d9_Ptr> _10251_p) {
	;
	if (_1a48e6456_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1e71a90b1_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1a5bc181d_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1e71a90b1_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1a5bbd551_enumDecl(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _11329_buf, jule::Ptr<_1a472bb2c_Enum> _11356_e) {
	_1a5bc181d_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1a5bbd8b4_typeEnumDecl(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _11833_buf, jule::Ptr<_1a472d337_TypeEnum> _11860_e) {
	({
		auto except = _1e71a90b1_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1a5bbdc27_asSlice(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _12228_buf, jule::Ptr<_1a48d54cd_Type> _12255_elem) {
	({
		auto except = _1e71a90b1_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1a5bc181d_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1e71a9369_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1a5bbe08a_slice(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _12926_buf, jule::Ptr<_1a48e2ae5_Slc> _12953_s) {
	_1a5bbdc27_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1a5bbe3ed_mapType(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _13428_buf, jule::Ptr<_1a48e4289_Map> _13455_m) {
	jule::Ptr<_1a4673ec5_Struct> _1357_s = _1a4967142_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1a4676d30_StructIns> _1367_ins = _1a538ea9c_FindStructGenericInstance(&(_1357_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1e71a90b1_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:137:3"));
		(except.result);
	});
	static__1a62723c9_structureIns(_13428_buf, &(_1367_ins));
	({
		auto except = _1e71a90b1_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:139:3"));
		(except.result);
	});
}



inline void _1a5bbeac4_structureIns(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _14833_buf, jule::Ptr<_1a4676d30_StructIns> _14860_s) {
	if ((!((*((*(_14860_s))._field_Decl))._field_Binded))) {
		static__1a62723c9_structureIns(_14833_buf, &(_14860_s));
		return;;
	};
	jule::Ptr<_1a4652a86_Directive> _1533_d = _1a538cade_FindDirective(&((*(*(_14860_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1533_d != nullptr)) {
		({
			auto except = _1e71a8c70_Write(_14833_buf, _1a5bb9162_concatAllParts((*_1533_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:155:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_14833_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:156:4"));
			(except.result);
		});
	};
	static__1a62723c9_structureIns(_14833_buf, &(_14860_s));
	if (((*_14860_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1e71a9369_WriteByte(_14833_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:160:4"));
		});
		{
			auto expr = &((*_14860_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa3710d9:;
			if (it != expr_end) {
				jule::I32 _1619_i = it - expr->begin();
				jule::Ptr<_1a48d3ae7_InsGeneric> _16116_g = *it;
				{
					_1a5bc181d_kind(_self_, _14833_buf, (*(_16116_g))._field_Type);
					if ((((*_14860_s.alloc)._field_Generics.len() - _1619_i) > 1LL)) {
						({
							auto except = _1e71a9369_WriteByte(_14833_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:164:6"));
						});
					};
				}
				_iter_next_1aa3710d9:;
				++it;
				_1619_i++;
				goto _iter_begin_1aa3710d9;
			}
			_iter_end_1aa3710d9:;
		};
		({
			auto except = _1e71a9369_WriteByte(_14833_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:167:4"));
		});
	};
}



inline void _1a5bbee37_array(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _17226_buf, jule::Ptr<_1a48e4e16_Arr> _17253_a) {
	({
		auto except = _1e71a90b1_WriteStr(_17226_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:173:3"));
		(except.result);
	});
	_1a5bc181d_kind(_self_, _17226_buf, (*(_17253_a))._field_Elem);
	({
		auto except = _1e71a9369_WriteByte(_17226_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:175:3"));
	});
	({
		auto except = _1e71a90b1_WriteStr(_17226_buf, _1b45772b4_Itoa((*_17253_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_17226_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:177:3"));
	});
}



inline void _1a5bc060d_paramIns(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _19529_buf, jule::Ptr<_1a4720bba_ParamIns>* _19557_p) {
	if ((*((*((*(_19557_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1e71a90b1_WriteStr(_19529_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:197:4"));
			(except.result);
		});
		_1a5bc181d_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Type);
		({
			auto except = _1e71a9369_WriteByte(_19529_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:199:4"));
		});
	} else {
		_1a5bc181d_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Type);
	};
	if ((*((*((*(_19557_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1e71a9369_WriteByte(_19529_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:204:4"));
		});
	};
}



inline void _1a5bc0cd4_funcInsResult(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _22734_s, jule::Ptr<_1a4721d20_FnIns>* _22760_f) {
	if (_1a471e218_IsVoid((*((*(_22760_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1e71a90b1_WriteStr(_22734_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:230:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1e71a90b1_WriteStr(_22734_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:232:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
		({
			auto except = _1e71a90b1_WriteStr(_22734_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:237:4"));
			(except.result);
		});
		_1a5bc67bd_codeMut1((*(_self_))._field_rc.ptr(), _22734_s, &((*((*(_22760_f))))._field_Result));
		({
			auto except = _1e71a9369_WriteByte(_22734_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:239:4"));
		});
		return;;
	};
	_1a5bc67bd_codeMut1((*(_self_))._field_rc, _22734_s, &((*((*(_22760_f))))._field_Result));
}



inline void _1a5bc1147_anonFunc(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _24529_buf, jule::Ptr<_1a4721d20_FnIns> _24556_f) {
	if ((((*(_24556_f))._field_Result != nullptr) && (_1a48d99aa_Tup((*(_24556_f))._field_Result) != nullptr))) {
		_1a5badae6_pushResultIns((*(_self_))._field_oc, &(_24556_f));
	};
	_1a5bc0cd4_funcInsResult(_self_, _24529_buf, &(_24556_f));
	if (((*_24556_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1e71a9369_WriteByte(_24529_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:253:3"));
	});
	{
		auto expr = &((*_24556_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa382abd:;
		if (it != expr_end) {
			jule::I32 _2548_i = it - expr->begin();
			jule::Ptr<_1a4720bba_ParamIns> _25415_param = *it;
			{
				if (_1a471c8dc_IsSelf((*(_25415_param))._field_Decl.ptr())) {
					goto _iter_next_1aa382abd;
				};
				_1a5bc060d_paramIns(_self_, _24529_buf, &(_25415_param));
				if ((((*_24556_f.alloc)._field_Params.len() - _2548_i) > 1LL)) {
					({
						auto except = _1e71a9369_WriteByte(_24529_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:260:5"));
					});
				};
			}
			_iter_next_1aa382abd:;
			++it;
			_2548_i++;
			goto _iter_begin_1aa382abd;
		}
		_iter_end_1aa382abd:;
	};
}



inline void _1a5bc14aa_func(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _26625_buf, jule::Ptr<_1a4721d20_FnIns> _26652_f) {
	({
		auto except = _1e71a90b1_WriteStr(_26625_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:267:3"));
		(except.result);
	});
	_1a5bc1147_anonFunc(_self_, _26625_buf, _26652_f);
	({
		auto except = _1e71a9369_WriteByte(_26625_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:269:3"));
	});
}



inline void _1a5bc181d_kind(_1a5bbb61a_typeCoder* _self_, _1e71a80b0_Builder* _27325_buf, jule::Ptr<_1a48d54cd_Type> _27352_k) {
	{
		
		if ((_1a48d9207_Struct(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386110:;
			{
				_1a5bbeac4_structureIns(_self_, _27325_buf, _1a48d9207_Struct(_27352_k));
				return;;
			}
		}
		else if (_1a48d637a_Binded(_27352_k.ptr())) {
			_case_begin_1aa3861a9:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_27325_buf, (*_27352_k.alloc)._field_BindIdent);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:282:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1a48d7b84_Prim(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386220:;
			{
				_1a5bbc341_prim(_self_, _27325_buf, _1a48d7b84_Prim(_27352_k));
				return;;
			}
		}
		else if ((_1a48d99aa_Tup(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386286:;
			{
				_1a5bbc6a4_tuple(_self_, _27325_buf, _1a48d99aa_Tup(_27352_k));
				return;;
			}
		}
		else if ((_1a48d7e1a_Sptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa3862ec:;
			{
				_1a5bbcd7a_sptr(_self_, _27325_buf, _1a48d7e1a_Sptr(_27352_k));
				return;;
			}
		}
		else if ((_1a48d81a1_Ptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386374:;
			{
				_1a5bbd1dd_ptr(_self_, _27325_buf, _1a48d81a1_Ptr(_27352_k));
				return;;
			}
		}
		else if ((_1a48d8437_Enum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa3863eb:;
			{
				_1a5bbd551_enumDecl(_self_, _27325_buf, _1a48d8437_Enum(_27352_k));
				return;;
			}
		}
		else if ((_1a48d86bd_TypeEnum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386473:;
			{
				_1a5bbd8b4_typeEnumDecl(_self_, _27325_buf, _1a48d86bd_TypeEnum(_27352_k));
				return;;
			}
		}
		else if ((_1a48d8bda_Slc(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa3864ea:;
			{
				_1a5bbe08a_slice(_self_, _27325_buf, _1a48d8bda_Slc(_27352_k));
				return;;
			}
		}
		else if ((_1a48d9724_Map(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386572:;
			{
				_1a5bbe3ed_mapType(_self_, _27325_buf, _1a48d9724_Map(_27352_k));
				return;;
			}
		}
		else if ((_1a48d948d_Trait(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa3865e9:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_27325_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:309:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1a48d8954_Arr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa386671:;
			{
				_1a5bbee37_array(_self_, _27325_buf, _1a48d8954_Arr(_27352_k));
				return;;
			}
		}
		else if ((_1a48d8e71_Fn(_27352_k.ptr()) != nullptr)) {
			_case_begin_1aa3866e8:;
			{
				_1a5bc14aa_func(_self_, _27325_buf, _1a48d8e71_Fn(_27352_k));
				return;;
			}
		}
		_match_end_1aa385e23:;
	};
	{
		auto &_match_expr{ (*(_27352_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data29)) {
			_case_begin_1aa386781:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_27325_buf, (*((*(_27352_k))._field_Kind.cast_ptr<_1a5bba9d2_customType>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:320:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1aa38ed3e:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_27325_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:322:4"));
					(except.result);
				});
			}
		}
		_match_end_1aa38ecc8:;
	};
}








inline jule::Bool _1a5bc4205_resultCoder_eq(_1a5bc4205_resultCoder *_self_, _1a5bc4205_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1a5bc4205_resultCoder> static__1a5bc4711_new(jule::Ptr<_1a5bbb61a_typeCoder>* _34121_tc) {
	return jule::new_ptr<_1a5bc4205_resultCoder>(_1a5bc4205_resultCoder{._field_tc=(*(_34121_tc))});;
}



inline void _1a5bc4a74_ptr(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _34524_s, jule::Ptr<_1a48e58d9_Ptr> _34549_p) {
	({
		auto except = _1e71a90b1_WriteStr(_34524_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:346:3"));
		(except.result);
	});
	_1a5bc645a_codeMut(_self_, _34524_s, &((*(_34549_p))._field_Elem));
}



inline void _1a5bc4dd7_sptr(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _35025_s, jule::Ptr<_1a48e2122_Sptr> _35050_p) {
	({
		auto except = _1e71a90b1_WriteStr(_35025_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:351:3"));
		(except.result);
	});
	_1a5bc645a_codeMut(_self_, _35025_s, &((*(_35050_p))._field_Elem));
}



inline void _1a5bc524a_mapType(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _35528_s, jule::Ptr<_1a48e4289_Map> _35553_p) {
	({
		auto except = _1e71a90b1_WriteStr(_35528_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:356:3"));
		(except.result);
	});
	_1a5bc645a_codeMut(_self_, _35528_s, &((*(_35553_p))._field_Key));
	_1a5bc645a_codeMut(_self_, _35528_s, &((*_35553_p.alloc)._field_Val));
}



inline void _1a5bc55ad_slice(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _36126_s, jule::Ptr<_1a48e2ae5_Slc> _36151_slc) {
	({
		auto except = _1e71a90b1_WriteStr(_36126_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:362:3"));
		(except.result);
	});
	_1a5bc645a_codeMut(_self_, _36126_s, &((*(_36151_slc))._field_Elem));
}



inline void _1a5bc5921_arr(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _36624_s, jule::Ptr<_1a48e4e16_Arr> _36649_arr) {
	({
		auto except = _1e71a90b1_WriteStr(_36624_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:367:3"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_36624_s, _1b4576eea_FmtInt(static_cast<jule::I64>((*(_36649_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:368:3"));
		(except.result);
	});
	_1a5bc645a_codeMut(_self_, _36624_s, &((*_36649_arr.alloc)._field_Elem));
}



inline void _1a5bc5c84_func(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _37225_s, jule::Ptr<_1a4721d20_FnIns> _37250_f) {
	({
		auto except = _1e71a90b1_WriteStr(_37225_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:373:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37250_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3974d9:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> _37415_p = *it;
			{
				if ((*((*(_37415_p))._field_Decl))._field_Reference) {
					({
						auto except = _1e71a90b1_WriteStr(_37225_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:376:5"));
						(except.result);
					});
				};
				_1a5bc645a_codeMut(_self_, _37225_s, &((*_37415_p.alloc)._field_Type));
			}
			_iter_next_1aa3974d9:;
			++it;
			goto _iter_begin_1aa3974d9;
		}
		_iter_end_1aa3974d9:;
	};
	if (((*_37250_f.alloc)._field_Result != nullptr)) {
		_1a5bc645a_codeMut(_self_, _37225_s, &((*_37250_f.alloc)._field_Result));
	};
}



inline void _1a5bc60e7_tup(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _38524_s, jule::Ptr<_1a48e36d9_Tuple> _38549_tup) {
	{
		auto expr = &((*(_38549_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa39995e:;
		if (it != expr_end) {
			jule::Ptr<_1a48d54cd_Type> _38615_t = *it;
			{
				({
					auto except = _1e71a90b1_WriteStr(_38524_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:387:4"));
					(except.result);
				});
				_1a5bc645a_codeMut(_self_, _38524_s, &(_38615_t));
			}
			_iter_next_1aa39995e:;
			++it;
			goto _iter_begin_1aa39995e;
		}
		_iter_end_1aa39995e:;
	};
}



inline void _1a5bc645a_codeMut(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _39228_s, jule::Ptr<_1a48d54cd_Type>* _39254_t) {
	if (_1a48d637a_Binded((*(_39254_t)).ptr())) {
		({
			auto except = _1e71a90b1_WriteStr(_39228_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:394:4"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_39228_s, (*((*(_39254_t))))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:395:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39254_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28)) {
			_case_begin_1aa39b103:;
			{
				_1a5bc4a74_ptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a48e58d9_Ptr>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)) {
			_case_begin_1aa39c0d2:;
			{
				_1a5bc4dd7_sptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a48e2122_Sptr>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data26)) {
			_case_begin_1aa39bc5d:;
			{
				_1a5bc524a_mapType(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a48e4289_Map>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24)) {
			_case_begin_1aa39bcc4:;
			{
				_1a5bc55ad_slice(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a48e2ae5_Slc>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data27)) {
			_case_begin_1aa39bd3a:;
			{
				_1a5bc5921_arr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a48e4e16_Arr>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)) {
			_case_begin_1aa39bda1:;
			{
				_1a5bc5c84_func(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a4721d20_FnIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3)) {
			_case_begin_1aa39c324:;
			{
				jule::Ptr<_1a472bb2c_Enum> _4124_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1a472bb2c_Enum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3);;
				static__1a6270c02_toOut(_39228_s, (*(_4124_te))._field_Ident, static_cast<jule::Uintptr>(_4124_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4)) {
			_case_begin_1aa39c38a:;
			{
				jule::Ptr<_1a472d337_TypeEnum> _4154_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1a472d337_TypeEnum>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data4);;
				static__1a6270c02_toOut(_39228_s, (*(_4154_te))._field_Ident, static_cast<jule::Uintptr>(_4154_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)) {
			_case_begin_1aa39c401:;
			{
				jule::Ptr<_1a4676d30_StructIns> _4188_si = (*((*(_39254_t))))._field_Kind.cast_ptr<_1a4676d30_StructIns>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0);;
				static__1a62723c9_structureIns(_39228_s, &(_4188_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data2)) {
			_case_begin_1aa39c467:;
			{
				jule::Ptr<_1a4729476_Trait> _4218_trt = (*((*(_39254_t))))._field_Kind.cast_ptr<_1a4729476_Trait>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data2);;
				static__1a6271a16_traitDecl(_39228_s, _4218_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)) {
			_case_begin_1aa39c4de:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_39228_s, (*((*((*(_39254_t))))._field_Kind.cast_ptr<_1a48dd5e6_Prim>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:424:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a48d5027_Kind_mptr_data25)) {
			_case_begin_1aa39c566:;
			{
				_1a5bc60e7_tup(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1a48e36d9_Tuple>((jule::Trait::Type*)&_1a48d5027_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1aa39bbe7:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:428:4"));;
			}
		}
		_match_end_1aa39bb81:;
	};
}



inline void _1a5bc67bd_codeMut1(_1a5bc4205_resultCoder* _self_, _1e71a80b0_Builder* _43229_s, jule::Ptr<_1a48d54cd_Type>* _43255_t) {
	jule::Ptr<_1a48e36d9_Tuple> _4337_tup = _1a48d99aa_Tup((*(_43255_t)).ptr());;
	if ((_4337_tup != nullptr)) {
		_1a5bc60e7_tup(_self_, _43229_s, _4337_tup);
	} else {
		_1a5bc181d_kind((*(_self_))._field_tc.ptr(), _43229_s, (*(_43255_t)));
	};
}



inline jule::Slice<jule::U8> _1a5bc6acb_code(_1a5bc4205_resultCoder* _self_, jule::Ptr<_1a48d54cd_Type>* _44125_t) {
	_1e71a80b0_Builder _4427_s = static__1e71a892e_New(20LL);;
	_1a5bc645a_codeMut(_self_, &(_4427_s), _44125_t);
	return _1e71aa3e2_Buf(&_4427_s);;
}








inline jule::Bool _1aa3a8374_Flag_eq(_1aa3a8374_Flag *_self_, _1aa3a8374_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa3a8660_Name(_1aa3a8374_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa3a87a3_What(_1aa3a8374_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa3a88e6_Reset(_1aa3a8374_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa3a8a39_Short(_1aa3a8374_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aa3abc07_Flag_eq(_1aa3abc07_Flag *_self_, _1aa3abc07_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa3ab883_Name(_1aa3abc07_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa3abee3_What(_1aa3abc07_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa3ac136_Reset(_1aa3abc07_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa3ac279_Short(_1aa3abc07_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aa3b0414_Flag_eq(_1aa3b0414_Flag *_self_, _1aa3b0414_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa3b0090_Name(_1aa3b0414_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa3b0700_What(_1aa3b0414_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa3b0843_Reset(_1aa3b0414_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa3b0986_Short(_1aa3b0414_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aa3b3b65_Flag_eq(_1aa3b3b65_Flag *_self_, _1aa3b3b65_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa3b37e1_Name(_1aa3b3b65_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa3b3e51_What(_1aa3b3b65_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa3b4094_Reset(_1aa3b3b65_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa3b41d7_Short(_1aa3b3b65_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aa3b7372_Flag_eq(_1aa3b7372_Flag *_self_, _1aa3b7372_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa3b6eed_Name(_1aa3b7372_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa3b765d_What(_1aa3b7372_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa3b77a1_Reset(_1aa3b7372_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa3b78e4_Short(_1aa3b7372_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1a5c393ad_FlagSet> static__1a5c396cc_New(void) {
	return jule::new_ptr<_1a5c393ad_FlagSet>(_1a5c393ad_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1a5c39b83_FindFlag(_1a5c393ad_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3c21e5:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1a5c377da_CommonFlagMptrData*)_7215_flag.safe_type())->_1a5c05ba4_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1aa3c21e5:;
			++it;
			goto _iter_begin_1aa3c21e5;
		}
		_iter_end_1aa3c21e5:;
	};
	return nullptr;;
}



inline jule::Trait _1a5c39ec4_FindFlagShort(_1a5c393ad_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3c2910:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1a5c377da_CommonFlagMptrData*)_8215_flag.safe_type())->_1a5c05ce7_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1aa3c2910:;
			++it;
			goto _iter_begin_1aa3c2910;
		}
		_iter_end_1aa3c2910:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a5c3a59b_Parse(_1a5c393ad_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1a5c3bd72_argParser _1167_ap = _1a5c3bd72_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1a5c3d3a1_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1aa3b7372_Flag> _1aa44b071_addFlagCommon(_1a5c393ad_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a5c39b83_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a5c39ec4_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aa3b7372_Flag> _1407_flag = jule::new_ptr<_1aa3b7372_Flag>(_1aa3b7372_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1aa3b3b65_Flag> _1aa455146_addFlagCommon(_1a5c393ad_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a5c39b83_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a5c39ec4_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aa3b3b65_Flag> _1407_flag = jule::new_ptr<_1aa3b3b65_Flag>(_1aa3b3b65_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1aa448843_AddVar(_1a5c393ad_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aa3b7372_Flag> _1717_flag = _1aa44b071_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1aa45295c_AddVar(_1a5c393ad_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aa3b3b65_Flag> _1717_flag = _1aa455146_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1aa3ceea0_parseInteger(_1a5c3bd72_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aa3d3008:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ce7841cb_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aa3d2c50:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ce7841cb_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aa3d2612:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ce7841cb_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aa3d2678:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aa3d26de:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aa3d259b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aa3d248b:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1aa3d7a79_parseInteger(_1a5c3bd72_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aa3dab6a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ce7841cb_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aa3da8b2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ce7841cb_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aa3da274:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ce7841cb_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aa3da2da:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aa3da351:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aa3da20d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aa3da0ed:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a5c3c6be_getData(_1a5c3bd72_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a5c3c944_processFlag(_1a5c3bd72_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data3)) {
			_case_begin_1aa3cc156:;
			{
				jule::Ptr<_1aa3b3b65_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1aa3b3b65_Flag>((jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1aa3cc0e0:;
	};
	jule::Str _2203_data = _1a5c3c6be_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a5c377da_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a5c05ba4_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data0)) {
			_case_begin_1aa3ce059:;
			{
				jule::Ptr<_1aa3a8374_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1aa3a8374_Flag>((jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1aa3ceea0_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1aa3d39a9, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a5c377da_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a5c05ba4_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data1)) {
			_case_begin_1aa3cd9b5:;
			{
				jule::Ptr<_1aa3abc07_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1aa3abc07_Flag>((jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aa3d7a79_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1aa3db61b, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a5c377da_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a5c05ba4_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data2)) {
			_case_begin_1aa3ce0c0:;
			{
				jule::Ptr<_1aa3b0414_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1aa3b0414_Flag>((jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1b456c375_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a5c377da_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a5c05ba4_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data4)) {
			_case_begin_1aa3ce136:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1aa3b7372_Flag>((jule::Trait::Type*)&_1a5c377da_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1aa3cd7ea:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a5c3cbec_singleDash(_1a5c3bd72_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1aa3e1e90:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1a5c39ec4_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type5)};
				};
				({
					auto except = _1a5c3c944_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1aa3e1e90:;
			it += len;
			goto _iter_begin_1aa3e1e90;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a5c3cea5_doubleDash(_1a5c3bd72_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1a5c39b83_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1a5c3c944_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a5c3d1a3_tryArg(_1a5c3bd72_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1a5c3cea5_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a5c3cbec_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a5c3d3a1_parse(_1a5c3bd72_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a5c3d1a3_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1aa3e6bed:;
	}
	_iter_end_1aa3e6bed:;;
	return jule::VoidExceptional{};
}








inline jule::Bool _1cd5ae502_Dir_eq(_1cd5ae502_Dir *_self_, _1cd5ae502_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1cd62092b_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1cd5ae502_Dir>> static__1ce791936_Read(jule::Str _1517_path) {
	jule::Slice<_1cd5ae502_Dir> __jule_func_result;
	jule::Slice<jule::U16> _163_utf16Path = _1e7378093_UTF16FromStr(_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _177_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _183_handle = _1e73a9129_FindFirstFile((&(_163_utf16Path[0LL])), (&(_177_data)));;
	if ((_183_handle == 4294967295LLU)) {
		return jule::Exceptional<jule::Slice<_1cd5ae502_Dir>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			_1cd5ae502_Dir _238_entry = _1cd5ae502_Dir{._field_Name=_1e737866a_U16PtrToStr(((jule::U16*)(_177_data.cFileName))), ._field_Stat=_1cd62092b_Stat{._field_mode=0LL, ._field_size=0}};;
			_238_entry._field_Stat=({
				auto except = static__1ce7978d7_Of(_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _238_entry._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1cd5ae502_Dir>>{.error=except.error};
				} _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};});
			});
			{ jule::Slice<_1cd5ae502_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_238_entry); };
			if ((_1e73a949d_FindNextFile(_183_handle, (&(_177_data))) == 0LL)) {
				goto _iter_end_1a767c492;
			};
		}
	_iter_next_1a767c492:;
	}
	_iter_end_1a767c492:;;
	_1e73a9767_FindClose(_183_handle);
	return jule::Exceptional<jule::Slice<_1cd5ae502_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1ce791b34_Create(jule::Str _3919_path) {
	jule::Slice<jule::U16> _443_utf16Path = _1e7378093_UTF16FromStr(_3919_path);;
	if ((!(_1e73a6d2a_CreateDirectory((&(_443_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1ce791d65_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U16> _543_utf16Path = _1e7378093_UTF16FromStr(_5319_path);;
	if ((!(_1e73a70e4_RemoveDirectory((&(_543_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1ce797123_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}











inline __jule_tuple_x_1a53857a7_IR__jule_tuple_s_1e71b7487_Log static__1a5385c80_Build(jule::Str _3018_path, jule::I32 _3029_flags) {
	__jule_tuple_x_1a53857a7_IR__jule_tuple_s_1e71b7487_Log __jule_func_result;
	jule::Ptr<_1a5382c27_Importer> _317_importer = static__1a5383156_New(_1a5387732_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1a46517aa_AST>> _337_files;
	jule::Slice<_1e71b7487_Log> _3318_logs;
	({
		__jule_tuple_sx_1a46517aa_AST__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a5384641_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a46517aa_AST> _457_firstFile = _337_files[0LL];;
	_1a53879da_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1a480eb55_Package> _487_pkg;
	({
		__jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a49072ad_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1a48093d0_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53857a7_IR> _537_ir = jule::new_ptr<_1a53857a7_IR>(_1a53857a7_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1a480c3d3_ImportInfo>(nullptr), ._field_Used=_1a53833dc_AllPackages(_317_importer), ._field_Ordered=_1a53922ca_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1a4673ec5_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1a5387523_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a5386269_appendStructs(_1a53857a7_IR* _self_, jule::Ptr<_1a480eb55_Package>* _6830_p, jule::Slice<jule::Ptr<_1a4673ec5_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b6c3cb:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b6cd38:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a4673ec5_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1a8b6cd38:;
						++it;
						goto _iter_begin_1a8b6cd38;
					}
					_iter_end_1a8b6cd38:;
				};
			}
			_iter_next_1a8b6c3cb:;
			++it;
			goto _iter_begin_1a8b6c3cb;
		}
		_iter_end_1a8b6c3cb:;
	};
}



inline jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _1a5386500_GetAllStructures(_1a53857a7_IR* _self_) {
	jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _8111_buffer = nullptr;;
	_1a5386269_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b6dee3:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1a5386269_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1a8b6dee3:;
			++it;
			goto _iter_begin_1a8b6dee3;
		}
		_iter_end_1a8b6dee3:;
	};
	return _8111_buffer;;
}



inline void _1a5386863_appendGlobals(_1a53857a7_IR* _self_, jule::Ptr<_1a480eb55_Package>* _9130_p, jule::Slice<jule::Ptr<_1a4852e51_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b70676:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b710d3:;
					if (it != expr_end) {
						jule::Ptr<_1a4852e51_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1a8b710d3:;
						++it;
						goto _iter_begin_1a8b710d3;
					}
					_iter_end_1a8b710d3:;
				};
			}
			_iter_next_1a8b70676:;
			++it;
			goto _iter_begin_1a8b70676;
		}
		_iter_end_1a8b70676:;
	};
}



inline jule::Slice<jule::Ptr<_1a4852e51_Var>> _1a5386ae9_GetAllGlobals(_1a53857a7_IR* _self_) {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _10411_buffer = nullptr;;
	_1a5386863_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b72a0d:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1a5386863_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1a8b72a0d:;
			++it;
			goto _iter_begin_1a8b72a0d;
		}
		_iter_end_1a8b72a0d:;
	};
	return _10411_buffer;;
}



inline void _1a5386ce7_Order(_1a53857a7_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1a5386ae9_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1a5386500_GetAllStructures(_self_);
	_1a8b74614_order((*(_self_))._field_Ordered._field_Globals);
	_1a8b751e7_order((*(_self_))._field_Ordered._field_Structs);
}







inline jule::Ptr<_1cd5b00b3_Cmd> static__1cd5b0514_New(jule::Str _3516_path) {
	return jule::new_ptr<_1cd5b00b3_Cmd>(_1cd5b00b3_Cmd{._field_attrs=_1cd618acd_cmdAttrs{}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1cd5b0712_Spawn(_1cd5b00b3_Cmd* _self_) {
	return _1cd618e85_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1cd5b0b96_Wait(_1cd5b00b3_Cmd* _self_) {
	return _1cd619419_wait(_self_);
}



inline jule::VoidExceptional _1cd618e85_spawn(_1cd5b00b3_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _1e7378093_UTF16FromStr(_1cd619a57_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _1cd619e31_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1cd61a382_getLastCmdError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1cd619419_wait(_1cd5b00b3_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_1e73a5697_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_1e73a5697_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>{.result=static_cast<jule::I32>(_897_exitCode)};;
}







inline jule::I32 _1e73770e7_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _1e73773b1_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _1e7377702_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c4938a:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1a5c4938a:;
			++it;
			goto _iter_begin_1a5c4938a;
		}
		_iter_end_1a5c4938a:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c4b0e5:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1a5c4bcb6:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1a5c4b986:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1e73773b1_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1a5c4b920:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1a5c4b810:;
				};
			}
			_iter_next_1a5c4b0e5:;
			++it;
			goto _iter_begin_1a5c4b0e5;
		}
		_iter_end_1a5c4b0e5:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _1e7377988_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1216_n = 0LL;;
	jule::I32 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1a5c515a1:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1a5c51370:;
					{
						_1206_a[_1216_n]=_1e73770e7_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1a5c50ea7:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1a5c50e41:;
			};
			(_1216_n)++;
		}
	_iter_next_1a5c4e04e:;
	}
	_iter_end_1a5c4e04e:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _1e7377d0c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1a5c53dde:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1a5c53e88:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1e73773b1_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1a5c53ce0:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _1e7378093_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c5de82:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_1a5c5de82;
				};
				_176_buff=_1e7377d0c_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_1a5c5de82:;
			++it;
			goto _iter_begin_1a5c5de82;
		}
		_iter_end_1a5c5de82:;
	};
	return _1e7377d0c_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _1e73783a1_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5c61616:;
		if (it != expr_end) {
			jule::I32 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_1a5c61616;
				};
			}
			_iter_next_1a5c61616:;
			++it;
			_356_i++;
			goto _iter_begin_1a5c61616;
		}
		_iter_end_1a5c61616:;
	};
	return __jule_runesToStr(_1e7377988_Decode(_346_codePage));;
}



inline jule::Str _1e737866a_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I32 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_1e7377988_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_1a5c6211c:;
	}
	_iter_end_1a5c6211c:;;
	return jule::Str();;
}



inline jule::I32 _1e72e53c8_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _1e73a53cd_GetStdHandle(jule::Uintptr _6517_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6517_stdh)));;
}



inline jule::Bool _1e73a5697_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _1e73a5a1b_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return _wstat(((wchar_t*)(_6917_path)), _6933_stat);;
}



inline jule::I32 _1e73a5e4a_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return _wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode);;
}



inline jule::U32 _1e73a6159_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _1e73a64cd_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff)));;
}



inline jule::Bool _1e73a6a61_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _1e73a6d2a_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _1e73a70e4_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _1e73a75cd_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname) {
	return GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1102_buff)), ((wchar_t**)(_11014_fname)));;
}



inline jule::Bool _1e73a7952_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)(_11540_mode)));;
}



inline jule::Bool _1e73a805c_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _1e73a85ac_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_1267_written)))), _12621_reserved);;
}



inline jule::Bool _1e73a8a96_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)(_1347_readed)), nullptr);;
}



inline jule::Uintptr _1e73a9129_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data)));;
}



inline jule::I32 _1e73a949d_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return FindNextFileW(((HANDLE)(_15024_h)), _15039_data);;
}



inline jule::I32 _1e73a9767_FindClose(jule::Uintptr _15514_h) {
	return FindClose(((HANDLE)(_15514_h)));;
}



inline jule::I32 _1e73ab78b_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1e73abb65_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1e73ac01c_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1e73ac24d_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Str _1e73bb9dd_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a6621525_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1e73d2bad_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a6621525_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1e73d2e44_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1e73bb9dd_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1e73d320d_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1cc6215cb_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1cc620344_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1cc6208e9_acceptRange _1962_accept = _1cc620c90_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1cc62191c_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1cc620344_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1cc6208e9_acceptRange _2432_accept = _1cc620c90_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1cc621e6c_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1cc623688_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1a6660784;
			};
		}
	_iter_next_1a6660784:;
	}
	_iter_end_1a6660784:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _1cc622236_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1a6662577:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1a6662973:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1a66629d9:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1a6662a61:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1a6662ad8:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1a66625dd:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1a6662511:;
			{
				return -1LL;;
			}
		}
		_match_end_1a6662423:;
	};
}



inline jule::I32 _1cc6226ba_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1a666724c:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1a6667912:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1a666559c:;
			{
				_37434_r=65533LL;
				goto _case_begin_1a66677d0;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1a66677d0:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1a66651d4:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1a666515c:;
	};
}



inline jule::Slice<jule::U8> _1cc6229b7_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1cc622d3b_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1cc622d3b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1a666ea18:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1a666d6c6:;
			{
				_41242_r=128LL;
				goto _case_begin_1a666d73c;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1a666d73c:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1a666ce67:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1a666cde0:;
	};
}



inline jule::I32 _1cc6233be_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1a6677d2e;
			};
			jule::U8 _4823_x = _1cc620344_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1a6677d2e;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1a6677d2e;
			};
			_1cc6208e9_acceptRange _4923_accept = _1cc620c90_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1a6677d2e:;
	}
	_iter_end_1a6677d2e:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1cc623688_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1cc793088_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1cc79a920_Len64(_5919_x));;
}



inline jule::I32 _1cc793ece_TrailingZeros(jule::U32 _8118_x) {
	{
		return _1cc7948b4_TrailingZeros32(static_cast<jule::U32>(_8118_x));;
	};
}



inline jule::I32 _1cc7948b4_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1cc793682__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1cc794b7d_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1cc793c6a__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1cc79a656_Len32(jule::U32 _35014_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I32 _1cc79a920_Len64(jule::U64 _36414_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1cc79b6ac_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1cc79ceb6_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1cc63ac55__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1e60155e4_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I32 _1e70e1746_randInt(jule::U64 _716_seed, jule::I32 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U32 _172_p2 = static_cast<jule::U32>(_162_p1);;
	return ({ jule::I32 __jule_x = static_cast<jule::I32>((({ jule::U32 __jule_x = _172_p2; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I32 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1a6922738_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a69244d7:;
	}
	_iter_end_1a69244d7:;;
	return true;;
}

inline jule::Bool _1a6970ce7_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a69724e1:;
	}
	_iter_end_1a69724e1:;;
	return true;;
}

inline jule::Bool _1a77ba5ad_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a77bbc63:;
	}
	_iter_end_1a77bbc63:;;
	return true;;
}

inline jule::Bool _1a9b977e0_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a9b9954a:;
	}
	_iter_end_1a9b9954a:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n) {
	__jule_writeStderr(_1e73d2bad_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1a6621525_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1e73d2bad_StrBytes(jule::Str::lit("\n", 1)));
	_1e73ac24d_Exit(2LL);
}



inline void _1cc6243d1__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I32 _1cc624799_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _1e7378093_UTF16FromStr(_1e73d2e44_BytesStr(_1545_buf));;
	jule::U32 _206_written = static_cast<jule::U32>(0LLU);;
	jule::Bool _212_ok = _1e73a85ac_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), static_cast<jule::U32>(_192_utf16Buf.len()), &(_206_written), nullptr);;
	if ((!(_212_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = _1545_buf.len();
	return __jule_func_result;;
}



inline jule::I32 _1cc624b1d_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_3048_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _346_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_3048_buf.len(), _3048_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _356_readed = static_cast<jule::U32>(0LLU);;
	jule::Bool _362_ok = _1e73a8a96_ReadConsole(_3023_handle, (&(_346_codepage[0LL])), static_cast<jule::U32>(_346_codepage.len()), &(_356_readed));;
	if ((!(_362_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _412_runes = _1e7377988_Decode(_346_codepage.slice(0LL, static_cast<jule::I32>(_356_readed)));;
	__jule_func_result=0LL;
	{
		auto expr = &(_412_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a673a771:;
		if (it != expr_end) {
			jule::I32 *_439_r = it;
			{
				jule::I32 _443_size = _1cc622236_RuneLen((*(_439_r)));;
				if (((__jule_func_result + _443_size) > _3048_buf.len())) {
					goto _iter_end_1a673a771;
				};
				_1cc6226ba_EncodeRune(_3048_buf.slice(__jule_func_result), (*(_439_r)));
				__jule_func_result+=_443_size;
			}
			_iter_next_1a673a771:;
			++it;
			goto _iter_begin_1a673a771;
		}
		_iter_end_1a673a771:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf) {
	_1cc639ca9_handleRW(&(_5816_buf));
	return _1cc624799_writeConsole(_1e73a4d6c_STDOUT, _5816_buf);;
}



inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf) {
	_1cc639ca9_handleRW(&(_6616_buf));
	return _1cc624799_writeConsole(_1e73a5169_STDERR, _6616_buf);;
}



inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf) {
	_1cc639ca9_handleRW(&(_7418_buf));
	return _1cc624b1d_readConsole(_1e73a4ac5_STDIN, _7418_buf);;
}



inline jule::U32 _1a67499c2_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo) {
	jule::U32 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U32 _1a6749b8c_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo) {
	jule::U32 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Slice<jule::Str> _1cc62b372_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a673dd90:;
		if (it != expr_end) {
			jule::I32 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_1e737866a_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_1a673dd90:;
			++it;
			_196_i++;
			goto _iter_begin_1a673dd90;
		}
		_iter_end_1a673dd90:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _1cc62b828_executable(void) {
	;
	jule::Slice<jule::U16> _486_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _492_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_486_buf[0LL])))), 260LL);;
	if ((_492_n > 0LL)) {
		_486_buf[_492_n]=0LLU;
		return _1e737866a_U16PtrToStr((&(_486_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:54:2"));;
}



inline jule::U32* __jule_RCNew(void) {
	;
	;
	jule::U32* _256_p = ((jule::U32*)(malloc(4LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p) {
	return _1a67499c2_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U32* _6328_p) {
	_1a6749b8c_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p) {
	return (_1a6749b8c_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U32* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I32>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1a67511d2:;
	}
	_iter_end_1a67511d2:;;
	jule::I32 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a675191e:;
	}
	_iter_end_1a675191e:;;
	return _1e73d320d_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _522_n = _1cc6364c0_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1e73d320d_StrFromBytes(_516_buf);;
}



inline jule::I32 _1cc6364c0_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I32 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1a6756902:;
	}
	_iter_end_1a6756902:;;
	jule::I32 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1cc637669_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _1e60155e4_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I32 _852_exp = (static_cast<jule::I32>((_832_bits >> 52LLU)) & static_cast<jule::I32>(2047LL));;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LL)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_1a675c3db:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_1a675c1aa:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1a6759c02:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1a675bbb0:;
		};
	};
	;
	jule::I32 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_1cc6364c0_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I32 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I32 _1203_digit = static_cast<jule::I32>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_1a67603ab:;
	}
	_iter_end_1a67603ab:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_1a6761247;
			};
		}
	_iter_next_1a6761247:;
	}
	_iter_end_1a6761247:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _1e73d320d_StrFromBytes(_1046_buf);;
}



inline jule::Str _1aa418c75_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa41a040:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_1a68e12d9_toStr((*(_1459_z))));;
			}
			_iter_next_1aa41a040:;
			++it;
			_1456_i++;
			goto _iter_begin_1aa41a040;
		}
		_iter_end_1aa41a040:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _1e73d320d_StrFromBytes(_1436_buf);;
}



inline jule::Str _1aa40db16_structToStr(_1e71a80b0_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1aa411b4c:;
				{
					;
					{
						
{
							_case_begin_1aa412cd5:;
							{
								;
								;
							}
						}
						_match_end_1aa4129b6:;
					};
				}
			}
			_match_end_1aa4111e0:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1aa414bb6:;
				{
					(_1966_buf).append(_1aa41549c_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1aa414b1c:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _1e73d320d_StrFromBytes(_1966_buf);;
}



inline jule::Str _1a68ca4d2_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_1a68cb714:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a68cb626:;
	};
	{
		
{
			_case_begin_1a68cbc31:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_1a68cbabb:;
	};
}

inline jule::Str _1a68cc6b0_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68cd958:;
			{
				return _21613_x;;
			}
		}
		_match_end_1a68cd8e2:;
	};
}

inline jule::Str _1a68cce0d_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68d1483:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a68d1395:;
	};
}

inline jule::Str _1a68d2bb0_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68d3e14:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a68d3d26:;
	};
}

inline jule::Str _1a68d08e4_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68d6895:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a68d67a7:;
	};
}

inline jule::Str _1a68d80c2_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68d93ae:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a68d92c1:;
	};
}

inline jule::Str _1a68daaa8_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68dbdc8:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a68dbcda:;
	};
}

inline jule::Str _1a68dd605_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68de8d1:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a68de76b:;
	};
}

inline jule::Str _1a68db119_toStr(jule::Uintptr _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68e1d23:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a68e1bad:;
	};
}

inline jule::Str _1a68e12d9_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68e4265:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a68e4100:;
	};
}

inline jule::Str _1a68e372b_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68e66a7:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a68e6542:;
	};
}

inline jule::Str _1a68e5b6d_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68e8ae9:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a68e8984:;
	};
}

inline jule::Str _1a68e80b0_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68eb17e:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a68eb019:;
	};
}

inline jule::Str _1a68eb48c_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a68ed68c:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1a68ed4a0:;
	};
}

inline jule::Str _1a68eb811_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a6900716:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1a690055c:;
	};
}

inline jule::Str _1a68d849b_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a69025b4:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_1a690233e:;
	};
}

inline jule::Str _1a76806e8_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a7682222:;
			{
				return _1a68cce0d_toStr(_21613_x);;
			}
		}
		_match_end_1a7681b28:;
	};
}

inline jule::Str _1a768b935_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a768d45e:;
			{
				return _1a68cce0d_toStr(_21613_x);;
			}
		}
		_match_end_1a768cd65:;
	};
}

inline jule::Str _1a76c086a_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a76c2394:;
			{
				return _1a68cce0d_toStr(_21613_x);;
			}
		}
		_match_end_1a76c1c9a:;
	};
}

inline jule::Str _1a7859a26_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a785b51c:;
			{
				return _1a68cce0d_toStr(_21613_x);;
			}
		}
		_match_end_1a785ae23:;
	};
}

inline jule::Str _1a4b13d16_toStr(jule::Ptr<_1a4852e51_Var> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b15004:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b14e16:;
	};
	;
	{
		
{
			_case_begin_1a4b159a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b15675:;
	};
}

inline jule::Str _1a4b163ac_toStr(jule::Ptr<_1a48d46db_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b18876:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b18788:;
	};
	;
	{
		
{
			_case_begin_1a4b19327:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b18ee7:;
	};
}

inline jule::Str _1a4b19d50_toStr(jule::Ptr<_1a4673ec5_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b1c25e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b1c171:;
	};
	;
	{
		
{
			_case_begin_1a4b1cc10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b1c8d0:;
	};
}

inline jule::Str _1a4b1d617_toStr(jule::Ptr<_1a471dc62_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b20ad1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b209e3:;
	};
	;
	{
		
{
			_case_begin_1a4b21582:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b21252:;
	};
}

inline jule::Str _1a4b221cb_toStr(jule::Ptr<_1a4729476_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b24695:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b245a7:;
	};
	;
	{
		
{
			_case_begin_1a4b25146:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b24d16:;
	};
}

inline jule::Str _1a4b25795_toStr(jule::Ptr<_1a472bb2c_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b27c4d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b27b60:;
	};
	;
	{
		
{
			_case_begin_1a4b286ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b283be:;
	};
}

inline jule::Str _1a4b28d4d_toStr(jule::Ptr<_1a472d337_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b2b229:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b2b14c:;
	};
	;
	{
		
{
			_case_begin_1a4b2bbca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b2b8ab:;
	};
}

inline jule::Str _1a4b474ba_toStr(jule::Ptr<_1a46710d2_Field> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b486a8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b485ba:;
	};
	;
	{
		
{
			_case_begin_1a4b49159:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b48d29:;
	};
}

inline jule::Str _1a4b59686_toStr(jule::Ptr<_1a4276798_Const> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b5a874:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b5a786:;
	};
	;
	{
		
{
			_case_begin_1a4b5b325:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b5aee5:;
	};
}

inline jule::Str _1a4b738ae_toStr(jule::Ptr<_1a472b0c1_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b74a8b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b7499d:;
	};
	;
	{
		
{
			_case_begin_1a4b7553c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b7520c:;
	};
}

inline jule::Str _1a4b84eca_toStr(jule::Ptr<_1a471c28d_Param> _21613_x) {
	;
	{
		
{
			_case_begin_1a4b86ad1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a4b869e3:;
	};
	;
	{
		
{
			_case_begin_1a4b87582:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a4b87252:;
	};
}

inline jule::Str _1a838673e_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a8388268:;
			{
				return _1a68cc6b0_toStr(_21613_x);;
			}
		}
		_match_end_1a8387b6e:;
	};
}

inline jule::Str _1a845e74b_toStr(jule::Ptr<_1a4653c74_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a8460906:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8460818:;
	};
	;
	{
		
{
			_case_begin_1a84613a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8461077:;
	};
}

inline jule::Str _1a8476ab5_toStr(jule::Ptr<_1a4717079_TupleExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8477ac7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a84779d9:;
	};
	;
	{
		
{
			_case_begin_1a8478578:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8478248:;
	};
}

inline jule::Str _1a847905c_toStr(jule::Ptr<_1a4658592_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a847b944:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a847b856:;
	};
	;
	{
		
{
			_case_begin_1a847c3e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a847c0b5:;
	};
}

inline jule::Str _1a8488e4b_toStr(jule::Ptr<_1a4662117_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a848a04b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8489e5d:;
	};
	;
	{
		
{
			_case_begin_1a848a9ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a848a6bc:;
	};
}

inline jule::Str _1a848bee8_toStr(jule::Ptr<_1a465799d_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_1a848d1b4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a848baca:;
	};
	;
	{
		
{
			_case_begin_1a848e12c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a848d835:;
	};
}

inline jule::Str _1a848b5be_toStr(jule::Ptr<_1a47d00ba_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_1a84915a2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a84914c5:;
	};
	;
	{
		
{
			_case_begin_1a8492053:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8491c34:;
	};
}

inline jule::Str _1a8491e10_toStr(jule::Ptr<_1a47d0571_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_1a8492d9a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8492cac:;
	};
	;
	{
		
{
			_case_begin_1a8494b27:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a84947d6:;
	};
}

inline jule::Str _1a848e4d4_toStr(jule::Ptr<_1a47d0a27_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_1a849596e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8495881:;
	};
	;
	{
		
{
			_case_begin_1a84976eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a84973aa:;
	};
}

inline jule::Str _1a84975ec_toStr(jule::Ptr<_1a48a2753_Data> _21613_x) {
	;
	{
		
{
			_case_begin_1a84986b9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a84985cb:;
	};
	;
	{
		
{
			_case_begin_1a849a4ac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a849a116:;
	};
}

inline jule::Str _1a849ac4e_toStr(jule::Ptr<_1a471396b_FnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a849d1c4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a849d0d6:;
	};
	;
	{
		
{
			_case_begin_1a849db75:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a849d845:;
	};
}

inline jule::Str _1a7ac9a54_toStr(jule::Ptr<_1a47ce581_Label> _21613_x) {
	;
	{
		
{
			_case_begin_1a7acac0e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7acab21:;
	};
	;
	{
		
{
			_case_begin_1a7acb6b0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7acb380:;
	};
}

inline jule::Str _1a7ae8479_toStr(jule::Ptr<_1a47cba34_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_1a7ae9667:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7ae9579:;
	};
	;
	{
		
{
			_case_begin_1a7aea118:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7ae9cd8:;
	};
}

inline jule::Str _1a7b02917_toStr(jule::Ptr<_1a4719a2c_BuiltinErrorCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b03aa0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b039b2:;
	};
	;
	{
		
{
			_case_begin_1a7b04551:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b04221:;
	};
}

inline jule::Str _1a7b0707b_toStr(jule::Ptr<_1a471aa3e_BackendEmitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b08104:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b08016:;
	};
	;
	{
		
{
			_case_begin_1a7b08aa5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b08775:;
	};
}

inline jule::Str _1a7b07785_toStr(jule::Ptr<_1a47187a6_BuiltinAppendCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b09b72:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b09a84:;
	};
	;
	{
		
{
			_case_begin_1a7b0b8ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b0b5be:;
	};
}

inline jule::Str _1a7b0a0a1_toStr(jule::Ptr<_1a4717376_BuiltinPrintCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b0c746:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b0c658:;
	};
	;
	{
		
{
			_case_begin_1a7b0e4c3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b0e182:;
	};
}

inline jule::Str _1a7b07257_toStr(jule::Ptr<_1a4717673_BuiltinPrintlnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b1031a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b1022c:;
	};
	;
	{
		
{
			_case_begin_1a7b12097:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b11c56:;
	};
}

inline jule::Str _1a7b10a24_toStr(jule::Ptr<_1a4717e26_BuiltinPanicCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b12dde:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b12d01:;
	};
	;
	{
		
{
			_case_begin_1a7b14b6b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b1482a:;
	};
}

inline jule::Str _1a7b14a28_toStr(jule::Ptr<_1a4719653_BuiltinCopyCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b159b3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b158c5:;
	};
	;
	{
		
{
			_case_begin_1a7b17740:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b173ee:;
	};
}

inline jule::Str _1a7b16167_toStr(jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b18587:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b18499:;
	};
	;
	{
		
{
			_case_begin_1a7b1a314:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b19ec3:;
	};
}

inline jule::Str _1a7b1a1c1_toStr(jule::Ptr<_1a471ad3b_FreeExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b1ade7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b1ad09:;
	};
	;
	{
		
{
			_case_begin_1a7b1d108:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b1aed5:;
	};
}

inline jule::Str _1a7b25ae4_toStr(jule::Ptr<_1a47cc66c_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b26cd2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b26be4:;
	};
	;
	{
		
{
			_case_begin_1a7b27783:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b27453:;
	};
}

inline jule::Str _1a7b314c3_toStr(jule::Ptr<_1a47cc969_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b326b1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b325c3:;
	};
	;
	{
		
{
			_case_begin_1a7b33162:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b32d32:;
	};
}

inline jule::Str _1a7b37331_toStr(jule::Ptr<_1a47cce20_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b3851e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b38431:;
	};
	;
	{
		
{
			_case_begin_1a7b38ec0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b38b90:;
	};
}

inline jule::Str _1a7b5de4b_toStr(jule::Ptr<_1a47cd86b_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b60139:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b6004b:;
	};
	;
	{
		
{
			_case_begin_1a7b60ada:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b607aa:;
	};
}

inline jule::Str _1a7b6da60_toStr(jule::Ptr<_1a4667a35_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b6ec09:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b6eb1b:;
	};
	;
	{
		
{
			_case_begin_1a7b706aa:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b7037a:;
	};
}

inline jule::Str _1a7b716cd_toStr(jule::Ptr<_1a466843c_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_1a7b73a65:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7b73977:;
	};
	;
	{
		
{
			_case_begin_1a7b74516:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7b741d6:;
	};
}

inline jule::Str _1a84d70a9_toStr(jule::Ptr<_1a47cdc01_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a84d8297:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a84d81a9:;
	};
	;
	{
		
{
			_case_begin_1a84d8c48:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a84d8918:;
	};
}

inline jule::Str _1a84e0e5e_toStr(jule::Ptr<_1a47cebe1_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a84e214c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a84e205e:;
	};
	;
	{
		
{
			_case_begin_1a84e2aed:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a84e27bd:;
	};
}

inline jule::Str _1a8527094_toStr(jule::Ptr<_1a46592b8_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a852823d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8528150:;
	};
	;
	{
		
{
			_case_begin_1a8528bde:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a85288ae:;
	};
}

inline jule::Str _1a853bbad_toStr(jule::Ptr<_1a47142eb_IndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a853cd8a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a853cc9c:;
	};
	;
	{
		
{
			_case_begin_1a853d83b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a853d50b:;
	};
}

inline jule::Str _1a8585399_toStr(jule::Ptr<_1a47d1264_Match> _21613_x) {
	;
	{
		
{
			_case_begin_1a8586587:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8586499:;
	};
	;
	{
		
{
			_case_begin_1a8587038:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8586c08:;
	};
}

inline jule::Str _1a8223136_toStr(jule::Ptr<_1a47d2485_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a8224b2c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8224a3e:;
	};
	;
	{
		
{
			_case_begin_1a858e815:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7a9e254:;
	};
}

inline jule::Str _1a7dcd4b7_toStr(jule::Ptr<_1a47ce0ca_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7dce6a5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7dce5b7:;
	};
	;
	{
		
{
			_case_begin_1a7dd0156:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7dced26:;
	};
}

inline jule::Str _1a7dd4b61_toStr(jule::Ptr<_1a47d282b_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7dd5d4e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7dd5c61:;
	};
	;
	{
		
{
			_case_begin_1a7dd6800:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7dd64c0:;
	};
}

inline jule::Str _1a7dde5d8_toStr(jule::Ptr<_1a4663767_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_1a7de0771:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7de0683:;
	};
	;
	{
		
{
			_case_begin_1a7de1222:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7de0de2:;
	};
}

inline jule::Str _1a7dde86e_toStr(jule::Ptr<_1a46665b1_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a7de3961:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7de3873:;
	};
	;
	{
		
{
			_case_begin_1a7de4412:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7de40d2:;
	};
}

inline jule::Str _1a7de4ae9_toStr(jule::Ptr<_1a466a263_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a7de6b51:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7de6a63:;
	};
	;
	{
		
{
			_case_begin_1a7de7602:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7de72c2:;
	};
}

inline jule::Str _1a7de847c_toStr(jule::Ptr<_1a4669a26_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1a7dea869:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7dea77b:;
	};
	;
	{
		
{
			_case_begin_1a7deb31a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7deaeda:;
	};
}

inline jule::Str _1a7dec5b3_toStr(jule::Ptr<_1a466720a_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_1a7deda59:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7ded96b:;
	};
	;
	{
		
{
			_case_begin_1a7dee50a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7dee1ca:;
	};
}

inline jule::Str _1a7deeb59_toStr(jule::Ptr<_1a4668be0_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e01c49:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e01b5b:;
	};
	;
	{
		
{
			_case_begin_1a7e026ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e023ba:;
	};
}

inline jule::Str _1a7debc22_toStr(jule::Ptr<_1a4660c4d_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e038e9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e0380b:;
	};
	;
	{
		
{
			_case_begin_1a7e05676:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e05346:;
	};
}

inline jule::Str _1a7e02d49_toStr(jule::Ptr<_1a4661127_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e07db5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e07cc7:;
	};
	;
	{
		
{
			_case_begin_1a7e08866:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e08536:;
	};
}

inline jule::Str _1a7e0947c_toStr(jule::Ptr<_1a466b033_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e0b858:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e0b76a:;
	};
	;
	{
		
{
			_case_begin_1a7e0c309:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e0bec9:;
	};
}

inline jule::Str _1a7e0c958_toStr(jule::Ptr<_1a4661424_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e0ea48:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e0e95a:;
	};
	;
	{
		
{
			_case_begin_1a7e104e9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e101b9:;
	};
}

inline jule::Str _1a7e11792_toStr(jule::Ptr<_1a4668816_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e12c38:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e12b4a:;
	};
	;
	{
		
{
			_case_begin_1a7e136d9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e133a9:;
	};
}

inline jule::Str _1a7e13d38_toStr(jule::Ptr<_1a466698a_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e15e28:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e15d3a:;
	};
	;
	{
		
{
			_case_begin_1a7e168c9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e16599:;
	};
}

inline jule::Str _1a7e17b72_toStr(jule::Ptr<_1a4658372_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a7e19118:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7e1902a:;
	};
	;
	{
		
{
			_case_begin_1a7e19ab9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7e19789:;
	};
}

inline jule::Str _1a86dd6cd_toStr(jule::Ptr<_1a4670125_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_1a86de888:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a86de79a:;
	};
	;
	{
		
{
			_case_begin_1a86e0339:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a86e0009:;
	};
}

inline jule::Str _1a86e3293_toStr(jule::Ptr<_1a466e278_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a86e430a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a86e421c:;
	};
	;
	{
		
{
			_case_begin_1a86e4cab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a86e497b:;
	};
}

inline jule::Str _1a86e62a7_toStr(jule::Ptr<_1a4665406_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a86e8199:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a86e80ab:;
	};
	;
	{
		
{
			_case_begin_1a86e8b4a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a86e881a:;
	};
}

inline jule::Str _1a86e9970_toStr(jule::Ptr<_1a466e9b5_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a86ebcb3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a86ebbc5:;
	};
	;
	{
		
{
			_case_begin_1a86ec764:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a86ec434:;
	};
}

inline jule::Str _1a8700a20_toStr(jule::Ptr<_1a466c62d_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a8701a87:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8701999:;
	};
	;
	{
		
{
			_case_begin_1a8702538:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8702208:;
	};
}

inline jule::Str _1a87030e9_toStr(jule::Ptr<_1a466d5b8_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a870543c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a870534e:;
	};
	;
	{
		
{
			_case_begin_1a8705ddd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8705aad:;
	};
}

inline jule::Str _1a872b221_toStr(jule::Ptr<_1a471650c_StructSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a872c574:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a872c486:;
	};
	;
	{
		
{
			_case_begin_1a872d025:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a872cbe5:;
	};
}

inline jule::Str _1a872b9a2_toStr(jule::Ptr<_1a4711d65_UnaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a873117c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a873108e:;
	};
	;
	{
		
{
			_case_begin_1a8731b2d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a87317ed:;
	};
}

inline jule::Str _1a875e95d_toStr(jule::Ptr<_1a4721d20_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_1a8760b4b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8760a5d:;
	};
	;
	{
		
{
			_case_begin_1a87615ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a87612bc:;
	};
}

inline jule::Str _1a795910e_toStr(jule::Ptr<_1a4656183_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a795a2b9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a795a1cb:;
	};
	;
	{
		
{
			_case_begin_1a795ac6a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a795a93a:;
	};
}

inline jule::Str _1a795e994_toStr(jule::Ptr<_1a4654d96_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a7960b4e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7960a61:;
	};
	;
	{
		
{
			_case_begin_1a7961600:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a79612c0:;
	};
}

inline jule::Str _1a7972da3_toStr(jule::Ptr<_1a4655935_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a797406e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7973e81:;
	};
	;
	{
		
{
			_case_begin_1a7974a20:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a79746e0:;
	};
}

inline jule::Str _1a859197c_toStr(jule::Ptr<_1a4654a99_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a8592b48:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8592a5a:;
	};
	;
	{
		
{
			_case_begin_1a85935e9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a85932b9:;
	};
}

inline jule::Str _1a85981e2_toStr(jule::Ptr<_1a4655193_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a85993ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a85992c0:;
	};
	;
	{
		
{
			_case_begin_1a8599d5e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8599a2e:;
	};
}

inline jule::Str _1a859e3b3_toStr(jule::Ptr<_1a4654714_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a85a057e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a85a0491:;
	};
	;
	{
		
{
			_case_begin_1a85a1030:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a85a0c00:;
	};
}

inline jule::Str _1a85e9ebe_toStr(jule::Ptr<_1a4659e34_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a85eb102:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a85eb014:;
	};
	;
	{
		
{
			_case_begin_1a85ebaa3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a85eb773:;
	};
}

inline jule::Str _1a8600c50_toStr(jule::Ptr<_1a4713d45_SliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8602966:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8602878:;
	};
	;
	{
		
{
			_case_begin_1a8603417:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a86030d7:;
	};
}

inline jule::Str _1a861aac2_toStr(jule::Ptr<_1a465c1bc_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_1a861bc7c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a861bb8e:;
	};
	;
	{
		
{
			_case_begin_1a861c72d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a861c3ed:;
	};
}

inline jule::Str _1a86245e2_toStr(jule::Ptr<_1a465d7c8_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_1a862579c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a86256ae:;
	};
	;
	{
		
{
			_case_begin_1a862624d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8625e1d:;
	};
}

inline jule::Str _1a894722d_toStr(jule::Ptr<_1a465b6c7_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a89483d8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a89482ea:;
	};
	;
	{
		
{
			_case_begin_1a8948d89:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8948a59:;
	};
}

inline jule::Str _1a8959e44_toStr(jule::Ptr<_1a4712a36_AllocStructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a895b132:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a895b044:;
	};
	;
	{
		
{
			_case_begin_1a895bad3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a895b7a3:;
	};
}

inline jule::Str _1a896cebd_toStr(jule::Ptr<_1a47130b9_CastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a896e1ab:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a896e0bd:;
	};
	;
	{
		
{
			_case_begin_1a896eb5c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a896e82c:;
	};
}

inline jule::Str _1a8985865_toStr(jule::Ptr<_1a47168a3_StructStaticIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8986976:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8986888:;
	};
	;
	{
		
{
			_case_begin_1a8987427:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a89870e7:;
	};
}

inline jule::Str _1a898802c_toStr(jule::Ptr<_1a465aab1_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a898b85a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a898b76c:;
	};
	;
	{
		
{
			_case_begin_1a898c30b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a898becb:;
	};
}

inline jule::Str _1a8994c92_toStr(jule::Ptr<_1a4712739_StructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8995e4c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8995d5e:;
	};
	;
	{
		
{
			_case_begin_1a89968ed:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a89965bd:;
	};
}

inline jule::Str _1a89b6b1b_toStr(jule::Ptr<_1a471a6ba_RuneExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a89b7d09:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a89b7c1b:;
	};
	;
	{
		
{
			_case_begin_1a89b87aa:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a89b847a:;
	};
}

inline jule::Str _1a89d9a0c_toStr(jule::Ptr<_1a4676d30_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_1a89dabea:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a89dab0c:;
	};
	;
	{
		
{
			_case_begin_1a89db69b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a89db36b:;
	};
}

inline jule::Str _1a79b06d7_toStr(jule::Ptr<_1a48d54cd_Type> _21613_x) {
	;
	{
		
{
			_case_begin_1a79b1870:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a79b1782:;
	};
	;
	{
		
{
			_case_begin_1a79b2321:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a79b1ee1:;
	};
}

inline jule::Str _1a79d2c15_toStr(jule::Ptr<_1a4716c7c_ArrayExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a79d3e03:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a79d3d15:;
	};
	;
	{
		
{
			_case_begin_1a79d48a4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a79d4574:;
	};
}

inline jule::Str _1a7a1be19_toStr(jule::Ptr<_1a465403d_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a7a1d107:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7a1d019:;
	};
	;
	{
		
{
			_case_begin_1a7a1daa8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7a1d778:;
	};
}

inline jule::Str _1a7a21528_toStr(jule::Ptr<_1a4659a5a_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a7a226d3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a7a225e5:;
	};
	;
	{
		
{
			_case_begin_1a7a23184:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a7a22d54:;
	};
}

inline jule::Str _1a8a5cde3_toStr(jule::Ptr<_1a4653669_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a8a5d487:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8a5d399:;
	};
	;
	{
		
{
			_case_begin_1a8a5de38:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8a5db08:;
	};
}

inline jule::Str _1a8a626bc_toStr(jule::Ptr<_1a465a6d7_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8a6548e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8a653a1:;
	};
	;
	{
		
{
			_case_begin_1a8a65e40:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8a65b10:;
	};
}

inline jule::Str _1a8a6953c_toStr(jule::Ptr<_1a4654417_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a8a6a72a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8a6a63c:;
	};
	;
	{
		
{
			_case_begin_1a8a6b1cb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8a6ad9b:;
	};
}

inline jule::Str _1a8a226d2_toStr(jule::Ptr<_1a47155d8_SlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8a2386a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8a2377c:;
	};
	;
	{
		
{
			_case_begin_1a8a2431b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8a23edb:;
	};
}

inline jule::Str _1a8c01927_toStr(jule::Ptr<_1a465e004_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8c02ad2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8c029e4:;
	};
	;
	{
		
{
			_case_begin_1a8c03583:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8c03253:;
	};
}

inline jule::Str _1a8c6cb5d_toStr(jule::Ptr<_1a4715b6b_TraitSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8c6dd4b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8c6dc5d:;
	};
	;
	{
		
{
			_case_begin_1a8c6e7ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8c6e4bc:;
	};
}

inline jule::Str _1a8d73cca_toStr(jule::Ptr<_1a4715055_MapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d75958:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d7586a:;
	};
	;
	{
		
{
			_case_begin_1a8d76409:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d760c9:;
	};
}

inline jule::Str _1a8d8436d_toStr(jule::Ptr<_1a47147a2_AnonFnExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d8555b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d8546d:;
	};
	;
	{
		
{
			_case_begin_1a8d8600c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d85bcc:;
	};
}

inline jule::Str _1a8d8b430_toStr(jule::Ptr<_1a4657c67_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d8c5da:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d8c4ec:;
	};
	;
	{
		
{
			_case_begin_1a8d8d08b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d8cc5b:;
	};
}

inline jule::Str _1a8d8e587_toStr(jule::Ptr<_1a4658938_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d90ed4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d90de6:;
	};
	;
	{
		
{
			_case_begin_1a8d91985:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d91655:;
	};
}

inline jule::Str _1a8d9467a_toStr(jule::Ptr<_1a4658d12_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d95bba:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d95acc:;
	};
	;
	{
		
{
			_case_begin_1a8d9666b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d9633b:;
	};
}

inline jule::Str _1a8d92788_toStr(jule::Ptr<_1a465e961_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d993a5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d992b7:;
	};
	;
	{
		
{
			_case_begin_1a8d99d56:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d99a26:;
	};
}

inline jule::Str _1a8d97529_toStr(jule::Ptr<_1a46600c1_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8d9c573:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8d9c485:;
	};
	;
	{
		
{
			_case_begin_1a8d9d024:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8d9cbe4:;
	};
}

inline jule::Str _1a8d9a75d_toStr(jule::Ptr<_1a465a30d_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8da0741:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8da0653:;
	};
	;
	{
		
{
			_case_begin_1a8da11e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8da0db2:;
	};
}

inline jule::Str _1a8da1962_toStr(jule::Ptr<_1a465c9e7_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_1a8da4190:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8da40a2:;
	};
	;
	{
		
{
			_case_begin_1a8da4b41:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8da4811:;
	};
}

inline jule::Str _1a8da7bee_toStr(jule::Ptr<_1a465ce9d_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_1a8da9382:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8da9294:;
	};
	;
	{
		
{
			_case_begin_1a8da9d33:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8da9a03:;
	};
}

inline jule::Str _1a8daa5a3_toStr(jule::Ptr<_1a465b067_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a8daccd1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8dacbe3:;
	};
	;
	{
		
{
			_case_begin_1a8dad782:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8dad452:;
	};
}

inline jule::Str _1a8eec591_toStr(jule::Ptr<_1a471198b_BinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a8eed77e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a8eed691:;
	};
	;
	{
		
{
			_case_begin_1a8eee230:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a8eede00:;
	};
}

inline jule::Str _1a925e6e3_toStr(jule::Ptr<_1a4717a4c_BuiltinNewCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a92608d1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a92607e3:;
	};
	;
	{
		
{
			_case_begin_1a9261382:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9261052:;
	};
}

inline jule::Str _1a9275374_toStr(jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9276562:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9276474:;
	};
	;
	{
		
{
			_case_begin_1a9277013:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9276bd3:;
	};
}

inline jule::Str _1a92a9e58_toStr(jule::Ptr<_1a4718aa3_BuiltinLenCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a92ab146:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a92ab058:;
	};
	;
	{
		
{
			_case_begin_1a92abae7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a92ab7b7:;
	};
}

inline jule::Str _1a92c4c31_toStr(jule::Ptr<_1a4718da0_BuiltinCapCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a92c5e1e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a92c5d31:;
	};
	;
	{
		
{
			_case_begin_1a92c68c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a92c6590:;
	};
}

inline jule::Str _1a931b8d2_toStr(jule::Ptr<_1a4719d29_SizeofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a931ca04:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a931c916:;
	};
	;
	{
		
{
			_case_begin_1a931d4a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a931d175:;
	};
}

inline jule::Str _1a93258db_toStr(jule::Ptr<_1a471a4cd_AlignofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9326a0d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9326920:;
	};
	;
	{
		
{
			_case_begin_1a93274ae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a932717e:;
	};
}

inline jule::Str _1a8b58ad2_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a8b5a5b7:;
			{
				return _1a68cc6b0_toStr(_21613_x);;
			}
		}
		_match_end_1a8b59ebd:;
	};
}

inline jule::Str _1a91665b7_toStr(jule::Ptr<_1a6130001_ExceptionalForwardingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a91677a5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a91676b7:;
	};
	;
	{
		
{
			_case_begin_1a9168256:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9167e26:;
	};
}

inline jule::Str _1a91a00b2_toStr(jule::Ptr<_1a6132ae7_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a91a12a0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a91a11b2:;
	};
	;
	{
		
{
			_case_begin_1a91a1c51:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a91a1921:;
	};
}

inline jule::Str _1a91a7a26_toStr(jule::Ptr<_1a61317d8_MutSlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a91a8c14:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a91a8b26:;
	};
	;
	{
		
{
			_case_begin_1a91a96b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a91a9385:;
	};
}

inline jule::Str _1a91cec6d_toStr(jule::Ptr<_1a613271d_AppendToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a91d0e5b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a91d0d6d:;
	};
	;
	{
		
{
			_case_begin_1a91d190c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a91d15cc:;
	};
}

inline jule::Str _1a91d25bc_toStr(jule::Ptr<_1a6132344_PushToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a91d4a86:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a91d4998:;
	};
	;
	{
		
{
			_case_begin_1a91d5537:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a91d5207:;
	};
}

inline jule::Str _1a91e01bd_toStr(jule::Ptr<_1a6130584_SwapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a91e13ab:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a91e12bd:;
	};
	;
	{
		
{
			_case_begin_1a91e1d5c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a91e1a2c:;
	};
}

inline jule::Str _1a922e6b3_toStr(jule::Ptr<_1a61309a2_EmptyCompareExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a92308a1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a92307b3:;
	};
	;
	{
		
{
			_case_begin_1a9231352:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9231022:;
	};
}

inline jule::Str _1a9232441_toStr(jule::Ptr<_1a6131255_StrCompExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a923490a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a923481c:;
	};
	;
	{
		
{
			_case_begin_1a92353ab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a923507b:;
	};
}

inline jule::Str _1a9ab7886_toStr(jule::Ptr<_1a6131b6d_UnsafeBinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ab8a74:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ab8986:;
	};
	;
	{
		
{
			_case_begin_1a9ab9525:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ab91e5:;
	};
}

inline jule::Str _1a9ac0c35_toStr(jule::Ptr<_1a6132de4_UnsafeDerefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ac1e23:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ac1d35:;
	};
	;
	{
		
{
			_case_begin_1a9ac28c4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ac2594:;
	};
}

inline jule::Str _1a9ac76cb_toStr(jule::Ptr<_1a6130c9e_RefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ac88b9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ac87cb:;
	};
	;
	{
		
{
			_case_begin_1a9ac936a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ac903a:;
	};
}

inline jule::Str _1a9acbc74_toStr(jule::Ptr<_1a4712393_StructArgExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9acce62:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9accd74:;
	};
	;
	{
		
{
			_case_begin_1a9acd913:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9acd5d3:;
	};
}

inline jule::Str _1a9ad353e_toStr(jule::Ptr<_1a61331e1_UnsafeCastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ad472c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ad463e:;
	};
	;
	{
		
{
			_case_begin_1a9ad51cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ad4d9d:;
	};
}

inline jule::Str _1a9ae111d_toStr(jule::Ptr<_1a61301dd_FnCallIgnoreExceptionalExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ae230b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ae221d:;
	};
	;
	{
		
{
			_case_begin_1a9ae2cac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ae297c:;
	};
}

inline jule::Str _1a9aeb931_toStr(jule::Ptr<_1a6131e6a_UnsafeIndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9aecb1e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9aeca31:;
	};
	;
	{
		
{
			_case_begin_1a9aed5c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9aed290:;
	};
}

inline jule::Str _1aa16c16b_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1aa16d2b0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa16d1c2:;
	};
	;
	{
		
{
			_case_begin_1aa16dc61:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa16d931:;
	};
}

inline jule::Str _1aa408b55_toStr(_1e71a80b0_Builder _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1aa40c054:;
			{
				return _1aa40db16_structToStr(_21613_x);;
			}
		}
		_match_end_1aa40bad1:;
	};
}

inline jule::Str _1aa41549c_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1aa416844:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa416635:;
	};
	;
	{
		
{
			_case_begin_1aa4171a2:;
			{
				return _1aa418c75_arrToStr(_21613_x);;
			}
		}
		_match_end_1aa416ec6:;
	};
}

inline jule::Str _1aa41084e_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1aa41bad0:;
			{
				return _1a68cc6b0_toStr(_21613_x);;
			}
		}
		_match_end_1aa415ec5:;
	};
}

inline jule::Str _1aa41c608_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1aa41da49:;
			{
				return _1a68cc6b0_toStr(_21613_x);;
			}
		}
		_match_end_1aa41d53d:;
	};
}



inline void _1cc637669_rev(jule::Slice<jule::U8> _26912_b) {
	jule::I32 _2706_i = 0LL;;
	for (; (_2706_i < (_26912_b.len() >> 1LL)); (_2706_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26912_b[((_26912_b.len() - 1LL) - _2706_i)];
				jule::U8 _1___jule_assign_arg = _26912_b[_2706_i];
				_26912_b[_2706_i] = ___jule_assign_arg;
				_26912_b[((_26912_b.len() - 1LL) - _2706_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a6762a0c:;
	}
	_iter_end_1a6762a0c:;;
}



inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I32 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I32 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1a67644d1:;
	}
	_iter_end_1a67644d1:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1e73d320d_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I32 __jule_x = _4415_runes.len(); jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a672202c:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1cc6229b7_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1a672202c:;
			++it;
			goto _iter_begin_1a672202c;
		}
		_iter_end_1a672202c:;
	};
	return _1e73d320d_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1cc6233be_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I32 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1a672322b:;
	}
	_iter_end_1a672322b:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1e73d320d_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1cc6229b7_AppendRune(_846_buf, _8316_r);
	return _1e73d320d_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1a6621525_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _1cc639ca9_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1cc6243d1__handleRW(_814_b);
}



inline jule::Bool _1cc63ac55__coSpawn(void* _1020_func, void* _1035_args) {
	void* _112_handle = CreateThread(nullptr, 0LL, (unsigned long(*)(void*))(_1020_func), _1035_args, 0LL, nullptr);;
	if ((_112_handle == nullptr)) {
		return false;;
	};
	_1e73a5697_CloseHandle(((jule::Uintptr)(_112_handle)));
	return true;;
}



inline jule::U64 _1e748408e_hash128to64(_1e7483bd7_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1e748439c_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1e7480420_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1e7484666_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1e747e9e6_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1e74849a7_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1e7484ce8_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1e748408e_hash128to64(_1e7483bd7_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1e748516c_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1e748559b_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1e7485a30_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1e748439c_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1e748439c_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1e748516c_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1e748516c_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1e748559b_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1e7484666_fetch32(_7517_bytes));;
		return _1e748559b_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1e7484666_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I32 _963_z = (_7532_n + (static_cast<jule::I32>(_943_c) << 2LL));;
		return (jule::U64)(_1e74849a7_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1e7483bd7_u128 _1e7485dd7_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1e7483bd7_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I32 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1e74849a7_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1e7485a30_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1e74849a7_shiftMix((jule::U64)(_1046_a + _1e748439c_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1e74849a7_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1e7484ce8_hashLen16((jule::U64)(_1e748439c_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1e7484ce8_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1e748439c_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1e74849a7_shiftMix((jule::U64)(_1e748439c_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1e74849a7_shiftMix((jule::U64)(_1e748439c_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1a689d2da;
				};
			}
		_iter_next_1a689d2da:;
		}
		_iter_end_1a689d2da:;;
	};
	_1046_a=_1e7484ce8_hashLen16(_1046_a, _1066_c);
	_1056_b=_1e7484ce8_hashLen16(_1076_d, _1056_b);
	return _1e7483bd7_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1e7484ce8_hashLen16(_1056_b, _1046_a)};;
}



inline _1e7483bd7_u128 _1e7486536_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1e748516c_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1e748516c_rotate64(_14563_a, 44LLU);
	return _1e7483bd7_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1e7483bd7_u128 _1e7486965_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1e7486536_weakHashLen32WithSeeds(_1e748439c_fetch64(_15529_bytes), _1e748439c_fetch64(_15529_bytes.slice(8LL)), _1e748439c_fetch64(_15529_bytes.slice(16LL)), _1e748439c_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1e7483bd7_u128 _1e7486d94_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1e7483bd7_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1e7485dd7_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I32 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1e7483bd7_u128 _16910_v = _1e7483bd7_u128{._field_hi=0, ._field_lo=0};;
	_1e7483bd7_u128 _17010_w = _1e7483bd7_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1e748516c_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1e748439c_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1e748516c_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1e748439c_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1e748516c_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1e748516c_rotate64((jule::U64)(_1716_x + _1e748439c_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1e748516c_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1e748439c_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1e748516c_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1e748439c_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1e748439c_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1e748516c_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1e7486965_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1e7486965_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1e748439c_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1e748516c_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1e748439c_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1e748516c_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1e748439c_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1e748439c_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1e748516c_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1e7486965_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1e7486965_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1e748439c_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1a68a6997;
			};
		}
	_iter_next_1a68a6997:;
	}
	_iter_end_1a68a6997:;;
	_1716_x+=(jule::U64)(_1e748516c_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1e748516c_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1e748516c_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I32 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1e748516c_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1e748439c_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1e748439c_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1e7486965_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1a68b2684:;
	}
	_iter_end_1a68b2684:;;
	_1716_x=_1e7484ce8_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1e7484ce8_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1e7483bd7_u128{._field_hi=(jule::U64)(_1e7484ce8_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1e7484ce8_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1e748715d_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1e7483bd7_u128 _2356_sum = _1e7483bd7_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1e7486d94_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1e7483bd7_u128{._field_hi=_1e748439c_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1e748439c_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1e7486d94_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1e7483bd7_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1e748408e_hash128to64(_2356_sum);;
}



inline jule::U64 _1cc7a263b_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1cc7a3054_hasZeroByte((_1cc7a32da_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1cc7a2949_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1cc7a3054_hasZeroByte((_1cc7a32da_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1cc7a2c13_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1cc794b7d_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1cc7a3054_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1cc7a32da_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I32 _1cc7a35a4_numGroups(jule::I32 _7914_n) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=({ jule::I32 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1cc7a37b3_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a68bc12d:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1a68bc12d:;
			++it;
			_886_i++;
			goto _iter_begin_1a68bc12d;
		}
		_iter_end_1a68bc12d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1cc7a3b8c_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1cc7a3e89_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups) {
	return _1cc7a430d_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1cc7a430d_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I32 _1cd602842_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I32)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1a6915eac:;
	}
	_iter_end_1a6915eac:;;
	return -1LL;;
}



inline jule::I32 _1cd602ee6_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6916364:;
		if (it != expr_end) {
			jule::I32 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1a6916364:;
			++it;
			_706_i++;
			goto _iter_begin_1a6916364;
		}
		_iter_end_1a6916364:;
	};
	return -1LL;;
}



inline jule::I32 _1cd60336a_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1cd602842_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1cd62cdcd_Getwd(void) {
	jule::Array<jule::U16,261> _910_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _102_n = _1e73a64cd_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_910_buf[0LL])));;
	if ((_102_n == 0LLU)) {
		return jule::Str();;
	};
	return _1e737866a_U16PtrToStr((&(_910_buf[0LL])));;
}



inline jule::Bool _1ce716218_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1ce773e8a__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1ce782817_isExcludingLatin(_1ce7201de_Letter, _7613_r);;
}



inline jule::Bool _1ce781b8a_is16(jule::Slice<_1ce77edec_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7568a65:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_1ce77edec_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1a7568a65:;
				++it;
				_1937_i++;
				goto _iter_begin_1a7568a65;
			}
			_iter_end_1a7568a65:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + ({ jule::I32 __jule_x = (_2096_hi - _2086_lo); jule::I32 __jule_y = 1LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }));;
			_1ce77edec_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1a7567899:;
	}
	_iter_end_1a7567899:;;
	return false;;
}



inline jule::Bool _1ce78200e_is32(jule::Slice<_1ce78042a_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a756ee45:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_1ce78042a_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1a756ee45:;
				++it;
				_2307_i++;
				goto _iter_begin_1a756ee45;
			}
			_iter_end_1a756ee45:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + ({ jule::I32 __jule_x = (_2466_hi - _2456_lo); jule::I32 __jule_y = 1LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }));;
			_1ce78042a_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1a756bb67:;
	}
	_iter_end_1a756bb67:;;
	return false;;
}



inline jule::Bool _1ce782817_isExcludingLatin(jule::Ptr<_1ce78089d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1ce77edec_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1ce781b8a_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1ce78042a_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1ce78200e_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1ce782a59_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1ce773e8a__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1ce782817_isExcludingLatin(_1ce7264ae_Upper, _29512_r);;
}



inline jule::I32 _1ce783252_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1ce77e946_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1ce77e946_CaseRange> _1ce7835c6_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1ce77e946_CaseRange> _33329_caseRange) {
	jule::I32 _3356_lo = 0LL;;
	jule::I32 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I32 _3383_m = static_cast<jule::I32>((static_cast<jule::U32>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1ce77e946_CaseRange> _3397_cr = ((jule::Ptr<_1ce77e946_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1a75816e8:;
	}
	_iter_end_1a75816e8:;;
	return nullptr;;
}



inline jule::I32 _1ce783890_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I32>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1ce77aac9_asciiFold[_37015_r]);;
	};
	jule::I32 _3806_lo = 0LL;;
	jule::I32 _3816_hi = _1ce77adb5_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I32 _3833_m = static_cast<jule::I32>((static_cast<jule::U32>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1ce77adb5_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1a7585a4e:;
	}
	_iter_end_1a7585a4e:;;
	if (((_3806_lo < _1ce77adb5_caseOrbit.len()) && (static_cast<jule::I32>(_1ce77adb5_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1ce77adb5_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1ce77e946_CaseRange> _3972_cr = _1ce7835c6_lookupCaseRange(_37015_r, _1ce7738b3_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1ce783252_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1ce783252_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1ce783d13_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I32 __jule_x = 2147483647LL; jule::I32 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1e71a80b0_Builder _186_ss = static__1e71a892e_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1e71a90b1_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1a6b392ce:;
	}
	_iter_end_1a6b392ce:;;
	return _1e71a9941_Str(&_186_ss);;
}



inline jule::Bool _1ce7841cb_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1ce784550_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _1ce784a06_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1ce7841cb_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1a6b3ce92:;
	}
	_iter_end_1a6b3ce92:;;
	return -1LL;;
}



inline jule::I32 _1ce784d47_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1ce784a06_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _1ce785276_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a6b401e7:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1a6b3ea10;
					};
				}
			_iter_next_1a6b41968:;
			}
			_iter_end_1a6b41968:;;
			return _636_j;;
		}
	_iter_next_1a6b3ea10:;
	}
	_iter_end_1a6b3ea10:;;
	return -1LL;;
}



inline jule::I32 _1ce7855ea_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1ce785276_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _1ce786dd2_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1cd60336a_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _1ce787256_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1a6b48ac4:;
	}
	_iter_end_1a6b48ac4:;;
	return -1LL;;
}



inline jule::I32 _1ce787b80_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ce787256_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1a6b4bdd5:;
	}
	_iter_end_1a6b4bdd5:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1ce788323_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _1ce784a06_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1a6b520e9;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1a6b520e9:;
	}
	_iter_end_1a6b520e9:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _1ce788697_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _1ce788323_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _1ce788a1b_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_1ce784a06_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _1ce789588_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_1ce787b80_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I32 _1ce78990c_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2746_n = 0LL;;
	jule::I32 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2773_j = _1ce784a06_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1a760bd6c;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1a760bd6c:;
	}
	_iter_end_1a760bd6c:;;
	return _2746_n;;
}



inline jule::Str _1ce789de6_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I32 _2952_m = _1ce78990c_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1e71a80b0_Builder _3036_ss = static__1e71a892e_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I32 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I32 _3063_j = _1ce784a06_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1a7610953;
			};
			({
				auto except = _1e71a90b1_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1e71a90b1_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1a7610953:;
	}
	_iter_end_1a7610953:;;
	({
		auto except = _1e71a90b1_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1e71a9941_Str(&_3036_ss);;
}



inline jule::Str _1ce78a325_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _1ce789de6_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _1ce78b0a1_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I32 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I32 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ce787256_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1a76161d9:;
	}
	_iter_end_1a76161d9:;;
	return jule::Str();;
}



inline jule::Str _1ce78b425_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I32 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I32 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc621e6c_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ce787256_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1a7617d01:;
	}
	_iter_end_1a7617d01:;;
	return jule::Str();;
}



inline jule::Str _1ce78ba30_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _1ce78b0a1_TrimLeft(_1ce78b425_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Bool _1ce78d537_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I32 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1a761e456;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1a761ecc5;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1a761ecc5;
			};
			return false;;
		}
	_iter_next_1a761ecc5:;
	}
	_iter_end_1a761ecc5:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1a761e456:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1a76228ee:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I32 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1a76228ee;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1a76228ee;
					};
					return false;;
				};
				jule::I32 _1237_r = _1ce783890_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1ce783890_SimpleFold(_1237_r);
					}
				_iter_next_1a7626925:;
				}
				_iter_end_1a7626925:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1a76228ee;
				};
				return false;;
			}
			_iter_next_1a76228ee:;
			it += len;
			goto _iter_begin_1a76228ee;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Bool _1cd6b9b90_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _1cd6b9e9d_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _1cd6ba267_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I32 _1cd6ba83e_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1cd6b9e9d_isSlash(_8318_path[0LL]))) || (!(_1cd6b9e9d_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cd6bab08_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cd6bab08_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_1cd6ba267_toUpper(_976_p2[0LL]) == 'U')) && (_1cd6ba267_toUpper(_976_p2[1LL]) == 'N')) && (_1cd6ba267_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cd6bab08_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cd6bab08_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1cd6bab08_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a763a83a:;
		if (it != expr_end) {
			jule::I32 _1216_i = it - expr->begin();
			{
				if (_1cd6b9e9d_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a763a83a:;
			++it;
			_1216_i++;
			goto _iter_begin_1a763a83a;
		}
		_iter_end_1a763a83a:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1cd6badc2_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _1e7378093_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_1326_n), static_cast<jule::I32>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_1e73a75cd_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _1e73783a1_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I32>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1a763c908:;
	}
	_iter_end_1a763c908:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1cd6bb29b_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cd6badc2_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1ce78eabb_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1cd6bb4dd_join(jule::Slice<jule::Str> _1609_elem) {
	_1e71a80b0_Builder _1616_s = static__1e71a892e_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_1609_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7641c3c:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_1e71a9dc5_Len(&_1616_s) == 0LL)) {
						_case_begin_1a7642a1d:;
					}
					else if (_1cd6b9e9d_isSlash(_1626_lastChar)) {
						_case_begin_1a76426dd:;
						{
							while (((_16314_e.len() > 0LL) && _1cd6b9e9d_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1a76434e1:;
							}
							_iter_end_1a76434e1:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1a7642754:;
					}
					else {
						_case_begin_1a7642677:;
						{
							({
								auto except = _1e71a9369_WriteByte(&_1616_s, '\\');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:187:4"));
							});
							_1626_lastChar='\\';
						}
					}
					_match_end_1a7642578:;
				};
				if ((_16314_e.len() > 0LL)) {
					({
						auto except = _1e71a90b1_WriteStr(&_1616_s, _16314_e);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:191:4"));
						(except.result);
					});
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1a7641c3c:;
			++it;
			goto _iter_begin_1a7641c3c;
		}
		_iter_end_1a7641c3c:;
	};
	if ((_1e71a9dc5_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _1ce78eabb_Clean(_1e71a9941_Str(&_1616_s));;
}



inline jule::Str _1ce78eabb_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I32 _1112_volLen = _1cd6ba83e_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1cd6b9b90_IsPathSep(_1102_originalPath[0LL])) && _1cd6b9b90_IsPathSep(_1102_originalPath[1LL]))) {
			return _1ce790193_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1cd6b9b90_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1272_n = _10914_path.len();;
	_1ce78dc30_lazyBuff _1286_out = _1ce78dc30_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I32 _1336_r;
	jule::I32 _13313_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1ce78e4a0_append(&_1286_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1cd6b9b90_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1a764cde1:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1cd6b9b90_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1a7649948:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1cd6b9b90_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1a76499ae:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1a7650cb2:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1cd6b9b90_IsPathSep(_1ce78e1e7_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1a7651576:;
									}
									_iter_end_1a7651576:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1a7650d5b:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1ce78e4a0_append(&_1286_out, 92LLU);
									};
									_1ce78e4a0_append(&_1286_out, '.');
									_1ce78e4a0_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1a765094e:;
						};
					}
				}
				else {
					_case_begin_1a76498d2:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1ce78e4a0_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I32 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_1cd6b9b90_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_1ce78e4a0_append(&_1286_out, '.');
										_1ce78e4a0_append(&_1286_out, 92LLU);
										goto _iter_end_1a764b42d;
									};
								}
							_iter_next_1a764b42d:;
							}
							_iter_end_1a764b42d:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_1cd6b9b90_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1ce78e4a0_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1a764c907:;
						}
						_iter_end_1a764c907:;;
					}
				}
				_match_end_1a76495a2:;
			};
		}
	_iter_next_1a7648e86:;
	}
	_iter_end_1a7648e86:;;
	if ((_1286_out._field_w == 0LL)) {
		_1ce78e4a0_append(&_1286_out, '.');
	};
	return _1ce790193_FromSlash(_1ce78e736_string(&_1286_out));;
}



inline jule::Str _1ce790193_FromSlash(jule::Str _21214_path) {
	;
	return _1ce78a325_ReplaceAll(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1));;
}



inline jule::Str _1ce7904d4_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1cd6bb4dd_join(_2269_elem);;
}



inline jule::Str _1ce79076a_Ext(jule::Str _2318_path) {
	jule::I32 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1cd6b9b90_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1a7654e4d:;
	}
	_iter_end_1a7654e4d:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1ce790a34_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1cd6bb29b_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1ce790ced_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1cd6b9b90_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1a76562e5:;
	}
	_iter_end_1a76562e5:;;
	(_25213_path).mut_slice(_1ce791419_VolumeName(_25213_path).len());;
	jule::I32 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1cd6b9b90_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1a7656aa9:;
	}
	_iter_end_1a7656aa9:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1ce7911c7_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1ce791419_VolumeName(_2838_path);;
	jule::I32 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1cd6b9b90_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1a7659b9a:;
	}
	_iter_end_1a7659b9a:;;
	jule::Str _2892_dir = _1ce78eabb_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1ce791419_VolumeName(jule::Str _30115_path) {
	return _1ce790193_FromSlash(_30115_path.slice(0LL, _1cd6ba83e_volumeNameLen(_30115_path)));;
}



inline void _1cd61978d_appendEscapeArg(_1e71a80b0_Builder* _10225_s, jule::Str _10246_arg) {
	if ((_10246_arg.len() == 0LL)) {
		({
			auto except = _1e71a90b1_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:104:3"));
			(except.result);
		});
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I32 _1106_i = 0LL;;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10246_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1a769719e:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1a769749b:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1a769737a:;
			};
		}
	_iter_next_1a7696d08:;
	}
	_iter_end_1a7696d08:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		({
			auto except = _1e71a90b1_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:122:3"));
			(except.result);
		});
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		({
			auto except = _1e71a9369_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:127:3"));
		});
		({
			auto except = _1e71a90b1_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:128:3"));
			(except.result);
		});
		({
			auto except = _1e71a9369_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:129:3"));
		});
		return;;
	};
	if (_1096_hasSpace) {
		({
			auto except = _1e71a9369_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:134:3"));
		});
	};
	jule::I32 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10246_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1a769a889:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1a769a944:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								({
									auto except = _1e71a9369_WriteByte(_10225_s, '\\');
									if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:145:5"));
								});
							}
						_iter_next_1a769b170:;
						}
						_iter_end_1a769b170:;;
						({
							auto except = _1e71a9369_WriteByte(_10225_s, '\\');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:147:4"));
						});
					}
				}
				else {
					_case_begin_1a769a3e4:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1a769a504:;
			};
			({
				auto except = _1e71a9369_WriteByte(_10225_s, _1393_c);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:151:3"));
			});
		}
	_iter_next_1a7699aa8:;
	}
	_iter_end_1a7699aa8:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				({
					auto except = _1e71a9369_WriteByte(_10225_s, '\\');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:155:4"));
				});
			}
		_iter_next_1a769bbed:;
		}
		_iter_end_1a769bbed:;;
		({
			auto except = _1e71a9369_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:157:3"));
		});
	};
}



inline jule::Str _1cd619a57_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_1e71a80b0_Builder _1646_s = static__1e71a892e_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a769c803:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_1e71a9dc5_Len(&_1646_s) > 0LL)) {
					({
						auto except = _1e71a9369_WriteByte(&_1646_s, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:167:4"));
					});
				};
				_1cd61978d_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1a769c803:;
			++it;
			goto _iter_begin_1a769c803;
		}
		_iter_end_1a769c803:;
	};
	return _1e71a9941_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1cd619e31_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1e7377702_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I32 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a769e44d:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_1cd602ee6_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1a769e44d:;
			++it;
			goto _iter_begin_1a769e44d;
		}
		_iter_end_1a769e44d:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a769d9e1:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_1a76a17b3:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_1e7377d0c_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1a76a17b3:;
						it += len;
						goto _iter_begin_1a76a17b3;
					}
				};
				_1916_b=_1e7377d0c_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1a769d9e1:;
			++it;
			goto _iter_begin_1a769d9e1;
		}
		_iter_end_1a769d9e1:;
	};
	_1916_b=_1e7377d0c_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I32 _1cd61a173_cmdErrorFromCode(jule::I32 _20221_code) {
	{
		auto &_match_expr{ _20221_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1a76a2c7b:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1a76a25d8:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1a76a2055:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1a769ec67:;
	};
}



inline jule::I32 _1cd61a382_getLastCmdError(void) {
	return _1cd61a173_cmdErrorFromCode(static_cast<jule::I32>(_1e73a6159_GetLastError()));;
}



inline jule::I32 _1cd61a849_getLastOsError(void) {
	jule::U32 _92_err = _1e73a6159_GetLastError();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a76a3bb1:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a76a3c27:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a76a3c8d:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a76a3d15:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1a76a3aa1:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1a76a3694:;
	};
}



inline jule::Bool _1cd62305a_isConsoleHandle(jule::Uintptr _10620_handle) {
	return (((_10620_handle == _1e73a4ac5_STDIN) || (_10620_handle == _1e73a4d6c_STDOUT)) || (_10620_handle == _1e73a5169_STDERR));;
}



inline void _1cd631134_Exit(jule::I32 _119_code) {
	_1e73ac24d_Exit(_119_code);
}



inline jule::Str _1cd631398_Executable(void) {
	return _1cc62b828_executable();;
}



inline jule::Slice<jule::Str> _1cd631563_Args(void) {
	return _1cc62b372_args();;
}



inline jule::Exceptional<jule::Str> _1cd6319c5_Getwd(void) {
	jule::Str _362_wd = _1cd62cdcd_Getwd();;
	if ((_362_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1cd61a849_getLastOsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_362_wd};;
}



inline jule::I32 _1ce797123_getLastFsError(void) {
	jule::I32 _412_err = _1e72e53c8_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a76d450a:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a76d440b:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a76d3d34:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a76d3d9a:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a76d3e11:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a76d3e88:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a76d4010:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a76d4087:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a76d46a3:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a76d472a:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a76d47a2:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a76d4829:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a76d48a1:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a76d4928:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a76d49a0:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a76d4a27:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a76d4a9e:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a76d4b26:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a76d4b9d:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a76d4c25:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a76d4c9c:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a76d4d24:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a76d4d9b:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a76d4e23:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a76d4e9a:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a76d5022:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a76d5099:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a76d5121:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1a76d3bad:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1a76d3cbd:;
	};
}



inline jule::Bool _1cc835db7_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1cc836192_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1cc8354d2_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a770bed3:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a770bed3:;
			++it;
			goto _iter_begin_1a770bed3;
		}
		_iter_end_1a770bed3:;
	};
	return false;;
}



inline jule::Bool _1cc83645b_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1cc833e09_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a770cd2a:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1a770cd2a:;
			++it;
			goto _iter_begin_1a770cd2a;
		}
		_iter_end_1a770cd2a:;
	};
	{
		auto expr = &(_1cc835b97_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a770cc2b:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1a770cc2b:;
			++it;
			goto _iter_begin_1a770cc2b;
		}
		_iter_end_1a770cc2b:;
	};
	return false;;
}



inline jule::Str _1e71b78e9_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _1e71b8389_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _1e71b7c07_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a77100c4:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1a771036b:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a77103d2:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1a7710305:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1a771028e:;
	};
}



inline jule::I32 _1e71b7ec1_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a770e7aa:;
		if (it != expr_end) {
			jule::I32 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1a770e7aa:;
			++it;
			_3426_i++;
			goto _iter_begin_1a770e7aa;
		}
		_iter_end_1a770e7aa:;
	};
	return -1LL;;
}



inline jule::Str _1e71b8389_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_1e71a80b0_Builder _3516_s = static__1e71a892e_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7712aee:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I32 _3533_i = _1e71b7ec1_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1a7712aee;
				};
				({
					auto except = _1e71a90b1_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:357:3"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&_3516_s, _1e71b7c07_argToStr((*(_3529_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1a7712aee:;
			++it;
			goto _iter_begin_1a7712aee;
		}
		_iter_end_1a7712aee:;
	};
	({
		auto except = _1e71a90b1_WriteStr(&_3516_s, _35017_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:361:2"));
		(except.result);
	});
	return _1e71a9941_Str(&_3516_s);;
}



inline jule::Bool _1e71b9335_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1e71ba798_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1e71baaa6_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1e71bad70_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1e71bb1b1_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1e71bb447_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1e71bb711_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1e71bb9ca_IsUnix(jule::Str _5511_os) {
	return (_1e71baaa6_IsDarwin(_5511_os) || _1e71bad70_IsLinux(_5511_os));;
}



inline jule::Bool _1e71bbda4_Is32Bit(jule::Str _5812_arch) {
	return _1e71bb1b1_IsI386(_5812_arch);;
}



inline jule::Bool _1e71bc0e6_Is64Bit(jule::Str _6112_arch) {
	return (_1e71bb447_IsAmd64(_6112_arch) || _1e71bb711_IsArm64(_6112_arch));;
}



inline void _1ce799015_init(void) {
	jule::Str _256_path = _1cd631398_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1ce798564_PathWd=({
			auto except = _1cd6319c5_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1ce7982cd_PathExec=_1ce7911c7_Dir(_256_path);
		_1ce79807a_PathStdlib=_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1ce7982cd_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1ce798861_PathApi=_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1ce7982cd_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1b45232b5_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1b45235c3_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1b452388c_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1b4523bcd_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1b4526241_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a75a274c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b452c148_IsInf(_4714_f, 0LL) || _1b452b9b6_IsNaN(_4714_f)) {
			_case_begin_1a75a27e6:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a75a265e:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b452c412_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1b452388c_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1b4523bcd_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1b452b6a8_NaN(void) {
	return _1b4523bcd_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1b452b9b6_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1b452bc80_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1b4523bcd_F64FromBits(9218868437227405312LLU);;
	};
	return _1b4523bcd_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1b452c148_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b452c412_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b452e7bb_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b452ddd6_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b452b9b6_IsNaN(_1118_x) || _1b452c148_IsInf(_1118_x, 1LL)) {
			_case_begin_1a75dda1e:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a75ddab8:;
			{
				return _1b452b6a8_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a75ddb2e:;
			{
				return _1b452bc80_Inf(-1LL);;
			}
		}
		_match_end_1a75dd953:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b4526241_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1b452e7bb_Abs(jule::F64 _438_x) {
	return _1b4523bcd_F64FromBits((_1b452388c_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b453633e_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1b452e7bb_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1a791cd2b:;
		}
		_iter_end_1a791cd2b:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1b4536b47_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b4526241_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1b452ddd6_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1b4560731_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1e73d320d_StrFromBytes(_1b4560d19_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1b45641c4_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1b4560d19_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b455e554_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a78603ab:;
			{
				_886_bits=static_cast<jule::U64>(_1b45232b5_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1b455e554_floatInfo>)((&(_1b455e91c_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a78600e2:;
			{
				_886_bits=_1b452388c_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1b455e554_floatInfo>)((&(_1b455ec19_f64info))));
			}
		}
		else {
			_case_begin_1a785dd9e:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1a785ec6d:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1a7864206:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1a7865944:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1a7865a32:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1a78652c3:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1a78651b3:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a78642e4:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1a78633ae:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1a7863557:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1b4563349_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1b45639cb_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1b456019d_decimalSlice _1376_digs = _1b456019d_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1b456de59_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a78686c2:;
				{
					_8758_prec=_1b45641c4_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a78696d4:;
				{
					_8758_prec=_1b45641c4_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a786974a:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1a78688e2:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a786b6d6:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a786b7a2:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1a786b241:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1a786b351:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1b456cba0_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1b456d145_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1b4561523_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1b4561be9_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1b4561523_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1b455e554_floatInfo* _18824_flt) {
	_1b4572c3d_decimal _1896_d = _1b4572c3d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1b4573128_assign(&_1896_d, _1882_mant);
	_1b45733d1_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_1b456019d_decimalSlice _1926_digs = _1b456019d_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1b4562117_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1b456019d_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7872665:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7873468:;
				{
					_18733_prec=_1b45641c4_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a78734ce:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1a78732d1:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a787238a:;
				{
					_1b4573bea_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7872401:;
				{
					_1b4573bea_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7872467:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1b4573bea_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1a78749b9:;
		};
		_1926_digs=_1b456019d_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1b4561be9_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1b4561be9_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b456019d_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a7877b54:;
			{
				return _1b45626ab_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a7877bba:;
			{
				return _1b4562b95_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a7877c31:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1b45626ab_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1b4562b95_fmtF(_22418_dst, _22447_neg, _2252_digs, _1b45641c4_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1a7877a99:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1b4562117_roundShortest(_1b4572c3d_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1b455e554_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1b4572c3d_decimal _2926_upper = _1b4572c3d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1b4573128_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1b45733d1_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1b4572c3d_decimal _3116_lower = _1b4572c3d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1b4573128_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1b45733d1_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1a7883d5d;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1a7888b10:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1a7888ba9:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1a7888c20:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1a7888a33:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1a788b5c4:;
					{
						_1b4573bea_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1a788b66d:;
					{
						_1b4573689_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1a788b6d4:;
					{
						_1b4573942_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1a7888c86:;
			};
		}
	_iter_next_1a7883d5d:;
	}
	_iter_end_1a7883d5d:;;
}



inline jule::Slice<jule::U8> _1b45626ab_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b456019d_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _1b4563d50_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a78905b7:;
		}
		_iter_end_1a78905b7:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1a7892ca1:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1a7892e5a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a789271d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _4306_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a78925b9:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1b4562b95_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b456019d_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _1b4563d50_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a7896a74:;
		}
		_iter_end_1a7896a74:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1a7897d83:;
		}
		_iter_end_1a7897d83:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1b4563349_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1b455e554_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b4577e30_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b4577e30_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1b45639cb_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1b455e554_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1a789cb79:;
	}
	_iter_end_1a789cb79:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>(({ jule::I32 __jule_x = _51126_prec; jule::I32 __jule_y = 2LLU; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1a78a309c:;
		}
		_iter_end_1a78a309c:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1a78a4b1a:;
		}
		_iter_end_1a78a4b1a:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1b4564d62_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1a78a1e9c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1a78a75bd:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a78a6c0a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a78a6a73:;
	};
	return _51113_dst;;
}



inline jule::I32 _1b4563d50_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1b45641c4_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1b4564d62_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1b3ee0843_ConvError _1b45652d5_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b3ee0843_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a78acd54:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a78acc88:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1b4564d62_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a78ae806:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b4564d62_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a78ae8e4:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b4564d62_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a78ae4a4:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a78ae43d:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a78ae361:;
					};
				};
			}
		}
		else {
			_case_begin_1a78ac1a5:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a78ac738:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=32LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a78b381b:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a78b34ec:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a78ada58:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1a78b3486:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a78b3563:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a78ae020:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a78b4960:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a78b590b:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1a78b6bc6:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1b4564d62_lower(_1099_c)) && (_1b4564d62_lower(_1099_c) <= 'z'))) {
						_case_begin_1a78b6b0a:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1b4564d62_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1a78b66ed:;
						{
							goto _iter_next_1a78b590b;
						}
					}
					else {
						_case_begin_1a78b6687:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a78b6610:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1a78b590b:;
			++it;
			goto _iter_begin_1a78b590b;
		}
		_iter_end_1a78b590b:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b4565714_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1b3ee0843_ConvError __jule_assign_result = _1b45652d5_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1b4565bba_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1b3ee0843_ConvError __jule_assign_result = _1b45652d5_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=32LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = static_cast<jule::U32>((_17240_bitSize - 1LL)); ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1b4566858_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1b4523bcd_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1cc793088_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U32 __jule_y = static_cast<jule::U32>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(_4122_man, _1b4567639_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(_4122_man, _1b4567639_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b4523bcd_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b4566c43_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1b45235c3_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1cc793088_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U32 __jule_y = static_cast<jule::U32>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(_11022_man, _1b4567639_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(_11022_man, _1b4567639_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b45235c3_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1b456896a_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1a7ba6d51:;
	}
	_iter_end_1a7ba6d51:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b4568c78_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a7baa739:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1a7baa7b1;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a7baa7b1:;
			{
				jule::I32 _887_caseN = _1b456896a_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1b452bc80_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a7baa827:;
			{
				if ((_1b456896a_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1b452b6a8_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a7baa690:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b4569042_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a7bb0a3b:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a7bb0e37:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a7bb09c5:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1b4564d62_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1a7bb5dd7:;
					{
						goto _iter_next_1a7bb536a;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1a7bb5e81:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1a7bb9a9a;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1a7bb536a;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1a7bb5ee7:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1a7bb536a;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a7bb536a;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1b4564d62_lower(_1383_c))) && (_1b4564d62_lower(_1383_c) <= 'f'))) {
					_case_begin_1a7bb605d:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1b4564d62_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a7bb536a;
					}
				}
				_match_end_1a7bb5ce9:;
			};
			goto _iter_end_1a7bb536a;
		}
	_iter_next_1a7bb536a:;
	}
	_iter_end_1a7bb536a:;;
	_julec_label_1a7bb9a9a:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1b4564d62_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a7bbd252;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1a7bbd252:;
		}
		_iter_end_1a7bbd252:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b456aa8d_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U32 __jule_y = _1b455ec19_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a7bc627c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a7bc62e3:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b4569e55_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b4569e55_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a7bc6359:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1b4569e55_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a7bc618e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b456aebc_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U32 __jule_y = _1b455e91c_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a7bca4e5:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a7bca55b:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b456a285_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b456a285_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a7bca5c2:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1b456a285_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a7bca407:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b3ee0843_ConvError _1b456b561_atofHex(_1b455e554_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b3ee0843_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((static_cast<jule::I32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1a7bcdd9a:;
	}
	_iter_end_1a7bcdd9a:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a7bd1177:;
	}
	_iter_end_1a7bd1177:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a7bd1551:;
	}
	_iter_end_1a7bd1551:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1b455e554_floatInfo_eq(&(*(_55613_flt)), _1b455e91c_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b45235c3_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1b4523bcd_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b3ee0843_ConvError _1b456b93a_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b3ee0843_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4568c78_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4569042_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b3ee0843_ConvError __jule_assign_result = _1b456b561_atofHex(&(_1b455e91c_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b456aebc_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b4566c43_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b4566c43_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b4572c3d_decimal _6676_d = _1b4572c3d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1b4569707_set(&_6676_d, _1e73d2bad_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b4569a48_floatBits(&_6676_d, &(_1b455e91c_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b45235c3_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError _1b456bb7c_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4568c78_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4569042_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b3ee0843_ConvError __jule_assign_result = _1b456b561_atofHex(&(_1b455ec19_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b456aa8d_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b4566858_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b4566858_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b4572c3d_decimal _7246_d = _1b4572c3d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1b4569707_set(&_7246_d, _1e73d2bad_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b4569a48_floatBits(&_7246_d, &(_1b455ec19_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b4523bcd_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError _1b456c001_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b3ee0843_ConvError __jule_assign_result = _1b456b93a_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b456bb7c_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b456c375_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b3ee0843_ConvError __jule_assign_result = _1b456c001_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1b456cba0_ryuFtoaFixed32(_1b456019d_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1cc79a656_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U32 __jule_y = static_cast<jule::U32>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I32>(_632_b) - 25LL);
	};
	jule::I32 _742_q = (((-(_1b456e1e0_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4570ad7_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1b457138a_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _942_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U32 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1b456d981_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1b456d145_ryuFtoaFixed64(_1b456019d_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1cc79a920_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U32 __jule_y = static_cast<jule::U32>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I32>(_1322_b) - 55LL);
	};
	jule::I32 _1462_q = (((-(_1b456e1e0_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4571016_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1b457138a_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _1662_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U32 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1b456d981_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1b456d981_formatDecimal(_1b456019d_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _1b456d486_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a7c14d37:;
	}
	_iter_end_1a7c14d37:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1a7c17ee4:;
	}
	_iter_end_1a7c17ee4:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1a7c1d9ab:;
	}
	_iter_end_1a7c1d9ab:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1b456de59_ryuFtoaShortest(_1b456019d_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1b455e554_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1cc794b7d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U32 __jule_y = static_cast<jule::U32>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1b4570037_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b456e8d8_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1b4570037_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_1b456e1e0_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1b455e554_floatInfo_eq(&(*(_26168_flt)), _1b455e91c_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4570ad7_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4570ad7_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4570ad7_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4571016_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4571016_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b4571016_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1b457138a_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1b457138a_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1b457138a_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _3252_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1b4570037_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _1b456e1e0_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1b456e4a9_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b456e8d8_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1b455e554_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1b4570037_ryuDigits(_1b456019d_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b4571654_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b4571654_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b4571654_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1b45706a8_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1b45706a8_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1a7c3b7ed:;
		}
		_iter_end_1a7c3b7ed:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_1b45706a8_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a7c3c3ae:;
	}
	_iter_end_1a7c3c3ae:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1a7c3e1d5:;
	}
	_iter_end_1a7c3e1d5:;;
}



inline void _1b45706a8_ryuDigits32(_1b456019d_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1a7c41a78;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a7c41a78:;
	}
	_iter_end_1a7c41a78:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1a7c47b39:;
	}
	_iter_end_1a7c47b39:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b4570ad7_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1b4567639_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b456e4a9_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b4571016_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1b4567639_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b456e4a9_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79b6ac_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b457138a_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1a7c55bad:;
	}
	_iter_end_1a7c55bad:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b4571654_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _6072_hi;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1cc79ceb6_Mul64(({ jule::U64 __jule_x = _60214_x; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }), 9903520314283042200LLU);
		_6072_hi = __jule_assign_result.__jule_result_arg0;
	});
	jule::U64 _6082_q = (_6072_hi >> 28LLU);;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(_6082_q);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((jule::U64)(_60214_x - (jule::U64)(_6082_q * 1000000000LL)));
	return __jule_func_result;;
}



inline void _1b457458b_trim(_1b4572c3d_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1a7c59134:;
	}
	_iter_end_1a7c59134:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1b4574877_rightShift(_1b4572c3d_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1a7c5c324:;
				}
				_iter_end_1a7c5c324:;;
				goto _iter_end_1a7c5ac3a;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1a7c5ac3a:;
	}
	_iter_end_1a7c5ac3a:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _28432_k; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1a7c5d721:;
	}
	_iter_end_1a7c5d721:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_1a7c60ab9:;
	}
	_iter_end_1a7c60ab9:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1b457458b_trim(_28420_a);
}



inline jule::Bool _1b4574d2d_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1a7c63803:;
	}
	_iter_end_1a7c63803:;;
	return false;;
}



inline void _1b45750d6_leftShift(_1b4572c3d_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _1b4572655_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1b4574d2d_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1b4572655_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U32 __jule_x = (jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U32 __jule_y = _35231_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1a7c66d23:;
	}
	_iter_end_1a7c66d23:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1a7c693a8:;
	}
	_iter_end_1a7c693a8:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1b457458b_trim(_35219_a);
}



inline jule::Bool _1b457545a_shouldRoundUp(_1b4572c3d_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1b4576b32_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1b4577605_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b4577e30_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1b4576eea_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1b4577605_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b4577e30_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1b45772b4_Itoa(jule::I32 _819_i) {
	return _1b4576eea_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1b4577605_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1e73d320d_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1b457788b_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b4577e30_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1a726a745:;
			{
				{
					while ((_10533_u >= 1000000000LL)) {
						{
							jule::U64 _1325_q = (_10533_u / 1000000000LL);;
							jule::U32 _1339_us = static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1325_q * 1000000000LL)));;
							jule::I32 _1349_j = 4LL;;
							for (; (_1349_j > 0LL); (_1349_j)--) {
								{
									jule::U32 _1366_is = ({ jule::U32 __jule_x = (_1339_us % 100LL); jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });;
									_1339_us=(_1339_us / 100LLU);
									_1126_i-=2LL;
									_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1366_is + 1LLU)));
									_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1366_is));
								}
							_iter_next_1a726ce51:;
							}
							_iter_end_1a726ce51:;;
							(_1126_i)--;
							_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(({ jule::U32 __jule_x = _1339_us; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) + 1LLU)));
							_10533_u=_1325_q;
						}
					_iter_next_1a726c516:;
					}
					_iter_end_1a726c516:;;
				};
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = ({ jule::U32 __jule_x = (_1547_us % 100LL); jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_1a726c307:;
				}
				_iter_end_1a726c307:;;
				jule::U32 _1643_is = ({ jule::U32 __jule_x = _1547_us; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_1b457788b_isPowerOfTwo(_10541_base)) {
			_case_begin_1a726ae4e:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1cc793ece_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U32 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1a7274dae:;
				}
				_iter_end_1a7274dae:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1a72697aa:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1a726a525:;
				}
				_iter_end_1a726a525:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1a7269a96:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1e73d320d_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1b457987c_Throw(jule::Str _910_msg) {
	jule::println(_1a68cc6b0_toStr(_910_msg));
	_1cd631134_Exit(1LL);
}



inline jule::Bool _1a463d874_IsUnaryOp(jule::U32 _33314_id) {
	{
		auto expr = &(_1a4590254_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72d348e:;
		if (it != expr_end) {
			jule::U32 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1a72d348e:;
			++it;
			goto _iter_begin_1a72d348e;
		}
		_iter_end_1a72d348e:;
	};
	return false;;
}



inline jule::Bool _1a463db82_IsBinOp(jule::U32 _34312_id) {
	{
		auto expr = &(_1a459052e_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72d3c86:;
		if (it != expr_end) {
			jule::U32 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1a72d3c86:;
			++it;
			goto _iter_begin_1a72d3c86;
		}
		_iter_end_1a72d3c86:;
	};
	return false;;
}



inline jule::Bool _1a463e28c_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1a463e523_IsRawStr(_36310_k)));;
}



inline jule::Bool _1a463e523_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1a463e7dc_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1a46401c2_IsFloat(jule::Str _37912_k) {
	if (_1ce7841cb_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1ce789588_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1ce789588_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a464048b_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1a4640a1e_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1a4640cd8_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1a464136b_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1a4590045_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72db376:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1a72db376:;
			++it;
			goto _iter_begin_1a72db376;
		}
		_iter_end_1a72db376:;
	};
	return false;;
}



inline jule::Bool _1a4641866_IsLetter(jule::I32 _42813_r) {
	return _1ce716218_IsLetter(_42813_r);;
}



inline jule::Bool _1a4641cd9_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1a4646030_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72dd7eb:;
		if (it != expr_end) {
			_1a4645b45_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1a72dd7eb:;
			++it;
			goto _iter_begin_1a72dd7eb;
		}
		_iter_end_1a72dd7eb:;
	};
	return false;;
}



inline jule::Bool _1a46420a3_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1a464236c_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1a4642636_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1a4642900_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1a72e0831:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1a72e08ca:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1a72e0952:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a72e01e3:;
			{
				return false;;
			}
		}
		_match_end_1a72e02e2:;
	};
}



inline jule::Bool _1a4642bb9_IsAssign(jule::U32 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U32>(1LLU)) || (_48213_id == static_cast<jule::U32>(27LLU))) || (_48213_id == static_cast<jule::U32>(30LLU))) || (_48213_id == static_cast<jule::U32>(32LLU))) || (_48213_id == static_cast<jule::U32>(24LLU))) || (_48213_id == static_cast<jule::U32>(74LLU))) || (_48213_id == static_cast<jule::U32>(62LLU))) || (_48213_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1a4642e83_IsPostfixOp(jule::U32 _49416_id) {
	{
		auto expr = &(_1a463761a_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72e3b86:;
		if (it != expr_end) {
			jule::U32 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1a72e3b86:;
			++it;
			goto _iter_begin_1a72e3b86;
		}
		_iter_end_1a72e3b86:;
	};
	return false;;
}



inline jule::Bool _1a464324c_IsAssignOp(jule::U32 _50415_id) {
	if (_1a4642e83_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1a4637906_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72e4109:;
		if (it != expr_end) {
			jule::U32 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1a72e4109:;
			++it;
			goto _iter_begin_1a72e4109;
		}
		_iter_end_1a72e4109:;
	};
	return false;;
}



inline _1e71b7487_Log _1a464689e_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1a4643a11_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1e71b78e9_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1a4646c67_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72ee91c:;
		if (it != expr_end) {
			jule::I32 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1a72ee91c:;
			++it;
			_1156_i++;
			goto _iter_begin_1a72ee91c;
		}
		_iter_end_1a72ee91c:;
	};
	return true;;
}



inline jule::Str _1a46470db_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1a46420a3_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1a7302c2d;
			};
		}
	_iter_next_1a7302c2d:;
	}
	_iter_end_1a7302c2d:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1a46474a4_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i) {
	return _1a46470db_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1a4647828_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1a7304a98:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1a46420a3_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1a730588a:;
					{
						goto _iter_next_1a73043c2;
					}
				}
				else if (_1a46491a9_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1a7305934:;
					{
						return _1a46474a4_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1a7305813:;
					{
						goto _iter_end_1a73043c2;
					}
				}
				_match_end_1a730579c:;
			};
		}
	_iter_next_1a73043c2:;
	}
	_iter_end_1a73043c2:;;
	return jule::Str();;
}



inline jule::Str _1a4647b9c_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i) {
	_18236_i+=2LL;
	return _1a46470db_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1a4648021_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i) {
	(_18735_i)++;
	return _1a46470db_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1a46484a5_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1e73d320d_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1e73d320d_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1a46470db_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1a46420a3_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1a730866d;
			};
		}
	_iter_next_1a730866d:;
	}
	_iter_end_1a730866d:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1a46486e7_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2186_i = 0LL;;
	_julec_label_1a730a85c:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1a730b5c7:;
					{
						__jule_func_result = _1a46484a5_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1a730b671:;
					{
						goto _iter_next_1a730a9a0;
					}
				}
				else if (_1a4648d35_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1a730b6d7:;
					{
						__jule_func_result = _1a46470db_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a46420a3_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1a730b74d:;
					{
						goto _iter_end_1a730a9a0;
					}
				}
				_match_end_1a730b4ea:;
			};
		}
	_iter_next_1a730a9a0:;
	}
	_iter_end_1a730a9a0:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1a46489b1_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a4646c67_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1a464236c_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1a730e07a;
			};
		}
	_iter_next_1a730e07a:;
	}
	_iter_end_1a730e07a:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1a4648d35_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1a46491a9_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1a464952d_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1a7311d6e:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1a46420a3_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1a7312c2c:;
					{
						goto _iter_next_1a7311a50;
					}
				}
				else if (_1a46491a9_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1a7312cc6:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a7312ba5:;
					{
						goto _iter_end_1a7311a50;
					}
				}
				_match_end_1a7312b3e:;
			};
		}
	_iter_next_1a7311a50:;
	}
	_iter_end_1a7311a50:;;
	return false;;
}



inline jule::Bool _1a46498a2_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1a7313d60:;
			{
				goto _case_begin_1a7312479;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1a7312479:;
			{
				goto _case_begin_1a7313de8;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1a7313de8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a73123d0:;
			{
				return true;;
			}
		}
		_match_end_1a7312303:;
	};
}



inline jule::Bool _1a4649c26_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1a7315988:;
			{
				goto _case_begin_1a73159ee;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1a73159ee:;
			{
				goto _case_begin_1a7315a65;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1a7315a65:;
			{
				goto _case_begin_1a7315adc;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1a7315adc:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a73158bc:;
			{
				return true;;
			}
		}
		_match_end_1a731546b:;
	};
}



inline jule::Str _1a464a221_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I32 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a46484a5_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1a4648d35_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1a46470db_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1a4642636_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1a731a042;
			};
		}
	_iter_next_1a731a042:;
	}
	_iter_end_1a731a042:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1a464a3ec_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3706_i = 2LL;;
	_julec_label_1a731dc05:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1a46498a2_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1a731e871:;
					{
						__jule_func_result = _1a4648021_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a4649c26_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1a731e91a:;
					{
						__jule_func_result = _1a4647b9c_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a46491a9_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1a731e981:;
					{
						__jule_func_result = _1a46474a4_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a464952d_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1a731e9e7:;
					{
						__jule_func_result = _1a4647828_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1a4642900_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1a731ea5d:;
					{
						goto _iter_end_1a731dc9e;
					}
				}
				_match_end_1a731e783:;
			};
		}
	_iter_next_1a731dc9e:;
	}
	_iter_end_1a731dc9e:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1a464a74e_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1a4642900_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a7321400:;
	}
	_iter_end_1a7321400:;;
	__jule_func_result=_1e73d320d_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1a464aa18_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1a464a74e_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1a464acd2_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1a464a74e_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1a464b09b_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1a464a74e_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1a464b365_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a4642636_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1a4642636_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1a4642636_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1e73d320d_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1e71b7487_Log> _1a4651359_Lex(jule::Ptr<_1a4643a11_Fileset> _80712_f, jule::I32 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1a464bad5_lex _8126_lex = _1a464bad5_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1a463d137_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1e71b7487_Log>(nullptr)};;
	_1a464e92e_newLine(&_8126_lex);
	_1a464c70c_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1a470e0a4_lshiftUnsig(_1a4276798_Const* _58821_c, _1a4276798_Const* _58832_x) {
	jule::U64 _5892_l = _1a47079e8_AsU64(_58821_c);;
	jule::U64 _5902_r = _1a47079e8_AsU64(_58832_x);;
	_1a47082e0_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1a470e3d4_rshiftUnsig(_1a4276798_Const* _59421_c, _1a4276798_Const* _59432_x) {
	jule::U64 _5952_l = _1a47079e8_AsU64(_59421_c);;
	jule::U64 _5962_r = _1a47079e8_AsU64(_59432_x);;
	_1a47082e0_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1a47942b0_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1a7c81ea3:;
			{
				return _1a47937cb_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1a7c858d0:;
			{
				return _1a4793a84_SysUint;;
			}
		}
		else {
			_case_begin_1a7c829a9:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a7c85b11:;
	};
}



inline jule::I32 _1a4794579_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1a7c8689d:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1a7c86d10:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a7c86d76:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a7c86914:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1a7c8697a:;
			{
				return _1a4793567_BitSize;;
			}
		}
		else {
			_case_begin_1a7c86c22:;
			{
				return -1LL;;
			}
		}
		_match_end_1a7c867e3:;
	};
}



inline jule::Str _1a47948ba_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a7c89d02:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a7c89b04:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a7c89b6a:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a7c89d68:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1a7c89a16:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7c895e8:;
	};
}



inline jule::Str _1a4794b51_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a7c8b5b7:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a7c8b62d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a7c8b694:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a7c8b70a:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1a7c89de0:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7c8b1cc:;
	};
}



inline jule::Str _1a4794e1a_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a7c8d0d0:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a7c8cd9e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1a7c8a1dc:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7c8c992:;
	};
}



inline jule::Bool _1a4795a20_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1b456c375_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1a4795cd9_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a7c93019:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a7c91545:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a7c91479:;
	};
}



inline jule::I32 _1a47960a3_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a7c93c62:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a7c932b1:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a7c93327:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a7c93239:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a7c93855:;
	};
}



inline jule::I32 _1a479636c_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a7c95813:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a7c949ee:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a7c94a65:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a7c94988:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a7c94dd9:;
	};
}



inline void _1a4796515_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1ce798dc2_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1a7c9623c:;
				{
					_1a4793567_BitSize=64LLU;
					_1a47937cb_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1a4793a84_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1a7c96869:;
				{
					_1a4793567_BitSize=32LLU;
					_1a47937cb_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1a4793a84_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1a7c9677b:;
		};
	};
}



inline void _1a479668b_init(void) {
	_1a4796515_UpdateTarget();
}



inline jule::I64 _1a479a250_MinI(jule::Str _6113_k) {
	_6113_k=_1a47942b0_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1a7c98cde:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1a7c990ec:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1a7c99163:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1a7c991c9:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a7c95b98:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7c95c64:;
	};
}



inline jule::I64 _1a479a55d_MaxI(jule::Str _7913_k) {
	_7913_k=_1a47942b0_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1a7db2d3c:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1a7db2da3:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1a7db2e19:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1a7db2e80:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a7d685d9:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7db2a51:;
	};
}



inline jule::U64 _1a479a827_MaxU(jule::Str _9713_k) {
	_9713_k=_1a47942b0_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1a7c9a197:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1a7c9a20d:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1a7c9a274:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1a7c9a2da:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a7c99251:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a7c99cac:;
	};
}



inline jule::F64 _1a479ab68_Min(jule::Str _11512_k) {
	_11512_k=_1a47942b0_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1a479a250_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a7c9cc27:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a7c9c177:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a7c9c3db:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7c9c111:;
	};
}



inline jule::F64 _1a479adee_Max(jule::Str _13312_k) {
	_13312_k=_1a47942b0_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1a479a55d_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1a479a827_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a7ca0235:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a7c9e60d:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a7c9e8e9:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7c9e597:;
	};
}



inline jule::Bool _1a479c021_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1a479c32e_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1a479c5e8_IsInt(jule::Str _4610_k) {
	return (_1a479c021_IsSigInt(_4610_k) || _1a479c32e_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a479c939_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1a479cbc0_IsNum(jule::Str _5610_k) {
	return (_1a479c5e8_IsInt(_5610_k) || _1a479c939_IsFloat(_5610_k));;
}



inline jule::Bool _1a479ce89_IsSigNum(jule::Str _6113_k) {
	return (_1a479c021_IsSigInt(_6113_k) || _1a479c939_IsFloat(_6113_k));;
}



inline jule::Bool _1a482585d_FindModuleFile(jule::Slice<_1cd5ae502_Dir>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ca6109:;
		if (it != expr_end) {
			_1cd5ae502_Dir *_149_d = it;
			{
				if (((!(_1cd620d38_IsDir(&(*(_149_d))._field_Stat))) && (*(_149_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a7ca6109:;
			++it;
			goto _iter_begin_1a7ca6109;
		}
		_iter_end_1a7ca6109:;
	};
	return false;;
}



inline jule::Str _1a4825a6c_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<_1cd5ae502_Dir> _277_dirents = ({
				auto except = static__1ce791936_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a7ca6538;
				} jule::Slice<_1cd5ae502_Dir>(nullptr);});
			});;
			jule::Bool _313_exist = _1a482585d_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I32 _363_n = _2527_path.len();;
			_2527_path=_1ce7911c7_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1a7ca6538;
			};
		}
	_iter_next_1a7ca6538:;
	}
	_iter_end_1a7ca6538:;;
	return jule::Str();;
}



inline jule::Slice<_1e71b7487_Log> _1a4825d36_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__1cd61e474_Read(_1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1e71b7487_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1ce78ba30_Trim(_1e73d2e44_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1e71b7487_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1a48265c8_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1ce782a59_IsUpper(_142_r);;
}



inline jule::Bool _1a4889493_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a4870e2a_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_1a488bd14_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a488b3b8_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a488b709_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cb36cc:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1a7cb36cc;
				};
			}
			_iter_next_1a7cb36cc:;
			++it;
			goto _iter_begin_1a7cb36cc;
		}
		_iter_end_1a7cb36cc:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a488c1aa_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1cc6229b7_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1a7cb4898:;
	}
	_iter_end_1a7cb4898:;;
	return _1e73d320d_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a488b990_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a7cb7acc:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a7cb82d6:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a7cb834c:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a7cb83b3:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a7cb8429:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a7cb84a1:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a7cb8528:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a7cb85a0:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a7cb8627:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a7cb869e:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a7cb814e:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a488bd14_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a488b990_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a7cbd2db:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1b4565714_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a7cbd5e9:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1b4565714_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a7cbd671:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b4565714_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1a7cbbdde:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b4565714_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1a7cbc131:;
	};
}



inline void _1a488c1aa_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _1a488bd14_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1cc6229b7_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _1a494c831_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I32 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1a7cc5c2d:;
	}
	_iter_end_1a7cc5c2d:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a49543c6_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _292_start = (*(_2824_i));;
	jule::I32 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I32 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc6215cb_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1a7cc86ae:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a7cc8725:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1a7cc8879:;
			};
		}
	_iter_next_1a7cc7933:;
	}
	_iter_end_1a7cc7933:;;
	return nullptr;;
}



inline void _1a49546b2_FmtByDefault(_1e71a80b0_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1e71a90b1_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1a7cc7bec:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4560731_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type138)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7cca7b0:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4560731_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1a7cca826:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576eea_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type139)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1a7cca88c:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576eea_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type140)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a7cca903:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576eea_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7cca02e:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576eea_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1a7cca0a6:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576b32_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type137)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1a7cca12d:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576b32_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type141)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1a7ccab67:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576b32_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type142)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7ccabcd:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1b4576b32_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a7ccac44:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a7ccacaa:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1e71a90b1_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1e71a90b1_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1a7cc998a:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_4822_buf, _1a68ca4d2_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1a7cc9924:;
	};
}



inline void _1a4954ad0_applyFmtByDefault(_1e71a80b0_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1a49546b2_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1a4954eed_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1e71a80b0_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1a4954ad0_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1e71a90b1_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1e71a8c70_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1a4955372_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1e73d2bad_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1216_i = _1a494c831_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1256_j = 0LL;;
	jule::I32 _1266_last = 0LL;;
	_1e71a80b0_Builder _1276_buf = static__1e71a892e_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1a494c831_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1e71a8c70_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1a49543c6_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1a7cd7ca6;
			};
			_1a4954eed_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1e71a8c70_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1a7cd7ca6;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1a7cd7ca6:;
	}
	_iter_end_1a7cd7ca6:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1e71a8c70_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1e71aa3e2_Buf(&_1276_buf);;
}



inline jule::Str _1a495751c_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1e73d320d_StrFromBytes(_1a4955372_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1a471dc62_Fn> _1a4319a4a_runtimeFindFn(jule::Ptr<_1a480c3d3_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1a471dc62_Fn> _126_f = _1a480d9de_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a431a09a_runtimeFindStruct(jule::Ptr<_1a480c3d3_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1a4673ec5_Struct> _256_f = _1a480d5e3_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1a47240ec_parameterUsesGenerics(jule::Ptr<_1a4720bba_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _39546_generics) {
	if (_1a471c8dc_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a4901681_kindUsesGenerics(&((*((*(_39531_p))))._field_Type), _39546_generics);;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c2c28_buildAsComptimeMethodData(jule::Ptr<_1a4721d20_FnIns>* _203035_f) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a47c2e37_findComptimePackage(jule::Ptr<_1a48293cd_sema>* _203829_s) {
	return _1a48298a6_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>>((void*)__jule_anon1a4b42619, nullptr, nullptr));;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c32ab_buildComptimeTypeInfoData(jule::Ptr<_1a48293cd_sema>* _204435_s, jule::Ptr<_1a48d54cd_Type>* _204450_t) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a4828c4b_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a47c35ec_buildComptimeValue(jule::Ptr<_1a48a2753_Data>* _205228_d) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47b5149_comptimeValue>(_1a47b5149_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Str _1a47c6424_toStrConstraints(jule::Ptr<_1a48d3ae7_InsGeneric> _14321_g) {
	_1e71a80b0_Builder _1446_sb = static__1e71a892e_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a844dd01:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_1a48d54cd_Type> *_1459_c = it;
			{
				({
					auto except = _1e71a90b1_WriteStr(&_1446_sb, _1a48d58c9_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1e71a90b1_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1a844dd01:;
			++it;
			_1456_i++;
			goto _iter_begin_1a844dd01;
		}
		_iter_end_1a844dd01:;
	};
	return _1e71a9941_Str(&_1446_sb);;
}



inline jule::Bool _1a47c67dc_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a48d54cd_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1a8450bb0:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _1573_prim = _1a48d7b84_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1a479ce89_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1a8450c26:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _1633_prim = _1a48d7b84_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1a479c32e_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1a8450c8c:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _1693_prim = _1a48d7b84_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1a479c939_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1a8450d14:;
			{
				jule::Ptr<_1a48dd5e6_Prim> _1753_prim = _1a48d7b84_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1a479cbc0_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1a8450ee0:;
			{
				return _1a48d6db4_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1a8451056:;
			{
				return (!(_1a48d6db4_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1a84510bc:;
			{
				return _1a48d6b2d_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1a8451133:;
			{
				return _1a48d714a_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1a844e5c6:;
			{
				return false;;
			}
		}
		_match_end_1a8450a5b:;
	};
}



inline jule::Bool _1a47c6aa6_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a47c47da_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8456b3e:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1a8456b3e:;
			++it;
			goto _iter_begin_1a8456b3e;
		}
		_iter_end_1a8456b3e:;
	};
	return false;;
}



inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47c948d_newScopeCheckerBase(jule::Ptr<_1a48293cd_sema>* _3229_s, jule::Ptr<_1a4721d20_FnIns> _3243_owner) {
	return jule::new_ptr<_1a47d3cc2_scopeChecker>(_1a47d3cc2_scopeChecker{._field_calledFrom=jule::Ptr<_1a463d137_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1a47d3cc2_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1a4725065_SymTab>(_1a4725065_SymTab{._field_File=jule::Ptr<_1a4643a11_Fileset>(nullptr), ._field_Passes=jule::Slice<_1a47eb8ab_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a4673ec5_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a471dc62_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a4729476_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a472bb2c_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a472d337_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a47c7425_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_tree=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1a4852e51_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1a47d2cd2_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1a47d3cc2_scopeChecker> _1a47c9856_newScopeChecker(jule::Ptr<_1a48293cd_sema>* _4025_s, jule::Ptr<_1a4721d20_FnIns> _4039_owner) {
	jule::Ptr<_1a47d3cc2_scopeChecker> _416_base = _1a47c948d_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a47d2cd2_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1a47d2cd2_scopeLabel> _1a47c9bca_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1a47d3cc2_scopeChecker> _5037_scope) {
	jule::Ptr<_1a47d2cd2_scopeLabel> _516_label = _1a47d818e_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*_5037_scope.alloc)._field_parent;
			_516_label=_1a47d818e_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1a84727a3:;
	}
	_iter_end_1a84727a3:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1a48a2753_Data>> _1a47ca01b_getDatasFromTupleData(jule::Ptr<_1a48a2753_Data>* _6231_d) {
	if ((_1a48d99aa_Tup((*((*(_6231_d))))._field_Type.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1a8477049:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1a4717079_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1a84745eb:;
				{
					jule::Ptr<_1a48e36d9_Tuple> _688_t = _1a48d99aa_Tup((*((*(_6231_d))))._field_Type);;
					jule::Slice<jule::Ptr<_1a48a2753_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48a2753_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8475de4:;
						if (it != expr_end) {
							jule::Ptr<_1a48d54cd_Type> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a48a2753_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})); };
							}
							_iter_next_1a8475de4:;
							++it;
							goto _iter_begin_1a8475de4;
						}
						_iter_end_1a8475de4:;
					};
					return _698_r;;
				}
			}
			_match_end_1a8474585:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48a2753_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1a47ca78b_checkMut(jule::Ptr<_1a48293cd_sema>* _9718_s, jule::Ptr<_1a48a2753_Data>* _9729_left, jule::Ptr<_1a48a2753_Data> _9746_right, jule::Ptr<_1a463d137_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1a84805a2:;
			{
				_1a482c2d2_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1a48d6db4_Mutable((*_9746_right.alloc)._field_Type.ptr()))) {
			_case_begin_1a84809ae:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1a48d9207_Struct((*(_9746_right))._field_Type) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a482c2d2_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_9746_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a848053b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8480481:;
	};
}



inline jule::Bool _1a47cac75_checkAssign(jule::Ptr<_1a48293cd_sema>* _11621_s, jule::Ptr<_1a48a2753_Data>* _11636_left, jule::Ptr<_1a48a2753_Data> _11653_right, jule::Ptr<_1a463d137_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4721d20_FnIns> _1172_f = _1a48d8e71_Fn((*((*(_11636_left))))._field_Type.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1a482c2d2_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a48a318d_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1a8486245:;
			{
				_1a482c2d2_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1a482c645_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1a84862de:;
			{
				_1a482c2d2_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a47ca78b_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1a8486366:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a84861ce:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a848607a:;
	};
}



inline jule::Bool _1a47cb14e_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a8474112:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1a4662117_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a84888c9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8488797:;
			{
				return false;;
			}
		}
		_match_end_1a8488731:;
	};
}



inline jule::Bool _1a47cb391_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type43) {
			_case_begin_1a8488940:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a848ee0d:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1a48a2753_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1a849a677:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a849a3be:;
						{
							return false;;
						}
					}
					_match_end_1a849a358:;
				};
			}
		}
		else {
			_case_begin_1a849021b:;
			{
				return false;;
			}
		}
		_match_end_1a848dd96:;
	};
}



inline jule::U32 _1a47e6521_removeEqFromOp(jule::U32 _214019_op) {
	{
		auto &_match_expr{ _214019_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1a849b942:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1a849da32:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1a849da98:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a849b9a8:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a849ba30:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1a849baa7:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a84a0182:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1a84a0209:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1a84a0281:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1a849ee1d:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1a849d735:;
			{
				return _214019_op;;
			}
		}
		_match_end_1a849de0b:;
	};
}



inline void _1a47e6752_makeComptimeRange(jule::Ptr<_1a48a2753_Data>* _216927_d) {
	{
		
		if ((_1a48d9ec7_comptimeStructFields((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa0a91:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48d9ec7_comptimeStructFields((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else if ((_1a48da4e4_comptimeEnumFields((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa0b07:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48da4e4_comptimeEnumFields((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else if ((_1a48db2b4_comptimeTypeInfos((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa0b6d:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48db2b4_comptimeTypeInfos((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else if ((_1a48daa11_comptimeParams((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa0bd4:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48daa11_comptimeParams((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else if ((_1a48db7d1_comptimeStatics((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa0c4a:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48db7d1_comptimeStatics((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else if ((_1a48dc837_comptimeFiles((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa0cb1:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48dc837_comptimeFiles((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else if ((_1a48dc31a_comptimeDecls((*((*(_216927_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a7aa13bb:;
			{
				(*((*(_216927_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a479e144_comptimeRange>(_1a479e144_comptimeRange{._field_kind=jule::Trait(_1a48dc31a_comptimeDecls((*((*(_216927_d))))._field_Type), (jule::Trait::Type*)&_1a479de24_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1a7aa0530:;
			{
				(*((*(_216927_d))))._field_Decl=true;
			}
		}
		_match_end_1a7aa09a3:;
	};
}



inline jule::Bool _1a47e6a1b_canComptimeMatch(jule::Ptr<_1a48a2753_Data>* _219226_d) {
	if ((!(_1a48a0e16_isGoodValueToInfer(_219226_d)))) {
		return false;;
	};
	return (_1a48a318d_IsConst((*(_219226_d)).ptr()) || (_1a48db54a_comptimeTypeInfo((*((*(_219226_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1a47e6cd5_stmtIsDef(jule::Any* _220015_stmt) {
	{
		auto &_match_expr{ (*(_220015_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a7aaa2a4:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a7aac88e:;
			{
				jule::Ptr<_1a47d0a27_MultiAssign> _22053_ma = (*(_220015_stmt)).cast_ptr<_1a47d0a27_MultiAssign>(&__jule_any_type43);;
				return ((*(_22053_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1a7aac44e:;
			{
				return false;;
			}
		}
		_match_end_1a7aac3b6:;
	};
}



inline jule::I32 _1a47e7159_countMatchType(jule::Ptr<_1a47d1264_Match>* _221220_m, jule::Ptr<_1a48d54cd_Type>* _221232_t) {
	jule::I32 _22136_n = 0LL;;
	_julec_label_1a7aae044:;
	{
		auto expr = &((*((*(_221220_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7aae462:;
		if (it != expr_end) {
			jule::Ptr<_1a47d1c8c_Case> *_22159_c = it;
			{
				if (((*(_22159_c)) == nullptr)) {
					goto _iter_next_1a7aae462;
				};
				{
					auto expr = &((*((*(_22159_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7ab0265:;
					if (it != expr_end) {
						jule::Ptr<_1a48a2753_Data> *_221910_expr = it;
						{
							if (((*(_221910_expr)) == nullptr)) {
								goto _iter_end_1a7aae462;
							};
							if (_1a48d5c1a_Equal((*(_221232_t)), (*((*(_221910_expr))))._field_Model.cast_ptr<_1a48d54cd_Type>(&__jule_any_type86))) {
								(_22136_n)++;
							};
						}
						_iter_next_1a7ab0265:;
						++it;
						goto _iter_begin_1a7ab0265;
					}
					_iter_end_1a7ab0265:;
				};
			}
			_iter_next_1a7aae462:;
			++it;
			goto _iter_begin_1a7aae462;
		}
		_iter_end_1a7aae462:;
	};
	return _22136_n;;
}



inline jule::Ptr<_1a48dcbde_TypeSym> _1a47ebc1e_buildType(jule::Ptr<_1a4653669_TypeDecl> _6818_t) {
	if ((_6818_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=_6818_t, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr)});;
}



inline jule::Ptr<_1a48a38ca_Value> _1a47ec02c_buildExpr(jule::Ptr<_1a465799d_Expr> _7718_expr) {
	if ((_7718_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=_7718_expr, ._field_Data=jule::Ptr<_1a48a2753_Data>(nullptr)});;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a47ec2e6_buildTypeAlias(jule::Ptr<_1a466a263_TypeAliasDecl> _8623_decl) {
	return jule::new_ptr<_1a48d46db_TypeAlias>(_1a48d46db_TypeAlias{._field_Scope=(*(_8623_decl))._field_Scope, ._field_Public=(*_8623_decl.alloc)._field_Public, ._field_Binded=(*_8623_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8623_decl.alloc)._field_Token, ._field_Ident=(*_8623_decl.alloc)._field_Ident, ._field_TypeSym=_1a47ebc1e_buildType((*_8623_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a46710d2_Field> _1a47ec637_buildField(jule::Ptr<_1a466d882_FieldDecl> _9719_decl) {
	return jule::new_ptr<_1a46710d2_Field>(_1a46710d2_Field{._field_Owner=jule::Ptr<_1a4673ec5_Struct>(nullptr), ._field_Token=(*(_9719_decl))._field_Token, ._field_Public=(*_9719_decl.alloc)._field_Public, ._field_Mutable=(*_9719_decl.alloc)._field_Mutable, ._field_Ident=(*_9719_decl.alloc)._field_Ident, ._field_TypeSym=_1a47ebc1e_buildType((*_9719_decl.alloc)._field_Kind), ._field_Default=(*_9719_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a46710d2_Field>> _1a47ec8bd_buildFields(jule::Slice<jule::Ptr<_1a466d882_FieldDecl>>* _10821_decls) {
	jule::Slice<jule::Ptr<_1a46710d2_Field>> _1096_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a46710d2_Field>>::alloc(0LL, (*(_10821_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a46710d2_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10821_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8671771:;
		if (it != expr_end) {
			jule::Ptr<_1a466d882_FieldDecl> _11014_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a46710d2_Field>> &__jule_push_dest = _1096_fields; __jule_push_dest.push(_1a47ec637_buildField(_11014_decl)); };
			}
			_iter_next_1a8671771:;
			++it;
			goto _iter_begin_1a8671771;
		}
		_iter_end_1a8671771:;
	};
	return _1096_fields;;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a47ecb87_buildStruct(jule::Ptr<_1a466e278_StructDecl> _11620_decl) {
	return jule::new_ptr<_1a4673ec5_Struct>(_1a4673ec5_Struct{._field_sema=jule::Ptr<_1a48293cd_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1a4673ec5_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1a4673ec5_Struct>>(nullptr), ._field_Token=(*(_11620_decl))._field_Token, ._field_Ident=(*_11620_decl.alloc)._field_Ident, ._field_Fields=_1a47ec8bd_buildFields(&((*_11620_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1a471dc62_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr), ._field_Public=(*_11620_decl.alloc)._field_Public, ._field_Binded=(*_11620_decl.alloc)._field_Binded, ._field_Directives=(*_11620_decl.alloc)._field_Directives, ._field_Generics=(*_11620_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1a4729476_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a4676d30_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1a471c28d_Param> _1a47ece51_buildParam(jule::Ptr<_1a4663ea4_ParamDecl> _12819_decl) {
	return jule::new_ptr<_1a471c28d_Param>(_1a471c28d_Param{._field_Token=(*(_12819_decl))._field_Token, ._field_Mutable=(*_12819_decl.alloc)._field_Mutable, ._field_Variadic=(*_12819_decl.alloc)._field_Variadic, ._field_Reference=(*_12819_decl.alloc)._field_Reference, ._field_TypeSym=_1a47ebc1e_buildType((*_12819_decl.alloc)._field_Kind), ._field_Ident=(*_12819_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a471c28d_Param>> _1a47ed32a_buildParams(jule::Slice<jule::Ptr<_1a4663ea4_ParamDecl>>* _13921_decls) {
	jule::Slice<jule::Ptr<_1a471c28d_Param>> _1406_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471c28d_Param>>::alloc(0LL, (*(_13921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a471c28d_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _13921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86757b9:;
		if (it != expr_end) {
			jule::Ptr<_1a4663ea4_ParamDecl> _14114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a471c28d_Param>> &__jule_push_dest = _1406_params; __jule_push_dest.push(_1a47ece51_buildParam(_14114_decl)); };
			}
			_iter_next_1a86757b9:;
			++it;
			goto _iter_begin_1a86757b9;
		}
		_iter_end_1a86757b9:;
	};
	return _1406_params;;
}



inline jule::Ptr<_1a471bbb6_RetType> _1a47ed56c_buildRetType(jule::Ptr<_1a465655c_RetTypeDecl> _14721_decl) {
	if ((((*(_14721_decl))._field_Idents == nullptr) && ((*_14721_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a471bbb6_RetType>(_1a471bbb6_RetType{._field_TypeSym=_1a47ebc1e_buildType((*_14721_decl.alloc)._field_Kind), ._field_Idents=(*_14721_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a471dc62_Fn> _1a47ed836_buildFunc(jule::Ptr<_1a4665406_FnDecl> _15718_decl) {
	return jule::new_ptr<_1a471dc62_Fn>(_1a471dc62_Fn{._field_sema=jule::Ptr<_1a48293cd_sema>(nullptr), ._field_Token=(*(_15718_decl))._field_Token, ._field_Global=(*_15718_decl.alloc)._field_Global, ._field_Unsafety=(*_15718_decl.alloc)._field_Unsafety, ._field_Public=(*_15718_decl.alloc)._field_Public, ._field_Binded=(*_15718_decl.alloc)._field_Binded, ._field_Statically=(*_15718_decl.alloc)._field_Statically, ._field_Exceptional=(*_15718_decl.alloc)._field_Exceptional, ._field_Ident=(*_15718_decl.alloc)._field_Ident, ._field_Directives=(*_15718_decl.alloc)._field_Directives, ._field_Scope=(*_15718_decl.alloc)._field_Scope, ._field_Generics=(*_15718_decl.alloc)._field_Generics, ._field_Result=_1a47ed56c_buildRetType((*_15718_decl.alloc)._field_Result), ._field_Params=_1a47ed32a_buildParams(&((*_15718_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1a4673ec5_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a4721d20_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a471dc62_Fn>> _1a47edb00_buildMethods(jule::Slice<jule::Ptr<_1a4665406_FnDecl>>* _17522_decls) {
	jule::Slice<jule::Ptr<_1a471dc62_Fn>> _1766_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471dc62_Fn>>::alloc(0LL, (*(_17522_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a471dc62_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17522_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a867a868:;
		if (it != expr_end) {
			jule::Ptr<_1a4665406_FnDecl> _17714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a471dc62_Fn>> &__jule_push_dest = _1766_methods; __jule_push_dest.push(_1a47ed836_buildFunc(_17714_decl)); };
			}
			_iter_next_1a867a868:;
			++it;
			goto _iter_begin_1a867a868;
		}
		_iter_end_1a867a868:;
	};
	return _1766_methods;;
}



inline jule::Slice<jule::Ptr<_1a48dcbde_TypeSym>> _1a47eddb9_buildTraitInherits(jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>* _18328_inherits) {
	jule::Slice<jule::Ptr<_1a48dcbde_TypeSym>> _1846_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48dcbde_TypeSym>>::alloc(0LL, (*(_18328_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48dcbde_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18328_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a867b9ac:;
		if (it != expr_end) {
			jule::Ptr<_1a4653669_TypeDecl> _18514_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a48dcbde_TypeSym>> &__jule_push_dest = _1846_symbols; __jule_push_dest.push(_1a47ebc1e_buildType(_18514_it)); };
			}
			_iter_next_1a867b9ac:;
			++it;
			goto _iter_begin_1a867b9ac;
		}
		_iter_end_1a867b9ac:;
	};
	return _1846_symbols;;
}



inline jule::Ptr<_1a4729476_Trait> _1a47ee183_buildTrait(jule::Ptr<_1a466e9b5_TraitDecl> _19119_decl) {
	return jule::new_ptr<_1a4729476_Trait>(_1a4729476_Trait{._field_Token=(*(_19119_decl))._field_Token, ._field_Ident=(*_19119_decl.alloc)._field_Ident, ._field_Public=(*_19119_decl.alloc)._field_Public, ._field_Inherits=_1a47eddb9_buildTraitInherits(&((*_19119_decl.alloc)._field_Inherits)), ._field_Methods=_1a47edb00_buildMethods(&((*_19119_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1a4673ec5_Struct>>(nullptr)});;
}



inline jule::Ptr<_1a472b0c1_EnumItem> _1a47ee44c_buildEnumItem(jule::Ptr<_1a466ba6c_EnumItemDecl> _20122_decl) {
	return jule::new_ptr<_1a472b0c1_EnumItem>(_1a472b0c1_EnumItem{._field_Token=(*(_20122_decl))._field_Token, ._field_Ident=(*_20122_decl.alloc)._field_Ident, ._field_Value=_1a47ec02c_buildExpr((*_20122_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _1a47ee716_buildEnumItems(jule::Slice<jule::Ptr<_1a466ba6c_EnumItemDecl>>* _20924_decls) {
	jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> _2106_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>>::alloc(0LL, (*(_20924_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a472b0c1_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _20924_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a867ec68:;
		if (it != expr_end) {
			jule::Ptr<_1a466ba6c_EnumItemDecl> _21114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a472b0c1_EnumItem>> &__jule_push_dest = _2106_items; __jule_push_dest.push(_1a47ee44c_buildEnumItem(_21114_decl)); };
			}
			_iter_next_1a867ec68:;
			++it;
			goto _iter_begin_1a867ec68;
		}
		_iter_end_1a867ec68:;
	};
	return _2106_items;;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a47eec11_buildEnum(jule::Ptr<_1a466c62d_EnumDecl> _21718_decl) {
	return jule::new_ptr<_1a472bb2c_Enum>(_1a472bb2c_Enum{._field_Token=(*(_21718_decl))._field_Token, ._field_Public=(*_21718_decl.alloc)._field_Public, ._field_Ident=(*_21718_decl.alloc)._field_Ident, ._field_TypeSym=_1a47ebc1e_buildType((*_21718_decl.alloc)._field_Kind), ._field_Items=_1a47ee716_buildEnumItems(&((*_21718_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a472cc60_TypeEnumItem> _1a47eeddc_buildTypeEnumItem(jule::Ptr<_1a466ce58_TypeEnumItemDecl> _22726_decl) {
	return jule::new_ptr<_1a472cc60_TypeEnumItem>(_1a472cc60_TypeEnumItem{._field_Token=(*(_22726_decl))._field_Token, ._field_Ident=(*_22726_decl.alloc)._field_Ident, ._field_TypeSym=_1a47ebc1e_buildType((*_22726_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> _1a4800184_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a466ce58_TypeEnumItemDecl>>* _23528_decls) {
	jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>>::alloc(0LL, (*(_23528_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a472cc60_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23528_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8683024:;
		if (it != expr_end) {
			jule::Ptr<_1a466ce58_TypeEnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a472cc60_TypeEnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1a47eeddc_buildTypeEnumItem(_23714_decl)); };
			}
			_iter_next_1a8683024:;
			++it;
			goto _iter_begin_1a8683024;
		}
		_iter_end_1a8683024:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a480044d_buildTypeEnum(jule::Ptr<_1a466d5b8_TypeEnumDecl> _24322_decl) {
	return jule::new_ptr<_1a472d337_TypeEnum>(_1a472d337_TypeEnum{._field_Token=(*(_24322_decl))._field_Token, ._field_Public=(*_24322_decl.alloc)._field_Public, ._field_Ident=(*_24322_decl.alloc)._field_Ident, ._field_Items=_1a4800184_buildTypeEnumItems(&((*_24322_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a4852e51_Var> _1a4800717_buildVar(jule::Ptr<_1a46665b1_VarDecl> _25217_decl) {
	return jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Token=(*(_25217_decl))._field_Token, ._field_Ident=(*_25217_decl.alloc)._field_Ident, ._field_Binded=(*_25217_decl.alloc)._field_Binded, ._field_Constant=(*_25217_decl.alloc)._field_Constant, ._field_Mutable=(*_25217_decl.alloc)._field_Mutable, ._field_Public=(*_25217_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25217_decl.alloc)._field_Statically, ._field_Reference=(*_25217_decl.alloc)._field_Reference, ._field_TypeSym=_1a47ebc1e_buildType((*_25217_decl.alloc)._field_Kind), ._field_Value=_1a47ec02c_buildExpr((*_25217_decl.alloc)._field_Expr), ._field_Refers=static__1a47ea6bd_new(), ._field_Directives=(*_25217_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a4852e51_Var>> _1a48009d1_buildVars(jule::Slice<jule::Ptr<_1a46665b1_VarDecl>> _26918_decls) {
	jule::Slice<jule::Ptr<_1a4852e51_Var>> _2706_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4852e51_Var>>::alloc(0LL, _26918_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4852e51_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_26918_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8687864:;
		if (it != expr_end) {
			jule::Ptr<_1a46665b1_VarDecl> _27114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = _2706_vars; __jule_push_dest.push(_1a4800717_buildVar(_27114_decl)); };
			}
			_iter_next_1a8687864:;
			++it;
			goto _iter_begin_1a8687864;
		}
		_iter_end_1a8687864:;
	};
	return _2706_vars;;
}



inline jule::Ptr<_1a47c7425_Impl> _1a4800c9a_buildImpl(jule::Ptr<_1a4670125_Impl> _27718_decl) {
	return jule::new_ptr<_1a47c7425_Impl>(_1a47c7425_Impl{._field_Base=(*(_27718_decl))._field_Base, ._field_Dest=(*_27718_decl.alloc)._field_Dest, ._field_Methods=_1a47edb00_buildMethods(&((*_27718_decl.alloc)._field_Methods)), ._field_Statics=_1a48009d1_buildVars((*_27718_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1a48075ba_isImplicitImport(jule::Ptr<_1a480c3d3_ImportInfo> _79021_imp) {
	return ((*((*(_79021_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1a4725065_SymTab> _1a4809721_findVarFileInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _4430_files, jule::Ptr<_1a4852e51_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a871326e:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _4514_f = *it;
			{
				if ((_1a472760b_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1a871326e:;
			++it;
			goto _iter_begin_1a871326e;
		}
		_iter_end_1a871326e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4852e51_Var> _1a4809b94_findVarInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8714528:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1a4852e51_Var> _577_v = _1a472597d_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1a8714528:;
			++it;
			goto _iter_begin_1a8714528;
		}
		_iter_end_1a8714528:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a480a0c3_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8715ace:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1a48d46db_TypeAlias> _697_ta = _1a4725d79_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1a8715ace:;
			++it;
			goto _iter_begin_1a8715ace;
		}
		_iter_end_1a8715ace:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a480a579_findStructInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a871710d:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1a4673ec5_Struct> _817_s = _1a4726275_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1a871710d:;
			++it;
			goto _iter_begin_1a871710d;
		}
		_iter_end_1a871710d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a471dc62_Fn> _1a480a975_findFnInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a871863c:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1a471dc62_Fn> _937_f = _1a4726671_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1a871863c:;
			++it;
			goto _iter_begin_1a871863c;
		}
		_iter_end_1a871863c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4729476_Trait> _1a480ace9_findTraitInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a871952d:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1a4729476_Trait> _1057_t = _1a47269b2_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1a871952d:;
			++it;
			goto _iter_begin_1a871952d;
		}
		_iter_end_1a871952d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a472bb2c_Enum> _1a480b16d_findEnumInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a871ae58:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1a472bb2c_Enum> _1177_e = _1a4726d03_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1a871ae58:;
			++it;
			goto _iter_begin_1a871ae58;
		}
		_iter_end_1a871ae58:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a472d337_TypeEnum> _1a480b602_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a871c2ab:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1a472d337_TypeEnum> _1297_e = _1a4727144_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1a871c2ab:;
			++it;
			goto _iter_begin_1a871c2ab;
		}
		_iter_end_1a871c2ab:;
	};
	return nullptr;;
}



inline jule::Bool _1a4812130_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1ce7841cb_HasPrefix((*(_33318_f)), _1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ce79807a_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1a4826c8d_isValidModelForRef(jule::Any* _1428_m) {
	{
		auto &_match_expr{ (*(_1428_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a872ac15:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a872ac7b:;
			{
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _197_model = (*(_1428_m)).cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_197_model))._field_Field != nullptr) && _1a4826c8d_isValidModelForRef(&((*((*_197_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a872ace2:;
			{
				jule::Ptr<_1a4711d65_UnaryExprModel> _227_unary = (*(_1428_m)).cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112);;
				if (((*((*(_227_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1a48d81a1_Ptr((*((*_227_unary.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a48d7e1a_Sptr((*((*(_227_unary))._field_Expr))._field_Type) == nullptr)) {
					return false;;
				};
				return _1a4826c8d_isValidModelForRef(&((*(*(_227_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a872ad58:;
			{
				jule::Ptr<_1a47142eb_IndexingExprModel> _367_indexing = (*(_1428_m)).cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42);;
				if ((_1a48d8954_Arr((*((*(_367_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1a4826c8d_isValidModelForRef(&((*(*(_367_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1a872a808:;
			{
				return false;;
			}
		}
		_match_end_1a872a3da:;
	};
}



inline _1e71b7487_Log _1a48272bb_compilerErr(jule::Ptr<_1a463d137_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args) {
	_1e71b7487_Log _496_log = _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4817_token))))._field_Row, ._field_Column=(*((*(_4817_token))))._field_Column, ._field_Path=(*((*((*(_4817_token))))._field_File))._field_Path, ._field_Text=_1e71b78e9_Logf(_4851_fmt, _4871_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4839_line) {
		_496_log._field_Line=_1a4644d0e_GetRow((*((*(_4817_token))))._field_File, (*((*(_4817_token))))._field_Row);
	};
	return _496_log;;
}



inline void _1a48275a7_appendRetVars(jule::Slice<jule::Ptr<_1a4852e51_Var>>* _6223_dest, jule::Ptr<_1a4721d20_FnIns>* _6242_f) {
	if ((_1a471e218_IsVoid((*((*(_6242_f))))._field_Decl.ptr()) || ((*((*(_6242_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a48d54cd_Type>> _676_types = _1a4723052_Types((*(_6242_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6242_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a873b2b9:;
		if (it != expr_end) {
			jule::I32 _687_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _6814_ident = *it;
			{
				if ((_1a4640a1e_IsIgnoreIdent((*(_6814_ident))._field_Kind) || _1a4640cd8_IsAnonIdent((*_6814_ident.alloc)._field_Kind))) {
					goto _iter_next_1a873b2b9;
				};
				{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = (*(_6223_dest)); __jule_push_dest.push(jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=(*((*(_6242_f))))._field_Scope, ._field_Token=_6814_ident, ._field_Ident=(*_6814_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=_676_types[_687_i]}), ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=_687_i, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)})); };
			}
			_iter_next_1a873b2b9:;
			++it;
			_687_i++;
			goto _iter_begin_1a873b2b9;
		}
		_iter_end_1a873b2b9:;
	};
	if ((((*(*((*((*(_6242_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6223_dest)).len() == 1LL))) {
		(*((*(_6223_dest))[((*(_6223_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a48278d7_appendParamVars(jule::Slice<jule::Ptr<_1a4852e51_Var>>* _9225_dest, jule::Ptr<_1a4721d20_FnIns>* _9244_f) {
	if (((*((*(_9244_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9244_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8740b1a:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> _9714_p = *it;
			{
				if ((_1a4640a1e_IsIgnoreIdent((*((*(_9714_p))._field_Decl))._field_Ident) || _1a4640cd8_IsAnonIdent((*(*(_9714_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1a8740b1a;
				};
				jule::Ptr<_1a4852e51_Var> _1027_v = jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=(*((*(_9244_f))))._field_Scope, ._field_Token=(*(*(_9714_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9714_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9714_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_9714_p))._field_Decl.alloc)._field_Reference, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
				{
					
					if (_1a471c8dc_IsSelf((*(_9714_p))._field_Decl)) {
						_case_begin_1a87449ed:;
						{
							(*((*(_1027_v))._field_TypeSym))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9244_f))))._field_Owner, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)});
							(*_1027_v.alloc)._field_Reference=(!(_1a471cb73_IsRef((*(_9714_p))._field_Decl)));
							if (_1a471cb73_IsRef((*(_9714_p))._field_Decl)) {
								((*(_1027_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1027_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1a48e2122_Sptr>(_1a48e2122_Sptr{._field_Elem=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=(*(*((*(_1027_v))._field_TypeSym))._field_Type.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1027_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9714_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1a87446ce:;
						{
							(*((*(_1027_v))._field_TypeSym))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2ae5_Slc>(_1a48e2ae5_Slc{._field_Elem=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=(*((*_9714_p.alloc)._field_Type))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9714_p))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1a8744668:;
						{
							(*((*(_1027_v))._field_TypeSym))._field_Type=(*_9714_p.alloc)._field_Type;
						}
					}
					_match_end_1a8744536:;
				};
				{ jule::Slice<jule::Ptr<_1a4852e51_Var>> &__jule_push_dest = (*(_9225_dest)); __jule_push_dest.push(_1027_v); };
			}
			_iter_next_1a8740b1a:;
			++it;
			goto _iter_begin_1a8740b1a;
		}
		_iter_end_1a8740b1a:;
	};
}



inline void _1a4827bc3_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>* _15234_dest, jule::Ptr<_1a4721d20_FnIns>* _15259_f) {
	jule::I32 _1536_size = (*((*(_15259_f))))._field_Generics.len();;
	if (((*((*((*(_15259_f))))._field_Decl))._field_Owner != nullptr)) {
		_1536_size+=(*(*((*((*(_15259_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1536_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15259_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a874ce79:;
		if (it != expr_end) {
			jule::I32 _1627_i = it - expr->begin();
			jule::Ptr<_1a48d3ae7_InsGeneric> _16214_g = *it;
			{
				if ((_16214_g == nullptr)) {
					goto _iter_next_1a874ce79;
				};
				jule::Ptr<_1a4660874_GenericDecl> _1667_decl = (*(*((*(_15259_f))))._field_Decl.alloc)._field_Generics[_1627_i];;
				{ jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1a48d46db_TypeAlias>(_1a48d46db_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1667_decl.alloc)._field_Token, ._field_Ident=(*(_1667_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_16214_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1a874ce79:;
			++it;
			_1627_i++;
			goto _iter_begin_1a874ce79;
		}
		_iter_end_1a874ce79:;
	};
	if (((*(*((*(_15259_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a4676d30_StructIns> _1787_owner = (*((*(_15259_f))))._field_Owner;;
		{
			auto expr = &((*_1787_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a874e81b:;
			if (it != expr_end) {
				jule::I32 _1798_i = it - expr->begin();
				jule::Ptr<_1a48d3ae7_InsGeneric> _17915_g = *it;
				{
					jule::Ptr<_1a4660874_GenericDecl> _1808_decl = (*((*(_1787_owner))._field_Decl))._field_Generics[_1798_i];;
					{ jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1a48d46db_TypeAlias>(_1a48d46db_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1808_decl.alloc)._field_Token, ._field_Ident=(*(_1808_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_17915_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1a874e81b:;
				++it;
				_1798_i++;
				goto _iter_begin_1a874e81b;
			}
			_iter_end_1a874e81b:;
		};
	};
}



inline jule::Ptr<_1a4725065_SymTab> _1a4828047_findFile(jule::Slice<jule::Ptr<_1a4725065_SymTab>>* _19318_files, jule::Ptr<_1a4643a11_Fileset>* _19337_handler) {
	{
		auto expr = _19318_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87538ec:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _19414_fl = *it;
			{
				if (((*(_19414_fl))._field_File == (*(_19337_handler)))) {
					return _19414_fl;;
				};
			}
			_iter_next_1a87538ec:;
			++it;
			goto _iter_begin_1a87538ec;
		}
		_iter_end_1a87538ec:;
	};
	return nullptr;;
}



inline void _1a48283dd_pushSuggestion(_1e71b7487_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args) {
	(*(_20230_log))._field_Suggestion=_1e71b78e9_Logf(_20248_fmt, _20268_args);
}



inline void _1a4850da5_pushImplemented(jule::Ptr<_1a4729476_Trait> _280324_t, jule::Ptr<_1a4673ec5_Struct>* _280340_d) {
	_julec_label_1a87534bd:;
	{
		
		if (((*(_280324_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1a8756625:;
			{
				{
					auto expr = &((*_280324_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8757082:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> _280710_s = *it;
						{
							if ((_280710_s == (*(_280340_d)))) {
								goto _match_end_1a8755aa8;
							};
						}
						_iter_next_1a8757082:;
						++it;
						goto _iter_begin_1a8757082;
					}
					_iter_end_1a8757082:;
				};
				goto _case_begin_1a8755b63;
			}
		}
		else {
			_case_begin_1a8755b63:;
			{
				(*(_280324_t))._field_Implemented=jule::append((*_280324_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4673ec5_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_280340_d)); __jule_collection; }));
			}
		}
		_match_end_1a8755aa8:;
	};
	{
		auto expr = &((*(_280324_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a875799a:;
		if (it != expr_end) {
			jule::Ptr<_1a48dcbde_TypeSym> _281614_i = *it;
			{
				_1a4850da5_pushImplemented(_1a48d948d_Trait((*(_281614_i))._field_Type.ptr()), _280340_d);
			}
			_iter_next_1a875799a:;
			++it;
			goto _iter_begin_1a875799a;
		}
		_iter_end_1a875799a:;
	};
}



inline void _1a4851191_pushImplements(jule::Ptr<_1a4673ec5_Struct>* _282124_s, jule::Ptr<_1a4729476_Trait> _282140_t) {
	_julec_label_1a8756c30:;
	{
		
		if (((*((*(_282124_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1a87591b6:;
			{
				{
					auto expr = &((*((*(_282124_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8759b23:;
					if (it != expr_end) {
						jule::Ptr<_1a4729476_Trait> _282510_b = *it;
						{
							if ((_282510_b == _282140_t)) {
								goto _match_end_1a8758649;
							};
						}
						_iter_next_1a8759b23:;
						++it;
						goto _iter_begin_1a8759b23;
					}
					_iter_end_1a8759b23:;
				};
				goto _case_begin_1a8758704;
			}
		}
		else {
			_case_begin_1a8758704:;
			{
				{ jule::Slice<jule::Ptr<_1a4729476_Trait>> &__jule_push_dest = (*((*(_282124_s))))._field_Implements; __jule_push_dest.push(_282140_t); };
			}
		}
		_match_end_1a8758649:;
	};
	{
		auto expr = &((*(_282140_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a875a53b:;
		if (it != expr_end) {
			jule::Ptr<_1a48dcbde_TypeSym> _283414_i = *it;
			{
				_1a4851191_pushImplements(_282124_s, _1a48d948d_Trait((*(_283414_i))._field_Type.ptr()));
			}
			_iter_next_1a875a53b:;
			++it;
			goto _iter_begin_1a875a53b;
		}
		_iter_end_1a875a53b:;
	};
}



inline void _1a48515e2_pushRuntimeToStr(jule::Ptr<_1a48293cd_sema>* _283926_s, jule::Ptr<_1a48d54cd_Type>* _283941_t, jule::Ptr<_1a463d137_Token>* _283956_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _28406_refers) {
	if ((((*((*((*(_283926_s))))._field_meta))._field_runtime == nullptr) || _1a48d6611_IsNil((*(_283941_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1a4721d20_FnIns> _28446_f = _1a472026e_instanceForce(_1a4319a4a_runtimeFindFn(&((*(*((*(_283926_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28446_f))._field_Generics=jule::append((*_28446_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a48d3ae7_InsGeneric>(_1a48d3ae7_InsGeneric{._field_Type=(*(_283941_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1a48d54cd_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28462_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4849b90_checkGenericFn((*(_283926_s)), &(_28446_f), _283956_token);
		_28462_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28462_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2848:3"));;
	};
	if ((_28406_refers != nullptr)) {
		_1a47eb1b3_Push(_28406_refers, jule::Any(_28446_f, &__jule_any_type63));
	};
}



inline jule::Bool _1a48518ab_isValidImpAlias(jule::Str _285724_alias) {
	jule::Bool __jule_func_result = false;
	if (_1a4640a1e_IsIgnoreIdent(_285724_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1a4641cd9_IsKeyword(_285724_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28646_r;
	jule::I32 _286413_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_285724_alias);
		_28646_r = __jule_assign_result.__jule_result_arg0;
		_286413_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28646_r != '_') && (!(_1a4641866_IsLetter(_28646_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285724_alias).mut_slice(_286413_size);;
			if ((_285724_alias.len() == 0LL)) {
				goto _iter_end_1a8763c5e;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cc62191c_DecodeRuneStr(_285724_alias);
				_28646_r = __jule_assign_result.__jule_result_arg0;
				_286413_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28646_r != '_') && (!((('0' <= _28646_r) && (_28646_r <= '9'))))) && (!(_1a4641866_IsLetter(_28646_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1a8763c5e:;
	}
	_iter_end_1a8763c5e:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a488c809_traitHasReferenceReceiver(jule::Ptr<_1a4729476_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8897a52:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1a8897a52;
				};
				jule::Ptr<_1a471c28d_Param> _233_p = (*(*(_179_f)).alloc)._field_Params[0LL];;
				if ((_1a471cb73_IsRef(_233_p.ptr()) && _1a471c8dc_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1a8897a52:;
			++it;
			goto _iter_begin_1a8897a52;
		}
		_iter_end_1a8897a52:;
	};
	return false;;
}



inline jule::Bool _1a488cbc2_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1a48a2753_Data>* _3133_d) {
	jule::Str _322_value = _1b4560731_FmtFloat(_1a4707c7e_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1a4795a20_CheckBitFloat(_322_value, _1a4794579_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1a488d046_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1a48a2753_Data>* _3630_d) {
	jule::F64 _372_min = _1a479ab68_Min(_3618_kind);;
	jule::F64 _382_max = _1a479adee_Max(_3618_kind);;
	{
		
		if (_1a4709ac7_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1a889b605:;
			{
				jule::F64 _413_x = _1a47074cb_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b453633e_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1a4709324_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1a889b66b:;
			{
				jule::F64 _483_x = _1a4707c7e_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1a470908d_IsI64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1a889b6d2:;
			{
				jule::F64 _533_x = _1a4707c7e_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1a889b4d4:;
	};
	return false;;
}



inline jule::Bool _1a488d40e_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1a48a2753_Data>* _5932_d) {
	jule::F64 _602_max = _1a479adee_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1a4889493_IsAscii(static_cast<jule::I32>(_1a4706992_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1a4709ac7_IsF64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1a7923b9a:;
			{
				jule::F64 _673_x = _1a47074cb_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b453633e_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1a4709324_IsU64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1a7923c11:;
			{
				jule::F64 _773_x = _1a4707c7e_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1a470908d_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1a7923c77:;
			{
				jule::F64 _823_x = _1a4707c7e_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1a792322c:;
	};
	return false;;
}



inline jule::Bool _1a488d783_intAssignable(jule::Str _8818_kind, jule::Ptr<_1a48a2753_Data>* _8830_d) {
	{
		
		if (_1a479c021_IsSigInt(_8818_kind)) {
			_case_begin_1a79287c6:;
			{
				return _1a488d046_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1a479c32e_IsUnsigInt(_8818_kind)) {
			_case_begin_1a792885e:;
			{
				return _1a488d40e_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1a79282ed:;
			{
				return false;;
			}
		}
		_match_end_1a7928221:;
	};
}



inline void _1a4899c78_checkMutRiskOfStructLit(jule::Ptr<_1a48293cd_sema>* _90933_s, jule::Ptr<_1a4712739_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a792993c:;
		if (it != expr_end) {
			jule::Ptr<_1a4712393_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1a792993c;
				};
				if (((!((*((*(*(_9109_arg)).alloc)._field_Expr))._field_Mutable)) && _1a48d6db4_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1a482c2d2_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*((*(_9109_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a792993c:;
			++it;
			goto _iter_begin_1a792993c;
		}
		_iter_end_1a792993c:;
	};
}



inline jule::Ptr<_1a48d54cd_Type> _1a48a0ab4_lenKind(void) {
	return _1a4959b07_primInt;;
}



inline jule::Bool _1a48a0e16_isGoodValueToInfer(jule::Ptr<_1a48a2753_Data>* _141224_d) {
	return (!(_1a48a2b71_IsNil((*(_141224_d)).ptr())));;
}



inline jule::Ptr<_1a4652a86_Directive> _1a48cbc55_findDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _435423_directives, jule::Str _435454_d) {
	{
		auto expr = _435423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894cb6d:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _435514_dr = *it;
			{
				if (((*((*(_435514_dr))._field_Tag))._field_Kind == _435454_d)) {
					return _435514_dr;;
				};
			}
			_iter_next_1a894cb6d:;
			++it;
			goto _iter_begin_1a894cb6d;
		}
		_iter_end_1a894cb6d:;
	};
	return nullptr;;
}



inline jule::Any _1a48cc11d_findBuiltinsImport(jule::Str* _436324_ident, jule::Ptr<_1a480c3d3_ImportInfo> _436336_imp) {
	return _1a495ce4b_findPackageBuiltinDef(&((*(_436336_imp))._field_LinkPath), _436324_ident);;
}



inline void _1a48cc34e_fitBitsize(jule::Ptr<_1a48a2753_Data>* _437220_d) {
	jule::Ptr<_1a48dd5e6_Prim> _43736_prim = _1a48d7b84_Prim((*((*(_437220_d))))._field_Type.ptr());;
	jule::I32 _43742_z = _1a4794579_BitSizeOf(_1a48dd96a_Str(_43736_prim.ptr()));;
	{
		
		if (_1a470908d_IsI64((*((*(_437220_d))))._field_Constant.ptr())) {
			_case_begin_1a8950467:;
			{
				jule::I32 _43773_k = _1a47960a3_BitSizeOfInt(_1a4706992_ReadI64((*((*(_437220_d))))._field_Constant));;
				if (((_43773_k > _43742_z) || _1a479c32e_IsUnsigInt((*_43736_prim.alloc)._field_Kind))) {
					(*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind=_1a47948ba_IntFromBits(_43773_k);
					(*((*(_437220_d))))._field_Type=(*((*(_1a495be5b_findBuiltinTypeAlias((*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1a4709324_IsU64((*((*(_437220_d))))._field_Constant.ptr())) {
			_case_begin_1a89504cd:;
			{
				jule::I32 _43833_k = _1a479636c_BitSizeOfUint(_1a4706c28_ReadU64((*((*(_437220_d))))._field_Constant));;
				if (((_43833_k > _43742_z) || _1a479c021_IsSigInt((*_43736_prim.alloc)._field_Kind))) {
					(*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind=_1a4794b51_UintFromBits(_43833_k);
					(*((*(_437220_d))))._field_Type=(*((*(_1a495be5b_findBuiltinTypeAlias((*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1a4709ac7_IsF64((*((*(_437220_d))))._field_Constant.ptr())) {
			_case_begin_1a8950555:;
			{
				if ((_43742_z == 64LLU)) {
					return;;
				};
				jule::I32 _43933_k = _1a4795cd9_BitSizeOfFloat(_1a47074cb_ReadF64((*((*(_437220_d))))._field_Constant));;
				if ((_43933_k > _43742_z)) {
					(*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind=_1a4794e1a_FloatFromBits(_43933_k);
					(*((*(_437220_d))))._field_Type=(*((*(_1a495be5b_findBuiltinTypeAlias((*(*((*(_437220_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_1a8950346:;
	};
}



inline void _1a48cc67e_makeStructLitAlloc(jule::Ptr<_1a48a2753_Data>* _440128_d, jule::Ptr<_1a4712739_StructLitExprModel>* _440143_lit) {
	(*((*(_440128_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2122_Sptr>(_1a48e2122_Sptr{._field_Elem=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_440143_lit))))._field_Strct, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)});
	(*((*(_440128_d))))._field_Model=jule::Any(jule::new_ptr<_1a4712a36_AllocStructLitExprModel>(_1a4712a36_AllocStructLitExprModel{._field_Lit=(*(_440143_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1a4852e51_Var> _1a48cca03_buildErrorVar(jule::Ptr<_1a47cba34_Scope>* _441223_s, jule::Ptr<_1a465b6c7_FnCallExpr>* _441239_fc) {
	return jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=(*(_441223_s)), ._field_Token=(*((*(_441239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
}



inline jule::Any _1a48ccd77_findBuiltinsSema(jule::Str* _442722_ident, jule::Ptr<_1a48293cd_sema> _442738_s) {
	jule::Str _44296_ppath = _1a46444a1_Dir((*((*(_442738_s))._field_file))._field_File.ptr());;
	if (_1ce7841cb_HasPrefix(_44296_ppath, _1ce79807a_PathStdlib)) {
		(_44296_ppath).mut_slice(_1ce79807a_PathStdlib.len());;
		_44296_ppath=(jule::Str::lit("std", 3) + _1ce78a325_ReplaceAll(_44296_ppath, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		return _1a495ce4b_findPackageBuiltinDef(&(_44296_ppath), _442722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a48cd141_isOkForShifting(jule::Ptr<_1a48a2753_Data>* _444225_d) {
	if (_1a48a318d_IsConst((*(_444225_d)).ptr())) {
		{
			
			if (_1a470908d_IsI64((*((*(_444225_d))))._field_Constant.ptr())) {
				_case_begin_1a8961478:;
				{
					return (_1a4706992_ReadI64((*((*(_444225_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1a4709324_IsU64((*((*(_444225_d))))._field_Constant.ptr())) {
				_case_begin_1a8961522:;
				{
					return true;;
				}
			}
			else if (_1a4709ac7_IsF64((*((*(_444225_d))))._field_Constant.ptr())) {
				_case_begin_1a8961599:;
				{
					return (_1a47074cb_ReadF64((*((*(_444225_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1a89613e0:;
				{
					return false;;
				}
			}
			_match_end_1a8961313:;
		};
	};
	jule::Ptr<_1a48dd5e6_Prim> _44552_prim = _1a48d7b84_Prim((*((*(_444225_d))))._field_Type.ptr());;
	return ((_44552_prim != nullptr) && _1a479c5e8_IsInt(_1a48dd96a_Str(_44552_prim)));;
}



inline jule::Bool _1a48cd51a_isInstancedStruct(jule::Ptr<_1a4676d30_StructIns> _445922_s) {
	return ((*((*(_445922_s))._field_Decl))._field_Generics.len() == (*_445922_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a48cd817_isPtrArithmeticCompatible(jule::Ptr<_1a48a2753_Data>* _446335_l, jule::Ptr<_1a48a2753_Data>* _446350_r) {
	jule::Ptr<_1a48e58d9_Ptr> _44642_ptr = _1a48d81a1_Ptr((*((*(_446350_r))))._field_Type.ptr());;
	if ((_44642_ptr != nullptr)) {
		return _1a48d5c1a_Equal((*(_1a48d81a1_Ptr((*((*(_446335_l))))._field_Type)))._field_Elem, (*_44642_ptr.alloc)._field_Elem);;
	};
	if ((_1a48a318d_IsConst((*(_446350_r)).ptr()) && (*((*(_446350_r))))._field_untyped)) {
		return (_1a488d783_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _446350_r) || _1a488d783_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _446350_r));;
	};
	_1a488dc6c_typeCompatibilityChecker _44736_tcc = _1a488dc6c_typeCompatibilityChecker{._field_s=jule::Ptr<_1a48293cd_sema>(nullptr), ._field_dest=_1a4959b07_primInt, ._field_src=(*((*(_446350_r))))._field_Type, ._field_errorToken=jule::Ptr<_1a463d137_Token>(nullptr)};;
	if (_1a4890466_check(&_44736_tcc)) {
		return true;;
	};
	_44736_tcc._field_dest=_1a495973e_primUint;
	return _1a4890466_check(&_44736_tcc);;
}



inline void _1a48cdd23_applyRuntimeToStr(jule::Ptr<_1a48293cd_sema>* _448427_s, jule::Ptr<_1a48d54cd_Type>* _448442_from, jule::Ptr<_1a48d54cd_Type>* _448460_to, jule::Ptr<_1a463d137_Token>* _44857_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _448533_refers) {
	jule::Ptr<_1a48dd5e6_Prim> _44862_prim = _1a48d7b84_Prim((*(_448460_to)).ptr());;
	if ((_44862_prim != nullptr)) {
		if (_1a48e1d47_IsAny(_44862_prim)) {
			_1a48515e2_pushRuntimeToStr(_448427_s, _448442_from, _44857_token, _448533_refers);
		};
		return;;
	};
	if ((_1a48d86bd_TypeEnum((*(_448460_to)).ptr()) != nullptr)) {
		_1a48515e2_pushRuntimeToStr(_448427_s, _448442_from, _44857_token, _448533_refers);
		return;;
	};
}



inline void _1a48ce32e_applyCastKindModel(jule::Ptr<_1a48293cd_sema>* _449928_s, jule::Ptr<_1a48a2753_Data>* _449943_d, jule::Ptr<_1a48d54cd_Type>* _449958_t, jule::Ptr<_1a463d137_Token>* _45007_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _450033_refers) {
	_1a48cdd23_applyRuntimeToStr(_449928_s, &((*((*(_449943_d))))._field_Type), _449958_t, _45007_token, _450033_refers);
	(*((*(_449943_d))))._field_Model=jule::Any(jule::new_ptr<_1a47130b9_CastingExprModel>(_1a47130b9_CastingExprModel{._field_Token=(*(_45007_token)), ._field_Expr=jule::new_ptr<_1a48a2753_Data>((*((*(_449943_d))))), ._field_Type=(*(_449958_t)), ._field_ExprType=(*((*(_449943_d))))._field_Type}), &__jule_any_type95);
}



inline void _1a48ce83a_applyCastKind(jule::Ptr<_1a48293cd_sema>* _451023_s, jule::Ptr<_1a48a2753_Data>* _451038_d, jule::Ptr<_1a48d54cd_Type>* _451053_t, jule::Ptr<_1a463d137_Token>* _45117_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _451133_refers) {
	_1a48ce32e_applyCastKindModel(_451023_s, _451038_d, _451053_t, _45117_token, _451133_refers);
	(*((*(_451038_d))))._field_Type=(*(_451053_t));
}



inline jule::Ptr<_1a48a2753_Data> _1a48cea49_buildVoidData(void) {
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4958870_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Str _1a48d0033_checkDataForIntegerIndexing(jule::Ptr<_1a48293cd_sema>* _452237_s, jule::Ptr<_1a48a2753_Data>* _452252_d, jule::Ptr<_1a463d137_Token>* _45237_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _452333_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_452252_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1a48d7b84_Prim((*((*(_452252_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1a8972764:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1a479c5e8_IsInt(_1a48dd96a_Str(_1a48d7b84_Prim((*((*(_452252_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1a89727ca:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1a48a318d_IsConst((*(_452252_d)).ptr())) {
			_case_begin_1a8972841:;
			{
				if ((_1a4707c7e_AsF64((*((*(_452252_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a48d7b84_Prim((*((*(_452252_d))))._field_Type.ptr()) == nullptr) || _1a48a318d_IsConst((*(_452252_d)).ptr()) || (_1a47942b0_RealKindOf(_1a48dd96a_Str(_1a48d7b84_Prim((*((*(_452252_d))))._field_Type).ptr())) != _1a47942b0_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1a89728a7:;
			{
				_1a48ce83a_applyCastKind(_452237_s, _452252_d, &(_1a4959b07_primInt), _45237_token, _452333_refers);
			}
		}
		_match_end_1a8972346:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1a48d053e_applyCastModelByEnum(jule::Ptr<_1a48293cd_sema>* _454830_s, jule::Ptr<_1a48a2753_Data>* _454845_d, jule::Ptr<_1a472bb2c_Enum> _454859_e, jule::Ptr<_1a463d137_Token>* _45497_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _454933_refers) {
	if ((_454859_e == nullptr)) {
		return;;
	};
	_1a48ce32e_applyCastKindModel(_454830_s, _454845_d, &((*((*(_454859_e))._field_TypeSym))._field_Type), _45497_token, _454933_refers);
}



inline void _1a48d0a5b_castConstByType(jule::Str* _455621_t, jule::Ptr<_1a48a2753_Data>* _455634_d) {
	{
		
		if (_1a479c021_IsSigInt((*(_455621_t)))) {
			_case_begin_1a8978638:;
			{
				{
					auto _match_expr{ _1a4794579_BitSizeOf(_1a47942b0_RealKindOf((*(_455621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a897920a:;
						{
							_1a4708037_SetI64((*((*(_455634_d))))._field_Constant.ptr(), _1a4707762_AsI64((*((*(_455634_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a8979293:;
						{
							_1a4708037_SetI64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1a4707762_AsI64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a8979309:;
						{
							_1a4708037_SetI64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1a4707762_AsI64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a8979370:;
						{
							_1a4708037_SetI64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1a4707762_AsI64((*((*(_455634_d))))._field_Constant))));
						}
					}
					_match_end_1a8979194:;
				};
			}
		}
		else if (_1a479c32e_IsUnsigInt((*(_455621_t)))) {
			_case_begin_1a89786d2:;
			{
				{
					auto _match_expr{ _1a4794579_BitSizeOf(_1a47942b0_RealKindOf((*(_455621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a8979815:;
						{
							_1a47082e0_SetU64((*((*(_455634_d))))._field_Constant.ptr(), _1a47079e8_AsU64((*((*(_455634_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a897d440:;
						{
							_1a47082e0_SetU64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1a47079e8_AsU64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a897d4a6:;
						{
							_1a47082e0_SetU64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1a47079e8_AsU64((*((*(_455634_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a897d51c:;
						{
							_1a47082e0_SetU64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1a47079e8_AsU64((*((*(_455634_d))))._field_Constant))));
						}
					}
					_match_end_1a897d396:;
				};
			}
		}
		else if (_1a479c939_IsFloat((*(_455621_t)))) {
			_case_begin_1a8978748:;
			{
				{
					auto _match_expr{ _1a4794579_BitSizeOf(_1a47942b0_RealKindOf((*(_455621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a897d7c5:;
						{
							_1a4708b09_SetF64((*((*(_455634_d))))._field_Constant.ptr(), _1a4707c7e_AsF64((*((*(_455634_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a89825a9:;
						{
							_1a4708b09_SetF64((*((*(_455634_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1a4707c7e_AsF64((*((*(_455634_d))))._field_Constant))));
						}
					}
					_match_end_1a8982543:;
				};
			}
		}
		_match_end_1a89784d4:;
	};
}



inline void _1a48d0c37_updateModelToGenericIns(jule::Any* _459033_m, jule::Ptr<_1a4721d20_FnIns>* _459052_f) {
	{
		auto &_match_expr{ (*(_459033_m)) };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a8982851:;
			{
				(*(_459033_m))=jule::Any((*(_459052_f)), &__jule_any_type63);
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8979628:;
			{
				(*((*(_459033_m)).cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100)))._field_Method=(*(_459052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a89828b7:;
			{
				(*((*(_459033_m)).cast_ptr<_1a47168a3_StructStaticIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_459052_f));
			}
		}
		_match_end_1a8979705:;
	};
}



inline jule::Bool _1a48d10ab_pushSubIdentFromExpr(jule::Any _460129_expr, jule::Ptr<_1a465403d_SubIdentTypeDecl>* _460155_t) {
	{
		auto &_match_expr{ _460129_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a8988923:;
			{
				jule::Ptr<_1a46592b8_IdentExpr> _46047_e = _460129_expr.unsafe_cast_ptr<_1a46592b8_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>> &__jule_push_dest = (*((*(_460155_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*(_46047_e))._field_Token, ._field_Ident=(*_46047_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8987a76:;
			{
				jule::Ptr<_1a465aab1_SubIdentExpr> _46107_e = _460129_expr.unsafe_cast_ptr<_1a465aab1_SubIdentExpr>();;
				if ((!(_1a48d10ab_pushSubIdentFromExpr((*((*(_46107_e))._field_Expr))._field_Kind, _460155_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a4653c74_IdentTypeDecl>> &__jule_push_dest = (*((*(_460155_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a4653c74_IdentTypeDecl>(_1a4653c74_IdentTypeDecl{._field_Token=(*_46107_e.alloc)._field_Ident, ._field_Ident=(*((*_46107_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a4653669_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1a8988a00:;
			{
				return false;;
			}
		}
		_match_end_1a8988857:;
	};
	return true;;
}



inline jule::Str _1a48d1375_constoa(jule::Ptr<_1a4276798_Const>* _462413_c) {
	{
		
		if (_1a470908d_IsI64((*(_462413_c)).ptr())) {
			_case_begin_1a898e84c:;
			{
				return _1b4576eea_FmtInt(_1a4706992_ReadI64((*(_462413_c)).ptr()), 10LL);;
			}
		}
		else if (_1a4709324_IsU64((*(_462413_c)).ptr())) {
			_case_begin_1a898e8d5:;
			{
				return _1b4576b32_FmtUint(_1a4706c28_ReadU64((*(_462413_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1a898d40b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a898d197:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a48d1919_evalEnumStatic(jule::Ptr<_1a48293cd_sema>* _463524_s, jule::Ptr<_1a472bb2c_Enum>* _463539_enm, jule::Ptr<_1a472b0c1_EnumItem>* _463556_item, jule::Ptr<_1a463d137_Token>* _46367_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _463633_refers) {
	jule::Ptr<_1a48a2753_Data> _46376_d = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_463539_enm)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	if (((*(_463556_item)) != nullptr)) {
		(*(_46376_d))._field_Constant=jule::new_ptr<_1a4276798_Const>((*(*((*((*((*(_463556_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46376_d.alloc)._field_Model=jule::Any((*_46376_d.alloc)._field_Constant, &__jule_any_type15);
		_1a48d053e_applyCastModelByEnum(_463524_s, &(_46376_d), (*(_463539_enm)), _46367_token, _463633_refers);
	};
	return _46376_d;;
}



inline jule::Ptr<_1a4712739_StructLitExprModel> _1a48d1bd3_isLitBased(jule::Any* _465320_m) {
	{
		auto &_match_expr{ (*(_465320_m)) };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a89948eb:;
			{
				return (*(_465320_m)).cast_ptr<_1a4712739_StructLitExprModel>(&__jule_any_type97);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a8994962:;
			{
				return (*((*(_465320_m)).cast_ptr<_1a4712a36_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a89949c8:;
			{
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _46607_ssi = (*(_465320_m)).cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				return _1a48d1bd3_isLitBased(&((*((*(_46607_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a8994a3e:;
			{
				jule::Ptr<_1a47130b9_CastingExprModel> _46637_c = (*(_465320_m)).cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95);;
				return _1a48d1bd3_isLitBased(&((*((*(_46637_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a899449a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8994434:;
	};
}



inline void _1a48d1ebe_makeImplicitDeref(jule::Ptr<_1a48a2753_Data>* _467027_d, jule::Ptr<_1a463d137_Token> _467041_baseToken) {
	jule::Ptr<_1a4711d65_UnaryExprModel> _46716_unary = jule::new_ptr<_1a4711d65_UnaryExprModel>(_1a4711d65_UnaryExprModel{._field_Expr=jule::new_ptr<_1a48a2753_Data>((*((*(_467027_d))))), ._field_Op=jule::new_ptr<_1a463d137_Token>((*(_467041_baseToken)))});;
	(*((*(_46716_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_46716_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_467027_d))))._field_Model=jule::Any(_46716_unary, &__jule_any_type112);
}



inline void _1a89e4e35_updateRefer(jule::Ptr<_1a47ea3d2_ReferenceStack> _468123_ref, jule::Ptr<_1a4721d20_FnIns>* _468146_old, jule::Ptr<_1a4721d20_FnIns>* _468159_new) {
	{
		auto expr = &((*(_468123_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89e6893:;
		if (it != expr_end) {
			jule::I32 _46826_i = it - expr->begin();
			jule::Any _46829_sym = *it;
			{
				if ((jule::Any((*(_468146_old)), &__jule_any_type63) == _46829_sym)) {
					(*(_468123_ref))._field_buffer[_46826_i]=jule::Any((*(_468159_new)), &__jule_any_type63);
				};
			}
			_iter_next_1a89e6893:;
			++it;
			_46826_i++;
			goto _iter_begin_1a89e6893;
		}
		_iter_end_1a89e6893:;
	};
}



inline void _1a48d2651_makeVariadic(jule::Ptr<_1a48a2753_Data>* _468922_d, jule::Ptr<_1a48d54cd_Type> _468936_elem) {
	(*((*(_468922_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=(*_468936_elem.alloc)._field_BindIdent, ._field_Generic=(*(_468936_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_468936_elem.alloc)._field_Kind});
}



inline jule::Bool _1a48d2a80_isVarCaptured(jule::Ptr<_1a47d3cc2_scopeChecker> _470318_r, jule::Ptr<_1a47d3cc2_scopeChecker> _470340_s, jule::Ptr<_1a4852e51_Var> _470358_v) {
	if (((*(_470358_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_470340_s))._field_scope == (*_470358_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_470340_s.alloc)._field_parent == nullptr) || (_470340_s == _470318_r))) {
				goto _iter_end_1a899db25;
			};
			_470340_s=(*_470340_s.alloc)._field_parent;
		}
	_iter_next_1a899db25:;
	}
	_iter_end_1a899db25:;;
	return true;;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a48d2e04_findNamespace(jule::Trait _472022_lookup, jule::Str _472038_namespace) {
	return ((_1a49058b6_LookupMptrData*)_472022_lookup.safe_type())->_1a4903ba0_SelectPackage(_472022_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a480c3d3_ImportInfo>>((void*)__jule_anon_1a89a0a6c, jule::Ptr<__jule_anon_1a89a0a6c_ctx>::make(__jule_anon_1a89a0a6c_ctx{._472038_namespace=_472038_namespace}).as<jule::Uintptr>(), __jule_anon_1a89a0a6c_ctx_handler));;
}



inline jule::Bool _1a4901681_kindUsesGenerics(jule::Ptr<_1a48d54cd_Type>* _173126_k, jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>* _173137_generics) {
	{
		auto expr = _173137_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9009867:;
		if (it != expr_end) {
			jule::Ptr<_1a4660874_GenericDecl> *_17329_g = it;
			{
				if (static__1a4901285_exist(&((*((*(_17329_g))))._field_Ident), _173126_k)) {
					return true;;
				};
			}
			_iter_next_1a9009867:;
			++it;
			goto _iter_begin_1a9009867;
		}
		_iter_end_1a9009867:;
	};
	return false;;
}



inline jule::Bool _1a4901a49_hasDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _174122_directives, jule::Str _174153_tag) {
	{
		auto expr = _174122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a900a14d:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _174214_dr = *it;
			{
				if (((*((*(_174214_dr))._field_Tag))._field_Kind == _174153_tag)) {
					return true;;
				};
			}
			_iter_next_1a900a14d:;
			++it;
			goto _iter_begin_1a900a14d;
		}
		_iter_end_1a900a14d:;
	};
	return false;;
}



inline jule::Bool _1a4901d13_canGetPtr(jule::Ptr<_1a48a2753_Data>* _175019_d) {
	return (*((*(_175019_d))))._field_Lvalue;;
}



inline jule::Bool _1a4902154_isValidForSptrType(jule::Ptr<_1a48d54cd_Type>* _175328_t) {
	jule::Ptr<_1a4676d30_StructIns> _17546_s = _1a48d9207_Struct((*(_175328_t)).ptr());;
	if ((((_17546_s != nullptr) && ((*_17546_s.alloc)._field_Decl != nullptr)) && (*(*(_17546_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a49023da_isValidForRef(jule::Ptr<_1a48d54cd_Type>* _176223_t) {
	return (_1a48d8e71_Fn((*(_176223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a49026a4_isBuiltinStrConvertable(jule::Ptr<_1a48d54cd_Type>* _176533_t) {
	return ((((!(_1a48d6897_Void((*(_176533_t)).ptr()))) && (_1a48d8e71_Fn((*(_176533_t)).ptr()) == nullptr)) && (_1a48d99aa_Tup((*(_176533_t)).ptr()) == nullptr)) && (!(_1a48d9c41_comptime((*(_176533_t)).ptr()))));;
}



inline jule::Ptr<_1a48dd5e6_Prim> _1a490296d_buildPrimType(jule::Str _176918_kind) {
	return jule::new_ptr<_1a48dd5e6_Prim>(_1a48dd5e6_Prim{._field_Kind=_176918_kind});;
}



inline void _1a49032cb_applyImplicitCast(jule::Ptr<_1a48293cd_sema>* _179727_s, jule::Ptr<_1a48d54cd_Type>* _179742_dest, jule::Ptr<_1a48a2753_Data>* _179760_d, jule::Ptr<_1a463d137_Token>* _17987_token, jule::Ptr<_1a47ea3d2_ReferenceStack> _179833_refers) {
	if (_1a48d6611_IsNil((*((*(_179760_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _18022_destPrim = _1a48d7b84_Prim((*(_179742_dest)).ptr());;
	if (((_18022_destPrim != nullptr) && _1a48e1d47_IsAny(_18022_destPrim))) {
		jule::Ptr<_1a48dd5e6_Prim> _18043_prim = _1a48d7b84_Prim((*((*(_179760_d))))._field_Type);;
		if (((_18043_prim == nullptr) || (!(_1a48e1d47_IsAny(_18043_prim.ptr()))))) {
			_1a48ce83a_applyCastKind(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		};
		return;;
	};
	jule::Ptr<_1a4729476_Trait> _18112_dt = _1a48d948d_Trait((*(_179742_dest)).ptr());;
	if ((_18112_dt != nullptr)) {
		jule::Ptr<_1a4729476_Trait> _18133_bt = _1a48d948d_Trait((*((*(_179760_d))))._field_Type);;
		if (((_18133_bt == nullptr) || (_18133_bt != _18112_dt))) {
			_1a48ce32e_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
			return;;
		};
	};
	if (((_1a48d86bd_TypeEnum((*(_179742_dest)).ptr()) != nullptr) && (_1a48d86bd_TypeEnum((*((*(_179760_d))))._field_Type) == nullptr))) {
		_1a48ce32e_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		return;;
	};
}



inline jule::Bool _1a4903595_validTypeForXof(jule::Ptr<_1a48d54cd_Type>* _182725_t) {
	return ((((!(_1a48d6897_Void((*(_182725_t)).ptr()))) && (_1a48d8e71_Fn((*(_182725_t)).ptr()) == nullptr)) && (_1a48d99aa_Tup((*(_182725_t)).ptr()) == nullptr)) && (!(_1a48d9c41_comptime((*(_182725_t)).ptr()))));;
}



inline __jule_tuple_x_1a4725065_SymTab__jule_tuple_s_1e71b7487_Log _1a4906598_buildSymbols(jule::Ptr<_1a46517aa_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1a4801361_symBuilder> _1667_owner) {
	__jule_tuple_x_1a4725065_SymTab__jule_tuple_s_1e71b7487_Log __jule_func_result;
	jule::Ptr<_1a4801361_symBuilder> _176_sb = jule::new_ptr<_1a4801361_symBuilder>(_1a4801361_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1e71b7487_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1a4725065_SymTab>(nullptr)});;
	_1a4807202_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1a49068c8_collectImplicitImports(jule::Ptr<_1a48293cd_sema>* _3132_s, jule::Ptr<_1a4725065_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90a1da4:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1a48075ba_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1a90a1da4;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1a90a3092:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1a90a2635:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1a90a2bc9:;
				};
			}
			_iter_next_1a90a1da4:;
			++it;
			goto _iter_begin_1a90a1da4;
		}
		_iter_end_1a90a1da4:;
	};
}



inline __jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log _1a4906d07_analyzePackage(jule::Slice<jule::Ptr<_1a46517aa_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags) {
	__jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a4725065_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4725065_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4725065_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90a42e6:;
		if (it != expr_end) {
			jule::Ptr<_1a46517aa_AST> _4814_f = *it;
			{
				jule::Ptr<_1a4725065_SymTab> _497_table;
				jule::Slice<_1e71b7487_Log> _4918_errors;
				({
					__jule_tuple_x_1a4725065_SymTab__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a4906598_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a4725065_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1a90a42e6:;
			++it;
			goto _iter_begin_1a90a42e6;
		}
		_iter_end_1a90a42e6:;
	};
	jule::Ptr<_1a48293cd_sema> _566_sema = jule::new_ptr<_1a48293cd_sema>(_1a48293cd_sema{._field_errors=jule::Slice<_1e71b7487_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a4725065_SymTab>>(nullptr), ._field_file=jule::Ptr<_1a4725065_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1a48287a6_commonSemaMeta>(_1a48287a6_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1a47ae044_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1a480c3d3_ImportInfo>(nullptr)})});;
	jule::Ptr<_1a4725065_SymTab> _636_firstTable = _476_tables[0LL];;
	_1a49068c8_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1a484e06d_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a480eb55_Package> _716_pkg = jule::new_ptr<_1a480eb55_Package>(_1a480eb55_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log _1a49072ad_AnalyzePackage(jule::Slice<jule::Ptr<_1a46517aa_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags) {
	__jule_tuple_x_1a480eb55_Package__jule_tuple_s_1e71b7487_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a4906d07_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a4957e79_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1a90addd3:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _2314_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a495d6ee_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1a90ade49:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _2614_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a495db2d_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1a90adeb0:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _2914_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a495e05c_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1a90ae037:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _3214_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a495e48b_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1a90ae1d0:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _3514_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a495e8ba_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1a90ae246:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _3814_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a496002a_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1a90ae2ac:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _4114_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4960833_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1a90ae334:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _4414_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4961ec7_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1a90ae466:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _4714_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a496277a_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1a90ae4cc:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _5014_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4963193_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1a90ad8e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90adc5c:;
	};
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a4958265_primTypeAlias(jule::Ptr<_1a48d54cd_Type>* _5723_k) {
	return jule::new_ptr<_1a48d46db_TypeAlias>(_1a48d46db_TypeAlias{._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a4852e51_Var> _1a495bb1a_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1a90b5e84:;
			{
				static jule::Ptr<_1a4852e51_Var> _8814_v = jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=_1a4958573_primNil}), ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a4706332_NewNil()})}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1a90b602d:;
			{
				static jule::Ptr<_1a4852e51_Var> _10314_v = jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a4705a90_NewBool(true)})}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1a90b60a5:;
			{
				static jule::Ptr<_1a4852e51_Var> _11614_v = jule::new_ptr<_1a4852e51_Var>(_1a4852e51_Var{._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a495be5b_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a48a38ca_Value>(_1a48a38ca_Value{._field_Expr=jule::Ptr<_1a465799d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a4705a90_NewBool(false)})}), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a4852e51_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1a90b56d1:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90b0456:;
	};
}



inline jule::Ptr<_1a48d46db_TypeAlias> _1a495be5b_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a90bad79:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _13614_t = _1a4958265_primTypeAlias(&(_1a4958b28_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1a90baede:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _13914_t = _1a4958265_primTypeAlias(&(_1a4958e25_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1a90bb055:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _14214_t = _1a4958265_primTypeAlias(&(_1a49591cd_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a90bb132:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _14514_t = _1a4958265_primTypeAlias(&(_1a4959486_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a90bb198:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _14814_t = _1a4958265_primTypeAlias(&(_1a495973e_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a90bb20e:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _15114_t = _1a4958265_primTypeAlias(&(_1a4959b07_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a90bb275:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _15414_t = _1a4958265_primTypeAlias(&(_1a4959d49_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a90bb2db:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _15714_t = _1a4958265_primTypeAlias(&(_1a495a0e1_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a90bb3b8:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _16014_t = _1a4958265_primTypeAlias(&(_1a495a652_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a90bb440:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _16314_t = _1a4958265_primTypeAlias(&(_1a495abb3_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a90bb4b7:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _16614_t = _1a4958265_primTypeAlias(&(_1a495ae6b_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a90bb53e:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _16914_t = _1a4958265_primTypeAlias(&(_1a495b455_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a90bb5b6:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _17214_t = _1a4958265_primTypeAlias(&(_1a495b697_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a90bb63d:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _17514_t = _1a4958265_primTypeAlias(&(_1a495b8a6_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a90bb6b5:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _17814_t = _1a4958265_primTypeAlias(&(_1a495a90a_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a90bb73c:;
			{
				static jule::Ptr<_1a48d46db_TypeAlias> _18114_t = _1a4958265_primTypeAlias(&(_1a495a399_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1a90b65e4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90b66c1:;
	};
}



inline jule::Any _1a495c1e2_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1a4852e51_Var> _1896_v = _1a495bb1a_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1a4721d20_FnIns> _1936_f = _1a4957e79_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type63);;
	};
	jule::Ptr<_1a48d46db_TypeAlias> _1976_ta = _1a495be5b_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1a495c4ab_findBuiltinDefStdMem(jule::Str* _20426_ident) {
	{
		auto &_match_expr{ (*(_20426_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1a90c60b5:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _20714_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a496533d_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1a90c64c2:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _21014_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a496576c_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1a90c6549:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _21314_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4965b9b_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1a90c4987:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90c4de9:;
	};
}



inline jule::Any _1a495c775_findBuiltinDefStdComptime(jule::Str* _22031_ident) {
	{
		auto &_match_expr{ (*(_22031_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1a90c67d0:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _22314_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a49635c2_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1a90c8804:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _22614_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4963a01_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1a90c886a:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _22914_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4963e30_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1a90c6846:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _23214_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a49645a1_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1a90c68bd:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _23514_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a49649d0_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1a90c899c:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _23814_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a471dc62_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a4964e0e_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_23814_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1a90c65d2:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90c854b:;
	};
}



inline jule::Any _1a495cb4e_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident) {
	{
		auto &_match_expr{ (*(_24537_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1a90c8c44:;
			{
				static jule::Ptr<_1a4721d20_FnIns> _24814_f = jule::new_ptr<_1a4721d20_FnIns>(_1a4721d20_FnIns{._field_Owner=jule::Ptr<_1a4676d30_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1a471dc62_Fn>(_1a471dc62_Fn{._field_sema=jule::Ptr<_1a48293cd_sema>(nullptr), ._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a4660874_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a4660874_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1a471bbb6_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a471c28d_Param>>(nullptr), ._field_Owner=jule::Ptr<_1a4673ec5_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a4721d20_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1a48d3ae7_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a4720bba_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a48d54cd_Type>(nullptr), ._field_Scope=jule::Ptr<_1a47cba34_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a47ea3d2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a48a2753_Data>,jule::Ptr<_1a48a447a_eval>*,jule::Ptr<_1a465b6c7_FnCallExpr>*,jule::Ptr<_1a48a2753_Data>*>(_1a49660ca_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1a90c8a35:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90ccc59:;
	};
}



inline jule::Any _1a495ce4b_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident) {
	{
		auto &_match_expr{ (*(_26027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1a90cebe5:;
			{
				return _1a495c775_findBuiltinDefStdComptime(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1a90cec8e:;
			{
				return _1a495c4ab_findBuiltinDefStdMem(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1a90ce95e:;
			{
				return _1a495cb4e_findBuiltinDefStdJuleIntegrated(_26043_ident);;
			}
		}
		else {
			_case_begin_1a90ce40e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90cd221:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a495d2c0_builtinCallerError(jule::Ptr<_1a48a447a_eval>* _27328_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _27343_fc) {
	if (((*((*(_27343_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_27328_e)).ptr(), (*((*(_27343_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_27343_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_27328_e)).ptr(), (*((*((*(_27343_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _2816_expr = _1a48c32e0_evalExpr((*(_27328_e)), (*((*(_27343_fc))))._field_Args[0LL]);;
	if ((_2816_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a463d137_Token> _2866_token = (*((*((*(_27343_fc))))._field_Args[0LL]))._field_Token;;
	if (_1a48a2b71_IsNil(_2816_expr.ptr())) {
		_1a48a4a0d_pushErr((*(_27328_e)).ptr(), _2866_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1a483ddb5_checkValidityForInitExpr((*((*(_27328_e))))._field_s, true, false, &(_1a4958b28_primAny), &(_2816_expr), &(_2866_token))))) {
		return nullptr;;
	};
	_1a48cdd23_applyRuntimeToStr(&((*((*(_27328_e))))._field_s), &((*(_2816_expr))._field_Type), &(_1a4958b28_primAny), &(_2866_token), _1a48a7a11_getOwnerRefers((*(_27328_e)).ptr()));
	jule::Ptr<_1a48a2753_Data> _2996_d = _1a48cea49_buildVoidData();;
	(*(_2996_d))._field_Model=jule::Any(jule::new_ptr<_1a4719a2c_BuiltinErrorCallExprModel>(_1a4719a2c_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1a4721d20_FnIns>(nullptr), ._field_Err=_2816_expr}), &__jule_any_type20);
	return _2996_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a495d6ee_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _30428_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _30443_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_30443_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_30428_e)).ptr(), (*((*(_30443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30443_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_30428_e)).ptr(), (*((*((*(_30443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a465799d_Expr> _3136_arg = (*((*(_30443_fc))))._field_Args[0LL];;
	jule::Ptr<_1a48a2753_Data> _3146_expr = _1a48c32e0_evalExpr((*(_30428_e)), _3136_arg);;
	if ((_3146_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a49026a4_isBuiltinStrConvertable(&((*(_3146_expr))._field_Type))))) {
		_1a48a4a0d_pushErr((*(_30428_e)).ptr(), (*(_3136_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a48515e2_pushRuntimeToStr(&((*((*(_30428_e))))._field_s), &((*(_3146_expr))._field_Type), &((*_3136_arg.alloc)._field_Token), _1a48a7a11_getOwnerRefers((*(_30428_e)).ptr()));
	jule::Ptr<_1a48a2753_Data> _3266_d = _1a48cea49_buildVoidData();;
	(*(_3266_d))._field_Model=jule::Any(jule::new_ptr<_1a4717376_BuiltinPrintCallExprModel>(_1a4717376_BuiltinPrintCallExprModel{._field_Expr=_3146_expr}), &__jule_any_type24);
	return _3266_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a495db2d_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _33130_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _33145_fc, jule::Ptr<_1a48a2753_Data>* _33172_d) {
	(*(_33172_d))=_1a495d6ee_builtinCallerPrint(nullptr, _33130_e, _33145_fc, _33172_d);
	if (((*(_33172_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_33172_d))))._field_Model=jule::Any(jule::new_ptr<_1a4717673_BuiltinPrintlnCallExprModel>(_1a4717673_BuiltinPrintlnCallExprModel{._field_Expr=(*((*((*(_33172_d))))._field_Model.cast_ptr<_1a4717376_BuiltinPrintCallExprModel>(&__jule_any_type24)))._field_Expr}), &__jule_any_type25);
	return (*(_33172_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a495e05c_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _34326_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _34341_fc, jule::Ptr<_1a48a2753_Data>* _34368_d) {
	if (((*((*(_34341_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_34326_e)).ptr(), (*((*(_34341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_34341_fc))))._field_Args.len() > 2LL)) {
		_1a48a4a0d_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _3526_t = _1a48c281c_eval1((*(_34326_e)), (*((*(_34341_fc))))._field_Args[0LL]);;
	if ((_3526_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3526_t))._field_Decl))) {
		_1a48a4a0d_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a4902154_isValidForSptrType(&((*(_3526_t))._field_Type))))) {
		jule::Ptr<_1a4676d30_StructIns> _3637_s = _1a48d9207_Struct((*(_3526_t))._field_Type.ptr());;
		if ((((_3637_s != nullptr) && ((*_3637_s.alloc)._field_Decl != nullptr)) && (*(*(_3637_s))._field_Decl.alloc)._field_Binded)) {
			_1a48a4a0d_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_34368_d))))._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2122_Sptr>(_1a48e2122_Sptr{._field_Elem=(*(_3526_t))._field_Type}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)});
	if (((*((*(_34341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a48d54cd_Type> _3777_old = (*((*(_34326_e))))._field_prefix;;
		(*((*(_34326_e))))._field_prefix=(*(_3526_t))._field_Type;
		jule::Ptr<_1a48a2753_Data> _3807_init = _1a48c32e0_evalExpr((*(_34326_e)), (*((*(_34341_fc))))._field_Args[1LL]);;
		(*((*(_34326_e))))._field_prefix=_3777_old;
		if ((_3807_init != nullptr)) {
			jule::Ptr<_1a463d137_Token> _3858_token = (*((*((*(_34341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a483ddb5_checkValidityForInitExpr((*((*(_34326_e))))._field_s, (!((*((*(_34326_e))))._field_immutable)), false, &((*(_3526_t))._field_Type), &(_3807_init), &(_3858_token));
			_1a4839630_checkAssignType((*((*(_34326_e))))._field_s, false, &((*(_3526_t))._field_Type), &(_3807_init), _3858_token, _1a48a7a11_getOwnerRefers((*(_34326_e)).ptr()));
			(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1a4717a4c_BuiltinNewCallExprModel>(_1a4717a4c_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=(*_3807_init.alloc)._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1a4717a4c_BuiltinNewCallExprModel>(_1a4717a4c_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_34368_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a495e48b_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _40528_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _40543_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_40543_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_40543_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_40528_e)).ptr(), (*((*((*(_40543_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _4146_expr = _1a48c32e0_evalExpr((*(_40528_e)), (*((*(_40543_fc))))._field_Args[0LL]);;
	if ((_4146_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a48d7b84_Prim((*(_4146_expr))._field_Type.ptr()) == nullptr) || (!(_1a48e1ab1_IsStr(_1a48d7b84_Prim((*(_4146_expr))._field_Type).ptr()))))) {
		_1a48a4a0d_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a48a2753_Data> _4236_d = _1a48cea49_buildVoidData();;
	(*(_4236_d))._field_Model=jule::Any(jule::new_ptr<_1a4717e26_BuiltinPanicCallExprModel>(_1a4717e26_BuiltinPanicCallExprModel{._field_Token=(*((*(_40543_fc))))._field_Token, ._field_Expr=(*(_4146_expr))._field_Model}), &__jule_any_type26);
	return _4236_d;;
}



inline jule::Ptr<_1a48a2753_Data> _1a495e8ba_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _43127_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _43142_fc, jule::Ptr<_1a48a2753_Data>* _43169_d) {
	if (((*((*(_43142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_43142_fc))))._field_Args.len() == 1LL)) {
			_1a48a4a0d_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a48a4a0d_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_43142_fc))))._field_Args.len() > 3LL)) {
		_1a48a4a0d_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48a2753_Data> _4446_t = _1a48c24cb_evalExprKind((*(_43127_e)), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4446_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4446_t))._field_Decl))) {
		_1a48a4a0d_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a48d8bda_Slc((*(_4446_t))._field_Type.ptr()) == nullptr)) {
		_1a48a4a0d_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_4446_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_43169_d))))._field_Type=(*(_4446_t))._field_Type;
	jule::Ptr<_1a48a2753_Data> _4596_lenExpr = _1a48c32e0_evalExpr(_1a4838bc3_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[1LL]);;
	if ((_4596_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a48ad781_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4596_lenExpr), (*((*((*(_43142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a47183cc_BuiltinMakeCallExprModel> _4666_model = jule::new_ptr<_1a47183cc_BuiltinMakeCallExprModel>(_1a47183cc_BuiltinMakeCallExprModel{._field_Type=(*(_4446_t))._field_Type, ._field_Len=(*(_4596_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_43169_d))))._field_Model=jule::Any(_4666_model, &__jule_any_type116);
	if (((*((*(_43142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a48a2753_Data> _4727_capExpr = _1a48c32e0_evalExpr(_1a4838bc3_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[2LL]);;
		if ((_4727_capExpr == nullptr)) {
			return (*(_43169_d));;
		};
		_1a48ad781_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4727_capExpr), (*((*((*(_43142_fc))))._field_Args[2LL]))._field_Token);
		(*(_4666_model))._field_Cap=(*(_4727_capExpr))._field_Model;
	};
	return (*(_43169_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a496002a_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _48229_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _48244_fc, jule::Ptr<_1a48a2753_Data>* _48271_d) {
	if (((*((*(_48244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48244_fc))))._field_Args.len() == 1LL)) {
			_1a48a4a0d_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a48a4a0d_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a465799d_Expr> _4926_firstArg = (*((*(_48244_fc))))._field_Args[0LL];;
	jule::Ptr<_1a48a2753_Data> _4936_t = _1a48c32e0_evalExpr((*(_48229_e)), _4926_firstArg);;
	if ((_4936_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a48e2ae5_Slc> _4986_s = _1a48d8bda_Slc((*(_4936_t))._field_Type.ptr());;
	if ((_4986_s == nullptr)) {
		_1a48a4a0d_pushErr((*(_48229_e)).ptr(), (*(_4926_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a483ddb5_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4936_t))._field_Type), &(_4936_t), &((*_4926_firstArg.alloc)._field_Token))) {
		_1a4839630_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4936_t))._field_Type), &(_4936_t), (*_4926_firstArg.alloc)._field_Token, _1a48a7a11_getOwnerRefers((*(_48229_e)).ptr()));
	};
	jule::Ptr<_1a48d54cd_Type> _5136_prefix = (*((*(_48229_e))))._field_prefix;;
	(*((*(_48229_e))))._field_prefix=(*(_4936_t))._field_Type;
	__JULE_DEFER({
		(*((*(_48229_e))))._field_prefix=_5136_prefix;
	});;
	(*(_48271_d))=jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=(*(_4936_t))._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});
	jule::Ptr<_1a465799d_Expr> _5216_secondArg = (*((*(_48244_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5216_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a9284c46:;
			{
				if (((*((*(_48244_fc))))._field_Args.len() > 2LL)) {
					_1a48a4a0d_pushErr((*(_48229_e)).ptr(), (*((*((*(_48244_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a48a2753_Data> _5287_e1 = _1a48c32e0_evalExpr((*(_48229_e)), (*((*(_5216_secondArg))._field_Kind.unsafe_cast_ptr<_1a4659e34_VariadicExpr>()))._field_Expr);;
				if ((_5287_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a48d7b84_Prim((*(_4986_s))._field_Elem.ptr()) != nullptr) && _1a48e0021_IsU8(_1a48d7b84_Prim((*(_4986_s))._field_Elem).ptr()))) {
					if (((_1a48d7b84_Prim((*(_5287_e1))._field_Type) != nullptr) && _1a48e1ab1_IsStr(_1a48d7b84_Prim((*(_5287_e1))._field_Type).ptr()))) {
						_1a48d2651_makeVariadic(&(_5287_e1), _1a495a90a_primU8);
						(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1a47187a6_BuiltinAppendCallExprModel>(_1a47187a6_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type23);
						return (*(_48271_d));;
					};
				};
				if ((!(_1a48d78ed_Variadicable((*(_5287_e1))._field_Type)))) {
					_1a48a4a0d_pushErr((*(_48229_e)).ptr(), (*(_5216_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_5287_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1a48d2651_makeVariadic(&(_5287_e1), (*(_4986_s))._field_Elem);
				(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1a483ddb5_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5287_e1), &((*_5216_secondArg.alloc)._field_Token))) {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
					_1a4839630_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5287_e1), (*_5216_secondArg.alloc)._field_Token, _1a48a7a11_getOwnerRefers((*(_48229_e)).ptr()));
				} else {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1a47187a6_BuiltinAppendCallExprModel>(_1a47187a6_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type23);
				return (*(_48271_d));;
			}
		}
		_match_end_1a9284bbe:;
	};
	jule::Ptr<_1a48a2753_Data> _5716_e1 = _1a48c32e0_evalExpr((*(_48229_e)), _5216_secondArg);;
	if ((_5716_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4713d45_SliceExprModel> _5766_slice = jule::new_ptr<_1a4713d45_SliceExprModel>(_1a4713d45_SliceExprModel{._field_ElemType=(*(_4986_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_48244_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_48244_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9291d30:;
		if (it != expr_end) {
			jule::Ptr<_1a465799d_Expr> _58014_arg = *it;
			{
				_5716_e1=_1a48c32e0_evalExpr((*(_48229_e)), _58014_arg);
				if ((_5716_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5716_e1))._field_Type.alloc)._field_Variadic) {
					_1a48a4a0d_pushErr((*(_48229_e)).ptr(), (*(_58014_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1a483ddb5_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5716_e1), &((*_58014_arg.alloc)._field_Token))) {
					_1a4839630_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5716_e1), (*_58014_arg.alloc)._field_Token, _1a48a7a11_getOwnerRefers((*(_48229_e)).ptr()));
				};
				(*(_5766_slice))._field_Elems=jule::append((*_5766_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5716_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1a9291d30:;
			++it;
			goto _iter_begin_1a9291d30;
		}
		_iter_end_1a9291d30:;
	};
	(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1a47187a6_BuiltinAppendCallExprModel>(_1a47187a6_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=jule::Any(_5766_slice, &__jule_any_type79)}), &__jule_any_type23);
	return (*(_48271_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4960404_callerCopySlice(jule::Ptr<_1a48a2753_Data>* _60225_dest, jule::Ptr<_1a48a447a_eval>* _60243_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _60258_fc, jule::Ptr<_1a48a2753_Data>* _60285_d) {
	if ((!((*((*(_60225_dest))))._field_Mutable))) {
		_1a48a4a0d_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a48a2753_Data> _6076_src = _1a48c32e0_evalExpr((*(_60243_e)), (*((*(_60258_fc))))._field_Args[1LL]);;
	if ((_6076_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a48e2ae5_Slc> _6116_slc = _1a48d8bda_Slc((*(_6076_src))._field_Type.ptr());;
	if ((_6116_slc != nullptr)) {
		if (((!((*(_6076_src))._field_Mutable)) && _1a48d6db4_Mutable((*_6116_slc.alloc)._field_Elem.ptr()))) {
			_1a48a4a0d_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1a48d5c1a_Equal((*((*(_60225_dest))))._field_Type, (*(_6076_src))._field_Type)))) {
			_1a48a4a0d_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1a48dd5e6_Prim> _6213_destPrim = _1a48d7b84_Prim((*(_1a48d8bda_Slc((*((*(_60225_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1a48dd5e6_Prim> _6223_prim = _1a48d7b84_Prim((*(_6076_src))._field_Type);;
		if (((((_6213_destPrim == nullptr) || (_6223_prim == nullptr)) || (!(_1a48e1ab1_IsStr(_6223_prim.ptr())))) || (!(_1a48e0021_IsU8(_6213_destPrim.ptr()))))) {
			_1a48a4a0d_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_60285_d))))._field_Type=_1a48a0ab4_lenKind();
	(*((*(_60285_d))))._field_Model=jule::Any(jule::new_ptr<_1a4719653_BuiltinCopyCallExprModel>(_1a4719653_BuiltinCopyCallExprModel{._field_Dest=(*(_60225_dest)), ._field_Src=_6076_src}), &__jule_any_type27);
	return (*(_60285_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4960833_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _63627_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _63642_fc, jule::Ptr<_1a48a2753_Data>* _63669_d) {
	if (((*((*(_63642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63642_fc))))._field_Args.len() == 1LL)) {
			_1a48a4a0d_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a48a4a0d_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_63642_fc))))._field_Args.len() > 2LL)) {
		_1a48a4a0d_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _6496_dest = _1a48c32e0_evalExpr((*(_63627_e)), (*((*(_63642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6496_dest == nullptr)) {
			_case_begin_1a92a7609:;
			{
				return nullptr;;
			}
		}
		else if ((_1a48d8bda_Slc((*(_6496_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92a842e:;
			{
				return _1a4960404_callerCopySlice(&(_6496_dest), _63627_e, _63642_fc, _63669_d);;
			}
		}
		else {
			_case_begin_1a92a7241:;
			{
				_1a48a4a0d_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a92a5591:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a4960ba7_callerLenSlice(jule::Ptr<_1a48a2753_Data>* _66124_expr, jule::Ptr<_1a48a2753_Data>* _66142_d) {
	(*((*(_66142_d))))._field_Type=_1a48a0ab4_lenKind();
	(*((*(_66142_d))))._field_Model=jule::Any(jule::new_ptr<_1a4718aa3_BuiltinLenCallExprModel>(_1a4718aa3_BuiltinLenCallExprModel{._field_Expr=(*(_66124_expr))}), &__jule_any_type117);
	return (*(_66142_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a496102b_callerLenMap(jule::Ptr<_1a48a2753_Data>* _66922_expr, jule::Ptr<_1a48a2753_Data>* _66940_d) {
	(*((*(_66940_d))))._field_Type=_1a48a0ab4_lenKind();
	(*((*(_66940_d))))._field_Model=jule::Any(jule::new_ptr<_1a4718aa3_BuiltinLenCallExprModel>(_1a4718aa3_BuiltinLenCallExprModel{._field_Expr=(*(_66922_expr))}), &__jule_any_type117);
	return (*(_66940_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a49613a0_callerLenArr(jule::Ptr<_1a48a2753_Data>* _67722_expr, jule::Ptr<_1a48a2753_Data>* _67740_d) {
	(*((*(_67740_d))))._field_Type=_1a48a0ab4_lenKind();
	(*((*(_67740_d))))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>((*(_1a48d8954_Arr((*((*(_67722_expr))))._field_Type.ptr())))._field_N));
	(*((*(_67740_d))))._field_Model=jule::Any((*((*(_67740_d))))._field_Constant, &__jule_any_type15);
	return (*(_67740_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4961724_callerLenStr(jule::Ptr<_1a48a2753_Data>* _68422_expr, jule::Ptr<_1a48a2753_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Type=_1a48a0ab4_lenKind();
	if (_1a48a318d_IsConst((*(_68422_expr)).ptr())) {
		(*((*(_68440_d))))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_1a4707245_ReadStr((*((*(_68422_expr))))._field_Constant.ptr()).len()));
		(*((*(_68440_d))))._field_Model=jule::Any((*((*(_68440_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1a4718aa3_BuiltinLenCallExprModel>(_1a4718aa3_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type117);
	};
	return (*(_68440_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4961a98_callerLenComptime(jule::Ptr<_1a48a2753_Data>* _69727_d, jule::I32 _69737_n) {
	(*((*(_69727_d))))._field_Type=_1a48a0ab4_lenKind();
	(*((*(_69727_d))))._field_Constant=static__1a470550c_NewI64(static_cast<jule::I64>(_69737_n));
	(*((*(_69727_d))))._field_Model=jule::Any((*((*(_69727_d))))._field_Constant, &__jule_any_type15);
	return (*(_69727_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4961ec7_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _70426_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _70441_fc, jule::Ptr<_1a48a2753_Data>* _70468_d) {
	if (((*((*(_70441_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_70426_e)).ptr(), (*((*(_70441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_70441_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _7126_dest = _1a48c2e9e_evalExpr1((*(_70426_e)), (*((*(_70441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7126_dest == nullptr)) {
			_case_begin_1a92b77e5:;
			{
				return nullptr;;
			}
		}
		else if ((_1a48d8bda_Slc((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b861a:;
			{
				return _1a4960ba7_callerLenSlice(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1a48d8954_Arr((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b8681:;
			{
				return _1a49613a0_callerLenArr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1a48d9724_Map((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b7493:;
			{
				return _1a496102b_callerLenMap(&(_7126_dest), _70468_d);;
			}
		}
		else if (((_1a48d7b84_Prim((*(_7126_dest))._field_Type.ptr()) != nullptr) && _1a48e1ab1_IsStr(_1a48d7b84_Prim((*(_7126_dest))._field_Type).ptr()))) {
			_case_begin_1a92b7509:;
			{
				return _1a4961724_callerLenStr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1a48d9ec7_comptimeStructFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b7570:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48d9ec7_comptimeStructFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a48da4e4_comptimeEnumFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b75d6:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48da4e4_comptimeEnumFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a48db2b4_comptimeTypeInfos((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b876e:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48db2b4_comptimeTypeInfos((*(_7126_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1a48daa11_comptimeParams((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b87d5:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48daa11_comptimeParams((*(_7126_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1a48db7d1_comptimeStatics((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b884b:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48db7d1_comptimeStatics((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a48dc837_comptimeFiles((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b88b2:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48dc837_comptimeFiles((*(_7126_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1a48dc31a_comptimeDecls((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92b8928:;
			{
				return _1a4961a98_callerLenComptime(_70468_d, (*(_1a48dc31a_comptimeDecls((*(_7126_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1a92b742c:;
			{
				_1a48a4a0d_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a92b577c:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a496234b_callerCapSlice(jule::Ptr<_1a48a2753_Data>* _74424_expr, jule::Ptr<_1a48a2753_Data>* _74442_d) {
	(*((*(_74442_d))))._field_Type=_1a48a0ab4_lenKind();
	(*((*(_74442_d))))._field_Model=jule::Any(jule::new_ptr<_1a4718da0_BuiltinCapCallExprModel>(_1a4718da0_BuiltinCapCallExprModel{._field_Expr=(*(_74424_expr))}), &__jule_any_type118);
	return (*(_74442_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a496277a_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _75226_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _75241_fc, jule::Ptr<_1a48a2753_Data>* _75268_d) {
	if (((*((*(_75241_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_75226_e)).ptr(), (*((*(_75241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_75241_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _7606_dest = _1a48c32e0_evalExpr((*(_75226_e)), (*((*(_75241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7606_dest == nullptr)) {
			_case_begin_1a92cb1ee:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7606_dest))._field_Decl) {
			_case_begin_1a92cc024:;
			{
				_1a48a4a0d_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a48d8bda_Slc((*(_7606_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92cc08a:;
			{
				return _1a496234b_callerCapSlice(&(_7606_dest), _75268_d);;
			}
		}
		else {
			_case_begin_1a92cad36:;
			{
				_1a48a4a0d_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a92c788d:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a4962c64_callerDeleteMap(jule::Ptr<_1a48a447a_eval>* _77525_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _77540_fc, jule::Ptr<_1a48a2753_Data>* _77567_expr, jule::Ptr<_1a48a2753_Data>* _77585_d) {
	if ((!((*((*(_77567_expr))))._field_Mutable))) {
		_1a48a4a0d_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_77585_d))=_1a48cea49_buildVoidData();
	jule::Ptr<_1a4719279_BuiltinDeleteCallExprModel> _7806_model = jule::new_ptr<_1a4719279_BuiltinDeleteCallExprModel>(_1a4719279_BuiltinDeleteCallExprModel{._field_Dest=(*(_77567_expr)), ._field_Key=jule::Ptr<_1a48a2753_Data>(nullptr)});;
	if (((*((*(_77540_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a48a2753_Data> _7847_key = _1a48c32e0_evalExpr((*(_77525_e)), (*((*(_77540_fc))))._field_Args[1LL]);;
		{
			
			if ((_7847_key == nullptr)) {
				_case_begin_1a92d3107:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7847_key))._field_Decl) {
				_case_begin_1a92d1c60:;
				{
					_1a48a4a0d_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a92d1be9:;
				{
					;
					jule::Ptr<_1a48d54cd_Type> _7938_keyType = (*(_1a48d9724_Map((*((*(_77567_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1a4839630_checkAssignType((*((*(_77525_e))))._field_s, false, &(_7938_keyType), &(_7847_key), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, _1a48a7a11_getOwnerRefers((*(_77525_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a92d1b83:;
		};
		(*(_7806_model))._field_Key=_7847_key;
	};
	(*((*(_77585_d))))._field_Model=jule::Any(_7806_model, &__jule_any_type28);
	return (*(_77585_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4963193_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _80429_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _80444_fc, jule::Ptr<_1a48a2753_Data>* _80471_d) {
	if (((*((*(_80444_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_80429_e)).ptr(), (*((*(_80444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_80444_fc))))._field_Args.len() > 2LL)) {
		_1a48a4a0d_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _8126_dest = _1a48c32e0_evalExpr((*(_80429_e)), (*((*(_80444_fc))))._field_Args[0LL]);;
	{
		
		if ((_8126_dest == nullptr)) {
			_case_begin_1a92d9aae:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8126_dest))._field_Decl) {
			_case_begin_1a92da8d4:;
			{
				_1a48a4a0d_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a48d9724_Map((*(_8126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a92da94a:;
			{
				return _1a4962c64_callerDeleteMap(_80429_e, _80444_fc, &(_8126_dest), _80471_d);;
			}
		}
		else {
			_case_begin_1a92d96e6:;
			{
				_1a48a4a0d_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a92d7a46:;
	};
}



inline jule::Ptr<_1a48a2753_Data> _1a49635c2_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _82740_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _82755_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_82755_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_82740_e)).ptr(), (*((*(_82755_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82755_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _8366_d = _1a48c24cb_evalExprKind((*(_82740_e)), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8366_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4721d20_FnIns> _8402_f = _1a48d8e71_Fn((*(_8366_d))._field_Type.ptr());;
	if ((_8402_f != nullptr)) {
		if (_1a47232d8_IsBuiltin(_8402_f)) {
			_1a48a4a0d_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8402_f.alloc)._field_Generics.len() != (*((*_8402_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a48a4a0d_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a4676d30_StructIns> _8512_s = _1a48d9207_Struct((*(_8366_d))._field_Type);;
	if (((_8512_s != nullptr) && ((*_8512_s.alloc)._field_Generics.len() != (*((*_8512_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a48a4a0d_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a48d9c41_comptime((*(_8366_d))._field_Type)) {
		_1a48a4a0d_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_8366_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c32ab_buildComptimeTypeInfoData(&((*((*(_82740_e))))._field_s), &((*(_8366_d))._field_Type));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4963a01_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _86341_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _86356_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_86356_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_86341_e)).ptr(), (*((*(_86356_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_86356_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _8716_d = _1a48c32e0_evalExpr((*(_86341_e)), (*((*(_86356_fc))))._field_Args[0LL]);;
	if ((_8716_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a48a0e16_isGoodValueToInfer(&(_8716_d))))) {
		_1a48a4a0d_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_8716_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a47c35ec_buildComptimeValue(&(_8716_d));;
}



inline jule::Ptr<_1a48a2753_Data> _1a4963e30_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _88338_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _88353_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_88353_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_88338_e)).ptr(), (*((*((*(_88353_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a4276798_Const> _8876_constant = static__1a470550c_NewI64(static_cast<jule::I64>((*((*((*(_88353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a4959b07_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8876_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8876_constant});;
}



inline jule::Ptr<_1a48a2753_Data> _1a49645a1_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _89538_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _89553_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_89553_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_89538_e)).ptr(), (*((*((*(_89553_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47b9824_comptimeFile>(_1a47b9824_comptimeFile{._field_file=(*((*((*(_89538_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a49649d0_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _90839_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _90854_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_90854_fc))))._field_Args.len() > 0LL)) {
		_1a48a4a0d_pushErr((*(_90839_e)).ptr(), (*((*((*(_90854_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a47b7da5_comptimeFiles>(_1a47b7da5_comptimeFiles{._field_files=(*((*((*(_90839_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
}



inline jule::Ptr<_1a48a2753_Data> _1a4964e0e_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _92143_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _92158_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_92158_fc))))._field_Args.len() > 2LL)) {
		_1a48a4a0d_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 0LL)) {
		_1a48a4a0d_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 1LL)) {
		_1a48a4a0d_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a9308e63:;
			{
				goto _match_end_1a930a23e;
			}
		}
		else {
			_case_begin_1a930a2b6:;
			{
				_1a48a4a0d_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a48a4d71_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a930a23e:;
	};
	jule::Ptr<_1a463d137_Token> _9426_ident = (*((*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a46592b8_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_92143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1)) {
			_case_begin_1a930c84b:;
			{
				goto _match_end_1a930ca7c;
			}
		}
		else {
			_case_begin_1a930cae3:;
			{
				_1a48a4a0d_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a930ca7c:;
	};
	jule::Ptr<_1a47d3cc2_scopeChecker> _9516_sc = (*((*(_92143_e))))._field_lookup.cast_ptr<_1a47d3cc2_scopeChecker>((jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data1);;
	jule::Ptr<_1a48d46db_TypeAlias> _9526_alias = jule::new_ptr<_1a48d46db_TypeAlias>(_1a48d46db_TypeAlias{._field_Scope=(*(_9516_sc))._field_tree, ._field_Public=_1a48265c8_IsPub((*(_9426_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9426_ident, ._field_Ident=(*_9426_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1a48dcbde_TypeSym>(_1a48dcbde_TypeSym{._field_Decl=jule::Ptr<_1a4653669_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1a48d54cd_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>(nullptr)});;
	jule::Ptr<_1a48a2753_Data> _9626_t = _1a48c281c_eval1((*(_92143_e)), (*((*(_92158_fc))))._field_Args[1LL]);;
	if ((_9626_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9626_t))._field_Decl) {
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9626_t))._field_Type;
	} else {
		jule::Ptr<_1a47ae044_comptimeTypeInfo> _9697_cti = _1a48db54a_comptimeTypeInfo((*(_9626_t))._field_Type.ptr());;
		if ((_9697_cti == nullptr)) {
			_1a48a4a0d_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1a48a4d71_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9697_cti))._field_base;
	};
	_1a47d8e3c_checkTypeAlias(_9516_sc, &(_9526_alias));
	return _1a48cea49_buildVoidData();;
}



inline jule::Ptr<_1a48a2753_Data> _1a496533d_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _98135_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _98150_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<_1a48a2753_Data> _9826_result = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a495973e_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	if (((*((*(_98150_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_98135_e)).ptr(), (*((*(_98150_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9826_result;;
	};
	if (((*((*(_98150_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _9946_d = _1a48c24cb_evalExprKind((*(_98135_e)), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9946_d == nullptr)) {
		return _9826_result;;
	};
	if ((!(_1a4903595_validTypeForXof(&((*(_9946_d))._field_Type))))) {
		_1a48a4a0d_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_9946_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9826_result))._field_Model=jule::Any(jule::new_ptr<_1a4719d29_SizeofExprModel>(_1a4719d29_SizeofExprModel{._field_Expr=(*(_9946_d))._field_Model}), &__jule_any_type119);
	return _9826_result;;
}



inline jule::Ptr<_1a48a2753_Data> _1a496576c_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _100636_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _100651_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<_1a48a2753_Data> _10076_result = jule::new_ptr<_1a48a2753_Data>(_1a48a2753_Data{._field_untyped=false, ._field_Type=_1a495973e_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a4276798_Const>(nullptr)});;
	if (((*((*(_100651_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_100636_e)).ptr(), (*((*(_100651_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10076_result;;
	};
	if (((*((*(_100651_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _10196_d = _1a48c24cb_evalExprKind((*(_100636_e)), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10196_d == nullptr)) {
		return _10076_result;;
	};
	if ((!(_1a4903595_validTypeForXof(&((*(_10196_d))._field_Type))))) {
		_1a48a4a0d_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a48d58c9_Str((*(_10196_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10076_result))._field_Model=jule::Any(jule::new_ptr<_1a471a4cd_AlignofExprModel>(_1a471a4cd_AlignofExprModel{._field_Expr=(*(_10196_d))._field_Model}), &__jule_any_type120);
	return _10076_result;;
}



inline jule::Ptr<_1a48a2753_Data> _1a4965b9b_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _103133_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _103148_fc, jule::Ptr<_1a48a2753_Data>* ) {
	if (((*((*(_103148_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_103133_e)).ptr(), (*((*(_103148_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103148_fc))))._field_Args.len() > 1LL)) {
		_1a48a4a0d_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a48a2753_Data> _10406_d = _1a48c32e0_evalExpr((*(_103133_e)), (*((*(_103148_fc))))._field_Args[0LL]);;
	if ((_10406_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a48d7667_GC((*(_10406_d))._field_Type.ptr())))) {
		_1a48a4a0d_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a48a2753_Data> _10496_result = _1a48cea49_buildVoidData();;
	(*(_10496_result))._field_Model=jule::Any(jule::new_ptr<_1a471ad3b_FreeExprModel>(_1a471ad3b_FreeExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type29);
	return _10496_result;;
}



inline jule::Ptr<_1a48a2753_Data> _1a49660ca_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _105444_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _105459_fc, jule::Ptr<_1a48a2753_Data>* _105486_d) {
	if ((!(_1a48a5503_isUnsafe((*(_105444_e)).ptr())))) {
		_1a48a4a0d_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_105459_fc))))._field_Args.len() < 1LL)) {
		_1a48a4a0d_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a48a2753_Data> _10646_argd = _1a48c32e0_evalExpr((*(_105444_e)), (*((*(_105459_fc))))._field_Args[0LL]);;
	if ((_10646_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a48d7b84_Prim((*(_10646_argd))._field_Type.ptr()) == nullptr) || (!(_1a48e1ab1_IsStr(_1a48d7b84_Prim((*(_10646_argd))._field_Type).ptr()))))) {
		_1a48a4a0d_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1a48d58c9_Str((*(_10646_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a48a318d_IsConst(_10646_argd.ptr()))) || (!(_1a4709841_IsStr((*(_10646_argd))._field_Constant.ptr()))))) {
		_1a48a4a0d_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a48a2753_Data> _10796_r = _1a48cea49_buildVoidData();;
	jule::Ptr<_1a4721d20_FnIns> _10816_f = _1a48d8e71_Fn((*((*(_105486_d))))._field_Type);;
	if (((*(_10816_f))._field_Generics.len() > 0LL)) {
		(*(_10796_r))._field_Type=(*((*(_10816_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1a471aa3e_BackendEmitExprModel> _10866_model = jule::new_ptr<_1a471aa3e_BackendEmitExprModel>(_1a471aa3e_BackendEmitExprModel{._field_Code=_1a4707245_ReadStr((*(_10646_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_105459_fc))))._field_Args.len() > 1LL)) {
		(*(_10866_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_105459_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_105459_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a9339a76:;
			if (it != expr_end) {
				jule::Ptr<_1a465799d_Expr> _109215_arg = *it;
				{
					_10646_argd=_1a48c281c_eval1((*(_105444_e)), _109215_arg);
					if ((_10646_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10646_argd))._field_Decl) {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_10646_argd))._field_Type, &__jule_any_type86); __jule_collection; }));
					} else {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10646_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1a9339a76:;
				++it;
				goto _iter_begin_1a9339a76;
			}
			_iter_end_1a9339a76:;
		};
	};
	(*_10796_r.alloc)._field_Model=jule::Any(_10866_model, &__jule_any_type22);
	return _10796_r;;
}



inline jule::Ptr<_1a53016ce_FileInfo> _1a534ba9d_ParseFile(jule::Ptr<_1a4643a11_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a53016ce_FileInfo> _276_finf = jule::new_ptr<_1a53016ce_FileInfo>(_1a53016ce_FileInfo{._field_Ast=jule::Ptr<_1a46517aa_AST>(nullptr), ._field_Errors=jule::Slice<_1e71b7487_Log>(nullptr)});;
	({
		__jule_tuple_x_1a46517aa_AST__jule_tuple_s_1e71b7487_Log __jule_assign_result = _1a534c175_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a46517aa_AST__jule_tuple_s_1e71b7487_Log _1a534c175_parseFileset(jule::Ptr<_1a4643a11_Fileset> _5521_f) {
	__jule_tuple_x_1a46517aa_AST__jule_tuple_s_1e71b7487_Log __jule_func_result;
	jule::Ptr<_1a536c827_parser> _566_p = jule::new_ptr<_1a536c827_parser>(_1a536c827_parser{._field_ast=jule::Ptr<_1a46517aa_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1a4652a86_Directive>>(nullptr), ._field_errors=jule::Slice<_1e71b7487_Log>(nullptr), ._field_ep=jule::Ptr<_1a535c042_exprBuilder>(nullptr)});;
	_1a537c859_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a4663767_ScopeTree> _1a534ca05_newScope(void) {
	return jule::new_ptr<_1a4663767_ScopeTree>(_1a4663767_ScopeTree{._field_Parent=jule::Ptr<_1a4663767_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1a4663107_Stmt>(nullptr), ._field_End=jule::Ptr<_1a463d137_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a534cd8a_isSt(jule::Ptr<_1a463d137_Token> _149_current, jule::Ptr<_1a463d137_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a534d20e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a463d137_Token>>* _2026_tokens, jule::I32* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a463d137_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U32>(17LLU)) || ((*_263_prev.alloc)._field_Id == static_cast<jule::U32>(5LLU))) || (_1a463db82_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a534d5c7_nextStPos(jule::Slice<jule::Ptr<_1a463d137_Token>>* _3415_tokens, jule::I32 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _356_braceN = 0LL;;
	jule::I32 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1a463d137_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a93ba486:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1a534d20e_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a534cd8a_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1a93be127;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1a93b9023;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a93ba6c8:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a534cd8a_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1a93be127;
							};
						};
						goto _iter_next_1a93b9023;
					}
				}
				_match_end_1a93ba62e:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1a93b9023;
			};
			if ((_366_i > _3440_start)) {
				if (_1a534d20e_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1a93b9023;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a534cd8a_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a534cd8a_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1a93b9023;
			};
			_julec_label_1a93be127:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a93b9023:;
	}
	_iter_end_1a93b9023:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a463d137_Token__jule_tuple_bool _1a534d94b_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1a463d137_Token>> _9628_tokens) {
	__jule_tuple_sx_1a463d137_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a534d5c7_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a463d137_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a534d94b_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _1a534e133_splitStmts(jule::Slice<jule::Ptr<_1a463d137_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1a534dc7b_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a534dc7b_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a534dc7b_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a463d137_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1a463d137_Token__jule_tuple_bool __jule_assign_result = _1a534d94b_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a534dc7b_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1a534dc7b_stmt>(_1a534dc7b_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1a93c2d95:;
	}
	_iter_end_1a93c2d95:;;
	return _1186_stmts;;
}



inline jule::Bool _1a5367679_isTypeOp(jule::U32* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U32>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U32>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1a5367987_isTypeRange(jule::Slice<jule::Ptr<_1a463d137_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9499730:;
		if (it != expr_end) {
			jule::I32 _8806_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I32 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a463d137_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a949b0e4:;
						if (it != expr_end) {
							jule::Ptr<_1a463d137_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1a949b897:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1a949b0e4;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1a949bc82:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1a949b0e4;
										}
									}
									_match_end_1a949bb83:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1a5367679_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1a949b0e4:;
							++it;
							goto _iter_begin_1a949b0e4;
						}
						_iter_end_1a949b0e4:;
					};
					return true;;
				};
				if ((!(_1a5367679_isTypeOp(&((*_8809_token.alloc)._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1a9499730:;
			++it;
			_8806_i++;
			goto _iter_begin_1a9499730;
		}
		_iter_end_1a9499730:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a463d137_Token>> _1a5367c51_getBlockExpr(jule::Slice<jule::Ptr<_1a463d137_Token>>* _91122_tokens) {
	jule::I32 _9126_braceN = 0LL;;
	jule::I32 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a949a423:;
		if (it != expr_end) {
			jule::I32 _9146_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1a949e988:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a949ea21:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1a949e8bc;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a949ea87:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a949eaed:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1a949e8bc:;
				};
			}
			_iter_next_1a949a423:;
			++it;
			_9146_i++;
			goto _iter_begin_1a949a423;
		}
		_iter_end_1a949a423:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token _1a5368119_splitDelim(jule::Slice<jule::Ptr<_1a463d137_Token>>* _94320_tokens, jule::U32 _94345_delim) {
	__jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token __jule_func_result;
	jule::I32 _9446_func = -1LL;;
	jule::I32 _9456_rangeN = 0LL;;
	jule::I32 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1a463d137_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1a94a45d6:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a94a465d:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1a94a2cbb;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a94a46c4:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1a94a2cbb;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1a94a473a:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1a94a4350:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a463d137_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1a463d137_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1a94a2cbb:;
	}
	_iter_end_1a94a2cbb:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1a53683d3_findLowestPrecOp(jule::Slice<jule::Ptr<_1a463d137_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I32 _9886_precPos = -1LL;;
	jule::I32 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94a98c7:;
		if (it != expr_end) {
			jule::I32 _9926_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a94aa675:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1a94aa70d;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a94aa70d:;
						{
							(_9906_braceN)++;
							goto _iter_next_1a94a98c7;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1a94aa774:;
						{
							(_9906_braceN)--;
							goto _iter_next_1a94a98c7;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1a94aa7da:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1a94a98c7;
						}
					}
					_match_end_1a94aa5a9:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1a94aa862:;
						{
							goto _iter_next_1a94a98c7;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1a94ac0b1:;
						{
							goto _iter_next_1a94a98c7;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1a94ac127:;
						{
							goto _iter_next_1a94a98c7;
						}
					}
					else if ((!(_1a463db82_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1a94ac18d:;
						{
							goto _iter_next_1a94a98c7;
						}
					}
					_match_end_1a94ac028:;
				};
				jule::Ptr<_1a463d137_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1a463d874_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1a94a98c7;
				};
				if (((_9926_i > 1LL) && ((*_10213_left.alloc)._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1a463d137_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1a94a98c7;
						};
					};
				};
				jule::U8 _10383_p = _1a463d4de_Prec((*(_9929_token)));;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1a94a98c7:;
			++it;
			_9926_i++;
			goto _iter_begin_1a94a98c7;
		}
		_iter_end_1a94a98c7:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1a46592b8_IdentExpr> _1a536869c_buildIdentExpr(jule::Ptr<_1a463d137_Token>* _104724_token) {
	return jule::new_ptr<_1a46592b8_IdentExpr>(_1a46592b8_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a463d137_Token__jule_tuple_int _1a5368966_getRangeExprTokens(jule::Slice<jule::Ptr<_1a463d137_Token>>* _105528_tokens) {
	__jule_tuple_sx_1a463d137_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10566_rangeN = 0LL;;
	jule::I32 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1a463d137_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a94b3eca:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a94b430a:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1a94b4052:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1a94b34a2:;
	}
	_iter_end_1a94b34a2:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a5368d40_isAnonFnHead(jule::Slice<jule::Ptr<_1a463d137_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a94b5cac:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1a94b61db;
				};
				goto _case_begin_1a94b632e;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a94b632e:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1a94b61db;
				};
				return true;;
			}
		}
		_match_end_1a94b61db:;
	};
	return false;;
}



inline jule::Bool _1a53699de_checkAssignTokens(jule::Slice<jule::Ptr<_1a463d137_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a4642bb9_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94e1403:;
		if (it != expr_end) {
			jule::Ptr<_1a463d137_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a94e1ab8:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a94e1e4d:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1a94e1d4e:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1a94e30a3:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1a94e313b:;
						{
							goto _iter_next_1a94e1403;
						}
					}
					else if (_1a464324c_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1a94e31a2:;
						{
							return true;;
						}
					}
					_match_end_1a94e3009:;
				};
			}
			_iter_next_1a94e1403:;
			++it;
			goto _iter_begin_1a94e1403;
		}
		_iter_end_1a94e1403:;
	};
	return false;;
}



inline _1e71b7487_Log _1a536a99b_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1a4643a11_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1e71b78e9_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1a463d137_Token>> _1a536aec9_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1a463d137_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a463d137_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I32 _396_rangeN = 1LL;;
	jule::I32 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1a463d137_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1a94e820c:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1a94e8570:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1a94e84d7:;
			};
		}
	_iter_next_1a94e5d0e:;
	}
	_iter_end_1a94e5d0e:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token _1a536b293_rangeLast(jule::Slice<jule::Ptr<_1a463d137_Token>>* _6019_tokens) {
	__jule_tuple_sx_1a463d137_Token__jule_tuple_sx_1a463d137_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U32>(73LLU)) && (_642_first != static_cast<jule::U32>(76LLU))) && (_642_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _706_braceN = 0LL;;
	jule::I32 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1a463d137_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a94ec3dc:;
					{
						(_706_braceN)++;
						goto _iter_next_1a94eb72c;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a94ec71c:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1a94ec464:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1a94eb72c:;
	}
	_iter_end_1a94eb72c:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log _1a536b749_parts(jule::Slice<jule::Ptr<_1a463d137_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1a463d137_Token__jule_tuple_s_1e71b7487_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1026_rangeN = 0LL;;
	jule::I32 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95005aa:;
		if (it != expr_end) {
			jule::I32 _1046_i = it - expr->begin();
			jule::Ptr<_1a463d137_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a95015de:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a9501666:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1a95016cc:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1a95005aa;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1e71b7487_Log _1155_err = _1a536a99b_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1e71b7487_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1a9501523:;
				};
			}
			_iter_next_1a95005aa:;
			++it;
			_1046_i++;
			goto _iter_begin_1a95005aa;
		}
		_iter_end_1a95005aa:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a463d137_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1a536b9d0_getCloseOfBrace(jule::U32 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1a9509ae2:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1a9509b8b:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1a9509c13:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1a9500e90:;
			{
				return _12820_left;;
			}
		}
		_match_end_1a950106c:;
	};
}



inline _1e71b7487_Log _1a536be0e_compilerErr(jule::Ptr<_1a463d137_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1e71b78e9_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1a4644d0e_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1a536c2a5_pushSuggestion(_1e71b7487_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1e71b78e9_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1a4653669_TypeDecl> _1a537d21c_buildVoidType(void) {
	return jule::new_ptr<_1a4653669_TypeDecl>(_1a4653669_TypeDecl{._field_Token=jule::Ptr<_1a463d137_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a49e63ad_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1a8b083cd:;
			{
				__jule_func_result.__jule_result_arg0=_1e71ba798_IsWindows(_1ce798b19_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1a8b08444:;
			{
				__jule_func_result.__jule_result_arg0=_1e71baaa6_IsDarwin(_1ce798b19_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1a8b080ae:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bad70_IsLinux(_1ce798b19_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1a8b08125:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bb9ca_IsUnix(_1ce798b19_OS);
			}
		}
		else {
			_case_begin_1a8b07a1a:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a8b07e8d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a49e17b5_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1a8b0a941:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bb1b1_IsI386(_1ce798dc2_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1a8b0a9a7:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bb447_IsAmd64(_1ce798dc2_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1a8b0a622:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bb711_IsArm64(_1ce798dc2_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1a8b0a688:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bc0e6_Is64Bit(_1ce798dc2_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1a8b0a6ee:;
			{
				__jule_func_result.__jule_result_arg0=_1e71bbda4_Is32Bit(_1ce798dc2_Arch);
			}
		}
		else {
			_case_begin_1a8b0a07d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a8b0a501:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a4a0b747_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1ce790ced_Base(_5029_p);
	jule::I32 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1ce79076a_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I32 _646_i = _1ce786dd2_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e63ad_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e17b5_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1ce786dd2_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e63ad_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e17b5_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e17b5_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e63ad_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a49e63ad_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1a4a0c8be_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1ce798b19_OS); };
	if (_1e71bb9ca_IsUnix(_1ce798b19_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a4a0cb44_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1ce798dc2_Arch); };
	if (_1e71bc0e6_Is64Bit(_1ce798dc2_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1e71bbda4_Is32Bit(_1ce798dc2_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a4a0ce30_initVars(jule::Slice<jule::Str>* _5518_vars, _1a4a0c5a0_CompileInfo* _5532_info) {
	_1a4a0c8be_setOsVars(_5518_vars);
	_1a4a0cb44_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1a8b168d6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1a8b16375:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1a8b1630e:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1a8b1641e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1a8b178c6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1a8b1793c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1a8b1783d:;
	};
}



inline jule::Slice<jule::U8> _1a5382430_readBuff(jule::Str _1613_path) {
	return ({
		auto except = static__1cd61e474_Read(_1613_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1a68cc6b0_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1cd631134_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1e71b7487_Log _1a538273d_flatCompilerErr(jule::Str _2720_text) {
	return _1e71b7487_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2720_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1a471dc62_Fn> _1a4966a48_RuntimeFindFn(jule::Ptr<_1a480c3d3_ImportInfo>* _1823_runtime, jule::Str _1851_ident) {
	;
	jule::Ptr<_1a471dc62_Fn> _206_f = _1a480d9de_FindFn((*(_1823_runtime)).ptr(), _1851_ident, false);;
	if ((_206_f == nullptr)) {
		jule::println(_1a8b58ad2_toStr(_1851_ident));
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:23:3"));;
	};
	return _206_f;;
}



inline jule::Ptr<_1a4673ec5_Struct> _1a4967142_RuntimeFindStruct(jule::Ptr<_1a480c3d3_ImportInfo>* _3327_runtime, jule::Str _3355_ident) {
	;
	jule::Ptr<_1a4673ec5_Struct> _356_f = _1a480d5e3_FindStruct((*(_3327_runtime)).ptr(), _3355_ident, false);;
	if ((_356_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:37:3"));;
	};
	return _356_f;;
}



inline void _1a538715a_pushPasses(jule::Ptr<_1a480eb55_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b5aa18:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _12414_f = *it;
			{
				_julec_label_1a8b5b189:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b5b5b8:;
					if (it != expr_end) {
						_1a47eb8ab_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1a8b5b5b8;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a8b5d3ab:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1a8b5b5b8;
										};
									}
									_iter_next_1a8b5d3ab:;
									++it;
									goto _iter_begin_1a8b5d3ab;
								}
								_iter_end_1a8b5d3ab:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1a8b5b5b8:;
						++it;
						goto _iter_begin_1a8b5b5b8;
					}
					_iter_end_1a8b5b5b8:;
				};
			}
			_iter_next_1a8b5aa18:;
			++it;
			goto _iter_begin_1a8b5aa18;
		}
		_iter_end_1a8b5aa18:;
	};
}



inline jule::Slice<jule::Str> _1a5387523_getAllUniquePasses(jule::Ptr<_1a480eb55_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1a538715a_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b5cca1:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1a538715a_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1a8b5cca1:;
			++it;
			goto _iter_begin_1a8b5cca1;
		}
		_iter_end_1a8b5cca1:;
	};
	return _14110_passes;;
}



inline _1a4a0c5a0_CompileInfo _1a5387732_buildCompileInfo(void) {
	_1a4a0c5a0_CompileInfo _1546_info = _1a4a0c5a0_CompileInfo{._field_Prod=_1ce7a1083_Production, ._field_Test=_1ce7a06c0_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1ce79d7ab_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1a8b60633:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1a8b60776:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1a8b60710:;
	};
	{
		auto &_match_expr{ _1ce79edb7_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1a8b6080e:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1a8b60e19:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1a8b60e80:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1a8b61865:;
	};
	return _1546_info;;
}



inline void _1a53879da_pushRuntimeToAST(jule::Ptr<_1a46517aa_AST>* _17926_f) {
	jule::Ptr<_1a466b5b6_UseDecl> _1806_decl = jule::new_ptr<_1a466b5b6_UseDecl>(_1a466b5b6_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1a463d137_Token>(_1a463d137_Token{._field_File=jule::Ptr<_1a4643a11_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U32>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1a466b5b6_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1a5388238_IterPackages(jule::Ptr<_1a53857a7_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a480eb55_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b790db:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1a8b790db:;
			++it;
			goto _iter_begin_1a8b790db;
		}
		_iter_end_1a8b790db:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a53884ad_IterFiles(jule::Ptr<_1a480eb55_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a4725065_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b8248a:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1a8b8248a:;
			++it;
			goto _iter_begin_1a8b8248a;
		}
		_iter_end_1a8b8248a:;
	};
}



inline void _1a5388799_IterTraitMethods(jule::Ptr<_1a4729476_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1a471dc62_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b8317d:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1a8b8317d:;
			++it;
			goto _iter_begin_1a8b8317d;
		}
		_iter_end_1a8b8317d:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b83634:;
		if (it != expr_end) {
			jule::Ptr<_1a48dcbde_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1a4729476_Trait> _297_it = _1a48d948d_Trait((*(_2814_inh))._field_Type.ptr());;
				_1a5388799_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1a8b83634:;
			++it;
			goto _iter_begin_1a8b83634;
		}
		_iter_end_1a8b83634:;
	};
}



inline jule::Bool _1a538a9dd_IsForwarded(jule::Ptr<_1a47cba34_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a8ba903e:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1a48a2753_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1a8ba9281:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a8ba9dec:;
						{
							return false;;
						}
					}
					_match_end_1a8ba9d86:;
				};
			}
		}
		else {
			_case_begin_1a8ba91b5:;
			{
				return true;;
			}
		}
		_match_end_1a8ba914e:;
	};
}



inline jule::Bool _1a538abb9_IsExprComesFromBind(jule::Ptr<_1a48a2753_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a8baa947:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1a4852e51_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8baab56:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1a8ba99ac:;
			{
				return false;;
			}
		}
		_match_end_1a8ba9946:;
	};
}



inline jule::Bool _1a538ae83_IsAny(jule::Ptr<_1a48d54cd_Type>* _4015_t) {
	if ((_1a48d86bd_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _442_prim = _1a48d7b84_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1a48e1d47_IsAny(_442_prim));;
}



inline jule::Bool _1a538b2c4_IsClosure(jule::Ptr<_1a47147a2_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a538b55a_IsOpMethod(jule::Ptr<_1a471dc62_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a4721d20_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a538b8ce_IsTraitMethod(jule::Ptr<_1a4676d30_StructIns>* _6823_owner, jule::Ptr<_1a4721d20_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97c1a46:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _6914_t = *it;
			{
				if ((_1a472a158_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1a97c1a46:;
			++it;
			goto _iter_begin_1a97c1a46;
		}
		_iter_end_1a97c1a46:;
	};
	return false;;
}



inline jule::Bool _1a538bc53_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _1ce7841cb_HasPrefix(_8217_f, _1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ce79807a_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1a4652a86_Directive> _1a538cade_FindDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9697d90:;
		if (it != expr_end) {
			jule::Ptr<_1a4652a86_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1a9697d90:;
			++it;
			goto _iter_begin_1a9697d90;
		}
		_iter_end_1a9697d90:;
	};
	return nullptr;;
}



inline jule::Bool _1a538cea7_HasDirective(jule::Slice<jule::Ptr<_1a4652a86_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1a538cade_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::I32 _1a538d9e1_FindTraitTypeOffsetS(jule::Ptr<_1a4729476_Trait> _3925_t, jule::Ptr<_1a4676d30_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a969d47d:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a969e36e:;
						if (it != expr_end) {
							jule::Ptr<_1a4676d30_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1a969e36e:;
							++it;
							goto _iter_begin_1a969e36e;
						}
						_iter_end_1a969e36e:;
					};
					goto _iter_end_1a969d47d;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1a969d47d:;
			++it;
			goto _iter_begin_1a969d47d;
		}
		_iter_end_1a969d47d:;
	};
	return -1LL;;
}



inline jule::I32 _1a538dd65_FindTraitTypeOffset(jule::Ptr<_1a4729476_Trait> _6224_t, jule::Ptr<_1a48d54cd_Type> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a4676d30_StructIns> _6610_s = nullptr;;
	if ((_1a48d7e1a_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1a48d7e1a_Sptr(_6245_k)))._field_Elem;
	};
	_6610_s=_1a48d9207_Struct(_6245_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1a538d9e1_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1a4721d20_FnIns> _1a538e294_FindOperator(jule::Ptr<_1a4676d30_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a96a2d89:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1a96a2b8b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a96a2c02:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1a96a2e00:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a96a2e77:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a96a2eee:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a96a3120:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a96a3186:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a96a31ec:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a96a3263:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a96a32c9:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a96a3351:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a96a33c8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1a96a3450:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a96a34c7:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1a96a354e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1a96a35c6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a96a364d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1a96a36c5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a96a374c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1a96a37c4:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a96a384b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1a96a38c3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1a96a394a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1a96a39c2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1a96a27c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a96a2905:;
	};
}



inline jule::Ptr<_1a4721d20_FnIns> _1a538e618_FindFnGenericInstance(jule::Ptr<_1a471dc62_Fn>* _14731_f, jule::Slice<jule::Ptr<_1a48d54cd_Type>> _14745_generics) {
	_julec_label_1a96ab1d3:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96b0418:;
		if (it != expr_end) {
			jule::Ptr<_1a4721d20_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a96b0d20:;
					if (it != expr_end) {
						jule::I32 _1507_i = it - expr->begin();
						{
							if ((!(_1a48d5c1a_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Type, _14745_generics[_1507_i])))) {
								goto _iter_next_1a96b0418;
							};
						}
						_iter_next_1a96b0d20:;
						++it;
						_1507_i++;
						goto _iter_begin_1a96b0d20;
					}
					_iter_end_1a96b0d20:;
				};
				return _14914_ins;;
			}
			_iter_next_1a96b0418:;
			++it;
			goto _iter_begin_1a96b0418;
		}
		_iter_end_1a96b0418:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1a4676d30_StructIns> _1a538ea9c_FindStructGenericInstance(jule::Ptr<_1a4673ec5_Struct>* _16335_s, jule::Slice<jule::Ptr<_1a48d54cd_Type>> _16353_generics) {
	_julec_label_1a96b1293:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96b2519:;
		if (it != expr_end) {
			jule::Ptr<_1a4676d30_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a96b2e21:;
					if (it != expr_end) {
						jule::I32 _1667_i = it - expr->begin();
						{
							if ((!(_1a48d5c1a_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Type, _16353_generics[_1667_i])))) {
								goto _iter_next_1a96b2519;
							};
						}
						_iter_next_1a96b2e21:;
						++it;
						_1667_i++;
						goto _iter_begin_1a96b2e21;
					}
					_iter_end_1a96b2e21:;
				};
				return _16514_ins;;
			}
			_iter_next_1a96b2519:;
			++it;
			goto _iter_begin_1a96b2519;
		}
		_iter_end_1a96b2519:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Ptr<_1a480c3d3_ImportInfo> _1a538ed99_SelectImport(jule::Slice<jule::Ptr<_1a480c3d3_ImportInfo>> _17821_imports, jule::Str _17851_linkpath) {
	{
		auto expr = &(_17821_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96b3394:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> _17914_imp = *it;
			{
				if (((*(_17914_imp))._field_LinkPath == _17851_linkpath)) {
					return _17914_imp;;
				};
			}
			_iter_next_1a96b3394:;
			++it;
			goto _iter_begin_1a96b3394;
		}
		_iter_end_1a96b3394:;
	};
	return nullptr;;
}



inline jule::Bool _1a8b76eda_isOrdered(jule::Ptr<_1a4852e51_Var>* _1418_t, jule::Slice<jule::Ptr<_1a4852e51_Var>> _1425_s) {
	_julec_label_1a8b7941b:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b7986c:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1a8b7a175:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1a8b7986c;
							};
						}
					}
					_match_end_1a8b7a0ed:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b7a85c:;
					if (it != expr_end) {
						jule::Ptr<_1a4852e51_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1a8b7986c;
							};
						}
						_iter_next_1a8b7a85c:;
						++it;
						goto _iter_begin_1a8b7a85c;
					}
					_iter_end_1a8b7a85c:;
				};
				return false;;
			}
			_iter_next_1a8b7986c:;
			++it;
			goto _iter_begin_1a8b7986c;
		}
		_iter_end_1a8b7986c:;
	};
	return true;;
}

inline jule::Bool _1a8b7cc5a_isOrdered(jule::Ptr<_1a4673ec5_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _1425_s) {
	_julec_label_1a8b80147:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b80598:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b80e5b:;
					if (it != expr_end) {
						jule::Ptr<_1a4673ec5_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1a8b80598;
							};
						}
						_iter_next_1a8b80e5b:;
						++it;
						goto _iter_begin_1a8b80e5b;
					}
					_iter_end_1a8b80e5b:;
				};
				return false;;
			}
			_iter_next_1a8b80598:;
			++it;
			goto _iter_begin_1a8b80598;
		}
		_iter_end_1a8b80598:;
	};
	return true;;
}



inline void _1a8b74614_order(jule::Slice<jule::Ptr<_1a4852e51_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1a8b74acb:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1a8b75868:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a4852e51_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1a8b76a56:;
				if (it != expr_end) {
					jule::Ptr<_1a4852e51_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1a8b75e1d;
						};
					}
					_iter_next_1a8b76a56:;
					++it;
					goto _iter_begin_1a8b76a56;
				}
				_iter_end_1a8b76a56:;
			};
			if (_1a8b76eda_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1a8b75e1d:;
	}
	_iter_end_1a8b75e1d:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1a8b74acb;
	};
}

inline void _1a8b751e7_order(jule::Slice<jule::Ptr<_1a4673ec5_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1a8b76182:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1a8b79dbc:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a4673ec5_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1a8b7c7c6:;
				if (it != expr_end) {
					jule::Ptr<_1a4673ec5_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1a8b7bb8d;
						};
					}
					_iter_next_1a8b7c7c6:;
					++it;
					goto _iter_begin_1a8b7c7c6;
				}
				_iter_end_1a8b7c7c6:;
			};
			if (_1a8b7cc5a_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1a8b7bb8d:;
	}
	_iter_end_1a8b7bb8d:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1a8b76182;
	};
}



inline void _1a6243664_EliminateDefines(jule::Ptr<_1a53857a7_IR>* _38426_ir) {
	jule::Ptr<_1a6240276_ObjectDeadCode> _3856_ocd = static__1a62407e8_new(_38426_ir);;
	_1a62433ab_elimanate(_3856_ocd);
}



inline void _1a6247525_eliminateDeadCodeOfScope(jule::Ptr<_1a47cba34_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1a47ce581_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47ce581_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47ce581_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a47cebe1_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1a62442e1_scopeDeadCode> _2216_sdc = jule::new_ptr<_1a62442e1_scopeDeadCode>(_1a62442e1_scopeDeadCode{._field_parent=jule::Ptr<_1a62442e1_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a47ce581_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a47cebe1_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1a6247228_optimizeStmts(_2216_sdc);
	};
}



inline void _1a624779a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a471dc62_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974a470:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a974ce23:;
					if (it != expr_end) {
						jule::Ptr<_1a4721d20_FnIns> _23215_ins = *it;
						{
							_1a6247525_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1a974ce23:;
						++it;
						goto _iter_begin_1a974ce23;
					}
					_iter_end_1a974ce23:;
				};
			}
			_iter_next_1a974a470:;
			++it;
			goto _iter_begin_1a974a470;
		}
		_iter_end_1a974a470:;
	};
}



inline void _1a62479cb_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a4673ec5_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974cd8a:;
		if (it != expr_end) {
			jule::Ptr<_1a4673ec5_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a974e034:;
					if (it != expr_end) {
						jule::Ptr<_1a4676d30_StructIns> _24115_ins = *it;
						{
							_1a624779a_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1a974e034:;
						++it;
						goto _iter_begin_1a974e034;
					}
					_iter_end_1a974e034:;
				};
			}
			_iter_next_1a974cd8a:;
			++it;
			goto _iter_begin_1a974cd8a;
		}
		_iter_end_1a974cd8a:;
	};
}



inline void _1a6247c84_eliminateFunctionsScopePackage(jule::Ptr<_1a480eb55_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974ece3:;
		if (it != expr_end) {
			jule::Ptr<_1a4725065_SymTab> _24814_f = *it;
			{
				_1a624779a_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1a62479cb_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1a974ece3:;
			++it;
			goto _iter_begin_1a974ece3;
		}
		_iter_end_1a974ece3:;
	};
}



inline void _1a6247e82_eliminateScopePackage(jule::Ptr<_1a480eb55_Package>* _25431_pkg) {
	_1a6247c84_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1a62481b3_EliminateScopes(jule::Ptr<_1a53857a7_IR>* _25925_ir) {
	jule::I32 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1a480c3d3_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1a6247e82_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1a97514ed:;
	}
	_iter_end_1a97514ed:;;
	_1a6247e82_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline jule::Uintptr _1a612cd78_typeData(jule::Any* _914_m) {
	return ((jule::Uintptr)(((*(_914_m))).type));;
}



inline jule::Bool _1a612d1ca_equalConst(jule::Ptr<_1a4276798_Const> _1315_l, jule::Ptr<_1a4276798_Const> _1336_r) {
	{
		
		if (_1a470908d_IsI64(_1315_l.ptr())) {
			_case_begin_1a97b56e9:;
			{
				return (_1a470908d_IsI64(_1336_r.ptr()) && (_1a4706992_ReadI64(_1315_l) == _1a4706992_ReadI64(_1336_r)));;
			}
		}
		else if (_1a4709324_IsU64(_1315_l.ptr())) {
			_case_begin_1a97b5760:;
			{
				return (_1a4709324_IsU64(_1336_r.ptr()) && (_1a4706c28_ReadU64(_1315_l) == _1a4706c28_ReadU64(_1336_r)));;
			}
		}
		else if (_1a4709ac7_IsF64(_1315_l.ptr())) {
			_case_begin_1a97b57c6:;
			{
				return (_1a4709ac7_IsF64(_1336_r.ptr()) && (_1a47074cb_ReadF64(_1315_l) == _1a47074cb_ReadF64(_1336_r)));;
			}
		}
		else if (_1a4709841_IsStr(_1315_l.ptr())) {
			_case_begin_1a97b584d:;
			{
				return (_1a4709841_IsStr(_1336_r.ptr()) && (_1a4707245_ReadStr(_1315_l) == _1a4707245_ReadStr(_1336_r)));;
			}
		}
		else if (_1a47095aa_IsBool(_1315_l.ptr())) {
			_case_begin_1a97b58c5:;
			{
				return (_1a47095aa_IsBool(_1336_r.ptr()) && (_1a4706eae_ReadBool(_1315_l) == _1a4706eae_ReadBool(_1336_r)));;
			}
		}
		else if (_1a4709d5d_IsNil(_1315_l.ptr())) {
			_case_begin_1a97b5a3a:;
			{
				return _1a4709d5d_IsNil(_1336_r.ptr());;
			}
		}
		else {
			_case_begin_1a97b560b:;
			{
				return false;;
			}
		}
		_match_end_1a97b4d14:;
	};
}



inline jule::Bool _1a612d54e_equalCasting(jule::Ptr<_1a47130b9_CastingExprModel> _3217_l, jule::Ptr<_1a47130b9_CastingExprModel> _3245_r) {
	if ((!(_1a48d5c1a_Equal((*(_3217_l))._field_Type, (*(_3245_r))._field_Type)))) {
		return false;;
	};
	return _1a612e484_equalModels((*((*_3217_l.alloc)._field_Expr))._field_Model, (*(*(_3245_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a612d917_equalUnary(jule::Ptr<_1a4711d65_UnaryExprModel> _3915_l, jule::Ptr<_1a4711d65_UnaryExprModel> _3941_r) {
	if ((((*((*(_3915_l))._field_Op))._field_Id != (*(*(_3941_r))._field_Op.alloc)._field_Id) || ((*(*(_3915_l))._field_Op.alloc)._field_Kind != (*(*(_3941_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a612e484_equalModels((*((*_3915_l.alloc)._field_Expr))._field_Model, (*(*(_3941_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a612dc8b_equalIndexing(jule::Ptr<_1a47142eb_IndexingExprModel> _4618_l, jule::Ptr<_1a47142eb_IndexingExprModel> _4647_r) {
	return (_1a612e484_equalModels((*((*(_4618_l))._field_Expr))._field_Model, (*(*(_4647_r))._field_Expr.alloc)._field_Model) && _1a612e484_equalModels((*((*_4618_l.alloc)._field_Index))._field_Model, (*(*(_4647_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a612e110_equalBinary(jule::Ptr<_1a471198b_BinaryExprModel> _5116_l, jule::Ptr<_1a471198b_BinaryExprModel> _5143_r) {
	if ((((*((*(_5116_l))._field_Op))._field_Id != (*(*(_5143_r))._field_Op.alloc)._field_Id) || ((*(*(_5116_l))._field_Op.alloc)._field_Kind != (*(*(_5143_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a612e484_equalModels((*((*_5116_l.alloc)._field_Left))._field_Model, (*(*(_5143_r))._field_Left.alloc)._field_Model) && _1a612e484_equalModels((*((*_5116_l.alloc)._field_Right))._field_Model, (*(*(_5143_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a612e484_equalModels(jule::Any _6216_l, jule::Any _6236_r) {
	if ((_1a612cd78_typeData(&(_6216_l)) != _1a612cd78_typeData(&(_6236_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6216_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9934c75:;
			{
				return (_6216_l.unsafe_cast_ptr<_1a4852e51_Var>() == _6236_r.cast_ptr<_1a4852e51_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a9935814:;
			{
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _703_li = _6216_l.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>();;
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _713_ri = _6236_r.cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_703_li))._field_Field == (*(_713_ri))._field_Field) && _1a612e484_equalModels((*((*_703_li.alloc)._field_Expr))._field_Model, (*(*(_713_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a993587a:;
			{
				return _1a612d1ca_equalConst(_6216_l.cast_ptr<_1a4276798_Const>(&__jule_any_type15), _6236_r.cast_ptr<_1a4276798_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a993543a:;
			{
				return _1a612d54e_equalCasting(_6216_l.cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95), _6236_r.cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a99354a1:;
			{
				return _1a612d917_equalUnary(_6216_l.cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112), _6236_r.cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a9935517:;
			{
				return _1a612dc8b_equalIndexing(_6216_l.cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42), _6236_r.cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a993557d:;
			{
				return _1a612e110_equalBinary(_6216_l.cast_ptr<_1a471198b_BinaryExprModel>(&__jule_any_type113), _6236_r.cast_ptr<_1a471198b_BinaryExprModel>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1a99353c4:;
			{
				return false;;
			}
		}
		_match_end_1a9934eb7:;
	};
}



inline void _1a6135138_possibleNilRemove(jule::Ptr<_1a6134159_nils>* _7227_n, jule::Any _7237_m) {
	if (((*(_7227_n)) != nullptr)) {
		_1a6134940_removeVar((*(_7227_n)).ptr(), _1a6135b0b_getNilVar(_7237_m));
	};
}



inline jule::Bool _1a6135501_isGuaranteedNonNilExpr(jule::Ptr<_1a6134159_nils>* _7832_n, jule::Any _7842_m) {
	{
		auto &_match_expr{ _7842_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a993b782:;
			{
				return true;;
			}
		}
		_match_end_1a993b71b:;
	};
	return (((*(_7832_n)) != nullptr) && _1a6134c81_isSafe((*(_7832_n)).ptr(), _1a6135b0b_getNilVar(_7842_m)));;
}



inline jule::Bool _1a61357ba_isNilValidType(jule::Ptr<_1a48d54cd_Type> _8623_t) {
	return (_1a48d7e1a_Sptr(_8623_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a6135b0b_getNilVar(jule::Any _8814_m) {
	if ((!(_1a614be85_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _8814_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a993cd5a:;
			{
				jule::Ptr<_1a4852e51_Var> _943_v = _8814_m.unsafe_cast_ptr<_1a4852e51_Var>();;
				if ((!((*(_943_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_8814_m.unsafe_cast_ptr<_1a4852e51_Var>());;
				};
				return _1a6135b0b_getNilVar((*((*((*_943_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a993d2ab:;
			{
				return static_cast<jule::Uintptr>((*(_8814_m.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1a993cce4:;
	};
	return 0LLU;;
}



inline jule::Bool _1a613b837_isConstantValidConditionalCase(jule::Ptr<_1a47cbe52_If>* _67636_i) {
	{
		auto &_match_expr{ (*((*(_67636_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9151e43:;
			{
				jule::Ptr<_1a4276798_Const> _6793_c = (*((*(_67636_i))))._field_Expr.unsafe_cast_ptr<_1a4276798_Const>();;
				return (_1a47095aa_IsBool(_6793_c.ptr()) && _1a4706eae_ReadBool(_6793_c));;
			}
		}
		_match_end_1a9152608:;
	};
	return false;;
}



inline jule::Bool _1a613bb45_isUnreachableExpr(jule::Any* _68523_expr) {
	{
		auto &_match_expr{ (*(_68523_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9152dde:;
			{
				jule::Ptr<_1a4276798_Const> _6883_c = (*(_68523_expr)).cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
				return (_1a47095aa_IsBool(_6883_c.ptr()) && (!(_1a4706eae_ReadBool(_6883_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a9151ecb:;
			{
				jule::Ptr<_1a471198b_BinaryExprModel> _6913_m = (*(_68523_expr)).cast_ptr<_1a471198b_BinaryExprModel>(&__jule_any_type113);;
				if (((*((*(_6913_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1a613bb45_isUnreachableExpr(&((*((*_6913_m.alloc)._field_Left))._field_Model)) || _1a613bb45_isUnreachableExpr(&((*((*_6913_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1a915383a:;
	};
	return false;;
}



inline jule::Bool _1a613be0e_isConstantValidMatchCase(jule::Ptr<_1a47d1c8c_Case>* _70030_case) {
	{
		auto expr = &((*((*(_70030_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9157102:;
		if (it != expr_end) {
			jule::Ptr<_1a48a2753_Data> *_7019_expr = it;
			{
				if (((_1a48a318d_IsConst((*(_7019_expr)).ptr()) && _1a47095aa_IsBool((*(*(_7019_expr)).alloc)._field_Constant.ptr())) && _1a4706eae_ReadBool((*((*(_7019_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1a9157102:;
			++it;
			goto _iter_begin_1a9157102;
		}
		_iter_end_1a9157102:;
	};
	return false;;
}



inline jule::Bool _1a613c250_isUnreachableConditionalCase(jule::Ptr<_1a47cbe52_If>* _70934_i) {
	return _1a613bb45_isUnreachableExpr(&((*((*(_70934_i))))._field_Expr));;
}



inline jule::Bool _1a613c4d6_isUnreachableMatchCase(jule::Ptr<_1a47d1c8c_Case>* _71328_case) {
	{
		auto expr = &((*((*(_71328_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9159115:;
		if (it != expr_end) {
			jule::Ptr<_1a48a2753_Data> *_7149_expr = it;
			{
				if ((!(_1a613bb45_isUnreachableExpr(&((*((*(_7149_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1a9159115:;
			++it;
			goto _iter_begin_1a9159115;
		}
		_iter_end_1a9159115:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a6142a6e_checkForBitShiftOpt(jule::Ptr<_1a4711491_OperandExprModel>* _62225_l, jule::Ptr<_1a4711491_OperandExprModel>* _62254_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a479c5e8_IsInt(_1a48d58c9_Str((*((*(_62225_l))))._field_Type.ptr())))) || (!(_1a479c5e8_IsInt(_1a48d58c9_Str((*((*(_62254_r))))._field_Type)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1a47079e8_AsU64((*((*(_62254_r))))._field_Model.cast_ptr<_1a4276798_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6302_j = _1b4536b47_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6312_z = static_cast<jule::U64>(_6302_j);;
	if ((static_cast<jule::F64>(_6312_z) != _6302_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6312_z;
	return __jule_func_result;;
}



inline jule::Bool _1a6142e37_areSameLvalueExprModel(jule::Any* _63928_l, jule::Any* _63949_r) {
	{
		auto &_match_expr{ (*(_63928_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9212ab4:;
			{
				return ((*(_63949_r)) == (*(_63928_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a92128c7:;
			{
				{
					auto &_match_expr{ (*(_63949_r)) };
					
					if (_match_expr.type == &__jule_any_type100) {
						_case_begin_1a9213a1b:;
						{
							goto _match_end_1a92131e1;
						}
					}
					else {
						_case_begin_1a9213356:;
						{
							return false;;
						}
					}
					_match_end_1a92131e1:;
				};
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _6523_lsi = (*(_63928_l)).cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _6533_rsi = (*(_63949_r)).cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				if (((*(_6523_lsi))._field_Field != (*(_6533_rsi))._field_Field)) {
					return false;;
				};
				return _1a6142e37_areSameLvalueExprModel(&((*((*_6523_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6533_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a9212b3b:;
			{
				{
					auto &_match_expr{ (*(_63949_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1a9215d09:;
						{
							jule::Ptr<_1a4711d65_UnaryExprModel> _6654_ul = (*(_63928_l)).cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112);;
							jule::Ptr<_1a4711d65_UnaryExprModel> _6664_ur = (*(_63949_r)).cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112);;
							if ((((*((*(_6654_ul))._field_Op))._field_Id != (*(*(_6664_ur))._field_Op.alloc)._field_Id) || ((*(*(_6654_ul))._field_Op.alloc)._field_Kind != (*(*(_6664_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a6142e37_areSameLvalueExprModel(&((*((*_6654_ul.alloc)._field_Expr))._field_Model), &((*(*(_6664_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1a9215248:;
				};
			}
		}
		_match_end_1a9212a4d:;
	};
	return false;;
}



inline void _1a6144ee4_possibleDynamicRemove(jule::Ptr<_1a6143e5a_dynamic>* _7331_d, jule::Any _7344_m) {
	if (((*(_7331_d)) != nullptr)) {
		_1a6144741_removeVar((*(_7331_d)).ptr(), _1a6145a72_getDynamicVar(_7344_m));
	};
}



inline jule::Bool _1a6145302_isDynamicValidType(jule::Ptr<_1a48d54cd_Type> _7927_t) {
	return _1a538ae83_IsAny(&(_7927_t));;
}



inline jule::Ptr<_1a48d54cd_Type> _1a6145731_isTypeGuaranteedDynamicData(jule::Ptr<_1a6143e5a_dynamic>* _8137_dy, jule::Ptr<_1a48d54cd_Type> _8155_t, jule::Any _8175_m) {
	jule::Bool _822_isAny = _1a538ae83_IsAny(&(_8155_t));;
	if (((!(_822_isAny)) && (_1a48d948d_Trait(_8155_t.ptr()) == nullptr))) {
		return _8155_t;;
	};
	if ((!(_822_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8175_m };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a9b0c238:;
			{
				jule::Ptr<_1a47130b9_CastingExprModel> _917_cem = _8175_m.unsafe_cast_ptr<_1a47130b9_CastingExprModel>();;
				return _1a6145731_isTypeGuaranteedDynamicData(_8137_dy, (*(_917_cem))._field_ExprType, (*((*_917_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1a9b0c1c2:;
	};
	jule::Uintptr _942_var = _1a6145a72_getDynamicVar(_8175_m);;
	if ((_942_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8137_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b0dd1c:;
		if (it != expr_end) {
			_1a6143b19_dynamicVar _9814_v = *it;
			{
				if ((_9814_v._field_var == _942_var)) {
					return _9814_v._field_kind;;
				};
			}
			_iter_next_1a9b0dd1c:;
			++it;
			goto _iter_begin_1a9b0dd1c;
		}
		_iter_end_1a9b0dd1c:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a6145a72_getDynamicVar(jule::Any _10618_m) {
	if ((!(_1a614d96a_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _10618_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9b0e4e3:;
			{
				jule::Ptr<_1a4852e51_Var> _1123_v = _10618_m.unsafe_cast_ptr<_1a4852e51_Var>();;
				if ((!((*(_1123_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_10618_m.unsafe_cast_ptr<_1a4852e51_Var>());;
				};
				return _1a6145a72_getDynamicVar((*((*((*_1123_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a9b10170:;
			{
				return static_cast<jule::Uintptr>((*(_10618_m.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a9b0e56a:;
			{
				jule::Ptr<_1a4711d65_UnaryExprModel> _1233_uem = _10618_m.unsafe_cast_ptr<_1a4711d65_UnaryExprModel>();;
				if (((*((*(_1233_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1a6145a72_getDynamicVar((*((*_1233_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a9b0e47c:;
	};
	return 0LLU;;
}



inline jule::Bool _1a614968b_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a6149dc8_fitsSize(_8424_m, _8424_m);;
}



inline jule::I32 _1a6149a54_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1e635:;
		if (it != expr_end) {
			jule::I32 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1a6149dc8_fitsSize((*(_909_m)), _8940_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1a9b1e635:;
			++it;
			_906_i++;
			goto _iter_begin_1a9b1e635;
		}
		_iter_end_1a9b1e635:;
	};
	return -1LL;;
}



inline jule::Bool _1a6149dc8_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2) {
	if ((_1a612cd78_typeData(&(_9813_e1)) != _1a612cd78_typeData(&(_9834_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a9b211b4:;
			{
				jule::Ptr<_1a4276798_Const> _1043_exprConst = _9834_e2.cast_ptr<_1a4276798_Const>(&__jule_any_type15);;
				return ((_1a4707c7e_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1a470b986_GtEq(_9813_e1.unsafe_cast_ptr<_1a4276798_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9b2122a:;
			{
				return (_9834_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a9b21291:;
			{
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>();;
				jule::Ptr<_1a471650c_StructSubIdentExprModel> _1103_ssi2 = _9834_e2.cast_ptr<_1a471650c_StructSubIdentExprModel>(&__jule_any_type100);;
				return (_1a612e484_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a9b20d40:;
			{
				jule::Ptr<_1a4711d65_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1a4711d65_UnaryExprModel>();;
				jule::Ptr<_1a4711d65_UnaryExprModel> _1143_uem2 = _9834_e2.cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a6149dc8_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1a9b20cc9:;
			{
				return false;;
			}
		}
		_match_end_1a9b20c0d:;
	};
}



inline void _1a614a208_possibleBoundaryRemove(jule::Ptr<_1a6148624_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b25031:;
		if (it != expr_end) {
			_1a61482d3_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b28276:;
					if (it != expr_end) {
						jule::I32 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1a612e484_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1a9b28276;
							};
						}
						_iter_next_1a9b28276:;
						++it;
						_1277_i++;
						goto _iter_begin_1a9b28276;
					}
					_iter_end_1a9b28276:;
				};
			}
			_iter_next_1a9b25031:;
			++it;
			goto _iter_begin_1a9b25031;
		}
		_iter_end_1a9b25031:;
	};
}



inline jule::Bool _1a614a4c2_isBoundaryRiskyType(jule::Ptr<_1a48d54cd_Type> _13628_t) {
	return (_1a48d8954_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a614a78b_isBoundaryValidType(jule::Ptr<_1a48d54cd_Type> _14128_t) {
	return ((_1a48d8bda_Slc(_14128_t.ptr()) != nullptr) || (_1a48d8954_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a614aa55_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a614be85_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9b2a641:;
			{
				jule::Ptr<_1a4852e51_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1a4852e51_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a4852e51_Var>());;
				};
				return _1a614aa55_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a9b2aac5:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a471650c_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a9b2a6a7:;
			{
				jule::Ptr<_1a4711d65_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1a4711d65_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1a614aa55_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a9b2a9e8:;
	};
	return 0LLU;;
}



inline void _1a614e130_PushOptLevel(jule::I32 _3817_level) {
	jule::Bool _392_l1 = (_3817_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _402_l2 = (_3817_level >= static_cast<jule::I32>(2LL));;
	_1a614b32a_Copy=_392_l1;
	_1a614b627_Deadcode=_392_l1;
	_1a614b8d0_Append=_392_l1;
	_1a614bbcc_Math=_392_l1;
	_1a614be85_Access=_392_l1;
	_1a614c23d_Inline=_392_l1;
	_1a614c4e6_Ptr=_392_l1;
	_1a614c8ae_Cond=_392_l1;
	_1a614cb01_Str=_392_l1;
	_1a614cd98_Slice=_392_l1;
	_1a614d151_Assign=_392_l1;
	_1a614d409_Exceptional=_392_l1;
	_1a614d6b2_Iter=_392_l1;
	_1a614d96a_Dynamic=_392_l1;
	_1a614dc23_StdStrings=_402_l2;
}



inline void _1a624bb34_detectEnabled(void) {
	_1a62494d3_exprEnabled=((((_1a614dc23_StdStrings || _1a614c4e6_Ptr) || _1a614bbcc_Math) || _1a614be85_Access) || _1a614c8ae_Cond);
	_1a6249868_scopeEnabled=((((((((_1a614c8ae_Cond || _1a614b8d0_Append) || _1a614b32a_Copy) || _1a614cb01_Str) || _1a614cd98_Slice) || _1a614d151_Assign) || _1a614d409_Exceptional) || _1a614d6b2_Iter) || _1a614d96a_Dynamic);
}



inline void _1aa345ab4_Reverse(jule::Slice<jule::U8> _7327_s) {
	{
		auto expr = _7327_s.slice(0LL, (_7327_s.len() >> 1LL));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa346c08:;
		if (it != expr_end) {
			jule::I32 _746_i = it - expr.begin();
			{
				({
					jule::U8 ___jule_assign_arg = _7327_s[((_7327_s.len() - _746_i) - 1LL)];
					jule::U8 _1___jule_assign_arg = _7327_s[_746_i];
					_7327_s[_746_i] = ___jule_assign_arg;
					_7327_s[((_7327_s.len() - _746_i) - 1LL)] = _1___jule_assign_arg;
				});
			}
			_iter_next_1aa346c08:;
			++it;
			_746_i++;
			goto _iter_begin_1aa346c08;
		}
		_iter_end_1aa346c08:;
	};
}



inline void _1aa3446c8_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r) {
	_1aa345ab4_Reverse(_4222_s.slice(0LL, _4230_r));
	_1aa345ab4_Reverse(_4222_s.slice(_4230_r));
	_1aa345ab4_Reverse(_4222_s);
}



inline void _1aa340ad1_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r) {
	_1aa3446c8_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1aa33e272_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::U8> _1aa339dc7_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7240_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7240_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7240_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7240_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1aa33e272_overlaps(_7240_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7240_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7240_v);
	_1aa340ad1_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline jule::U64 _1a5ba117c_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a6257117_isCopyOptimizable(jule::Ptr<_1a48a2753_Data>* _117623_expr) {
	if ((!((*((*(_117623_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_117623_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a9cb6513:;
			{
				return false;;
			}
		}
		_match_end_1a9cb649c:;
	};
	return true;;
}



inline jule::Bool _1a62574d0_isIterCopyOptimizable(jule::Ptr<_1a48a2753_Data>* _118727_expr, jule::Ptr<_1a4852e51_Var>* _118747_v) {
	if (((!((*((*(_118727_expr))))._field_Lvalue)) && (!(_1a48d6db4_Mutable((*((*(_118727_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_118747_v))))._field_Mutable)) && (!((*((*(_118727_expr))))._field_Mutable)));;
}



inline jule::Bool _1a625790e_captureVarHandling(jule::Ptr<_1a5bab61b_ObjectCoder>* _119428_oc, jule::Ptr<_1a47147a2_AnonFnExprModel>* _119451_m, jule::Ptr<_1a4852e51_Var>* _119483_v) {
	{
		auto expr = &((*((*(_119451_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9cb86d0:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _11959_cv = *it;
			{
				if ((_11959_cv == (*(_119483_v)))) {
					_1a5babd36_write((*(_119428_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a62729a1_var(&((*((*(_119428_oc))))._field_Buf), (*(_119483_v)));
					return true;;
				};
			}
			_iter_next_1a9cb86d0:;
			++it;
			goto _iter_begin_1a9cb86d0;
		}
		_iter_end_1a9cb86d0:;
	};
	return false;;
}



inline jule::Str _1a6269e60_decomposeCommonEsq(jule::U8 _191623_b) {
	{
		auto &_match_expr{ _191623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a9e3ad6e:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a9e3abd7:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a9e3ac4d:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a9e3a742:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a9e3a7a8:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a9e3a830:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a9e3a8a7:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a9e3a92e:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a9e3add5:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a9e3ae4b:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1a9e38212:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a9e3a687:;
	};
}



inline jule::Str _1a626a26d_sbtoa(jule::U8 _194310_b) {
	if ((_194310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_194310_b < 128LLU)) {
		jule::Str _19483_seq = _1a6269e60_decomposeCommonEsq(_194310_b);;
		if (!(_19483_seq).empty()) {
			return _19483_seq;;
		};
		if (((32LL <= _194310_b) && (_194310_b <= 126LLU))) {
			return __jule_strFromByte(_194310_b);;
		};
	};
	jule::Str _19562_seq = _1b4576b32_FmtUint(static_cast<jule::U64>(_194310_b), 8LL);;
	if ((_19562_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19562_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19562_seq);;
}



inline void _1a626a559_cstrBytes(_1e71a80b0_Builder* _196319_s, jule::Str _196340_ctx) {
	{
		auto expr = &(_196340_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e40a11:;
		if (it != expr_end) {
			jule::U8 *_19649_b = it;
			{
				({
					auto except = _1e71a90b1_WriteStr(_196319_s, _1a626a26d_sbtoa((*(_19649_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1965:3"));
					(except.result);
				});
			}
			_iter_next_1a9e40a11:;
			++it;
			goto _iter_begin_1a9e40a11;
		}
		_iter_end_1a9e40a11:;
	};
}



inline void _1a626a889_cstrLit(_1e71a80b0_Builder* _196917_s, jule::Str _196938_ctx) {
	({
		auto except = _1e71a9369_WriteByte(_196917_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1970:2"));
	});
	_1a626a559_cstrBytes(_196917_s, _196938_ctx);
	({
		auto except = _1e71a9369_WriteByte(_196917_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1972:2"));
	});
}



inline void _1a626ac30_ftoa(_1e71a80b0_Builder* _197514_s, jule::F64 _197535_f, jule::I32 _197543_bitsize) {
	if ((_197543_bitsize != 32LL)) {
		if ((_197535_f == static_cast<jule::F64>(static_cast<jule::I64>(_197535_f)))) {
			_1a626b01b_itoa(_197514_s, static_cast<jule::I64>(_197535_f));
			return;;
		};
		if ((_197535_f == static_cast<jule::F64>(static_cast<jule::U64>(_197535_f)))) {
			_1a626b307_utoa(_197514_s, static_cast<jule::U64>(_197535_f));
			return;;
		};
	};
	jule::Str _19862_m = _1b4560731_FmtFloat(_197535_f, 'f', -1LL, _197543_bitsize);;
	({
		auto except = _1e71a90b1_WriteStr(_197514_s, _19862_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1987:2"));
		(except.result);
	});
	if ((!(_1ce788a1b_Contains(_19862_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1e71a90b1_WriteStr(_197514_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1989:3"));
			(except.result);
		});
	};
}



inline void _1a626b01b_itoa(_1e71a80b0_Builder* _199314_s, jule::I64 _199335_x) {
	{
		
		if ((_199335_x == jule::MAX_I64)) {
			_case_begin_1a9e450a9:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_199314_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1996:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_199335_x == jule::MIN_I64)) {
			_case_begin_1a9e45153:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_199314_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1999:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1a9e44e88:;
	};
	({
		auto except = _1e71a90b1_WriteStr(_199314_s, _1b4576eea_FmtInt(_199335_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2003:2"));
		(except.result);
	});
	if (_1e71bc0e6_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1e71a9369_WriteByte(_199314_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2005:3"));
		});
	};
	({
		auto except = _1e71a9369_WriteByte(_199314_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2007:2"));
	});
}



inline void _1a626b307_utoa(_1e71a80b0_Builder* _201014_s, jule::U64 _201035_x) {
	{
		
		if ((_201035_x == jule::MAX_U64)) {
			_case_begin_1a9e47243:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_201014_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2013:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1a9e47100:;
	};
	({
		auto except = _1e71a90b1_WriteStr(_201014_s, _1b4576b32_FmtUint(_201035_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2017:2"));
		(except.result);
	});
	if (_1e71bc0e6_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1e71a9369_WriteByte(_201014_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2019:3"));
		});
	};
	({
		auto except = _1e71a90b1_WriteStr(_201014_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:2"));
		(except.result);
	});
}



inline void _1a626b956_operatorOverloadingBinary(_1e71a80b0_Builder* _202435_buf, jule::Ptr<_1a4676d30_StructIns>* _202463_s, jule::Str* _202485_l, jule::Str* _20253_r, jule::U32 _202511_op, jule::Str _202526_kind) {
	;
	jule::Ptr<_1a4721d20_FnIns> _20276_f = static_cast<jule::Ptr<_1a4721d20_FnIns>>(nullptr);;
	if ((_202511_op == static_cast<jule::U32>(51LLU))) {
		_20276_f=_1a538e294_FindOperator(_202463_s, static_cast<jule::U32>(50LLU), false);
		({
			auto except = _1e71a9369_WriteByte(_202435_buf, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2030:3"));
		});
	} else {
		_20276_f=_1a538e294_FindOperator(_202463_s, _202511_op, false);
	};
	if ((_20276_f == nullptr)) {
		if (((_202511_op == static_cast<jule::U32>(50LLU)) || (_202511_op == static_cast<jule::U32>(51LLU)))) {
			static__1a62723c9_structureIns(_202435_buf, _202463_s);
			({
				auto except = _1e71a90b1_WriteStr(_202435_buf, jule::Str::lit("_eq", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2038:4"));
				(except.result);
			});
			goto _julec_label_1a9e4ab70;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2041:3"));;
	};
	static__1a627172a_funcIns(_202435_buf, &(_20276_f));
	_julec_label_1a9e4ab70:;
	({
		auto except = _1e71a90b1_WriteStr(_202435_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2045:2"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_202435_buf, (*(_202485_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2046:2"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_202435_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2047:2"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_202435_buf, (*(_20253_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:2"));
		(except.result);
	});
	({
		auto except = _1e71a9369_WriteByte(_202435_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2049:2"));
	});
}



inline jule::Slice<jule::U8> _1a5bb9162_concatAllParts(jule::Slice<jule::Ptr<_1a463d137_Token>> _138019_parts) {
	jule::I32 _13816_n = 0LL;;
	{
		auto expr = &(_138019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa20c5c4:;
		if (it != expr_end) {
			jule::Ptr<_1a463d137_Token> *_13829_part = it;
			{
				_13816_n+=(*((*(_13829_part))))._field_Kind.len();
			}
			_iter_next_1aa20c5c4:;
			++it;
			goto _iter_begin_1aa20c5c4;
		}
		_iter_end_1aa20c5c4:;
	};
	if ((_13816_n == 0LL)) {
		return nullptr;;
	};
	_1e71a80b0_Builder _13886_s = static__1e71a892e_New(_13816_n);;
	{
		auto expr = &(_138019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa20d460:;
		if (it != expr_end) {
			jule::Ptr<_1a463d137_Token> *_13899_p = it;
			{
				({
					auto except = _1e71a90b1_WriteStr(&_13886_s, (*((*(_13899_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1390:3"));
					(except.result);
				});
			}
			_iter_next_1aa20d460:;
			++it;
			goto _iter_begin_1aa20d460;
		}
		_iter_end_1aa20d460:;
	};
	return _1e71aa3e2_Buf(&_13886_s);;
}



inline jule::Bool _1a5bb9470_isHeadDecl(jule::Ptr<_1a471dc62_Fn>* _139620_m) {
	if ((((*((*(_139620_m))))._field_Generics.len() > 0LL) || ((*((*(_139620_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	return _1a538b55a_IsOpMethod(_139620_m);;
}



inline jule::Bool _1a5bb9739_defaultEq(jule::Ptr<_1a4676d30_StructIns>* _140415_s) {
	return ((*((*(_140415_s))))._field_Comparable && ((*((*(_140415_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1a5bc86c1_ableToInit(jule::Ptr<_1a48d54cd_Type>* _44920_t) {
	return (!(_1a48d637a_Binded((*(_44920_t)).ptr())));;
}



inline jule::Bool _1a5bc899b_shouldInitialized(jule::Ptr<_1a48d54cd_Type>* _45627_t) {
	if ((!(_1a5bc86c1_ableToInit(_45627_t)))) {
		return false;;
	};
	jule::Ptr<_1a48dd5e6_Prim> _4602_prim = _1a48d7b84_Prim((*(_45627_t)).ptr());;
	if ((_4602_prim != nullptr)) {
		return ((!(_1a48e1d47_IsAny(_4602_prim))) && (!(_1a48e1ab1_IsStr(_4602_prim))));;
	};
	{
		
		if ((_1a48d7e1a_Sptr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa3585dd:;
			{
				return false;;
			}
		}
		else if ((_1a48d9724_Map((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa359369:;
			{
				return false;;
			}
		}
		else if ((_1a48d8bda_Slc((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa358676:;
			{
				return false;;
			}
		}
		else if ((_1a48d948d_Trait((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa3586dc:;
			{
				return false;;
			}
		}
		else if ((_1a48d8e71_Fn((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa359501:;
			{
				return false;;
			}
		}
		else if ((_1a48d8954_Arr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa359567:;
			{
				jule::Ptr<_1a48e4e16_Arr> _4767_arr = _1a48d8954_Arr((*(_45627_t)).ptr());;
				return _1a5bc86c1_ableToInit(&((*(_4767_arr))._field_Elem));;
			}
		}
		else if ((_1a48d9207_Struct((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1aa3595cd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa3584de:;
			{
				return true;;
			}
		}
		_match_end_1aa3588c9:;
	};
}



inline void _1ce7a242a_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1a68cc6b0_toStr(_3022_msg));
}



inline void _1ce7a26a0_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1ce7a242a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _1ce7a224e_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1ce7a224e_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa406a98:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1aa406a98:;
			++it;
			goto _iter_begin_1aa406a98;
		}
		_iter_end_1aa406a98:;
	};
	_1e71a80b0_Builder _496_s = static__1e71a892e_New(32LL);;
	;
	{
		auto expr = &(_1ce7a224e_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa407b87:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1e71a90b1_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&_496_s, _1ce783d13_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1e71a90b1_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1e71a9369_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1aa407b87:;
			++it;
			_516_i++;
			goto _iter_begin_1aa407b87;
		}
		_iter_end_1aa407b87:;
	};
	jule::println(_1aa408b55_toStr(_496_s));
}



inline void _1ce7a28d1_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1ce7a242a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1a68cc6b0_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1ce7a2ae0_toolDistos(void) {
	jule::print(_1a68cc6b0_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1aa41084e_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1a68cc6b0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1aa41084e_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1a68cc6b0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1aa41084e_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1a68cc6b0_toStr(jule::Str()));
}



inline void _1ce7a2c55_toolDistarch(void) {
	jule::print(_1a68cc6b0_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1aa41c608_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1a68cc6b0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1aa41c608_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1a68cc6b0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1aa41c608_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1a68cc6b0_toStr(jule::Str()));
}



inline void _1ce7a2e53_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1a68cc6b0_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1ce7a242a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1aa420e58:;
			{
				_1ce7a2ae0_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1aa41e8a2:;
			{
				_1ce7a2c55_toolDistarch();
			}
		}
		else {
			_case_begin_1aa41e6a4:;
			{
				_1ce7a242a_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1aa41e781:;
	};
}



inline void _1ce7a3184_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1ce7a242a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1a68cc6b0_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1a68cc6b0_toStr(jule::Str::lit("architecture: i386", 18)));
	jule::println(_1a68cc6b0_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::println(_1a68cc6b0_toStr((jule::Str::lit("default compiler: ", 18) + _1ce79d7ab_Compiler)));
	jule::println(_1a68cc6b0_toStr((jule::Str::lit("default C++ standard: ", 22) + _1ce79edb7_CppStd)));
}



inline void _1ce7a34c5_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1a68cc6b0_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1ce7a242a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1aa4248a7:;
			{
				({
					auto except = static__1cd61e81a_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1ce7a242a_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1aa423be7:;
			{
				_1ce7a242a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1aa424313:;
	};
}



inline jule::Bool _1ce7a3717_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1aa425644:;
			{
				_1ce7a26a0_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1aa425d09:;
			{
				_1ce7a28d1_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1aa425d70:;
			{
				_1ce7a2e53_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1aa425dd6:;
			{
				_1ce7a3184_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1aa425e4c:;
			{
				_1ce7a34c5_mod(_15320_args);
			}
		}
		else {
			_case_begin_1aa424489:;
			{
				return false;;
			}
		}
		_match_end_1aa425006:;
	};
	return true;;
}



inline void _1ce7a38b0_showInfo(void) {
	jule::println(_1a68cc6b0_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _1ce7a3a36_main(void) {
	jule::Slice<jule::Str> _1896_args = _1cd631563_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1ce7a38b0_showInfo();
		return;;
	};
	if (_1ce7a3717_processCommand(&(_1896_args))) {
		return;;
	};
	_1a5c42839_compileCommand(&(_1896_args));
}



inline void _1ce7a4383_enableVtp(void) {
	jule::Uintptr _192_hOut = _1e73a53cd_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_192_hOut == 4294967295LLU)) {
		return;;
	};
	jule::I32 _246_dwMode = 0LL;;
	if ((!(_1e73a7952_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_1e73a805c_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _1ce7a454d_init(void) {
	_1ce7a4383_enableVtp();
}



inline void _1a5c3e759_init(void) {
	_1ce79d7ab_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1cd61d40c_File> _1a5c3ea23_openOutput(jule::Str* _2916_path) {
	jule::Str _302_dir = _1ce7911c7_Dir((*(_2916_path)));;
	({
		auto except = static__1ce7978d7_Of(_302_dir);
		if (!except.ok()) {
			({
				auto except = static__1ce791b34_Create(_302_dir);
				if (!except.ok()) {
					_1b457987c_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1cd61e1aa_Create((*(_2916_path)));
		(except.ok()) ? (except.result) : ({
			_1b457987c_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a5c3ebbb_clearObjects(void) {
	({
		auto except = static__1cd622444_Remove(_1a5c40d21_getCompilePath());
		if (!except.ok()) {
			jule::println(_1a68cc6b0_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1ce791d65_Remove(_1a5c3deea_OutDir);
}



inline void _1a5c3eec9_compileIr(jule::Str _5814_compiler, jule::Str _5829_compilerCmd) {
	jule::Ptr<_1cd5b00b3_Cmd> _596_cmd = static__1cd5b0514_New(_5814_compiler);;
	(*(_596_cmd))._field_Args=_1ce788697_SplitAll(_5829_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1cd5b0712_Spawn(_596_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aa42d40a:;
					{
						static__1ce6152e3_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aa42d54d:;
					{
						static__1ce6152e3_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1aa42cddd:;
					{
						static__1ce6152e3_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1aa42ceed:;
			};
			_1b457987c_Throw(jule::Str());
		}
	});
	jule::I32 _722_status = ({
		auto except = _1cd5b0b96_Wait(_596_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:72:12"));
		(except.result);
	});;
	if ((_722_status != 0LL)) {
		jule::Str _743_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1ce79d7ab_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ce6152e3_Print(jule::Str::lit("\033[31m", 5), _743_errorMessage);
		_1b457987c_Throw(jule::Str());
	};
	_1a5c3ebbb_clearObjects();
}



inline jule::Bool _1a5c40293_isCppSourceFile(jule::Str _8520_path) {
	jule::I32 _862_offset = _1ce786dd2_FindLastByte(_8520_path, '.');;
	if ((_862_offset == -1LL)) {
		return false;;
	};
	return _1cc83645b_IsValidCppExt(_8520_path.slice(_862_offset));;
}



inline void _1a5c404c4_pushCompCmdClang(_1e71a80b0_Builder* _9326_cmd) {
	({
		auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:95:2"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:98:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1ce79edb7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa431870:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:101:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa432299:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:103:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa432310:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:105:3"));
					(except.result);
				});
			}
		}
		_match_end_1aa432035:;
	};
	({
		auto except = _1e71a9369_WriteByte(_9326_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:107:2"));
	});
	if (_1ce7a1083_Production) {
		({
			auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:110:3"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1e71a90b1_WriteStr(_9326_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:115:3"));
			(except.result);
		});
	};
}



inline void _1a5c40705_pushCompCmdGcc(_1e71a80b0_Builder* _11924_cmd) {
	({
		auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:121:2"));
		(except.result);
	});
	({
		auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:124:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1ce79edb7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa4337b7:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:127:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa4352d0:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:129:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa435346:;
			{
				({
					auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:131:3"));
					(except.result);
				});
			}
		}
		_match_end_1aa43506b:;
	};
	({
		auto except = _1e71a9369_WriteByte(_11924_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:133:2"));
	});
	if (_1ce7a1083_Production) {
		({
			auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:136:3"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1e71a90b1_WriteStr(_11924_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:140:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1a5c40b89_genCompileCmd(jule::Str _14518_sourcePath, jule::Ptr<_1a53857a7_IR>* _14536_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1463_compiler = &(_1ce79eba8_CompilerPath);;
	_1e71a80b0_Builder _1476_cmd = static__1e71a892e_New(64LL);;
	{
		auto &_match_expr{ _1ce79d7ab_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa43803b:;
			{
				_1a5c40705_pushCompCmdGcc(&(_1476_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa438569:;
			{
				_1a5c404c4_pushCompCmdClang(&(_1476_cmd));
			}
		}
		_match_end_1aa43827d:;
	};
	{
		auto expr = &((*((*(_14536_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa438822:;
		if (it != expr_end) {
			jule::Ptr<_1a480c3d3_ImportInfo> *_1579_u = it;
			{
				if (((*((*(_1579_u))))._field_Binded && _1a5c40293_isCppSourceFile((*(*(_1579_u)).alloc)._field_Path))) {
					({
						auto except = _1e71a90b1_WriteStr(&_1476_cmd, (*(*(_1579_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:159:4"));
						(except.result);
					});
					({
						auto except = _1e71a9369_WriteByte(&_1476_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
					});
				};
			}
			_iter_next_1aa438822:;
			++it;
			goto _iter_begin_1aa438822;
		}
		_iter_end_1aa438822:;
	};
	if (!(_1a5c3e5a0_Out).empty()) {
		({
			auto except = _1e71a90b1_WriteStr(&_1476_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:165:3"));
			(except.result);
		});
		({
			auto except = _1e71a90b1_WriteStr(&_1476_cmd, _1a5c3e5a0_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1e71a9369_WriteByte(&_1476_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
		});
	};
	({
		auto except = _1e71a90b1_WriteStr(&_1476_cmd, _14518_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:169:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14536_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa43b391:;
		if (it != expr_end) {
			jule::Str *_1729_pass = it;
			{
				({
					auto except = _1e71a9369_WriteByte(&_1476_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:173:3"));
				});
				({
					auto except = _1e71a90b1_WriteStr(&_1476_cmd, (*(_1729_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
					(except.result);
				});
			}
			_iter_next_1aa43b391:;
			++it;
			goto _iter_begin_1aa43b391;
		}
		_iter_end_1aa43b391:;
	};
	if ((_1ce798b19_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1e71a90b1_WriteStr(&_1476_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:179:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1463_compiler));
	__jule_func_result.__jule_result_arg1 = _1e71a9941_Str(&_1476_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a5c40d21_getCompilePath(void) {
	return _1ce7904d4_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a5c3deea_OutDir; (*it++) = _1a5c3e2e7_OutName; __jule_collection; }));;
}



inline void _1a5c41052_applyTargetIndependentOptimizations(jule::Ptr<_1a53857a7_IR>* _19145_ir) {
	jule::Ptr<_1a6249a66_Optimizer> _1926_opt = static__1a624a02d_New(_19145_ir);;
	_1a624b8c0_Optimize(_1926_opt.ptr());
}



inline void _1a5c411ea_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1ce79d7ab_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aa43db57:;
			{
				_1b457987c_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa43d75b:;
			{
				if ((_1ce79eba8_CompilerPath).empty()) {
					_1ce79eba8_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa43d7c2:;
			{
				if ((_1ce79eba8_CompilerPath).empty()) {
					_1ce79eba8_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1aa43c1d8:;
			{
				_1b457987c_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1ce79d7ab_Compiler));
			}
		}
		_match_end_1aa43d5a2:;
	};
}



inline void _1a5c41409_checkTargetArch(jule::Str _21320_arch) {
	if ((((_21320_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21320_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21320_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1b457987c_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21320_arch));
	};
}



inline void _1a5c4163a_checkTargetOs(jule::Str _22118_os) {
	if ((((_22118_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22118_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22118_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1b457987c_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22118_os));
	};
}



inline void _1a5c4186b_checkTargetFlag(jule::Str* _22921_target) {
	if (((*(_22921_target))).empty()) {
		_1b457987c_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2342_parts = _1ce788697_SplitAll((*(_22921_target)), jule::Str::lit("-", 1));;
	if ((_2342_parts.len() != 2LL)) {
		_1b457987c_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_22921_target))));
	};
	jule::Str _2392_os;
	jule::Str _2396_arch;
	({
		jule::Str ___jule_assign_arg = _2342_parts[0LL];
		jule::Str _1___jule_assign_arg = _2342_parts[1LL];
		_2392_os = ___jule_assign_arg;
		_2396_arch = _1___jule_assign_arg;
	});
	if ((!_2392_os.equal("native", 6))) {
		_1a5c4163a_checkTargetOs(_2392_os);
		_1ce798b19_OS=_2392_os;
	};
	if ((!_2396_arch.equal("native", 6))) {
		_1a5c41409_checkTargetArch(_2396_arch);
		_1ce798dc2_Arch=_2396_arch;
	};
	_1a4796515_UpdateTarget();
}



inline void _1a5c41a9c_checkOptFlag(jule::Str* _25218_opt) {
	if (((*(_25218_opt))).empty()) {
		_1b457987c_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25218_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1aa445a82:;
			{
				goto _match_end_1aa445257;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1aa4453bc:;
			{
				_1a614e130_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1aa445433:;
			{
				_1a614e130_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1aa445345:;
			{
				_1b457987c_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25218_opt))));
			}
		}
		_match_end_1aa445257:;
	};
}



inline void _1a5c41e65_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1ce79edb7_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa446e90:;
			{
				goto _match_end_1aa446896;
			}
		}
		else {
			_case_begin_1aa445785:;
			{
				_1b457987c_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1ce79edb7_CppStd));
			}
		}
		_match_end_1aa446896:;
	};
}



inline jule::Slice<jule::Str> _1a5c42130_checkFlags(jule::Slice<jule::Str>* _28016_args) {
	jule::Str _2816_opt = jule::Str::lit("L0", 2);;
	jule::Str _2826_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a5c393ad_FlagSet> _2846_fs = static__1a5c396cc_New();;
	_1aa448843_AddVar(_2846_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2816_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1aa448843_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_2826_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1aa448843_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1a5c3e5a0_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ce7a015e_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ce7a0417_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1aa448843_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1ce79d7ab_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1aa448843_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1ce79eba8_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ce7a1083_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ce7a0978_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1ce7a0d41_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1aa448843_AddVar(_2846_fs, ((jule::Ptr<jule::Str>)((&(_1ce79edb7_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614b32a_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614b627_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614b8d0_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614bbcc_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614be85_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614c23d_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614c4e6_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614c8ae_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614cb01_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614cd98_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614d151_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614d409_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614d6b2_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614d96a_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1aa45295c_AddVar(_2846_fs, ((jule::Ptr<jule::Bool>)((&(_1a614dc23_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	jule::Slice<jule::Str> _3136_content = ({
		auto except = _1a5c3a59b_Parse(_2846_fs, (*(_28016_args)));
		(except.ok()) ? (except.result) : ({
			_1b457987c_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1a5c411ea_checkCompilerFlag();
	_1a5c41e65_checkCppStdFlag();
	_1a5c4186b_checkTargetFlag(&(_2826_target));
	_1a5c41a9c_checkOptFlag(&(_2816_opt));
	return _3136_content;;
}



inline void _1a5c4233e_setupSemaFlags(jule::I32* _32624_flags) {
	if (_1ce7a015e_Shadowing) {
		(*(_32624_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1a53857a7_IR> _1a5c42608_buildIr(jule::Slice<jule::Str>* _33213_args) {
	jule::Slice<jule::Str> _3332_content = _1a5c42130_checkFlags(_33213_args);;
	jule::I32 _3356_semaFlags = static_cast<jule::I32>(0LL);;
	_1a5c4233e_setupSemaFlags(&(_3356_semaFlags));
	if ((_3332_content.len() == 0LL)) {
		_1b457987c_Throw(_1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3332_content.len() > 1LL)) {
		_1b457987c_Throw((jule::Str::lit("undefined content: ", 19) + _3332_content[1LL]));
	};
	jule::Str _3436_path;
	jule::Bool _34312_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ce790a34_Abs(_3332_content[0LL]);
		_3436_path = __jule_assign_result.__jule_result_arg0;
		_34312_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34312_ok))) {
		_1b457987c_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1cd62092b_Stat _3492_inf = ({
		auto except = static__1ce7978d7_Of(_1ce79807a_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1b457987c_Throw(_1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1cd62092b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1cd620d38_IsDir(&_3492_inf)))) {
		_1b457987c_Throw(_1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a53857a7_IR> _3576_ir;
	jule::Slice<_1e71b7487_Log> _35710_logs;
	({
		__jule_tuple_x_1a53857a7_IR__jule_tuple_s_1e71b7487_Log __jule_assign_result = static__1a5385c80_Build(_3436_path, _3356_semaFlags);
		_3576_ir = __jule_assign_result.__jule_result_arg0;
		_35710_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3576_ir == nullptr) && (_35710_logs == nullptr))) {
		_1b457987c_Throw(_1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3436_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_35710_logs != nullptr)) {
		static__1b4578e53_PrintLogs(&(_35710_logs));
		_1b457987c_Throw(jule::Str());
	};
	return _3576_ir;;
}



inline void _1a5c42839_compileCommand(jule::Slice<jule::Str>* _37224_args) {
	((*(_37224_args))).mut_slice(1LL);;
	if ((*(_37224_args))[0LL].equal("test", 4)) {
		_1ce7a06c0_Test=true;
		((*(_37224_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a53857a7_IR> _3786_ir = _1a5c42608_buildIr(_37224_args);;
	_1a5390916_ProgramMeta=static__1a5391692_Collect(_3786_ir);
	if ((!(_1ce7a06c0_Test))) {
		;
		(*(_1a5390916_ProgramMeta))._field_EntryPoint=_1a481121c_FindFn((*(_3786_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1a5390916_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1b457987c_Throw(_1e71b78e9_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1a5c41052_applyTargetIndependentOptimizations(&(_3786_ir));
	_1a5386ce7_Order(_3786_ir);
	jule::Str _3962_compPath = _1a5c40d21_getCompilePath();;
	jule::Str _3972_compiler;
	jule::Str _39712_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a5c40b89_genCompileCmd(_3962_compPath, &(_3786_ir));
		_3972_compiler = __jule_assign_result.__jule_result_arg0;
		_39712_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a5bab61b_ObjectCoder> _3996_oc = static__1a5baba7d_New(&(_3786_ir), _1a5ba8d66_SerializationInfo{._field_Compiler=_3972_compiler, ._field_CompilerCommand=_39712_compilerCmd});;
	if (_1ce7a06c0_Test) {
		jule::Ptr<_1a626c6c1_TestCoder> _4047_tc = static__1a626cb77_New(&(_3996_oc));;
		_1a626deec_Serialize(_4047_tc);
	} else {
		_1a5bb8ccc_Serialize(_3996_oc);
	};
	jule::Ptr<_1cd61d40c_File> _4106_file = _1a5c3ea23_openOutput(&(_3962_compPath));;
	({
		auto except = _1cd6228c8_Write(_4106_file.ptr(), _1e71aa3e2_Buf(&(*(_3996_oc))._field_Buf));
		if (!except.ok()) {
			_1b457987c_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1cd620123_Close(_4106_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:414:2"));
	});
	if ((!(_1ce7a0417_Transpilation))) {
		_1a5c3eec9_compileIr(_3972_compiler, _39712_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1ce799015_init();
	_1a479668b_init();
	_1ce7a454d_init();
	_1a5c3e759_init();

}

inline jule::Bool __jule_anon1a81e8ded(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4720bba_ParamIns> _25021_p1, jule::Ptr<_1a4720bba_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a471c8dc_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1a471c8dc_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1a471cb73_IsRef((*(_25021_p1))._field_Decl) != _1a471cb73_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a48d5c1a_Equal((*_25021_p1.alloc)._field_Type, (*(_25036_p2))._field_Type);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b4dd40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _6521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _6536_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b4dd40_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b4dd40_ctx>();
	return _1a47a08a4__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b50d0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _7221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _7236_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b50d0e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b50d0e_ctx>();
	return _1a47a0ca0__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b648d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _17821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _17836_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b648d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b648d3_ctx>();
	return _1a47a3ac7__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b6685d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _18521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _18536_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b6685d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b6685d_ctx>();
	return _1a47a3ec3__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b77ce2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _28321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _28336_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b77ce2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b77ce2_ctx>();
	return _1a47a6cd9__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b9005c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _40221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _40236_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b9005c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b9005c_ctx>();
	return _1a47a9b22__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b91ed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _40921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _40936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b91ed7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b91ed7_ctx>();
	return _1a47aa419__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4b93e62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _41621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _41636_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4b93e62_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4b93e62_ctx>();
	return _1a47aa01d__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c2e75b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _97421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _97436_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c2e75b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c2e75b_ctx>();
	return _1a47aed7a__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c316d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _98121_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _98136_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c316d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c316d6_ctx>();
	return _1a47b0276__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c33661(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _98821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _98836_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c33661_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c33661_ctx>();
	return _1a47b0a6d__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c355db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _99521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _99536_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c355db_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c355db_ctx>();
	return _1a47b0e69__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c37566(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _100221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _100236_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c37566_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c37566_ctx>();
	return _1a47b1365__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c394e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _100921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _100936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c394e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c394e1_ctx>();
	return _1a47b1761__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c3b46b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _101621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _101636_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c3b46b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c3b46b_ctx>();
	return _1a47b1b5c__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c3d3e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _102321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _102336_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c3d3e6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c3d3e6_ctx>();
	return _1a47b2058__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c405e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _103021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _103036_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c405e6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c405e6_ctx>();
	return _1a47b2454__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c42571(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _103721_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _103736_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c42571_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c42571_ctx>();
	return _1a47b4a2d__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c444eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _104421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _104436_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c444eb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c444eb_ctx>();
	return _1a47b393e__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c46476(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _105121_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _105136_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c46476_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c46476_ctx>();
	return _1a47b2850__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c48401(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _105821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _105836_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c48401_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c48401_ctx>();
	return _1a47b2c4b__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c4a37b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _106521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _106536_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c4a37b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c4a37b_ctx>();
	return _1a47b3147__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c4c306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _107221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _107236_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c4c306_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c4c306_ctx>();
	return _1a47b3543__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c4e281(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _107921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _107936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c4e281_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c4e281_ctx>();
	return _1a47b3d3a__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c5120b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _108621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _108636_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c5120b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c5120b_ctx>();
	return _1a47b4236__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a4c53186(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _109321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _109336_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a4c53186_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a4c53186_ctx>();
	return _1a47b4632__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83706e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _110021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _110036_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83706e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83706e5_ctx>();
	return _1a47b0672__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a839bc60(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _126221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _126236_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a839bc60_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a839bc60_ctx>();
	return _1a47b5da3__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a839dbda(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _126921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _126936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a839dbda_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a839dbda_ctx>();
	return _1a47b629e__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a0b65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _127621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _127636_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83a0b65_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83a0b65_ctx>();
	return _1a47b669a__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a2ae0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _128321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _128336_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83a2ae0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83a2ae0_ctx>();
	return _1a47b6a96__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a4a6a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _129021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _129036_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83a4a6a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83a4a6a_ctx>();
	return _1a47b6e92__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a69e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _129721_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _129736_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83a69e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83a69e5_ctx>();
	return _1a47b738d__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83a8970(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _130421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _130436_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83a8970_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83a8970_ctx>();
	return _1a47b7789__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83bd6aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _142921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _142936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83bd6aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83bd6aa_ctx>();
	return _1a47ba539__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83c0635(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _143621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _143636_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83c0635_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83c0635_ctx>();
	return _1a47ba935__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a83c25b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _144321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _144336_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a83c25b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a83c25b0_ctx>();
	return _1a47bad31__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a843758c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _194921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _194936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a843758c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a843758c_ctx>();
	return _1a47be780__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8439517(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _195621_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _195636_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a8439517_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8439517_ctx>();
	return _1a47beb7b__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a843b492(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _196321_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _196336_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a843b492_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a843b492_ctx>();
	return _1a47c0077__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a843d41c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _197021_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _197036_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a843d41c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a843d41c_ctx>();
	return _1a47c0473__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8440397(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _197721_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _197736_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a8440397_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8440397_ctx>();
	return _1a47c086e__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8442322(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _198421_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _198436_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a8442322_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8442322_ctx>();
	return _1a47c0c6a__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a844429c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _199121_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _199136_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a844429c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a844429c_ctx>();
	return _1a47c1166__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8446227(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _199821_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _199836_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a8446227_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8446227_ctx>();
	return _1a47c1562__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a8448427(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _200521_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _200536_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a8448427_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8448427_ctx>();
	return _1a47c195d__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a844a3a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _201221_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _201236_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a844a3a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a844a3a2_ctx>();
	return _1a47c1d59__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1a48a2753_Data> __jule_anon_1a844c32c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48a447a_eval>* _201921_e, jule::Ptr<_1a465b6c7_FnCallExpr>* _201936_fc, jule::Ptr<_1a48a2753_Data>* ) {
	jule::Ptr<__jule_anon_1a844c32c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a844c32c_ctx>();
	return _1a47c2255__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1a8458602(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1a8458602_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8458602_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84596d0:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_1a4660874_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a48d3ae7_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1a84596d0;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a48d54cd_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a845c46e:;
					if (it != expr_end) {
						jule::Ptr<_1a4653669_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a48d54cd_Type> _7310_kind = _1a483660a_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a49058b6_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type77) {
										_case_begin_1a845e2c8:;
										{
											jule::Ptr<_1a4653c74_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a4653c74_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a47c6aa6_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1a84628e7;
											};
										}
									}
									_match_end_1a845e251:;
								};
								return false;;
							};
							_julec_label_1a84628e7:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a48d54cd_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1a845c46e:;
						++it;
						goto _iter_begin_1a845c46e;
					}
					_iter_end_1a845c46e:;
				};
			}
			_iter_next_1a84596d0:;
			++it;
			_659_i++;
			goto _iter_begin_1a84596d0;
		}
		_iter_end_1a84596d0:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1a86b32c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480c3d3_ImportInfo> _48635_spkg) {
	jule::Ptr<__jule_anon_1a86b32c9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a86b32c9_ctx>();
	return ((!(_1a48075ba_isImplicitImport(_48635_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48528_pkg))))._field_Path == (*(_48635_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1a826c713(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _83342_sema) {
	jule::Ptr<__jule_anon_1a826c713_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a826c713_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82643_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a826d714:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> _83516_p = *it;
			{
				if ((!(_1a471c8dc_IsSelf((*(_83516_p))._field_Decl.ptr())))) {
					(*_83516_p.alloc)._field_Type=_1a483ae17_buildNonGenericType((*(_83342_sema)), &((*((*(*(_83516_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82659_ignored);
					__jule_func_result=(__jule_func_result && ((*_83516_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1a826d714:;
			++it;
			goto _iter_begin_1a826d714;
		}
		_iter_end_1a826d714:;
	};
	if ((!(_1a471e218_IsVoid((*__jule_closure_ctx.alloc->_82643_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82643_f.alloc)._field_Result=_1a483ae17_buildNonGenericType((*(_83342_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82643_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82659_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82643_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1a82856d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _93642_sema) {
	jule::Ptr<__jule_anon_1a82856d7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a82856d7_ctx>();
	return __jule_closure_ctx.alloc->_92946_algo(_93642_sema, &(__jule_closure_ctx.alloc->_9347_generics));;
}

inline jule::Bool __jule_anon_1a8289ec2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a48293cd_sema>* _95237_sema, jule::Slice<jule::Ptr<_1a48d46db_TypeAlias>>* _95255_generics) {
	jule::Ptr<__jule_anon_1a8289ec2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8289ec2_ctx>();
	jule::Bool _9538_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a828b468:;
		if (it != expr_end) {
			jule::Ptr<_1a4720bba_ParamIns> _95416_p = *it;
			{
				if (_1a471c8dc_IsSelf((*(_95416_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1a828b468;
					};
					if (_1a471cb73_IsRef((*(_95416_p))._field_Decl)) {
						(*_95416_p.alloc)._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2122_Sptr>(_1a48e2122_Sptr{._field_Elem=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)});
					} else {
						(*_95416_p.alloc)._field_Type=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data0)});
					};
				} else {
					(*(_95416_p))._field_Type=_1a4837b8e_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*_95416_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
					if (((*_95416_p.alloc)._field_Type != nullptr)) {
						_1a483cb61_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95416_p));
					} else {
						_9538_ok=false;
					};
				};
			}
			_iter_next_1a828b468:;
			++it;
			goto _iter_begin_1a828b468;
		}
		_iter_end_1a828b468:;
	};
	if ((!(_1a471e218_IsVoid((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result=_1a4837b8e_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94837_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
		_9538_ok=(((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result != nullptr) && _9538_ok);
	};
	return _9538_ok;;
}

inline jule::Str __jule_anon1a91380d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a91391d3:;
			{
				return (*((*(_85519_def)).cast_ptr<_1a48d46db_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9139007:;
			{
				return (*((*(_85519_def)).cast_ptr<_1a4673ec5_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1a9138ab7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a9138a51:;
	};
}

inline void __jule_anon_1a9723a64(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _20331_file) {
	jule::Ptr<__jule_anon_1a9723a64_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9723a64_ctx>();
	{
		auto expr = &((*((*(_20331_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97244e3:;
		if (it != expr_end) {
			jule::Ptr<_1a4852e51_Var> _20416_v = *it;
			{
				if (_1a538cea7_HasDirective(&((*(_20416_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1a9719719_isLive(__jule_closure_ctx.alloc->_self_, &(_20416_v))))) {
						_1a971cb7e_pushLive(__jule_closure_ctx.alloc->_self_, _20416_v);
						_1a6241420_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_20416_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1a97244e3:;
			++it;
			goto _iter_begin_1a97244e3;
		}
		_iter_end_1a97244e3:;
	};
	{
		auto expr = &((*((*(_20331_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a972545b:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _21216_f = *it;
			{
				if (_1a538cea7_HasDirective(&((*(_21216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_21216_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9726e96:;
						if (it != expr_end) {
							jule::Ptr<_1a4721d20_FnIns> _21418_ins = *it;
							{
								if ((!(_1a96d96d9_isLive(__jule_closure_ctx.alloc->_self_, &(_21418_ins))))) {
									_1a96dcdc4_pushLive(__jule_closure_ctx.alloc->_self_, _21418_ins);
									_1a6241420_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_21418_ins))._field_Refers));
								};
							}
							_iter_next_1a9726e96:;
							++it;
							goto _iter_begin_1a9726e96;
						}
						_iter_end_1a9726e96:;
					};
				};
			}
			_iter_next_1a972545b:;
			++it;
			goto _iter_begin_1a972545b;
		}
		_iter_end_1a972545b:;
	};
}

inline void __jule_anon_1a977bbaa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1a977bbaa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a977bbaa_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a977c606:;
			{
				jule::Ptr<_1a471396b_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1a6244ab6_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a977c44c:;
			{
				jule::Ptr<_1a47147a2_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1a47147a2_AnonFnExprModel>(&__jule_any_type102);;
				_1a6247525_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1a977c57e:;
	};
}

inline void __jule_anon_1a9b05110(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _59047_m) {
	jule::Ptr<__jule_anon_1a9b05110_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9b05110_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_59047_m));
	};
	{
		auto &_match_expr{ (*(_59047_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a9b05990:;
			{
				{
					_1a6140929_binary(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a471198b_BinaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a9b05be3:;
			{
				{
					_1a6140bd2_unary(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a4711d65_UnaryExprModel>(&__jule_any_type112));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a9b05a06:;
			{
				{
					_1a6140e8a_structureLit(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a4712739_StructLitExprModel>(&__jule_any_type97));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a9b05a6c:;
			{
				{
					_1a6141243_casting(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a47130b9_CastingExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9b05ad3:;
			{
				{
					_1a6141dc0_funcCall(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a471396b_FnCallExprModel>(&__jule_any_type30));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a9b063ec:;
			{
				{
					_1a6142178_indexing(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a47142eb_IndexingExprModel>(&__jule_any_type42));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a9b06463:;
			{
				{
					_1a6142431_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_59047_m)).cast_ptr<_1a47147a2_AnonFnExprModel>(&__jule_any_type102));
				};
			}
		}
		_match_end_1a9b05891:;
	};
}

inline void __jule_anon_1a9ccd0c9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9ccd0c9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9ccd0c9_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1a9cd1ad3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9cd1ad3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9cd1ad3_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1a9d021b9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9d021b9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9d021b9_ctx>();
	_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1a9d046a5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9d046a5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9d046a5_ctx>();
	_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1a9d1d669(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9d1d669_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9d1d669_ctx>();
	_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1a9dad8c4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9dad8c4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9dad8c4_ctx>();
	_1a5babd36_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1a9daec05(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a9daec05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9daec05_ctx>();
	_1a625e7a1_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_76130_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1a9e305c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4852e51_Var> _113767_v) {
	jule::Ptr<__jule_anon_1a9e305c2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9e305c2_ctx>();
	return _1a625790e_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_113134_m), &(_113767_v));;
}

inline void __jule_anon_1aa2bb991(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _84038_pkg) {
	jule::Ptr<__jule_anon_1aa2bb991_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa2bb991_ctx>();
	_1a53884ad_IterFiles(_84038_pkg, jule::__new_closure<void,jule::Ptr<_1a4725065_SymTab>*>((void*)__jule_anon_1aa2bc8a4, jule::Ptr<__jule_anon_1aa2bc8a4_ctx>::make(__jule_anon_1aa2bc8a4_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa2bc8a4_ctx_handler));
}

inline void __jule_anon_1aa2d1797(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa2d1797_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa2d1797_ctx>();
	_1a5babd36_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a626890e_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92524_v))._field_Value))._field_Data.alloc)._field_Model);
	_1a5babd36_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1aa2d3887(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa2d3887_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa2d3887_ctx>();
	_1a625e7a1_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92524_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1aa2d6093(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa2d6093_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa2d6093_ctx>();
	_1a5babd36_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1aa2d723c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa2d723c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa2d723c_ctx>();
	_1a6269aca_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92524_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1aa321573(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _118738_pkg) {
	jule::Ptr<__jule_anon_1aa321573_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa321573_ctx>();
	_1a53884ad_IterFiles(_118738_pkg, jule::__new_closure<void,jule::Ptr<_1a4725065_SymTab>*>((void*)__jule_anon_1aa322486, jule::Ptr<__jule_anon_1aa322486_ctx>::make(__jule_anon_1aa322486_ctx{._118738_pkg=_118738_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa322486_ctx_handler));
}

inline void __jule_anon_1aa322a4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _121031_file) {
	jule::Ptr<__jule_anon_1aa322a4c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa322a4c_ctx>();
	{
		auto expr = &((*((*(_121031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa326ca4:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _121116_f = *it;
			{
				if ((*(_121116_f))._field_Ident.equal("init", 4)) {
					_1a5bac6d8_indent(__jule_closure_ctx.alloc->_self_);
					static__1a627143e_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_121116_f));
					_1a5babd36_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1aa326ca4:;
			++it;
			goto _iter_begin_1aa326ca4;
		}
		_iter_end_1aa326ca4:;
	};
}

inline void __jule_anon_1aa32dddd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _124938_pkg) {
	jule::Ptr<__jule_anon_1aa32dddd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa32dddd_ctx>();
	_1a5bb75c2_pushInit(__jule_closure_ctx.alloc->_self_, _124938_pkg);
}

inline void __jule_anon_1aa3340be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a471dc62_Fn>* _128636_m) {
	jule::Ptr<__jule_anon_1aa3340be_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa3340be_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12827_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa334b19:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _128811_em = *it;
			{
				if ((_128811_em == (*(_128636_m)))) {
					return;;
				};
			}
			_iter_next_1aa334b19:;
			++it;
			goto _iter_begin_1aa334b19;
		}
		_iter_end_1aa334b19:;
	};
	(*__jule_closure_ctx.alloc->_12827_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12827_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a471dc62_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_128636_m)); __jule_collection; }));
}

inline void __jule_anon_1aa336698(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480eb55_Package>* _130038_pkg) {
	jule::Ptr<__jule_anon_1aa336698_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa336698_ctx>();
	_1a53884ad_IterFiles(_130038_pkg, jule::__new_closure<void,jule::Ptr<_1a4725065_SymTab>*>((void*)__jule_anon_1aa3375ab, jule::Ptr<__jule_anon_1aa3375ab_ctx>::make(__jule_anon_1aa3375ab_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa3375ab_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aa3d39a9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b4565bba_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aa3db61b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b4565714_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1a4b42619(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480c3d3_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1a89a0a6c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a480c3d3_ImportInfo> _472130_imp) {
	jule::Ptr<__jule_anon_1a89a0a6c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89a0a6c_ctx>();
	return (((*(_472130_imp))._field_Alias == __jule_closure_ctx.alloc->_472038_namespace) && (!(_1a48075ba_isImplicitImport(_472130_imp))));;
}

inline void __jule_anon_1aa2bc8a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _84132_file) {
	jule::Ptr<__jule_anon_1aa2bc8a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa2bc8a4_ctx>();
	{
		auto expr = &((*((*(_84132_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2bd355:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _84217_f = *it;
			{
				if (((!((*(_84217_f))._field_Binded)) && ((*_84217_f.alloc)._field_Token != nullptr))) {
					_1a5badd9e_pushResult(__jule_closure_ctx.alloc->_self_, &(_84217_f));
					_1a5bb2523_funcDecl(__jule_closure_ctx.alloc->_self_, &(_84217_f), false);
				};
			}
			_iter_next_1aa2bd355:;
			++it;
			goto _iter_begin_1aa2bd355;
		}
		_iter_end_1aa2bd355:;
	};
}

inline void __jule_anon_1aa322486(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _118832_file) {
	jule::Ptr<__jule_anon_1aa322486_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa322486_ctx>();
	{
		auto expr = &((*((*(_118832_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa322e15:;
		if (it != expr_end) {
			jule::Ptr<_1a471dc62_Fn> _118917_f = *it;
			{
				if (((!(_1ce7a06c0_Test)) && _1a538cea7_HasDirective(&((*(_118917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1aa322e15;
				};
				if (((*(__jule_closure_ctx.alloc->_118738_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118917_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1aa324840:;
							{
								goto _iter_next_1aa322e15;
							}
						}
						_match_end_1aa324774:;
					};
				};
				if (((!((*_118917_f.alloc)._field_Binded)) && ((*_118917_f.alloc)._field_Token != nullptr))) {
					_1a5bb4a64_func(__jule_closure_ctx.alloc->_self_, &(_118917_f));
					_1a5babd36_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1aa322e15:;
			++it;
			goto _iter_begin_1aa322e15;
		}
		_iter_end_1aa322e15:;
	};
}

inline void __jule_anon_1aa3375ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a4725065_SymTab>* _130132_file) {
	jule::Ptr<__jule_anon_1aa3375ab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa3375ab_ctx>();
	{
		auto expr = &((*((*(_130132_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa33803a:;
		if (it != expr_end) {
			jule::Ptr<_1a4729476_Trait> _130217_t = *it;
			{
				if (((*(_130217_t))._field_Token != nullptr)) {
					_1a5bb8172_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_130217_t));
				};
			}
			_iter_next_1aa33803a:;
			++it;
			goto _iter_begin_1aa33803a;
		}
		_iter_end_1aa33803a:;
	};
}

inline void __jule_RCAdd(jule::U32* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U32 __jule_RCLoad(jule::U32* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U32* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1ce7a224e_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1a5c3deea_OutDir = jule::Str::lit("dist", 4);
	_1a5c3e2e7_OutName = jule::Str::lit("ir.cpp", 6);
	_1a5c3e5a0_Out = jule::Str();
	_1e73a4ac5_STDIN = _1e73a53cd_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
	_1e73a4d6c_STDOUT = _1e73a53cd_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
	_1e73a5169_STDERR = _1e73a53cd_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
	_1cc620344_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1cc620c90_acceptRanges = ({ auto __jule_collection = jule::Array<_1cc6208e9_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1cc6208e9_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1cc6208e9_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1cc6208e9_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1cc6208e9_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1cc6208e9_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1cc6208e9_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1cc793682__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1cc793c6a__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1ce7182e7__L = jule::new_ptr<_1ce78089d_RangeTable>(_1ce78089d_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1ce77edec_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1ce77edec_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1ce78042a_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1ce78042a_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1ce71920a__LU = jule::new_ptr<_1ce78089d_RangeTable>(_1ce78089d_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1ce77edec_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1ce77edec_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1ce77edec_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1ce78042a_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1ce78042a_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1ce78042a_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1ce7201de_Letter = _1ce7182e7__L;
	_1ce7264ae_Upper = _1ce71920a__LU;
	_1ce773b9e__CaseRanges = ({ auto __jule_collection = jule::Slice<_1ce77e946_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1ce77e946_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1ce77e946_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1ce773e8a__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1ce77aac9_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1ce77adb5_caseOrbit = ({ auto __jule_collection = jule::Slice<_1ce77e44b_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1ce77e44b_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1ce77e44b_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1cc8354d2_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1cc833e09_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1cc835b97_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1ce79807a_PathStdlib = jule::Str();
	_1ce7982cd_PathExec = jule::Str();
	_1ce798564_PathWd = jule::Str();
	_1ce798861_PathApi = jule::Str();
	_1ce798b19_OS = jule::Str::lit("windows", 7);
	_1ce798dc2_Arch = jule::Str::lit("i386", 4);
	_1ce79d7ab_Compiler = jule::Str();
	_1ce79eba8_CompilerPath = jule::Str();
	_1ce79edb7_CppStd = jule::Str::lit("cpp17", 5);
	_1ce7a015e_Shadowing = false;
	_1ce7a0417_Transpilation = false;
	_1ce7a06c0_Test = false;
	_1ce7a0978_RC = true;
	_1ce7a0d41_Safety = true;
	_1ce7a1083_Production = false;
	_1b455e91c_f32info = _1b455e554_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1b455ec19_f64info = _1b455e554_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1b4567639_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1b4569394_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1b4569e55_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1b456a285_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1b456d486_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1b4572655_leftCheats = ({ auto __jule_collection = jule::Slice<_1b4572226_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1b4572226_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1b4572226_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1b4572226_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1b4572226_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1b4572226_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1b4572226_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1b4572226_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1b4572226_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1b4572226_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1b4572226_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1b4572226_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1b4572226_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1b4572226_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1b4572226_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1b4572226_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1b4572226_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1b4572226_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1b4572226_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1b4572226_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1b4572226_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1b4572226_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1b4572226_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1b4572226_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1b4572226_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1b4572226_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1b4572226_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1b4572226_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1b4572226_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1b4572226_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1b4572226_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1b4572226_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1b4572226_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1b4572226_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1b4572226_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1b4572226_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1b4572226_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1b4572226_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1b4572226_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1b4572226_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1b4572226_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1b4572226_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1b4572226_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1b4572226_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1b4572226_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1b4572226_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1b4572226_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1b4572226_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1b4572226_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1b4572226_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1b4572226_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1b4572226_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1b4572226_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1b4572226_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1b4572226_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1b4572226_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1b4572226_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1b4572226_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1b4572226_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1b4572226_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1b4572226_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1b4572226_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1a4590045_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1a4590254_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_1a459052e_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_1a463761a_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_1a4637906_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_1a4646030_keywords = ({ auto __jule_collection = jule::Array<_1a4645b45_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_1a4646360_basicOps = ({ auto __jule_collection = jule::Array<_1a4645b45_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _1a4645b45_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_1a4793567_BitSize = 0LL;
	_1a47937cb_SysInt = jule::Str();
	_1a4793a84_SysUint = jule::Str();
	_1a47c47da_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1a4958573_primNil = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1a4958870_primVoid = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a4958b28_primAny = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a4958e25_primStr = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a49591cd_primBool = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a4959486_primUintptr = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495973e_primUint = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a4959b07_primInt = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a4959d49_primI8 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495a0e1_primI16 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495a399_primI32 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495a652_primI64 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495a90a_primU8 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495abb3_primU16 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495ae6b_primU32 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495b455_primU64 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495b697_primF32 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a495b8a6_primF64 = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a490296d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)});
	_1a5390916_ProgramMeta = static_cast<jule::Ptr<_1a53912a7_Meta>>(nullptr);
	_1a614637a_emptyData = jule::new_ptr<_1a6146d3c_data>(_1a6146d3c_data{._field_boundary=jule::Ptr<_1a6148624_boundary>(nullptr), ._field_nils=jule::Ptr<_1a6134159_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a6143e5a_dynamic>(nullptr), ._field_flags=0LL});
	_1a614b32a_Copy = false;
	_1a614b627_Deadcode = false;
	_1a614b8d0_Append = false;
	_1a614bbcc_Math = false;
	_1a614be85_Access = false;
	_1a614c23d_Inline = false;
	_1a614c4e6_Ptr = false;
	_1a614c8ae_Cond = false;
	_1a614cb01_Str = false;
	_1a614cd98_Slice = false;
	_1a614d151_Assign = false;
	_1a614d409_Exceptional = false;
	_1a614d6b2_Iter = false;
	_1a614d96a_Dynamic = false;
	_1a614dc23_StdStrings = false;
	_1a62494d3_exprEnabled = false;
	_1a6249868_scopeEnabled = false;
	_1a5b9cd27_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1a624d482_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1a5ba8a8b_generalGCPtr = jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48e2122_Sptr>(_1a48e2122_Sptr{._field_Elem=jule::new_ptr<_1a48d54cd_Type>(_1a48d54cd_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a48dd5e6_Prim>(_1a48dd5e6_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1a48d5027_Kind_mptr_data23)});
	_1ce7738b3_CaseRanges = _1ce773b9e__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_1ce7a3a36_main();

	return EXIT_SUCCESS;
}