// Auto generated by JuleC.
// JuleC version: jule0.0.13 @master
// Date: 1/6/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer -lws2_32 -lshell32 dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1b2ea8ad7_Importer{};
struct _1b305b5e6_Kind{};
struct _1b3077997_Lookup{};
struct _1b3a75c69_CommonFlag{};
struct _20c95a64e_acceptRange;
struct _1cab67a36_Range16;
struct _1cab67ea9_Range32;
struct _1cab6842c_RangeTable;
struct _1cab774e6_lazyBuff;
struct _20bad439a_DirEntry;
struct _20bb0a547_Directory;
struct _20c81243a_File;
struct _20c812858_Status;
struct _1cac9be56_cmdAttrs;
struct _1cac0bec6_Log;
struct _1cb188a5c_Token;
struct _1cb18dde7_File;
struct _1cb190e4e_kindPair;
struct _1cb1969b0_lex;
struct _1b18b9e01_floatInfo;
struct _1b18ba0dd_decimalSlice;
struct _1b18c9c8a_leftCheat;
struct _1b18ca75d_decimal;
struct _1b18de5da_Const;
struct _1b2e172e8_Ast;
struct _1b2e180da_Node;
struct _1b2e184d6_Directive;
struct _1b2e4b77d_TypeDecl;
struct _1b2e4bd44_IdentTypeDecl;
struct _1b2e4c493_SubIdentTypeDecl;
struct _1b2e4c84a_NamespaceTypeDecl;
struct _1b2e4cb36_SptrTypeDecl;
struct _1b2e4d032_SlcTypeDecl;
struct _1b2e4d31d_TupleTypeDecl;
struct _1b2e4d609_PtrTypeDecl;
struct _1b2e4dc8b_ArrTypeDecl;
struct _1b2e4e4d9_MapTypeDecl;
struct _1b2e4e891_RetTypeDecl;
struct _1b2e50c9e_Expr;
struct _1b2e5108a_RangeExpr;
struct _1b2e51640_UseExpr;
struct _1b2e5192b_TupleExpr;
struct _1b2e51cd3_LitExpr;
struct _1b2e524dc_UnsafeExpr;
struct _1b2e52960_IdentExpr;
struct _1b2e53169_UnaryExpr;
struct _1b2e53521_VariadicExpr;
struct _1b2e538c8_CastExpr;
struct _1b2e53c80_NsSelectionExpr;
struct _1b2e54203_SubIdentExpr;
struct _1b2e54676_BinopExpr;
struct _1b2e54c81_FnCallExpr;
struct _1b2e55710_FieldExprPair;
struct _1b2e55e5d_StructLit;
struct _1b2e563d1_BraceLit;
struct _1b2e56ba6_KeyValPair;
struct _1b2e5738d_SliceExpr;
struct _1b2e57c0c_IndexingExpr;
struct _1b2e58317_SlicingExpr;
struct _1b2e58603_Constraint;
struct _1b2e58a76_GenericDecl;
struct _1b2e58e2d_LabelSt;
struct _1b2e592d5_GotoSt;
struct _1b2e595c1_FallSt;
struct _1b2e59bcb_AssignLeft;
struct _1b2e5a21a_AssignSt;
struct _1b2e5b10b_Stmt;
struct _1b2e5b716_ScopeTree;
struct _1b2e5bddc_ParamDecl;
struct _1b2e5d20c_FnDecl;
struct _1b2e5e1db_VarDecl;
struct _1b2e5e593_RetSt;
struct _1b2e5ec03_Iter;
struct _1b2e604c8_WhileKind;
struct _1b2e60d69_RangeKind;
struct _1b2e61221_BreakSt;
struct _1b2e615c8_ContSt;
struct _1b2e61a4b_If;
struct _1b2e61e03_Else;
struct _1b2e62376_Conditional;
struct _1b2e62a4c_TypeAliasDecl;
struct _1b2e62ec0_Case;
struct _1b2e63696_MatchCase;
struct _1b2e63e38_UseDecl;
struct _1b2e643ab_EnumItemDecl;
struct _1b2e64dd4_EnumDecl;
struct _1b2e658da_TypeEnumItemDecl;
struct _1b2e65ee5_TypeEnumDecl;
struct _1b2e661e3_FieldDecl;
struct _1b2e66996_StructDecl;
struct _1b2e670a1_TraitDecl;
struct _1b2e676ab_Impl;
struct _1b2e3becc_Field;
struct _1b2e44622_Operators;
struct _1b2e683e3_Struct;
struct _1b2e685d0_FieldIns;
struct _1b2e68cea_OperandExprModel;
struct _1b2e68ed7_BinopExprModel;
struct _1b2e691c4_UnaryExprModel;
struct _1b2e693b1_StructArgExprModel;
struct _1b2e6959d_StructLitExprModel;
struct _1b2e6978a_AllocStructLitExprModel;
struct _1b2e69977_CastingExprModel;
struct _1b2e69b64_FnCallExprModel;
struct _1b2e69d51_SliceExprModel;
struct _1b2e6a03d_IndexingExprModel;
struct _1b2e6a22a_AnonFnExprModel;
struct _1b2e6a417_KeyValPairExprModel;
struct _1b2e6a604_MapExprModel;
struct _1b2e6a7e1_SlicingExprModel;
struct _1b2e6a9cd_TraitSubIdentExprModel;
struct _1b2e6adeb_StructSubIdentExprModel;
struct _1b2e6b0d8_StructStaticIdentExprModel;
struct _1b2e6b2c5_ArrayExprModel;
struct _1b2e6b4b2_CommonIdentExprModel;
struct _1b2e6b69e_CommonSubIdentExprModel;
struct _1b2e6b88b_TupleExprModel;
struct _1b2e6ba78_BuiltinOutCallExprModel;
struct _1b2e6bc65_BuiltinOutlnCallExprModel;
struct _1b2e6be52_BuiltinCloneCallExprModel;
struct _1b2e6c13e_BuiltinNewCallExprModel;
struct _1b2e6c32b_BuiltinPanicCallExprModel;
struct _1b2e6c518_BuiltinAssertCallExprModel;
struct _1b2e6c705_BuiltinMakeCallExprModel;
struct _1b2e6c8e2_BuiltinAppendCallExprModel;
struct _1b2e6cace_BuiltinLenCallExprModel;
struct _1b2e6ccbb_BuiltinCapCallExprModel;
struct _1b2e6abba_BuiltinDeleteCallExprModel;
struct _1b2e6d42b_BuiltinCopyCallExprModel;
struct _1b2e6d618_BuiltinErrorCallExprModel;
struct _1b2e6d805_SizeofExprModel;
struct _1b2e6d9e2_AlignofExprModel;
struct _1b2e6dbce_RuneExprModel;
struct _1b2e6ddbb_IntegratedToStrExprModel;
struct _1b2e6e0a8_BackendEmitExprModel;
struct _1b2e6e295_FreeExprModel;
struct _1b2e6e482_RetType;
struct _1b2e6e66e_Param;
struct _1b2e6e85b_Fn;
struct _1b2e70263_ParamIns;
struct _1b2e71132_FnIns;
struct _1b2e7408b_ReferenceStack;
struct _1b2e753bc_Pass;
struct _1b2e79866_symbolBuilder;
struct _1b2e8033e_Trait;
struct _1b2e8198e_EnumItem;
struct _1b2e82484_Enum;
struct _1b2e834b8_TypeEnumItem;
struct _1b2e83a7e_TypeEnum;
struct _1b2e860ae_constraintChecker;
struct _1b2e87ee5_Impl;
struct _1b2e8d050_Scope;
struct _1b2e8d44b_If;
struct _1b2e8d737_Else;
struct _1b2e8daab_Conditional;
struct _1b2e8dd97_InfIter;
struct _1b2e8e31a_WhileIter;
struct _1b2e8ec00_RangeIter;
struct _1b2e900eb_ContSt;
struct _1b2e904a3_BreakSt;
struct _1b2e9078e_Label;
struct _1b2e90a7a_GotoSt;
struct _1b2e90e32_Postfix;
struct _1b2e913a5_Assign;
struct _1b2e9175c_MultiAssign;
struct _1b2e91c9b_Match;
struct _1b2e927e6_Case;
struct _1b2e92d9b_FallSt;
struct _1b2e93220_RetSt;
struct _1b2e9382a_scopeLabel;
struct _1b2e93c9d_scopeGoto;
struct _1b2e94ab2_scopeChecker;
struct _1b2ea56c7_directiveChecker;
struct _1b2eab755_ImportInfo;
struct _1b2eae6ae_Package;
struct _1b2eb48a1_Sema;
struct _1b2ed533e_missingRetChecker;
struct _1b2ed6ede_IterRelation;
struct _1b2ed8034_Var;
struct _1b2ed8cd2_FuncPattern;
struct _1b301985c_typeCompatibilityChecker;
struct _1b301b485_assignTypeChecker;
struct _1b301ce6a_dynamicTypeAnnotation;
struct _1b3022832_fnCallArgChecker;
struct _1b302523b_structLitChecker;
struct _1b3026d20_rangeChecker;
struct _1b3028daa_retTypeChecker;
struct _1b302ac69_SymbolTable;
struct _1b3030a93_Data;
struct _1b3031b1b_Value;
struct _1b3032611_Eval;
struct _1b304d4a6_unaryEval;
struct _1b3050244_binaryEval;
struct _1b305a2e8_InsGeneric;
struct _1b305ad32_TypeAlias;
struct _1b305ba25_TypeKind;
struct _1b3060e03_TypeSymbol;
struct _1b3061772_Prim;
struct _1b3065006_Sptr;
struct _1b3065963_Slc;
struct _1b30664e1_Tuple;
struct _1b3067019_Map;
struct _1b3067b0d_Arr;
struct _1b306856a_Ptr;
struct _1b30694b1_referencer;
struct _1b306a391_typeChecker;
struct _1b3072aa2_identTypeLookup;
struct _1b38356c7_FileInfo;
struct _1b3881756_stmt;
struct _1b3882081_scopeParser;
struct _1b388d565_exprBuilder;
struct _1b3899d9b_assignInfo;
struct _1b389d6c9_parser;
struct _1b38ae3dd_typeBuilder;
struct _1b31d7de3_CompileInfo;
struct _1b31d9246_directiveEval;
struct _1b37a5db7_JuleImporter;
struct _1b3200b75_OrderedDefines;
struct _1b32c7a3d_defineOrderer;
struct _1b397cab6_liveTable;
struct _1b39b3712_scopeDeadCode;
struct _1b39b766c_exprDeadCode;
struct _1cb139ed6_StrCompExprModel;
struct _1b2c57325_StrAppendExprModel;
struct _1cb0ae653_UnsafeBinopExprModel;
struct _1b2c63771_UnsafeIndexingExprModel;
struct _1cb08b344_PushToSliceExprModel;
struct _1cb0d91a5_MutSlicingExprModel;
struct _1cb0c1885_StrInsertBeginExprModel;
struct _1b2c1931a_scopeOptimizer;
struct _1b2c19507_exprOptimizer;
struct _1b38b46ce_Optimizer;
struct _1b39c1588_AnsiEscape;
struct _1b39c2a73_Logger;
struct _1b421a034_AbsTime;
struct _1b421a6c7_Time;
struct _1b4164ea1_scopeCoder;
struct _1b416d3e9_exprCoder;
struct _1b417c7c1_deriveCoder;
struct _1b417e1a7_TestCoder;
struct _1b41816e8_identCoder;
struct _1b41b4099_SerializationInfo;
struct _1b41895ad_traitHash;
struct _1b4228075_customType;
struct _1b42289e3_typeCoder;
struct _1b42312d1_resultCoder;
struct _1b6500999_Flag;
struct _1b6504607_Flag;
struct _1b6507dbe_Flag;
struct _1b650b6ca_Flag;
struct _1b650ee92_Flag;
struct _1b425b97c_FlagSet;
struct _1b425e155_argParser;
struct _1b42224e2_ObjectCoder;
struct _1b397cd80_ObjectDeadCode;
struct _1b345d553_IR;
struct _1b2e687bc_StructIns;
struct _1cac7b584_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b3030a93_Data__jule_tuple_x_1b3030a93_Data {
	jule::Ptr<_1b3030a93_Data> __jule_result_arg0;
	jule::Ptr<_1b3030a93_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1b2e62ec0_Case__jule_tuple_bool {
	jule::Ptr<_1b2e62ec0_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b2e62ec0_Case__jule_tuple_x_1b2e61e03_Else {
	jule::Slice<jule::Ptr<_1b2e62ec0_Case>> __jule_result_arg0;
	jule::Ptr<_1b2e61e03_Else> __jule_result_arg1;
};
struct __jule_tuple__1b2e5adca_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool {
	jule::Ptr<_1b2e5a21a_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1b2e4b77d_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1b2e4e891_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log {
	jule::Slice<jule::Ptr<_1b2e172e8_Ast>> __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1cac0bec6_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b345d553_IR__jule_tuple_s_1cac0bec6_Log {
	jule::Ptr<_1b345d553_IR> __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b12566e4_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b12566e4_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b12566e4_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b302ac69_SymbolTable__jule_tuple_s_1cac0bec6_Log {
	jule::Ptr<_1b302ac69_SymbolTable> __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log {
	jule::Ptr<_1b2eae6ae_Package> __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log {
	jule::Ptr<_1b2e172e8_Ast> __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1cb188a5c_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> __jule_result_arg0;
	jule::Slice<_1cac0bec6_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _20c95a64e_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_20c95a64e_acceptRange(void) = default;

	inline bool operator==(_20c95a64e_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_20c95a64e_acceptRange _other) { return !this->operator==(_other); }


};
struct _1cab67a36_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_1cab67a36_Range16(void) = default;

	inline bool operator==(_1cab67a36_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1cab67a36_Range16 _other) { return !this->operator==(_other); }


};
struct _1cab67ea9_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_1cab67ea9_Range32(void) = default;

	inline bool operator==(_1cab67ea9_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1cab67ea9_Range32 _other) { return !this->operator==(_other); }


};
struct _1cab6842c_RangeTable {
	jule::Slice<_1cab67a36_Range16> _field_R16;
	jule::Slice<_1cab67ea9_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	

	_1cab6842c_RangeTable(void) = default;


};
inline jule::U8 _1cab77969_index(_1cab774e6_lazyBuff*, jule::I32);
inline void _1cab77bde_append(_1cab774e6_lazyBuff*, jule::U8);
inline jule::Str _1cab77e53_string(_1cab774e6_lazyBuff*);
struct _1cab774e6_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	

	_1cab774e6_lazyBuff(void) = default;


};
struct _20bad439a_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_20c812858_Status> _field_Stat;
	

	_20bad439a_DirEntry(void) = default;

	inline bool operator==(_20bad439a_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_20bad439a_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_20bad439a_DirEntry>>> static__1cab7a263_Read(jule::Str);
inline jule::VoidExceptional static__1cab7a395_Create(jule::Str);
inline jule::VoidExceptional static__1cab7a593_Remove(jule::Str);
struct _20bb0a547_Directory {
	

	_20bb0a547_Directory(void) = default;

	inline bool operator==(_20bb0a547_Directory _other) { return true; }

	inline bool operator!=(_20bb0a547_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20c81243a_File> static__20bada55a_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_20c81243a_File>> static__20badd0b8_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20bb0b867_Read(jule::Str);
inline jule::VoidExceptional static__20b9d8766_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional static__20ba6533c_WriteStr(jule::Str, jule::Str*, jule::I32);
inline jule::Exceptional<jule::I32> _20ba65826_Seek(_20c81243a_File*, jule::I32, jule::I32);
inline jule::Exceptional<jule::I32> _20ba64539_WriteStr(_20c81243a_File*, jule::Str*);
inline jule::VoidExceptional _20ba663b5_Close(_20c81243a_File*);
inline jule::Exceptional<jule::Ptr<_20c81243a_File>> static__20c8e1d44_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__20c926818_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _20c91d6cd_Write(_20c81243a_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _20c947b58_Read(_20c81243a_File*, jule::Slice<jule::U8>);
struct _20c81243a_File {
	jule::Uintptr _field_handle = 0;
	

	_20c81243a_File(void) = default;

	inline bool operator==(_20c81243a_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_20c81243a_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _20ba66a47_IsDir(_20c812858_Status*);
inline jule::Bool _20ba6733e_IsReg(_20c812858_Status*);
inline jule::U32 _20ba67edd_Size(_20c812858_Status*);
inline jule::Exceptional<jule::Ptr<_20c812858_Status>> static__1cab7b011_Of(jule::Str);
struct _20c812858_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	_20c812858_Status(void) = default;

	inline bool operator==(_20c812858_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_20c812858_Status _other) { return !this->operator==(_other); }


};
struct _1cac9be56_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	_1cac9be56_cmdAttrs(void) = default;

	inline bool operator==(_1cac9be56_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1cac9be56_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1cac0bec6_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_1cac0bec6_Log(void) = default;

	inline bool operator==(_1cac0bec6_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1cac0bec6_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1cb188e14_Prec(_1cb188a5c_Token*);
struct _1cb188a5c_Token {
	jule::Ptr<_1cb18dde7_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	_1cb188a5c_Token(void) = default;

	inline bool operator==(_1cb188a5c_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1cb188a5c_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1cb18e304_IsOk(_1cb18dde7_File*);
inline void _1cb18e579_Fill(_1cb18dde7_File*, jule::Slice<jule::U8>);
inline jule::Str _1cb18e7dd_Dir(_1cb18dde7_File*);
inline jule::Str _1cb18ea52_Name(_1cb18dde7_File*);
inline jule::Uintptr _1cb18ecb6_Addr(_1cb18dde7_File*);
inline jule::Str _1cb1900c4_GetRow(_1cb18dde7_File*, jule::I32);
struct _1cb18dde7_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Tokens;
	

	_1cb18dde7_File(void) = default;


};
struct _1cb190e4e_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	_1cb190e4e_kindPair(void) = default;

	inline bool operator==(_1cb190e4e_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1cb190e4e_kindPair _other) { return !this->operator==(_other); }


};
inline void _1cb197054_pushErr(_1cb1969b0_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1cb197373_pushErrTok(_1cb1969b0_lex*, jule::Ptr<_1cb188a5c_Token>*, jule::Str);
inline void _1cb19754e_lex(_1cb1969b0_lex*);
inline jule::Str _1cb19785c_id(_1cb1969b0_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1cb197ac1_resume(_1cb1969b0_lex*);
inline void _1cb197d46_lexLineComment(_1cb1969b0_lex*, jule::Ptr<_1cb188a5c_Token>*);
inline void _1cb1980bb_lexRangeComment(_1cb1969b0_lex*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Str _1cb1983c9_num(_1cb1969b0_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1cb1986d7_escapeSeq(_1cb1969b0_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1cb198a8e_getRune(_1cb1969b0_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1cb198d9c_lexRune(_1cb1969b0_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1cb199111_lexStr(_1cb1969b0_lex*);
inline jule::Bool _1cb199375_isFirstTokenOfLine(_1cb1969b0_lex*);
inline void _1cb199551_newLine(_1cb1969b0_lex*);
inline jule::Bool _1cb199a4b_isOp(_1cb1969b0_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1cb199e03_lexBasicOps(_1cb1969b0_lex*, jule::Slice<jule::U8>, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1cb19a2aa_lexId(_1cb1969b0_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1cb19a662_lexNum(_1cb1969b0_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Ptr<_1cb188a5c_Token> _1cb19a8c6_token(_1cb1969b0_lex*);
struct _1cb1969b0_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_tokens;
	jule::Ptr<_1cb18dde7_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_1cac0bec6_Log> _field_errors;
	

	_1cb1969b0_lex(void) = default;


};
struct _1b18b9e01_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	_1b18b9e01_floatInfo(void) = default;

	inline bool operator==(_1b18b9e01_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1b18b9e01_floatInfo _other) { return !this->operator==(_other); }


};
struct _1b18ba0dd_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1b18ba0dd_decimalSlice(void) = default;


};
struct _1b18c9c8a_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1b18c9c8a_leftCheat(void) = default;

	inline bool operator==(_1b18c9c8a_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1b18c9c8a_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b18c27cc_set(_1b18ca75d_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1b18c2ada_floatBits(_1b18ca75d_decimal*, _1b18b9e01_floatInfo*);
inline void _1b18cab37_assign(_1b18ca75d_decimal*, jule::U64);
inline void _1b18cadac_shift(_1b18ca75d_decimal*, jule::I32);
inline void _1b18cb132_roundDown(_1b18ca75d_decimal*, jule::I32);
inline void _1b18cb3a7_roundUp(_1b18ca75d_decimal*, jule::I32);
inline void _1b18cb62c_round(_1b18ca75d_decimal*, jule::I32);
inline jule::U64 _1b18cb891_roundedInteger(_1b18ca75d_decimal*);
struct _1b18ca75d_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1b18ca75d_decimal(void) = default;

	inline bool operator==(_1b18ca75d_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1b18ca75d_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b18de5da_Const> static__1b18dea5d_NewI64(jule::I64);
inline jule::Ptr<_1b18de5da_Const> static__1b18ded05_NewU64(jule::U64);
inline jule::Ptr<_1b18de5da_Const> static__1b18e009c_NewBool(jule::Bool);
inline jule::Ptr<_1b18de5da_Const> static__1b18e0344_NewStr(jule::Str);
inline jule::Ptr<_1b18de5da_Const> static__1b18e05db_NewF64(jule::F64);
inline jule::Ptr<_1b18de5da_Const> static__1b18e07d9_NewNil(void);
inline jule::I64 _1b18e0dd3_ReadI64(_1b18de5da_Const*);
inline jule::U64 _1b18e1147_ReadU64(_1b18de5da_Const*);
inline jule::Bool _1b18e13ab_ReadBool(_1b18de5da_Const*);
inline jule::Str _1b18e1620_ReadStr(_1b18de5da_Const*);
inline jule::F64 _1b18e1884_ReadF64(_1b18de5da_Const*);
inline jule::I64 _1b18e1ae8_AsI64(_1b18de5da_Const*);
inline jule::U64 _1b18e1d5c_AsU64(_1b18de5da_Const*);
inline jule::F64 _1b18e20c1_AsF64(_1b18de5da_Const*);
inline void _1b18e2346_SetI64(_1b18de5da_Const*, jule::I64);
inline void _1b18e25bb_SetU64(_1b18de5da_Const*, jule::U64);
inline void _1b18e2841_SetBool(_1b18de5da_Const*, jule::Bool);
inline void _1b18e2ab6_SetStr(_1b18de5da_Const*, jule::Str);
inline void _1b18e2d3b_SetF64(_1b18de5da_Const*, jule::F64);
inline void _1b18e3017_SetNil(_1b18de5da_Const*);
inline jule::Bool _1b18e327b_IsI64(_1b18de5da_Const*);
inline jule::Bool _1b18e34e0_IsU64(_1b18de5da_Const*);
inline jule::Bool _1b18e3754_IsBool(_1b18de5da_Const*);
inline jule::Bool _1b18e39b8_IsStr(_1b18de5da_Const*);
inline jule::Bool _1b18e3c2c_IsF64(_1b18de5da_Const*);
inline jule::Bool _1b18e3e91_IsNil(_1b18de5da_Const*);
inline jule::Bool _1b18e429e_AreSameTypes(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e45ac_And(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e48ba_Or(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e4bc8_Eq(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e4ed6_Lt(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e52e4_LtEq(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e5602_Gt(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e5910_GtEq(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e5c1d_Add(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e602b_Sub(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e6339_Mul(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e6647_Div(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e6955_Mod(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e6c63_BitwiseAnd(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e7071_BitwiseOr(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e737e_Xor(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e768c_Lshift(_1b18de5da_Const*, _1b18de5da_Const);
inline jule::Bool _1b18e799a_Rshift(_1b18de5da_Const*, _1b18de5da_Const);
struct _1b18de5da_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1b18de5da_Const(void) = default;

	inline jule::Bool operator==(_1b18de5da_Const _other) { return _1b18e4bc8_Eq(this, _other); }

	inline bool operator!=(_1b18de5da_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1b18de5da_Const _other) { return _1b18e5602_Gt(this, _other); }

	inline jule::Bool operator>=(_1b18de5da_Const _other) { return _1b18e5910_GtEq(this, _other); }

	inline jule::Bool operator<(_1b18de5da_Const _other) { return _1b18e4ed6_Lt(this, _other); }

	inline jule::Bool operator<=(_1b18de5da_Const _other) { return _1b18e52e4_LtEq(this, _other); }


};
struct _1b2e172e8_Ast {
	jule::Ptr<_1cb18dde7_File> _field_File;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1b2e63e38_UseDecl>> _field_UseDecls;
	jule::Slice<_1b2e180da_Node> _field_Nodes;
	

	_1b2e172e8_Ast(void) = default;


};
struct _1b2e180da_Node {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1b2e180da_Node(void) = default;

	inline bool operator==(_1b2e180da_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b2e180da_Node _other) { return !this->operator==(_other); }


};
struct _1b2e184d6_Directive {
	jule::Ptr<_1cb188a5c_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Args;
	

	_1b2e184d6_Directive(void) = default;


};
struct _1b2e4b77d_TypeDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1b2e4b77d_TypeDecl(void) = default;

	inline bool operator==(_1b2e4b77d_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2e4b77d_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e4c1a7_IsPrim(_1b2e4bd44_IdentTypeDecl*);
struct _1b2e4bd44_IdentTypeDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _field_Generics;
	

	_1b2e4bd44_IdentTypeDecl(void) = default;


};
struct _1b2e4c493_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1b2e4bd44_IdentTypeDecl>> _field_Idents;
	

	_1b2e4c493_SubIdentTypeDecl(void) = default;


};
struct _1b2e4c84a_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Idents;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	

	_1b2e4c84a_NamespaceTypeDecl(void) = default;


};
struct _1b2e4cb36_SptrTypeDecl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Elem;
	

	_1b2e4cb36_SptrTypeDecl(void) = default;

	inline bool operator==(_1b2e4cb36_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b2e4cb36_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b2e4d032_SlcTypeDecl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Elem;
	

	_1b2e4d032_SlcTypeDecl(void) = default;

	inline bool operator==(_1b2e4d032_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b2e4d032_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b2e4d31d_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _field_Types;
	

	_1b2e4d31d_TupleTypeDecl(void) = default;


};
inline jule::Bool _1b2e4d95b_IsUnsafe(_1b2e4d609_PtrTypeDecl*);
struct _1b2e4d609_PtrTypeDecl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Elem;
	

	_1b2e4d609_PtrTypeDecl(void) = default;

	inline bool operator==(_1b2e4d609_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b2e4d609_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e4e165_AutoSized(_1b2e4dc8b_ArrTypeDecl*);
struct _1b2e4dc8b_ArrTypeDecl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Elem;
	jule::Ptr<_1b2e50c9e_Expr> _field_Size;
	

	_1b2e4dc8b_ArrTypeDecl(void) = default;

	inline bool operator==(_1b2e4dc8b_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1b2e4dc8b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b2e4e4d9_MapTypeDecl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Key;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Val;
	

	_1b2e4e4d9_MapTypeDecl(void) = default;

	inline bool operator==(_1b2e4e4d9_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b2e4e4d9_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b2e4e891_RetTypeDecl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Idents;
	

	_1b2e4e891_RetTypeDecl(void) = default;


};
struct _1b2e50c9e_Expr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1b2e50c9e_Expr(void) = default;

	inline bool operator==(_1b2e50c9e_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2e50c9e_Expr _other) { return !this->operator==(_other); }


};
struct _1b2e5108a_RangeExpr {
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e5108a_RangeExpr(void) = default;

	inline bool operator==(_1b2e5108a_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e5108a_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1b2e51640_UseExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e51640_UseExpr(void) = default;

	inline bool operator==(_1b2e51640_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e51640_UseExpr _other) { return !this->operator==(_other); }


};
struct _1b2e5192b_TupleExpr {
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_Expr;
	

	_1b2e5192b_TupleExpr(void) = default;


};
inline jule::Bool _1b2e52135_IsNil(_1b2e51cd3_LitExpr*);
struct _1b2e51cd3_LitExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Value;
	

	_1b2e51cd3_LitExpr(void) = default;

	inline bool operator==(_1b2e51cd3_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b2e51cd3_LitExpr _other) { return !this->operator==(_other); }


};
struct _1b2e524dc_UnsafeExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e524dc_UnsafeExpr(void) = default;

	inline bool operator==(_1b2e524dc_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e524dc_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e52cb2_IsSelf(_1b2e52960_IdentExpr*);
struct _1b2e52960_IdentExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1b2e52960_IdentExpr(void) = default;

	inline bool operator==(_1b2e52960_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1b2e52960_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1b2e53169_UnaryExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Op;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e53169_UnaryExpr(void) = default;

	inline bool operator==(_1b2e53169_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e53169_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1b2e53521_VariadicExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e53521_VariadicExpr(void) = default;

	inline bool operator==(_1b2e53521_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e53521_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1b2e538c8_CastExpr {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e538c8_CastExpr(void) = default;

	inline bool operator==(_1b2e538c8_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e538c8_CastExpr _other) { return !this->operator==(_other); }


};
struct _1b2e53c80_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Ns;
	jule::Ptr<_1cb188a5c_Token> _field_Ident;
	

	_1b2e53c80_NsSelectionExpr(void) = default;


};
struct _1b2e54203_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Ptr<_1cb188a5c_Token> _field_Ident;
	

	_1b2e54203_SubIdentExpr(void) = default;

	inline bool operator==(_1b2e54203_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e54203_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1b2e54676_BinopExpr {
	jule::Ptr<_1b2e50c9e_Expr> _field_Left;
	jule::Ptr<_1b2e50c9e_Expr> _field_Right;
	jule::Ptr<_1cb188a5c_Token> _field_Op;
	

	_1b2e54676_BinopExpr(void) = default;

	inline bool operator==(_1b2e54676_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b2e54676_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e550e4_Unhandled(_1b2e54c81_FnCallExpr*);
inline jule::Bool _1b2e55358_Ignored(_1b2e54c81_FnCallExpr*);
struct _1b2e54c81_FnCallExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_Args;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1b2e54c81_FnCallExpr(void) = default;


};
inline jule::Bool _1b2e55a62_IsTargeted(_1b2e55710_FieldExprPair*);
struct _1b2e55710_FieldExprPair {
	jule::Ptr<_1cb188a5c_Token> _field_Field;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e55710_FieldExprPair(void) = default;

	inline bool operator==(_1b2e55710_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e55710_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1b2e55e5d_StructLit {
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_Exprs;
	

	_1b2e55e5d_StructLit(void) = default;


};
inline jule::Bool _1b2e56733_IsEmpty(_1b2e563d1_BraceLit*);
struct _1b2e563d1_BraceLit {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_Exprs;
	

	_1b2e563d1_BraceLit(void) = default;


};
struct _1b2e56ba6_KeyValPair {
	jule::Ptr<_1b2e50c9e_Expr> _field_Key;
	jule::Ptr<_1b2e50c9e_Expr> _field_Val;
	jule::Ptr<_1cb188a5c_Token> _field_Colon;
	

	_1b2e56ba6_KeyValPair(void) = default;

	inline bool operator==(_1b2e56ba6_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1b2e56ba6_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e576bd_IsEmpty(_1b2e5738d_SliceExpr*);
struct _1b2e5738d_SliceExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_Exprs;
	

	_1b2e5738d_SliceExpr(void) = default;


};
struct _1b2e57c0c_IndexingExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Ptr<_1b2e50c9e_Expr> _field_Index;
	

	_1b2e57c0c_IndexingExpr(void) = default;

	inline bool operator==(_1b2e57c0c_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b2e57c0c_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1b2e58317_SlicingExpr {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Ptr<_1b2e50c9e_Expr> _field_Start;
	jule::Ptr<_1b2e50c9e_Expr> _field_To;
	

	_1b2e58317_SlicingExpr(void) = default;

	inline bool operator==(_1b2e58317_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1b2e58317_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1b2e58603_Constraint {
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _field_Mask;
	

	_1b2e58603_Constraint(void) = default;


};
struct _1b2e58a76_GenericDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e58603_Constraint> _field_Constraint;
	

	_1b2e58a76_GenericDecl(void) = default;

	inline bool operator==(_1b2e58a76_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1b2e58a76_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1b2e58e2d_LabelSt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1b2e58e2d_LabelSt(void) = default;

	inline bool operator==(_1b2e58e2d_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e58e2d_LabelSt _other) { return !this->operator==(_other); }


};
struct _1b2e592d5_GotoSt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_Label;
	

	_1b2e592d5_GotoSt(void) = default;

	inline bool operator==(_1b2e592d5_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b2e592d5_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b2e595c1_FallSt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	

	_1b2e595c1_FallSt(void) = default;

	inline bool operator==(_1b2e595c1_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1b2e595c1_FallSt _other) { return !this->operator==(_other); }


};
struct _1b2e59bcb_AssignLeft {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e59bcb_AssignLeft(void) = default;

	inline bool operator==(_1b2e59bcb_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e59bcb_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1b2e5a21a_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1cb188a5c_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1b2e59bcb_AssignLeft>> _field_Left;
	jule::Ptr<_1b2e50c9e_Expr> _field_Right;
	

	_1b2e5a21a_AssignSt(void) = default;


};
struct _1b2e5b10b_Stmt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1b2e5b10b_Stmt(void) = default;

	inline bool operator==(_1b2e5b10b_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b2e5b10b_Stmt _other) { return !this->operator==(_other); }


};
struct _1b2e5b716_ScopeTree {
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1b2e5b10b_Stmt> _field_Stmts;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	

	_1b2e5b716_ScopeTree(void) = default;


};
inline jule::Bool _1b2e5c250_IsSelf(_1b2e5bddc_ParamDecl*);
inline jule::Bool _1b2e5c4b4_IsRef(_1b2e5bddc_ParamDecl*);
struct _1b2e5bddc_ParamDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1b2e5bddc_ParamDecl(void) = default;

	inline bool operator==(_1b2e5bddc_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e5bddc_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e5d55e_IsAnon(_1b2e5d20c_FnDecl*);
struct _1b2e5d20c_FnDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_Directives;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _field_Generics;
	jule::Ptr<_1b2e4e891_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>> _field_Params;
	

	_1b2e5d20c_FnDecl(void) = default;


};
struct _1b2e5e1db_VarDecl {
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_Directives;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e5e1db_VarDecl(void) = default;


};
struct _1b2e5e593_RetSt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e5e593_RetSt(void) = default;

	inline bool operator==(_1b2e5e593_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e5e593_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e60055_IsInf(_1b2e5ec03_Iter*);
struct _1b2e5ec03_Iter {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	

	_1b2e5ec03_Iter(void) = default;

	inline bool operator==(_1b2e5ec03_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e5ec03_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e6082a_IsWhileNext(_1b2e604c8_WhileKind*);
struct _1b2e604c8_WhileKind {
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1cb188a5c_Token> _field_NextToken;
	

	_1b2e604c8_WhileKind(void) = default;

	inline bool operator==(_1b2e604c8_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1b2e604c8_WhileKind _other) { return !this->operator==(_other); }


};
struct _1b2e60d69_RangeKind {
	jule::Ptr<_1cb188a5c_Token> _field_InToken;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Ptr<_1b2e5e1db_VarDecl> _field_KeyA;
	jule::Ptr<_1b2e5e1db_VarDecl> _field_KeyB;
	

	_1b2e60d69_RangeKind(void) = default;

	inline bool operator==(_1b2e60d69_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b2e60d69_RangeKind _other) { return !this->operator==(_other); }


};
struct _1b2e61221_BreakSt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_Label;
	

	_1b2e61221_BreakSt(void) = default;

	inline bool operator==(_1b2e61221_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b2e61221_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b2e615c8_ContSt {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_Label;
	

	_1b2e615c8_ContSt(void) = default;

	inline bool operator==(_1b2e615c8_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b2e615c8_ContSt _other) { return !this->operator==(_other); }


};
struct _1b2e61a4b_If {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	

	_1b2e61a4b_If(void) = default;

	inline bool operator==(_1b2e61a4b_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e61a4b_If _other) { return !this->operator==(_other); }


};
struct _1b2e61e03_Else {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	

	_1b2e61e03_Else(void) = default;

	inline bool operator==(_1b2e61e03_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e61e03_Else _other) { return !this->operator==(_other); }


};
struct _1b2e62376_Conditional {
	jule::Ptr<_1b2e61a4b_If> _field_Head;
	jule::Slice<jule::Ptr<_1b2e61a4b_If>> _field_Tail;
	jule::Ptr<_1b2e61e03_Else> _field_Default;
	

	_1b2e62376_Conditional(void) = default;


};
struct _1b2e62a4c_TypeAliasDecl {
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	

	_1b2e62a4c_TypeAliasDecl(void) = default;

	inline bool operator==(_1b2e62a4c_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2e62a4c_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1b2e62ec0_Case {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_Exprs;
	

	_1b2e62ec0_Case(void) = default;


};
struct _1b2e63696_MatchCase {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b2e62ec0_Case>> _field_Cases;
	jule::Ptr<_1b2e61e03_Else> _field_Default;
	

	_1b2e63696_MatchCase(void) = default;


};
struct _1b2e63e38_UseDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1b2e63e38_UseDecl(void) = default;


};
inline jule::Bool _1b2e6470d_AutoExpr(_1b2e643ab_EnumItemDecl*);
struct _1b2e643ab_EnumItemDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	

	_1b2e643ab_EnumItemDecl(void) = default;

	inline bool operator==(_1b2e643ab_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e643ab_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e65467_DefaultTyped(_1b2e64dd4_EnumDecl*);
struct _1b2e64dd4_EnumDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>> _field_Items;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	

	_1b2e64dd4_EnumDecl(void) = default;


};
struct _1b2e658da_TypeEnumItemDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	

	_1b2e658da_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1b2e658da_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2e658da_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b2e65ee5_TypeEnumDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	

	_1b2e65ee5_TypeEnumDecl(void) = default;


};
struct _1b2e661e3_FieldDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Kind;
	jule::Ptr<_1b2e50c9e_Expr> _field_Default;
	

	_1b2e661e3_FieldDecl(void) = default;

	inline bool operator==(_1b2e661e3_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b2e661e3_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1b2e66996_StructDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2e661e3_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _field_Generics;
	

	_1b2e66996_StructDecl(void) = default;


};
struct _1b2e670a1_TraitDecl {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>> _field_Methods;
	

	_1b2e670a1_TraitDecl(void) = default;


};
inline jule::Bool _1b2e67a1e_IsTraitImpl(_1b2e676ab_Impl*);
inline jule::Bool _1b2e67c83_IsStructImpl(_1b2e676ab_Impl*);
struct _1b2e676ab_Impl {
	jule::Ptr<_1cb188a5c_Token> _field_End;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Base;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>> _field_Statics;
	

	_1b2e676ab_Impl(void) = default;


};
inline jule::Ptr<_1b2e685d0_FieldIns> _1b2e24723_instance(jule::Ptr<_1b2e3becc_Field>);
struct _1b2e3becc_Field {
	jule::Ptr<_1b2e683e3_Struct> _field_Owner;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	jule::Ptr<_1b2e50c9e_Expr> _field_Default;
	

	_1b2e3becc_Field(void) = default;

	inline bool operator==(_1b2e3becc_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b2e3becc_Field _other) { return !this->operator==(_other); }


};
struct _1b2e44622_Operators {
	jule::Ptr<_1b2e71132_FnIns> _field_Eq;
	jule::Ptr<_1b2e71132_FnIns> _field_Gt;
	jule::Ptr<_1b2e71132_FnIns> _field_GtEq;
	jule::Ptr<_1b2e71132_FnIns> _field_Lt;
	jule::Ptr<_1b2e71132_FnIns> _field_LtEq;
	jule::Ptr<_1b2e71132_FnIns> _field_Shl;
	jule::Ptr<_1b2e71132_FnIns> _field_Shr;
	jule::Ptr<_1b2e71132_FnIns> _field_Add;
	jule::Ptr<_1b2e71132_FnIns> _field_Sub;
	jule::Ptr<_1b2e71132_FnIns> _field_Div;
	jule::Ptr<_1b2e71132_FnIns> _field_Mul;
	jule::Ptr<_1b2e71132_FnIns> _field_Mod;
	jule::Ptr<_1b2e71132_FnIns> _field_BitAnd;
	jule::Ptr<_1b2e71132_FnIns> _field_BitOr;
	jule::Ptr<_1b2e71132_FnIns> _field_BitXor;
	jule::Ptr<_1b2e71132_FnIns> _field_Neg;
	jule::Ptr<_1b2e71132_FnIns> _field_Pos;
	jule::Ptr<_1b2e71132_FnIns> _field_BitNot;
	jule::Ptr<_1b2e71132_FnIns> _field_AddAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_SubAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_DivAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_MulAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_ModAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_ShlAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_ShrAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_BitOrAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_BitAndAssign;
	jule::Ptr<_1b2e71132_FnIns> _field_BitXorAssign;
	

	_1b2e44622_Operators(void) = default;

	inline bool operator==(_1b2e44622_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1b2e44622_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b2e687bc_StructIns> _1b2e284e6_instance(jule::Ptr<_1b2e683e3_Struct>);
inline jule::Ptr<_1b2e687bc_StructIns> _1b2e29250_appendInstance(_1b2e683e3_Struct*, jule::Ptr<_1b2e687bc_StructIns>*);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2e2c3a7_FindMethod(_1b2e683e3_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2ed8034_Var> _1b2e2b807_FindStatic(_1b2e683e3_Struct*, jule::Str);
inline jule::Ptr<_1b2e3becc_Field> _1b2e2dbd3_FindField(_1b2e683e3_Struct*, jule::Str);
inline jule::Bool _1b2e2cece_IsImplements(_1b2e683e3_Struct*, jule::Ptr<_1b2e8033e_Trait>);
inline jule::Bool _1b2e31ea0_IsDerives(_1b2e683e3_Struct*, jule::Str);
inline jule::Bool _1b2e32665_IsUses(_1b2e683e3_Struct*, jule::Ptr<_1b2e683e3_Struct>);
inline jule::Bool _1b2e37b32_HasRefAccessible(_1b2e683e3_Struct*);
struct _1b2e683e3_Struct {
	jule::Ptr<_1b2eb48a1_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _field_Uses;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2e3becc_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1b2e8033e_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1b2e687bc_StructIns>> _field_Instances;
	

	_1b2e683e3_Struct(void) = default;


};
struct _1b2e685d0_FieldIns {
	jule::Ptr<_1b2e3becc_Field> _field_Decl;
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Ptr<_1b3030a93_Data> _field_Default;
	

	_1b2e685d0_FieldIns(void) = default;

	inline bool operator==(_1b2e685d0_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b2e685d0_FieldIns _other) { return !this->operator==(_other); }


};
struct _1b2e68cea_OperandExprModel {
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1b2e68cea_OperandExprModel(void) = default;

	inline bool operator==(_1b2e68cea_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1b2e68cea_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e68ed7_BinopExprModel {
	jule::Ptr<_1b2e68cea_OperandExprModel> _field_Left;
	jule::Ptr<_1b2e68cea_OperandExprModel> _field_Right;
	jule::Ptr<_1cb188a5c_Token> _field_Op;
	

	_1b2e68ed7_BinopExprModel(void) = default;

	inline bool operator==(_1b2e68ed7_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b2e68ed7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e691c4_UnaryExprModel {
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	jule::Ptr<_1cb188a5c_Token> _field_Op;
	

	_1b2e691c4_UnaryExprModel(void) = default;

	inline bool operator==(_1b2e691c4_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b2e691c4_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e693b1_StructArgExprModel {
	jule::Ptr<_1b2e685d0_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e693b1_StructArgExprModel(void) = default;

	inline bool operator==(_1b2e693b1_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e693b1_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6959d_StructLitExprModel {
	jule::Ptr<_1b2e687bc_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1b2e693b1_StructArgExprModel>> _field_Args;
	

	_1b2e6959d_StructLitExprModel(void) = default;


};
struct _1b2e6978a_AllocStructLitExprModel {
	jule::Ptr<_1b2e6959d_StructLitExprModel> _field_Lit;
	

	_1b2e6978a_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1b2e6978a_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1b2e6978a_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e69977_CastingExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Ptr<_1b305ba25_TypeKind> _field_ExprKind;
	

	_1b2e69977_CastingExprModel(void) = default;

	inline bool operator==(_1b2e69977_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1b2e69977_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e69b64_FnCallExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b2e71132_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1b2e8d050_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1b2e69b64_FnCallExprModel(void) = default;


};
struct _1b2e69d51_SliceExprModel {
	jule::Ptr<_1b305ba25_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1b2e69d51_SliceExprModel(void) = default;


};
struct _1b2e6a03d_IndexingExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	jule::Ptr<_1b3030a93_Data> _field_Index;
	

	_1b2e6a03d_IndexingExprModel(void) = default;

	inline bool operator==(_1b2e6a03d_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b2e6a03d_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6a22a_AnonFnExprModel {
	jule::Ptr<_1b2e71132_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1b2e6a22a_AnonFnExprModel(void) = default;

	inline bool operator==(_1b2e6a22a_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1b2e6a22a_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6a417_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1b2e6a417_KeyValPairExprModel(void) = default;

	inline bool operator==(_1b2e6a417_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b2e6a417_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6a604_MapExprModel {
	jule::Ptr<_1b305ba25_TypeKind> _field_KeyKind;
	jule::Ptr<_1b305ba25_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1b2e6a417_KeyValPairExprModel>> _field_Entries;
	

	_1b2e6a604_MapExprModel(void) = default;


};
struct _1b2e6a7e1_SlicingExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1b2e6a7e1_SlicingExprModel(void) = default;

	inline bool operator==(_1b2e6a7e1_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b2e6a7e1_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6a9cd_TraitSubIdentExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b2e6e85b_Fn> _field_Method;
	jule::Ptr<_1b2e8033e_Trait> _field_Trt;
	

	_1b2e6a9cd_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1b2e6a9cd_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1b2e6a9cd_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6adeb_StructSubIdentExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	jule::Ptr<_1b2e71132_FnIns> _field_Method;
	jule::Ptr<_1b2e685d0_FieldIns> _field_Field;
	jule::Ptr<_1b2e687bc_StructIns> _field_Owner;
	

	_1b2e6adeb_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1b2e6adeb_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1b2e6adeb_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6b0d8_StructStaticIdentExprModel {
	jule::Ptr<_1b2e687bc_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b2e71132_FnIns> _field_Method;
	

	_1b2e6b0d8_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1b2e6b0d8_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1b2e6b0d8_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6b2c5_ArrayExprModel {
	jule::Ptr<_1b3067b0d_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1b2e6b2c5_ArrayExprModel(void) = default;


};
struct _1b2e6b4b2_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1b2e6b4b2_CommonIdentExprModel(void) = default;

	inline bool operator==(_1b2e6b4b2_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e6b4b2_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6b69e_CommonSubIdentExprModel {
	jule::Ptr<_1b305ba25_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1b2e6b69e_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1b2e6b69e_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e6b69e_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6b88b_TupleExprModel {
	jule::Slice<jule::Ptr<_1b3030a93_Data>> _field_Datas;
	

	_1b2e6b88b_TupleExprModel(void) = default;


};
struct _1b2e6ba78_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1b2e6ba78_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1b2e6ba78_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b2e6ba78_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6bc65_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1b2e6bc65_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1b2e6bc65_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b2e6bc65_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6be52_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e6be52_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1b2e6be52_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6be52_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6c13e_BuiltinNewCallExprModel {
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1b2e6c13e_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1b2e6c13e_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1b2e6c13e_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6c32b_BuiltinPanicCallExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e6c32b_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1b2e6c32b_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6c32b_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6c518_BuiltinAssertCallExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1b2e6c518_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1b2e6c518_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1b2e6c518_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6c705_BuiltinMakeCallExprModel {
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1b2e6c705_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1b2e6c705_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1b2e6c705_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6c8e2_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1b2e6c8e2_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1b2e6c8e2_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1b2e6c8e2_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6cace_BuiltinLenCallExprModel {
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	

	_1b2e6cace_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1b2e6cace_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6cace_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6ccbb_BuiltinCapCallExprModel {
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	

	_1b2e6ccbb_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1b2e6ccbb_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6ccbb_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6abba_BuiltinDeleteCallExprModel {
	jule::Ptr<_1b3030a93_Data> _field_Dest;
	jule::Ptr<_1b3030a93_Data> _field_Key;
	

	_1b2e6abba_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1b2e6abba_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1b2e6abba_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6d42b_BuiltinCopyCallExprModel {
	jule::Ptr<_1b3030a93_Data> _field_Dest;
	jule::Ptr<_1b3030a93_Data> _field_Src;
	

	_1b2e6d42b_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1b2e6d42b_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1b2e6d42b_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6d618_BuiltinErrorCallExprModel {
	jule::Ptr<_1b2e71132_FnIns> _field_Func;
	jule::Ptr<_1b3030a93_Data> _field_Err;
	

	_1b2e6d618_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1b2e6d618_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1b2e6d618_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6d805_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e6d805_SizeofExprModel(void) = default;

	inline bool operator==(_1b2e6d805_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6d805_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6d9e2_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e6d9e2_AlignofExprModel(void) = default;

	inline bool operator==(_1b2e6d9e2_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6d9e2_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6dbce_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1b2e6dbce_RuneExprModel(void) = default;

	inline bool operator==(_1b2e6dbce_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1b2e6dbce_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6ddbb_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e6ddbb_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1b2e6ddbb_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6ddbb_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6e0a8_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1b2e6e0a8_BackendEmitExprModel(void) = default;


};
struct _1b2e6e295_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e6e295_FreeExprModel(void) = default;

	inline bool operator==(_1b2e6e295_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e6e295_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1b2e6e482_RetType {
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Idents;
	

	_1b2e6e482_RetType(void) = default;


};
inline jule::Ptr<_1b2e70263_ParamIns> _1b2e269cd_instance(jule::Ptr<_1b2e6e66e_Param>);
inline jule::Bool _1b2e2cc8c_IsSelf(_1b2e6e66e_Param*);
inline jule::Bool _1b2e2e60c_IsRef(_1b2e6e66e_Param*);
struct _1b2e6e66e_Param {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1b2e6e66e_Param(void) = default;

	inline bool operator==(_1b2e6e66e_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e6e66e_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e1e102_IsVoid(_1b2e6e85b_Fn*);
inline jule::Bool _1b2e3d75e_IsMethod(_1b2e6e85b_Fn*);
inline jule::Bool _1b2e34a41_IsEntryPoint(_1b2e6e85b_Fn*);
inline jule::Bool _1b2e1bb38_IsInit(_1b2e6e85b_Fn*);
inline jule::Bool _1b2e23c72_IsAnon(_1b2e6e85b_Fn*);
inline jule::Bool _1b2e41531_AnyVar(_1b2e6e85b_Fn*);
inline jule::Ptr<_1b2e71132_FnIns> _1b2e362d4_instanceForce(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Ptr<_1b2e71132_FnIns> _1b2e6ead1_instance(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Ptr<_1b2e71132_FnIns> _1b2e6edab_appendInstance(_1b2e6e85b_Fn*, jule::Ptr<_1b2e71132_FnIns>*);
struct _1b2e6e85b_Fn {
	jule::Ptr<_1b2eb48a1_Sema> _field_sema;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_Directives;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _field_Generics;
	jule::Ptr<_1b2e6e482_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1b2e6e66e_Param>> _field_Params;
	jule::Ptr<_1b2e683e3_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1b2e71132_FnIns>> _field_Instances;
	

	_1b2e6e85b_Fn(void) = default;


};
inline jule::Str _1b2e7063c_Str(_1b2e70263_ParamIns*);
struct _1b2e70263_ParamIns {
	jule::Ptr<_1b2e6e66e_Param> _field_Decl;
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	

	_1b2e70263_ParamIns(void) = default;

	inline bool operator==(_1b2e70263_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2e70263_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1b2e71462_Str(_1b2e71132_FnIns*);
inline jule::Bool _1b2e71770_Equal(jule::Ptr<_1b2e71132_FnIns>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b2e71bd2_EqualFn(jule::Ptr<_1b2e71132_FnIns>, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Bool _1b2e71ee0_equalTrait(jule::Ptr<_1b2e71132_FnIns>, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _1b2e72254_Types(_1b2e71132_FnIns*);
inline jule::Bool _1b2e724b8_IsBuiltin(_1b2e71132_FnIns*);
inline jule::Bool _1b2e7272c_IsAnon(_1b2e71132_FnIns*);
inline jule::Bool _1b2e72a3a_Same(_1b2e71132_FnIns*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Str _1b2e72d48_GetKindStr(_1b2e71132_FnIns*, jule::Bool);
struct _1b2e71132_FnIns {
	jule::Ptr<_1b2e687bc_StructIns> _field_Owner;
	jule::Ptr<_1b2e6e85b_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1b305a2e8_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b2e70263_ParamIns>> _field_Params;
	jule::Ptr<_1b305ba25_TypeKind> _field_Result;
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	jule::Ptr<_1b2e7408b_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1b2e71132_FnIns(void) = default;


};
inline jule::Ptr<_1b2e7408b_ReferenceStack> static__1b2e742de_new(void);
inline jule::I32 _1b2e74674_Len(_1b2e7408b_ReferenceStack*);
inline jule::Any _1b2e74982_At(_1b2e7408b_ReferenceStack*, jule::I32);
inline void _1b2e74c07_Push(_1b2e7408b_ReferenceStack*, jule::Any);
inline jule::Bool _1b68e7e4b_Exist(_1b2e7408b_ReferenceStack*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Bool _1b690bba7_Exist(_1b2e7408b_ReferenceStack*, jule::Ptr<_1b2ed8034_Var>);
inline jule::Bool _1b699c4d9_Exist(_1b2e7408b_ReferenceStack*, jule::Ptr<_1b2e687bc_StructIns>);
inline jule::Bool _1b567a394_Exist(_1b2e7408b_ReferenceStack*, jule::Ptr<_1b2e8033e_Trait>);
struct _1b2e7408b_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1b2e7408b_ReferenceStack(void) = default;


};
struct _1b2e753bc_Pass {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Text;
	

	_1b2e753bc_Pass(void) = default;

	inline bool operator==(_1b2e753bc_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1b2e753bc_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b2e79866_symbolBuilder> _1b2e79d1c_getRoot(jule::Ptr<_1b2e79866_symbolBuilder>);
inline void _1b2e7a1d5_pushErr(_1b2e79866_symbolBuilder*, jule::Ptr<_1cb188a5c_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1b2e7a59d_pushErrText(_1b2e79866_symbolBuilder*, jule::Ptr<_1cb188a5c_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1b2e7a8bc_pushSuggestion(_1b2e79866_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b2e7ac74_checkCppUseDeclPath(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2e63e38_UseDecl>*, jule::Str);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b04e_buildCppHeaderImport(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b35c_buildStdImport(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b66a_buildIdentImport(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b978_buildImport(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Bool _1b2e7bc86_checkDuplicateUseDecl(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2eab755_ImportInfo>*);
inline void _1b2e7c0a5_implImportSelections(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2eab755_ImportInfo>*, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Str _1b2e7c3b3_getAsLinkPath(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Str);
inline void _1b2e7c77b_pushCycleError(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2e79866_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1b2e7cb44_pushCrossCycleError(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2e79866_symbolBuilder>*, jule::Ptr<_1b2eab755_ImportInfo>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b2e7ceeb_checkImportCycles(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2eab755_ImportInfo>, jule::Ptr<_1b2e63e38_UseDecl>*);
inline void _1b2e7d3d6_checkPackageAccessibility(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2e63e38_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1b2e7d79e_importPackage(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2eab755_ImportInfo>*, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7daac_importUseDecl(jule::Ptr<_1b2e79866_symbolBuilder>, jule::Ptr<_1b2e63e38_UseDecl>*);
inline void _1b2e7dc88_importUseDecls(jule::Ptr<_1b2e79866_symbolBuilder>);
inline void _1b2e7e00d_appendNode(_1b2e79866_symbolBuilder*, _1b2e180da_Node*);
inline void _1b2e7e1d9_appendNodes(_1b2e79866_symbolBuilder*);
inline void _1b2e7e45e_pushDirectivePass(_1b2e79866_symbolBuilder*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2e7e63a_appendTopDirectives(_1b2e79866_symbolBuilder*);
inline void _1b2e7e816_build(jule::Ptr<_1b2e79866_symbolBuilder>);
struct _1b2e79866_symbolBuilder {
	jule::Ptr<_1b2e79866_symbolBuilder> _field_owner;
	jule::Trait<_1b2ea8ad7_Importer> _field_importer;
	jule::Slice<_1cac0bec6_Log> _field_errors;
	jule::Ptr<_1b2e172e8_Ast> _field_ast;
	jule::Ptr<_1b302ac69_SymbolTable> _field_table;
	

	_1b2e79866_symbolBuilder(void) = default;


};
inline jule::Str _1b2e8073a_Str(_1b2e8033e_Trait*);
inline jule::Bool _1b2e80a48_Equal(jule::Ptr<_1b2e8033e_Trait>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b2e80dab_IsBuiltin(_1b2e8033e_Trait*);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2e811b9_FindMethod(_1b2e8033e_Trait*, jule::Str);
struct _1b2e8033e_Trait {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _field_Implemented;
	

	_1b2e8033e_Trait(void) = default;


};
inline jule::Bool _1b2e81d79_AutoExpr(_1b2e8198e_EnumItem*);
struct _1b2e8198e_EnumItem {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b3031b1b_Value> _field_Value;
	

	_1b2e8198e_EnumItem(void) = default;

	inline bool operator==(_1b2e8198e_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b2e8198e_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1b2e827e7_Str(_1b2e82484_Enum*);
inline jule::Bool _1b2e82b05_Equal(jule::Ptr<_1b2e82484_Enum>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Ptr<_1b2e8198e_EnumItem> _1b2e83045_FindItem(_1b2e82484_Enum*, jule::Str);
struct _1b2e82484_Enum {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>> _field_Items;
	

	_1b2e82484_Enum(void) = default;


};
struct _1b2e834b8_TypeEnumItem {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	

	_1b2e834b8_TypeEnumItem(void) = default;

	inline bool operator==(_1b2e834b8_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2e834b8_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1b2e83dae_Str(_1b2e83a7e_TypeEnum*);
inline jule::Bool _1b2e841bc_Equal(jule::Ptr<_1b2e83a7e_TypeEnum>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Ptr<_1b2e834b8_TypeEnumItem> _1b2e845b8_FindItem(_1b2e83a7e_TypeEnum*, jule::Str);
struct _1b2e83a7e_TypeEnum {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>> _field_Items;
	

	_1b2e83a7e_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1b2eb48a1_Sema>*,jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*)> _1b2e864dd_readyFn(jule::Ptr<_1b2e860ae_constraintChecker>);
inline jule::Bool _1b2e86752_readyFi(jule::Ptr<_1b2e860ae_constraintChecker>);
inline jule::Bool _1b2e869b6_readySi(jule::Ptr<_1b2e860ae_constraintChecker>);
inline jule::Bool _1b2e86c2a_ready(jule::Ptr<_1b2e860ae_constraintChecker>);
inline jule::Bool _1b2e86e8e_check(jule::Ptr<_1b2e860ae_constraintChecker>);
struct _1b2e860ae_constraintChecker {
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1b305a2e8_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _field_genericsA;
	jule::Ptr<_1b2e71132_FnIns> _field_fi;
	jule::Ptr<_1b2e687bc_StructIns> _field_si;
	jule::Ptr<_1cb188a5c_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1b2e860ae_constraintChecker(void) = default;


};
inline jule::Bool _1b2e883e1_IsTraitImpl(_1b2e87ee5_Impl*);
inline jule::Bool _1b2e88655_IsStructImpl(_1b2e87ee5_Impl*);
struct _1b2e87ee5_Impl {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Base;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_Statics;
	

	_1b2e87ee5_Impl(void) = default;


};
struct _1b2e8d050_Scope {
	jule::Ptr<_1b2e8d050_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1b2e8d050_Scope(void) = default;


};
struct _1b2e8d44b_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	

	_1b2e8d44b_If(void) = default;

	inline bool operator==(_1b2e8d44b_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e8d44b_If _other) { return !this->operator==(_other); }


};
struct _1b2e8d737_Else {
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	

	_1b2e8d737_Else(void) = default;

	inline bool operator==(_1b2e8d737_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e8d737_Else _other) { return !this->operator==(_other); }


};
struct _1b2e8daab_Conditional {
	jule::Slice<jule::Ptr<_1b2e8d44b_If>> _field_Elifs;
	jule::Ptr<_1b2e8d737_Else> _field_Default;
	

	_1b2e8daab_Conditional(void) = default;


};
struct _1b2e8dd97_InfIter {
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	

	_1b2e8dd97_InfIter(void) = default;

	inline bool operator==(_1b2e8dd97_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e8dd97_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2e8e6b1_IsWhileNext(_1b2e8e31a_WhileIter*);
struct _1b2e8e31a_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	

	_1b2e8e31a_WhileIter(void) = default;

	inline bool operator==(_1b2e8e31a_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b2e8e31a_WhileIter _other) { return !this->operator==(_other); }


};
struct _1b2e8ec00_RangeIter {
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	jule::Ptr<_1b2ed8034_Var> _field_KeyA;
	jule::Ptr<_1b2ed8034_Var> _field_KeyB;
	

	_1b2e8ec00_RangeIter(void) = default;

	inline bool operator==(_1b2e8ec00_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b2e8ec00_RangeIter _other) { return !this->operator==(_other); }


};
struct _1b2e900eb_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1b2e900eb_ContSt(void) = default;

	inline bool operator==(_1b2e900eb_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1b2e900eb_ContSt _other) { return !this->operator==(_other); }


};
struct _1b2e904a3_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1b2e904a3_BreakSt(void) = default;

	inline bool operator==(_1b2e904a3_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1b2e904a3_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b2e9078e_Label {
	jule::Str _field_Ident;
	

	_1b2e9078e_Label(void) = default;

	inline bool operator==(_1b2e9078e_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e9078e_Label _other) { return !this->operator==(_other); }


};
struct _1b2e90a7a_GotoSt {
	jule::Str _field_Ident;
	

	_1b2e90a7a_GotoSt(void) = default;

	inline bool operator==(_1b2e90a7a_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b2e90a7a_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b2e90e32_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1b2e90e32_Postfix(void) = default;

	inline bool operator==(_1b2e90e32_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b2e90e32_Postfix _other) { return !this->operator==(_other); }


};
struct _1b2e913a5_Assign {
	jule::Ptr<_1b2e68cea_OperandExprModel> _field_L;
	jule::Ptr<_1b2e68cea_OperandExprModel> _field_R;
	jule::Ptr<_1cb188a5c_Token> _field_Op;
	

	_1b2e913a5_Assign(void) = default;

	inline bool operator==(_1b2e913a5_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b2e913a5_Assign _other) { return !this->operator==(_other); }


};
struct _1b2e9175c_MultiAssign {
	jule::Slice<jule::Ptr<_1b3030a93_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1b2e9175c_MultiAssign(void) = default;


};
inline jule::Bool _1b2e922a7_IsGenericTypeMatch(_1b2e91c9b_Match*);
struct _1b2e91c9b_Match {
	jule::Ptr<_1b3030a93_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1b2e927e6_Case>> _field_Cases;
	jule::Ptr<_1b2e927e6_Case> _field_Default;
	

	_1b2e91c9b_Match(void) = default;


};
inline jule::Bool _1b2e92ab0_isDefault(_1b2e927e6_Case*);
struct _1b2e927e6_Case {
	jule::Ptr<_1b2e91c9b_Match> _field_Owner;
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1b3030a93_Data>> _field_Exprs;
	jule::Ptr<_1b2e927e6_Case> _field_Next;
	

	_1b2e927e6_Case(void) = default;


};
struct _1b2e92d9b_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1b2e92d9b_FallSt(void) = default;

	inline bool operator==(_1b2e92d9b_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1b2e92d9b_FallSt _other) { return !this->operator==(_other); }


};
struct _1b2e93220_RetSt {
	jule::Ptr<_1b2e71132_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2e93220_RetSt(void) = default;

	inline bool operator==(_1b2e93220_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2e93220_RetSt _other) { return !this->operator==(_other); }


};
struct _1b2e9382a_scopeLabel {
	jule::Ptr<_1cb188a5c_Token> _field_token;
	jule::Ptr<_1b2e9078e_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1b2e94ab2_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1b2e9382a_scopeLabel(void) = default;

	inline bool operator==(_1b2e9382a_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1b2e9382a_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1b2e93c9d_scopeGoto {
	jule::Ptr<_1b2e592d5_GotoSt> _field_gt;
	jule::Ptr<_1b2e94ab2_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	_1b2e93c9d_scopeGoto(void) = default;

	inline bool operator==(_1b2e93c9d_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1b2e93c9d_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e95046_FindPackage(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e95354_SelectPackage(_1b2e94ab2_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>);
inline jule::Ptr<_1b2ed8034_Var> _1b2e9570b_FindVar(_1b2e94ab2_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b2e95ab3_FindTypeAlias(_1b2e94ab2_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e683e3_Struct> _1b2e95e6a_FindStruct(_1b2e94ab2_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2e96322_FindFn(_1b2e94ab2_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e8033e_Trait> _1b2e96630_FindTrait(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Ptr<_1b2e82484_Enum> _1b2e9693d_FindEnum(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2e96c4b_FindTypeEnum(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Bool _1b2e9707b_isUnsafe(jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Bool _1b2e972e0_isRoot(_1b2e94ab2_scopeChecker*);
inline void _1b2e974bb_stop(_1b2e94ab2_scopeChecker*);
inline jule::Bool _1b2e97730_stopped(_1b2e94ab2_scopeChecker*);
inline jule::Bool _1b2e97994_isDeferred(jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e97c08_getRoot(jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e97e6c_getHardRoot(jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Ptr<_1b2e9078e_Label> _1b2e9827a_findLabel(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Ptr<_1b2e9382a_scopeLabel> _1b2e98588_findLabelScope(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Str);
inline jule::Ptr<_1b2e9382a_scopeLabel> _1b2e98896_findLabelAll(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Bool _1b2e98c4d_isDuplicatedIdent(_1b2e94ab2_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1b2e98ec3_checkVarDecl(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5e1db_VarDecl>);
inline void _1b2e99248_checkTypeAliasDecl(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e62a4c_TypeAliasDecl>);
inline jule::Ptr<_1b2e8d050_Scope> _1b2e994ac_getChild(_1b2e94ab2_scopeChecker*);
inline void _1b2e99875_checkChildSsc(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5b716_ScopeTree>*, jule::Ptr<_1b2e8d050_Scope>*, jule::Ptr<_1b2e94ab2_scopeChecker>*);
inline jule::Ptr<_1b2e8d050_Scope> _1b2e99c2c_checkChildSc(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5b716_ScopeTree>*, jule::Ptr<_1b2e94ab2_scopeChecker>*);
inline jule::Ptr<_1b2e8d050_Scope> _1b2e9a03a_checkChild(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5b716_ScopeTree>*);
inline void _1b2e9a2b0_checkAnonScope(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5b716_ScopeTree>);
inline void _1b2e9a5ce_processErrorCall(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel>*, jule::Ptr<_1cb188a5c_Token>);
inline void _1b2e9a854_checkExpr(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e50c9e_Expr>);
inline jule::Ptr<_1b2e8d44b_If> _1b2e9ab62_checkIf(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e61a4b_If>);
inline jule::Ptr<_1b2e8d737_Else> _1b2e9ae70_checkElse(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e61e03_Else>);
inline void _1b2e9b1e5_checkConditional(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e62376_Conditional>);
inline void _1b2e9b657_checkIterScopeSsc(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Uintptr, jule::Ptr<_1b2e5b716_ScopeTree>, jule::Ptr<_1b2e8d050_Scope>*, jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Ptr<_1b2e8d050_Scope> _1b2e9baa8_checkIterScopeSc(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Uintptr, jule::Ptr<_1b2e5b716_ScopeTree>, jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Ptr<_1b2e8d050_Scope> _1b2e9be60_checkIterScope(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Uintptr, jule::Ptr<_1b2e5b716_ScopeTree>*);
inline void _1b2e9c1d5_checkInfIter(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5ec03_Iter>*);
inline void _1b2e9c45a_checkWhileIter(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5ec03_Iter>*);
inline void _1b2e9c6d0_checkRangeIter(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5ec03_Iter>*);
inline void _1b2e9c955_checkIter(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5ec03_Iter>);
inline jule::Bool _1b2e9cc63_checkValidContLabel(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Uintptr);
inline jule::Bool _1b2e9d071_checkValidBreakLabel(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1b2e900eb_ContSt> _1b2e9d37e_checkContValidScope(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e615c8_ContSt>);
inline void _1b2e9d604_checkCont(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e615c8_ContSt>);
inline void _1b2e9d879_checkLabel(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e58e2d_LabelSt>);
inline void _1b2e9daee_pushGoto(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e592d5_GotoSt>);
inline void _1b2e9dd74_checkPostfix(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5a21a_AssignSt>);
inline jule::Bool _1b2e9e182_isNewAssignIdent(_1b2e94ab2_scopeChecker*, jule::Str);
inline jule::Bool _1b2e9e5d3_checkStructureAssignOp(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1b2e5a21a_AssignSt>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b2e9e858_checkSingleAssign(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5a21a_AssignSt>*);
inline void _1b2e9ed86_processEndPartOfMultiAssign(_1b2e94ab2_scopeChecker*, jule::Ptr<_1b2e9175c_MultiAssign>*, jule::Ptr<_1b2e5a21a_AssignSt>*, jule::Ptr<_1b2e59bcb_AssignLeft>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b2ea011c_checkMultiAssign(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5a21a_AssignSt>*);
inline void _1b2ea0392_checkAssignSt(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5a21a_AssignSt>);
inline jule::Ptr<_1b2e8d050_Scope> _1b2ea0749_checkCaseScope(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e927e6_Case>*, jule::Ptr<_1b2e5b716_ScopeTree>*);
inline jule::Ptr<_1b2e927e6_Case> _1b2ea0c44_checkCase(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e91c9b_Match>, jule::I32, jule::Ptr<_1b2e62ec0_Case>, jule::Ptr<_1b3030a93_Data>);
inline void _1b2ea110c_checkCases(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e63696_MatchCase>*, jule::Ptr<_1b2e91c9b_Match>, jule::Ptr<_1b3030a93_Data>);
inline jule::Ptr<_1b2e927e6_Case> _1b2ea14b4_checkDefault(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e91c9b_Match>, jule::Ptr<_1b2e61e03_Else>);
inline void _1b2ea1739_checkComptimePanic(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e8d050_Scope>*);
inline void _1b2ea1a58_pushTypeMatch(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e91c9b_Match>, jule::Ptr<_1b2e63696_MatchCase>*);
inline void _1b2ea1ccd_checkTypeMatch(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e63696_MatchCase>*);
inline void _1b2ea2053_checkCommonMatch(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e63696_MatchCase>*);
inline void _1b2ea22c8_checkMatch(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e63696_MatchCase>);
inline void _1b2ea254d_checkFall(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e595c1_FallSt>);
inline jule::Ptr<_1b2e904a3_BreakSt> _1b2ea285b_checkBreakWithLabel(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e61221_BreakSt>);
inline jule::Ptr<_1b2e904a3_BreakSt> _1b2ea2b69_checkPlainBreak(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e61221_BreakSt>);
inline void _1b2ea2dde_checkBreak(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e61221_BreakSt>);
inline void _1b2ea3164_checkRet(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5e593_RetSt>);
inline void _1b2ea33d9_checkUseExpr(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e51640_UseExpr>);
inline void _1b2ea365e_checkNode(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Any*);
inline void _1b2ea383a_checkResult(jule::Ptr<_1b2e94ab2_scopeChecker>);
inline void _1b2ea3a16_checkTree(jule::Ptr<_1b2e94ab2_scopeChecker>);
inline void _1b2ea3d35_checkGoto(_1b2e94ab2_scopeChecker*, jule::Ptr<_1b2e93c9d_scopeGoto>*, jule::Ptr<_1b2e9382a_scopeLabel>*);
inline void _1b2ea4011_checkGotos(_1b2e94ab2_scopeChecker*);
inline void _1b2ea41dc_checkLabels(_1b2e94ab2_scopeChecker*);
inline void _1b2ea43b8_checkVars(_1b2e94ab2_scopeChecker*);
inline void _1b2ea4594_checkAliases(_1b2e94ab2_scopeChecker*);
inline void _1b2ea48b3_check(jule::Ptr<_1b2e94ab2_scopeChecker>, jule::Ptr<_1b2e5b716_ScopeTree>*, jule::Ptr<_1b2e8d050_Scope>*);
inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2ea4b27_newChildChecker(jule::Ptr<_1b2e94ab2_scopeChecker>);
struct _1b2e94ab2_scopeChecker {
	jule::Ptr<_1cb188a5c_Token> _field_calledFrom;
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Ptr<_1b2e71132_FnIns> _field_owner;
	jule::Ptr<_1b2e94ab2_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1b302ac69_SymbolTable> _field_table;
	jule::Ptr<_1b2e8d050_Scope> _field_scope;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_tree;
	jule::Ptr<_1b2e71132_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2e9382a_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2e93c9d_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	_1b2e94ab2_scopeChecker(void) = default;

	inline bool operator==(_1b2e94ab2_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b2e94ab2_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1b2ea5b17_checkCdef(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea5d8c_checkTypedef(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea6112_checkDerive(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea6387_checkNamespace(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea660c_checkDeprecated(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea6882_checkTest(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea6b07_checkDirective(_1b2ea56c7_directiveChecker*, jule::Ptr<_1b2e184d6_Directive>*);
inline void _1b2ea6cd3_check(_1b2ea56c7_directiveChecker*);
struct _1b2ea56c7_directiveChecker {
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2e184d6_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1b2ea56c7_directiveChecker(void) = default;

	inline bool operator==(_1b2ea56c7_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1b2ea56c7_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eabc72_FindPackage(_1b2eab755_ImportInfo*, jule::Str);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eac080_SelectPackage(_1b2eab755_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>);
inline jule::Ptr<_1b2ed8034_Var> _1b2eac437_FindVar(_1b2eab755_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b2eac7de_FindTypeAlias(_1b2eab755_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e683e3_Struct> _1b2eacb96_FindStruct(_1b2eab755_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2ead04d_FindFn(_1b2eab755_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e8033e_Trait> _1b2ead35b_FindTrait(_1b2eab755_ImportInfo*, jule::Str);
inline jule::Ptr<_1b2e82484_Enum> _1b2ead669_FindEnum(_1b2eab755_ImportInfo*, jule::Str);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2ead977_FindTypeEnum(_1b2eab755_ImportInfo*, jule::Str);
inline jule::Bool _1b2eadd1d_isLookupable(_1b2eab755_ImportInfo*, jule::Str);
inline jule::Bool _1b2eae12b_existIdent(_1b2eab755_ImportInfo*, jule::Str);
inline jule::Bool _1b2eae3b2_isAccessibleViaSelection(_1b2eab755_ImportInfo*);
struct _1b2eab755_ImportInfo {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_Selected;
	jule::Ptr<_1b2eae6ae_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	

	_1b2eab755_ImportInfo(void) = default;


};
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eaeb87_FindPackage(_1b2eae6ae_Package*, jule::Str);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eaee95_SelectPackage(_1b2eae6ae_Package*, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>);
inline jule::Ptr<_1b2ed8034_Var> _1b2eb034c_FindVar(_1b2eae6ae_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b2eb0704_FindTypeAlias(_1b2eae6ae_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e683e3_Struct> _1b2eb0aab_FindStruct(_1b2eae6ae_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2eb0e63_FindFn(_1b2eae6ae_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e8033e_Trait> _1b2eb1271_FindTrait(_1b2eae6ae_Package*, jule::Str);
inline jule::Ptr<_1b2e82484_Enum> _1b2eb157e_FindEnum(_1b2eae6ae_Package*, jule::Str);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2eb188c_FindTypeEnum(_1b2eae6ae_Package*, jule::Str);
struct _1b2eae6ae_Package {
	jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>> _field_Files;
	

	_1b2eae6ae_Package(void) = default;


};
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eb4dbd_FindPackage(_1b2eb48a1_Sema*, jule::Str);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eb51cb_SelectPackage(_1b2eb48a1_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>);
inline jule::Ptr<_1b2ed8034_Var> _1b2eb5583_FindVar(_1b2eb48a1_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b2eb593a_FindTypeAlias(_1b2eb48a1_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e683e3_Struct> _1b2eb5ce2_FindStruct(_1b2eb48a1_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2eb6199_FindFn(_1b2eb48a1_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e8033e_Trait> _1b2eb64a7_FindTrait(_1b2eb48a1_Sema*, jule::Str);
inline jule::Ptr<_1b2e82484_Enum> _1b2eb67b5_FindEnum(_1b2eb48a1_Sema*, jule::Str);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2eb6ac3_FindTypeEnum(_1b2eb48a1_Sema*, jule::Str);
inline jule::Bool _1b2eb6e25_isFlag(_1b2eb48a1_Sema*, jule::I32);
inline void _1b2eb719a_setCurrentFile(_1b2eb48a1_Sema*, jule::Ptr<_1b302ac69_SymbolTable>);
inline void _1b2eb7563_pushErr(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b2eb7882_pushSugggestion(_1b2eb48a1_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b2eb7c39_isAccessibleDefine(_1b2eb48a1_Sema*, jule::Bool, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b2eb818a_isDuplicatedIdent(_1b2eb48a1_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1b2eb84a9_checkDirectives(jule::Ptr<_1b2eb48a1_Sema>, jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Any);
inline jule::Bool _1b2eb890a_checkGenericQuantity(_1b2eb48a1_Sema*, jule::I32, jule::I32, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b2eb8cd4_isDuplicatedImportSelection(_1b2eb48a1_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1b2eb919c_getImportDef(_1b2eb48a1_Sema*, jule::Str, jule::Ptr<_1b2eab755_ImportInfo>*);
inline jule::Bool _1b5126d85_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2ed8034_Var>*);
inline jule::Bool _1b512ae66_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b305ad32_TypeAlias>*);
inline jule::Bool _1b512ec39_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Bool _1b5134018_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e8033e_Trait>*);
inline jule::Bool _1b5137cdb_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e82484_Enum>*);
inline jule::Bool _1b513bbd0_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e83a7e_TypeEnum>*);
inline jule::Bool _1b5140ac4_checkImportSelection(_1b2eb48a1_Sema*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::Bool _1b2eb9884_checkImportSelectedSelections(_1b2eb48a1_Sema*, jule::Ptr<_1b2eab755_ImportInfo>*);
inline jule::Bool _1b5144dd6_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2ed8034_Var>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b5148439_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b5148a11_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e683e3_Struct>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b514dd57_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b514e440_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e8033e_Trait>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b5152102_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e82484_Enum>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b5154cb4_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e83a7e_TypeEnum>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b2eba0b0_checkImportAllSelections(_1b2eb48a1_Sema*, jule::Ptr<_1b2eab755_ImportInfo>*);
inline jule::Bool _1b2eba3ce_checkImportSelections(_1b2eb48a1_Sema*, jule::Ptr<_1b2eab755_ImportInfo>*);
inline jule::Bool _1b2eba6dc_isUseAliasDuplication(_1b2eb48a1_Sema*, jule::Ptr<_1b2eab755_ImportInfo>*);
inline jule::Bool _1b2eba9ea_checkImport(_1b2eb48a1_Sema*, jule::Ptr<_1b2eab755_ImportInfo>*);
inline void _1b2ebabc6_checkImports(_1b2eb48a1_Sema*);
inline void _1b2ebada2_implFileImpls(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ebb07d_implImpls(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ebb259_checkEnums(jule::Ptr<_1b2eb48a1_Sema>);
inline _1b306a391_typeChecker _1b2ebb6aa_typeChecker(jule::Ptr<_1b2eb48a1_Sema>, jule::Trait<_1b3077997_Lookup>, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>, jule::Ptr<_1b30694b1_referencer>);
inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebbba5_buildTypeWithRefers(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e4b77d_TypeDecl>*, jule::Trait<_1b3077997_Lookup>, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>, jule::Ptr<_1b30694b1_referencer>);
inline jule::Bool _1b2ebc1a0_checkTypeWithRefers(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b3060e03_TypeSymbol>*, jule::Trait<_1b3077997_Lookup>, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>, jule::Ptr<_1b30694b1_referencer>);
inline jule::Ptr<_1b2e860ae_constraintChecker> _1b2ebc414_constraintChecker(jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Bool _1b2ebc7bb_checkType(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b3060e03_TypeSymbol>*, jule::Trait<_1b3077997_Lookup>);
inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebcc1c_buildTypeWithGenerics(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e4b77d_TypeDecl>*, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>, jule::Ptr<_1b2e7408b_ReferenceStack>);
inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebd02a_buildType(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e4b77d_TypeDecl>*);
inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebd338_selectType(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e4b77d_TypeDecl>*);
inline jule::Ptr<_1b3032611_Eval> _1b2ebd789_evalpd(jule::Ptr<_1b2eb48a1_Sema>, jule::Trait<_1b3077997_Lookup>, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b2ed8034_Var>);
inline jule::Ptr<_1b3032611_Eval> _1b2ebdb41_evalp(jule::Ptr<_1b2eb48a1_Sema>, jule::Trait<_1b3077997_Lookup>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Ptr<_1b3032611_Eval> _1b2ebde4e_eval(jule::Ptr<_1b2eb48a1_Sema>, jule::Trait<_1b3077997_Lookup>);
inline jule::Bool _1b2ebe449_checkAssignType(jule::Ptr<_1b2eb48a1_Sema>, jule::Bool, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b2ebe89a_checkTypeCompatibility(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebed1d_buildNonGenericTypeKind(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e4b77d_TypeDecl>*, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>*, jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>*);
inline jule::Bool _1b2ec0208_buildFnNonGenericTypeKinds(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e71132_FnIns>*, jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>*);
inline jule::Ptr<_1b2e71132_FnIns> _1b2ec0527_getTraitCheckFnKind(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::Bool _1b2ec0978_checkConstraintsFn(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Bool _1b2ec0dc9_checkConstraintsStruct(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e687bc_StructIns>);
inline jule::Bool _1b2ec1281_fnEnvironment(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e71132_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1b2eb48a1_Sema>*,jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*)>);
inline void _1b2ec1506_checkFnParamKind(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e70263_ParamIns>*);
inline jule::Bool _1b2ec1814_reloadFnInsTypes(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Bool _1b2ec1c87_checkRefValidityForInitExpr(jule::Ptr<_1b2eb48a1_Sema>, jule::Bool, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b2ec71bb_checkValidityForInitExpr(jule::Ptr<_1b2eb48a1_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b2ec7584_checkTypeAliasDeclKind(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b305ad32_TypeAlias>*, jule::Trait<_1b3077997_Lookup>);
inline void _1b2ec78a3_checkTypeAliasDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b305ad32_TypeAlias>*, jule::Trait<_1b3077997_Lookup>);
inline void _1b2ec7b28_checkTypeAliasDeclDup(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b305ad32_TypeAlias>*);
inline jule::Bool _1b2ec7d8c_checkTypeAliasDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b6638ce1_checkEnumItemsDup(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>>);
inline void _1b66440d7_checkEnumItemsDup(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>>);
inline void _1b2ec8387_checkEnumItemsStr(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e82484_Enum>*);
inline void _1b661e14a_checkEnumItemInt(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e82484_Enum>*, jule::Ptr<_1b3061772_Prim>*, jule::Ptr<_1b2e8198e_EnumItem>*, jule::U64*);
inline void _1b662c0ae_checkEnumItemInt(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e82484_Enum>*, jule::Ptr<_1b3061772_Prim>*, jule::Ptr<_1b2e8198e_EnumItem>*, jule::I64*);
inline void _1b661a6da_checkEnumItemsInt1(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b3061772_Prim>*, jule::Ptr<_1b2e82484_Enum>*);
inline void _1b6626493_checkEnumItemsInt1(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b3061772_Prim>*, jule::Ptr<_1b2e82484_Enum>*);
inline void _1b2ec8e37_checkEnumItemsInt(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e82484_Enum>*);
inline void _1b2ec91ac_checkEnumDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e82484_Enum>*);
inline void _1b2ec9432_checkTypeEnumDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e83a7e_TypeEnum>*);
inline jule::Bool _1b2ec9696_checkEnumDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Bool _1b2ec990a_checkTypeEnumDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Bool _1b2ec9c18_checkDeclGenerics(_1b2eb48a1_Sema*, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>*);
inline jule::Bool _1b2eca026_checkFnDeclParamsDup(_1b2eb48a1_Sema*, jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::Bool _1b2eca334_checkFnDeclResultDup(_1b2eb48a1_Sema*, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b2eca5a9_checkFnDeclPrototype(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b2eca82e_checkTraitDeclMethod(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b2ecaaa4_checkTraitDeclMethods(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e8033e_Trait>*);
inline void _1b2ecad29_checkTraitDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e8033e_Trait>*);
inline jule::Bool _1b2ecb08d_checkTraitDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Bool _1b2ecb445_checkTraitImplMethods(_1b2eb48a1_Sema*, jule::Ptr<_1b2e8033e_Trait>*, jule::Ptr<_1b2e87ee5_Impl>*);
inline jule::Bool _1b2ecb7ec_implToStruct(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*, jule::Ptr<_1b2e87ee5_Impl>*);
inline void _1b2ecba72_implTrait(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e87ee5_Impl>*);
inline void _1b2ecbce7_implStruct(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e87ee5_Impl>*);
inline void _1b2ecc06c_implImpl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e87ee5_Impl>*);
inline void _1b2ecc38b_checkVarDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2ed8034_Var>*, jule::Trait<_1b3077997_Lookup>);
inline void _1b2ecc611_checkGlobalVarDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2ed8034_Var>*);
inline jule::Bool _1b2ecc875_checkGlobalDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Bool _1b2eccc2c_checkStructTraitImpl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*, jule::Ptr<_1b2e8033e_Trait>*);
inline jule::Bool _1b2ecd03a_checkStructImpls(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Bool _1b2ecd348_checkStructFields(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b2ecd5bd_checkStructDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Bool _1b2ecd832_checkStructDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ecdaa7_checkFnDecl(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::Bool _1b2ecdd1b_checkFnDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ece1d4_pushCycleError(_1b2eb48a1_Sema*, jule::Ptr<_1b2e683e3_Struct>*, jule::Ptr<_1b2e683e3_Struct>*, jule::Str*);
inline jule::Bool _1b2ece635_checkCrossCycle(_1b2eb48a1_Sema*, jule::Ptr<_1b2e683e3_Struct>*, jule::Ptr<_1b2e683e3_Struct>*, jule::Str*);
inline jule::Bool _1b2eceaa8_checkStructDeriveIllegalCycles(_1b2eb48a1_Sema*, jule::Str, jule::Ptr<_1b2e683e3_Struct>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b2ecede9_checkStructInsDeriveClone(_1b2eb48a1_Sema*, jule::Ptr<_1b2e687bc_StructIns>);
inline void _1b2ed00d6_checkPackageDecls(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed0427_checkDataForTypeInference(_1b2eb48a1_Sema*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline void _1b2ed06ad_checkVar(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2ed8034_Var>*);
inline void _1b2ed09cc_checkTypeVar(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2ed8034_Var>*, jule::Trait<_1b3077997_Lookup>);
inline void _1b2ed0ba8_checkGlobalTypes(jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Ptr<_1b2e71132_FnIns> _1b2ed1060_readyToCheckFn(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b2ed137e_checkTypeMethod(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::Ptr<_1b2e71132_FnIns> _1b2ed17d0_checkStructInsOp(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1b2e6e85b_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1b2e6e85b_Fn>)>);
inline jule::Bool _1b2ed1b87_checkStructEnv(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b2ed203e_precheckStructIns(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1cb188a5c_Token>);
inline void _1b2ed22b4_checkStructIns(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b2ed2539_checkTypeStruct(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b2ed2715_checkStructTypes(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed29ac_checkStructInsOperators(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e687bc_StructIns>);
inline void _1b2ed2c43_precheckStructType(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b2ed2e1e_precheckStructTypes(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed3194_checkRets(_1b2eb48a1_Sema*, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b2ed34b3_checkFnInsSc(_1b2eb48a1_Sema*, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1b2e94ab2_scopeChecker>*);
inline void _1b2ed37d2_checkFnInsCaller(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1cb188a5c_Token>);
inline void _1b2ed3a57_checkFnIns(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b2ed3ccc_checkTypeFn(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b2ed4052_checkTestFn(_1b2eb48a1_Sema*, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b2ed42c7_precheckTypeFn(jule::Ptr<_1b2eb48a1_Sema>, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b2ed44a3_precheckFnTypes(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed467e_checkFnTypes(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed485a_checkPackageTypes(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed4a36_setFileSemaFields(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed4c12_setSemaFields(jule::Ptr<_1b2eb48a1_Sema>);
inline void _1b2ed4e87_check(jule::Ptr<_1b2eb48a1_Sema>, jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*);
struct _1b2eb48a1_Sema {
	jule::Slice<_1cac0bec6_Log> _field_errors;
	jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>> _field_files;
	jule::Ptr<_1b302ac69_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	

	_1b2eb48a1_Sema(void) = default;


};
inline _1b2ed533e_missingRetChecker static__1b2ed5707_new(void);
inline jule::Bool _1b2ed59d2_checkConditional(_1b2ed533e_missingRetChecker*, jule::Ptr<_1b2e8daab_Conditional>);
inline jule::Bool _1b2ed5ce0_checkMatch(_1b2ed533e_missingRetChecker*, jule::Ptr<_1b2e91c9b_Match>);
inline jule::Bool _1b2ed60ed_checkInfIter(_1b2ed533e_missingRetChecker*, jule::Ptr<_1b2e8dd97_InfIter>);
inline jule::Bool _1b2ed640b_checkScope(_1b2ed533e_missingRetChecker*, jule::Ptr<_1b2e8d050_Scope>);
inline jule::Bool _1b2ed6719_check(_1b2ed533e_missingRetChecker*, jule::Ptr<_1b2e8d050_Scope>);
struct _1b2ed533e_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1b2ed533e_missingRetChecker(void) = default;


};
struct _1b2ed6ede_IterRelation {
	jule::Ptr<_1b2ed8034_Var> _field_Range;
	

	_1b2ed6ede_IterRelation(void) = default;

	inline bool operator==(_1b2ed6ede_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1b2ed6ede_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2ed83ec_IsInitialized(_1b2ed8034_Var*);
inline jule::Bool _1b2ed8661_IsTypeInferred(_1b2ed8034_Var*);
inline jule::Bool _1b2ed88c5_untypedConstant(_1b2ed8034_Var*);
struct _1b2ed8034_Var {
	jule::Ptr<_1b2e8d050_Scope> _field_Scope;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	jule::Ptr<_1b3031b1b_Value> _field_Value;
	jule::Ptr<_1b2e7408b_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_Directives;
	jule::Ptr<_1b2ed6ede_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_Depends;
	

	_1b2ed8034_Var(void) = default;


};
inline jule::Bool static__1b2ed9453_Dispose(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ed96ea_Str(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ed9a3b_logical(jule::Ptr<_1b2e6e85b_Fn>*, jule::Str);
inline jule::Bool static__1b2ed9cd3_Eq(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2eda07a_Gt(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2eda322_GtEq(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2eda5b9_Lt(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2eda861_LtEq(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edaba2_result(jule::Ptr<_1b2e6e85b_Fn>*, jule::Str);
inline jule::Bool static__1b2edae49_Shl(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edb1e1_Shr(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edb488_Add(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edb730_Sub(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edb9c7_Div(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edbc6e_Mul(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edc016_Mod(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edc2ad_BitAnd(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edc555_BitOr(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edc7ec_BitXor(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edcb3d_unary(jule::Ptr<_1b2e6e85b_Fn>*, jule::Str);
inline jule::Bool static__1b2edcdd5_Neg(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edd17c_Pos(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edd424_BitNot(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edd765_assign(jule::Ptr<_1b2e6e85b_Fn>*, jule::Str);
inline jule::Bool static__1b2edda0c_AddAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2eddca4_SubAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ede04b_DivAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ede2e3_MulAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ede58a_ModAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ede832_ShlAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2edeac9_ShrAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2eded71_BitOrAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ee0118_BitAndAssign(jule::Ptr<_1b2e6e85b_Fn>);
inline jule::Bool static__1b2ee03b0_BitXorAssign(jule::Ptr<_1b2e6e85b_Fn>);
struct _1b2ed8cd2_FuncPattern {
	

	_1b2ed8cd2_FuncPattern(void) = default;


};
inline void _1b3019d79_pushErr(_1b301985c_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b301a0dd_checkTrait(_1b301985c_typeCompatibilityChecker*);
inline jule::Bool _1b301a352_checkPtr(_1b301985c_typeCompatibilityChecker*);
inline jule::Bool _1b301a5b6_checkPrim(_1b301985c_typeCompatibilityChecker*);
inline jule::Bool _1b301a96d_typeEnum(_1b301985c_typeCompatibilityChecker*, jule::Ptr<_1b2e83a7e_TypeEnum>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b301abd2_checkTypeEnum(_1b301985c_typeCompatibilityChecker*);
inline jule::Bool _1b301ae46_check(_1b301985c_typeCompatibilityChecker*);
struct _1b301985c_typeCompatibilityChecker {
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Ptr<_1b305ba25_TypeKind> _field_dest;
	jule::Ptr<_1b305ba25_TypeKind> _field_src;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	

	_1b301985c_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1b301985c_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b301985c_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1b301b8e7_pushErr(_1b301b485_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b301bb5b_checkValidity(_1b301b485_assignTypeChecker*);
inline jule::Bool _1b301bdc0_checkConst(_1b301b485_assignTypeChecker*);
inline jule::Bool _1b301c134_isPrim(_1b301b485_assignTypeChecker*);
inline jule::Bool _1b301c398_checkCompatibility(_1b301b485_assignTypeChecker*);
inline jule::Bool _1b301c60c_check(_1b301b485_assignTypeChecker*);
struct _1b301b485_assignTypeChecker {
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Ptr<_1b305ba25_TypeKind> _field_dest;
	jule::Ptr<_1b3030a93_Data> _field_d;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	

	_1b301b485_assignTypeChecker(void) = default;

	inline bool operator==(_1b301b485_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b301b485_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b67b04ea_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b67aebe2_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b67b1e69_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b67b7436_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b301d850_annotateConstraintMap(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b301db5d_annotateConstraintTup(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b301de6b_annotateConstraintFn(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b301e29b_annotateConstraintIdent(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b301e5ba_annotateConstraint(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b301e8d9_pushGeneric(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*, jule::I32);
inline jule::Bool _1b301ebe7_annotatePrim(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3020005_annotateArr(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3020313_annotateSlc(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b30206ba_checkMapKey(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b30209c8_annotateMap(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3020cd6_annotateFn(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b30210e4_annotatePtr(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3021402_annotateSptr(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3021710_annotateStruct(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3021a1d_annotateAny(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3021d2b_annotateKind(_1b301ce6a_dynamicTypeAnnotation*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3022090_annotate(_1b301ce6a_dynamicTypeAnnotation*);
struct _1b301ce6a_dynamicTypeAnnotation {
	jule::Ptr<_1b3032611_Eval> _field_e;
	jule::Ptr<_1b2e71132_FnIns> _field_f;
	jule::Ptr<_1b2e70263_ParamIns> _field_p;
	jule::Ptr<_1b3030a93_Data> _field_a;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	jule::Ptr<_1b305ba25_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _field_ignored;
	

	_1b301ce6a_dynamicTypeAnnotation(void) = default;


};
inline void _1b3022d82_pushErrToken(_1b3022832_fnCallArgChecker*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b30231a1_pushErr(_1b3022832_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1b2e70263_ParamIns>> _1b3023415_getParams(_1b3022832_fnCallArgChecker*);
inline jule::Bool _1b3023723_checkCounts(_1b3022832_fnCallArgChecker*, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>*);
inline jule::Bool _1b3023b74_checkArg(_1b3022832_fnCallArgChecker*, jule::Ptr<_1b2e70263_ParamIns>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Bool _1b302402b_push(_1b3022832_fnCallArgChecker*, jule::Ptr<_1b2e70263_ParamIns>*, jule::Ptr<_1b2e50c9e_Expr>);
inline jule::Bool _1b30243d3_pushVariadic(_1b3022832_fnCallArgChecker*, jule::Ptr<_1b2e70263_ParamIns>*, jule::I32);
inline jule::Bool _1b30246e1_checkArgs(_1b3022832_fnCallArgChecker*, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>*);
inline jule::Bool _1b3024977_checkDynamicTypeAnnotation(_1b3022832_fnCallArgChecker*);
inline jule::Bool _1b3024bec_check(_1b3022832_fnCallArgChecker*);
struct _1b3022832_fnCallArgChecker {
	jule::Ptr<_1b3032611_Eval> _field_e;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_args;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	jule::Ptr<_1b2e71132_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _field_ignored;
	

	_1b3022832_fnCallArgChecker(void) = default;


};
inline void _1b3025747_pushErr(_1b302523b_structLitChecker*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b3025a66_pushSugggestion(_1b302523b_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1b3025e2e_pushMatch(_1b302523b_structLitChecker*, jule::Ptr<_1b2e685d0_FieldIns>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline void _1b302624d_checkPair(_1b302523b_structLitChecker*, jule::Ptr<_1b2e55710_FieldExprPair>*, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>*);
inline jule::Bool _1b302655b_readyExprs(_1b302523b_structLitChecker*, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>*);
inline void _1b30267d1_check(_1b302523b_structLitChecker*, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>*);
struct _1b302523b_structLitChecker {
	jule::Ptr<_1b3032611_Eval> _field_e;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	jule::Ptr<_1b2e687bc_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1b2e693b1_StructArgExprModel>> _field_args;
	

	_1b302523b_structLitChecker(void) = default;


};
inline jule::Ptr<_1b2ed8034_Var> _1b30272b5_buildVar(_1b3026d20_rangeChecker*, jule::Ptr<_1b2e5e1db_VarDecl>*);
inline void _1b3027491_setSizeKey(_1b3026d20_rangeChecker*);
inline void _1b3027859_checkRangeExprValidity(_1b3026d20_rangeChecker*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2ed8034_Var>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b3027a35_checkSlice(_1b3026d20_rangeChecker*);
inline void _1b3027c11_checkArray(_1b3026d20_rangeChecker*);
inline void _1b3027ddc_checkMapKeyA(_1b3026d20_rangeChecker*);
inline void _1b30280b8_checkMapKeyB(_1b3026d20_rangeChecker*);
inline void _1b3028294_checkMap(_1b3026d20_rangeChecker*);
inline void _1b3028470_checkStr(_1b3026d20_rangeChecker*);
inline jule::Bool _1b30286d4_check(_1b3026d20_rangeChecker*);
struct _1b3026d20_rangeChecker {
	jule::Ptr<_1b2e94ab2_scopeChecker> _field_sc;
	jule::Ptr<_1b2e60d69_RangeKind> _field_rang;
	jule::Ptr<_1b2e8ec00_RangeIter> _field_Kind;
	jule::Ptr<_1b3030a93_Data> _field_d;
	

	_1b3026d20_rangeChecker(void) = default;

	inline bool operator==(_1b3026d20_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1b3026d20_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1b3029350_prepareTypes(_1b3028daa_retTypeChecker*);
inline void _1b30295c5_prepareExprs(_1b3028daa_retTypeChecker*, jule::Ptr<_1b2e50c9e_Expr>*);
inline void _1b30297a1_checkExprs(_1b3028daa_retTypeChecker*);
inline jule::Bool _1b3029aae_check(_1b3028daa_retTypeChecker*, jule::Ptr<_1b2e50c9e_Expr>*);
struct _1b3028daa_retTypeChecker {
	jule::Ptr<_1b2e94ab2_scopeChecker> _field_sc;
	jule::Ptr<_1b2e71132_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _field_exprs;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1b3028daa_retTypeChecker(void) = default;


};
inline jule::Ptr<_1b2eab755_ImportInfo> _1b302b286_FindPackage(_1b302ac69_SymbolTable*, jule::Str);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b302b594_SelectPackage(_1b302ac69_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>);
inline jule::Ptr<_1b2ed8034_Var> _1b302b94b_FindVar(_1b302ac69_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b302bd03_FindTypeAlias(_1b302ac69_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e683e3_Struct> _1b302c1aa_FindStruct(_1b302ac69_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e6e85b_Fn> _1b302c562_FindFn(_1b302ac69_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e8033e_Trait> _1b302c870_FindTrait(_1b302ac69_SymbolTable*, jule::Str);
inline jule::Ptr<_1b2e82484_Enum> _1b302cb7d_FindEnum(_1b302ac69_SymbolTable*, jule::Str);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b302ce8b_FindTypeEnum(_1b302ac69_SymbolTable*, jule::Str);
inline jule::Ptr<_1b2ed8034_Var> _1b302d50d_findVar(_1b302ac69_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b302d95e_findTypeAlias(_1b302ac69_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1b302dd16_defByIdent(_1b302ac69_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1b302e267_isDuplicatedIdent(_1b302ac69_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1b302ac69_SymbolTable {
	jule::Ptr<_1cb18dde7_File> _field_File;
	jule::Slice<_1b2e753bc_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1b2e8033e_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1b2e82484_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1b2e83a7e_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1b2e87ee5_Impl>> _field_Impls;
	

	_1b302ac69_SymbolTable(void) = default;


};
inline jule::Bool _1b3030e7d_IsNil(_1b3030a93_Data*);
inline jule::Bool _1b30311e2_IsVoid(_1b3030a93_Data*);
inline jule::Bool _1b3031456_IsConst(_1b3030a93_Data*);
inline jule::Bool _1b3031764_GoodOperand(_1b3030a93_Data*, jule::Ptr<_1b3030a93_Data>*);
struct _1b3030a93_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1b18de5da_Const> _field_Constant;
	

	_1b3030a93_Data(void) = default;

	inline bool operator==(_1b3030a93_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1b3030a93_Data _other) { return !this->operator==(_other); }


};
struct _1b3031b1b_Value {
	jule::Ptr<_1b2e50c9e_Expr> _field_Expr;
	jule::Ptr<_1b3030a93_Data> _field_Data;
	

	_1b3031b1b_Value(void) = default;

	inline bool operator==(_1b3031b1b_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b3031b1b_Value _other) { return !this->operator==(_other); }


};
inline void _1b3032b1c_pushErr(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b3032e3b_pushSugggestion(_1b3032611_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1b3033117_allowBuiltin(_1b3032611_Eval*);
inline void _1b30332e3_disallowBuiltin(_1b3032611_Eval*);
inline jule::Bool _1b3033557_isUnsafe(_1b3032611_Eval*);
inline jule::Bool _1b30337bb_isGlobal(_1b3032611_Eval*);
inline jule::Bool _1b3033a96_applyNumericPrefix(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3033d0a_litNil(_1b3032611_Eval*);
inline jule::Ptr<_1b3030a93_Data> _1b3034118_litStr(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b3034426_litBool(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b3034734_litRune(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b3034a42_litFloat(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b3034d50_litInt(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b303515d_litNum(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b303546b_evalLit(_1b3032611_Eval*, jule::Ptr<_1b2e51cd3_LitExpr>);
inline jule::Any _1b3035779_findBuiltins(_1b3032611_Eval*, jule::Str);
inline jule::Any _1b3035b31_getDef(_1b3032611_Eval*, jule::Str, jule::Bool);
inline void _1b68e57d9_pushReference(_1b3032611_Eval*, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b69095cd_pushReference(_1b3032611_Eval*, jule::Ptr<_1b2ed8034_Var>*);
inline void _1b6999d22_pushReference(_1b3032611_Eval*, jule::Ptr<_1b2e687bc_StructIns>*);
inline jule::Ptr<_1b3030a93_Data> _1b30361b4__evalEnum(_1b3032611_Eval*, jule::Ptr<_1b2e82484_Enum>);
inline jule::Ptr<_1b3030a93_Data> _1b303656b_evalEnum(_1b3032611_Eval*, jule::Ptr<_1b2e82484_Enum>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3036879__evalTypeEnum(_1b3032611_Eval*, jule::Ptr<_1b2e83a7e_TypeEnum>);
inline jule::Ptr<_1b3030a93_Data> _1b3036c31_evalTypeEnum(_1b3032611_Eval*, jule::Ptr<_1b2e83a7e_TypeEnum>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b303703e__evalStruct(_1b3032611_Eval*, jule::Ptr<_1b2e687bc_StructIns>);
inline jule::Ptr<_1b3030a93_Data> _1b30373e6_evalStruct(_1b3032611_Eval*, jule::Ptr<_1b2e687bc_StructIns>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3037704_evalFnIns(_1b3032611_Eval*, jule::Ptr<_1b2e71132_FnIns>);
inline void _1b3037a23_checkDeprecated(_1b3032611_Eval*, jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3037dca_evalFn(_1b3032611_Eval*, jule::Ptr<_1b2e6e85b_Fn>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3038293_pushIllegalCycleError(_1b3032611_Eval*, jule::Ptr<_1b2ed8034_Var>*, jule::Ptr<_1b2ed8034_Var>*, jule::Str*);
inline jule::Bool _1b303864a_checkCrossCycle(_1b3032611_Eval*, jule::Ptr<_1b2ed8034_Var>*, jule::Str*);
inline jule::Bool _1b3038a02_checkIllegalCycles(_1b3032611_Eval*, jule::Ptr<_1b2ed8034_Var>*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3038da9_evalVar(_1b3032611_Eval*, jule::Ptr<_1b2ed8034_Var>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3039261_evalTypeAlias(_1b3032611_Eval*, jule::Ptr<_1b305ad32_TypeAlias>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3039618_evalDef(_1b3032611_Eval*, jule::Any, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3039926_evalIdent(_1b3032611_Eval*, jule::Ptr<_1b2e52960_IdentExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b3039c34_evalUnary(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e53169_UnaryExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b303a042_evalVariadic(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e53521_VariadicExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b303a350_evalUnsafe(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e524dc_UnsafeExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b303a65d_evalArr(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e5738d_SliceExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b303aaae_evalExpSlc(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e5738d_SliceExpr>, jule::Ptr<_1b305ba25_TypeKind>, jule::Any);
inline jule::Ptr<_1b3030a93_Data> _1b303adbc_evalSliceExpr(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e5738d_SliceExpr>);
inline void _1b303b20d_checkIntegerIndexingByData(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>);
inline void _1b303b5d7_indexingPtr(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline void _1b303b9a0_indexingArr(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline void _1b303bd68_indexingSlc(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline void _1b303c231_indexingMap(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline void _1b303c5e9_indexingStr(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline void _1b303c9b2_toIndexing(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline jule::Bool _1b303ce35_pushGenericsFromExprSubIdent(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54203_SubIdentExpr>*, jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>*, jule::Ptr<_1b2e50c9e_Expr>*);
inline jule::Bool _1b303d2ed_pushGenericsFromData(jule::Ptr<_1b3032611_Eval>, jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>*, jule::Ptr<_1b2e50c9e_Expr>*);
inline void _1b303d63e_evalIdentDeclFromIndexing(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline jule::Bool _1b303daa1_checkGenericFn(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1cb188a5c_Token>*, jule::Any*);
inline void _1b303dde2_evalFnGenericFromIndexing(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e57c0c_IndexingExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b303e211_evalIndexing(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e57c0c_IndexingExpr>);
inline __jule_tuple_x_1b3030a93_Data__jule_tuple_x_1b3030a93_Data _1b303e51e_evalSlicingExprs(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e58317_SlicingExpr>*);
inline void _1b303e794_slicingArr(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b303eb5c_slicingStr(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b30400be_checkSlicing(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e58317_SlicingExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b30403cc_evalSlicing(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e58317_SlicingExpr>);
inline void _1b3040795_castPtr(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3040b5d_castStruct(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3041026_castRef(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b30413de_castSlc(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b304170d_castStr(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3041ac6_castInt(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3041e8e_castNum(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3042357_castPrim(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3042676_castConstant(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3042a3e_castTypeEnum(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline void _1b3042e07_castTypeEnumT(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Ptr<_1b3030a93_Data> _1b3043358_evalCastByTypeNData(_1b3032611_Eval*, jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b30437a9_evalCastT(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b2e50c9e_Expr>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Ptr<_1b3030a93_Data> _1b3043ab7_evalCast(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e538c8_CastExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b3043dc5_evalNsSelection(_1b3032611_Eval*, jule::Ptr<_1b2e53c80_NsSelectionExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b3044326_evalStructLitExplicit(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e687bc_StructIns>, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3044634_evalStructLit(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e55e5d_StructLit>);
inline _1b306a391_typeChecker _1b3044898_typeChecker(_1b3032611_Eval*);
inline jule::Ptr<_1b3030a93_Data> _1b3044ba6_evalType(_1b3032611_Eval*, jule::Ptr<_1b2e4b77d_TypeDecl>);
inline void _1b3044ec5_callTypeFn(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b30452e4_callBuiltinFn(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3045635_checkFnOfConcurrentCall(_1b3032611_Eval*, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1cb188a5c_Token>);
inline void _1b3045a31_processExceptionalHandler(_1b3032611_Eval*, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3045d61_callFn(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b304616e_evalFnCall(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54c81_FnCallExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b3046526_evalEnumStatic(_1b3032611_Eval*, jule::Ptr<_1b2e82484_Enum>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b30468cd_evalTypeEnumStatic(_1b3032611_Eval*, jule::Ptr<_1b2e83a7e_TypeEnum>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3046c85_evalStructStatic(_1b3032611_Eval*, jule::Ptr<_1b2e687bc_StructIns>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b30471d6_evalTraitSubIdent(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1b2e8033e_Trait>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b30476d1_evalStructSubIdent(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1b2e687bc_StructIns>, jule::Ptr<_1b2e54203_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1b3030a93_Data> _1b3047a88_evalSliceSubIdent(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3047e40_evalArraySubIdent(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b304824d_evalIntTypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b304855b_evalUintTypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3048869_evalI8TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3048b77_evalI16TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3048e85_evalI32TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3049293_evalI64TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b30495a1_evalU8TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b30498ae_evalU16TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3049bbc_evalU32TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b3049eca_evalU64TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b304a2d8_evalF32TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b304a5e6_evalF64TypeStatic(_1b3032611_Eval*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b304a99d_evalPrimStatic(_1b3032611_Eval*, jule::Str, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b3030a93_Data> _1b304ad55_evalTypeStatic(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1b2e54203_SubIdentExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b304b20c_evalObjSubIdent(_1b3032611_Eval*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1b2e54203_SubIdentExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b304b51a_evalSubIdent(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54203_SubIdentExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b304b828_evalTuple(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e5192b_TupleExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b304bbd0_evalMap(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b3067019_Map>, jule::Ptr<_1b2e563d1_BraceLit>);
inline jule::Ptr<_1b3030a93_Data> _1b304bedd_evalBraceLit(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e563d1_BraceLit>);
inline jule::Ptr<_1b3030a93_Data> _1b304c2eb_evalAnonFn(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e5d20c_FnDecl>);
inline jule::Ptr<_1b3030a93_Data> _1b304c609_evalBinop(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e54676_BinopExpr>);
inline jule::Ptr<_1b3030a93_Data> _1b304c917_evalExprKind(jule::Ptr<_1b3032611_Eval>, jule::Any);
inline jule::Ptr<_1b3030a93_Data> _1b304cc25_eval(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e50c9e_Expr>);
inline jule::Ptr<_1b3030a93_Data> _1b304d033_evalExpr(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1b2e50c9e_Expr>);
struct _1b3032611_Eval {
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Trait<_1b3077997_Lookup> _field_lookup;
	jule::Ptr<_1b305ba25_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1b2ed8034_Var> _field_owner;
	jule::Ptr<_1b2e685d0_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1b3032611_Eval(void) = default;

	inline bool operator==(_1b3032611_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1b3032611_Eval _other) { return !this->operator==(_other); }


};
inline _1b304d4a6_unaryEval static__1b304d95c_new(jule::Ptr<_1b3032611_Eval>);
inline void _1b304db38_minus(_1b304d4a6_unaryEval*);
inline void _1b304dd14_plus(_1b304d4a6_unaryEval*);
inline void _1b304dee0_caret(_1b304d4a6_unaryEval*);
inline void _1b304e1bb_excl(_1b304d4a6_unaryEval*);
inline void _1b304e397_star(_1b304d4a6_unaryEval*);
inline void _1b304e573_amper(_1b304d4a6_unaryEval*);
inline void _1b304e74e_typeDecl(_1b304d4a6_unaryEval*);
inline void _1b304e92a_evalData(_1b304d4a6_unaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b304ec05_eval(_1b304d4a6_unaryEval*, jule::Ptr<_1b2e53169_UnaryExpr>);
struct _1b304d4a6_unaryEval {
	jule::Ptr<_1b3032611_Eval> _field_e;
	jule::Ptr<_1b3030a93_Data> _field_d;
	jule::Ptr<_1b2e53169_UnaryExpr> _field_u;
	

	_1b304d4a6_unaryEval(void) = default;

	inline bool operator==(_1b304d4a6_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1b304d4a6_unaryEval _other) { return !this->operator==(_other); }


};
inline _1b3050244_binaryEval static__1b305081b_newPlain(jule::Ptr<_1b3032611_Eval>);
inline _1b3050244_binaryEval static__1b3050b5c_new(jule::Ptr<_1b3032611_Eval>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b3050dc1_checkTypeCompatibility(_1b3050244_binaryEval*);
inline jule::Bool _1b3051168_checkStructCommonOperatorCompatibility(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3051410_evalNil(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3051674_evalEnum(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b30518d8_evalTypeEnum(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3051b4c_evalSptr(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3051db1_evalPtr(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3052125_evalArr(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3052389_evalSlc(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b30525ed_evalFn(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3052862_evalStruct(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3052ac6_evalTrait(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3052d3a_evalAny(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b305309e_evalBool(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3053313_evalStr(_1b3050244_binaryEval*);
inline void _1b30534de_setTypeToGreater(_1b3050244_binaryEval*);
inline void _1b3053731_checkModData(_1b3050244_binaryEval*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b305390c_mod(_1b3050244_binaryEval*);
inline jule::Bool _1b3053cb4_numbersAreCompatibile(_1b3050244_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1b3030a93_Data> _1b3054028_evalFloat(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b305428c_evalInt(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3054501_evalPrim(_1b3050244_binaryEval*);
inline void _1b30546cc_checkSpecialCases(_1b3050244_binaryEval*);
inline jule::Ptr<_1b3030a93_Data> _1b3054941_evalOp(_1b3050244_binaryEval*);
inline void _1b3054bb6_evalConst(_1b3050244_binaryEval*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3054e3b_checkData(_1b3050244_binaryEval*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3055117_checkDatas(_1b3050244_binaryEval*);
inline void _1b305538c_setModel(_1b3050244_binaryEval*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3055612_postEval(_1b3050244_binaryEval*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b30559b9_solveExplicit(_1b3050244_binaryEval*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3055cc7_eval(_1b3050244_binaryEval*, jule::Ptr<_1b2e54676_BinopExpr>*);
struct _1b3050244_binaryEval {
	jule::Ptr<_1b3032611_Eval> _field_e;
	jule::Ptr<_1b3030a93_Data> _field_l;
	jule::Ptr<_1b3030a93_Data> _field_r;
	jule::Ptr<_1cb188a5c_Token> _field_op;
	

	_1b3050244_binaryEval(void) = default;

	inline bool operator==(_1b3050244_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1b3050244_binaryEval _other) { return !this->operator==(_other); }


};
struct _1b305a2e8_InsGeneric {
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _field_Constraint;
	

	_1b305a2e8_InsGeneric(void) = default;


};
struct _1b305ad32_TypeAlias {
	jule::Ptr<_1b2e5b716_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b3060e03_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _field_Generics;
	

	_1b305ad32_TypeAlias(void) = default;


};
inline jule::Str _1b305be21_Str(_1b305ba25_TypeKind*);
inline jule::Bool _1b305c22e_Equal(jule::Ptr<_1b305ba25_TypeKind>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b305c6e6_CppLinked(_1b305ba25_TypeKind*);
inline jule::Bool _1b305c95a_IsNil(_1b305ba25_TypeKind*);
inline jule::Bool _1b305cbbe_Void(_1b305ba25_TypeKind*);
inline jule::Bool _1b305ce33_Comparable(_1b305ba25_TypeKind*);
inline jule::Bool _1b305d197_Mutable(_1b305ba25_TypeKind*);
inline jule::Bool _1b305d40b_NilCompatible(_1b305ba25_TypeKind*);
inline jule::Bool _1b305d670_PerformsRC(_1b305ba25_TypeKind*);
inline jule::Bool _1b305d8d4_SupportsCloning(_1b305ba25_TypeKind*);
inline jule::Bool _1b305db48_Variadicable(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b3061772_Prim> _1b305ddac_Prim(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b3065006_Sptr> _1b305e121_Sptr(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b306856a_Ptr> _1b305e385_Ptr(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b2e82484_Enum> _1b305e5e9_Enum(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b305e85d_TypeEnum(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b3067b0d_Arr> _1b305eac2_Arr(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b3065963_Slc> _1b305ed36_Slc(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b2e71132_FnIns> _1b306009a_Fn(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b2e687bc_StructIns> _1b306030e_Struct(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b2e8033e_Trait> _1b3060573_Trait(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b3067019_Map> _1b30607d7_Map(_1b305ba25_TypeKind*);
inline jule::Ptr<_1b30664e1_Tuple> _1b3060a4b_Tup(_1b305ba25_TypeKind*);
struct _1b305ba25_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1b305b5e6_Kind> _field_Kind;
	

	_1b305ba25_TypeKind(void) = default;

	inline bool operator==(_1b305ba25_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b305ba25_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b30612aa_checked(_1b3060e03_TypeSymbol*);
inline void _1b3061486_removeKind(_1b3060e03_TypeSymbol*);
struct _1b3060e03_TypeSymbol {
	jule::Ptr<_1b2e4b77d_TypeDecl> _field_Decl;
	jule::Ptr<_1b305ba25_TypeKind> _field_Kind;
	

	_1b3060e03_TypeSymbol(void) = default;

	inline bool operator==(_1b3060e03_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b3060e03_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1b3061ad5_Str(_1b3061772_Prim*);
inline jule::Bool _1b3061de3_Equal(jule::Ptr<_1b3061772_Prim>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b3062366_IsConstraint(_1b3061772_Prim*);
inline jule::Bool _1b30625ca_IsI8(_1b3061772_Prim*);
inline jule::Bool _1b306283e_IsI16(_1b3061772_Prim*);
inline jule::Bool _1b3062aa3_IsI32(_1b3061772_Prim*);
inline jule::Bool _1b3062d17_IsI64(_1b3061772_Prim*);
inline jule::Bool _1b306307b_IsU8(_1b3061772_Prim*);
inline jule::Bool _1b30632e0_IsU16(_1b3061772_Prim*);
inline jule::Bool _1b3063554_IsU32(_1b3061772_Prim*);
inline jule::Bool _1b30637b8_IsU64(_1b3061772_Prim*);
inline jule::Bool _1b3063a2c_IsF32(_1b3061772_Prim*);
inline jule::Bool _1b3063c91_IsF64(_1b3061772_Prim*);
inline jule::Bool _1b3064005_IsInt(_1b3061772_Prim*);
inline jule::Bool _1b3064269_IsUint(_1b3061772_Prim*);
inline jule::Bool _1b30644cd_IsUintptr(_1b3061772_Prim*);
inline jule::Bool _1b3064742_IsBool(_1b3061772_Prim*);
inline jule::Bool _1b30649a6_IsStr(_1b3061772_Prim*);
inline jule::Bool _1b3064c1a_IsAny(_1b3061772_Prim*);
struct _1b3061772_Prim {
	jule::Str _field_Kind;
	

	_1b3061772_Prim(void) = default;

	inline bool operator==(_1b3061772_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b3061772_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1b3065369_Str(_1b3065006_Sptr*);
inline jule::Bool _1b3065677_Equal(jule::Ptr<_1b3065006_Sptr>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b3065006_Sptr {
	jule::Ptr<_1b305ba25_TypeKind> _field_Elem;
	

	_1b3065006_Sptr(void) = default;

	inline bool operator==(_1b3065006_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b3065006_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1b3065e6e_Str(_1b3065963_Slc*);
inline jule::Bool _1b306627c_Equal(jule::Ptr<_1b3065963_Slc>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b3065963_Slc {
	jule::Ptr<_1b305ba25_TypeKind> _field_Elem;
	

	_1b3065963_Slc(void) = default;

	inline bool operator==(_1b3065963_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b3065963_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1b3066854_Str(_1b30664e1_Tuple*);
inline jule::Bool _1b3066b62_Equal(jule::Ptr<_1b30664e1_Tuple>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b30664e1_Tuple {
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _field_Types;
	

	_1b30664e1_Tuple(void) = default;


};
inline jule::Str _1b306737c_Str(_1b3067019_Map*);
inline jule::Bool _1b306768a_Equal(jule::Ptr<_1b3067019_Map>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b3067019_Map {
	jule::Ptr<_1b305ba25_TypeKind> _field_Key;
	jule::Ptr<_1b305ba25_TypeKind> _field_Val;
	

	_1b3067019_Map(void) = default;

	inline bool operator==(_1b3067019_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b3067019_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1b3067e71_Str(_1b3067b0d_Arr*);
inline jule::Bool _1b306827e_Equal(jule::Ptr<_1b3067b0d_Arr>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b3067b0d_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1b305ba25_TypeKind> _field_Elem;
	

	_1b3067b0d_Arr(void) = default;

	inline bool operator==(_1b3067b0d_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b3067b0d_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1b30688cd_Str(_1b306856a_Ptr*);
inline jule::Bool _1b3068bdb_Equal(jule::Ptr<_1b306856a_Ptr>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b306903d_IsUnsafe(_1b306856a_Ptr*);
struct _1b306856a_Ptr {
	jule::Ptr<_1b305ba25_TypeKind> _field_Elem;
	

	_1b306856a_Ptr(void) = default;

	inline bool operator==(_1b306856a_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b306856a_Ptr _other) { return !this->operator==(_other); }


};
struct _1b30694b1_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1b30694b1_referencer(void) = default;

	inline bool operator==(_1b30694b1_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1b30694b1_referencer _other) { return !this->operator==(_other); }


};
inline void _1b306aa9a_pushErr(_1b306a391_typeChecker*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b306ac76_allowBuiltin(_1b306a391_typeChecker*);
inline void _1b306ae52_disallowBuiltin(_1b306a391_typeChecker*);
inline jule::Ptr<_1b3061772_Prim> _1b306b260_buildPrim(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*);
inline void _1b56758ab_pushReference(_1b306a391_typeChecker*, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b5678738_pushReference(_1b306a391_typeChecker*, jule::Ptr<_1b2e8033e_Trait>*);
inline void _1b306b75a_pushReferenceByKind(_1b306a391_typeChecker*, jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b306bb23_pushCycleError(_1b306a391_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1b306beca_checkCrossCycle(_1b306a391_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1b306c382_checkIllegalCycles(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1b305b5e6_Kind> _1b306c739_fromTypeAlias(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Ptr<_1b305ad32_TypeAlias>*);
inline jule::Ptr<_1b2e82484_Enum> _1b306cae1_fromEnum(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Ptr<_1b2e82484_Enum>*);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b306ce98_fromTypeEnum(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Ptr<_1b2e83a7e_TypeEnum>*);
inline jule::Ptr<_1b2e8033e_Trait> _1b306d350_fromTrait(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Ptr<_1b2e8033e_Trait>*);
inline jule::Bool _1b306d707_checkStructIns(_1b306a391_typeChecker*, jule::Ptr<_1b2e687bc_StructIns>*, jule::Ptr<_1cb188a5c_Token>*);
inline void _1b306d99e_appendUsedStructReference(_1b306a391_typeChecker*, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Ptr<_1b2e687bc_StructIns> _1b306dd67_buildStructInstance(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Ptr<_1b2e687bc_StructIns> _1b306e21e_fromStruct(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Trait<_1b305b5e6_Kind> _1b306e52c_getDef(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>*);
inline jule::Trait<_1b305b5e6_Kind> _1b306e83a_buildIdent(_1b306a391_typeChecker*, jule::Ptr<_1b2e4bd44_IdentTypeDecl>);
inline jule::Trait<_1b305b5e6_Kind> _1b306eb48_buildSubIdent(_1b306a391_typeChecker*, jule::Ptr<_1b2e4c493_SubIdentTypeDecl>);
inline jule::Ptr<_1b3065006_Sptr> _1b306ee56_buildSptrFromType(_1b306a391_typeChecker*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Ptr<_1b3065006_Sptr> _1b3070264_buildSptr(_1b306a391_typeChecker*, jule::Ptr<_1b2e4cb36_SptrTypeDecl>);
inline jule::Ptr<_1b306856a_Ptr> _1b3070572_buildPtrFromType(_1b306a391_typeChecker*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Ptr<_1b306856a_Ptr> _1b3070880_buildPtr(_1b306a391_typeChecker*, jule::Ptr<_1b2e4d609_PtrTypeDecl>);
inline jule::Ptr<_1b3065963_Slc> _1b3070b8d_buildSlc(_1b306a391_typeChecker*, jule::Ptr<_1b2e4d032_SlcTypeDecl>);
inline jule::Ptr<_1b3067b0d_Arr> _1b3070e9b_buildArr(_1b306a391_typeChecker*, jule::Ptr<_1b2e4dc8b_ArrTypeDecl>);
inline jule::Ptr<_1b3067019_Map> _1b30712a9_buildMap(_1b306a391_typeChecker*, jule::Ptr<_1b2e4e4d9_MapTypeDecl>);
inline jule::Ptr<_1b30664e1_Tuple> _1b30715b7_buildTuple(_1b306a391_typeChecker*, jule::Ptr<_1b2e4d31d_TupleTypeDecl>);
inline jule::Bool _1b30718c5_checkFnTypes(_1b306a391_typeChecker*, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Ptr<_1b2e71132_FnIns> _1b3071bd3_buildFn(_1b306a391_typeChecker*, jule::Ptr<_1b2e5d20c_FnDecl>);
inline jule::Trait<_1b305b5e6_Kind> _1b3071ee1_buildByNamespace(_1b306a391_typeChecker*, jule::Ptr<_1b2e4c84a_NamespaceTypeDecl>);
inline jule::Ptr<_1b305ba25_TypeKind> _1b30722ee_build(_1b306a391_typeChecker*, jule::Any*);
inline jule::Ptr<_1b305ba25_TypeKind> _1b307260c_checkDecl(_1b306a391_typeChecker*, jule::Ptr<_1b2e4b77d_TypeDecl>*);
inline void _1b3072882_check(_1b306a391_typeChecker*, jule::Ptr<_1b3060e03_TypeSymbol>*);
struct _1b306a391_typeChecker {
	jule::Ptr<_1b2eb48a1_Sema> _field_s;
	jule::Trait<_1b3077997_Lookup> _field_rootLookup;
	jule::Trait<_1b3077997_Lookup> _field_lookup;
	jule::Ptr<_1b30694b1_referencer> _field_referencer;
	jule::Ptr<_1b2e7408b_ReferenceStack> _field_refers;
	jule::Ptr<_1cb188a5c_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1b305ad32_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1b306a391_typeChecker(void) = default;


};
inline jule::Bool static__1b3072ee2_prim(jule::Str*, jule::Ptr<_1b3061772_Prim>);
inline jule::Bool static__1b3073333_exist(jule::Str*, jule::Ptr<_1b305ba25_TypeKind>*);
struct _1b3072aa2_identTypeLookup {
	

	_1b3072aa2_identTypeLookup(void) = default;

	inline bool operator==(_1b3072aa2_identTypeLookup _other) { return true; }

	inline bool operator!=(_1b3072aa2_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1b38356c7_FileInfo {
	jule::Ptr<_1b2e172e8_Ast> _field_Ast;
	jule::Slice<_1cac0bec6_Log> _field_Errors;
	

	_1b38356c7_FileInfo(void) = default;


};
struct _1b3881756_stmt {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1b3881756_stmt(void) = default;


};
inline void _1b3882713_stop(_1b3882081_scopeParser*);
inline jule::Bool _1b3882977_stopped(_1b3882081_scopeParser*);
inline jule::Bool _1b3882bdb_finished(_1b3882081_scopeParser*);
inline jule::Bool _1b3882e50_isLastSt(_1b3882081_scopeParser*);
inline void _1b388326e_pushErr(_1b3882081_scopeParser*, jule::Ptr<_1cb188a5c_Token>, jule::Str);
inline void _1b388358d_pushSuggestion(_1b3882081_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1b3883813_insertAsNext(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b3881756_stmt> _1b3883a77_next(_1b3882081_scopeParser*);
inline jule::Ptr<_1b2e5b716_ScopeTree> _1b3883e2e_buildScope(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b2e5e1db_VarDecl> _1b388423c_buildVarSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e5e593_RetSt> _1b388454a_buildRetSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5ec03_Iter> _1b3884858_buildWhileNextIter(_1b3882081_scopeParser*, jule::Ptr<_1b3881756_stmt>*);
inline jule::Ptr<_1b2e604c8_WhileKind> _1b3884b66_buildWhileIterKind(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b3884e74_getRangeKindKeysTokens(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e5e1db_VarDecl> _1b3885282_buildRangeKindKey(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>> _1b3885590_buildRangeKindKeys(_1b3882081_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>*);
inline void _1b38858d1_setupRangeKindKeysPlain(_1b3882081_scopeParser*, jule::Ptr<_1b2e60d69_RangeKind>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b3885c33_setupRangeKindKeysExplicit(_1b3882081_scopeParser*, jule::Ptr<_1b2e60d69_RangeKind>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b3886063_setupRangeKindKeys(_1b3882081_scopeParser*, jule::Ptr<_1b2e60d69_RangeKind>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e60d69_RangeKind> _1b38864b4_buildRangeIterKind(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Any _1b388686b_buildCommonIterKind(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Ptr<_1b2e5ec03_Iter> _1b3886b79_buildCommonIter(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5ec03_Iter> _1b3886e87_buildIterSt(_1b3882081_scopeParser*, jule::Ptr<_1b3881756_stmt>*);
inline jule::Ptr<_1b2e61221_BreakSt> _1b3887295_buildBreakSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e615c8_ContSt> _1b38875a3_buildContSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e61a4b_If> _1b38878b1_buildIf(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e61e03_Else> _1b3887bbe_buildElse(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e62376_Conditional> _1b3887ecc_buildIfElseChain(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e50c9e_Expr> _1b38882da_buildCoCallSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e592d5_GotoSt> _1b38885e8_buildGotoSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e595c1_FallSt> _1b3888906_buildFallSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e62a4c_TypeAliasDecl> _1b3888c14_buildTypeAliasSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b3889176_pushCaseExpr(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Ptr<_1cb188a5c_Token>, jule::Bool, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>*);
inline jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _1b38895c7_buildCaseExprs(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>*, jule::Bool);
inline jule::Ptr<_1b2e5b716_ScopeTree> _1b38898d5_buildCaseScope(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline __jule_tuple_x_1b2e62ec0_Case__jule_tuple_bool _1b3889c8c_buildCase(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Bool);
inline __jule_tuple_sx_1b2e62ec0_Case__jule_tuple_x_1b2e61e03_Else _1b388a144_buildCases(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Bool);
inline jule::Ptr<_1b2e63696_MatchCase> _1b388a452_buildMatchCase(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5b716_ScopeTree> _1b388a760_buildScopeSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e58e2d_LabelSt> _1b388aa6d_buildLabelSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline __jule_tuple__1b2e5adca_StmtData__jule_tuple_bool _1b388ad7b_buildIdSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b3899d9b_assignInfo> _1b388b189_buildAssignInfo(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e59bcb_AssignLeft> _1b388b497_buildAssignL(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1b2e59bcb_AssignLeft>> _1b388b7a5_buildAssignLs(_1b3882081_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>*);
inline __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool _1b388bab3_buildPlainAssign(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool _1b388bdc1_buildDeclAssign(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool _1b388c1ce_buildAssignSt(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e51640_UseExpr> _1b388c4dc_buildUseExpr(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b388c7ea_buildSt(_1b3882081_scopeParser*, jule::Ptr<_1b3881756_stmt>*);
inline void _1b388cb19_build(_1b3882081_scopeParser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1b2e5b716_ScopeTree>*);
struct _1b3882081_scopeParser {
	jule::Ptr<_1b389d6c9_parser> _field_p;
	jule::Ptr<_1b2e5b716_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1b3881756_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	

	_1b3882081_scopeParser(void) = default;


};
inline void _1b388dd3a_pushErr(_1b388d565_exprBuilder*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b388e159_pushSuggestion(_1b388d565_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b2e5192b_TupleExpr> _1b388e467_buildTuple(_1b388d565_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>*);
inline jule::Ptr<_1b2e51cd3_LitExpr> _1b388e775_buildLit(_1b388d565_exprBuilder*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b388ea83_buildPrimitiveType(_1b388d565_exprBuilder*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Any _1b388ed91_buildSingle(_1b388d565_exprBuilder*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b2e52960_IdentExpr> _1b389019e_buildCppLinkedIdent(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e53169_UnaryExpr> _1b38904ac_buildUnary(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e54203_SubIdentExpr> _1b38907ba_buildObjSubIdent(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e53c80_NsSelectionExpr> _1b3890ac8_buildNsSubIdent(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b3890dd6_buildType(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b38911e4_buildSubIdent(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e53521_VariadicExpr> _1b3891502_buildVariadic(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Any _1b3891810_buildOpRight(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e5108a_RangeExpr> _1b3891b40_buildBetweenParentheses(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e538c8_CastExpr> _1b3891e5e_tryBuildCast(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b3892327_pushArg(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _1b3892635_buildArgs(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _1b3892943_buildCallGenerics(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e54c81_FnCallExpr> _1b3892d94_buildFnCall(_1b388d565_exprBuilder*, jule::Ptr<_1cb188a5c_Token>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b38931a2_buildParenthesesRange(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e524dc_UnsafeExpr> _1b38934b0_buildUnsafeExpr(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38937bd_buildAnonFn(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b3893acb_buildUnsafe(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b3893e94_pushRangeLitPart(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Ptr<_1cb188a5c_Token>, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b38942c4_getBraceRangeLitExprParts(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e55710_FieldExprPair> _1b38945e3_buildFieldExprPair(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e50c9e_Expr> _1b3894901_buildStructLitExpr(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _1b3894c0e_buildStructLitExprs(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e55e5d_StructLit> _1b389503e_buildTypedStructLiteral(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e50c9e_Expr> _1b389535d_buildBraceLitPart(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e563d1_BraceLit> _1b389566b_buildBraceLit(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b3895979_buildBraceRange(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b3895c87_getEnumerableParts(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5738d_SliceExpr> _1b3896095_buildSlice(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e57c0c_IndexingExpr> _1b38964e6_buildIndexing(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Ptr<_1b2e58317_SlicingExpr> _1b3896a8a_buildSlicing(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1cb188a5c_Token>);
inline jule::Any _1b3896d98_buildBracketRange(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Any _1b38971a6_buildData(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b389755d_buildBinop(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32);
inline jule::Any _1b389786b_build(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b3897b79_buildKind(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e50c9e_Expr> _1b3897e87_buildFromTokens(_1b388d565_exprBuilder*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
struct _1b388d565_exprBuilder {
	jule::Ptr<_1b389d6c9_parser> _field_p;
	

	_1b388d565_exprBuilder(void) = default;

	inline bool operator==(_1b388d565_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1b388d565_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1b3899d9b_assignInfo {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_l;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_r;
	jule::Ptr<_1cb188a5c_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1b3899d9b_assignInfo(void) = default;


};
inline void _1b389da09_stop(_1b389d6c9_parser*);
inline jule::Bool _1b389dc6d_stopped(_1b389d6c9_parser*);
inline void _1b389e136_pushErr(_1b389d6c9_parser*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b389e455_pushSuggestion(_1b389d6c9_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b2e50c9e_Expr> _1b389e763_buildExpr(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e184d6_Directive> _1b389ea71_buildDirective(_1b389d6c9_parser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b389ece6_pushDirective(_1b389d6c9_parser*, jule::Ptr<_1b2e184d6_Directive>);
inline jule::Ptr<_1b2e5b716_ScopeTree> _1b38a019d_buildScope(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>);
inline __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool _1b38a05ee__buildType(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool _1b38a0a50_buildType(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1b2e62a4c_TypeAliasDecl> _1b38a0d5d_buildTypeAliasDecl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38a117c_buildVarTypeAndExpr(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1b2e5e1db_VarDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38a149b_buildVarCommon(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1b2e5e1db_VarDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b38a1864_buildVarBegin(_1b389d6c9_parser*, jule::Ptr<_1b2e5e1db_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e5e1db_VarDecl> _1b38a1b72_buildVar(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e58a76_GenericDecl> _1b38a1e80_buildGeneric(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _1b38a2337_buildGenerics(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Ptr<_1cb188a5c_Token>*);
inline jule::Ptr<_1b2e5bddc_ParamDecl> _1b38a2645_buildSelfParam(_1b389d6c9_parser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b38a2a0d_paramTypeBegin(_1b389d6c9_parser*, jule::Ptr<_1b2e5bddc_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38a2d2c_buildParamType(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1b2e5bddc_ParamDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38a314b_buildParamBody(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1b2e5bddc_ParamDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5bddc_ParamDecl> _1b38a3459_buildParam(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b38a36ce_checkParams(_1b389d6c9_parser*, jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>> _1b38a3a86_buildParams(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Bool);
inline __jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool _1b38a3e3d_buildMultiRetType(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32*);
inline __jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool _1b38a42e5_buildRetType(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32*);
inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38a4746_buildFnPrototype(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38a4b97_buildFn(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1cb188a5c_Token>> _1b38a4ea5_getUseDeclSelectors(_1b389d6c9_parser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b38a52c4_buildCppUseDecl(_1b389d6c9_parser*, jule::Ptr<_1b2e63e38_UseDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38a55e3_buildStdUseDecl(_1b389d6c9_parser*, jule::Ptr<_1b2e63e38_UseDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b38a5912_buildIdentUseDecl(_1b389d6c9_parser*, jule::Ptr<_1b2e63e38_UseDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline void _1b38a5c31_parseUseDecl(_1b389d6c9_parser*, jule::Ptr<_1b2e63e38_UseDecl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e63e38_UseDecl> _1b38a60d8_buildUseDecl(_1b389d6c9_parser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>, jule::Bool);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38a6490_buildTypeEnumItemKind(jule::Ptr<_1b389d6c9_parser>, jule::I32*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>> _1b38a679d_buildTypeEnumItems(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e65ee5_TypeEnumDecl> _1b38a6aab_buildTypeEnumDecl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e50c9e_Expr> _1b38a6e63_buildEnumItemExpr(jule::Ptr<_1b389d6c9_parser>, jule::I32*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>> _1b38a7271_buildEnumItems(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e64dd4_EnumDecl> _1b38a757e_buildEnumDecl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Any _1b38a788c_buildNodeEnumDecl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e661e3_FieldDecl> _1b38a7b9a_buildField(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Slice<jule::Ptr<_1b2e661e3_FieldDecl>> _1b38a7ea8_buildStructDeclFields(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e66996_StructDecl> _1b38a82b6_buildStructDecl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38a853b_checkMethodReceiver(_1b389d6c9_parser*, jule::Ptr<_1b2e5d20c_FnDecl>*);
inline jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>> _1b38a8849_buildTraitMethods(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e670a1_TraitDecl> _1b38a8b57_buildTraitDecl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38a8e65_buildCppLinkFn(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e5e1db_VarDecl> _1b38a9273_buildCppLinkVar(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e66996_StructDecl> _1b38a9581_buildCppLinkStruct(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e62a4c_TypeAliasDecl> _1b38a988e_buildCppLinkTypeAlias(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e63e38_UseDecl> _1b38a9b9c_buildCppLinkUse(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Any _1b38a9eaa_buildCppLink(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38aa2b8_getMethod(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38aa5d7_parseImplBody(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1b2e676ab_Impl>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e676ab_Impl> _1b38aa8e5_buildImpl(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Any _1b38aac03_buildNodeData(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38aae78_applyFnMeta(_1b389d6c9_parser*, jule::Ptr<_1b2e5d20c_FnDecl>*);
inline void _1b38ab1ed_applyMeta(_1b389d6c9_parser*, _1b2e180da_Node*);
inline void _1b38ab473_pushUseDecl(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1b2e63e38_UseDecl>*);
inline jule::Bool _1b38ab781_pushMetaNodes(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline _1b2e180da_Node _1b38aba8e_parseNode(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38abd14_appendNode(jule::Ptr<_1b389d6c9_parser>, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38ac276_removeRange(_1b389d6c9_parser*, jule::I32, jule::Str, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::I32>*);
inline void _1b38ac63e_pushWrongOrderCloseErr(_1b389d6c9_parser*, jule::Ptr<_1cb188a5c_Token>*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::I32>*);
inline void _1b38acaa1_pushRangeClose(_1b389d6c9_parser*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Slice<jule::I32>*);
inline void _1b38acd26_checkRanges(_1b389d6c9_parser*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline void _1b38ad09b_parse(jule::Ptr<_1b389d6c9_parser>, jule::Ptr<_1cb18dde7_File>*);
struct _1b389d6c9_parser {
	jule::Ptr<_1b2e172e8_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1b2e184d6_Directive>> _field_directives;
	jule::Slice<_1cac0bec6_Log> _field_errors;
	

	_1b389d6c9_parser(void) = default;


};
inline void _1b38ae9b5_pushErr(_1b38ae3dd_typeBuilder*, jule::Ptr<_1cb188a5c_Token>, jule::Str);
inline void _1b38aecd4_pushSuggestion(_1b38ae3dd_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b0048_buildPrim(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b02ac_buildNamespace(_1b38ae3dd_typeBuilder*);
inline jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _1b38b0521_buildGenerics(_1b38ae3dd_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b38b0785_identGenerics(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b09e9_buildIdent(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b0c5d_buildCppLink(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b0ec2_buildFn(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1236_buildPtr(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b149a_buildSptr(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b170e_buildOp(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1973_buildSlc(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1bd7_buildArr(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1e4b_buildMap(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b21b0_buildEnumerable(_1b38ae3dd_typeBuilder*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b2424_step(_1b38ae3dd_typeBuilder*);
inline __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool _1b38b2688_build(_1b38ae3dd_typeBuilder*);
struct _1b38ae3dd_typeBuilder {
	jule::Ptr<_1b389d6c9_parser> _field_p;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1b38ae3dd_typeBuilder(void) = default;


};
struct _1b31d7de3_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1b31d7de3_CompileInfo(void) = default;

	inline bool operator==(_1b31d7de3_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1b31d7de3_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1b31d9796_pushErr(_1b31d9246_directiveEval*, jule::Ptr<_1cb188a5c_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b31d9b4d_splitOperans(_1b31d9246_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Bool _1b31d9e5b_evalDirectiveIdent(_1b31d9246_directiveEval*, jule::Str);
inline jule::Bool _1b31da269_evalDirectivePart(_1b31d9246_directiveEval*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Bool _1b31da4cd_eval(_1b31d9246_directiveEval*);
struct _1b31d9246_directiveEval {
	jule::Slice<_1cac0bec6_Log> _field_logs;
	jule::Ptr<_1b2e184d6_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1b31d9246_directiveEval(void) = default;


};
inline jule::Ptr<_1b37a5db7_JuleImporter> static__1b32cea34_New(_1b31d7de3_CompileInfo);
inline jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>> _1b33230e9_AllPackages(_1b37a5db7_JuleImporter*);
inline void _1b3342239_SetModPath(_1b37a5db7_JuleImporter*, jule::Str);
inline jule::Str _1b33538aa_GetModPath(_1b37a5db7_JuleImporter*);
inline jule::Str _1b3380002_ModById(_1b37a5db7_JuleImporter*, jule::I32);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3384622_GetImport(_1b37a5db7_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log _1b344752b_ImportPackage(_1b37a5db7_JuleImporter*, jule::Str, jule::Bool);
inline void _1b34562a4_Imported(_1b37a5db7_JuleImporter*, jule::Ptr<_1b2eab755_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1cac0bec6_Log _1b3458ac0_isPassBuildDirectives(_1b37a5db7_JuleImporter*, jule::Ptr<_1b2e172e8_Ast>*);
struct _1b37a5db7_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1b37a5db7_JuleImporter(void) = default;


};
struct _1b3200b75_OrderedDefines {
	jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_Globals;
	

	_1b3200b75_OrderedDefines(void) = default;


};
inline jule::Bool _1b72be6bd_isCommonOrdered(jule::Slice<jule::Ptr<_1b2e683e3_Struct>>, jule::Ptr<_1b2e683e3_Struct>);
inline jule::Bool _1b72c4618_isCommonOrdered(jule::Slice<jule::Ptr<_1b2ed8034_Var>>, jule::Ptr<_1b2ed8034_Var>);
inline void _1b72bad90_orderCommon(jule::Slice<jule::Ptr<_1b2e683e3_Struct>>*);
inline void _1b72bc5de_orderCommon(jule::Slice<jule::Ptr<_1b2ed8034_Var>>*);
inline void static__1b34e7015_orderStructures(jule::Slice<jule::Ptr<_1b2e683e3_Struct>>*);
inline void static__1b36761e9_orderVars(jule::Slice<jule::Ptr<_1b2ed8034_Var>>*);
struct _1b32c7a3d_defineOrderer {
	

	_1b32c7a3d_defineOrderer(void) = default;

	inline bool operator==(_1b32c7a3d_defineOrderer _other) { return true; }

	inline bool operator!=(_1b32c7a3d_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1b397cab6_liveTable {
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1b2e71132_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1b2e687bc_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1b2e8033e_Trait>> _field_traits;
	

	_1b397cab6_liveTable(void) = default;


};
inline void _1b39b3bda_optimizeChild(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8d050_Scope>*);
inline void _1b39b3e82_optimizeBodyChildExceptional(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8d050_Scope>*);
inline void _1b39b4218_optimizeBodyChild(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8d050_Scope>*);
inline void _1b39b448d_optimizeExprModel(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Any*);
inline void _1b39b4669_eliminateFollowed(_1b39b3712_scopeDeadCode*);
inline void _1b39b48de_pushGoto(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e90a7a_GotoSt>);
inline void _1b39b4b64_pushLabel(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e9078e_Label>);
inline void _1b39b4dd9_optimizeRangeIter(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8ec00_RangeIter>);
inline void _1b39b515e_optimizeWhileIter(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8e31a_WhileIter>);
inline void _1b39b53d4_optimizeInfIter(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8dd97_InfIter>);
inline void _1b39b5659_optimizeConditional(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e8daab_Conditional>);
inline void _1b39b58ce_optimizeMatch(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e91c9b_Match>);
inline void _1b39b5b54_optimizeAssign(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e913a5_Assign>);
inline void _1b39b5dc9_optimizeMultiAssign(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Ptr<_1b2e9175c_MultiAssign>);
inline void _1b39b614e_optimizeStmt(jule::Ptr<_1b39b3712_scopeDeadCode>, jule::Any);
inline void _1b39b632a_optimizeStmts(jule::Ptr<_1b39b3712_scopeDeadCode>);
struct _1b39b3712_scopeDeadCode {
	jule::Ptr<_1b39b3712_scopeDeadCode> _field_parent;
	jule::Ptr<_1b2e8d050_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2e9078e_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2e90a7a_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1b39b3712_scopeDeadCode(void) = default;

	inline bool operator==(_1b39b3712_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1b39b3712_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1b39b766c_exprDeadCode static__1b39b7c99_new(jule::Ptr<_1b39b3712_scopeDeadCode>*);
inline void _1b39b801e_binary(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e68ed7_BinopExprModel>);
inline void _1b39b8294_unary(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e691c4_UnaryExprModel>);
inline void _1b39b8519_structureLit(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6959d_StructLitExprModel>);
inline void _1b39b878e_allocStructure(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6978a_AllocStructLitExprModel>);
inline void _1b39b8a14_casting(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e69977_CastingExprModel>);
inline void _1b39b8c89_args(_1b39b766c_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1b39b900e_funcCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e69b64_FnCallExprModel>);
inline void _1b39b9284_slice(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e69d51_SliceExprModel>);
inline void _1b39b9509_array(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6b2c5_ArrayExprModel>);
inline void _1b39b977e_indexing(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6a03d_IndexingExprModel>);
inline void _1b39b9a04_anonFunc(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6a22a_AnonFnExprModel>);
inline void _1b39b9c79_mapExpr(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6a604_MapExprModel>);
inline void _1b39b9eee_slicing(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6a7e1_SlicingExprModel>);
inline void _1b39ba274_traitSub(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel>);
inline void _1b39ba4e9_structureSub(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6adeb_StructSubIdentExprModel>);
inline void _1b39ba76e_commonSub(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel>);
inline void _1b39ba9e4_tuple(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6b88b_TupleExprModel>);
inline void _1b39bac69_newCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel>);
inline void _1b39baede_outCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel>);
inline void _1b39bb264_outlnCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>);
inline void _1b39bb4d9_panicCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel>);
inline void _1b39bb75e_assertCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel>);
inline void _1b39bb9d4_errorCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel>);
inline void _1b39bbc59_makeCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>);
inline void _1b39bbece_appendCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>);
inline void _1b39bc254_lenCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel>);
inline void _1b39bc4c9_capCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel>);
inline void _1b39bc74e_cloneCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel>);
inline void _1b39bc9c4_deleteCall(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel>);
inline void _1b39bcc49_sizeof(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6d805_SizeofExprModel>);
inline void _1b39bcebe_alignof(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6d9e2_AlignofExprModel>);
inline void _1b39bd244_integratedToStr(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel>);
inline void _1b39bd4b9_free(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6e295_FreeExprModel>);
inline void _1b39bd73e_backendEmit(_1b39b766c_exprDeadCode*, jule::Ptr<_1b2e6e0a8_BackendEmitExprModel>);
inline void _1b39bd9b4_optimize(_1b39b766c_exprDeadCode*, jule::Any*);
struct _1b39b766c_exprDeadCode {
	jule::Ptr<_1b39b3712_scopeDeadCode> _field_s;
	

	_1b39b766c_exprDeadCode(void) = default;

	inline bool operator==(_1b39b766c_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1b39b766c_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1cb139ed6_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1b18de5da_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	_1cb139ed6_StrCompExprModel(void) = default;

	inline bool operator==(_1cb139ed6_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1cb139ed6_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1b2c57325_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b2c57325_StrAppendExprModel(void) = default;

	inline bool operator==(_1b2c57325_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b2c57325_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1cb0ae653_UnsafeBinopExprModel {
	jule::Ptr<_1b2e68ed7_BinopExprModel> _field_Node;
	

	_1cb0ae653_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1cb0ae653_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1cb0ae653_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b2c63771_UnsafeIndexingExprModel {
	jule::Ptr<_1b2e6a03d_IndexingExprModel> _field_Node;
	

	_1b2c63771_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1b2c63771_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b2c63771_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1cb08b344_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1b2e69d51_SliceExprModel> _field_Elems;
	

	_1cb08b344_PushToSliceExprModel(void) = default;

	inline bool operator==(_1cb08b344_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1cb08b344_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1cb0d91a5_MutSlicingExprModel {
	jule::Ptr<_1cb188a5c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1cb0d91a5_MutSlicingExprModel(void) = default;

	inline bool operator==(_1cb0d91a5_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1cb0d91a5_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1cb0c1885_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1cb0c1885_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1cb0c1885_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cb0c1885_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b2c1931a_scopeOptimizer> static__1cb08ad5a_new(jule::Ptr<_1b2e8d050_Scope>);
inline void _1cb091602_setCurrentStmt(_1b2c1931a_scopeOptimizer*, jule::Any);
inline void _1cb09e555_optimizeData(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b3030a93_Data>);
inline void _1cb0cb3b7_optimizeVar(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2ed8034_Var>);
inline void _1cb0dabac_optimizeConditional(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e8daab_Conditional>);
inline void _1cb0eb2c7_buildDefaultConstatTrueCase(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e927e6_Case>, jule::I32*, jule::Ptr<_1b2e91c9b_Match>*);
inline void _1cb10eb48_optimizeMatch(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e91c9b_Match>);
inline void _1cb11cc88_optimizeRangeIter(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e8ec00_RangeIter>);
inline void _1b2c400ee_optimizeWhileIter(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e8e31a_WhileIter>);
inline jule::Bool _1b2c64909_substr(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e913a5_Assign>);
inline jule::Bool _1b2d48317_strInsert(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e913a5_Assign>);
inline jule::Bool _1b2d59adc_strAppend(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e913a5_Assign>);
inline jule::Bool _1b2d7395d_strAssign(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e913a5_Assign>);
inline void _1b2d83a5b_optimizeAssign(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e913a5_Assign>);
inline void _1cb0d9392_optimizeMultiAssign(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e9175c_MultiAssign>);
inline void _1cb08d126_optimizeRet(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e93220_RetSt>);
inline void _1cb09324c_optimizeStmt(_1b2c1931a_scopeOptimizer*, jule::Any);
inline void _1cb0d0a4d_optimizeChild(_1b2c1931a_scopeOptimizer*, jule::Ptr<_1b2e8d050_Scope>);
inline void _1cb0d3c4e_optimize(_1b2c1931a_scopeOptimizer*);
struct _1b2c1931a_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_1b2e8d050_Scope> _field_scope;
	

	_1b2c1931a_scopeOptimizer(void) = default;

	inline bool operator==(_1b2c1931a_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1b2c1931a_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1cb144111_optimize(jule::Any*);
inline jule::Bool _1cb08ddd5_strCond(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e68ed7_BinopExprModel>);
inline void _1cb0b65c2_binary(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e68ed7_BinopExprModel>);
inline void _1cb0c49ba_unary(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e691c4_UnaryExprModel>);
inline void _1cb0d0861_structureLit(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6959d_StructLitExprModel>);
inline void _1cb0d667a_allocStructure(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6978a_AllocStructLitExprModel>);
inline void _1cb0dbb25_casting(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e69977_CastingExprModel>);
inline void _1b2d1a22e_args(_1b2c19507_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1cb08b047_scope(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e8d050_Scope>*);
inline void _1cb08c873_funcCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e69b64_FnCallExprModel>);
inline void _1cb095837_slice(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e69d51_SliceExprModel>);
inline void _1cb0b4834_array(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6b2c5_ArrayExprModel>);
inline void _1cb0d4205_indexing(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6a03d_IndexingExprModel>);
inline void _1cb0db2d9_anonFunc(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6a22a_AnonFnExprModel>);
inline void _1cb156860_mapExpr(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6a604_MapExprModel>);
inline void _1b2c2c6c4_slicing(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6a7e1_SlicingExprModel>);
inline void _1cb14cb31_traitSub(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel>);
inline void _1b2d811a7_structureSub(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6adeb_StructSubIdentExprModel>);
inline void _1b2d8251b_commonSub(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel>);
inline void _1b2d900c8_tuple(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6b88b_TupleExprModel>);
inline void _1b2d9a248_newCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel>);
inline void _1cb0cc6a4_outCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel>);
inline void _1cb11ca57_outlnCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>);
inline void _1cb114b1a_panicCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel>);
inline void _1cb147961_assertCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel>);
inline void _1cb149e08_errorCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel>);
inline void _1b2c11103_makeCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>);
inline void _1b3121304_appendCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>);
inline void _1b3121436_lenCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel>);
inline void _1b3121568_capCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel>);
inline void _1b312169a_cloneCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel>);
inline void _1b31217cc_deleteCall(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel>);
inline void _1b312190e_sizeof(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6d805_SizeofExprModel>);
inline void _1b3121a41_alignof(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6d9e2_AlignofExprModel>);
inline void _1b3121b73_integratedToStr(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel>);
inline void _1b3121ca5_free(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6e295_FreeExprModel>);
inline void _1b3121dd7_backendEmit(_1b2c19507_exprOptimizer*, jule::Ptr<_1b2e6e0a8_BackendEmitExprModel>);
inline void _1b3122019_do(_1b2c19507_exprOptimizer*);
struct _1b2c19507_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1b2c19507_exprOptimizer(void) = default;

	inline bool operator==(_1b2c19507_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1b2c19507_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b38b46ce_Optimizer> static__1b38d3dd5_New(jule::Ptr<_1b345d553_IR>*);
inline void _1b38e2355_optimizeGlobal(_1b38b46ce_Optimizer*, jule::Ptr<_1b2ed8034_Var>*);
inline void _1b392141c_optimizeFunction(_1b38b46ce_Optimizer*, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b3930c01_optimizeStruct(_1b38b46ce_Optimizer*, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b3938e07_optimizeGlobals(_1b38b46ce_Optimizer*, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b3948b4d_optimizeFunctions(_1b38b46ce_Optimizer*, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b394a38b_optimizeStructs(_1b38b46ce_Optimizer*, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b38e58ec_optimizePackage(_1b38b46ce_Optimizer*, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b3924255_Optimize(_1b38b46ce_Optimizer*);
struct _1b38b46ce_Optimizer {
	jule::Ptr<_1b345d553_IR> _field_ir;
	

	_1b38b46ce_Optimizer(void) = default;

	inline bool operator==(_1b38b46ce_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1b38b46ce_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1b39c0675_Reset(void);
inline void static__1b39c1775_Print(jule::Str, jule::Str);
struct _1b39c1588_AnsiEscape {
	

	_1b39c1588_AnsiEscape(void) = default;

	inline bool operator==(_1b39c1588_AnsiEscape _other) { return true; }

	inline bool operator!=(_1b39c1588_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1b39c2d09_LogFlat(_1cac0bec6_Log*);
inline void static__1b39c3018_LogError(_1cac0bec6_Log*);
inline void static__1b39c3227_Log(_1cac0bec6_Log*);
inline void static__1b39c3436_PrintLogs(jule::Slice<_1cac0bec6_Log>*);
struct _1b39c2a73_Logger {
	

	_1b39c2a73_Logger(void) = default;

	inline bool operator==(_1b39c2a73_Logger _other) { return true; }

	inline bool operator!=(_1b39c2a73_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1b421a3db_Unix(_1b421a034_AbsTime*);
struct _1b421a034_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1b421a034_AbsTime(void) = default;

	inline bool operator==(_1b421a034_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1b421a034_AbsTime _other) { return !this->operator==(_other); }


};
inline _1b421a6c7_Time static__1b421aa6d_Unix(jule::U64);
inline _1b421a6c7_Time static__1b421ac6b_Now(void);
inline jule::U64 _1b421b1bc_Unix(_1b421a6c7_Time*);
inline jule::U64 _1b421b431_Day(_1b421a6c7_Time*);
inline jule::U64 _1b421b695_Month(_1b421a6c7_Time*);
inline jule::U64 _1b421b909_Year(_1b421a6c7_Time*);
inline jule::U64 _1b421bb6d_Second(_1b421a6c7_Time*);
inline jule::U64 _1b421bdd2_Minute(_1b421a6c7_Time*);
inline jule::U64 _1b421c146_Hour(_1b421a6c7_Time*);
inline _1b421a034_AbsTime _1b421c3aa_Abs(_1b421a6c7_Time*);
struct _1b421a6c7_Time {
	jule::U64 _field_sec = 0;
	

	_1b421a6c7_Time(void) = default;

	inline bool operator==(_1b421a6c7_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1b421a6c7_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b4164ea1_scopeCoder> static__1b41655de_new(jule::Ptr<_1b42224e2_ObjectCoder>*);
inline void _1b754589a_iterHead(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8ec00_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1b4165c2c_rangeIndexIter(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8ec00_RangeIter>*);
inline void _1b4165ea2_rangeHashmapIter(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8ec00_RangeIter>*);
inline void _1b4166227_ifCase(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8d44b_If>);
inline void _1b416649c_conditional(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8daab_Conditional>);
inline void _1b4166722_infIter(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8dd97_InfIter>);
inline void _1b4166997_whileIter(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8e31a_WhileIter>);
inline void _1b4166c1c_rangeIter(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8ec00_RangeIter>);
inline void _1b4166e92_cont(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e900eb_ContSt>);
inline void _1b4167217_label(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e9078e_Label>);
inline void _1b416748c_gotoSt(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e90a7a_GotoSt>);
inline void _1b4167712_postfix(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e90e32_Postfix>);
inline void _1b4167987_assign(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e913a5_Assign>);
inline void _1b4167c0c_mapLookupAssign(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e9175c_MultiAssign>*);
inline void _1b4167e82_multiAssignTup(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e9175c_MultiAssign>*);
inline void _1b4168207_multiAssignFn(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e9175c_MultiAssign>*);
inline void _1b416847c_multiAssign(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e9175c_MultiAssign>);
inline jule::Fn<void(void)> _1b416878a_matchExpr(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e91c9b_Match>);
inline void _1b4168aa9_case(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e91c9b_Match>, jule::Ptr<_1b2e927e6_Case>);
inline void _1b4168d2e_matchSt(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e91c9b_Match>);
inline void _1b41690a4_fallSt(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e92d9b_FallSt>);
inline void _1b4169329_breakSt(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e904a3_BreakSt>);
inline void _1b416959e_setResult(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e93220_RetSt>);
inline void _1b4169824_retSt(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e93220_RetSt>);
inline void _1b4169a99_var(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2ed8034_Var>);
inline void _1b4169d1e_strAppend(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2c57325_StrAppendExprModel>);
inline void _1b416a094_st(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Any);
inline void _1b416a319_scopeStmts(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8d050_Scope>*);
inline void _1b416a58e_scope(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e8d050_Scope>);
inline void _1b416a814_funcScope(jule::Ptr<_1b4164ea1_scopeCoder>, jule::Ptr<_1b2e71132_FnIns>);
struct _1b4164ea1_scopeCoder {
	jule::Ptr<_1b42224e2_ObjectCoder> _field_oc;
	

	_1b4164ea1_scopeCoder(void) = default;

	inline bool operator==(_1b4164ea1_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b4164ea1_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b416d3e9_exprCoder> static__1b416d7e5_new(jule::Ptr<_1b42224e2_ObjectCoder>*);
inline void _1b416da6a_string(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b18de5da_Const>*);
inline void _1b416dce0_boolean(jule::Ptr<_1b416d3e9_exprCoder>, jule::Bool);
inline void _1b416debb_nilLit(jule::Ptr<_1b416d3e9_exprCoder>);
inline jule::Bool _1b416e2c9_ftoaSpecialCases(jule::Ptr<_1b416d3e9_exprCoder>, jule::F64*);
inline void _1b416e54e_float32(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b18de5da_Const>*);
inline void _1b416e7c4_float64(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b18de5da_Const>*);
inline void _1b416ea49_constant(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b18de5da_Const>);
inline void _1b416ee12_divByZeroBinary(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1cb188a5c_Token>*, jule::Ptr<_1b2e68cea_OperandExprModel>*, jule::Ptr<_1b2e68cea_OperandExprModel>*);
inline void _1b4170187_unsafeBinary(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e68ed7_BinopExprModel>);
inline void _1b417040c_binary(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e68ed7_BinopExprModel>);
inline void _1b4170682_var(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2ed8034_Var>);
inline void _1b4170907_structureIns(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e687bc_StructIns>);
inline void _1b4170b7c_unary(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e691c4_UnaryExprModel>);
inline void _1b4170e02_structureLit(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6959d_StructLitExprModel>);
inline void _1b4171177_allocStructure(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6978a_AllocStructLitExprModel>);
inline void _1b41713ec_possibleRefExpr(jule::Ptr<_1b416d3e9_exprCoder>, jule::Any);
inline void _1b4171672_casting(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69977_CastingExprModel>);
inline void _1b41718e7_models(jule::Ptr<_1b416d3e9_exprCoder>, jule::Slice<jule::Any>);
inline void _1b4171b6c_args(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69b64_FnCallExprModel>*);
inline void _1b4171de2_modelForCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Any);
inline void _1b4172167_pushCallInf(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69b64_FnCallExprModel>*);
inline jule::Bool _1b4172475_isWrapped(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69b64_FnCallExprModel>*);
inline void _1b41726ea_pureFuncCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69b64_FnCallExprModel>*);
inline void _1b4172970_coFuncCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69b64_FnCallExprModel>*);
inline void _1b4172c8e_writeUseExpr(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e71132_FnIns>*, jule::Ptr<_1b3030a93_Data>);
inline void _1b4173014_funcCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69b64_FnCallExprModel>);
inline void _1b4173289_slice(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e69d51_SliceExprModel>);
inline void _1b417350e_indexing(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6a03d_IndexingExprModel>);
inline void _1b4173784_unsafeIndexing(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2c63771_UnsafeIndexingExprModel>);
inline void _1b4173a09_anonFunc(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6a22a_AnonFnExprModel>);
inline void _1b4173c7e_mapExpr(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6a604_MapExprModel>);
inline void _1b4174004_slicing(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6a7e1_SlicingExprModel>);
inline void _1b4174279_traitSub(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel>);
inline void _1b41744ee_structureSub(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6adeb_StructSubIdentExprModel>);
inline void _1b4174774_commonIdent(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6b4b2_CommonIdentExprModel>);
inline void _1b41749e9_commonSub(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel>);
inline void _1b4174c6e_array(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6b2c5_ArrayExprModel>);
inline void _1b4174ee4_funcInsCommon(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e71132_FnIns>);
inline void _1b4175269_funcIns(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e71132_FnIns>);
inline void _1b41754de_tuple(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6b88b_TupleExprModel>);
inline void _1b4175764_newCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel>);
inline void _1b41759d9_outCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel>);
inline void _1b4175c5e_outlnCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>);
inline void _1b4175ed4_panicCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel>);
inline void _1b4176259_assertCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel>);
inline void _1b41764ce_errorCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel>);
inline void _1b4176754_copyCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6d42b_BuiltinCopyCallExprModel>);
inline void _1b41769c9_lenCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel>);
inline void _1b4176c4e_capCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel>);
inline void _1b4176ec4_deleteCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel>);
inline void _1b4177249_makeCallSlice(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>*);
inline void _1b41774be_makeCallStr(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>*);
inline void _1b4177744_makeCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>);
inline void _1b41779b9_pushToSlice(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1cb08b344_PushToSliceExprModel>);
inline void _1b4177c3e_appendCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>);
inline void _1b4177eb4_cloneCall(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel>);
inline void _1b4178239_sizeof(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6d805_SizeofExprModel>);
inline void _1b41784ae_alignof(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6d9e2_AlignofExprModel>);
inline jule::Str _1b41787bc_runeLit(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6dbce_RuneExprModel>);
inline void _1b4178a42_structureStatic(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6b0d8_StructStaticIdentExprModel>);
inline void _1b4178cb7_integratedToStr(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel>);
inline void _1b417903c_backendEmit(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6e0a8_BackendEmitExprModel>);
inline void _1b41792b2_free(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b2e6e295_FreeExprModel>);
inline void _1b4179537_mutSlicing(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1cb0d91a5_MutSlicingExprModel>);
inline void _1b41797ac_strInsertBegin(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1cb0c1885_StrInsertBeginExprModel>);
inline void _1b4179a32_strComp(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1cb139ed6_StrCompExprModel>);
inline void _1b4179ca7_model(jule::Ptr<_1b416d3e9_exprCoder>, jule::Any);
inline void _1b417a02c_initExpr(jule::Ptr<_1b416d3e9_exprCoder>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b416d3e9_exprCoder {
	jule::Ptr<_1b42224e2_ObjectCoder> _field_oc;
	

	_1b416d3e9_exprCoder(void) = default;

	inline bool operator==(_1b416d3e9_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b416d3e9_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b417c7c1_deriveCoder> static__1b417cbab_new(jule::Ptr<_1b42224e2_ObjectCoder>);
inline jule::Str _1b417ceb9_cloneFuncDecl(_1b417c7c1_deriveCoder*, jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Str _1b417d2c7_cloneFuncDef(_1b417c7c1_deriveCoder*, jule::Ptr<_1b2e683e3_Struct>*);
struct _1b417c7c1_deriveCoder {
	jule::Ptr<_1b42224e2_ObjectCoder> _field_oc;
	

	_1b417c7c1_deriveCoder(void) = default;

	inline bool operator==(_1b417c7c1_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b417c7c1_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b417e1a7_TestCoder> static__1b417e62a_New(jule::Ptr<_1b42224e2_ObjectCoder>*);
inline jule::Ptr<_1b2eab755_ImportInfo> _1b417e88e_findTestingPackage(jule::Ptr<_1b417e1a7_TestCoder>);
inline void _1b417eb14_appendTest(jule::Ptr<_1b417e1a7_TestCoder>, jule::Ptr<_1b2e71132_FnIns>);
inline void _1b417ed89_appendPackageTests(jule::Ptr<_1b417e1a7_TestCoder>, jule::Ptr<_1b2eae6ae_Package>*);
inline jule::Bool _1b41800ed_readyTestingPackage(jule::Ptr<_1b417e1a7_TestCoder>);
inline void _1b41802c9_callTmReset(jule::Ptr<_1b417e1a7_TestCoder>);
inline void _1b41804a5_callTmFailed(jule::Ptr<_1b417e1a7_TestCoder>);
inline void _1b4180681_callTmSkipped(jule::Ptr<_1b417e1a7_TestCoder>);
inline void _1b418085c_Serialize(jule::Ptr<_1b417e1a7_TestCoder>);
struct _1b417e1a7_TestCoder {
	jule::Ptr<_1b2e687bc_StructIns> _field_t;
	jule::Ptr<_1b2e6e85b_Fn> _field_tmReset;
	jule::Ptr<_1b2e6e85b_Fn> _field_tmFailed;
	jule::Ptr<_1b2e6e85b_Fn> _field_tmSkipped;
	jule::Ptr<_1b42224e2_ObjectCoder> _field_oc;
	

	_1b417e1a7_TestCoder(void) = default;

	inline bool operator==(_1b417e1a7_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b417e1a7_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1b4181cc0_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1b41821aa_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__1b4182452_func(jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::Str static__1b41826e9_funcIns(jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Str static__1b4182991_traitDecl(jule::Ptr<_1b2e8033e_Trait>);
inline jule::Str static__1b4182c38_param(jule::Ptr<_1b2e6e66e_Param>*);
inline jule::Str static__1b4182ed0_structure(jule::Ptr<_1b2e683e3_Struct>*);
inline jule::Str static__1b4183277_structureIns(jule::Ptr<_1b2e687bc_StructIns>*);
inline jule::Str static__1b418351e_field(jule::Ptr<_1b2e3becc_Field>*);
inline jule::Str static__1b41837b6_var(jule::Ptr<_1b2ed8034_Var>);
inline jule::Str static__1b4183a5d_iterBegin(jule::Uintptr);
inline jule::Str static__1b4183d05_iterEnd(jule::Uintptr);
inline jule::Str static__1b418409c_iterNext(jule::Uintptr);
inline jule::Str static__1b4184344_label(jule::Str*);
inline jule::Str static__1b41845db_matchEnd(jule::Uintptr);
inline jule::Str static__1b4184883_caseBegin(jule::Uintptr);
struct _1b41816e8_identCoder {
	

	_1b41816e8_identCoder(void) = default;

	inline bool operator==(_1b41816e8_identCoder _other) { return true; }

	inline bool operator!=(_1b41816e8_identCoder _other) { return !this->operator==(_other); }


};
struct _1b41b4099_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1b41b4099_SerializationInfo(void) = default;

	inline bool operator==(_1b41b4099_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1b41b4099_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1b41895ad_traitHash {
	jule::Ptr<_1b2e8033e_Trait> _field_t;
	jule::Ptr<_1b2e687bc_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	_1b41895ad_traitHash(void) = default;

	inline bool operator==(_1b41895ad_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b41895ad_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1b422832d_Str(_1b4228075_customType*);
inline jule::Bool _1b422863b_Equal(jule::Ptr<_1b4228075_customType>, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b4228075_customType {
	jule::Str _field_kind;
	

	_1b4228075_customType(void) = default;

	inline bool operator==(_1b4228075_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b4228075_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b42289e3_typeCoder> static__1b4229032_new(jule::Ptr<_1b42224e2_ObjectCoder>*);
inline jule::Str _1b4229340_toType(_1b42289e3_typeCoder*, jule::Str);
inline jule::Str _1b422964d_prim(_1b42289e3_typeCoder*, jule::Ptr<_1b3061772_Prim>);
inline jule::Str _1b422995b_tuple(_1b42289e3_typeCoder*, jule::Ptr<_1b30664e1_Tuple>);
inline jule::Str _1b4229c69_asSptr(_1b42289e3_typeCoder*, jule::Str);
inline jule::Str _1b422a077_asPtr(_1b42289e3_typeCoder*, jule::Str);
inline jule::Str _1b422a385_sptr(_1b42289e3_typeCoder*, jule::Ptr<_1b3065006_Sptr>);
inline jule::Str _1b422a693_ptr(_1b42289e3_typeCoder*, jule::Ptr<_1b306856a_Ptr>);
inline jule::Str _1b422a9a1_enumDecl(_1b42289e3_typeCoder*, jule::Ptr<_1b2e82484_Enum>);
inline jule::Str _1b422acae_typeEnumDecl(_1b42289e3_typeCoder*, jule::Ptr<_1b2e83a7e_TypeEnum>);
inline jule::Str _1b422b0bc_asSlice(_1b42289e3_typeCoder*, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Str _1b422b3ca_slice(_1b42289e3_typeCoder*, jule::Ptr<_1b3065963_Slc>);
inline jule::Str _1b422b6d8_mapType(_1b42289e3_typeCoder*, jule::Ptr<_1b3067019_Map>);
inline jule::Str _1b422b9e6_traitIdent(_1b42289e3_typeCoder*, jule::Str);
inline jule::Str _1b422bd04_traitDecl(_1b42289e3_typeCoder*, jule::Ptr<_1b2e8033e_Trait>);
inline jule::Str _1b422c112_structure(_1b42289e3_typeCoder*, jule::Ptr<_1b2e683e3_Struct>);
inline jule::Str _1b422c420_structureIns(_1b42289e3_typeCoder*, jule::Ptr<_1b2e687bc_StructIns>);
inline jule::Str _1b422c72d_array(_1b42289e3_typeCoder*, jule::Ptr<_1b3067b0d_Arr>);
inline jule::Str _1b422cd49_paramIns(_1b42289e3_typeCoder*, jule::Ptr<_1b2e70263_ParamIns>*);
inline void _1b422d476_funcInsResult(_1b42289e3_typeCoder*, jule::Str*, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Str _1b422d784_anonFunc(_1b42289e3_typeCoder*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Str _1b422da92_func(_1b42289e3_typeCoder*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Str _1b422dda0_kind(_1b42289e3_typeCoder*, jule::Ptr<_1b305ba25_TypeKind>);
struct _1b42289e3_typeCoder {
	jule::Ptr<_1b42224e2_ObjectCoder> _field_oc;
	jule::Ptr<_1b42312d1_resultCoder> _field_rc;
	

	_1b42289e3_typeCoder(void) = default;

	inline bool operator==(_1b42289e3_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1b42289e3_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b42312d1_resultCoder> static__1b42317dc_new(jule::Ptr<_1b42289e3_typeCoder>*);
inline void _1b4231b0b_ptr(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b306856a_Ptr>);
inline void _1b4231e2a_sptr(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b3065006_Sptr>);
inline void _1b4232249_mapType(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b3067019_Map>);
inline void _1b4232568_slice(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b3065963_Slc>);
inline void _1b4232887_arr(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b3067b0d_Arr>);
inline void _1b4232ba6_func(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b2e71132_FnIns>);
inline void _1b4232ec5_tup(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b30664e1_Tuple>);
inline void _1b42332e4_codeMut(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b4233613_codeMut1(_1b42312d1_resultCoder*, jule::Str*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Str _1b42338dd_code(_1b42312d1_resultCoder*, jule::Ptr<_1b305ba25_TypeKind>*);
struct _1b42312d1_resultCoder {
	jule::Ptr<_1b42289e3_typeCoder> _field_tc;
	

	_1b42312d1_resultCoder(void) = default;

	inline bool operator==(_1b42312d1_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1b42312d1_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1b6500c85_Name(_1b6500999_Flag*);
inline jule::Str _1b6500db7_What(_1b6500999_Flag*);
inline void _1b6500ee9_Reset(_1b6500999_Flag*);
inline jule::I32 _1b650113c_Short(_1b6500999_Flag*);
struct _1b6500999_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1b6500999_Flag(void) = default;

	inline bool operator==(_1b6500999_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b6500999_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b6504195_Name(_1b6504607_Flag*);
inline jule::Str _1b65048e3_What(_1b6504607_Flag*);
inline void _1b6504a25_Reset(_1b6504607_Flag*);
inline jule::I32 _1b6504b57_Short(_1b6504607_Flag*);
struct _1b6504607_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1b6504607_Flag(void) = default;

	inline bool operator==(_1b6504607_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b6504607_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b650795c_Name(_1b6507dbe_Flag*);
inline jule::Str _1b65081aa_What(_1b6507dbe_Flag*);
inline void _1b65082dc_Reset(_1b6507dbe_Flag*);
inline jule::I32 _1b650841e_Short(_1b6507dbe_Flag*);
struct _1b6507dbe_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1b6507dbe_Flag(void) = default;

	inline bool operator==(_1b6507dbe_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b6507dbe_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b650b268_Name(_1b650b6ca_Flag*);
inline jule::Str _1b650b9b6_What(_1b650b6ca_Flag*);
inline void _1b650bae8_Reset(_1b650b6ca_Flag*);
inline jule::I32 _1b650bc2a_Short(_1b650b6ca_Flag*);
struct _1b650b6ca_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1b650b6ca_Flag(void) = default;

	inline bool operator==(_1b650b6ca_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b650b6ca_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b650ea30_Name(_1b650ee92_Flag*);
inline jule::Str _1b651027d_What(_1b650ee92_Flag*);
inline void _1b65103b0_Reset(_1b650ee92_Flag*);
inline jule::I32 _1b65104e2_Short(_1b650ee92_Flag*);
struct _1b650ee92_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1b650ee92_Flag(void) = default;

	inline bool operator==(_1b650ee92_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b650ee92_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b425b97c_FlagSet> static__1b425bc68_New(void);
inline jule::Trait<_1b3a75c69_CommonFlag> _1b425c1ec_FindFlag(_1b425b97c_FlagSet*, jule::Str);
inline jule::Trait<_1b3a75c69_CommonFlag> _1b425c50a_FindFlagShort(_1b425b97c_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1b3a75c69_CommonFlag>> _1b425c76e_Flags(_1b425b97c_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b425ca7c_Parse(_1b425b97c_FlagSet*, jule::Slice<jule::Str>);
inline void _1b425cc58_Reset(_1b425b97c_FlagSet*);
inline jule::Ptr<_1b650ee92_Flag> _1b6582982_addFlagCommon(_1b425b97c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b650b6ca_Flag> _1b658b2c6_addFlagCommon(_1b425b97c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b6580919_AddVar(_1b425b97c_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b6589291_AddVar(_1b425b97c_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1b425b97c_FlagSet {
	jule::Slice<jule::Trait<_1b3a75c69_CommonFlag>> _field_flags;
	

	_1b425b97c_FlagSet(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1b65232b3_parseInteger(_1b425e155_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _1b652b387_parseInteger(_1b425e155_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _1b425e94c_getData(_1b425e155_argParser*);
inline jule::VoidExceptional _1b425eb8e_processFlag(_1b425e155_argParser*, jule::Trait<_1b3a75c69_CommonFlag>*);
inline jule::VoidExceptional _1b425ee14_singleDash(_1b425e155_argParser*, jule::Str*);
inline jule::VoidExceptional _1b4260189_doubleDash(_1b425e155_argParser*, jule::Str*);
inline jule::VoidExceptional _1b4260365_tryArg(_1b425e155_argParser*);
inline jule::VoidExceptional _1b4260541_parse(_1b425e155_argParser*);
struct _1b425e155_argParser {
	_1b425b97c_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	

	_1b425e155_argParser(void) = default;


};
inline jule::Ptr<_1b42224e2_ObjectCoder> static__1b4188a96_New(jule::Ptr<_1b345d553_IR>*, _1b41b4099_SerializationInfo);
inline void _1b41a8e7e_write(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Str);
inline void _1b41e8155_addIndent(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b41e8672_doneIndent(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b41ebbc5_indent(jule::Ptr<_1b42224e2_ObjectCoder>);
inline jule::I32 _1b4202ba9_findAnyType(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::I32 _1b41ad57c_pushAnyType(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b41ac7ac_pushResultIns(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b41ea61e_pushResult(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e6e85b_Fn>*);
inline jule::I32 _1b4189316_findTypeOffset(_1b42224e2_ObjectCoder*, jule::Ptr<_1b2e8033e_Trait>, jule::Ptr<_1b305ba25_TypeKind>);
inline void _1b4222adb_locInfo(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1cb188a5c_Token>*);
inline void _1b4222c1d_head(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4222d50_links(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4222e82_prepareStructure(_1b42224e2_ObjectCoder*, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b42230b4_prepareStructures(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b42231e6_iterPackages(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>);
inline void _1b4223328_buildTraitMap(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b422345a_traitDecls(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b422358c_structurePlainDecl(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b42236be_structurePlainDecls(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4223801_fieldDecl(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e685d0_FieldIns>*);
inline void _1b4223933_structureDestructor(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4223a65_structureDeriveDefsDecls(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4223b97_structureOperatorEq(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Str*, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4223cc9_structureOperatorNotEq(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Str*, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4223e0b_structureOperator(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Str*, jule::Ptr<_1b2e71132_FnIns>*, jule::Str);
inline void _1b422403d_structureOperators(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4224170_structureInsDecl(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b42242a2_structureDecl(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b42243d4_structureDecls(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4224516_paramsDecls(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>*);
inline void _1b4224648_funcHead(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e71132_FnIns>*, jule::Bool);
inline void _1b422477a_funcDecl(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e6e85b_Fn>*, jule::Bool);
inline void _1b42248ac_funcDecls(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b42249de_traitDataTypes(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4224b21_paramIns(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e70263_ParamIns>*);
inline void _1b4224c53_paramsIns(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>*);
inline void _1b4224d85_varInitExpr(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2ed8034_Var>*, jule::Fn<void(void)>);
inline void _1b4224eb7_var(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2ed8034_Var>);
inline void _1b42250e9_func(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e6e85b_Fn>*);
inline void _1b422522b_traitWrappers(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b422535d_traitDatas(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4225490_globals(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b42255c2_decls(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4225704_structureMethods(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4225836_structureDeriveDefs(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4225968_structureOstream(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4225b33_structureIns(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e687bc_StructIns>*);
inline void _1b4225da8_structure(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2e683e3_Struct>*);
inline void _1b4226084_structures(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4226260_funcs(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b42264d5_pushInit(jule::Ptr<_1b42224e2_ObjectCoder>, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b42266b1_initCaller(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b422688c_end(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4226a68_serializeHead(jule::Ptr<_1b42224e2_ObjectCoder>);
inline void _1b4226c44_Serialize(jule::Ptr<_1b42224e2_ObjectCoder>);
struct _1b42224e2_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1b345d553_IR> _field_ir;
	_1b41b4099_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1b41895ad_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1b416d3e9_exprCoder> _field_ec;
	jule::Ptr<_1b4164ea1_scopeCoder> _field_sc;
	jule::Ptr<_1b42289e3_typeCoder> _field_tc;
	jule::Ptr<_1b417c7c1_deriveCoder> _field_dc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	

	_1b42224e2_ObjectCoder(void) = default;


};
inline jule::Ptr<_1b397cd80_ObjectDeadCode> static__1b397d2d1_new(jule::Ptr<_1b345d553_IR>*);
inline jule::Bool _1b72eb156_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e8033e_Trait>*);
inline jule::Bool _1b7300d92_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Bool _1b7308949_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e687bc_StructIns>*);
inline jule::Bool _1b730e433_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2ed8034_Var>*);
inline void _1b72eb4a8_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e8033e_Trait>);
inline void _1b7301986_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e71132_FnIns>);
inline void _1b7307c34_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e687bc_StructIns>);
inline void _1b730e785_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2ed8034_Var>);
inline void _1b39b04ab_setReferencesAsLive(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2e7408b_ReferenceStack>*);
inline void _1b39b0731_inits(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b39b09a6_collectLivePackage(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b39b0b82_collectLive(jule::Ptr<_1b397cd80_ObjectDeadCode>);
inline void _1b39b0e07_removeDeadGlobals(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b2ed8034_Var>>*);
inline void _1b39b117c_removeDeadFns(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>*);
inline void _1b39b1402_removeDeadStructs(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b2e683e3_Struct>>*);
inline void _1b39b1677_removeDeadTraits(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b2e8033e_Trait>>*);
inline void _1b39b18ec_removeDeadsFile(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b302ac69_SymbolTable>*);
inline void _1b39b1b72_removeDeadsPackage(jule::Ptr<_1b397cd80_ObjectDeadCode>, jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b39b1d4d_removeDeads(jule::Ptr<_1b397cd80_ObjectDeadCode>);
inline void _1b39b2029_elimanate(jule::Ptr<_1b397cd80_ObjectDeadCode>);
struct _1b397cd80_ObjectDeadCode {
	_1b397cab6_liveTable _field_live;
	jule::Ptr<_1b345d553_IR> _field_ir;
	

	_1b397cd80_ObjectDeadCode(void) = default;


};
inline __jule_tuple_x_1b345d553_IR__jule_tuple_s_1cac0bec6_Log static__1b3192b4a_Build(jule::Str, jule::I32);
inline void _1b3194135_appendStructs(_1b345d553_IR*, jule::Ptr<_1b2eae6ae_Package>*, jule::Slice<jule::Ptr<_1b2e683e3_Struct>>*);
inline jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _1b31a0e77_GetAllStructures(_1b345d553_IR*);
inline void _1b31bdd85_appendGlobals(_1b345d553_IR*, jule::Ptr<_1b2eae6ae_Package>*, jule::Slice<jule::Ptr<_1b2ed8034_Var>>*);
inline jule::Slice<jule::Ptr<_1b2ed8034_Var>> _1b31be89c_GetAllGlobals(_1b345d553_IR*);
inline void _1b31c3d13_Order(_1b345d553_IR*);
struct _1b345d553_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1b2eae6ae_Package> _field_Main;
	jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>> _field_Used;
	_1b3200b75_OrderedDefines _field_Ordered;
	

	_1b345d553_IR(void) = default;


};
inline jule::Str _1b2e3db9e_Str(_1b2e687bc_StructIns*);
inline jule::Bool _1b2e3ed04_Equal(jule::Ptr<_1b2e687bc_StructIns>, jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b2e42158_Same(_1b2e687bc_StructIns*, jule::Ptr<_1b2e687bc_StructIns>);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2e43478_FindMethod(_1b2e687bc_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e685d0_FieldIns> _1b2e253e4_FindField(_1b2e687bc_StructIns*, jule::Str);
inline jule::Ptr<_1b2ed8034_Var> _1b2e31411_FindStatic(_1b2e687bc_StructIns*, jule::Str);
struct _1b2e687bc_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1b2e683e3_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1b305a2e8_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b2e685d0_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1b2e7408b_ReferenceStack> _field_Refers;
	_1b2e44622_Operators _field_Operators;
	

	_1b2e687bc_StructIns(void) = default;


};
inline jule::Ptr<_1cac7b584_Cmd> static__1cac7b9d5_New(jule::Str);
inline jule::VoidExceptional _1cac7bbb1_Spawn(_1cac7b584_Cmd*);
inline jule::VoidExceptional _1cac7bd8c_Kill(_1cac7b584_Cmd*);
inline jule::Exceptional<jule::I32> _1cac7c101_Wait(_1cac7b584_Cmd*);
inline jule::VoidExceptional _1cac9c2ca_spawn(_1cac7b584_Cmd*);
inline jule::VoidExceptional _1cac9c4a6_kill(_1cac7b584_Cmd*);
inline jule::Exceptional<jule::I32> _1cac9c71a_wait(_1cac7b584_Cmd*);
struct _1cac7b584_Cmd {
	_1cac9be56_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_1cac7b584_Cmd(void) = default;


};
inline jule::I32 _20c7c8d3b_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _20c7c90d3_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _20c7c9402_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _20c7c9699_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _20c7c99a7_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _20c7b5575_Utf16FromStr(jule::Str);
inline jule::Str _20c7b904b_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _20c7b4552_U16PtrToStr(jule::U16*);
inline jule::I32 _20b9d1bb0_GetLastErrno(void);
inline jule::Uintptr _20c7eb0d3_GetStdHandle(jule::Uintptr);
inline jule::Bool _20c7eb37a_CloseHandle(jule::Uintptr);
inline jule::I32 _20c7eb6bb_Wstat(jule::U16*, struct _stat*);
inline jule::I32 _20c7ebaa6_Wopen(jule::U16*, jule::I32, jule::I32);
inline jule::U32 _20c7ebca4_GetLastError(void);
inline jule::U32 _20c7ec0e5_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _20c7ec634_DeleteFile(jule::U16*);
inline jule::Bool _20c7ec8cb_CreateDirectory(jule::U16*);
inline jule::Bool _20c7ecb73_RemoveDirectory(jule::U16*);
inline jule::U32 _20c7ed107_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _20c7ed448_GetConsoleMode(jule::Uintptr, jule::I32*);
inline jule::Bool _20c7eda0e_SetConsoleMode(jule::Uintptr, jule::I32);
inline jule::Bool _20c7ee009_WriteConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*, void*);
inline jule::Bool _20c7ee48d_ReadConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*);
inline jule::Uintptr _20c7ee9cc_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I32 _20c7eed1d_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I32 _20c8000b5_FindClose(jule::Uintptr);
inline jule::I32 _20c801ade_Seek(jule::I32, jule::I32, jule::I32);
inline jule::I32 _20c801ec9_Read(jule::I32, void*, jule::U32);
inline jule::I32 _20c80234d_Close(jule::I32);
inline jule::I32 _20c802738_Write(jule::I32, void*, jule::U32);
inline void _20c802947_Exit(jule::I32);
inline jule::Slice<jule::U8> _20bae0780_Stobs(jule::Str*);
inline void _20ba640e9_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _20c95b1dd_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _20c95b50c_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _20c95b7a4_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I32 _20c95bce3_RuneLen(jule::I32);
inline jule::I32 _20c95c211_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20c95c552_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20c95c893_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _20c95cdd2_RuneCountStr(jule::Str);
inline jule::Bool _20c95d179_RuneStart(jule::U8);
inline jule::I32 _20ca03d79_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _20ca07de4_Args(void);
inline jule::Exceptional<jule::Str> _20ca08367_WorkingDir(void);
inline jule::Exceptional<jule::Str> _20ca08c2a_getwd(void);
inline jule::Bool _1cab01b24_IsLetter(jule::I32);
inline jule::Bool _1cab695e8_is16(jule::Slice<_1cab67a36_Range16>, jule::U16);
inline jule::Bool _1cab69939_is32(jule::Slice<_1cab67ea9_Range32>, jule::U32);
inline jule::Bool _1cab6a1cb_isExcludingLatin(jule::Ptr<_1cab6842c_RangeTable>, jule::I32);
inline jule::Bool _1cab6a473_IsUpper(jule::I32);
inline jule::I32 _1cab7e8b6_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _1cab7ea3c_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _1cab6e103_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _1cab6e444_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1caad032d_Repeat(jule::Str, jule::I32);
inline jule::Bool _1cab6e5a9_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _1cab6e6db_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1cab6e81d_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _1cab6e950_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _1cab6ec4c_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1cab70588_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1cab708c9_FindLast(jule::Str, jule::Str);
inline jule::I32 _1cab71b72_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _1cab724ad_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _1cab732c2_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1cab739ed_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _1cab73d3e_Contains(jule::Str, jule::Str);
inline jule::Bool _1cab74812_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _1cab74b53_Count(jule::Str, jule::Str);
inline jule::Str _1cab750d7_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _1cab7214a_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1cab76193_TrimLeft(jule::Str, jule::Str);
inline void _1cab7644b_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1cab76acd_Trim(jule::Str, jule::Str);
inline jule::Bool _20c9d1582_IsPathSep(jule::U8);
inline jule::Bool _20c9d16b4_isSlash(jule::U8);
inline jule::U8 _20c9d17e6_toUpper(jule::U8);
inline jule::I32 _20c9d1d13_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _20c9d20aa_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _20c9d2352_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _20c9d26c6_abs(jule::Str);
inline jule::Str _20c9d296d_join(jule::Slice<jule::Str>);
inline jule::Str _1cab782a5_Clean(jule::Str);
inline jule::Str _1cab78838_FromSlash(jule::Str);
inline jule::Str _1cab78b57_Join(jule::Slice<jule::Str>);
inline jule::Str _1cab78dee_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1cab79196_Abs(jule::Str);
inline jule::Str _1cab7943d_Base(jule::Str);
inline jule::Str _1cab797b2_Dir(jule::Str);
inline jule::Str _1cab79a59_VolumeName(jule::Str);
inline jule::I32 _20ba643a2_getLastFsError(void);
inline jule::Bool _20c8e1629_isConsoleHandle(jule::Uintptr);
inline void _1cac9ca7d_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _1cac9cd25_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _1cac9d1cc_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I32 _1cac9e1ab_processErrorFromCode(jule::I32);
inline jule::I32 _1cac9e3ba_getLastProcessError(void);
inline void _1cac9eb6d_Exit(jule::I32);
inline jule::Str _1cac9ed6b_Executable(void);
inline jule::Bool _1cabeec11_IsStdHeaderPath(jule::Str);
inline jule::Bool _1cabeee31_IsValidHeaderExt(jule::Str);
inline jule::Bool _1cac001c8_IsValidCppExt(jule::Str);
inline jule::Str _1cac0c416_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1cac0c702_argToStr(jule::Any);
inline jule::I32 _1cac0c999_findNextFmt(jule::Str);
inline jule::Str _1cac0cd2e_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1cac0dda7_IsTopDirective(jule::Str);
inline jule::Bool _1cac102d7_IsWindows(jule::Str);
inline jule::Bool _1cac10590_IsDarwin(jule::Str);
inline jule::Bool _1cac10837_IsLinux(jule::Str);
inline jule::Bool _1cac10b56_IsI386(jule::Str);
inline jule::Bool _1cac10ded_IsAmd64(jule::Str);
inline jule::Bool _1cac11195_IsArm64(jule::Str);
inline jule::Bool _1cac1143c_IsUnix(jule::Str);
inline jule::Bool _1cac117b1_Is32Bit(jule::Str);
inline jule::Bool _1cac11a58_Is64Bit(jule::Str);
inline void _1cac1892d_init(void);
inline jule::Bool _1cb189266_IsUnaryOp(jule::Str);
inline jule::Bool _1cb189552_IsBinOp(jule::Str);
inline jule::Bool _1cb189b18_IsStr(jule::Str);
inline jule::Bool _1cb189db0_IsRawStr(jule::Str);
inline jule::Bool _1cb18a157_IsRune(jule::Str);
inline jule::Bool _1cb18a773_IsBool(jule::Str);
inline jule::Bool _1cb18aa1a_IsFloat(jule::Str);
inline jule::Bool _1cb18acb2_IsNum(jule::Str);
inline jule::Bool _1cb18b301_IsIgnoreIdent(jule::Str);
inline jule::Bool _1cb18b598_IsAnonIdent(jule::Str);
inline jule::Bool _1cb18bad7_IsSpace(jule::I32);
inline jule::Bool _1cb18c038_IsLetter(jule::I32);
inline jule::Bool _1cb18c577_IsDecimal(jule::U8);
inline jule::Bool _1cb18c81e_IsBinary(jule::U8);
inline jule::Bool _1cb18cab6_IsOctal(jule::U8);
inline jule::Bool _1cb18cd5d_IsHex(jule::U8);
inline jule::Bool _1cb18d105_IsAssign(jule::U32);
inline jule::Bool _1cb18d39c_IsPostfixOp(jule::Str);
inline jule::Bool _1cb18d644_IsAssignOp(jule::Str);
inline jule::Ptr<_1cb18dde7_File> _1cb190426_NewFileSet(jule::Str);
inline _1cac0bec6_Log _1cb191bb9_makeErr(jule::I32, jule::I32, jule::Ptr<_1cb18dde7_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1cb19204e_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1cb192390_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb192725_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb192a66_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb192da7_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb1931e8_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb193649_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb1938e1_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1cb193b88_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1cb193ec9_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _1cb19431a_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _1cb19465b_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1cb19499c_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1cb194cdd_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb19523e_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1cb1954d6_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1cb195827_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cb195abe_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1cb195d88_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1cb196042_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1cb1962c8_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1cac0bec6_Log> _1cb19acc2_Lex(jule::Ptr<_1cb18dde7_File>, jule::I32);
inline jule::I32 _1b187e558_LeadingZeros64(jule::U64);
inline jule::I32 _1b188048d_TrailingZeros(jule::U32);
inline jule::I32 _1b1880d84_TrailingZeros32(jule::U32);
inline jule::I32 _1b188112b_TrailingZeros64(jule::U64);
inline jule::I32 _1b188673b_Len32(jule::U32);
inline jule::I32 _1b18869d3_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1b1887693_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1b1888d26_Mul64(jule::U64, jule::U64);
inline jule::U32 _20c8a8657_F32Bits(jule::F32);
inline jule::F32 _20c8a8943_F32FromBits(jule::U32);
inline jule::U64 _20c8a8bda_F64Bits(jule::F64);
inline jule::F64 _20c8a9009_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _20c8ab4e5_Frexp(jule::F64);
inline jule::F64 _1b188cac7_NaN(void);
inline jule::Bool _1b188cc09_IsNaN(jule::F64);
inline jule::F64 _1b188cd3b_Inf(jule::I32);
inline jule::Bool _1b188ce6d_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _1b188d0a0_normalize(jule::F64);
inline jule::F64 _1b188de6e_Log(jule::F64);
inline jule::F64 _1b188e58a_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1b189333b_Modf(jule::F64);
inline jule::F64 _1b189377b_Log2(jule::F64);
inline jule::Str _20b97ed8e_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1b18ba2ca_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1b18ba40c_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1b18b9e01_floatInfo*);
inline jule::Slice<jule::U8> _1b18ba53e_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1b18ba0dd_decimalSlice, jule::I32, jule::U8);
inline void _1b18ba671_roundShortest(_1b18ca75d_decimal*, jule::U64, jule::I32, _1b18b9e01_floatInfo*);
inline jule::Slice<jule::U8> _1b18bab27_fmtE(jule::Slice<jule::U8>, jule::Bool, _1b18ba0dd_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _1b18bb0ab_fmtF(jule::Slice<jule::U8>, jule::Bool, _1b18ba0dd_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _1b18bb6b6_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _1b18b9e01_floatInfo*);
inline jule::Slice<jule::U8> _1b18bbd37_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1b18b9e01_floatInfo*);
inline jule::I32 _1b18bc178_min(jule::I32, jule::I32);
inline jule::I32 _1b18bc4b9_max(jule::I32, jule::I32);
inline jule::U8 _1b18bd0d0_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1b12566e4_ConvError _1b18bd50e_parseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _1b18bd8e9_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _1b18bdd5b_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _1b18be972_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1b18bed6d_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _1b18c1a84_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b18c1d81_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b18c2128_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1b18c3aa8_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1b18c3e93_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1b12566e4_ConvError _1b18c456a_atofHex(jule::Str, _1b18b9e01_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b12566e4_ConvError _1b18c4922_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError _1b18c4bb9_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError _1b18c500a_parseFloatPrefix(jule::Str, jule::I32);
inline jule::Exceptional<jule::F64> _1b18c534b_ParseFloat(jule::Str, jule::I32);
inline void _1b18c5abb_ryuFtoaFixed32(_1b18ba0dd_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _1b18c600b_ryuFtoaFixed64(_1b18ba0dd_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _1b18c67e2_formatDecimal(_1b18ba0dd_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _1b18c6c65_ryuFtoaShortest(_1b18ba0dd_decimalSlice*, jule::U64, jule::I32, _1b18b9e01_floatInfo*);
inline jule::I32 _1b18c700c_mulByLog2Log10(jule::I32);
inline jule::I32 _1b18c72a4_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b18c768e_computeBounds(jule::U64, jule::I32, _1b18b9e01_floatInfo*);
inline void _1b18c7c33_ryuDigits(_1b18ba0dd_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1b18c831b_ryuDigits32(_1b18ba0dd_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b18c8706_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b18c8ae1_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _1b18c8e32_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _1b18c91c9_divmod1e9(jule::U64);
inline void _1b18cbe46_trim(_1b18ca75d_decimal*);
inline void _1b18cc1ee_rightShift(_1b18ca75d_decimal*, jule::U32);
inline jule::Bool _1b18cc661_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str);
inline void _1b18cc8d6_leftShift(_1b18ca75d_decimal*, jule::U32);
inline jule::Bool _1b18ccc27_shouldRoundUp(_1b18ca75d_decimal*, jule::I32);
inline jule::Str _1b18ce344_FmtUint(jule::U64, jule::I32);
inline jule::Str _1b18ce6c9_FmtInt(jule::I64, jule::I32);
inline jule::Str _1b18ce971_Itoa(jule::I32);
inline jule::Str _1b18cec90_small(jule::I32);
inline jule::Bool _1b18d0037_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _1b18d0565_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _1b18d1973_RealKindOf(jule::Str);
inline jule::I32 _1b18d1c1a_BitsizeOf(jule::Str);
inline jule::Str _1b18d2039_IntFromBits(jule::I32);
inline jule::Str _1b18d22d1_UintFromBits(jule::I32);
inline jule::Str _1b18d2578_FloatFromBits(jule::I32);
inline jule::Bool _1b18d3128_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _1b18d33c0_BitsizeOfFloat(jule::F64);
inline jule::I32 _1b18d3667_BitsizeOfInt(jule::I64);
inline jule::I32 _1b18d390e_BitsizeOfUint(jule::U64);
inline void _1b18d3a74_UpdateTarget(void);
inline void _1b18d3bd9_init(void);
inline jule::I64 _1b18d7a23_MinI(jule::Str);
inline jule::I64 _1b18d7d0e_MaxI(jule::Str);
inline jule::U64 _1b18d80a6_MaxU(jule::Str);
inline jule::F64 _1b18d82b5_Min(jule::Str);
inline jule::F64 _1b18d855c_Max(jule::Str);
inline jule::Bool _1b18d89ad_IsI8Compatible(jule::Str);
inline jule::Bool _1b18d8c99_IsI16Compatible(jule::Str);
inline jule::Bool _1b18d9041_IsI32Compatible(jule::Str);
inline jule::Bool _1b18d9360_IsI64Compatible(jule::Str);
inline jule::Bool _1b18d9607_IsU8Compatible(jule::Str);
inline jule::Bool _1b18d989e_IsU16Compatible(jule::Str);
inline jule::Bool _1b18d9b46_IsU32Compatible(jule::Str);
inline jule::Bool _1b18d9eba_IsU64Compatible(jule::Str);
inline jule::Bool _1b18da262_IsF32Compatible(jule::Str);
inline jule::Bool _1b18da509_IsF64Compatible(jule::Str);
inline jule::Bool _1b18da84a_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1b18daae2_IsI16Greater(jule::Str);
inline jule::Bool _1b18dad89_IsI32Greater(jule::Str);
inline jule::Bool _1b18db131_IsI64Greater(jule::Str);
inline jule::Bool _1b18db3c8_IsU16Greater(jule::Str);
inline jule::Bool _1b18db829_IsU32Greater(jule::Str);
inline jule::Bool _1b18dbac1_IsU64Greater(jule::Str);
inline jule::Bool _1b18dbd68_IsF32Greater(jule::Str);
inline jule::Bool _1b18dc110_IsF64Greater(jule::Str);
inline jule::Bool _1b18dc451_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1b18dd485_IsSigInt(jule::Str);
inline jule::Bool _1b18dd771_IsUnsigInt(jule::Str);
inline jule::Bool _1b18dda18_IsInt(jule::Str);
inline jule::Bool _1b18ddd37_IsFloat(jule::Str);
inline jule::Bool _1b18de0ce_IsNum(jule::Str);
inline jule::Bool _1b18de376_IsSigNum(jule::Str);
inline void _1b18e7d0d_lshiftUnsig(_1b18de5da_Const*, _1b18de5da_Const*);
inline void _1b18e810a_rshiftUnsig(_1b18de5da_Const*, _1b18de5da_Const*);
inline jule::Bool _1b300157a_IsAscii(jule::I32);
inline jule::I32 _1b3001701_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1b301873a_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1b3018a37_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1b3018cce_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1b30190dc_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _1b301942d_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _1b3110799_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _1b3116393_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _1b311664b_FmtByDefault(jule::Str*, jule::Any*);
inline void _1b3116a25_applyFmtByDefault(jule::Str*, jule::I32*, jule::Slice<jule::Any>*);
inline void _1b3116e21_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I32*, jule::Slice<jule::Any>*);
inline jule::Str _1b311722e_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1b3117a48_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b2e73244_parameterUsesGenerics(jule::Ptr<_1b2e70263_ParamIns>*, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>*);
inline jule::Ptr<_1b3060e03_TypeSymbol> _1b2e7571e_buildType(jule::Ptr<_1b2e4b77d_TypeDecl>);
inline jule::Ptr<_1b3031b1b_Value> _1b2e75a0a_buildExpr(jule::Ptr<_1b2e50c9e_Expr>);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b2e75ca2_buildTypeAlias(jule::Ptr<_1b2e62a4c_TypeAliasDecl>);
inline jule::Ptr<_1b2e3becc_Field> _1b2e760c1_buildField(jule::Ptr<_1b2e661e3_FieldDecl>);
inline jule::Slice<jule::Ptr<_1b2e3becc_Field>> _1b2e76368_buildFields(jule::Slice<jule::Ptr<_1b2e661e3_FieldDecl>>*);
inline jule::Ptr<_1b2e683e3_Struct> _1b2e76610_buildStruct(jule::Ptr<_1b2e66996_StructDecl>);
inline jule::Ptr<_1b2e6e66e_Param> _1b2e768a7_buildParam(jule::Ptr<_1b2e5bddc_ParamDecl>);
inline jule::Slice<jule::Ptr<_1b2e6e66e_Param>> _1b2e76c2b_buildParams(jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>>*);
inline jule::Ptr<_1b2e6e482_RetType> _1b2e76ec3_buildRetType(jule::Ptr<_1b2e4e891_RetTypeDecl>);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2e7726a_buildFn(jule::Ptr<_1b2e5d20c_FnDecl>);
inline jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _1b2e77512_buildMethods(jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>>*);
inline jule::Ptr<_1b2e8033e_Trait> _1b2e777a9_buildTrait(jule::Ptr<_1b2e670a1_TraitDecl>);
inline jule::Ptr<_1b2e8198e_EnumItem> _1b2e77a51_buildEnumItem(jule::Ptr<_1b2e643ab_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>> _1b2e77ce8_buildEnumItems(jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>>*);
inline jule::Ptr<_1b2e82484_Enum> _1b2e78090_buildEnum(jule::Ptr<_1b2e64dd4_EnumDecl>);
inline jule::Ptr<_1b2e834b8_TypeEnumItem> _1b2e784e1_buildTypeEnumItem(jule::Ptr<_1b2e658da_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>> _1b2e78788_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>>*);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2e78a30_buildTypeEnum(jule::Ptr<_1b2e65ee5_TypeEnumDecl>);
inline jule::Ptr<_1b2ed8034_Var> _1b2e78cc7_buildVar(jule::Ptr<_1b2e5e1db_VarDecl>);
inline jule::Slice<jule::Ptr<_1b2ed8034_Var>> _1b2e7906e_buildVars(jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>>);
inline jule::Ptr<_1b2e87ee5_Impl> _1b2e79316_buildImpl(jule::Ptr<_1b2e676ab_Impl>);
inline jule::Bool _1b2e8738a_matchConstraint(jule::Str*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b2e87676_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e8a080_newScopeCheckerBase(jule::Ptr<_1b2eb48a1_Sema>*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e8a415_newScopeChecker(jule::Ptr<_1b2eb48a1_Sema>*, jule::Ptr<_1b2e71132_FnIns>);
inline jule::Ptr<_1b2e9382a_scopeLabel> _1b2e8a756_findLabelParent(jule::Str, jule::Ptr<_1b2e94ab2_scopeChecker>);
inline jule::Bool _1b2e8aadb_modelIsGotoScope(jule::Any, jule::Ptr<_1b2e8d050_Scope>*);
inline jule::Bool _1b2e8ae2c_stmtIsGotoScope(jule::Any*, jule::Ptr<_1b2e8d050_Scope>*);
inline jule::I32 _1b2e8b26d_countMatchType(jule::Ptr<_1b2e91c9b_Match>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Slice<jule::Ptr<_1b3030a93_Data>> _1b2e8b515_getDatasFromTupleData(jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b2e8bd51_checkMut(jule::Ptr<_1b2eb48a1_Sema>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b2e8c2d5_checkAssign(jule::Ptr<_1b2eb48a1_Sema>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b2e8c57c_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1b2e8c824_isValidStForNextSt(jule::Any*);
inline jule::Bool _1b2e8cabb_stmtIsDef(jule::Any*);
inline jule::Ptr<_1b2ed8034_Var> _1b2ea8e6c_findVarInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b2ea939b_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e683e3_Struct> _1b2ea9786_findStructInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e6e85b_Fn> _1b2ea9be8_findFnInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2e8033e_Trait> _1b2eaa006_findTraitInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1b2e82484_Enum> _1b2eaa347_findEnumInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2eaa688_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str);
inline jule::Any _1b2eaab83_defByIdentPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1b2eb1c88_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1b2eb29e2_isValidModelForRef(jule::Any*);
inline _1cac0bec6_Log _1b2eb2e87_compilerErr(jule::Ptr<_1cb188a5c_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b2eb32c8_impIsLookupable(jule::Ptr<_1b2eab755_ImportInfo>*, jule::Str);
inline void _1b2eb35c5_appendRetVars(jule::Slice<jule::Ptr<_1b2ed8034_Var>>*, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b2eb387d_appendParamVars(jule::Slice<jule::Ptr<_1b2ed8034_Var>>*, jule::Ptr<_1b2e71132_FnIns>*);
inline void _1b2eb3b58_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Ptr<_1b302ac69_SymbolTable> _1b2eb3eaa_findFile(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>*, jule::Ptr<_1cb18dde7_File>*);
inline void _1b2eb441c_pushSugggestion(_1cac0bec6_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b3001998_traitHasReferenceReceiver(jule::Ptr<_1b2e8033e_Trait>*);
inline jule::Bool _1b3001aca_floatAssignable(jule::Str, jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b30184a4_sigAssignable(jule::Str, jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b30185d6_unsigAssignable(jule::Str, jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b3019681_intAssignable(jule::Str, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b305ba25_TypeKind> _1b3029ce0_lenKind(void);
inline jule::Ptr<_1b2e184d6_Directive> _1b30561c3_findDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Str);
inline jule::Any _1b3056558_findBuiltinsImport(jule::Str, jule::Ptr<_1b2eab755_ImportInfo>);
inline void _1b3056767_fitBitsize(jule::Ptr<_1b3030a93_Data>*);
inline void _1b3056a64_makeStructLitAlloc(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e6959d_StructLitExprModel>*);
inline jule::Ptr<_1b2ed8034_Var> _1b3056da5_buildErrorVar(jule::Ptr<_1b2e8d050_Scope>*, jule::Ptr<_1b2e54c81_FnCallExpr>*);
inline jule::Any _1b30571e6_findBuiltinsSema(jule::Str, jule::Ptr<_1b2eb48a1_Sema>);
inline jule::Bool _1b305748d_isOkForShifting(jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b3057845_isInstancedStruct(jule::Ptr<_1b2e687bc_StructIns>);
inline jule::Bool _1b3057ba8_isPtrArithmeticCompatible(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b3057dea_applyCastKindModel(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b30581a3_applyCastKind(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Ptr<_1b3030a93_Data> _1b30583a1_buildVoidData(void);
inline jule::Str _1b305866a_checkDataForIntegerIndexing(jule::Ptr<_1b3030a93_Data>*);
inline void _1b3058934_applyCastModelByEnum(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2e82484_Enum>);
inline void _1b3058bdc_castConstByType(jule::Str*, jule::Ptr<_1b3030a93_Data>*);
inline void _1b30591e8_updateModelToGenericIns(jule::Any*, jule::Ptr<_1b2e71132_FnIns>*);
inline jule::Bool _1b305943a_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1b2e4c493_SubIdentTypeDecl>*);
inline jule::Bool _1b307372e_kindUsesGenerics(jule::Ptr<_1b305ba25_TypeKind>*, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>*);
inline jule::Bool _1b3073ab4_hasDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Str);
inline jule::Bool _1b3073d5b_canGetPtr(jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b307417a_isValidForSptrType(jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b3074422_isValidForRef(jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Bool _1b30746db_isBuiltinStrConvertable(jule::Ptr<_1b305ba25_TypeKind>*);
inline jule::Str _1b3074961_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b3061772_Prim> _1b3074d18_buildPrimType(jule::Str);
inline jule::Ptr<_1b2e683e3_Struct> _1b30750b0_getStructFromKind(jule::Ptr<_1b305ba25_TypeKind>);
inline jule::Bool _1b3075357_isPrim(jule::Str);
inline void _1b3075610_applyImplicitCast(jule::Ptr<_1b305ba25_TypeKind>*, jule::Ptr<_1b3030a93_Data>*);
inline __jule_tuple_x_1b302ac69_SymbolTable__jule_tuple_s_1cac0bec6_Log _1b3078679_buildSymbols(jule::Ptr<_1b2e172e8_Ast>*, jule::Trait<_1b2ea8ad7_Importer>*, jule::Ptr<_1b2e79866_symbolBuilder>);
inline __jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log _1b3078aa8_analyzePackage(jule::Slice<jule::Ptr<_1b2e172e8_Ast>>*, jule::Trait<_1b2ea8ad7_Importer>*, jule::I32*);
inline __jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log _1b3078e93_AnalyzePackage(jule::Slice<jule::Ptr<_1b2e172e8_Ast>>, jule::Trait<_1b2ea8ad7_Importer>, jule::I32);
inline jule::Ptr<_1b2e71132_FnIns> _1b3085059_findBuiltinFn(jule::Str);
inline jule::Ptr<_1b305ad32_TypeAlias> _1b3086b93_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1b30823db_findBuiltinDef(jule::Str);
inline jule::Any _1b308b56b_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1b308a724_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1b308a856_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1b30827d7_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1b3030a93_Data> _1b3117b7a_builtinCallerCommonPlain(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3117e33_builtinCallerCommon(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311831d_builtinCallerCommonMut(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311865e_builtinCallerError(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*);
inline jule::Ptr<_1b3030a93_Data> _1b3118a49_builtinCallerOut(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3118e34_builtinCallerOutln(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311931e_builtinCallerNew(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3119709_builtinCallerPanic(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3119d25_builtinCallerMake(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311a210_builtinCallerAppend(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311a694_callerCopySlice(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311ab28_callerCopyStr(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311b013_builtinCallerCopy(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311b354_callerLenSlice(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311b695_callerLenMap(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311b9d6_callerLenArr(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311bd27_callerLenStr(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311c212_builtinCallerLen(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311c553_callerCapSlice(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311c894_callerCapStr(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311cc7e_builtinCallerCap(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311d213_callerDeleteMap(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311d5ed_builtinCallerDelete(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311d9d8_builtinCallerClone(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311e09e_builtinCallerAssert(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311e412_builtinCallerStdMemSizeOf(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311e830_builtinCallerStdMemAlignOf(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b311ec4d_builtinCallerStdMemFree(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b312017c_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b312059a_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b31209da_builtinCallerStdDebugOut(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Ptr<_1b3030a93_Data> _1b3120dc5_builtinCallerStdDebugOutln(jule::Ptr<_1b3032611_Eval>*, jule::Ptr<_1b2e54c81_FnCallExpr>*, jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b31e92ab_FindModuleFile(jule::Slice<jule::Ptr<_20bad439a_DirEntry>>*);
inline jule::Str _1b31e93dd_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1cac0bec6_Log> _1b31e961e_CheckModuleFile(jule::Str);
inline jule::Ptr<_1b38356c7_FileInfo> _1b38382ce_ParseFile(jule::Ptr<_1cb18dde7_File>);
inline __jule_tuple_x_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log _1b387ec2c_parseFileset(jule::Ptr<_1cb18dde7_File>);
inline jule::Ptr<_1b2e5b716_ScopeTree> _1b3880656_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1b3880942_isSt(jule::Ptr<_1cb188a5c_Token>, jule::Ptr<_1cb188a5c_Token>);
inline jule::Bool _1b3880c83_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _1b3881118_nextStPos(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::I32);
inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool _1b3881459_skipSt(jule::I32*, jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Slice<jule::Ptr<_1b3881756_stmt>> _1b3881aec_splitStmts(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Bool _1b38982d9_isTypeOp(jule::Str*);
inline jule::Bool _1b38985c5_isTypeRange(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Slice<jule::Ptr<_1cb188a5c_Token>> _1b389886c_getBlockExpr(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token _1b3898c02_splitDelim(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::U32);
inline jule::I32 _1b3898e99_findLowestPrecOp(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Ptr<_1b2e52960_IdentExpr> _1b3899241_buildIdentExpr(jule::Ptr<_1cb188a5c_Token>*);
inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_int _1b38994d8_getRangeExprTokens(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Bool _1b389a242_checkAssignTokens(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline _1cac0bec6_Log _1b389b463_makeErr(jule::I32, jule::I32, jule::Ptr<_1cb18dde7_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1cb188a5c_Token>> _1b389b93b_range(jule::I32*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token _1b389bbd3_rangeLast(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline __jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log _1b389c0bd_partsKind(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log _1b389c4a8_parts(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*, jule::U32, jule::Bool);
inline jule::Str _1b389c750_getCloseKindOfBrace(jule::Str);
inline _1cac0bec6_Log _1b389cb3a_compilerErr(jule::Ptr<_1cb188a5c_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1b389d069_pushSuggestion(_1cac0bec6_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1b389d311_tokstoa(jule::Slice<jule::Ptr<_1cb188a5c_Token>>*);
inline jule::Bool _1b38ad376_isPub(jule::Str*);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38adc17_buildVoidType(void);
inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38ade59_buildPrimType(jule::Ptr<_1cb188a5c_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1b31c33b7_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1b31d485c_checkArch(jule::Str);
inline jule::Bool _1b31bd5e3_isPassFileAnnotation(jule::Str);
inline void _1b31d8201_setOsVars(jule::Slice<jule::Str>*);
inline void _1b31d8454_setArchVars(jule::Slice<jule::Str>*);
inline void _1b31d870c_initVars(jule::Slice<jule::Str>*, _1b31d7de3_CompileInfo*);
inline jule::Slice<jule::U8> _1b320331a_readBuff(jule::Str);
inline _1cac0bec6_Log _1b32c9347_flatCompilerErr(jule::Str);
inline void _1b31c5452_pushPasses(jule::Ptr<_1b2eae6ae_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1b34a1244_getAllUniquePasses(jule::Ptr<_1b2eae6ae_Package>*, jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>>);
inline _1b31d7de3_CompileInfo _1b34b270b_buildCompileInfo(void);
inline void _1b39b22e3_EliminateDefines(jule::Ptr<_1b345d553_IR>*);
inline jule::Ptr<_1b2e184d6_Directive> _1b39b2678_findDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Str);
inline jule::Bool _1b39b29b9_hasDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Str);
inline void _1b39b6616_eliminateDeadCodeOfScope(jule::Ptr<_1b2e8d050_Scope>);
inline void _1b39b689c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>*);
inline void _1b39b6ade_eliminateFunctionsScopePackage(jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b39b6d86_eliminateScopePackage(jule::Ptr<_1b2eae6ae_Package>*);
inline void _1b39b7095_EliminateScopes(jule::Ptr<_1b345d553_IR>*);
inline jule::Bool _1cb125a1b_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1cb145761_isConstantValidConditionalCase(jule::Ptr<_1b2e8d44b_If>*);
inline jule::Bool _1b2c66c2a_isUnreachableExpr(jule::Any*);
inline jule::Bool _1cb08e424_isConstantValidMatchCase(jule::Ptr<_1b2e927e6_Case>*);
inline jule::Bool _1cb0c72c5_isUnreachableConditionalCase(jule::Ptr<_1b2e8d44b_If>*);
inline jule::Bool _1cb0d106a_isUnreachableMatchCase(jule::Ptr<_1b2e927e6_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1b312214b_checkForBitShiftOpt(jule::Ptr<_1b2e68cea_OperandExprModel>*, jule::Ptr<_1b2e68cea_OperandExprModel>*);
inline void _1b312269b_PushOptLevel(jule::I32);
inline void _1b3944462_detectEnabled(void);
inline void _1b39c3d60_Throw(jule::Str);
inline jule::U64 _1b421c663_unix(void);
inline jule::U64 _1b421c971_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1b421cd06_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1b416ab66_isCopyOptimizable(jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b416aeeb_isIterCopyOptimizable(jule::Ptr<_1b3030a93_Data>*, jule::Ptr<_1b2ed8034_Var>*);
inline jule::Str _1b417a37e_decomposeCommonEsq(jule::U8);
inline jule::Str _1b417a66a_sbtoa(jule::U8);
inline jule::Str _1b417a912_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1b417ac31_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1b417b03e_ftoa(jule::F64, jule::I32);
inline jule::Str _1b417b2d6_itoa(jule::I64);
inline jule::Str _1b417b57d_utoa(jule::U64);
inline jule::Bool _1b417b935_isForwarded(jule::Ptr<_1b2e8d050_Scope>*);
inline jule::Bool _1b417bbee_isBuiltinCallHasDebuginf(jule::Ptr<_1b2e69b64_FnCallExprModel>*);
inline jule::Bool _1b417be30_isExprComesFromBind(jule::Ptr<_1b3030a93_Data>*);
inline jule::Bool _1b417c1c7_isAny(jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1b42270a7_iterFiles(jule::Ptr<_1b2eae6ae_Package>*, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>);
inline jule::Str _1b4227393_concatAllParts(jule::Slice<jule::Ptr<_1cb188a5c_Token>>);
inline jule::Ptr<_1b2e184d6_Directive> _1b42352c4_findDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Str);
inline jule::Bool _1b4235659_hasDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>*, jule::Str);
inline jule::Bool _1b4235901_shouldInitialized(jule::Ptr<_1b305ba25_TypeKind>*);
inline void _1cabde23e_printErrorMessage(jule::Str);
inline void _1cabd2dae_help(jule::Slice<jule::Str>*);
inline void _1cabd2ee1_version(jule::Slice<jule::Str>*);
inline void _1cabe0b03_toolDistos(void);
inline void _1cabe0c35_toolDistarch(void);
inline void _1cabeb9dd_tool(jule::Slice<jule::Str>*);
inline void _1cabebb20_julenv(jule::Slice<jule::Str>*);
inline void _1cabee98b_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1cabcac97_processCommand(jule::Slice<jule::Str>*);
inline void _1cabcadc9_showInfo(void);
void entry_point(void);
inline void _1caca0443_enableVtp(void);
inline void _1caca0575_init(void);
inline void _1b424435a_init(void);
inline jule::Ptr<_20c81243a_File> _1b411a6a4_openOutput(jule::Str*);
inline void _1b40a74dc_clearObjects(void);
inline void _1b3c69de7_compileIr(jule::Str, jule::Str);
inline jule::Bool _1b423eac5_isCppSourceFile(jule::Str);
inline void _1b412d5da_pushCompCmdClang(jule::Str*);
inline void _1b3dac6aa_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1b424e5da_genCompileCmd(jule::Str, jule::Ptr<_1b345d553_IR>*);
inline jule::Str _1b42536cc_getCompilePath(void);
inline void _1b3ebee82_applyTargetIndependentOptimizations(jule::Ptr<_1b345d553_IR>*);
inline void _1b423a8e5_checkCompilerFlag(void);
inline void _1b3a5bba6_checkTargetArch(jule::Str);
inline void _1b3a5bcd8_checkTargetOs(jule::Str);
inline void _1b4260761_checkTargetFlag(jule::Str*);
inline void _1b4260893_checkOptFlag(jule::Str*);
inline void _1b4260c06_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b4260d38_checkFlags(jule::Slice<jule::Str>*);
inline void _1b4260e6a_setupSemaFlags(jule::I32*);
inline jule::Ptr<_1b345d553_IR> _1b426109c_buildIr(jule::Slice<jule::Str>*);
inline void _1b42611ce_compileCommand(jule::Slice<jule::Str>*);


struct _1b2ea8ad7_ImporterMptrData {
	void(*_1b2ea7a2b_SetModPath)(jule::Trait<_1b2ea8ad7_Importer>, jule::Str);
	jule::Str(*_1b2ea7c4b_GetModPath)(jule::Trait<_1b2ea8ad7_Importer>);
	jule::Str(*_1b2ea8059_ModById)(jule::Trait<_1b2ea8ad7_Importer>, jule::I32);
	jule::Ptr<_1b2eab755_ImportInfo>(*_1b2ea8367_GetImport)(jule::Trait<_1b2ea8ad7_Importer>, jule::Str);
	__jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log(*_1b2ea871e_ImportPackage)(jule::Trait<_1b2ea8ad7_Importer>, jule::Str, jule::Bool);
	void(*_1b2ea8994_Imported)(jule::Trait<_1b2ea8ad7_Importer>, jule::Ptr<_1b2eab755_ImportInfo>);
};

struct _1b305b5e6_KindMptrData {
	jule::Str(*_1b305b195_Str)(jule::Trait<_1b305b5e6_Kind>);
	jule::Bool(*_1b305b4a3_Equal)(jule::Trait<_1b305b5e6_Kind>, jule::Ptr<_1b305ba25_TypeKind>);
};

struct _1b3077997_LookupMptrData {
	jule::Ptr<_1b2eab755_ImportInfo>(*_1b3075b4e_FindPackage)(jule::Trait<_1b3077997_Lookup>, jule::Str);
	jule::Ptr<_1b2eab755_ImportInfo>(*_1b3075e5c_SelectPackage)(jule::Trait<_1b3077997_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>);
	jule::Ptr<_1b2ed8034_Var>(*_1b3076314_FindVar)(jule::Trait<_1b3077997_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b305ad32_TypeAlias>(*_1b30766bb_FindTypeAlias)(jule::Trait<_1b3077997_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b2e683e3_Struct>(*_1b3076a73_FindStruct)(jule::Trait<_1b3077997_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b2e6e85b_Fn>(*_1b3076e2a_FindFn)(jule::Trait<_1b3077997_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b2e8033e_Trait>(*_1b3077238_FindTrait)(jule::Trait<_1b3077997_Lookup>, jule::Str);
	jule::Ptr<_1b2e82484_Enum>(*_1b3077546_FindEnum)(jule::Trait<_1b3077997_Lookup>, jule::Str);
	jule::Ptr<_1b2e83a7e_TypeEnum>(*_1b3077854_FindTypeEnum)(jule::Trait<_1b3077997_Lookup>, jule::Str);
};

struct _1b3a75c69_CommonFlagMptrData {
	jule::Str(*_1b425a0eb_Name)(jule::Trait<_1b3a75c69_CommonFlag>);
	jule::I32(*_1b425a22d_Short)(jule::Trait<_1b3a75c69_CommonFlag>);
	jule::Str(*_1b425a360_What)(jule::Trait<_1b3a75c69_CommonFlag>);
	void(*_1b425a492_Reset)(jule::Trait<_1b3a75c69_CommonFlag>);
};



inline void _1b2ea7a2b_SetModPath_0(jule::Trait<_1b2ea8ad7_Importer> _self_, jule::Str _1729_path) {
	_1b3342239_SetModPath(_self_.safe_ptr<_1b37a5db7_JuleImporter>(), _1729_path);
}
inline jule::Str _1b2ea7c4b_GetModPath_0(jule::Trait<_1b2ea8ad7_Importer> _self_) {
	return _1b33538aa_GetModPath(_self_.safe_ptr<_1b37a5db7_JuleImporter>());
}
inline jule::Str _1b2ea8059_ModById_0(jule::Trait<_1b2ea8ad7_Importer> _self_, jule::I32 _2522_id) {
	return _1b3380002_ModById(_self_.safe_ptr<_1b37a5db7_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b2ea8367_GetImport_0(jule::Trait<_1b2ea8ad7_Importer> _self_, jule::Str _3128_path) {
	return _1b3384622_GetImport(_self_.safe_ptr<_1b37a5db7_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log _1b2ea871e_ImportPackage_0(jule::Trait<_1b2ea8ad7_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1b344752b_ImportPackage(_self_.safe_ptr<_1b37a5db7_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1b2ea8994_Imported_0(jule::Trait<_1b2ea8ad7_Importer> _self_, jule::Ptr<_1b2eab755_ImportInfo> _4131__0) {
	_1b34562a4_Imported(_self_.safe_ptr<_1b37a5db7_JuleImporter>(), _4131__0);
}
inline jule::Str _1b305b195_Str_0(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b2e3db9e_Str(_self_.safe_ptr<_1b2e687bc_StructIns>());
}
inline jule::Bool _1b305b4a3_Equal_0(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b2e3ed04_Equal(_self_.data.as<_1b2e687bc_StructIns>(), _5621_other);
}
inline jule::Str _1b305b195_Str_1(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b2e71462_Str(_self_.safe_ptr<_1b2e71132_FnIns>());
}
inline jule::Bool _1b305b4a3_Equal_1(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b2e71770_Equal(_self_.data.as<_1b2e71132_FnIns>(), _5621_other);
}
inline jule::Str _1b305b195_Str_2(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b2e8073a_Str(_self_.safe_ptr<_1b2e8033e_Trait>());
}
inline jule::Bool _1b305b4a3_Equal_2(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b2e80a48_Equal(_self_.data.as<_1b2e8033e_Trait>(), _5621_other);
}
inline jule::Str _1b305b195_Str_3(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b2e827e7_Str(_self_.safe_ptr<_1b2e82484_Enum>());
}
inline jule::Bool _1b305b4a3_Equal_3(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b2e82b05_Equal(_self_.data.as<_1b2e82484_Enum>(), _5621_other);
}
inline jule::Str _1b305b195_Str_4(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b2e83dae_Str(_self_.safe_ptr<_1b2e83a7e_TypeEnum>());
}
inline jule::Bool _1b305b4a3_Equal_4(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b2e841bc_Equal(_self_.data.as<_1b2e83a7e_TypeEnum>(), _5621_other);
}
inline jule::Str _1b305b195_Str_5(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b305be21_Str(_self_.safe_ptr<_1b305ba25_TypeKind>());
}
inline jule::Bool _1b305b4a3_Equal_5(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b305c22e_Equal(_self_.data.as<_1b305ba25_TypeKind>(), _5621_other);
}
inline jule::Str _1b305b195_Str_6(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b3061ad5_Str(_self_.safe_ptr<_1b3061772_Prim>());
}
inline jule::Bool _1b305b4a3_Equal_6(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b3061de3_Equal(_self_.data.as<_1b3061772_Prim>(), _5621_other);
}
inline jule::Str _1b305b195_Str_7(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b3065369_Str(_self_.safe_ptr<_1b3065006_Sptr>());
}
inline jule::Bool _1b305b4a3_Equal_7(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b3065677_Equal(_self_.data.as<_1b3065006_Sptr>(), _5621_other);
}
inline jule::Str _1b305b195_Str_8(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b3065e6e_Str(_self_.safe_ptr<_1b3065963_Slc>());
}
inline jule::Bool _1b305b4a3_Equal_8(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b306627c_Equal(_self_.data.as<_1b3065963_Slc>(), _5621_other);
}
inline jule::Str _1b305b195_Str_9(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b3066854_Str(_self_.safe_ptr<_1b30664e1_Tuple>());
}
inline jule::Bool _1b305b4a3_Equal_9(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b3066b62_Equal(_self_.data.as<_1b30664e1_Tuple>(), _5621_other);
}
inline jule::Str _1b305b195_Str_10(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b306737c_Str(_self_.safe_ptr<_1b3067019_Map>());
}
inline jule::Bool _1b305b4a3_Equal_10(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b306768a_Equal(_self_.data.as<_1b3067019_Map>(), _5621_other);
}
inline jule::Str _1b305b195_Str_11(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b3067e71_Str(_self_.safe_ptr<_1b3067b0d_Arr>());
}
inline jule::Bool _1b305b4a3_Equal_11(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b306827e_Equal(_self_.data.as<_1b3067b0d_Arr>(), _5621_other);
}
inline jule::Str _1b305b195_Str_12(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b30688cd_Str(_self_.safe_ptr<_1b306856a_Ptr>());
}
inline jule::Bool _1b305b4a3_Equal_12(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b3068bdb_Equal(_self_.data.as<_1b306856a_Ptr>(), _5621_other);
}
inline jule::Str _1b305b195_Str_13(jule::Trait<_1b305b5e6_Kind> _self_) {
	return _1b422832d_Str(_self_.safe_ptr<_1b4228075_customType>());
}
inline jule::Bool _1b305b4a3_Equal_13(jule::Trait<_1b305b5e6_Kind> _self_, jule::Ptr<_1b305ba25_TypeKind> _5621_other) {
	return _1b422863b_Equal(_self_.data.as<_1b4228075_customType>(), _5621_other);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075b4e_FindPackage_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _930_ident) {
	return _1b2e95046_FindPackage(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075e5c_SelectPackage_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _1332_selector) {
	return _1b2e95354_SelectPackage(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1b2ed8034_Var> _1b3076314_FindVar_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1b2e9570b_FindVar(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1b305ad32_TypeAlias> _1b30766bb_FindTypeAlias_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1b2e95ab3_FindTypeAlias(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1b2e683e3_Struct> _1b3076a73_FindStruct_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1b2e95e6a_FindStruct(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1b2e6e85b_Fn> _1b3076e2a_FindFn_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1b2e96322_FindFn(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1b2e8033e_Trait> _1b3077238_FindTrait_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3328_ident) {
	return _1b2e96630_FindTrait(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1b2e82484_Enum> _1b3077546_FindEnum_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3727_ident) {
	return _1b2e9693d_FindEnum(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b3077854_FindTypeEnum_0(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _4131_ident) {
	return _1b2e96c4b_FindTypeEnum(_self_.safe_ptr<_1b2e94ab2_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075b4e_FindPackage_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _930_ident) {
	return _1b2eabc72_FindPackage(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075e5c_SelectPackage_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _1332_selector) {
	return _1b2eac080_SelectPackage(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1b2ed8034_Var> _1b3076314_FindVar_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1b2eac437_FindVar(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1b305ad32_TypeAlias> _1b30766bb_FindTypeAlias_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1b2eac7de_FindTypeAlias(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1b2e683e3_Struct> _1b3076a73_FindStruct_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1b2eacb96_FindStruct(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1b2e6e85b_Fn> _1b3076e2a_FindFn_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1b2ead04d_FindFn(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1b2e8033e_Trait> _1b3077238_FindTrait_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3328_ident) {
	return _1b2ead35b_FindTrait(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1b2e82484_Enum> _1b3077546_FindEnum_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3727_ident) {
	return _1b2ead669_FindEnum(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b3077854_FindTypeEnum_1(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _4131_ident) {
	return _1b2ead977_FindTypeEnum(_self_.safe_ptr<_1b2eab755_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075b4e_FindPackage_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _930_ident) {
	return _1b2eaeb87_FindPackage(_self_.safe_ptr<_1b2eae6ae_Package>(), _930_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075e5c_SelectPackage_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _1332_selector) {
	return _1b2eaee95_SelectPackage(_self_.safe_ptr<_1b2eae6ae_Package>(), _1332_selector);
}
inline jule::Ptr<_1b2ed8034_Var> _1b3076314_FindVar_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1b2eb034c_FindVar(_self_.safe_ptr<_1b2eae6ae_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1b305ad32_TypeAlias> _1b30766bb_FindTypeAlias_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1b2eb0704_FindTypeAlias(_self_.safe_ptr<_1b2eae6ae_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1b2e683e3_Struct> _1b3076a73_FindStruct_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1b2eb0aab_FindStruct(_self_.safe_ptr<_1b2eae6ae_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1b2e6e85b_Fn> _1b3076e2a_FindFn_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1b2eb0e63_FindFn(_self_.safe_ptr<_1b2eae6ae_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1b2e8033e_Trait> _1b3077238_FindTrait_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3328_ident) {
	return _1b2eb1271_FindTrait(_self_.safe_ptr<_1b2eae6ae_Package>(), _3328_ident);
}
inline jule::Ptr<_1b2e82484_Enum> _1b3077546_FindEnum_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3727_ident) {
	return _1b2eb157e_FindEnum(_self_.safe_ptr<_1b2eae6ae_Package>(), _3727_ident);
}
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b3077854_FindTypeEnum_2(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _4131_ident) {
	return _1b2eb188c_FindTypeEnum(_self_.safe_ptr<_1b2eae6ae_Package>(), _4131_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075b4e_FindPackage_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _930_ident) {
	return _1b2eb4dbd_FindPackage(_self_.safe_ptr<_1b2eb48a1_Sema>(), _930_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075e5c_SelectPackage_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _1332_selector) {
	return _1b2eb51cb_SelectPackage(_self_.safe_ptr<_1b2eb48a1_Sema>(), _1332_selector);
}
inline jule::Ptr<_1b2ed8034_Var> _1b3076314_FindVar_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1b2eb5583_FindVar(_self_.safe_ptr<_1b2eb48a1_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1b305ad32_TypeAlias> _1b30766bb_FindTypeAlias_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1b2eb593a_FindTypeAlias(_self_.safe_ptr<_1b2eb48a1_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1b2e683e3_Struct> _1b3076a73_FindStruct_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1b2eb5ce2_FindStruct(_self_.safe_ptr<_1b2eb48a1_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1b2e6e85b_Fn> _1b3076e2a_FindFn_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1b2eb6199_FindFn(_self_.safe_ptr<_1b2eb48a1_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1b2e8033e_Trait> _1b3077238_FindTrait_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3328_ident) {
	return _1b2eb64a7_FindTrait(_self_.safe_ptr<_1b2eb48a1_Sema>(), _3328_ident);
}
inline jule::Ptr<_1b2e82484_Enum> _1b3077546_FindEnum_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3727_ident) {
	return _1b2eb67b5_FindEnum(_self_.safe_ptr<_1b2eb48a1_Sema>(), _3727_ident);
}
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b3077854_FindTypeEnum_3(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _4131_ident) {
	return _1b2eb6ac3_FindTypeEnum(_self_.safe_ptr<_1b2eb48a1_Sema>(), _4131_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075b4e_FindPackage_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _930_ident) {
	return _1b302b286_FindPackage(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1b2eab755_ImportInfo> _1b3075e5c_SelectPackage_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _1332_selector) {
	return _1b302b594_SelectPackage(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1b2ed8034_Var> _1b3076314_FindVar_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1b302b94b_FindVar(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1b305ad32_TypeAlias> _1b30766bb_FindTypeAlias_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1b302bd03_FindTypeAlias(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1b2e683e3_Struct> _1b3076a73_FindStruct_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1b302c1aa_FindStruct(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1b2e6e85b_Fn> _1b3076e2a_FindFn_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1b302c562_FindFn(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1b2e8033e_Trait> _1b3077238_FindTrait_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3328_ident) {
	return _1b302c870_FindTrait(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1b2e82484_Enum> _1b3077546_FindEnum_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _3727_ident) {
	return _1b302cb7d_FindEnum(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b3077854_FindTypeEnum_4(jule::Trait<_1b3077997_Lookup> _self_, jule::Str _4131_ident) {
	return _1b302ce8b_FindTypeEnum(_self_.safe_ptr<_1b302ac69_SymbolTable>(), _4131_ident);
}
inline jule::Str _1b425a0eb_Name_0(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b6500c85_Name(_self_.safe_ptr<_1b6500999_Flag>());
}
inline jule::I32 _1b425a22d_Short_0(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650113c_Short(_self_.safe_ptr<_1b6500999_Flag>());
}
inline jule::Str _1b425a360_What_0(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b6500db7_What(_self_.safe_ptr<_1b6500999_Flag>());
}
inline void _1b425a492_Reset_0(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	_1b6500ee9_Reset(_self_.safe_ptr<_1b6500999_Flag>());
}
inline jule::Str _1b425a0eb_Name_1(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b6504195_Name(_self_.safe_ptr<_1b6504607_Flag>());
}
inline jule::I32 _1b425a22d_Short_1(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b6504b57_Short(_self_.safe_ptr<_1b6504607_Flag>());
}
inline jule::Str _1b425a360_What_1(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b65048e3_What(_self_.safe_ptr<_1b6504607_Flag>());
}
inline void _1b425a492_Reset_1(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	_1b6504a25_Reset(_self_.safe_ptr<_1b6504607_Flag>());
}
inline jule::Str _1b425a0eb_Name_2(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650795c_Name(_self_.safe_ptr<_1b6507dbe_Flag>());
}
inline jule::I32 _1b425a22d_Short_2(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650841e_Short(_self_.safe_ptr<_1b6507dbe_Flag>());
}
inline jule::Str _1b425a360_What_2(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b65081aa_What(_self_.safe_ptr<_1b6507dbe_Flag>());
}
inline void _1b425a492_Reset_2(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	_1b65082dc_Reset(_self_.safe_ptr<_1b6507dbe_Flag>());
}
inline jule::Str _1b425a0eb_Name_3(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650b268_Name(_self_.safe_ptr<_1b650b6ca_Flag>());
}
inline jule::I32 _1b425a22d_Short_3(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650bc2a_Short(_self_.safe_ptr<_1b650b6ca_Flag>());
}
inline jule::Str _1b425a360_What_3(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650b9b6_What(_self_.safe_ptr<_1b650b6ca_Flag>());
}
inline void _1b425a492_Reset_3(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	_1b650bae8_Reset(_self_.safe_ptr<_1b650b6ca_Flag>());
}
inline jule::Str _1b425a0eb_Name_4(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b650ea30_Name(_self_.safe_ptr<_1b650ee92_Flag>());
}
inline jule::I32 _1b425a22d_Short_4(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b65104e2_Short(_self_.safe_ptr<_1b650ee92_Flag>());
}
inline jule::Str _1b425a360_What_4(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	return _1b651027d_What(_self_.safe_ptr<_1b650ee92_Flag>());
}
inline void _1b425a492_Reset_4(jule::Trait<_1b3a75c69_CommonFlag> _self_) {
	_1b65103b0_Reset(_self_.safe_ptr<_1b650ee92_Flag>());
}


static _1b2ea8ad7_ImporterMptrData _1b2ea8ad7_Importer_mptr_data[] = {
	{
		._1b2ea7a2b_SetModPath=_1b2ea7a2b_SetModPath_0,
		._1b2ea7c4b_GetModPath=_1b2ea7c4b_GetModPath_0,
		._1b2ea8059_ModById=_1b2ea8059_ModById_0,
		._1b2ea8367_GetImport=_1b2ea8367_GetImport_0,
		._1b2ea871e_ImportPackage=_1b2ea871e_ImportPackage_0,
		._1b2ea8994_Imported=_1b2ea8994_Imported_0,
	},
};
static _1b305b5e6_KindMptrData _1b305b5e6_Kind_mptr_data[] = {
	{
		._1b305b195_Str=_1b305b195_Str_0,
		._1b305b4a3_Equal=_1b305b4a3_Equal_0,
	},
	{
		._1b305b195_Str=_1b305b195_Str_1,
		._1b305b4a3_Equal=_1b305b4a3_Equal_1,
	},
	{
		._1b305b195_Str=_1b305b195_Str_2,
		._1b305b4a3_Equal=_1b305b4a3_Equal_2,
	},
	{
		._1b305b195_Str=_1b305b195_Str_3,
		._1b305b4a3_Equal=_1b305b4a3_Equal_3,
	},
	{
		._1b305b195_Str=_1b305b195_Str_4,
		._1b305b4a3_Equal=_1b305b4a3_Equal_4,
	},
	{
		._1b305b195_Str=_1b305b195_Str_5,
		._1b305b4a3_Equal=_1b305b4a3_Equal_5,
	},
	{
		._1b305b195_Str=_1b305b195_Str_6,
		._1b305b4a3_Equal=_1b305b4a3_Equal_6,
	},
	{
		._1b305b195_Str=_1b305b195_Str_7,
		._1b305b4a3_Equal=_1b305b4a3_Equal_7,
	},
	{
		._1b305b195_Str=_1b305b195_Str_8,
		._1b305b4a3_Equal=_1b305b4a3_Equal_8,
	},
	{
		._1b305b195_Str=_1b305b195_Str_9,
		._1b305b4a3_Equal=_1b305b4a3_Equal_9,
	},
	{
		._1b305b195_Str=_1b305b195_Str_10,
		._1b305b4a3_Equal=_1b305b4a3_Equal_10,
	},
	{
		._1b305b195_Str=_1b305b195_Str_11,
		._1b305b4a3_Equal=_1b305b4a3_Equal_11,
	},
	{
		._1b305b195_Str=_1b305b195_Str_12,
		._1b305b4a3_Equal=_1b305b4a3_Equal_12,
	},
	{
		._1b305b195_Str=_1b305b195_Str_13,
		._1b305b4a3_Equal=_1b305b4a3_Equal_13,
	},
};
static _1b3077997_LookupMptrData _1b3077997_Lookup_mptr_data[] = {
	{
		._1b3075b4e_FindPackage=_1b3075b4e_FindPackage_0,
		._1b3075e5c_SelectPackage=_1b3075e5c_SelectPackage_0,
		._1b3076314_FindVar=_1b3076314_FindVar_0,
		._1b30766bb_FindTypeAlias=_1b30766bb_FindTypeAlias_0,
		._1b3076a73_FindStruct=_1b3076a73_FindStruct_0,
		._1b3076e2a_FindFn=_1b3076e2a_FindFn_0,
		._1b3077238_FindTrait=_1b3077238_FindTrait_0,
		._1b3077546_FindEnum=_1b3077546_FindEnum_0,
		._1b3077854_FindTypeEnum=_1b3077854_FindTypeEnum_0,
	},
	{
		._1b3075b4e_FindPackage=_1b3075b4e_FindPackage_1,
		._1b3075e5c_SelectPackage=_1b3075e5c_SelectPackage_1,
		._1b3076314_FindVar=_1b3076314_FindVar_1,
		._1b30766bb_FindTypeAlias=_1b30766bb_FindTypeAlias_1,
		._1b3076a73_FindStruct=_1b3076a73_FindStruct_1,
		._1b3076e2a_FindFn=_1b3076e2a_FindFn_1,
		._1b3077238_FindTrait=_1b3077238_FindTrait_1,
		._1b3077546_FindEnum=_1b3077546_FindEnum_1,
		._1b3077854_FindTypeEnum=_1b3077854_FindTypeEnum_1,
	},
	{
		._1b3075b4e_FindPackage=_1b3075b4e_FindPackage_2,
		._1b3075e5c_SelectPackage=_1b3075e5c_SelectPackage_2,
		._1b3076314_FindVar=_1b3076314_FindVar_2,
		._1b30766bb_FindTypeAlias=_1b30766bb_FindTypeAlias_2,
		._1b3076a73_FindStruct=_1b3076a73_FindStruct_2,
		._1b3076e2a_FindFn=_1b3076e2a_FindFn_2,
		._1b3077238_FindTrait=_1b3077238_FindTrait_2,
		._1b3077546_FindEnum=_1b3077546_FindEnum_2,
		._1b3077854_FindTypeEnum=_1b3077854_FindTypeEnum_2,
	},
	{
		._1b3075b4e_FindPackage=_1b3075b4e_FindPackage_3,
		._1b3075e5c_SelectPackage=_1b3075e5c_SelectPackage_3,
		._1b3076314_FindVar=_1b3076314_FindVar_3,
		._1b30766bb_FindTypeAlias=_1b30766bb_FindTypeAlias_3,
		._1b3076a73_FindStruct=_1b3076a73_FindStruct_3,
		._1b3076e2a_FindFn=_1b3076e2a_FindFn_3,
		._1b3077238_FindTrait=_1b3077238_FindTrait_3,
		._1b3077546_FindEnum=_1b3077546_FindEnum_3,
		._1b3077854_FindTypeEnum=_1b3077854_FindTypeEnum_3,
	},
	{
		._1b3075b4e_FindPackage=_1b3075b4e_FindPackage_4,
		._1b3075e5c_SelectPackage=_1b3075e5c_SelectPackage_4,
		._1b3076314_FindVar=_1b3076314_FindVar_4,
		._1b30766bb_FindTypeAlias=_1b30766bb_FindTypeAlias_4,
		._1b3076a73_FindStruct=_1b3076a73_FindStruct_4,
		._1b3076e2a_FindFn=_1b3076e2a_FindFn_4,
		._1b3077238_FindTrait=_1b3077238_FindTrait_4,
		._1b3077546_FindEnum=_1b3077546_FindEnum_4,
		._1b3077854_FindTypeEnum=_1b3077854_FindTypeEnum_4,
	},
};
static _1b3a75c69_CommonFlagMptrData _1b3a75c69_CommonFlag_mptr_data[] = {
	{
		._1b425a0eb_Name=_1b425a0eb_Name_0,
		._1b425a22d_Short=_1b425a22d_Short_0,
		._1b425a360_What=_1b425a360_What_0,
		._1b425a492_Reset=_1b425a492_Reset_0,
	},
	{
		._1b425a0eb_Name=_1b425a0eb_Name_1,
		._1b425a22d_Short=_1b425a22d_Short_1,
		._1b425a360_What=_1b425a360_What_1,
		._1b425a492_Reset=_1b425a492_Reset_1,
	},
	{
		._1b425a0eb_Name=_1b425a0eb_Name_2,
		._1b425a22d_Short=_1b425a22d_Short_2,
		._1b425a360_What=_1b425a360_What_2,
		._1b425a492_Reset=_1b425a492_Reset_2,
	},
	{
		._1b425a0eb_Name=_1b425a0eb_Name_3,
		._1b425a22d_Short=_1b425a22d_Short_3,
		._1b425a360_What=_1b425a360_What_3,
		._1b425a492_Reset=_1b425a492_Reset_3,
	},
	{
		._1b425a0eb_Name=_1b425a0eb_Name_4,
		._1b425a22d_Short=_1b425a22d_Short_4,
		._1b425a360_What=_1b425a360_What_4,
		._1b425a492_Reset=_1b425a492_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e71132_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1b2e71132_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ed8034_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1b2ed8034_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e687bc_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1b2e687bc_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e8033e_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1b2e8033e_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e676ab_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1b2e676ab_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e62a4c_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1b2e62a4c_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e66996_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1b2e66996_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5d20c_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1b2e5d20c_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e670a1_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1b2e670a1_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5e1db_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1b2e5e1db_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e64dd4_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1b2e64dd4_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e65ee5_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1b2e65ee5_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4bd44_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b2e4bd44_IdentTypeDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e9078e_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1b2e9078e_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e8d050_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1b2e8d050_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6d618_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b3030a93_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1b3030a93_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6e0a8_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1b2e6e0a8_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6c8e2_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6be52_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6ba78_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6bc65_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6c32b_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6c518_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6d42b_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1b2e6d42b_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6abba_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6e295_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1b2e6e295_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e69b64_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1b2e69b64_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e8daab_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1b2e8daab_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e8dd97_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1b2e8dd97_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e604c8_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1b2e604c8_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e8e31a_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1b2e8e31a_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e60d69_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1b2e60d69_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e8ec00_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1b2e8ec00_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e900eb_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1b2e900eb_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e90a7a_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1b2e90a7a_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e90e32_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1b2e90e32_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e913a5_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1b2e913a5_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6a03d_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1b2e6a03d_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e9175c_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1b2e9175c_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b18de5da_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1b18de5da_Const> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e91c9b_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1b2e91c9b_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e92d9b_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1b2e92d9b_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e904a3_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1b2e904a3_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e93220_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1b2e93220_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5b716_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1b2e5b716_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e50c9e_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1b2e50c9e_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e62376_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1b2e62376_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5ec03_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1b2e5ec03_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e615c8_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1b2e615c8_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e58e2d_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1b2e58e2d_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e592d5_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1b2e592d5_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5a21a_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1b2e5a21a_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e63696_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1b2e63696_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e595c1_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1b2e595c1_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e61221_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1b2e61221_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5e593_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1b2e5e593_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e51640_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1b2e51640_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6e85b_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1b2e6e85b_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e683e3_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1b2e683e3_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b305ad32_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1b305ad32_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e82484_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1b2e82484_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e83a7e_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1b2e83a7e_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6a9cd_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6adeb_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6b4b2_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1b2e6b4b2_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6b69e_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e691c4_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1b2e691c4_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type75_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type75_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=__jule_any_type75_eq, .to_str=__jule_any_type75_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type75 && __jule_any_type75_eq(any.data.alloc, (void*)&other); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4dc8b_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1b2e4dc8b_ArrTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4d032_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1b2e4d032_SlcTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4d609_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1b2e4d609_PtrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4cb36_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1b2e4cb36_SptrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4e4d9_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1b2e4e4d9_MapTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4d31d_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1b2e4d31d_TupleTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e53521_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1b2e53521_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e69d51_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1b2e69d51_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e55710_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1b2e55710_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e56ba6_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1b2e56ba6_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e52960_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1b2e52960_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5192b_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1b2e5192b_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6b88b_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1b2e6b88b_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6dbce_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1b2e6dbce_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b305ba25_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1b305ba25_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6b2c5_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1b2e6b2c5_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e54203_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1b2e54203_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4c493_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1b2e4c493_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e53169_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1b2e53169_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4b77d_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1b2e4b77d_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e53c80_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1b2e53c80_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e4c84a_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1b2e4c84a_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6a7e1_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1b2e6a7e1_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type99_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type99_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=__jule_any_type99_eq, .to_str=__jule_any_type99_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type99 && __jule_any_type99_eq(any.data.alloc, (void*)&other); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e69977_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1b2e69977_CastingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5738d_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1b2e5738d_SliceExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6959d_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1b2e6959d_StructLitExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6b0d8_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1b2e6b0d8_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6a604_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1b2e6a604_MapExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6a22a_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1b2e6a22a_AnonFnExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e5108a_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1b2e5108a_RangeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e51cd3_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1b2e51cd3_LitExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e524dc_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1b2e524dc_UnsafeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e57c0c_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1b2e57c0c_IndexingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e58317_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1b2e58317_SlicingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e538c8_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1b2e538c8_CastExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e55e5d_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1b2e55e5d_StructLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e54c81_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1b2e54c81_FnCallExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e563d1_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1b2e563d1_BraceLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e54676_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1b2e54676_BinopExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type116_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type116_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=__jule_any_type116_eq, .to_str=__jule_any_type116_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type116 && __jule_any_type116_eq(any.data.alloc, (void*)&other); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e68ed7_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1b2e68ed7_BinopExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6978a_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1b2e6978a_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6c13e_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6c705_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6cace_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6ccbb_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6d805_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1b2e6d805_SizeofExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6d9e2_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1b2e6d9e2_AlignofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2e6ddbb_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cb0d91a5_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1cb0d91a5_MutSlicingExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cb0c1885_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1cb0c1885_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c57325_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1b2c57325_StrAppendExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cb08b344_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1cb08b344_PushToSliceExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cb139ed6_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1cb139ed6_StrCompExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cb0ae653_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1cb0ae653_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c63771_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1b2c63771_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
void __jule_any_type140_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_any_type140_dealloc, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
void __jule_any_type141_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type141_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_any_type141_dealloc, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
void __jule_any_type142_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type142_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_any_type142_dealloc, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type142_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type142 && __jule_any_type142_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1cabdd9be_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1b401546c_OutDir = jule::Str("dist", 4);
jule::Str _1b423da4c_OutName = jule::Str("ir.cpp", 6);
jule::Str _1b4251bb4_Out = jule::Str();
jule::Str _20b94500d_Compiler = jule::Str();
jule::Str _20b94631c_CompilerPath = jule::Str();
jule::Str _20b94653c_CppStd = jule::Str("cpp17", 5);
jule::Bool _20b94675c_Shadowing = false;
jule::Bool _20b9469b0_Transpilation = false;
jule::Bool _20b946c79_Test = false;
jule::Bool _20b947043_RC = true;
jule::Bool _20b94741c_Safety = true;
jule::Bool _20b9476d6_Production = false;
jule::Uintptr _20c7ea81e_STDIN = _20c7eb0d3_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Uintptr _20c7eaad8_STDOUT = _20c7eb0d3_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Uintptr _20c7ead6e_STDERR = _20c7eb0d3_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<jule::U8,256> _20c95a0bb_first = jule::Array<jule::U8,256>({});
jule::Array<_20c95a64e_acceptRange,16> _20c95a95c_acceptRanges = jule::Array<_20c95a64e_acceptRange,16>({_20c95a64e_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_20c95a64e_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_20c95a64e_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_20c95a64e_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_20c95a64e_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1cab6842c_RangeTable> _1cab03b6a__L = jule::new_ptr<_1cab6842c_RangeTable>(_1cab6842c_RangeTable{._field_R16=jule::Slice<_1cab67a36_Range16>::make({_1cab67a36_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1cab67a36_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1cab67a36_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1cab67a36_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1cab67a36_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1cab67a36_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1cab67a36_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1cab67a36_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1cab67a36_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1cab67a36_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1cab67a36_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1cab67a36_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1cab67a36_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1cab67a36_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1cab67a36_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1cab67a36_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1cab67a36_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1cab67a36_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1cab67a36_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1cab67a36_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1cab67a36_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1cab67a36_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1cab67a36_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1cab67a36_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1cab67a36_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1cab67a36_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1cab67a36_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1cab67a36_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1cab67a36_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1cab67a36_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1cab67a36_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1cab67a36_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1cab67a36_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1cab67a36_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1cab67a36_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1cab67a36_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1cab67a36_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1cab67a36_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1cab67a36_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1cab67a36_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1cab67a36_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1cab67a36_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1cab67ea9_Range32>::make({_1cab67ea9_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1cab67ea9_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1cab67ea9_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1cab67ea9_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1cab67ea9_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1cab67ea9_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1cab67ea9_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1cab67ea9_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1cab67ea9_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1cab67ea9_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1cab67ea9_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1cab67ea9_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1cab67ea9_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1cab67ea9_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1cab67ea9_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1cab67ea9_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1cab67ea9_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1cab67ea9_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1cab67ea9_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1cab67ea9_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1cab67ea9_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1cab67ea9_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1cab67ea9_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1cab67ea9_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1cab6842c_RangeTable> _1cab04b5a__LU = jule::new_ptr<_1cab6842c_RangeTable>(_1cab6842c_RangeTable{._field_R16=jule::Slice<_1cab67a36_Range16>::make({_1cab67a36_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1cab67a36_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1cab67a36_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1cab67a36_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1cab67a36_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1cab67a36_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1cab67a36_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1cab67a36_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1cab67a36_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1cab67a36_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1cab67a36_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1cab67a36_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1cab67ea9_Range32>::make({_1cab67ea9_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1cab67ea9_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1cab67ea9_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1cab67ea9_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1cab67ea9_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1cab67ea9_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1cab61d93__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1cab81bb5_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1cabeceb7_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1cabeeb12_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1cac17344_PathStdlib = jule::Str();
jule::Str _1cac36e79_PathExec = jule::Str();
jule::Str _1cac37c6b_PathWd = jule::Str();
jule::Str _1cac37dd1_PathApi = jule::Str();
jule::Str _1cac5aed1_Os = jule::Str("windows", 7);
jule::Str _1cac5c466_Arch = jule::Str("i386", 4);
jule::Array<jule::I32,5> _1cb18232a_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1cb182627_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1cb182968_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1cb183062_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1cb18335e_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1cb190e4e_kindPair,47> _1cb19137d_keywords = jule::Array<_1cb190e4e_kindPair,47>({_1cb190e4e_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U32>(6LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U32>(6LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(9LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(4LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(10LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(12LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(13LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(14LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(15LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(16LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(17LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(19LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(21LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(23LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(24LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(25LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(26LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(27LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(28LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(29LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(30LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(31LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(32LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(33LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(34LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(35LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(36LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(37LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(39LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U32>(40LLU)}});
jule::Array<_1cb190e4e_kindPair,39> _1cb1916be_basicOps = jule::Array<_1cb190e4e_kindPair,39>({_1cb190e4e_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(22LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(11LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(20LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1cb190e4e_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(38LLU)}});
jule::Array<jule::U8,32> _1b187eb63__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1b1880229__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1b18b9e01_floatInfo _20b981a72_f32info = _1b18b9e01_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1b18b9e01_floatInfo _20c853b63_f64info = _1b18b9e01_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1b18c07db_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1b18c2469_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1b18c2ec5_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1b18c3316_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1b18c633b_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1b18c9c8a_leftCheat> _1b18ca1b9_leftCheats = jule::Slice<_1b18c9c8a_leftCheat>::make({_1b18c9c8a_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1b18c9c8a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1b18c9c8a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1b18c9c8a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1b18c9c8a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1b18c9c8a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1b18c9c8a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1b18c9c8a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1b18c9c8a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1b18c9c8a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1b18c9c8a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1b18c9c8a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1b18c9c8a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1b18c9c8a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1b18c9c8a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1b18c9c8a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1b18c9c8a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1b18c9c8a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1b18c9c8a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1b18c9c8a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1b18c9c8a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1b18c9c8a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1b18c9c8a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1b18c9c8a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1b18c9c8a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1b18c9c8a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1b18c9c8a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1b18c9c8a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1b18c9c8a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1b18c9c8a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1b18c9c8a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1b18c9c8a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1b18c9c8a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1b18c9c8a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1b18c9c8a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1b18c9c8a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1b18c9c8a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1b18c9c8a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1b18c9c8a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1b18c9c8a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1b18c9c8a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1b18c9c8a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1b18c9c8a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1b18c9c8a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1b18c9c8a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1b18c9c8a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1b18c9c8a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1b18c9c8a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1b18c9c8a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1b18c9c8a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1b18c9c8a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1b18c9c8a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1b18c9c8a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1b18c9c8a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1b18c9c8a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1b18c9c8a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1b18c9c8a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1b18c9c8a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1b18c9c8a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1b18c9c8a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1b18c9c8a_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1b18d0c08_BitSize = 0LL;
jule::Str _1b18d0ec2_SysInt = jule::Str();
jule::Str _1b18d128b_SysUint = jule::Str();
jule::Slice<jule::Str> _1b2e857ea_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1cb08e0b1_Copy = false;
jule::Bool _1cb0aa3b8_Deadcode = false;
jule::Bool _1cb0ab3db_Append = false;
jule::Bool _1cb0ac40e_Math = false;
jule::Bool _1cb0ad432_Access = false;
jule::Bool _1cb0ae455_Inline = false;
jule::Bool _1cb0b15bc_Ptr = false;
jule::Bool _1cb0b25e0_Cond = false;
jule::Bool _1cb0b3613_Str = false;
jule::Bool _1b38b6093_exprEnabled = false;
jule::Bool _1b38b6c0e_scopeEnabled = false;
jule::Array<jule::U64,12> _1b42195b6_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1b4164a1c_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1cab6842c_RangeTable> _1cab12360_Upper = _1cab04b5a__LU;
jule::Ptr<_1cab6842c_RangeTable> _1cab0ad09_Letter = _1cab03b6a__L;





std::ostream &operator<<(std::ostream &_Stream, _20c95a64e_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cab67a36_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cab67ea9_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cab6842c_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1cab77969_index(_1cab774e6_lazyBuff* _self_, jule::I32 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _1cab77bde_append(_1cab774e6_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1cab77e53_string(_1cab774e6_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1cab774e6_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20bad439a_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_20bad439a_DirEntry>>> static__1cab7a263_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_20bad439a_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _20c7b5575_Utf16FromStr(_1cab78b57_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _20c7ee9cc_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_20bad439a_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_20bad439a_DirEntry> _2321_entry = jule::new_ptr<_20bad439a_DirEntry>(_20bad439a_DirEntry{._field_Name=_20c7b4552_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__1cab7b011_Of(_1cab78b57_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_20bad439a_DirEntry>>>(except.error);
				} jule::Ptr<_20c812858_Status>(nullptr);});
			});
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(_2321_entry);;
			if ((_20c7eed1d_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_1b4a9acc1;
			};
		}
	_iter_next_1b4a9acc1:;
	}
	_iter_end_1b4a9acc1:;;
	_20c8000b5_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_20bad439a_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1cab7a395_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _20c7b5575_Utf16FromStr(_3922_path);;
	if ((!(_20c7ec8cb_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1cab7a593_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _20c7b5575_Utf16FromStr(_5322_path);;
	if ((!(_20c7ecb73_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _20bb0a547_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20c81243a_File> static__20bada55a_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_20c81243a_File>(_20c81243a_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_20c81243a_File>> static__20badd0b8_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_20c81243a_File>>(jule::Any(), ({
		auto except = static__20c8e1d44_Open(_5622_path, static_cast<jule::I32>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_20c81243a_File>>(except.error);
		} jule::Ptr<_20c81243a_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20bb0b867_Read(jule::Str _6820_path) {
	jule::Ptr<_20c812858_Status> _6913_s = ({
		auto except = static__1cab7b011_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20c812858_Status>(nullptr);});
	});;
	if ((!(_20ba6733e_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_20ba67edd_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_20c81243a_File> _7917_f = ({
		auto except = static__20c8e1d44_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20c81243a_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _20ba663b5_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_20ba67edd_Size(_6913_s.ptr())), static_cast<jule::I32>(_20ba67edd_Size(_6913_s.ptr())), 0);;
	jule::I32 _8313_n = ({
		auto except = _20c947b58_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__20b9d8766_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_20c81243a_File> _9317_f = ({
		auto except = static__20c8e1d44_Open(_9221_path, static_cast<jule::I32>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_20c81243a_File>(nullptr);});
	});;
	({
		auto except = _20c91d6cd_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _20ba663b5_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20ba6533c_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I32 _9947_perm) {
	({
		auto except = static__20b9d8766_Write(_9924_path, _20bae0780_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _20ba65826_Seek(_20c81243a_File* _self_, jule::I32 _11123_offset, jule::I32 _11136_origin) {
	jule::I32 _11213_pos = _20c801ade_Seek(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I32>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I32>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I32> _20ba64539_WriteStr(_20c81243a_File* _self_, jule::Str* _12028_data) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I32>(({
		auto except = _20c91d6cd_Write(_self_, _20bae0780_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _20ba663b5_Close(_20c81243a_File* _self_) {
	if ((_20c80234d_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_20c81243a_File>> static__20c8e1d44_Open(jule::Str _2120_path, jule::I32 _2131_flag, jule::I32 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _20c7b5575_Utf16FromStr(_2120_path);;
	jule::I32 _2313_handle = _20c7ebaa6_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I32>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20c81243a_File>>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_20c81243a_File>>(jule::Any(), static__20bada55a_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__20c926818_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _20c7b5575_Utf16FromStr(_3422_path);;
	if ((!(_20c7ec634_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _20c91d6cd_Write(_20c81243a_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_20c8e1629_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _20c7b5575_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _20c7ee009_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I32>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_20c802738_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _20c947b58_Read(_20c81243a_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_20c8e1629_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _20c7ee48d_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I32>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _20c7c9699_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4abc760:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I32 _9421_size = _20c95bce3_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_1b4abc760;
					};
					_20c95c211_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_1b4abc760:;
				++it;
				goto _iter_begin_1b4abc760;
			}
			_iter_end_1b4abc760:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_20c801ec9_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _20c81243a_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20ba66a47_IsDir(_20c812858_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _20ba6733e_IsReg(_20c812858_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _20ba67edd_Size(_20c812858_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_20c812858_Status>> static__1cab7b011_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_20c812858_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _20c7b5575_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I32 _1813_code = _20c7eb6bb_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20c812858_Status>>(jule::Any(_20ba643a2_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_20c812858_Status> _2217_stat = jule::new_ptr<_20c812858_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_20c812858_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _20c812858_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cac9be56_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cac0bec6_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1cb188e14_Prec(_1cb188a5c_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U32>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b4bbb62d:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b4bbb694:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b4bbb045:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b4bbb0bc:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b4bbb144:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1b4bbad47:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b4bba2a8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1cb188a5c_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cb18e304_IsOk(_1cb18dde7_File* _self_) {
	({
		auto except = static__1cab7b011_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_20c812858_Status>(nullptr);});
	});
	return true;;
}



inline void _1cb18e579_Fill(_1cb18dde7_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _1cb18e7dd_Dir(_1cb18dde7_File* _self_) {
	return _1cab797b2_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1cb18ea52_Name(_1cb18dde7_File* _self_) {
	return _1cab7943d_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _1cb18ecb6_Addr(_1cb18dde7_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _1cb1900c4_GetRow(_1cb18dde7_File* _self_, jule::I32 _4421_row) {
	jule::I32 _4517_n = 0LL;;
	jule::I32 _4617_lineStart = 0LL;;
	jule::I32 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1b4bc118d;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I32>((_4717_i + 1LL));
		}
	_iter_next_1b4bc118d:;
	}
	_iter_end_1b4bc118d:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb18dde7_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb190e4e_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1cb197054_pushErr(_1cb1969b0_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1cb191bb9_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _1cb197373_pushErrTok(_1cb1969b0_lex* _self_, jule::Ptr<_1cb188a5c_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1cb191bb9_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _1cb19754e_lex(_1cb1969b0_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1cb199551_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1cb188a5c_Token> _47321_token = _1cb19a8c6_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U32>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1b4c04853:;
	}
	_iter_end_1b4c04853:;;
}



inline jule::Str _1cb19785c_id(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I32 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_1cb18c038_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I32 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_1cb18c577_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1cb18c038_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1b4c07adc:;
	}
	_iter_end_1b4c07adc:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _1cb197ac1_resume(_1cb1969b0_lex* _self_) {
	jule::I32 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_1cb18bad7_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b4c0c51a:;
						{
							_1cb199551_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1b4c0beed:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1b4c07a54:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1b4c0bdcc:;
				};
				goto _iter_next_1b4c0a716;
			};
			jule::I32 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1b4c0b2e9;
					};
				}
			_iter_next_1b4c0b2e9:;
			}
			_iter_end_1b4c0b2e9:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_1b4c0a716:;
	}
	_iter_end_1b4c0a716:;;
	return nullptr;;
}



inline void _1cb197d46_lexLineComment(_1cb1969b0_lex* _self_, jule::Ptr<_1cb188a5c_Token>* _53538_token) {
	jule::I32 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1b4c0ebe3;
			};
		}
	_iter_next_1b4c0ebe3:;
	}
	_iter_end_1b4c0ebe3:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U32>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _1cb1980bb_lexRangeComment(_1cb1969b0_lex* _self_, jule::Ptr<_1cb188a5c_Token>* _55039_token) {
	jule::I32 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1b4c12ee3;
			};
			if ((_55417_r == '\n')) {
				_1cb199551_newLine(_self_);
				goto _iter_next_1b4c12ee3;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U32>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b4c12ee3:;
	}
	_iter_end_1b4c12ee3:;;
	_1cb197054_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1cb1983c9_num(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1cb1954d6_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1cb19523e_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1cb193b88_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1cb1938e1_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1cb1986d7_escapeSeq(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b4c1cc89:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b4c1cbbd:;
			{
				_60117_seq=_1cb195abe_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b4c1c904:;
			{
				_60117_seq=_1cb195d88_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b4c1c96a:;
			{
				_60117_seq=_1cb196042_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1b4c1c195:;
			{
				_60117_seq=_1cb1962c8_byteEscape(_60029_txt);
			}
		}
		_match_end_1b4c1c7d3:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1cb197054_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _1cb198a8e_getRune(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _1cb1986d7_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I32 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _1cb198d9c_lexRune(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I32 _64217_n = 0LL;;
	jule::I32 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_1b4c23c3a;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_1cb197054_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1cb199551_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _1cb198a8e_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_20c95cdd2_RuneCountStr(_65617_r);
			if (_65617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b4c23c3a;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1b4c23c3a:;
	}
	_iter_end_1b4c23c3a:;;
	if ((_64217_n == 0LL)) {
		_1cb197054_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1cb197054_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _1cb199111_lexStr(_1cb1969b0_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	(_67917_s).append(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1b4c2a4a0;
			};
			if ((_68717_ch == '\n')) {
				_1cb199551_newLine(_self_);
				if ((!(_68213_raw))) {
					_1cb197054_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _1cb198a8e_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_20c95cdd2_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1b4c2a4a0;
			};
		}
	_iter_next_1b4c2a4a0:;
	}
	_iter_end_1b4c2a4a0:;;
	return _67917_s;;
}



inline jule::Bool _1cb199375_isFirstTokenOfLine(_1cb1969b0_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _1cb199551_newLine(_1cb1969b0_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1cb199a4b_isOp(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U32 _72048_id, jule::Ptr<_1cb188a5c_Token>* _72066_t) {
	if ((!(_1cb19204e_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _1cb199e03_lexBasicOps(_1cb1969b0_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1cb188a5c_Token>* _73048_tok) {
	{
		auto expr = &(_1cb1916be_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4c317a3:;
		if (it != expr_end) {
			_1cb190e4e_kindPair *_73116_pair = it;
			{
				if (_1cb199a4b_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_1b4c317a3:;
			++it;
			goto _iter_begin_1b4c317a3;
		}
		_iter_end_1b4c317a3:;
	};
	return false;;
}



inline jule::Bool _1cb19a2aa_lexId(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_1cb188a5c_Token>* _74043_t) {
	jule::Str _74113_lex = _1cb19785c_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U32>(2LLU);
	return true;;
}



inline jule::Bool _1cb19a662_lexNum(_1cb1969b0_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_1cb188a5c_Token>* _75044_t) {
	jule::Str _75113_lex = _1cb1983c9_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U32>(6LLU);
	return true;;
}



inline jule::Ptr<_1cb188a5c_Token> _1cb19a8c6_token(_1cb1969b0_lex* _self_) {
	jule::Ptr<_1cb188a5c_Token> _76217_t = jule::new_ptr<_1cb188a5c_Token>(_1cb188a5c_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1cb197ac1_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1cb19a662_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1b4c377cb:;
			{
				goto _match_end_1b4c36bc6;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1b4c3803a:;
			{
				_76217_t.get()._field_Kind=_1cb198d9c_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U32>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1b4c380a1:;
			{
				_76217_t.get()._field_Kind=_1cb199111_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U32>(6LLU);
				return _76217_t;;
			}
		}
		else if (_1cb19204e_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_1b4c382d2:;
			{
				_1cb197d46_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_1cb19204e_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_1b4c38348:;
			{
				_1cb1980bb_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_1cb199a4b_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _1cb199a4b_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _1cb199a4b_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _1cb199a4b_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _1cb199a4b_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _1cb199a4b_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _1cb199e03_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_1b4c383ae:;
			{
				goto _match_end_1b4c36bc6;
			}
		}
		else if (_1cb19a2aa_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1b4c36c92:;
			{
				{
					auto expr = &(_1cb19137d_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4c3d958:;
					if (it != expr_end) {
						_1cb190e4e_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_1b4c3d958;
							};
						}
						_iter_next_1b4c3d958:;
						++it;
						goto _iter_begin_1b4c3d958;
					}
					_iter_end_1b4c3d958:;
				};
			}
		}
		else {
			_case_begin_1b4c36c2b:;
			{
				jule::I32 _81218_r = 0;;
				jule::I32 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1cb197054_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1b4c36bc6:;
	};
	(*(_self_))._field_column+=_20c95cdd2_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb1969b0_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b18b9e01_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b18ba0dd_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b18c9c8a_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b18c27cc_set(_1b18ca75d_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1b51d8d15:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1b51d8d8c:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1b51d8ba0:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1b51daee3:;
					{
						goto _iter_next_1b51da7b7;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1b51db06a:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b51da7b7;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1b51db0e2:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b51da7b7;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b51da7b7;
					}
				}
				_match_end_1b51dadc2:;
			};
			goto _iter_end_1b51da7b7;
		}
	_iter_next_1b51da7b7:;
	}
	_iter_end_1b51da7b7:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1b18bd0d0_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1b51e3715;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I32>((((_30721_e * 10LL) + static_cast<jule::I32>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1b51e3715:;
		}
		_iter_end_1b51e3715:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b18c2ada_floatBits(_1b18ca75d_decimal* _self_, _1b18b9e01_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b18c2469_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1b18c2469_powtab[(*(_self_))._field_dp];
			};
			_1b18cadac_shift(_self_, static_cast<jule::I32>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1b51ea0ac:;
	}
	_iter_end_1b51ea0ac:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b18c2469_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1b18c2469_powtab[(-((*(_self_))._field_dp))];
			};
			_1b18cadac_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1b51eb0e1:;
	}
	_iter_end_1b51eb0e1:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I32 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1b18cadac_shift(_self_, static_cast<jule::I32>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1b18cadac_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1b18cb891_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b18cab37_assign(_1b18ca75d_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I32 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1b5208593:;
	}
	_iter_end_1b5208593:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b5209011:;
	}
	_iter_end_1b5209011:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b18cbe46_trim(_self_);
}



inline void _1b18cadac_shift(_1b18ca75d_decimal* _self_, jule::I32 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b520b0e0:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1b520b167:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1b18cc8d6_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1b520bdc1:;
				}
				_iter_end_1b520bdc1:;;
				_1b18cc8d6_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1b520b1de:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1b18cc1ee_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1b520bd38:;
				}
				_iter_end_1b520bd38:;;
				_1b18cc1ee_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_35528_k)))));
			}
		}
		_match_end_1b520aebe:;
	};
}



inline void _1b18cb132_roundDown(_1b18ca75d_decimal* _self_, jule::I32 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1b18cbe46_trim(_self_);
}



inline void _1b18cb3a7_roundUp(_1b18ca75d_decimal* _self_, jule::I32 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1b5210a0c:;
	}
	_iter_end_1b5210a0c:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b18cb62c_round(_1b18ca75d_decimal* _self_, jule::I32 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b18ccc27_shouldRoundUp(_self_, _41124_nd)) {
		_1b18cb3a7_roundUp(_self_, _41124_nd);
	} else {
		_1b18cb132_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1b18cb891_roundedInteger(_1b18ca75d_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1b521367a:;
	}
	_iter_end_1b521367a:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1b521536e:;
	}
	_iter_end_1b521536e:;;
	if (_1b18ccc27_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b18ca75d_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b18de5da_Const> static__1b18dea5d_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1b18de5da_Const>(_1b18de5da_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b18de5da_Const> static__1b18ded05_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1b18de5da_Const>(_1b18de5da_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b18de5da_Const> static__1b18e009c_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1b18de5da_Const>(_1b18de5da_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b18de5da_Const> static__1b18e0344_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1b18de5da_Const>(_1b18de5da_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b18de5da_Const> static__1b18e05db_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1b18de5da_Const>(_1b18de5da_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1b18de5da_Const> static__1b18e07d9_NewNil(void) {
	return jule::new_ptr<_1b18de5da_Const>(_1b18de5da_Const{._field_data=nullptr});;
}



inline jule::I64 _1b18e0dd3_ReadI64(_1b18de5da_Const* _self_) {
	if ((!(_1b18e327b_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1b18e1147_ReadU64(_1b18de5da_Const* _self_) {
	if ((!(_1b18e34e0_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1b18e13ab_ReadBool(_1b18de5da_Const* _self_) {
	if ((!(_1b18e3754_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1b18e1620_ReadStr(_1b18de5da_Const* _self_) {
	if ((!(_1b18e39b8_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1b18e1884_ReadF64(_1b18de5da_Const* _self_) {
	if ((!(_1b18e3c2c_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1b18e1ae8_AsI64(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b52917c4:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b529183a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b5291241:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b5291153:;
			{
				return 0LL;;
			}
		}
		_match_end_1b52910ed:;
	};
}



inline jule::U64 _1b18e1d5c_AsU64(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b52931ee:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b5293265:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b5292c6a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b5291917:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b52918b2:;
	};
}



inline jule::F64 _1b18e20c1_AsF64(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b5294b29:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b5294b90:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b5294695:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1b5293342:;
			{
				return 0LL;;
			}
		}
		_match_end_1b52932dc:;
	};
}



inline void _1b18e2346_SetI64(_1b18de5da_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1b18e25bb_SetU64(_1b18de5da_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1b18e2841_SetBool(_1b18de5da_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1b18e2ab6_SetStr(_1b18de5da_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1b18e2d3b_SetF64(_1b18de5da_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1b18e3017_SetNil(_1b18de5da_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1b18e327b_IsI64(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b5298545:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b52987ba:;
			{
				return false;;
			}
		}
		_match_end_1b5298765:;
	};
}



inline jule::Bool _1b18e34e0_IsU64(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b529916c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b52989da:;
			{
				return false;;
			}
		}
		_match_end_1b5298897:;
	};
}



inline jule::Bool _1b18e3754_IsBool(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b5299403:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b5299ab8:;
			{
				return false;;
			}
		}
		_match_end_1b5299a63:;
	};
}



inline jule::Bool _1b18e39b8_IsStr(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b5299db5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b529a57a:;
			{
				return false;;
			}
		}
		_match_end_1b529a525:;
	};
}



inline jule::Bool _1b18e3c2c_IsF64(_1b18de5da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b529a877:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b529b03c:;
			{
				return false;;
			}
		}
		_match_end_1b529aed7:;
	};
}



inline jule::Bool _1b18e3e91_IsNil(_1b18de5da_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b18e429e_AreSameTypes(_1b18de5da_Const* _self_, _1b18de5da_Const _21327_x) {
	{
		
		if ((_1b18e327b_IsI64(_self_) == _1b18e327b_IsI64(&_21327_x))) {
			_case_begin_1b529cadd:;
			{
				return true;;
			}
		}
		else if ((_1b18e34e0_IsU64(_self_) == _1b18e34e0_IsU64(&_21327_x))) {
			_case_begin_1b529c3e5:;
			{
				return true;;
			}
		}
		else if ((_1b18e3c2c_IsF64(_self_) == _1b18e3c2c_IsF64(&_21327_x))) {
			_case_begin_1b529c46c:;
			{
				return true;;
			}
		}
		else if ((_1b18e3754_IsBool(_self_) == _1b18e3754_IsBool(&_21327_x))) {
			_case_begin_1b529c4e4:;
			{
				return true;;
			}
		}
		else if ((_1b18e39b8_IsStr(_self_) == _1b18e39b8_IsStr(&_21327_x))) {
			_case_begin_1b529c56b:;
			{
				return true;;
			}
		}
		else if ((_1b18e3e91_IsNil(_self_) == _1b18e3e91_IsNil(&_21327_x))) {
			_case_begin_1b529c7be:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b529c36d:;
			{
				return false;;
			}
		}
		_match_end_1b529c2a2:;
	};
}



inline jule::Bool _1b18e45ac_And(_1b18de5da_Const* _self_, _1b18de5da_Const _23818_x) {
	{
		
		if ((_1b18e3754_IsBool(_self_) && _1b18e3754_IsBool(&_23818_x))) {
			_case_begin_1b52a0cde:;
			{
				return (_1b18e13ab_ReadBool(_self_) && _1b18e13ab_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1b52a05e6:;
			{
				return false;;
			}
		}
		_match_end_1b52a03e8:;
	};
}



inline jule::Bool _1b18e48ba_Or(_1b18de5da_Const* _self_, _1b18de5da_Const _24917_x) {
	{
		
		if ((_1b18e3754_IsBool(_self_) && _1b18e3754_IsBool(&_24917_x))) {
			_case_begin_1b52a2153:;
			{
				return (_1b18e13ab_ReadBool(_self_) || _1b18e13ab_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1b52a199e:;
			{
				return false;;
			}
		}
		_match_end_1b52a111e:;
	};
}



inline jule::Bool _1b18e4bc8_Eq(_1b18de5da_Const* _self_, _1b18de5da_Const _26017_x) {
	{
		
		if (_1b18e3e91_IsNil(_self_)) {
			_case_begin_1b52a352d:;
			{
				return _1b18e3e91_IsNil(&_26017_x);;
			}
		}
		else if (_1b18e3754_IsBool(_self_)) {
			_case_begin_1b52a2d8a:;
			{
				return (_1b18e3754_IsBool(&_26017_x) && (_1b18e13ab_ReadBool(_self_) == _1b18e13ab_ReadBool(&_26017_x)));;
			}
		}
		else if (_1b18e39b8_IsStr(_self_)) {
			_case_begin_1b52a2e01:;
			{
				return (_1b18e39b8_IsStr(&_26017_x) && (_1b18e1620_ReadStr(_self_) == _1b18e1620_ReadStr(&_26017_x)));;
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52a2e78:;
			{
				return (_1b18e0dd3_ReadI64(_self_) == _1b18e1ae8_AsI64(&_26017_x));;
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52a3000:;
			{
				return (_1b18e1147_ReadU64(_self_) == _1b18e1d5c_AsU64(&_26017_x));;
			}
		}
		else if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52a3231:;
			{
				return (_1b18e1884_ReadF64(_self_) == _1b18e20c1_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1b52a2d24:;
			{
				return false;;
			}
		}
		_match_end_1b52a2472:;
	};
}



inline jule::Bool _1b18e4ed6_Lt(_1b18de5da_Const* _self_, _1b18de5da_Const _28717_x) {
	{
		
		if (_1b18e39b8_IsStr(_self_)) {
			_case_begin_1b52a7323:;
			{
				return (_1b18e39b8_IsStr(&_28717_x) && (_1b18e1620_ReadStr(_self_) < _1b18e1620_ReadStr(&_28717_x)));;
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52a6bd5:;
			{
				return (_1b18e0dd3_ReadI64(_self_) < _1b18e1ae8_AsI64(&_28717_x));;
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52a6c4b:;
			{
				return (_1b18e1147_ReadU64(_self_) < _1b18e1d5c_AsU64(&_28717_x));;
			}
		}
		else if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52a6cb2:;
			{
				return (_1b18e1884_ReadF64(_self_) < _1b18e20c1_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1b52a385d:;
			{
				return false;;
			}
		}
		_match_end_1b52a3792:;
	};
}



inline jule::Bool _1b18e52e4_LtEq(_1b18de5da_Const* _self_, _1b18de5da_Const _31019_x) {
	{
		
		if (_1b18e39b8_IsStr(_self_)) {
			_case_begin_1b52aa128:;
			{
				return (_1b18e39b8_IsStr(&_31019_x) && (_1b18e1620_ReadStr(_self_) <= _1b18e1620_ReadStr(&_31019_x)));;
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52a99da:;
			{
				return (_1b18e0dd3_ReadI64(_self_) <= _1b18e1ae8_AsI64(&_31019_x));;
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52a9a51:;
			{
				return (_1b18e1147_ReadU64(_self_) <= _1b18e1d5c_AsU64(&_31019_x));;
			}
		}
		else if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52a9ab7:;
			{
				return (_1b18e1884_ReadF64(_self_) <= _1b18e20c1_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1b52a7598:;
			{
				return false;;
			}
		}
		_match_end_1b52a74cc:;
	};
}



inline jule::Bool _1b18e5602_Gt(_1b18de5da_Const* _self_, _1b18de5da_Const _33317_x) {
	{
		
		if (_1b18e39b8_IsStr(_self_)) {
			_case_begin_1b52ace2d:;
			{
				return (_1b18e39b8_IsStr(&_33317_x) && (_1b18e1620_ReadStr(_self_) > _1b18e1620_ReadStr(&_33317_x)));;
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52ac7e0:;
			{
				return (_1b18e0dd3_ReadI64(_self_) > _1b18e1ae8_AsI64(&_33317_x));;
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52ac856:;
			{
				return (_1b18e1147_ReadU64(_self_) > _1b18e1d5c_AsU64(&_33317_x));;
			}
		}
		else if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52ac8bc:;
			{
				return (_1b18e1884_ReadF64(_self_) > _1b18e20c1_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1b52aa39d:;
			{
				return false;;
			}
		}
		_match_end_1b52aa2d2:;
	};
}



inline jule::Bool _1b18e5910_GtEq(_1b18de5da_Const* _self_, _1b18de5da_Const _35619_x) {
	{
		
		if (_1b18e39b8_IsStr(_self_)) {
			_case_begin_1b52b0c33:;
			{
				return (_1b18e39b8_IsStr(&_35619_x) && (_1b18e1620_ReadStr(_self_) >= _1b18e1620_ReadStr(&_35619_x)));;
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52b05e5:;
			{
				return (_1b18e0dd3_ReadI64(_self_) >= _1b18e1ae8_AsI64(&_35619_x));;
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52b065b:;
			{
				return (_1b18e1147_ReadU64(_self_) >= _1b18e1d5c_AsU64(&_35619_x));;
			}
		}
		else if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52b06c2:;
			{
				return (_1b18e1884_ReadF64(_self_) >= _1b18e20c1_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1b52ad1a3:;
			{
				return false;;
			}
		}
		_match_end_1b52ad0d7:;
	};
}



inline jule::Bool _1b18e5c1d_Add(_1b18de5da_Const* _self_, _1b18de5da_Const _37722_x) {
	{
		
		if (_1b18e39b8_IsStr(_self_)) {
			_case_begin_1b52b3a38:;
			{
				if ((!(_1b18e39b8_IsStr(&_37722_x)))) {
					return false;;
				};
				_1b18e2ab6_SetStr(_self_, (_1b18e1620_ReadStr(_self_) + _1b18e1620_ReadStr(&_37722_x)));
			}
		}
		else if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52b33ea:;
			{
				_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e1884_ReadF64(_self_) + _1b18e20c1_AsF64(&_37722_x))));
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52b3461:;
			{
				if (_1b18e3c2c_IsF64(&_37722_x)) {
					_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e20c1_AsF64(_self_) + _1b18e1884_ReadF64(&_37722_x))));
				} else {
					_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_1b18e0dd3_ReadI64(_self_) + _1b18e1ae8_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52b34c7:;
			{
				if (_1b18e3c2c_IsF64(&_37722_x)) {
					_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e20c1_AsF64(_self_) + _1b18e1884_ReadF64(&_37722_x))));
				} else {
					_1b18e25bb_SetU64(_self_, static_cast<jule::U64>((_1b18e1147_ReadU64(_self_) + _1b18e1d5c_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1b52b0ea8:;
			{
				return false;;
			}
		}
		_match_end_1b52b0ddc:;
	};
	return true;;
}



inline jule::Bool _1b18e602b_Sub(_1b18de5da_Const* _self_, _1b18de5da_Const _40622_x) {
	{
		
		if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52b8e6c:;
			{
				_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e1884_ReadF64(_self_) - _1b18e20c1_AsF64(&_40622_x))));
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52b8796:;
			{
				if (_1b18e3c2c_IsF64(&_40622_x)) {
					_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e20c1_AsF64(_self_) - _1b18e1884_ReadF64(&_40622_x))));
				} else {
					_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_1b18e0dd3_ReadI64(_self_) - _1b18e1ae8_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52b880c:;
			{
				if (_1b18e3c2c_IsF64(&_40622_x)) {
					_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e20c1_AsF64(_self_) - _1b18e1884_ReadF64(&_40622_x))));
				} else {
					_1b18e25bb_SetU64(_self_, static_cast<jule::U64>((_1b18e1147_ReadU64(_self_) - _1b18e1d5c_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1b52b8730:;
			{
				return false;;
			}
		}
		_match_end_1b52b7e7c:;
	};
	return true;;
}



inline jule::Bool _1b18e6339_Mul(_1b18de5da_Const* _self_, _1b18de5da_Const _43022_x) {
	{
		
		if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52bd405:;
			{
				_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e1884_ReadF64(_self_) * _1b18e20c1_AsF64(&_43022_x))));
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52bcc2e:;
			{
				if (_1b18e3c2c_IsF64(&_43022_x)) {
					_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e20c1_AsF64(_self_) * _1b18e1884_ReadF64(&_43022_x))));
				} else {
					_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_1b18e0dd3_ReadI64(_self_) * _1b18e1ae8_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52bcc95:;
			{
				if (_1b18e3c2c_IsF64(&_43022_x)) {
					_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>((_1b18e20c1_AsF64(_self_) * _1b18e1884_ReadF64(&_43022_x))));
				} else {
					_1b18e25bb_SetU64(_self_, static_cast<jule::U64>((_1b18e1147_ReadU64(_self_) * _1b18e1d5c_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1b52bcbb8:;
			{
				return false;;
			}
		}
		_match_end_1b52bc2c2:;
	};
	return true;;
}



inline jule::Bool _1b18e6647_Div(_1b18de5da_Const* _self_, _1b18de5da_Const _45822_x) {
	{
		
		if (_1b18e3c2c_IsF64(_self_)) {
			_case_begin_1b52c288d:;
			{
				jule::F64 _46117_l = _1b18e20c1_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>(jule::div(_1b18e1884_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52c21b7:;
			{
				jule::F64 _46717_l = _1b18e20c1_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>(jule::div(_1b18e20c1_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52c222d:;
			{
				jule::F64 _47317_l = _1b18e20c1_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1b18e2d3b_SetF64(_self_, static_cast<jule::F64>(jule::div(_1b18e20c1_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1b52c2151:;
			{
				return false;;
			}
		}
		_match_end_1b52c175a:;
	};
	return true;;
}



inline jule::Bool _1b18e6955_Mod(_1b18de5da_Const* _self_, _1b18de5da_Const _48722_x) {
	{
		
		if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52c6d15:;
			{
				jule::I64 _49017_l = _1b18e1ae8_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1b18e2346_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1b18e0dd3_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52c6650:;
			{
				jule::U64 _49617_l = _1b18e1d5c_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1b18e25bb_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1b18e1147_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1b52c65d9:;
			{
				return false;;
			}
		}
		_match_end_1b52c6562:;
	};
	return true;;
}



inline jule::Bool _1b18e6c63_BitwiseAnd(_1b18de5da_Const* _self_, _1b18de5da_Const _50929_x) {
	{
		
		if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52c9e39:;
			{
				_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_1b18e0dd3_ReadI64(_self_) & _1b18e1ae8_AsI64(&_50929_x))));
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52c9774:;
			{
				_1b18e25bb_SetU64(_self_, static_cast<jule::U64>((_1b18e1147_ReadU64(_self_) & _1b18e1d5c_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1b52c970d:;
			{
				return false;;
			}
		}
		_match_end_1b52c9686:;
	};
	return true;;
}



inline jule::Bool _1b18e7071_BitwiseOr(_1b18de5da_Const* _self_, _1b18de5da_Const _52328_x) {
	{
		
		if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52cbeb3:;
			{
				_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_1b18e0dd3_ReadI64(_self_) | _1b18e1ae8_AsI64(&_52328_x))));
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52cb7ed:;
			{
				_1b18e25bb_SetU64(_self_, static_cast<jule::U64>((_1b18e1147_ReadU64(_self_) | _1b18e1d5c_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1b52cb787:;
			{
				return false;;
			}
		}
		_match_end_1b52cb6bb:;
	};
	return true;;
}



inline jule::Bool _1b18e737e_Xor(_1b18de5da_Const* _self_, _1b18de5da_Const _53722_x) {
	{
		
		if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52ce03c:;
			{
				_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_1b18e0dd3_ReadI64(_self_) ^ _1b18e1ae8_AsI64(&_53722_x))));
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52cd877:;
			{
				_1b18e25bb_SetU64(_self_, static_cast<jule::U64>((_1b18e1147_ReadU64(_self_) ^ _1b18e1d5c_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1b52cd811:;
			{
				return false;;
			}
		}
		_match_end_1b52cd745:;
	};
	return true;;
}



inline jule::Bool _1b18e768c_Lshift(_1b18de5da_Const* _self_, _1b18de5da_Const _55125_x) {
	{
		
		if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52d10b6:;
			{
				jule::I64 _55417_l = _1b18e1ae8_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1b18e1d5c_AsU64(&_55125_x);;
					_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1b18e7d0d_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52d0901:;
			{
				_1b18e7d0d_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1b52d088a:;
			{
				return false;;
			}
		}
		_match_end_1b52d07be:;
	};
	return true;;
}



inline jule::Bool _1b18e799a_Rshift(_1b18de5da_Const* _self_, _1b18de5da_Const _57125_x) {
	{
		
		if (_1b18e327b_IsI64(_self_)) {
			_case_begin_1b52d3926:;
			{
				jule::I64 _57417_l = _1b18e1ae8_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1b18e1d5c_AsU64(&_57125_x);;
					_1b18e2346_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1b18e810a_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1b18e34e0_IsU64(_self_)) {
			_case_begin_1b52d3261:;
			{
				_1b18e810a_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1b52d31ea:;
			{
				return false;;
			}
		}
		_match_end_1b52d312e:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b18de5da_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e172e8_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e180da_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e184d6_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4b77d_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e4c1a7_IsPrim(_1b2e4bd44_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U32>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4bd44_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4c493_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4c84a_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4cb36_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4d032_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4d31d_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e4d95b_IsUnsafe(_1b2e4d609_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4d609_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e4e165_AutoSized(_1b2e4dc8b_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4dc8b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4e4d9_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e4e891_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e50c9e_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5108a_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e51640_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5192b_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e52135_IsNil(_1b2e51cd3_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e51cd3_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e524dc_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e52cb2_IsSelf(_1b2e52960_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e52960_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e53169_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e53521_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e538c8_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e53c80_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e54203_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e54676_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e550e4_Unhandled(_1b2e54c81_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1b2e55358_Ignored(_1b2e54c81_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e54c81_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e55a62_IsTargeted(_1b2e55710_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e55710_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e55e5d_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e56733_IsEmpty(_1b2e563d1_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e563d1_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e56ba6_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e576bd_IsEmpty(_1b2e5738d_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5738d_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e57c0c_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e58317_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e58603_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e58a76_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e58e2d_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e592d5_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e595c1_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e59bcb_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5a21a_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5b10b_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5b716_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e5c250_IsSelf(_1b2e5bddc_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1b2e5c4b4_IsRef(_1b2e5bddc_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5bddc_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e5d55e_IsAnon(_1b2e5d20c_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5d20c_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5e1db_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5e593_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e60055_IsInf(_1b2e5ec03_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e5ec03_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e6082a_IsWhileNext(_1b2e604c8_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e604c8_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e60d69_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e61221_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e615c8_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e61a4b_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e61e03_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e62376_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e62a4c_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e62ec0_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e63696_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e63e38_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e6470d_AutoExpr(_1b2e643ab_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e643ab_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e65467_DefaultTyped(_1b2e64dd4_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e64dd4_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e658da_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e65ee5_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e661e3_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e66996_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e670a1_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e67a1e_IsTraitImpl(_1b2e676ab_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1b2e67c83_IsStructImpl(_1b2e676ab_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e676ab_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2e685d0_FieldIns> _1b2e24723_instance(jule::Ptr<_1b2e3becc_Field> _self_) {
	return jule::new_ptr<_1b2e685d0_FieldIns>(_1b2e685d0_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e3becc_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e44622_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2e687bc_StructIns> _1b2e284e6_instance(jule::Ptr<_1b2e683e3_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1b2e687bc_StructIns> _9917_ins = jule::new_ptr<_1b2e687bc_StructIns>(_1b2e687bc_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1b2e685d0_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1b2ed8034_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1b2e742de_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b558ac00:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1b2ed8034_Var>((*(_10621_s))));;
			}
			_iter_next_1b558ac00:;
			++it;
			goto _iter_begin_1b558ac00;
		}
		_iter_end_1b558ac00:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b558c163:;
		if (it != expr_end) {
			jule::Ptr<_1b2e3becc_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1b2e24723_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1b305d197_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1b558c163:;
			++it;
			goto _iter_begin_1b558c163;
		}
		_iter_end_1b558c163:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b558e4ea:;
			if (it != expr_end) {
				jule::Ptr<_1b2e6e85b_Fn> _12125_f = *it;
				{
					jule::Ptr<_1b2e6e85b_Fn> _12225_fins = jule::new_ptr<_1b2e6e85b_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1b558e4ea:;
				++it;
				goto _iter_begin_1b558e4ea;
			}
			_iter_end_1b558e4ea:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1b2e687bc_StructIns> _1b2e29250_appendInstance(_1b2e683e3_Struct* _self_, jule::Ptr<_1b2e687bc_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b559184e:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _13921_ains = *it;
			{
				if (_1b2e42158_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1b559184e:;
			++it;
			goto _iter_begin_1b559184e;
		}
		_iter_end_1b559184e:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2e2c3a7_FindMethod(_1b2e683e3_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5592c5c:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1b5592c5c:;
			++it;
			goto _iter_begin_1b5592c5c;
		}
		_iter_end_1b5592c5c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2e2b807_FindStatic(_1b2e683e3_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5593e28:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1b5593e28:;
			++it;
			goto _iter_begin_1b5593e28;
		}
		_iter_end_1b5593e28:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e3becc_Field> _1b2e2dbd3_FindField(_1b2e683e3_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5594d08:;
		if (it != expr_end) {
			jule::Ptr<_1b2e3becc_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1b5594d08:;
			++it;
			goto _iter_begin_1b5594d08;
		}
		_iter_end_1b5594d08:;
	};
	return nullptr;;
}



inline jule::Bool _1b2e2cece_IsImplements(_1b2e683e3_Struct* _self_, jule::Ptr<_1b2e8033e_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5595bd8:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1b5595bd8:;
			++it;
			goto _iter_begin_1b5595bd8;
		}
		_iter_end_1b5595bd8:;
	};
	return false;;
}



inline jule::Bool _1b2e31ea0_IsDerives(_1b2e683e3_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5596249:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1b5596249:;
			++it;
			goto _iter_begin_1b5596249;
		}
		_iter_end_1b5596249:;
	};
	return false;;
}



inline jule::Bool _1b2e32665_IsUses(_1b2e683e3_Struct* _self_, jule::Ptr<_1b2e683e3_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55988cd:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1b559912b:;
				}
				_iter_end_1b559912b:;;
			}
			_iter_next_1b55988cd:;
			++it;
			goto _iter_begin_1b55988cd;
		}
		_iter_end_1b55988cd:;
	};
	return false;;
}



inline jule::Bool _1b2e37b32_HasRefAccessible(_1b2e683e3_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55992e6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1b2e2e60c_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1b55992e6:;
			++it;
			goto _iter_begin_1b55992e6;
		}
		_iter_end_1b55992e6:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e683e3_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e685d0_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e68cea_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e68ed7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e691c4_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e693b1_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6959d_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6978a_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e69977_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e69b64_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e69d51_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6a03d_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6a22a_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6a417_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6a604_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6a7e1_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6a9cd_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6adeb_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6b0d8_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6b2c5_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6b4b2_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6b69e_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6b88b_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6ba78_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6bc65_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6be52_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6c13e_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6c32b_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6c518_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6c705_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6c8e2_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6cace_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6ccbb_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6abba_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6d42b_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6d618_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6d805_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6d9e2_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6dbce_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6ddbb_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6e0a8_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6e295_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6e482_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2e70263_ParamIns> _1b2e269cd_instance(jule::Ptr<_1b2e6e66e_Param> _self_) {
	return jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1b2e2cc8c_IsSelf(_1b2e6e66e_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1b2e2e60c_IsRef(_1b2e6e66e_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6e66e_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e1e102_IsVoid(_1b2e6e85b_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1b2e3d75e_IsMethod(_1b2e6e85b_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1b2e34a41_IsEntryPoint(_1b2e6e85b_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1b2e1bb38_IsInit(_1b2e6e85b_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1b2e23c72_IsAnon(_1b2e6e85b_Fn* _self_) {
	return _1cb18b598_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1b2e41531_AnyVar(_1b2e6e85b_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1b2e71132_FnIns> _1b2e362d4_instanceForce(jule::Ptr<_1b2e6e85b_Fn> _self_) {
	jule::Ptr<_1b2e71132_FnIns> _10017_ins = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1b2e8d050_Scope>(), ._field_Refers=static__1b2e742de_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55b2dc0:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e66e_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1b2e269cd_instance(_10721_p));;
			}
			_iter_next_1b55b2dc0:;
			++it;
			goto _iter_begin_1b55b2dc0;
		}
		_iter_end_1b55b2dc0:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1b2e71132_FnIns> _1b2e6ead1_instance(jule::Ptr<_1b2e6e85b_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1b2e362d4_instanceForce(_self_);;
}



inline jule::Ptr<_1b2e71132_FnIns> _1b2e6edab_appendInstance(_1b2e6e85b_Fn* _self_, jule::Ptr<_1b2e71132_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55b6ba4:;
		if (it != expr_end) {
			jule::Ptr<_1b2e71132_FnIns> _14421_ains = *it;
			{
				if (_1b2e72a3a_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1b55b6ba4:;
			++it;
			goto _iter_begin_1b55b6ba4;
		}
		_iter_end_1b55b6ba4:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e6e85b_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b2e7063c_Str(_1b2e70263_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1b2e2cc8c_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1b2e2e60c_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1b305be21_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e70263_ParamIns _Src) {
	_Stream << _1b2e7063c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b2e71462_Str(_1b2e71132_FnIns* _self_) {
	;
	return _1b2e72d48_GetKindStr(_self_, false);;
}



inline jule::Bool _1b2e71770_Equal(jule::Ptr<_1b2e71132_FnIns> _self_, jule::Ptr<_1b305ba25_TypeKind> _21721_other) {
	jule::Ptr<_1b2e71132_FnIns> _21813_f = _1b306009a_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1b2e71bd2_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1b2e71bd2_EqualFn(jule::Ptr<_1b2e71132_FnIns> _self_, jule::Ptr<_1b2e71132_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1b2e1e102_IsVoid(_self_.get()._field_Decl.ptr()) != _1b2e1e102_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1b2e70263_ParamIns>,jule::Ptr<_1b2e70263_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1b2e70263_ParamIns>,jule::Ptr<_1b2e70263_ParamIns>)>([=](jule::Ptr<_1b2e70263_ParamIns> _23830_p1, jule::Ptr<_1b2e70263_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1b2e2cc8c_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1b2e2cc8c_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1b2e2e60c_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1b2e2e60c_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1b305c22e_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I32 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1b55c4e37:;
	}
	_iter_end_1b55c4e37:;;
	if ((!(_1b2e1e102_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1b305c22e_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1b2e71ee0_equalTrait(jule::Ptr<_1b2e71132_FnIns> _self_, jule::Ptr<_1b2e71132_FnIns>* _28727_other) {
	if ((!(_1b2e71bd2_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _1b2e72254_Types(_1b2e71132_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b55c837a:;
			{
				return nullptr;;
			}
		}
		else if ((_1b3060a4b_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b55c83e1:;
			{
				return jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1b55c8314:;
			{
				return _1b3060a4b_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1b55c8248:;
	};
}



inline jule::Bool _1b2e724b8_IsBuiltin(_1b2e71132_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1b2e7272c_IsAnon(_1b2e71132_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1b2e23c72_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1b2e72a3a_Same(_1b2e71132_FnIns* _self_, jule::Ptr<_1b2e71132_FnIns> _32419_f) {
	if ((((*(_self_))._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55cbb31:;
		if (it != expr_end) {
			jule::I32 _32913_i = it - expr->begin();
			jule::Ptr<_1b305a2e8_InsGeneric> *_32916_g = it;
			{
				if ((!(_1b305c22e_Equal((*(_32916_g)).get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1b55cbb31:;
			++it;
			_32913_i++;
			goto _iter_begin_1b55cbb31;
		}
		_iter_end_1b55cbb31:;
	};
	return true;;
}



inline jule::Str _1b2e72d48_GetKindStr(_1b2e71132_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34117_s).append("unsafe ", 7);
	};
	(_34117_s).append("fn", 2);
	if ((_34025_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34117_s).append("(", 1);
	jule::I32 _35413_n = (*(_self_))._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b55d08b0:;
			if (it != expr_end) {
				jule::Ptr<_1b2e70263_ParamIns> *_35620_p = it;
				{
					_34117_s+=_1b2e7063c_Str((*(_35620_p)).ptr());
					(_34117_s).append(",", 1);
				}
				_iter_next_1b55d08b0:;
				++it;
				goto _iter_begin_1b55d08b0;
			}
			_iter_end_1b55d08b0:;
		};
		(_34117_s).mut_slice(0LL, (_34117_s.len() - 1LL));;
	};
	(_34117_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34117_s).append("!", 1);
	};
	if ((!(_1b2e1e102_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34117_s).append(":", 1);
		_34117_s+=_1b305be21_Str((*(_self_))._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e71132_FnIns _Src) {
	_Stream << _1b2e71462_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b2e7408b_ReferenceStack> static__1b2e742de_new(void) {
	return jule::new_ptr<_1b2e7408b_ReferenceStack>(_1b2e7408b_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1b2e74674_Len(_1b2e7408b_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1b2e74982_At(_1b2e7408b_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1b2e74c07_Push(_1b2e7408b_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1b68e7e4b_Exist(_1b2e7408b_ReferenceStack* _self_, jule::Ptr<_1b2e71132_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68e925a:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b68e925a:;
			++it;
			goto _iter_begin_1b68e925a;
		}
		_iter_end_1b68e925a:;
	};
	return false;;
}

inline jule::Bool _1b690bba7_Exist(_1b2e7408b_ReferenceStack* _self_, jule::Ptr<_1b2ed8034_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b690ce72:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b690ce72:;
			++it;
			goto _iter_begin_1b690ce72;
		}
		_iter_end_1b690ce72:;
	};
	return false;;
}

inline jule::Bool _1b699c4d9_Exist(_1b2e7408b_ReferenceStack* _self_, jule::Ptr<_1b2e687bc_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b699d7e8:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b699d7e8:;
			++it;
			goto _iter_begin_1b699d7e8;
		}
		_iter_end_1b699d7e8:;
	};
	return false;;
}

inline jule::Bool _1b567a394_Exist(_1b2e7408b_ReferenceStack* _self_, jule::Ptr<_1b2e8033e_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b567b5c6:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b567b5c6:;
			++it;
			goto _iter_begin_1b567b5c6;
		}
		_iter_end_1b567b5c6:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e7408b_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e753bc_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2e79866_symbolBuilder> _1b2e79d1c_getRoot(jule::Ptr<_1b2e79866_symbolBuilder> _self_) {
	jule::Ptr<_1b2e79866_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1b55e7c90:;
	}
	_iter_end_1b55e7c90:;;
	return _31617_root;;
}



inline void _1b2e7a1d5_pushErr(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1cb188a5c_Token>* _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1b2eb2e87_compilerErr(_32327_token, true, _32342_fmt, _32355_args));;
}



inline void _1b2e7a59d_pushErrText(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1cb188a5c_Token>* _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1b2eb2e87_compilerErr(_32731_token, false, _32746_fmt, _32759_args));;
}



inline void _1b2e7a8bc_pushSuggestion(_1b2e79866_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1b2eb441c_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _33233_fmt, _33246_args);
	};
}



inline jule::Bool _1b2e7ac74_checkCppUseDeclPath(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _1cab78dee_Ext(_33655_path);;
	if (((!(_1cabeee31_IsValidHeaderExt(_33713_ext))) && (!(_1cac001c8_IsValidCppExt(_33713_ext))))) {
		_1b2e7a1d5_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20c812858_Status> _34413_info = ({
		auto except = static__1cab7b011_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1b2e7a1d5_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_20c812858_Status>(nullptr);});
	});;
	if (_20ba66a47_IsDir(_34413_info.ptr())) {
		_1b2e7a1d5_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b04e_buildCppHeaderImport(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _35644_decl) {
	jule::Str _35717_path = (*(_35644_decl)).get()._field_LinkPath;;
	if ((!(_1cabeec11_IsStdHeaderPath((*(_35644_decl)).get()._field_LinkPath)))) {
		_35717_path=_1cab78b57_Join(jule::Slice<jule::Str>::make({_1cb18e7dd_Dir((*(_35644_decl)).get()._field_Token.get()._field_File.ptr()),(*(_35644_decl)).get()._field_LinkPath}));
		jule::Bool _36121_ok = _1b2e7ac74_checkCppUseDeclPath(_self_, _35644_decl, _35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cab79196_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_1b2e7a1d5_pushErr(_self_, &((*(_35644_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_35644_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1b2eab755_ImportInfo>(_1b2eab755_ImportInfo{._field_Token=(*(_35644_decl)).get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=(*(_35644_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b35c_buildStdImport(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _38438_decl) {
	jule::Str _38517_path = (*(_38438_decl)).get()._field_LinkPath.slice(5LL);;
	_38517_path=_1cab750d7_Replace(_38517_path, jule::Str("::", 2), static_cast<jule::Str>(92LL), -1LL);
	_38517_path=_1cab78b57_Join(jule::Slice<jule::Str>::make({_1cac17344_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cab79196_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_1b2e7a1d5_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20c812858_Status> _39513_info = ({
		auto except = static__1cab7b011_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1b2e7a1d5_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_20c812858_Status>(nullptr);});
	});;
	if ((!(_20ba66a47_IsDir(_39513_info.ptr())))) {
		_1b2e7a1d5_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _40513_i = (_1cab708c9_FindLast((*(_38438_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = (*(_38438_decl)).get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1b2eab755_ImportInfo>(_1b2eab755_ImportInfo{._field_Token=(*(_38438_decl)).get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=(*(_38438_decl)).get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=(*(_38438_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_38438_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1b2eae6ae_Package>(_1b2eae6ae_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b66a_buildIdentImport(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2e63e38_UseDecl>* _42341_decl) {
	jule::Str _42413_modPath = _1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7c4b_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1b2e7a1d5_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1b2e7a8bc_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = (*(_42341_decl)).get()._field_LinkPath;;
	_43117_path=_1cab750d7_Replace(_43117_path, jule::Str("::", 2), static_cast<jule::Str>(92LL), -1LL);
	_43117_path=_1cab78b57_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cab79196_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_1b2e7a1d5_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20c812858_Status> _44213_info = ({
		auto except = static__1cab7b011_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1b2e7a1d5_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_20c812858_Status>(nullptr);});
	});;
	if ((!(_20ba66a47_IsDir(_44213_info.ptr())))) {
		_1b2e7a1d5_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _45213_i = (_1cab708c9_FindLast((*(_42341_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = (*(_42341_decl)).get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1b2eab755_ImportInfo>(_1b2eab755_ImportInfo{._field_Token=(*(_42341_decl)).get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=(*(_42341_decl)).get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=(*(_42341_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_42341_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1b2eae6ae_Package>(_1b2eae6ae_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7b978_buildImport(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2e63e38_UseDecl>* _47036_decl) {
	{
		
		if ((*(_47036_decl)).get()._field_CppLinked) {
			_case_begin_1b56102b3:;
			{
				return _1b2e7b04e_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if ((*(_47036_decl)).get()._field_Std) {
			_case_begin_1b5610505:;
			{
				return _1b2e7b35c_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1b560eaba:;
			{
				return _1b2e7b66a_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1b560e9ee:;
	};
}



inline jule::Bool _1b2e7bc86_checkDuplicateUseDecl(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2eab755_ImportInfo> _48313_lpkg = _1b302b594_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>([=](jule::Ptr<_1b2eab755_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return ((*(_48141_pkg)).get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1b2e7a1d5_pushErr(_self_, &((*(_48141_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_48141_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1b2e7a8bc_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1b2e7c0a5_implImportSelections(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _49544_imp, jule::Ptr<_1b2e63e38_UseDecl>* _49567_decl) {
	(*(_49544_imp)).get()._field_Selected=(*(_49567_decl)).get()._field_Selected;
	{
		auto expr = &((*(_49544_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5613d88:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> _49716_item = *it;
			{
				{
					auto expr = &((*(_49544_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b56145c5:;
					if (it != expr_end) {
						jule::Ptr<_1cb188a5c_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1b56145c5;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1b2e7a1d5_pushErr(_self_, &(_49716_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type5)}));
								_1b2e7a8bc_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1b56145c5;
							};
						}
						_iter_next_1b56145c5:;
						++it;
						goto _iter_begin_1b56145c5;
					}
					_iter_end_1b56145c5:;
				};
			}
			_iter_next_1b5613d88:;
			++it;
			goto _iter_begin_1b5613d88;
		}
		_iter_end_1b5613d88:;
	};
}



inline jule::Str _1b2e7c3b3_getAsLinkPath(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1cab6e6db_HasPrefix(_51037_path, _1cac17344_PathStdlib)) {
		(_51037_path).mut_slice(_1cac17344_PathStdlib.len());;
		return (jule::Str("std", 3) + _1cab750d7_Replace(_51037_path, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cab79196_Abs(_1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7c4b_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 92LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1cab750d7_Replace(_51037_path, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL);;
}



inline void _1b2e7c77b_pushCycleError(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2e79866_symbolBuilder>* _52435_sb, jule::Str _52455_path, jule::Str* _52471_message) {
	;
	jule::Str _52613_refersTo = _1cac0c416_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1b2e7c3b3_getAsLinkPath(_self_, _1cb18e7dd_Dir((*(_52435_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1b2e7c3b3_getAsLinkPath(_self_, _52455_path), &__jule_any_type5)}));;
	((*(_52471_message))).buffer.insert(0, (((_1caad032d_Repeat(jule::Str(" ", 1), 4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1b2e7cb44_pushCrossCycleError(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2e79866_symbolBuilder>* _53340_target, jule::Ptr<_1b2eab755_ImportInfo>* _53365_imp, jule::Ptr<_1cb188a5c_Token>* _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1b2e7c77b_pushCycleError(_self_, &(_self_), (*(_53365_imp)).get()._field_Path, &(_53417_message));
	jule::Ptr<_1b2e79866_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1b2e79866_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1b2e7c77b_pushCycleError(_self_, &(_53917_old.get()._field_owner), _1cb18e7dd_Dir(_53917_old.get()._field_table.get()._field_File.ptr()), &(_53417_message));
			if ((_53817_owner.get()._field_owner == (*(_53340_target)))) {
				_1b2e7c77b_pushCycleError(_self_, _53340_target, _1cb18e7dd_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()), &(_53417_message));
				goto _iter_end_1b561be5c;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1b561be5c:;
	}
	_iter_end_1b561be5c:;;
	_1b2e7a1d5_pushErr(_self_.ptr(), _53384_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type5)}));
}



inline jule::Bool _1b2e7ceeb_checkImportCycles(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2eab755_ImportInfo> _55637_imp, jule::Ptr<_1b2e63e38_UseDecl>* _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1cb18e7dd_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1b2e7a1d5_pushErr(_self_.ptr(), &((*(_55656_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1b2e7c3b3_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1cb18e7dd_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1b2e7cb44_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1b2e79866_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1cb18e7dd_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1b2e7cb44_pushCrossCycleError(_self_, &(_57117_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1b2e7d3d6_checkPackageAccessibility(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _59245_decl, jule::Str* _59262_mod, jule::Str* _59273_path) {
	if (((_1b2ea8ad7_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b2ea7c4b_GetModPath((*(_self_))._field_importer) != (*(_59262_mod))) && _1cab73d3e_Contains((*(_59273_path)), jule::Str("internal", 8)))) {
		_1b2e7a1d5_pushErr(_self_, &((*(_59245_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b2e7d79e_importPackage(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2eab755_ImportInfo>* _59838_imp, jule::Ptr<_1b2e63e38_UseDecl>* _59861_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_59838_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2eab755_ImportInfo> _60317_port = _1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea8367_GetImport(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path);;
	if ((_60317_port != nullptr)) {
		(*(_59838_imp)).get()._field_Package=_60317_port.get()._field_Package;
		(*(_59838_imp)).get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7c4b_GetModPath(_self_.get()._field_importer);;
		_1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7a2b_SetModPath(_self_.get()._field_importer, _1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea8059_ModById(_self_.get()._field_importer, (*(_59838_imp)).get()._field_ModId));
		_1b2e7d3d6_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_60817_oldMod), &(_60317_port.get()._field_Path));
		_1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7a2b_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1b2e7ceeb_checkImportCycles(_self_, (*(_59838_imp)), _59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7c4b_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7a2b_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if ((*(_59838_imp)).get()._field_Std) {
			_1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea7a2b_SetModPath(_self_.get()._field_importer, _1cac17344_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1b2e172e8_Ast>> _62222_asts;;
		jule::Slice<_1cac0bec6_Log> _62232_errors;;
		({
			__jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea871e_ImportPackage(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path, (!((*(_59838_imp)).get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1b2e7d3d6_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_61717_oldMod), &((*(_59838_imp)).get()._field_Path));
		{
			auto expr = &(_62222_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b562ad4a:;
			if (it != expr_end) {
				jule::Ptr<_1b2e172e8_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1b302ac69_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_1b302ac69_SymbolTable__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b3078679_buildSymbols(&(_63025_ast), &(_self_.get()._field_importer), _self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_59838_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_59838_imp)).get()._field_Package.get()._field_Files,1);(*(_59838_imp)).get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1b562ad4a:;
				++it;
				goto _iter_begin_1b562ad4a;
			}
			_iter_end_1b562ad4a:;
		};
	};
	_1b2e7c0a5_implImportSelections(_self_.ptr(), _59838_imp, _59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e7daac_importUseDecl(jule::Ptr<_1b2e79866_symbolBuilder> _self_, jule::Ptr<_1b2e63e38_UseDecl>* _64538_decl) {
	jule::Ptr<_1b2eab755_ImportInfo> _64617_imp = _1b2e7b978_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _1b2e7bc86_checkDuplicateUseDecl(_self_.ptr(), &(_64617_imp));;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_1b2e7d79e_importPackage(_self_, &(_64617_imp), _64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_1b2ea8ad7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b2ea8994_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _1b2e7dc88_importUseDecls(jule::Ptr<_1b2e79866_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b563057a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e63e38_UseDecl> _66721_decl = *it;
			{
				_1b2e7daac_importUseDecl(_self_, &(_66721_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1b563057a;
				};
			}
			_iter_next_1b563057a:;
			++it;
			goto _iter_begin_1b563057a;
		}
		_iter_end_1b563057a:;
	};
}



inline void _1b2e7e00d_appendNode(_1b2e79866_symbolBuilder* _self_, _1b2e180da_Node* _67634_node) {
	{
		auto &_match_expr{ (*(_67634_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_20c970da1:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_1b2e79316_buildImpl((*(_67634_node))._field_Data.cast_ptr<_1b2e676ab_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_20c9a6eb4:;
			{
				jule::Ptr<_1b305ad32_TypeAlias> _68121_ta = _1b2e75ca2_buildTypeAlias((*(_67634_node))._field_Data.cast_ptr<_1b2e62a4c_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_20c9a70e6:;
			{
				jule::Ptr<_1b2e683e3_Struct> _68421_srct = _1b2e76610_buildStruct((*(_67634_node))._field_Data.cast_ptr<_1b2e66996_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_20c9a71e5:;
			{
				jule::Ptr<_1b2e6e85b_Fn> _68721_f = _1b2e7726a_buildFn((*(_67634_node))._field_Data.cast_ptr<_1b2e5d20c_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_20c9eda33:;
			{
				jule::Ptr<_1b2e8033e_Trait> _69021_t = _1b2e777a9_buildTrait((*(_67634_node))._field_Data.cast_ptr<_1b2e670a1_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_20ca4bc3a:;
			{
				jule::Ptr<_1b2ed8034_Var> _69321_v = _1b2e78cc7_buildVar((*(_67634_node))._field_Data.cast_ptr<_1b2e5e1db_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_20ca5c91b:;
			{
				jule::Ptr<_1b2e82484_Enum> _69621_e = _1b2e78090_buildEnum((*(_67634_node))._field_Data.cast_ptr<_1b2e64dd4_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_20ca64280:;
			{
				jule::Ptr<_1b2e83a7e_TypeEnum> _69921_e = _1b2e78a30_buildTypeEnum((*(_67634_node))._field_Data.cast_ptr<_1b2e65ee5_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_20c8d5244:;
			{
				_1b2e7a1d5_pushErr(_self_, &((*(_67634_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_20ca4c521:;
	};
}



inline void _1b2e7e1d9_appendNodes(_1b2e79866_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20ca76b11:;
		if (it != expr_end) {
			_1b2e180da_Node _70721_node = *it;
			{
				_1b2e7e00d_appendNode(_self_, &(_70721_node));
			}
			_iter_next_20ca76b11:;
			++it;
			goto _iter_begin_20ca76b11;
		}
		_iter_end_20ca76b11:;
	};
}



inline void _1b2e7e45e_pushDirectivePass(_1b2e79866_symbolBuilder* _self_, jule::Ptr<_1b2e184d6_Directive>* _71241_d) {
	if (((*(_71241_d)).get()._field_Args.len() == 0LL)) {
		_1b2e7a1d5_pushErr(_self_, &((*(_71241_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_71241_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1cb188a5c_Token> _71717_arg = (*(_71241_d)).get()._field_Args[1LL];;
		_1b2e7a1d5_pushErr(_self_, &(_71717_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_71241_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1cb188a5c_Token> _72113_arg = (*(_71241_d)).get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_1b2e7a1d5_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_1b2e7a1d5_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_1b2e753bc_Pass{._field_Token=(*(_71241_d)).get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL, (_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1b2e7e63a_appendTopDirectives(_1b2e79866_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e326d399:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1e326ed07:;
						{
							_1b2e7e45e_pushDirectivePass(_self_, &(_73921_d));
						}
					}
					_match_end_1e326ec80:;
				};
			}
			_iter_next_1e326d399:;
			++it;
			goto _iter_begin_1e326d399;
		}
		_iter_end_1e326d399:;
	};
}



inline void _1b2e7e816_build(jule::Ptr<_1b2e79866_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1b302ac69_SymbolTable>(_1b302ac69_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1b2e7e63a_appendTopDirectives(_self_.ptr());
	_1b2e7dc88_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1b2e7e1d9_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e79866_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b2e8073a_Str(_1b2e8033e_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b2e80a48_Equal(jule::Ptr<_1b2e8033e_Trait> _self_, jule::Ptr<_1b305ba25_TypeKind> _2521_other) {
	jule::Ptr<_1b2e8033e_Trait> _2613_trt = _1b3060573_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _1b2e80dab_IsBuiltin(_1b2e8033e_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2e811b9_FindMethod(_1b2e8033e_Trait* _self_, jule::Str _3929_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e3273a64:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1e3273a64:;
			++it;
			goto _iter_begin_1e3273a64;
		}
		_iter_end_1e3273a64:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8033e_Trait _Src) {
	_Stream << _1b2e8073a_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b2e81d79_AutoExpr(_1b2e8198e_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8198e_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b2e827e7_Str(_1b2e82484_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b2e82b05_Equal(jule::Ptr<_1b2e82484_Enum> _self_, jule::Ptr<_1b305ba25_TypeKind> _3821_other) {
	jule::Ptr<_1b2e82484_Enum> _3913_enm = _1b305e5e9_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1b2e8198e_EnumItem> _1b2e83045_FindItem(_1b2e82484_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e32761b5:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8198e_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1e32761b5:;
			++it;
			goto _iter_begin_1e32761b5;
		}
		_iter_end_1e32761b5:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e82484_Enum _Src) {
	_Stream << _1b2e827e7_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e834b8_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b2e83dae_Str(_1b2e83a7e_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b2e841bc_Equal(jule::Ptr<_1b2e83a7e_TypeEnum> _self_, jule::Ptr<_1b305ba25_TypeKind> _8021_other) {
	jule::Ptr<_1b2e83a7e_TypeEnum> _8113_tenm = _1b305e85d_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1b2e834b8_TypeEnumItem> _1b2e845b8_FindItem(_1b2e83a7e_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e3278283:;
		if (it != expr_end) {
			jule::Ptr<_1b2e834b8_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1e3278283:;
			++it;
			goto _iter_begin_1e3278283;
		}
		_iter_end_1e3278283:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e83a7e_TypeEnum _Src) {
	_Stream << _1b2e83dae_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1b2eb48a1_Sema>*,jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*)> _1b2e864dd_readyFn(jule::Ptr<_1b2e860ae_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1b2eb48a1_Sema>*,jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*)>([=](jule::Ptr<_1b2eb48a1_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e3285658:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_1b2e58a76_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1b305a2e8_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1e3285658;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e3287627:;
						if (it != expr_end) {
							jule::Ptr<_1b2e4b77d_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1b305ba25_TypeKind> _7229_kind = _1b2ebbba5_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1b3077997_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type19) {
											_case_begin_1e3289849:;
											{
												jule::Ptr<_1b2e4bd44_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1b2e4bd44_IdentTypeDecl>(&__jule_any_type19);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1b2e87676_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1e32897e4:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1e3287627:;
							++it;
							goto _iter_begin_1e3287627;
						}
						_iter_end_1e3287627:;
					};
				}
				_iter_next_1e3285658:;
				++it;
				_6418_i++;
				goto _iter_begin_1e3285658;
			}
			_iter_end_1e3285658:;
		};
		return true;;
	});;
}



inline jule::Bool _1b2e86752_readyFi(jule::Ptr<_1b2e860ae_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1b2ec1281_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1b2e864dd_readyFn(_self_)));;
}



inline jule::Bool _1b2e869b6_readySi(jule::Ptr<_1b2e860ae_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1b2e864dd_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1b2e86c2a_ready(jule::Ptr<_1b2e860ae_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1b2e86752_readyFi(_self_);;
	};
	return _1b2e869b6_readySi(_self_);;
}



inline jule::Bool _1b2e86e8e_check(jule::Ptr<_1b2e860ae_constraintChecker> _self_) {
	if ((!(_1b2e86c2a_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e3291554:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_1b305a2e8_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1e3291554;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e329217b:;
					if (it != expr_end) {
						jule::Ptr<_1b305ba25_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1b3061772_Prim> _12425_prim = _1b305ddac_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1b3062366_IsConstraint(_12425_prim.ptr()))) {
								if (_1b2e8738a_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1e3291554;
								};
								goto _iter_next_1e329217b;
							};
							if (_1b305c22e_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1e3291554;
							};
						}
						_iter_next_1e329217b:;
						++it;
						goto _iter_begin_1e329217b;
					}
					_iter_end_1e329217b:;
				};
				_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1e3291554:;
			++it;
			_11914_i++;
			goto _iter_begin_1e3291554;
		}
		_iter_end_1e3291554:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e860ae_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e883e1_IsTraitImpl(_1b2e87ee5_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1b2e88655_IsStructImpl(_1b2e87ee5_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e87ee5_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8d050_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8d44b_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8d737_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8daab_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8dd97_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e8e6b1_IsWhileNext(_1b2e8e31a_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8e31a_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e8ec00_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e900eb_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e904a3_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e9078e_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e90a7a_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e90e32_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e913a5_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e9175c_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e922a7_IsGenericTypeMatch(_1b2e91c9b_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e91c9b_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2e92ab0_isDefault(_1b2e927e6_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e927e6_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e92d9b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e93220_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e9382a_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e93c9d_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e95046_FindPackage(_1b2e94ab2_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1b2eb4dbd_FindPackage((*(_self_))._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2e95354_SelectPackage(_1b2e94ab2_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _46432_selector) {
	return _1b2eb51cb_SelectPackage((*(_self_))._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2e9570b_FindVar(_1b2e94ab2_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1b2ed8034_Var> _47817_v = _1b302d50d_findVar((*(_self_))._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1b2e94ab2_scopeChecker> _48317_parent = (*(_self_))._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1b302d50d_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1e32bb1e9:;
	}
	_iter_end_1e32bb1e9:;;
	return _1b2eb5583_FindVar((*(_self_))._field_s.ptr(), _47526_ident, _47538_cpp_linked);;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b2e95ab3_FindTypeAlias(_1b2e94ab2_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1b305ad32_TypeAlias> _50517_ta = _1b302d95e_findTypeAlias((*(_self_))._field_table.ptr(), _50232_ident, _50244_cppLinked, true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1b2e94ab2_scopeChecker> _51017_parent = (*(_self_))._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1b302d95e_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident, _50244_cppLinked, true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1e32bdd56:;
	}
	_iter_end_1e32bdd56:;;
	return _1b2eb593a_FindTypeAlias((*(_self_))._field_s.ptr(), _50232_ident, _50244_cppLinked);;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b2e95e6a_FindStruct(_1b2e94ab2_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1b2eb5ce2_FindStruct((*(_self_))._field_s.ptr(), _52729_ident, _52741_cppLinked);;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2e96322_FindFn(_1b2e94ab2_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1b2eb6199_FindFn((*(_self_))._field_s.ptr(), _53625_ident, _53637_cppLinked);;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b2e96630_FindTrait(_1b2e94ab2_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1b2eb64a7_FindTrait((*(_self_))._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1b2e82484_Enum> _1b2e9693d_FindEnum(_1b2e94ab2_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1b2eb67b5_FindEnum((*(_self_))._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2e96c4b_FindTypeEnum(_1b2e94ab2_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1b2eb6ac3_FindTypeEnum((*(_self_))._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1b2e9707b_isUnsafe(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1b2e972e0_isRoot(_1b2e94ab2_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1b2e974bb_stop(_1b2e94ab2_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1b2e97730_stopped(_1b2e94ab2_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1b2e97994_isDeferred(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e97c08_getRoot(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1b632dc06:;
	}
	_iter_end_1b632dc06:;;
	return _62217_root;;
}



inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e97e6c_getHardRoot(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1b632ee27:;
	}
	_iter_end_1b632ee27:;;
	return _63217_root;;
}



inline jule::Ptr<_1b2e9078e_Label> _1b2e9827a_findLabel(_1b2e94ab2_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6330961:;
		if (it != expr_end) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b6331478:;
						{
							jule::Ptr<_1b2e9078e_Label> _64625_label = _64321_st.cast_ptr<_1b2e9078e_Label>(&__jule_any_type20);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1b6331379:;
				};
			}
			_iter_next_1b6330961:;
			++it;
			goto _iter_begin_1b6330961;
		}
		_iter_end_1b6330961:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e9382a_scopeLabel> _1b2e98588_findLabelScope(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1b2e9382a_scopeLabel> _65917_label = _1b2e98896_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e9382a_scopeLabel> _1b2e98896_findLabelAll(_1b2e94ab2_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b63336cd:;
		if (it != expr_end) {
			jule::Ptr<_1b2e9382a_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1b63336cd:;
			++it;
			goto _iter_begin_1b63336cd;
		}
		_iter_end_1b63336cd:;
	};
	return nullptr;;
}



inline jule::Bool _1b2e98c4d_isDuplicatedIdent(_1b2e94ab2_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1b2ed8034_Var> _68313_v = _1b2e9570b_FindVar(_self_, _68253_ident, false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1b2eb6e25_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1b305ad32_TypeAlias> _69113_ta = _1b2e95ab3_FindTypeAlias(_self_, _68253_ident, false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1b2eb6e25_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1b2e98ec3_checkVarDecl(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5e1db_VarDecl> _70236_decl) {
	jule::Ptr<_1b2ed8034_Var> _70317_v = _1b2e78cc7_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type8));;
	});;
	if (_1b2e98c4d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)), _70317_v.get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b2e974bb_stop(_self_.ptr());
		return;;
	};
	_1b2ecc38b_checkVarDecl(_self_.get()._field_s, &(_70317_v), jule::Trait<_1b3077997_Lookup>(_self_, 0));
	if (((!(_1b2ed8661_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1b2ed09cc_checkTypeVar(_self_.get()._field_s, &(_70317_v), jule::Trait<_1b3077997_Lookup>(_self_, 0));
}



inline void _1b2e99248_checkTypeAliasDecl(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e62a4c_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1b305ad32_TypeAlias> _72717_ta = _1b2e75ca2_buildTypeAlias(_72642_decl);;
	if (_1b2e98c4d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)), _72717_ta.get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b2e974bb_stop(_self_.ptr());
		return;;
	};
	_1b2ec78a3_checkTypeAliasDecl(_self_.get()._field_s, &(_72717_ta), jule::Trait<_1b3077997_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1b2e974bb_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1b2e8d050_Scope> _1b2e994ac_getChild(_1b2e94ab2_scopeChecker* _self_) {
	return jule::new_ptr<_1b2e8d050_Scope>(_1b2e8d050_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1b2e99875_checkChildSsc(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5b716_ScopeTree>* _75038_tree, jule::Ptr<_1b2e8d050_Scope>* _75061_s, jule::Ptr<_1b2e94ab2_scopeChecker>* _75077_ssc) {
	(*(_75077_ssc)).get()._field_parent=_self_;
	_1b2ea48b3_check((*(_75077_ssc)), _75038_tree, _75061_s);
}



inline jule::Ptr<_1b2e8d050_Scope> _1b2e99c2c_checkChildSc(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5b716_ScopeTree>* _75537_tree, jule::Ptr<_1b2e94ab2_scopeChecker>* _75560_ssc) {
	jule::Ptr<_1b2e8d050_Scope> _75617_s = _1b2e994ac_getChild(_self_.ptr());;
	_1b2e99875_checkChildSsc(_self_, _75537_tree, &(_75617_s), _75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1b2e8d050_Scope> _1b2e9a03a_checkChild(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5b716_ScopeTree>* _76135_tree) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _76217_ssc = _1b2ea4b27_newChildChecker(_self_);;
	return _1b2e99c2c_checkChildSc(_self_, _76135_tree, &(_76217_ssc));;
}



inline void _1b2e9a2b0_checkAnonScope(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5b716_ScopeTree> _76638_tree) {
	jule::Ptr<_1b2e8d050_Scope> _76717_s = _1b2e9a03a_checkChild(_self_, &(_76638_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type21));;
}



inline void _1b2e9a5ce_processErrorCall(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel>* _77141_m, jule::Ptr<_1cb188a5c_Token> _77172_err) {
	if (_1b2e97994_isDeferred(_self_)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2e94ab2_scopeChecker> _77617_root = _1b2e97c08_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77141_m)).get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1b2e9a854_checkExpr(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e50c9e_Expr> _78433_expr) {
	jule::Ptr<_1b3032611_Eval> _78517_eval = _1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1b3030a93_Data> _78717_d = _1b304d033_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b634921b:;
			{
				jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1b2e6d618_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1b2e9a5ce_processErrorCall(_self_, &(_79421_m), _78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1b634942a:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else {
			_case_begin_1b6349370:;
			{
				_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6349183:;
	};
}



inline jule::Ptr<_1b2e8d44b_If> _1b2e9ab62_checkIf(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e61a4b_If> _81431_i) {
	jule::Ptr<_1b2e8d050_Scope> _81517_s = _1b2e9a03a_checkChild(_self_, &(_81431_i.get()._field_Scope));;
	jule::Ptr<_1b3030a93_Data> _81717_d = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b3061772_Prim> _82217_prim = _1b305ddac_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1b3064742_IsBool(_82217_prim.ptr()))))) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2e8d44b_If>(_1b2e8d44b_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1b2e8d737_Else> _1b2e9ae70_checkElse(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e61e03_Else> _83433_e) {
	return jule::new_ptr<_1b2e8d737_Else>(_1b2e8d737_Else{._field_Scope=_1b2e9a03a_checkChild(_self_, &(_83433_e.get()._field_Scope))});;
}



inline void _1b2e9b1e5_checkConditional(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e62376_Conditional> _84040_conditional) {
	jule::Ptr<_1b2e8daab_Conditional> _84117_c = jule::new_ptr<_1b2e8daab_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type35));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1b2e8d44b_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1b2e9ab62_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto expr = &(_84040_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6353ac7:;
		if (it != expr_end) {
			jule::Ptr<_1b2e61a4b_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1b2e9ab62_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1b6353ac7:;
			++it;
			goto _iter_begin_1b6353ac7;
		}
		_iter_end_1b6353ac7:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1b2e9ae70_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1b2e9b657_checkIterScopeSsc(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_1b2e5b716_ScopeTree> _85654_tree, jule::Ptr<_1b2e8d050_Scope>* _85677_s, jule::Ptr<_1b2e94ab2_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1b2e99875_checkChildSsc(_self_, &(_85654_tree), _85677_s, &(_85692_ssc));
}



inline jule::Ptr<_1b2e8d050_Scope> _1b2e9baa8_checkIterScopeSc(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_1b2e5b716_ScopeTree> _86153_tree, jule::Ptr<_1b2e94ab2_scopeChecker> _86175_ssc) {
	jule::Ptr<_1b2e8d050_Scope> _86217_scope = _1b2e994ac_getChild(_self_.ptr());;
	_1b2e9b657_checkIterScopeSsc(_self_, _86136_it, _86153_tree, &(_86217_scope), _86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1b2e8d050_Scope> _1b2e9be60_checkIterScope(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_1b2e5b716_ScopeTree>* _86752_tree) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _86817_ssc = _1b2ea4b27_newChildChecker(_self_);;
	return _1b2e9baa8_checkIterScopeSc(_self_, _86734_it, (*(_86752_tree)), _86817_ssc);;
}



inline void _1b2e9c1d5_checkInfIter(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5ec03_Iter>* _87237_it) {
	jule::Ptr<_1b2e8dd97_InfIter> _87317_kind = jule::new_ptr<_1b2e8dd97_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type36));;
	_87317_kind.get()._field_Scope=_1b2e9be60_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)), &((*(_87237_it)).get()._field_Scope));
}



inline void _1b2e9c45a_checkWhileIter(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5ec03_Iter>* _87839_it) {
	jule::Ptr<_1b2e604c8_WhileKind> _87917_wh = (*(_87839_it)).get()._field_Kind.cast_ptr<_1b2e604c8_WhileKind>(&__jule_any_type37);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1b2e9c1d5_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1b2e8e31a_WhileIter> _88517_kind = jule::new_ptr<_1b2e8e31a_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type38));;
	_88517_kind.get()._field_Scope=_1b2e9be60_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)), &((*(_87839_it)).get()._field_Scope));
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1b3030a93_Data> _89021_d = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1b3061772_Prim> _89517_prim = _1b305ddac_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1b3064742_IsBool(_89517_prim.ptr())))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_1b2e6082a_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1b2e8c57c_isValidAstStForNextSt(&(_87917_wh.get()._field_Next))))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1b2ea365e_checkNode(_self_, &(_87917_wh.get()._field_Next));
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91517_n);
			if ((!(_1b2e8c824_isValidStForNextSt(&(_91825_st))))) {
				_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1b2e9c6d0_checkRangeIter(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5ec03_Iter>* _92839_it) {
	jule::Ptr<_1b2e60d69_RangeKind> _92917_rang = (*(_92839_it)).get()._field_Kind.cast_ptr<_1b2e60d69_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1b3030a93_Data> _93117_d = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2e8ec00_RangeIter> _93617_kind = jule::new_ptr<_1b2e8ec00_RangeIter>(_1b2e8ec00_RangeIter{._field_Expr=_93117_d, });;
	_1b3026d20_rangeChecker _94017_rc = _1b3026d20_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1b30286d4_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type40));;
	jule::Ptr<_1b2e94ab2_scopeChecker> _95317_ssc = _1b2ea4b27_newChildChecker(_self_);;
	jule::Ptr<_1b2e8d050_Scope> _95417_scope = _1b2e994ac_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1b2eb6e25_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1b2e98c4d_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1b2eb6e25_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1b2e98c4d_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1b2e9b657_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)), (*(_92839_it)).get()._field_Scope, &(_95417_scope), _95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1b2e9c955_checkIter(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5ec03_Iter> _97833_it) {
	if (_1b2e60055_IsInf(_97833_it.ptr())) {
		_1b2e9c1d5_checkInfIter(_self_, &(_97833_it));
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b636dcac:;
			{
				_1b2e9c45a_checkWhileIter(_self_, &(_97833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b636e939:;
			{
				_1b2e9c6d0_checkRangeIter(_self_, &(_97833_it));
			}
		}
		else {
			_case_begin_1b636db8b:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b636db36:;
	};
}



inline jule::Bool _1b2e9cc63_checkValidContLabel(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1b2e9d071_checkValidBreakLabel(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1b2e927e6_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1b2e900eb_ContSt> _1b2e9d37e_checkContValidScope(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e615c8_ContSt> _103339_c) {
	if (_1b2e97994_isDeferred(_self_)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1b2e900eb_ContSt>();;
	};
	jule::Ptr<_1b2e94ab2_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1b6376a62:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1b6376ad9:;
			{
				return jule::new_ptr<_1b2e900eb_ContSt>(_1b2e900eb_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1b63769a7:;
	};
	_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b2e9d604_checkCont(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e615c8_ContSt> _105729_c) {
	jule::Ptr<_1b2e900eb_ContSt> _105817_cont = _1b2e9d37e_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1b2e9382a_scopeLabel> _106421_label = _1b2e8a756_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I32 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1b637d7a0:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1b6380153:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1b2e8ec00_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1b63801b9:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1b2e8e31a_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1b637eecc:;
					{
						_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1b637ee77:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1b2e9cc63_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type41));;
}



inline void _1b2e9d879_checkLabel(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e58e2d_LabelSt> _110434_l) {
	if ((_1b2e9827a_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1b2e9078e_Label> _111017_label = jule::new_ptr<_1b2e9078e_Label>(_1b2e9078e_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type20));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1b2e9382a_scopeLabel>>::make({jule::new_ptr<_1b2e9382a_scopeLabel>(_1b2e9382a_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1b2e9daee_pushGoto(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e592d5_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1b2e90a7a_GotoSt>(_1b2e90a7a_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type42));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1b2e93c9d_scopeGoto>>::make({jule::new_ptr<_1b2e93c9d_scopeGoto>(_1b2e93c9d_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1b2e9dd74_checkPostfix(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5a21a_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e50c9e_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1b3030a93_Data> _114217_d = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1b2e8c2d5_checkAssign(&(_self_.get()._field_s), &(_114217_d), nullptr, _113536_a.get()._field_Setter);
	if ((_1b305e385_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b306856a_Ptr> _115021_ptr = _1b305e385_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1b306903d_IsUnsafe(_115021_ptr.ptr())) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1b305ddac_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1b18de0ce_IsNum(_1b305ddac_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1b2e90e32_Postfix>(_1b2e90e32_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type43));;
}



inline jule::Bool _1b2e9e182_isNewAssignIdent(_1b2e94ab2_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_1cb18b301_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1b302dd16_defByIdent((*(_self_))._field_table.ptr(), _116835_ident, false) == nullptr);;
}



inline jule::Bool _1b2e9e5d3_checkStructureAssignOp(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e687bc_StructIns>* _117547_s, jule::Ptr<_1b2e5a21a_AssignSt>* _117567_a, jule::Ptr<_1b3030a93_Data>* _117586_r) {
	jule::Ptr<_1b2e71132_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ (*(_117567_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1b6391ede:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1b6393353:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1b63933b9:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1b6393430:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1b639242e:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1b6392495:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1b639250b:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1b6392572:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1b639361c:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1b6393683:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b63923b8:;
			{
				_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b2e3db9e_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b6391d24:;
	};
	if ((_117817_overload == nullptr)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b2e3db9e_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1b2e70263_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1b2ebe449_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference, &(_121017_p.get()._field_Kind), _117586_r, (*(_117567_a)).get()._field_Setter);;
}



inline void _1b2e9e858_checkSingleAssign(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5a21a_AssignSt>* _121442_a) {
	jule::Ptr<_1b3030a93_Data> _121517_l = nullptr;;
	if ((!(_1cb18b301_IsIgnoreIdent((*(_121442_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1b2e50c9e_Expr> _121821_expr = (*(_121442_a)).get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b3032611_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1b2ebdb41_evalp(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0), _121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1b2e9707b_isUnsafe(_self_);
	jule::Ptr<_1b3030a93_Data> _123217_r = _1b304d033_evalExpr(_122517_eval, (*(_121442_a)).get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1b305cbbe_Void(_123217_r.get()._field_Kind.ptr())) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type23));;
		return;;
	};
	if ((!(_1b2e8c2d5_checkAssign(&(_self_.get()._field_s), &(_121517_l), _123217_r, (*(_121442_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1b3060a4b_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e68cea_OperandExprModel> _125417_lm = jule::new_ptr<_1b2e68cea_OperandExprModel>(_1b2e68cea_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1b2e68cea_OperandExprModel> _125817_rm = jule::new_ptr<_1b2e68cea_OperandExprModel>(_1b2e68cea_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1b2e913a5_Assign>(_1b2e913a5_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=(*(_121442_a)).get()._field_Setter}), &__jule_any_type44));;
	if ((!(*(_121442_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_1b2e687bc_StructIns> _126521_strct = _1b306030e_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1b2e9e5d3_checkStructureAssignOp(_self_, &(_126521_strct), _121442_a, &(_123217_r));
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind=(*(_121442_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_121442_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1b3050244_binaryEval _127221_solver = static__1b3050b5c_new(_122517_eval, (*(_121442_a)).get()._field_Setter);;
		_123217_r=_1b30559b9_solveExplicit(&_127221_solver, &(_121517_l), &(_123217_r));
		if ((_123217_r == nullptr)) {
			return;;
		};
		((*(_121442_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_1b301b485_assignTypeChecker _128117_checker = _1b301b485_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=(*(_121442_a)).get()._field_Setter};;
	if (_1b301c60c_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1b2e9ed86_processEndPartOfMultiAssign(_1b2e94ab2_scopeChecker* _self_, jule::Ptr<_1b2e9175c_MultiAssign>* _129351_st, jule::Ptr<_1b2e5a21a_AssignSt>* _129414_a, jule::Ptr<_1b2e59bcb_AssignLeft>* _129433_lexpr, jule::Ptr<_1b3030a93_Data>* _129458_l, jule::Ptr<_1b3030a93_Data>* _129473_r) {
	if (((!((*(_129433_lexpr)).get()._field_Reference)) && _1cb18b301_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident))) {
		if (_1b305cbbe_Void((*(_129473_r)).get()._field_Kind.ptr())) {
			_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_129414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_129414_a)).get()._field_Declarative && ((*(_129433_lexpr)).get()._field_Reference || _1b2e9e182_isNewAssignIdent(_self_, (*(_129433_lexpr)).get()._field_Ident)))) {
		if (_1b2e98c4d_isDuplicatedIdent(_self_, 0LLU, (*(_129433_lexpr)).get()._field_Ident)) {
			_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1b2eb7882_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1b2e974bb_stop(_self_);
			return;;
		};
		if (_1cb18b301_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident)) {
			_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2ed8034_Var> _131521_v = jule::new_ptr<_1b2ed8034_Var>(_1b2ed8034_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_129433_lexpr)).get()._field_Token, ._field_Ident=(*(_129433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_129433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_129433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Expr=(*(_129414_a)).get()._field_Right, ._field_Data=(*(_129473_r))}), });;
		_1b2ed06ad_checkVar((*(_self_))._field_s, &(_131521_v));
		_131521_v.get()._field_Value=nullptr;
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_131521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131521_v.get()._field_Mutable, ._field_Reference=_131521_v.get()._field_Reference, ._field_Lvalue=(!(_131521_v.get()._field_Constant)), ._field_Model=jule::Any(_131521_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_131521_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_131521_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_129433_lexpr)).get()._field_Mutable || (*(_129433_lexpr)).get()._field_Reference)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1b2e8c2d5_checkAssign(&((*(_self_))._field_s), _129458_l, (*(_129473_r)), (*(_129414_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1b2ec71bb_checkValidityForInitExpr((*(_self_))._field_s, (*(_129458_l)).get()._field_Mutable, false, &((*(_129458_l)).get()._field_Kind), _129473_r, &((*(_129414_a)).get()._field_Setter));
	_1b301b485_assignTypeChecker _135817_checker = _1b301b485_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_129458_l)).get()._field_Kind, ._field_d=(*(_129473_r)), ._field_errorToken=(*(_129414_a)).get()._field_Setter};;
	_1b301c60c_check(&_135817_checker);
	(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push((*(_129458_l)));;
}



inline void _1b2ea011c_checkMultiAssign(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5a21a_AssignSt>* _136841_a) {
	jule::Ptr<_1b3030a93_Data> _136917_rd = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), (*(_136841_a)).get()._field_Right);;
	if ((_136917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b3030a93_Data>> _137317_right = _1b2e8b515_getDatasFromTupleData(&(_136917_rd));;
	if ((_137317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1b63b41cb:;
				{
					jule::Ptr<_1b2e6a03d_IndexingExprModel> _137725_iem = _137317_right[0LL].get()._field_Model.cast_ptr<_1b2e6a03d_IndexingExprModel>(&__jule_any_type45);;
					if ((_1b30607d7_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137317_right=jule::Slice<jule::Ptr<_1b3030a93_Data>>::make({jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_1b30607d7_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1b63b4176:;
		};
	};
	{
		
		if (((*(_136841_a)).get()._field_Left.len() > _137317_right.len())) {
			_case_begin_1b63b452d:;
			{
				_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_136841_a)).get()._field_Left.len() < _137317_right.len())) {
			_case_begin_1b63b4594:;
			{
				_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b63b63cb:;
	};
	jule::Ptr<_1b2e9175c_MultiAssign> _139617_st = jule::new_ptr<_1b2e9175c_MultiAssign>(_1b2e9175c_MultiAssign{._field_R=_136917_rd.get()._field_Model});;
	{
		auto expr = &((*(_136841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b63b881d:;
		if (it != expr_end) {
			jule::I32 _139913_i = it - expr->begin();
			{
				jule::Ptr<_1b2e59bcb_AssignLeft> _140021_lexpr = (*(_136841_a)).get()._field_Left[_139913_i];;
				jule::Ptr<_1b3030a93_Data> _140121_l = nullptr;;
				if (((!(_1cb18b301_IsIgnoreIdent(_140021_lexpr.get()._field_Ident))) && ((!((*(_136841_a)).get()._field_Declarative)) || (!(_1b2e9e182_isNewAssignIdent(_self_.ptr(), _140021_lexpr.get()._field_Ident)))))) {
					_140121_l=_1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _140021_lexpr.get()._field_Expr);
					if ((_140121_l == nullptr)) {
						goto _iter_next_1b63b881d;
					};
				};
				jule::Ptr<_1b3030a93_Data> _140921_r = _137317_right[_139913_i];;
				_1b2e9ed86_processEndPartOfMultiAssign(_self_.ptr(), &(_139617_st), _136841_a, &(_140021_lexpr), &(_140121_l), &(_140921_r));
			}
			_iter_next_1b63b881d:;
			++it;
			_139913_i++;
			goto _iter_begin_1b63b881d;
		}
		_iter_end_1b63b881d:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139617_st, &__jule_any_type46));;
}



inline void _1b2ea0392_checkAssignSt(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5a21a_AssignSt> _141537_a) {
	{
		
		if (_1cb18d39c_IsPostfixOp(_141537_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1b63bc8bb:;
			{
				_1b2e9dd74_checkPostfix(_self_, _141537_a);
			}
		}
		else if (((_141537_a.get()._field_Left.len() == 1LL) && (!(_141537_a.get()._field_Declarative)))) {
			_case_begin_1b63bc5be:;
			{
				_1b2e9e858_checkSingleAssign(_self_, &(_141537_a));
			}
		}
		else {
			_case_begin_1b63bbed6:;
			{
				_1b2ea011c_checkMultiAssign(_self_, &(_141537_a));
			}
		}
		_match_end_1b63bbe1a:;
	};
}



inline jule::Ptr<_1b2e8d050_Scope> _1b2ea0749_checkCaseScope(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e927e6_Case>* _142635_c, jule::Ptr<_1b2e5b716_ScopeTree>* _142650_tree) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _142717_ssc = _1b2ea4b27_newChildChecker(_self_);;
	_142717_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142635_c))));
	return _1b2e99c2c_checkChildSc(_self_, _142650_tree, &(_142717_ssc));;
}



inline jule::Ptr<_1b2e927e6_Case> _1b2ea0c44_checkCase(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e91c9b_Match> _143233_m, jule::I32 _143244_i, jule::Ptr<_1b2e62ec0_Case> _143256_c, jule::Ptr<_1b3030a93_Data> _143275_expr) {
	jule::Ptr<_1b2e927e6_Case> _143317_case = _143233_m.get()._field_Cases[_143244_i];;
	_143317_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1b3030a93_Data>>::alloc(0LL, _143256_c.get()._field_Exprs.len());
	jule::Bool _143517_genericMatched = false;;
	jule::Ptr<_1b3032611_Eval> _143617_eval = _1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0));;
	{
		auto expr = &(_143256_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b63c2382:;
		if (it != expr_end) {
			jule::Ptr<_1b2e50c9e_Expr> _143721_e = *it;
			{
				jule::Ptr<_1b3030a93_Data> _143821_d = _1b304c917_evalExprKind(_143617_eval, _143721_e.get()._field_Kind);;
				if ((_143821_d == nullptr)) {
					goto _iter_next_1b63c2382;
				};
				if (_143233_m.get()._field_TypeMatch) {
					_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
					if ((_1b2e8b26d_countMatchType(&(_143233_m), &(_143821_d.get()._field_Kind)) > 1LL)) {
						_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_143821_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_143275_expr.get()._field_Kind.get()._field_Generic) {
						_143517_genericMatched=(_143517_genericMatched || _1b305c22e_Equal(_143275_expr.get()._field_Kind, _143821_d.get()._field_Kind));
					} else {
						if ((_1b305e85d_TypeEnum(_143275_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1b2ebe89a_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
						} else {
							jule::Ptr<_1b2e8033e_Trait> _145329_trt = _1b3060573_Trait(_143275_expr.get()._field_Kind.ptr());;
							if ((_145329_trt != nullptr)) {
								_1b2ebe89a_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1b63c2382;
				};
				if (_143821_d.get()._field_Decl) {
					_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1b63c2382;
				};
				_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
				_1b301b485_assignTypeChecker _147121_checker = _1b301b485_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_143275_expr.get()._field_Kind, ._field_d=_143821_d, ._field_errorToken=_143721_e.get()._field_Token};;
				_1b301c60c_check(&_147121_checker);
			}
			_iter_next_1b63c2382:;
			++it;
			goto _iter_begin_1b63c2382;
		}
		_iter_end_1b63c2382:;
	};
	if ((((!(_143233_m.get()._field_TypeMatch)) || (!(_143275_expr.get()._field_Kind.get()._field_Generic))) || _143517_genericMatched)) {
		_143317_case.get()._field_Scope=_1b2ea0749_checkCaseScope(_self_, &(_143317_case), &(_143256_c.get()._field_Scope));
	};
	return _143317_case;;
}



inline void _1b2ea110c_checkCases(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e63696_MatchCase>* _148535_m, jule::Ptr<_1b2e91c9b_Match> _148554_rm, jule::Ptr<_1b3030a93_Data> _148570_expr) {
	_148554_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1b2e927e6_Case>>::alloc(0LL, (*(_148535_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b63ca8c9:;
		if (it != expr_end) {
			jule::I32 _148713_i = it - expr->begin();
			{
				jule::Ptr<_1b2e927e6_Case> _148821_case = jule::new_ptr<_1b2e927e6_Case>(_1b2e927e6_Case{._field_Owner=_148554_rm, });;
				if ((_148713_i > 0LL)) {
					_148554_rm.get()._field_Cases[(_148713_i - 1LL)].get()._field_Next=_148821_case;
				};
				_148554_rm.get()._field_Cases = jule::alloc_for_append(_148554_rm.get()._field_Cases,1);_148554_rm.get()._field_Cases.__push(_148821_case);;
			}
			_iter_next_1b63ca8c9:;
			++it;
			_148713_i++;
			goto _iter_begin_1b63ca8c9;
		}
		_iter_end_1b63ca8c9:;
	};
	if (((_148554_rm.get()._field_Default != nullptr) && ((*(_148535_m)).get()._field_Cases.len() > 0LL))) {
		_148554_rm.get()._field_Cases[(_148554_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148554_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b63cdd94:;
		if (it != expr_end) {
			jule::I32 _150114_i = it - expr->begin();
			jule::Ptr<_1b2e62ec0_Case> _150121_c = *it;
			{
				_1b2ea0c44_checkCase(_self_, _148554_rm, _150114_i, _150121_c, _148570_expr);
			}
			_iter_next_1b63cdd94:;
			++it;
			_150114_i++;
			goto _iter_begin_1b63cdd94;
		}
		_iter_end_1b63cdd94:;
	};
}



inline jule::Ptr<_1b2e927e6_Case> _1b2ea14b4_checkDefault(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e91c9b_Match> _150636_m, jule::Ptr<_1b2e61e03_Else> _150651_d) {
	jule::Ptr<_1b2e927e6_Case> _150717_def = jule::new_ptr<_1b2e927e6_Case>(_1b2e927e6_Case{._field_Owner=_150636_m, });;
	_150717_def.get()._field_Scope=_1b2ea0749_checkCaseScope(_self_, &(_150717_def), &(_150651_d.get()._field_Scope));
	return _150717_def;;
}



inline void _1b2ea1739_checkComptimePanic(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e8d050_Scope>* _151439_s) {
	if (((*(_151439_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151913_stmt = (*(_151439_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151913_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b63d2062:;
			{
				jule::Ptr<_1b3030a93_Data> _152217_d = _151913_stmt.cast_ptr<_1b3030a93_Data>(&__jule_any_type23);;
				{
					auto &_match_expr{ _152217_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1b63d2d43:;
						{
							jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel> _152521_m = _152217_d.get()._field_Model.cast_ptr<_1b2e6c32b_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ _152521_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type47) {
									_case_begin_1b63d3ccd:;
									{
										jule::Ptr<_1b18de5da_Const> _152825_c = _152521_m.get()._field_Expr.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
										if (_1b18e39b8_IsStr(_152825_c.ptr())) {
											jule::Ptr<_1b2e94ab2_scopeChecker> _153033_root = _1b2e97e6c_getHardRoot(_self_);;
											_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _153033_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1b18e1620_ReadStr(_152825_c.ptr()), &__jule_any_type5)}));
										};
									}
								}
								_match_end_1b63d3abe:;
							};
						}
					}
					_match_end_1b63d2947:;
				};
			}
		}
		_match_end_1b63d200c:;
	};
}



inline void _1b2ea1a58_pushTypeMatch(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e91c9b_Match> _153837_tm, jule::Ptr<_1b2e63696_MatchCase>* _153854_m) {
	if (_153837_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto expr = &(_153837_tm.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b63d3272:;
			if (it != expr_end) {
				jule::Ptr<_1b2e927e6_Case> _154225_c = *it;
				{
					if ((_154225_c.get()._field_Scope != nullptr)) {
						_1b2ea1739_checkComptimePanic(_self_, &(_154225_c.get()._field_Scope));
						_153837_tm.get()._field_Default=_154225_c;
						_153837_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1b63d3272:;
				++it;
				goto _iter_begin_1b63d3272;
			}
			_iter_end_1b63d3272:;
		};
		if (((*(_153854_m)).get()._field_Default != nullptr)) {
			_153837_tm.get()._field_Cases=nullptr;
			_153837_tm.get()._field_Default=_1b2ea14b4_checkDefault(_self_, _153837_tm, (*(_153854_m)).get()._field_Default);
			if ((_153837_tm.get()._field_Default != nullptr)) {
				_1b2ea1739_checkComptimePanic(_self_, &(_153837_tm.get()._field_Default.get()._field_Scope));
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153837_tm, &__jule_any_type48));;
}



inline void _1b2ea1ccd_checkTypeMatch(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e63696_MatchCase>* _156239_m) {
	jule::Ptr<_1b3030a93_Data> _156317_d = _1b304cc25_eval(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), (*(_156239_m)).get()._field_Expr);;
	if ((_156317_d == nullptr)) {
		return;;
	};
	if (((!(_156317_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1b305ddac_Prim(_156317_d.get()._field_Kind.ptr()) != nullptr) && _1b3064c1a_IsAny(_1b305ddac_Prim(_156317_d.get()._field_Kind.ptr()).ptr())) || (_1b3060573_Trait(_156317_d.get()._field_Kind.ptr()) != nullptr)) || (_1b305e85d_TypeEnum(_156317_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_156239_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e91c9b_Match> _157417_tm = jule::new_ptr<_1b2e91c9b_Match>(_1b2e91c9b_Match{._field_Expr=_156317_d, ._field_TypeMatch=true, });;
	if (((!(_157417_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_156239_m)).get()._field_Default != nullptr))) {
		_157417_tm.get()._field_Default=_1b2ea14b4_checkDefault(_self_, _157417_tm, (*(_156239_m)).get()._field_Default);
	};
	_1b2ea110c_checkCases(_self_, _156239_m, _157417_tm, _156317_d);
	_1b2ea1a58_pushTypeMatch(_self_, _157417_tm, _156239_m);
}



inline void _1b2ea2053_checkCommonMatch(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e63696_MatchCase>* _158741_m) {
	jule::Ptr<_1b3030a93_Data> _158817_d = nullptr;;
	if (((*(_158741_m)).get()._field_Expr == nullptr)) {
		_158817_d=jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1b18e009c_NewBool(true)});
		_158817_d.get()._field_Model=jule::Any(_158817_d.get()._field_Constant, &__jule_any_type47);
	} else {
		_158817_d=_1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), (*(_158741_m)).get()._field_Expr);
		if ((_158817_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b2e91c9b_Match> _160217_mc = jule::new_ptr<_1b2e91c9b_Match>(_1b2e91c9b_Match{._field_Expr=_158817_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_160217_mc, &__jule_any_type48));;
	if (((*(_158741_m)).get()._field_Default != nullptr)) {
		_160217_mc.get()._field_Default=_1b2ea14b4_checkDefault(_self_, _160217_mc, (*(_158741_m)).get()._field_Default);
	};
	_1b2ea110c_checkCases(_self_, _158741_m, _160217_mc, _158817_d);
}



inline void _1b2ea22c8_checkMatch(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e63696_MatchCase> _161434_m) {
	if (_161434_m.get()._field_TypeMatch) {
		_1b2ea1ccd_checkTypeMatch(_self_, &(_161434_m));
		return;;
	};
	_1b2ea2053_checkCommonMatch(_self_, &(_161434_m));
}



inline void _1b2ea254d_checkFall(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e595c1_FallSt> _162229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1b2e97994_isDeferred(_self_))) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1b2e927e6_Case* _163017_case = ((_1b2e927e6_Case*)(_self_.get()._field_cse));;
	if ((_163017_case->_field_Next == nullptr)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1b2e92d9b_FallSt>(_1b2e92d9b_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_163017_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_1b2e904a3_BreakSt> _1b2ea285b_checkBreakWithLabel(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e61221_BreakSt> _164239_b) {
	jule::Ptr<_1b2e904a3_BreakSt> _164317_brk = _1b2ea2b69_checkPlainBreak(_self_, _164239_b);;
	if ((_164317_brk == nullptr)) {
		return nullptr;;
	};
	_164317_brk.get()._field_It=0LLU;
	_164317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1b2e9382a_scopeLabel> _165317_label = _1b2e8a756_findLabelParent(_164239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_165317_label == nullptr)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_165317_label.get()._field_used=true;
	if (((_165317_label.get()._field_pos + 1LL) >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _166613_i = (_165317_label.get()._field_pos + 1LL);;
	if ((_166613_i >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _167021_st = _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166613_i];;
		{
			auto &_match_expr{ _167021_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1b63ed2c0:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1b63eede8:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1b2e8ec00_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1b63eee5e:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1b2e8e31a_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1b63eeed6:;
				{
					_164317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1b2e91c9b_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1b63eec72:;
				{
					_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1b63eec1c:;
		};
	};
	if ((_164317_brk.get()._field_It != 0LLU)) {
		if ((!(_1b2e9d071_checkValidBreakLabel(_self_, _164317_brk.get()._field_It)))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_164317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1b2e9d071_checkValidBreakLabel(_self_, _164317_brk.get()._field_Mtch)))) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _164317_brk;;
}



inline jule::Ptr<_1b2e904a3_BreakSt> _1b2ea2b69_checkPlainBreak(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e61221_BreakSt> _170035_b) {
	if (_1b2e97994_isDeferred(_self_)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e94ab2_scopeChecker> _170617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170617_scope.get()._field_it == 0LLU) && (_170617_scope.get()._field_cse == 0LLU)) && (_170617_scope.get()._field_parent != nullptr)) && (_170617_scope.get()._field_owner == nullptr))) {
			_case_begin_1b6405edc:;
			{
				_170617_scope=_170617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170617_scope.get()._field_it != 0LLU)) {
			_case_begin_1b6406064:;
			{
				return jule::new_ptr<_1b2e904a3_BreakSt>(_1b2e904a3_BreakSt{._field_It=_170617_scope.get()._field_it, });;
			}
		}
		else if ((_170617_scope.get()._field_cse != 0LLU)) {
			_case_begin_1b64060db:;
			{
				return jule::new_ptr<_1b2e904a3_BreakSt>(_1b2e904a3_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1b2e927e6_Case*)(_170617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1b6405e21:;
	};
	_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b2ea2dde_checkBreak(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e61221_BreakSt> _172230_b) {
	if ((_172230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1b2e904a3_BreakSt> _172421_brk = _1b2ea285b_checkBreakWithLabel(_self_, _172230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_1b2e904a3_BreakSt> _172917_brk = _1b2ea2b69_checkPlainBreak(_self_, _172230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172917_brk, &__jule_any_type50));;
}



inline void _1b2ea3164_checkRet(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5e593_RetSt> _173332_r) {
	if (_1b2e97994_isDeferred(_self_)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _173332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2e93220_RetSt> _173817_rt = jule::new_ptr<_1b2e93220_RetSt>(_1b2e93220_RetSt{._field_Func=_1b2e97c08_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173817_rt, &__jule_any_type51));;
	jule::Ptr<_1b3028daa_retTypeChecker> _174317_rtc = jule::new_ptr<_1b3028daa_retTypeChecker>(_1b3028daa_retTypeChecker{._field_sc=_self_, ._field_f=_173817_rt.get()._field_Func, ._field_errorToken=_173332_r.get()._field_Token, });;
	jule::Bool _174813_ok = _1b3029aae_check(_174317_rtc.ptr(), &(_173332_r.get()._field_Expr));;
	if ((!(_174813_ok))) {
		return;;
	};
	if ((_173332_r.get()._field_Expr != nullptr)) {
		_173817_rt.get()._field_Expr=_174317_rtc.get()._field_model;
	};
}



inline void _1b2ea33d9_checkUseExpr(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e51640_UseExpr> _175832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1b2e97994_isDeferred(_self_)) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1b2ea365e_checkNode(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Any* _177434_node) {
	{
		auto &_match_expr{ (*(_177434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b6413390:;
			{
				_1b2e9a2b0_checkAnonScope(_self_, (*(_177434_node)).cast_ptr<_1b2e5b716_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b6412ca7:;
			{
				_1b2e98ec3_checkVarDecl(_self_, (*(_177434_node)).cast_ptr<_1b2e5e1db_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b64131a3:;
			{
				_1b2e99248_checkTypeAliasDecl(_self_, (*(_177434_node)).cast_ptr<_1b2e62a4c_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b64134c2:;
			{
				_1b2e9a854_checkExpr(_self_, (*(_177434_node)).cast_ptr<_1b2e50c9e_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b6413538:;
			{
				_1b2e9b1e5_checkConditional(_self_, (*(_177434_node)).cast_ptr<_1b2e62376_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b64136e2:;
			{
				_1b2e9c955_checkIter(_self_, (*(_177434_node)).cast_ptr<_1b2e5ec03_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b6413758:;
			{
				_1b2e9d604_checkCont(_self_, (*(_177434_node)).cast_ptr<_1b2e615c8_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b64137be:;
			{
				_1b2e9d879_checkLabel(_self_, (*(_177434_node)).cast_ptr<_1b2e58e2d_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b6413835:;
			{
				_1b2e9daee_pushGoto(_self_, (*(_177434_node)).cast_ptr<_1b2e592d5_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b641389b:;
			{
				_1b2ea0392_checkAssignSt(_self_, (*(_177434_node)).cast_ptr<_1b2e5a21a_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b6413912:;
			{
				_1b2ea22c8_checkMatch(_self_, (*(_177434_node)).cast_ptr<_1b2e63696_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b6413978:;
			{
				_1b2ea254d_checkFall(_self_, (*(_177434_node)).cast_ptr<_1b2e595c1_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b64139de:;
			{
				_1b2ea2dde_checkBreak(_self_, (*(_177434_node)).cast_ptr<_1b2e61221_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b6413a55:;
			{
				_1b2ea3164_checkRet(_self_, (*(_177434_node)).cast_ptr<_1b2e5e593_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b6413abb:;
			{
				_1b2ea33d9_checkUseExpr(_self_, (*(_177434_node)).cast_ptr<_1b2e51640_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1b6412e2d:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b6412d51:;
	};
}



inline void _1b2ea383a_checkResult(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	_1b2e5b10b_Stmt _181217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _181217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b641c256:;
			{
				jule::Ptr<_1b2e51640_UseExpr> _181521_ue = _181217_stmt._field_Data.cast_ptr<_1b2e51640_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1b3030a93_Data> _181621_d = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _181521_ue.get()._field_Expr);;
				if ((_181621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181621_d, &__jule_any_type23));;
				jule::Ptr<_1b3028daa_retTypeChecker> _182121_rtc = jule::new_ptr<_1b3028daa_retTypeChecker>(_1b3028daa_retTypeChecker{._field_sc=_self_, ._field_types=_1b2e72254_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181521_ue.get()._field_Expr.get()._field_Token, });;
				_1b3029aae_check(_182121_rtc.ptr(), &(_181521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b641b981:;
			{
				jule::Ptr<_1b2e50c9e_Expr> _182821_expr = _181217_stmt._field_Data.cast_ptr<_1b2e50c9e_Expr>(&__jule_any_type53);;
				jule::Ptr<_1b3030a93_Data> _182921_d = _1b304d033_evalExpr(_1b2ebde4e_eval(_self_.get()._field_s, jule::Trait<_1b3077997_Lookup>(_self_, 0)), _182821_expr);;
				if ((_182921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b6421b84:;
						{
							jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel> _183525_m = _182921_d.get()._field_Model.cast_ptr<_1b2e6d618_BuiltinErrorCallExprModel>(&__jule_any_type22);;
							_1b2e9a5ce_processErrorCall(_self_, &(_183525_m), _182821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182921_d, &__jule_any_type23));;
						}
					}
					else {
						_case_begin_1b6421777:;
						{
							return;;
						}
					}
					_match_end_1b6421568:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1b641b9e7:;
			{
				_1b2ea365e_checkNode(_self_, &(_181217_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b641b91a:;
			{
				_1b2ea365e_checkNode(_self_, &(_181217_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b641b794:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1b2ea3a16_checkTree(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _185717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185717_n)--;
	};
	for (; (_self_.get()._field_i < _185717_n); (_self_.get()._field_i)++) {
		{
			_1b2e5b10b_Stmt _186521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1b2ea365e_checkNode(_self_, &(_186521_stmt._field_Data));
			if (_1b2e97730_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1b642436d:;
	}
	_iter_end_1b642436d:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1b2ea383a_checkResult(_self_);
	};
}



inline void _1b2ea3d35_checkGoto(_1b2e94ab2_scopeChecker* _self_, jule::Ptr<_1b2e93c9d_scopeGoto>* _187633_gt, jule::Ptr<_1b2e9382a_scopeLabel>* _187654_label) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _187717_gtsc = (*(_187633_gt)).get()._field_scope;;
	while (((_187717_gtsc.get()._field_childIndex - 1LL) > (*(_187654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_187717_gtsc=_187717_gtsc.get()._field_parent;
		}
	_iter_next_1b6427959:;
	}
	_iter_end_1b6427959:;;
	jule::I32 _188217_n = 0LL;;
	if ((_187717_gtsc.get()._field_scope == (*(_187654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_187633_gt)).get()._field_pos > (*(_187654_label)).get()._field_pos)) {
			return;;
		};
		_188217_n=(*(_187633_gt)).get()._field_pos;
	};
	jule::I32 _189517_i = ((*(_187654_label)).get()._field_pos - 1LL);;
	if ((_188217_n == 0LL)) {
		{
			auto expr = &((*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6429e89:;
			if (it != expr_end) {
				jule::I32 _189817_j = it - expr->begin();
				jule::Any _189820_stmt = *it;
				{
					if (_1b2e8ae2c_stmtIsGotoScope(&(_189820_stmt), &(_187717_gtsc.get()._field_scope))) {
						_188217_n=_189817_j;
						goto _iter_end_1b6429e89;
					};
				}
				_iter_next_1b6429e89:;
				++it;
				_189817_j++;
				goto _iter_begin_1b6429e89;
			}
			_iter_end_1b6429e89:;
		};
	};
	for (; (_189517_i >= _188217_n); (_189517_i)--) {
		{
			jule::Any _190821_stmt = (*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_189517_i];;
			if (_1b2e8cabb_stmtIsDef(&(_190821_stmt))) {
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_187633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_187633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1b642ad7a:;
	}
	_iter_end_1b642ad7a:;;
}



inline void _1b2ea4011_checkGotos(_1b2e94ab2_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b642a7c5:;
		if (it != expr_end) {
			jule::Ptr<_1b2e93c9d_scopeGoto> _191721_gt = *it;
			{
				jule::Ptr<_1b2e9382a_scopeLabel> _191821_label = _1b2e98896_findLabelAll(_self_, _191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191821_label == nullptr)) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _191721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1b642a7c5;
				};
				_191821_label.get()._field_used=true;
				_1b2ea3d35_checkGoto(_self_, &(_191721_gt), &(_191821_label));
			}
			_iter_next_1b642a7c5:;
			++it;
			goto _iter_begin_1b642a7c5;
		}
		_iter_end_1b642a7c5:;
	};
}



inline void _1b2ea41dc_checkLabels(_1b2e94ab2_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b642ee6c:;
		if (it != expr_end) {
			jule::Ptr<_1b2e9382a_scopeLabel> _193016_l = *it;
			{
				if ((!(_193016_l.get()._field_used))) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _193016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b642ee6c:;
			++it;
			goto _iter_begin_1b642ee6c;
		}
		_iter_end_1b642ee6c:;
	};
}



inline void _1b2ea43b8_checkVars(_1b2e94ab2_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b643039b:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _193816_v = *it;
			{
				if (((((!(_193816_v.get()._field_Used)) && (!(_1cb18b301_IsIgnoreIdent(_193816_v.get()._field_Ident)))) && (!(_1cb18b598_IsAnonIdent(_193816_v.get()._field_Ident)))) && (!_193816_v.get()._field_Ident.equal("self", 4)))) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _193816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b643039b:;
			++it;
			goto _iter_begin_1b643039b;
		}
		_iter_end_1b643039b:;
	};
}



inline void _1b2ea4594_checkAliases(_1b2e94ab2_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64333c1:;
		if (it != expr_end) {
			jule::Ptr<_1b305ad32_TypeAlias> _194616_a = *it;
			{
				if ((((!(_194616_a.get()._field_Used)) && (!(_1cb18b301_IsIgnoreIdent(_194616_a.get()._field_Ident)))) && (!(_1cb18b598_IsAnonIdent(_194616_a.get()._field_Ident))))) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _194616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_194616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b64333c1:;
			++it;
			goto _iter_begin_1b64333c1;
		}
		_iter_end_1b64333c1:;
	};
}



inline void _1b2ea48b3_check(jule::Ptr<_1b2e94ab2_scopeChecker> _self_, jule::Ptr<_1b2e5b716_ScopeTree>* _195430_tree, jule::Ptr<_1b2e8d050_Scope>* _195453_s) {
	(*(_195453_s)).get()._field_Deferred=(*(_195430_tree)).get()._field_Deferred;
	(*(_195453_s)).get()._field_Unsafety=(*(_195430_tree)).get()._field_Unsafety;
	jule::I32 _195813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_195430_tree));
	_self_.get()._field_scope=(*(_195453_s));
	_1b2ea3a16_checkTree(_self_);
	if ((_195813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1b2ea43b8_checkVars(_self_.ptr());
		_1b2ea4594_checkAliases(_self_.ptr());
		if (_1b2e972e0_isRoot(_self_.ptr())) {
			_1b2ea4011_checkGotos(_self_.ptr());
			_1b2ea41dc_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2ea4b27_newChildChecker(jule::Ptr<_1b2e94ab2_scopeChecker> _self_) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _197817_base = _1b2e8a080_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_197817_base.get()._field_parent=_self_;
	_197817_base.get()._field_labels=_self_.get()._field_labels;
	_197817_base.get()._field_gotos=_self_.get()._field_gotos;
	_197817_base.get()._field_childIndex=static_cast<jule::I32>((_self_.get()._field_childIndex + 1LL));
	return _197817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e94ab2_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1b2ea5b17_checkCdef(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b643952b:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b2e6e85b_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_1b643975c;
				};
				goto _case_begin_1b64397b2;
			}
		}
		else {
			_case_begin_1b64397b2:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b643975c:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b2ea5d8c_checkTypedef(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b643bc26:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1b643be46;
				};
				goto _case_begin_1b643be9b;
			}
		}
		else {
			_case_begin_1b643be9b:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b643be46:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b2ea6112_checkDerive(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b643e443:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_1b643e663;
				};
				goto _case_begin_1b643e6b8;
			}
		}
		else {
			_case_begin_1b643e6b8:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b643e663:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1b64431a0:;
		}
		else {
			_case_begin_1b6440356:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b6442cd7:;
	};
}



inline void _1b2ea6387_checkNamespace(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b64430d4:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b64446ac:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b2e6e85b_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b6444723:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b6444602:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b644459c:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1cb188a5c_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b644cc48:;
			{
				if ((_1b30561c3_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1b2e184d6_Directive> _11625_typedef = jule::new_ptr<_1b2e184d6_Directive>(_1b2e184d6_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_1b2e184d6_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1b644c7e7:;
	};
}



inline void _1b2ea660c_checkDeprecated(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b644cde1:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b644eec0:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b2e6e85b_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b6450036:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b644e882:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b644e6d9:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1cb188a5c_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1b2ea6882_checkTest(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b645778b:;
			{
				jule::Ptr<_1b2e6e85b_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1b2e6e85b_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1b2e1bb38_IsInit(_16717_f.ptr())))) && (!(_1b2e34a41_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1b6458094;
				};
				if (_1b2e3d75e_IsMethod(_16717_f.ptr())) {
					_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1b6458094;
				};
				goto _case_begin_1b64581d7;
			}
		}
		else {
			_case_begin_1b64581d7:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b6458094:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b2ea6b07_checkDirective(_1b2ea56c7_directiveChecker* _self_, jule::Ptr<_1b2e184d6_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1b645bebb:;
			{
				_1b2ea5b17_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1b645c032:;
			{
				_1b2ea5d8c_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1b645c098:;
			{
				_1b2ea6112_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1b645c10e:;
			{
				_1b2ea6387_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1b645cbe2:;
			{
				_1b2ea660c_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1b645cc58:;
			{
				_1b2ea6882_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1b645ccbe:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b645be55:;
			{
				_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b645be00:;
	};
}



inline void _1b2ea6cd3_check(_1b2ea56c7_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6460332:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _20821_d = *it;
			{
				_1b2ea6b07_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1b6460332:;
			++it;
			goto _iter_begin_1b6460332;
		}
		_iter_end_1b6460332:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b2ea56c7_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eabc72_FindPackage(_1b2eab755_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eac080_SelectPackage(_1b2eab755_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2eac437_FindVar(_1b2eab755_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _19226_ident)))) {
		return nullptr;;
	};
	return _1b2ea8e6c_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _19226_ident, false);;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b2eac7de_FindTypeAlias(_1b2eab755_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _20432_ident)))) {
		return nullptr;;
	};
	return _1b2ea939b_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20432_ident, false);;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b2eacb96_FindStruct(_1b2eab755_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _21629_ident)))) {
		return nullptr;;
	};
	return _1b2ea9786_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21629_ident, false);;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2ead04d_FindFn(_1b2eab755_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _22825_ident)))) {
		return nullptr;;
	};
	return _1b2ea9be8_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22825_ident, false);;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b2ead35b_FindTrait(_1b2eab755_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _23928_ident)))) {
		return nullptr;;
	};
	return _1b2eaa006_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23928_ident);;
}



inline jule::Ptr<_1b2e82484_Enum> _1b2ead669_FindEnum(_1b2eab755_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _25027_ident)))) {
		return nullptr;;
	};
	return _1b2eaa347_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25027_ident);;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2ead977_FindTypeEnum(_1b2eab755_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1b2eadd1d_isLookupable(_self_, _26131_ident)))) {
		return nullptr;;
	};
	return _1b2eaa688_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _26131_ident);;
}



inline jule::Bool _1b2eadd1d_isLookupable(_1b2eab755_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1b2eae12b_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1b2eae12b_existIdent(_self_, _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1b2eae12b_existIdent(_1b2eab755_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6475600:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_29116_sident = it;
			{
				if (((*(_29116_sident)).get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1b6475600:;
			++it;
			goto _iter_begin_1b6475600;
		}
		_iter_end_1b6475600:;
	};
	return false;;
}



inline jule::Bool _1b2eae3b2_isAccessibleViaSelection(_1b2eab755_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1b2eae12b_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2eab755_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eaeb87_FindPackage(_1b2eae6ae_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eaee95_SelectPackage(_1b2eae6ae_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2eb034c_FindVar(_1b2eae6ae_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1b2ea8e6c_findVarInPackage(&((*(_self_))._field_Files), _32026_ident, _32038_cpp_linked);;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b2eb0704_FindTypeAlias(_1b2eae6ae_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1b2ea939b_findTypeAliasInPackage(&((*(_self_))._field_Files), _32632_ident, _32644_cpp_linked);;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b2eb0aab_FindStruct(_1b2eae6ae_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1b2ea9786_findStructInPackage(&((*(_self_))._field_Files), _33229_ident, _33241_cpp_linked);;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2eb0e63_FindFn(_1b2eae6ae_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1b2ea9be8_findFnInPackage(&((*(_self_))._field_Files), _33825_ident, _33837_cpp_linked);;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b2eb1271_FindTrait(_1b2eae6ae_Package* _self_, jule::Str _34428_ident) {
	return _1b2eaa006_findTraitInPackage(&((*(_self_))._field_Files), _34428_ident);;
}



inline jule::Ptr<_1b2e82484_Enum> _1b2eb157e_FindEnum(_1b2eae6ae_Package* _self_, jule::Str _35027_ident) {
	return _1b2eaa347_findEnumInPackage(&((*(_self_))._field_Files), _35027_ident);;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2eb188c_FindTypeEnum(_1b2eae6ae_Package* _self_, jule::Str _35631_ident) {
	return _1b2eaa688_findTypeEnumInPackage(&((*(_self_))._field_Files), _35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2eae6ae_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eb4dbd_FindPackage(_1b2eb48a1_Sema* _self_, jule::Str _22330_ident) {
	return _1b302b286_FindPackage((*(_self_))._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b2eb51cb_SelectPackage(_1b2eb48a1_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _23332_selector) {
	return _1b302b594_SelectPackage((*(_self_))._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2eb5583_FindVar(_1b2eb48a1_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1b2ed8034_Var> _24517_v = _1b2ea8e6c_findVarInPackage(&((*(_self_))._field_files), _24326_ident, _24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b649d1d8:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_25121_imp), _24326_ident)))) {
					goto _iter_next_1b649d1d8;
				};
				_24517_v=_1b2eac437_FindVar(_25121_imp.ptr(), _24326_ident, _24338_cpp_linked);
				if (((_24517_v != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _24517_v.get()._field_Public, _24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1b649d1d8:;
			++it;
			goto _iter_begin_1b649d1d8;
		}
		_iter_end_1b649d1d8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b2eb593a_FindTypeAlias(_1b2eb48a1_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1b305ad32_TypeAlias> _27217_ta = _1b2ea939b_findTypeAliasInPackage(&((*(_self_))._field_files), _27032_ident, _27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a096b:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_27821_imp), _27032_ident)))) {
					goto _iter_next_1b64a096b;
				};
				_27217_ta=_1b2eac7de_FindTypeAlias(_27821_imp.ptr(), _27032_ident, _27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _27217_ta.get()._field_Public, _27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1b64a096b:;
			++it;
			goto _iter_begin_1b64a096b;
		}
		_iter_end_1b64a096b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b2eb5ce2_FindStruct(_1b2eb48a1_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_1b2e683e3_Struct> _29917_s = _1b2ea9786_findStructInPackage(&((*(_self_))._field_files), _29729_ident, _29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a31ee:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_30421_imp), _29729_ident)))) {
					goto _iter_next_1b64a31ee;
				};
				_29917_s=_1b2eacb96_FindStruct(_30421_imp.ptr(), _29729_ident, _29741_cppLinked);
				if (((_29917_s != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _29917_s.get()._field_Public, _29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1b64a31ee:;
			++it;
			goto _iter_begin_1b64a31ee;
		}
		_iter_end_1b64a31ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2eb6199_FindFn(_1b2eb48a1_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1b2e6e85b_Fn> _32417_f = _1b2ea9be8_findFnInPackage(&((*(_self_))._field_files), _32225_ident, _32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a5982:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_33021_imp), _32225_ident)))) {
					goto _iter_next_1b64a5982;
				};
				_32417_f=_1b2ead04d_FindFn(_33021_imp.ptr(), _32225_ident, _32237_cpp_linked);
				if (((_32417_f != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _32417_f.get()._field_Public, _32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1b64a5982:;
			++it;
			goto _iter_begin_1b64a5982;
		}
		_iter_end_1b64a5982:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b2eb64a7_FindTrait(_1b2eb48a1_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1b2e8033e_Trait> _35117_t = _1b2eaa006_findTraitInPackage(&((*(_self_))._field_files), _34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a837a:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_35721_imp), _34928_ident)))) {
					goto _iter_next_1b64a837a;
				};
				_35117_t=_1b2ead35b_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _35117_t.get()._field_Public, _35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1b64a837a:;
			++it;
			goto _iter_begin_1b64a837a;
		}
		_iter_end_1b64a837a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e82484_Enum> _1b2eb67b5_FindEnum(_1b2eb48a1_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1b2e82484_Enum> _37817_e = _1b2eaa347_findEnumInPackage(&((*(_self_))._field_files), _37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b510d3ee:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_38421_imp), _37627_ident)))) {
					goto _iter_next_1b510d3ee;
				};
				_37817_e=_1b2ead669_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _37817_e.get()._field_Public, _37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1b510d3ee:;
			++it;
			goto _iter_begin_1b510d3ee;
		}
		_iter_end_1b510d3ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2eb6ac3_FindTypeEnum(_1b2eb48a1_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1b2e83a7e_TypeEnum> _40517_e = _1b2eaa688_findTypeEnumInPackage(&((*(_self_))._field_files), _40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b511092e:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1b2eb32c8_impIsLookupable(&(_41121_imp), _40331_ident)))) {
					goto _iter_next_1b511092e;
				};
				_40517_e=_1b2ead977_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1b2eb7c39_isAccessibleDefine(_self_, _40517_e.get()._field_Public, _40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1b511092e:;
			++it;
			goto _iter_begin_1b511092e;
		}
		_iter_end_1b511092e:;
	};
	return nullptr;;
}



inline jule::Bool _1b2eb6e25_isFlag(_1b2eb48a1_Sema* _self_, jule::I32 _42721_flags) {
	return (((*(_self_))._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1b2eb719a_setCurrentFile(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b302ac69_SymbolTable> _42937_f) {
	(*(_self_))._field_file=_42937_f;
}



inline void _1b2eb7563_pushErr(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1b2eb2e87_compilerErr(&(_43126_token), true, _43141_fmt, _43154_args));;
}



inline void _1b2eb7882_pushSugggestion(_1b2eb48a1_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1b2eb441c_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _43634_fmt, _43647_args);
	};
}



inline jule::Bool _1b2eb7c39_isAccessibleDefine(_1b2eb48a1_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_1cb188a5c_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_1cb18e7dd_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1cb18e7dd_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1b2eb818a_isDuplicatedIdent(_1b2eb48a1_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5116c76:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> *_44916_f = it;
			{
				if (_1b302e267_isDuplicatedIdent((*(_44916_f)).ptr(), _44832_itself, _44849_ident, _44861_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_44916_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b5117ace:;
					if (it != expr_end) {
						jule::Ptr<_1b2eab755_ImportInfo> *_45420_imp = it;
						{
							{
								auto expr = &((*(_45420_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b51183a4:;
								if (it != expr_end) {
									jule::Ptr<_1cb188a5c_Token> *_45524_selected = it;
									{
										if (((*(_45524_selected)).get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1b51183a4:;
									++it;
									goto _iter_begin_1b51183a4;
								}
								_iter_end_1b51183a4:;
							};
						}
						_iter_next_1b5117ace:;
						++it;
						goto _iter_begin_1b5117ace;
					}
					_iter_end_1b5117ace:;
				};
			}
			_iter_next_1b5116c76:;
			++it;
			goto _iter_begin_1b5116c76;
		}
		_iter_end_1b5116c76:;
	};
	return false;;
}



inline void _1b2eb84a9_checkDirectives(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _46540_d, jule::Any _46566_o) {
	_1b2ea56c7_directiveChecker _46617_dc = _1b2ea56c7_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1b2e184d6_Directive>>>)((&((*(_46540_d)))))), ._field_o=_46566_o};;
	_1b2ea6cd3_check(&_46617_dc);
}



inline jule::Bool _1b2eb890a_checkGenericQuantity(_1b2eb48a1_Sema* _self_, jule::I32 _47439_required, jule::I32 _47454_given, jule::Ptr<_1cb188a5c_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1b511b099:;
			{
				_1b2eb7563_pushErr(_self_, _47466_token, jule::Str("define not has generics", 23), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1b511a8b2:;
			{
				_1b2eb7563_pushErr(_self_, _47466_token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1b511a928:;
			{
				_1b2eb7563_pushErr(_self_, _47466_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1b511a9a0:;
			{
				_1b2eb7563_pushErr(_self_, _47466_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b511a84b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b511a780:;
	};
}



inline jule::Bool _1b2eb8cd4_isDuplicatedImportSelection(_1b2eb48a1_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b511c386:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> *_49416_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_49416_imp))) == _49342_itself)) {
					goto _iter_end_1b511c386;
				};
				if (_1b2eae12b_existIdent((*(_49416_imp)).ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1b511c386:;
			++it;
			goto _iter_begin_1b511c386;
		}
		_iter_end_1b511c386:;
	};
	return false;;
}



inline jule::Any _1b2eb919c_getImportDef(_1b2eb48a1_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1b2eab755_ImportInfo>* _50644_imp) {
	if ((_1b30827d7_findPackageBuiltinDef((*(_50644_imp)).get()._field_LinkPath, _50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_50644_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51203cd:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1b302dd16_defByIdent(_51021_f.ptr(), _50627_ident, false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1b51203cd:;
			++it;
			goto _iter_begin_1b51203cd;
		}
		_iter_end_1b51203cd:;
	};
	return nullptr;;
}



inline jule::Bool _1b5126d85_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b2ed8034_Var>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b512ae66_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b305ad32_TypeAlias>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b512ec39_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b2e683e3_Struct>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b5134018_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b2e8033e_Trait>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b5137cdb_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b2e82484_Enum>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b513bbd0_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b2e83a7e_TypeEnum>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b5140ac4_checkImportSelection(_1b2eb48a1_Sema* _self_, jule::Ptr<_1cb188a5c_Token>* _52143_ident, jule::Ptr<_1b2e6e85b_Fn>* _52159_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b2eaab83_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1b2eb9884_checkImportSelectedSelections(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_53553_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5122710:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> _53716_ident = *it;
			{
				if (_53716_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1b5122710;
				};
				if (_1b2eb8cd4_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_53553_imp)))), _53716_ident.get()._field_Kind)) {
					_1b2eb7563_pushErr(_self_, _53716_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
					_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b5122710;
				};
				jule::Any _54921_def = _1b2eb919c_getImportDef(_self_, _53716_ident.get()._field_Kind, _53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1b5125922:;
						{
							goto _iter_next_1b5122710;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b5122e08:;
						{
							jule::Ptr<_1b2ed8034_Var> _55525_v = _54921_def.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
							__jule_func_result=(_1b5126d85_checkImportSelection(_self_, &(_53716_ident), &(_55525_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1b5125070:;
						{
							jule::Ptr<_1b305ad32_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1b305ad32_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1b512ae66_checkImportSelection(_self_, &(_53716_ident), &(_55825_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b51250d6:;
						{
							jule::Ptr<_1b2e683e3_Struct> _56125_s = _54921_def.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1b512ec39_checkImportSelection(_self_, &(_53716_ident), &(_56125_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b5125b31:;
						{
							jule::Ptr<_1b2e8033e_Trait> _56425_t = _54921_def.cast_ptr<_1b2e8033e_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1b5134018_checkImportSelection(_self_, &(_53716_ident), &(_56425_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1b5125b97:;
						{
							jule::Ptr<_1b2e82484_Enum> _56725_e = _54921_def.cast_ptr<_1b2e82484_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1b5137cdb_checkImportSelection(_self_, &(_53716_ident), &(_56725_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1b5125c0d:;
						{
							jule::Ptr<_1b2e83a7e_TypeEnum> _57025_e = _54921_def.cast_ptr<_1b2e83a7e_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1b513bbd0_checkImportSelection(_self_, &(_53716_ident), &(_57025_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b5125c74:;
						{
							jule::Ptr<_1b2e6e85b_Fn> _57325_f = _54921_def.cast_ptr<_1b2e6e85b_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1b5140ac4_checkImportSelection(_self_, &(_53716_ident), &(_57325_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b5124d61:;
						{
							_1b2eb7563_pushErr(_self_, _53716_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1b5122710;
						}
					}
					_match_end_1b5124d0b:;
				};
			}
			_iter_next_1b5122710:;
			++it;
			goto _iter_begin_1b5122710;
		}
		_iter_end_1b5122710:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b5144dd6_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5146aa8:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b5126d85_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b5146aa8:;
			++it;
			goto _iter_begin_1b5146aa8;
		}
		_iter_end_1b5146aa8:;
	};
	return _58517_ok;;
}

inline jule::Bool _1b5148439_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51497c0:;
		if (it != expr_end) {
			jule::Ptr<_1b305ad32_TypeAlias> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b512ae66_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b51497c0:;
			++it;
			goto _iter_begin_1b51497c0;
		}
		_iter_end_1b51497c0:;
	};
	return _58517_ok;;
}

inline jule::Bool _1b5148a11_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e683e3_Struct>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b514c4c6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b512ec39_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b514c4c6:;
			++it;
			goto _iter_begin_1b514c4c6;
		}
		_iter_end_1b514c4c6:;
	};
	return _58517_ok;;
}

inline jule::Bool _1b514dd57_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51501ee:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b5140ac4_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b51501ee:;
			++it;
			goto _iter_begin_1b51501ee;
		}
		_iter_end_1b51501ee:;
	};
	return _58517_ok;;
}

inline jule::Bool _1b514e440_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e8033e_Trait>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5152db1:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b5134018_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b5152db1:;
			++it;
			goto _iter_begin_1b5152db1;
		}
		_iter_end_1b5152db1:;
	};
	return _58517_ok;;
}

inline jule::Bool _1b5152102_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e82484_Enum>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5155a73:;
		if (it != expr_end) {
			jule::Ptr<_1b2e82484_Enum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b5137cdb_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b5155a73:;
			++it;
			goto _iter_begin_1b5155a73;
		}
		_iter_end_1b5155a73:;
	};
	return _58517_ok;;
}

inline jule::Bool _1b5154cb4_checkImportsAllSelectionsFromCollection(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e83a7e_TypeEnum>>* _58462_s, jule::Ptr<_1cb188a5c_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51587bd:;
		if (it != expr_end) {
			jule::Ptr<_1b2e83a7e_TypeEnum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1b513bbd0_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1b51587bd:;
			++it;
			goto _iter_begin_1b51587bd;
		}
		_iter_end_1b51587bd:;
	};
	return _58517_ok;;
}



inline jule::Bool _1b2eba0b0_checkImportAllSelections(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_59444_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5125ea5:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> *_59616_file = it;
			{
				__jule_func_result=(_1b5144dd6_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Vars), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b5148439_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeAliases), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b5148a11_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Structs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b514dd57_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Funcs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b514e440_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Traits), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b5152102_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Enums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b5154cb4_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeEnums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1b5125ea5:;
			++it;
			goto _iter_begin_1b5125ea5;
		}
		_iter_end_1b5125ea5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2eba3ce_checkImportSelections(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _60845_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_60845_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1b2eb9884_checkImportSelectedSelections(_self_, _60845_imp);
		return __jule_func_result;;
	} else if ((*(_60845_imp)).get()._field_ImportAll) {
		__jule_func_result = _1b2eba0b0_checkImportAllSelections(_self_, _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2eba6dc_isUseAliasDuplication(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _61741_imp) {
	if (((*(_61741_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b515b1b6:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == (*(_61741_imp)))) {
					goto _iter_end_1b515b1b6;
				};
				if ((_62221_imp2.get()._field_Alias == (*(_61741_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == (*(_61741_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1b515b1b6:;
			++it;
			goto _iter_begin_1b515b1b6;
		}
		_iter_end_1b515b1b6:;
	};
	return false;;
}



inline jule::Bool _1b2eba9ea_checkImport(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2eab755_ImportInfo>* _63735_imp) {
	if (((*(_63735_imp)).get()._field_CppLinked || ((*(_63735_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1b2eba6dc_isUseAliasDuplication(_self_, _63735_imp)) {
		_1b2eb7563_pushErr(_self_, (*(_63735_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_63735_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_63735_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1b2eb48a1_Sema> _64821_sema = jule::new_ptr<_1b2eb48a1_Sema>(_1b2eb48a1_Sema{._field_flags=(*(_self_))._field_flags});;
		_1b2ed4e87_check(_64821_sema, &((*(_63735_imp)).get()._field_Package.get()._field_Files));
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1b2eba3ce_checkImportSelections(_self_, _63735_imp);;
}



inline void _1b2ebabc6_checkImports(_1b2eb48a1_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b515ea9e:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _66221_file = *it;
			{
				_1b2eb719a_setCurrentFile(_self_, _66221_file);
				{
					auto expr = &(_66221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b5162684:;
					if (it != expr_end) {
						jule::Ptr<_1b2eab755_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1b2eba9ea_checkImport(_self_, &(_66425_imp));;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1b5162684:;
						++it;
						goto _iter_begin_1b5162684;
					}
					_iter_end_1b5162684:;
				};
			}
			_iter_next_1b515ea9e:;
			++it;
			goto _iter_begin_1b515ea9e;
		}
		_iter_end_1b515ea9e:;
	};
}



inline void _1b2ebada2_implFileImpls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b516219a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e87ee5_Impl> _67521_imp = *it;
			{
				_1b2ecc06c_implImpl(_self_, &(_67521_imp));
			}
			_iter_next_1b516219a:;
			++it;
			goto _iter_begin_1b516219a;
		}
		_iter_end_1b516219a:;
	};
}



inline void _1b2ebb07d_implImpls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5164158:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _68121_file = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _68121_file);
				_1b2ebada2_implFileImpls(_self_);
			}
			_iter_next_1b5164158:;
			++it;
			goto _iter_begin_1b5164158;
		}
		_iter_end_1b5164158:;
	};
}



inline void _1b2ebb259_checkEnums(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51651c0:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _68821_file = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _68821_file);
				_1b2ec9696_checkEnumDecls(_self_);
			}
			_iter_next_1b51651c0:;
			++it;
			goto _iter_begin_1b51651c0;
		}
		_iter_end_1b51651c0:;
	};
}



inline _1b306a391_typeChecker _1b2ebb6aa_typeChecker(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Trait<_1b3077997_Lookup> _69435_l, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _69450_generics, jule::Ptr<_1b30694b1_referencer> _69513_referencer) {
	_1b306a391_typeChecker _69617_tc = _1b306a391_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b5166b2d:;
			{
				jule::Ptr<_1b2e94ab2_scopeChecker> _70521_hard = _1b2e97e6c_getHardRoot(_69435_l.cast_ptr<_1b2e94ab2_scopeChecker>(0));;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1b5166842:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b5168008:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_1b305ad32_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1b5167ea3:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebbba5_buildTypeWithRefers(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e4b77d_TypeDecl>* _72144_t, jule::Trait<_1b3077997_Lookup> _72167_l, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _72213_generics, jule::Ptr<_1b30694b1_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _1b2ebb6aa_typeChecker(_self_, _72167_l, _72213_generics, _72241_referencer); _1b307260c_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _1b2ebc1a0_checkTypeWithRefers(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b3060e03_TypeSymbol>* _72844_t, jule::Trait<_1b3077997_Lookup> _72864_l, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _72913_generics, jule::Ptr<_1b30694b1_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1b30612aa_checked((*(_72844_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_72844_t)).get()._field_Kind=_1b2ebbba5_buildTypeWithRefers(_self_, &((*(_72844_t)).get()._field_Decl), _72864_l, _72913_generics, _72941_referencer);
	__jule_func_result = _1b30612aa_checked((*(_72844_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e860ae_constraintChecker> _1b2ebc414_constraintChecker(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	return jule::new_ptr<_1b2e860ae_constraintChecker>(_1b2e860ae_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1b2ebc7bb_checkType(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b3060e03_TypeSymbol>* _74334_t, jule::Trait<_1b3077997_Lookup> _74354_l) {
	return _1b2ebc1a0_checkTypeWithRefers(_self_, _74334_t, _74354_l, nullptr, nullptr);;
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebcc1c_buildTypeWithGenerics(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e4b77d_TypeDecl>* _74946_t, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _75013_generics, jule::Ptr<_1b2e7408b_ReferenceStack> _75041_refers) {
	jule::Ptr<_1b306a391_typeChecker> _75117_tc = jule::new_ptr<_1b306a391_typeChecker>(_1b306a391_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _1b307260c_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebd02a_buildType(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e4b77d_TypeDecl>* _76234_t) {
	return _1b2ebcc1c_buildTypeWithGenerics(_self_, _76234_t, nullptr, nullptr);;
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebd338_selectType(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e4b77d_TypeDecl>* _76735_t) {
	jule::Ptr<_1b306a391_typeChecker> _76817_tc = jule::new_ptr<_1b306a391_typeChecker>(_1b306a391_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1b307260c_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_1b3032611_Eval> _1b2ebd789_evalpd(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Trait<_1b3077997_Lookup> _77930_l, jule::Ptr<_1b305ba25_TypeKind> _77945_p, jule::Ptr<_1b2ed8034_Var> _77963_owner) {
	jule::Ptr<_1b3032611_Eval> _78017_e = jule::new_ptr<_1b3032611_Eval>(_1b3032611_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b51711dc:;
			{
				_78017_e.get()._field_unsafety=_1b2e9707b_isUnsafe(_77930_l.cast_ptr<_1b2e94ab2_scopeChecker>(0));
			}
		}
		_match_end_1b5171176:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_1b3032611_Eval> _1b2ebdb41_evalp(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Trait<_1b3077997_Lookup> _79429_l, jule::Ptr<_1b305ba25_TypeKind> _79444_p) {
	return _1b2ebd789_evalpd(_self_, _79429_l, _79444_p, nullptr);;
}



inline jule::Ptr<_1b3032611_Eval> _1b2ebde4e_eval(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Trait<_1b3077997_Lookup> _79928_l) {
	return _1b2ebdb41_evalp(_self_, _79928_l, nullptr);;
}



inline jule::Bool _1b2ebe449_checkAssignType(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_1b305ba25_TypeKind>* _80357_dest, jule::Ptr<_1b3030a93_Data>* _80414_d, jule::Ptr<_1cb188a5c_Token> _80428_errorToken) {
	if ((*(_80414_d)).get()._field_Decl) {
		_1b2eb7563_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_1b305c22e_Equal((*(_80357_dest)), (*(_80414_d)).get()._field_Kind)))) {
			_1b2eb7563_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_80357_dest)).ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_80414_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1b301b485_assignTypeChecker> _81521_atc = jule::new_ptr<_1b301b485_assignTypeChecker>(_1b301b485_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_80357_dest)), ._field_d=(*(_80414_d)), ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _1b301c60c_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_1b3031456_IsConst((*(_80414_d)).ptr()))) || (_1b305ddac_Prim((*(_80357_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _1b305ddac_Prim((*(_80357_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1b18dd485_IsSigInt(_83117_kind)) {
			_case_begin_1b5177732:;
			{
				_1b18e2346_SetI64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1b18dd771_IsUnsigInt(_83117_kind)) {
			_case_begin_1b51777a9:;
			{
				_1b18e25bb_SetU64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1b18ddd37_IsFloat(_83117_kind)) {
			_case_begin_1b5177831:;
			{
				_1b18e2d3b_SetF64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1b18e20c1_AsF64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1b5177666:;
	};
	return true;;
}



inline jule::Bool _1b2ebe89a_checkTypeCompatibility(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b305ba25_TypeKind>* _84547_dest, jule::Ptr<_1b305ba25_TypeKind>* _84614_src, jule::Ptr<_1cb188a5c_Token>* _84635_errorToken) {
	if (((*(_84614_src)) == nullptr)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1b3060a4b_Tup((*(_84614_src)).ptr()) != nullptr)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1b301985c_typeCompatibilityChecker _86017_tcc = _1b301985c_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_84547_dest)), ._field_src=(*(_84614_src)), ._field_errorToken=(*(_84635_errorToken))};;
	if (_1b301ae46_check(&_86017_tcc)) {
		return true;;
	};
	_1b2eb7563_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b2ebed1d_buildNonGenericTypeKind(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e4b77d_TypeDecl>* _88148_ast, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>* _88214_generics, jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>* _88250_ignored) {
	jule::Ptr<_1b306a391_typeChecker> _88317_tc = jule::new_ptr<_1b306a391_typeChecker>(_1b306a391_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_88214_generics)), ._field_ignoredGenerics=(&((*(_88250_ignored)))), });;
	return _1b307260c_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _1b2ec0208_buildFnNonGenericTypeKinds(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e71132_FnIns>* _89351_f, jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>* _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _89517_generics = nullptr;;
	if (_1b2e3d75e_IsMethod((*(_89351_f)).get()._field_Decl.ptr())) {
		_89517_generics=jule::append((*(_89351_f)).get()._field_Decl.get()._field_Generics,(*(_89351_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=(*(_89351_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_89351_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5181483:;
		if (it != expr_end) {
			jule::Ptr<_1b2e70263_ParamIns> _90221_p = *it;
			{
				if ((!(_1b2e2cc8c_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_1b2ebed1d_buildNonGenericTypeKind(_self_, &(_90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1b5181483:;
			++it;
			goto _iter_begin_1b5181483;
		}
		_iter_end_1b5181483:;
	};
	if ((!(_1b2e1e102_IsVoid((*(_89351_f)).get()._field_Decl.ptr())))) {
		(*(_89351_f)).get()._field_Result=_1b2ebed1d_buildNonGenericTypeKind(_self_, &((*(_89351_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
		__jule_func_result=(__jule_func_result && ((*(_89351_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e71132_FnIns> _1b2ec0527_getTraitCheckFnKind(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e6e85b_Fn>* _91544_f) {
	if (((*(_91544_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_91544_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1b2e71132_FnIns> _91917_ins = _1b2e362d4_instanceForce((*(_91544_f)));;
	jule::Ptr<_1b306a391_typeChecker> _92117_tc = jule::new_ptr<_1b306a391_typeChecker>(_1b306a391_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b3077997_Lookup>(_self_, 3), });;
	{
		auto expr = &(_91917_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5185ba2:;
		if (it != expr_end) {
			jule::Ptr<_1b2e70263_ParamIns> _92621_p = *it;
			{
				if ((!(_1b2e2cc8c_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_1b307260c_checkDecl(_92117_tc.ptr(), &(_92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1b5185ba2:;
			++it;
			goto _iter_begin_1b5185ba2;
		}
		_iter_end_1b5185ba2:;
	};
	if ((!(_1b2e1e102_IsVoid((*(_91544_f)).ptr())))) {
		_91917_ins.get()._field_Result=_1b307260c_checkDecl(_92117_tc.ptr(), &((*(_91544_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _91917_ins;;
}



inline jule::Bool _1b2ec0978_checkConstraintsFn(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e71132_FnIns>* _93843_f, jule::Ptr<_1cb188a5c_Token>* _93859_et, jule::Ptr<_1b2e71132_FnIns> _93875_exist) {
	jule::Ptr<_1b2e860ae_constraintChecker> _93917_cc = _1b2ebc414_constraintChecker(_self_);;
	_93917_cc.get()._field_et=(*(_93859_et));
	_93917_cc.get()._field_fi=(*(_93843_f));
	if ((_93875_exist != nullptr)) {
		{
			auto expr = &(_93875_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b65dd7bd:;
			if (it != expr_end) {
				jule::I32 _94318_i = it - expr->begin();
				jule::Ptr<_1b305a2e8_InsGeneric> _94325_g = *it;
				{
					(*(_93843_f)).get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1b65dd7bd:;
				++it;
				_94318_i++;
				goto _iter_begin_1b65dd7bd;
			}
			_iter_end_1b65dd7bd:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _1b2e86e8e_check(_93917_cc);;
}



inline jule::Bool _1b2ec0dc9_checkConstraintsStruct(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _95247_s, jule::Ptr<_1cb188a5c_Token>* _95267_et, jule::Ptr<_1b2e687bc_StructIns> _95283_exist) {
	jule::Ptr<_1b2e860ae_constraintChecker> _95317_cc = _1b2ebc414_constraintChecker(_self_);;
	_95317_cc.get()._field_et=(*(_95267_et));
	_95317_cc.get()._field_si=(*(_95247_s));
	if ((_95283_exist != nullptr)) {
		{
			auto expr = &(_95283_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b65e122c:;
			if (it != expr_end) {
				jule::I32 _95718_i = it - expr->begin();
				jule::Ptr<_1b305a2e8_InsGeneric> _95725_g = *it;
				{
					(*(_95247_s)).get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1b65e122c:;
				++it;
				_95718_i++;
				goto _iter_begin_1b65e122c;
			}
			_iter_end_1b65e122c:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _1b2e86e8e_check(_95317_cc);;
}



inline jule::Bool _1b2ec1281_fnEnvironment(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e71132_FnIns>* _96938_f, jule::Fn<jule::Bool(jule::Ptr<_1b2eb48a1_Sema>*,jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*)> _96949_algo) {
	jule::Ptr<_1b2eb48a1_Sema> _97017_sema = (*(_96938_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1b302ac69_SymbolTable> _97117_old = (*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1b2eb719a_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_1b302ac69_SymbolTable> _97317_file = _1b2eb3eaa_findFile(&((*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_96938_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_97317_file != nullptr)) {
		_1b2eb719a_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I32 _97817_size = (*(_96938_f)).get()._field_Generics.len();;
	if ((((*(_96938_f)).get()._field_Decl != nullptr) && ((*(_96938_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=(*(_96938_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>::alloc(0LL, _97817_size);;
	_1b2eb3b58_appendGenericTypeAliases(&(_98317_generics), _96938_f);
	jule::Bool _98613_ok = _96949_algo(&(_97017_sema), &(_98317_generics));;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _1b2ec1506_checkFnParamKind(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e70263_ParamIns>* _99641_p) {
	(*(_99641_p)).get()._field_Kind.get()._field_Variadic=(*(_99641_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_99641_p)).get()._field_Decl.get()._field_Reference && (!(_1b3074422_isValidForRef(&((*(_99641_p)).get()._field_Kind)))))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_99641_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_99641_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1b2ec1814_reloadFnInsTypes(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e71132_FnIns> _100340_f) {
	if ((_1b2e724b8_IsBuiltin(_100340_f.ptr()) || _1b2e7272c_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _1b2ec1281_fnEnvironment(_self_, &(_100340_f), jule::Fn<jule::Bool(jule::Ptr<_1b2eb48a1_Sema>*,jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>*)>([=](jule::Ptr<_1b2eb48a1_Sema>* _100743_sema, jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>* _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto expr = &(_100340_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b65ec0b2:;
			if (it != expr_end) {
				jule::Ptr<_1b2e70263_ParamIns> _100925_p = *it;
				{
					if (_1b2e2cc8c_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_1b2e2e60c_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065006_Sptr>(_1b3065006_Sptr{._field_Elem=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_1b2ebcc1c_buildTypeWithGenerics((*(_100743_sema)), &(_100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_1b2ec1506_checkFnParamKind(_self_, &(_100925_p));
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1b65ec0b2:;
				++it;
				goto _iter_begin_1b65ec0b2;
			}
			_iter_end_1b65ec0b2:;
		};
		if ((!(_1b2e1e102_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_1b2ebcc1c_buildTypeWithGenerics((*(_100743_sema)), &(_100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _1b2ec1c87_checkRefValidityForInitExpr(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_1b3030a93_Data>* _103967_d, jule::Ptr<_1cb188a5c_Token>* _103982_errorToken) {
	{
		auto &_match_expr{ (*(_103967_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b66026b1:;
			{
				goto _match_end_1b6601a01;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b6602727:;
			{
				jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel> _104421_model = (*(_103967_d)).get()._field_Model.cast_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1b2eb29e2_isValidModelForRef(&(_104421_model.get()._field_Expr))))) {
					_1b2eb7563_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b6602507:;
			{
				jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _105021_model = (*(_103967_d)).get()._field_Model.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1b2eb29e2_isValidModelForRef(&(_105021_model.get()._field_Expr.get()._field_Model))))) {
					_1b2eb7563_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1b660256d:;
			{
				_1b2eb7563_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b66025d4:;
			{
				jule::Ptr<_1b2e691c4_UnaryExprModel> _106021_unary = (*(_103967_d)).get()._field_Model.cast_ptr<_1b2e691c4_UnaryExprModel>(&__jule_any_type74);;
				if (_106021_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_1b2eb29e2_isValidModelForRef(&((*(_103967_d)).get()._field_Model))))) {
						_1b2eb7563_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1b6601a01;
				};
				goto _case_begin_1b6601b99;
			}
		}
		else {
			_case_begin_1b6601b99:;
			{
				_1b2eb7563_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b6601a01:;
	};
	if ((_103947_leftMut && (!((*(_103967_d)).get()._field_Mutable)))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1b2ec71bb_checkValidityForInitExpr(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_1b305ba25_TypeKind>* _108110_leftKind, jule::Ptr<_1b3030a93_Data>* _108136_d, jule::Ptr<_1cb188a5c_Token>* _108151_errorToken) {
	if (((_108044_leftMut && (!((*(_108136_d)).get()._field_Mutable))) && _1b305d197_Mutable((*(_108136_d)).get()._field_Kind.ptr()))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_108151_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_108136_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_1b2ec1c87_checkRefValidityForInitExpr(_self_, _108044_leftMut, _108136_d, _108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1b301b485_assignTypeChecker> _109117_atc = jule::new_ptr<_1b301b485_assignTypeChecker>(_1b301b485_assignTypeChecker{._field_s=_self_, ._field_d=(*(_108136_d)), ._field_errorToken=(*(_108151_errorToken))});;
	return _1b301bb5b_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _1b2ec7584_checkTypeAliasDeclKind(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b305ad32_TypeAlias>* _109947_ta, jule::Trait<_1b3077997_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b302ac69_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1b2eb719a_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if (((*(_109947_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1b302ac69_SymbolTable> _110521_file = _1b2eb3eaa_findFile(&(_self_.get()._field_files), &((*(_109947_ta)).get()._field_Token.get()._field_File));;
		if ((_110521_file != nullptr)) {
			_1b2eb719a_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_1b2ebc1a0_checkTypeWithRefers(_self_, &((*(_109947_ta)).get()._field_Kind), _109967_l, nullptr, jule::new_ptr<_1b30694b1_referencer>(_1b30694b1_referencer{._field_ident=(*(_109947_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_109947_ta)), &__jule_any_type67), ._field_refs=(&((*(_109947_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1b305eac2_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1b305eac2_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_109947_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1b2ec78a3_checkTypeAliasDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b305ad32_TypeAlias>* _112243_ta, jule::Trait<_1b3077997_Lookup> _112263_l) {
	if (_1cb18b301_IsIgnoreIdent((*(_112243_ta)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_112243_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1b2ec7584_checkTypeAliasDeclKind(_self_, _112243_ta, _112263_l);
}



inline void _1b2ec7b28_checkTypeAliasDeclDup(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b305ad32_TypeAlias>* _113046_ta) {
	if (_1cb18b301_IsIgnoreIdent((*(_113046_ta)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_113046_ta)))), (*(_113046_ta)).get()._field_Ident, (*(_113046_ta)).get()._field_CppLinked)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_113046_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b2ec7584_checkTypeAliasDeclKind(_self_, _113046_ta, jule::Trait<_1b3077997_Lookup>(_self_, 3));
}



inline jule::Bool _1b2ec7d8c_checkTypeAliasDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b661401e:;
		if (it != expr_end) {
			jule::Ptr<_1b305ad32_TypeAlias> _114321_ta = *it;
			{
				_1b2ec7b28_checkTypeAliasDeclDup(_self_, &(_114321_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b661401e:;
			++it;
			goto _iter_begin_1b661401e;
		}
		_iter_end_1b661401e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b6638ce1_checkEnumItemsDup(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b663a056:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8198e_EnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b663a056;
				} else if (_1cb18b301_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_1b2eb7563_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b663acd2:;
						if (it != expr_end) {
							jule::Ptr<_1b2e8198e_EnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1b663acd2;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_1b2eb7563_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b663acd2;
								};
							}
							_iter_next_1b663acd2:;
							++it;
							goto _iter_begin_1b663acd2;
						}
						_iter_end_1b663acd2:;
					};
				};
			}
			_iter_next_1b663a056:;
			++it;
			goto _iter_begin_1b663a056;
		}
		_iter_end_1b663a056:;
	};
}

inline void _1b66440d7_checkEnumItemsDup(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b664532a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e834b8_TypeEnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b664532a;
				} else if (_1cb18b301_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_1b2eb7563_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b66460a6:;
						if (it != expr_end) {
							jule::Ptr<_1b2e834b8_TypeEnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1b66460a6;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_1b2eb7563_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b66460a6;
								};
							}
							_iter_next_1b66460a6:;
							++it;
							goto _iter_begin_1b66460a6;
						}
						_iter_end_1b66460a6:;
					};
				};
			}
			_iter_next_1b664532a:;
			++it;
			goto _iter_begin_1b664532a;
		}
		_iter_end_1b664532a:;
	};
}



inline void _1b2ec8387_checkEnumItemsStr(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e82484_Enum>* _117442_e) {
	jule::Ptr<_1b3032611_Eval> _117517_eval = _1b2ebde4e_eval(_self_, jule::Trait<_1b3077997_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_117442_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6615a59:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8198e_EnumItem> _117621_item = *it;
			{
				if (_1b2e81d79_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Data=jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Constant=static__1b18e0344_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_1b3030a93_Data> _118525_d = _1b304d033_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1b6615a59;
					};
					if ((!(_1b3031456_IsConst(_118525_d.ptr())))) {
						_1b2eb7563_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1b2ebe449_checkAssignType(_self_, false, &((*(_117442_e)).get()._field_Kind.get()._field_Kind), &(_118525_d), _117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1b6615a59:;
			++it;
			goto _iter_begin_1b6615a59;
		}
		_iter_end_1b6615a59:;
	};
}



inline void _1b661e14a_checkEnumItemInt(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b3032611_Eval>* _120046_eval, jule::Ptr<_1b2e82484_Enum>* _120064_e, jule::Ptr<_1b3061772_Prim>* _120075_prim, jule::Ptr<_1b2e8198e_EnumItem>* _120093_item, jule::U64* _1200115_n) {
	if (_1b2e81d79_AutoExpr((*(_120093_item)).ptr())) {
		(*(_120093_item)).get()._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Data=jule::new_ptr<_1b3030a93_Data>()});
		{
			
{
				_case_begin_1b6621c41:;
				{
					(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1b18ded05_NewU64((*(_1200115_n)));
				}
			}
			_match_end_1b66215e2:;
		};
		(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
	} else {
		jule::Ptr<_1b3030a93_Data> _121521_d = _1b304d033_evalExpr((*(_120046_eval)), (*(_120093_item)).get()._field_Value.get()._field_Expr);;
		if ((_121521_d == nullptr)) {
			return;;
		};
		if ((!(_1b3031456_IsConst(_121521_d.ptr())))) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_120093_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b2ebe449_checkAssignType(_self_, false, &((*(_120064_e)).get()._field_Kind.get()._field_Kind), &(_121521_d), (*(_120093_item)).get()._field_Token);
		(*(_120093_item)).get()._field_Value.get()._field_Data=_121521_d;
		{
			
{
				_case_begin_1b66250eb:;
				{
					(*(_1200115_n))=static_cast<jule::U64>(_1b18e1147_ReadU64((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b6624d87:;
		};
	};
}

inline void _1b662c0ae_checkEnumItemInt(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b3032611_Eval>* _120046_eval, jule::Ptr<_1b2e82484_Enum>* _120064_e, jule::Ptr<_1b3061772_Prim>* _120075_prim, jule::Ptr<_1b2e8198e_EnumItem>* _120093_item, jule::I64* _1200115_n) {
	if (_1b2e81d79_AutoExpr((*(_120093_item)).ptr())) {
		(*(_120093_item)).get()._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Data=jule::new_ptr<_1b3030a93_Data>()});
		{
			
{
				_case_begin_1b662eab7:;
				{
					(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1b18dea5d_NewI64((*(_1200115_n)));
				}
			}
			_match_end_1b662e4e0:;
		};
		(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
	} else {
		jule::Ptr<_1b3030a93_Data> _121521_d = _1b304d033_evalExpr((*(_120046_eval)), (*(_120093_item)).get()._field_Value.get()._field_Expr);;
		if ((_121521_d == nullptr)) {
			return;;
		};
		if ((!(_1b3031456_IsConst(_121521_d.ptr())))) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_120093_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b2ebe449_checkAssignType(_self_, false, &((*(_120064_e)).get()._field_Kind.get()._field_Kind), &(_121521_d), (*(_120093_item)).get()._field_Token);
		(*(_120093_item)).get()._field_Value.get()._field_Data=_121521_d;
		{
			
{
				_case_begin_1b663313c:;
				{
					(*(_1200115_n))=static_cast<jule::I64>(_1b18e0dd3_ReadI64((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b6632e50:;
		};
	};
}



inline void _1b661a6da_checkEnumItemsInt1(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b3061772_Prim>* _123544_prim, jule::Ptr<_1b2e82484_Enum>* _123562_e) {
	jule::U64 _123617_max = 0LLU;;
	{
		
{
			_case_begin_1b661c4ab:;
			{
				_123617_max=static_cast<jule::U64>(_1b18d80a6_MaxU(_1b3061ad5_Str((*(_123544_prim)).ptr())));
			}
		}
		_match_end_1b661c225:;
	};
	jule::Ptr<_1b3032611_Eval> _124617_eval = _1b2ebde4e_eval(_self_, jule::Trait<_1b3077997_Lookup>(_self_, 3));;
	jule::U64 _124717_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b2e8198e_EnumItem> _124817_first = (*(_123562_e)).get()._field_Items[0LL];;
	_1b661e14a_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_124817_first), &(_124717_n));
	if ((_124817_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b662588d:;
				{
					_124717_n=static_cast<jule::U64>(_1b18e1d5c_AsU64(_124817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b661e47a:;
		};
	};
	{
		auto expr = (*(_123562_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b66252b6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8198e_EnumItem> _126021_item = *it;
			{
				if (((_1b2e81d79_AutoExpr(_126021_item.ptr()) && (_124717_n > 0LLU)) && ((_123617_max - _124717_n) <= 0LLU))) {
					_1b2eb7563_pushErr(_self_.ptr(), _126021_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b66252b6;
				};
				(_124717_n)++;
				_1b661e14a_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_126021_item), &(_124717_n));
			}
			_iter_next_1b66252b6:;
			++it;
			goto _iter_begin_1b66252b6;
		}
		_iter_end_1b66252b6:;
	};
}

inline void _1b6626493_checkEnumItemsInt1(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b3061772_Prim>* _123544_prim, jule::Ptr<_1b2e82484_Enum>* _123562_e) {
	jule::I64 _123617_max = 0LL;;
	{
		
{
			_case_begin_1b662a19a:;
			{
				_123617_max=static_cast<jule::I64>(_1b18d7d0e_MaxI(_1b3061ad5_Str((*(_123544_prim)).ptr())));
			}
		}
		_match_end_1b6629ebe:;
	};
	jule::Ptr<_1b3032611_Eval> _124617_eval = _1b2ebde4e_eval(_self_, jule::Trait<_1b3077997_Lookup>(_self_, 3));;
	jule::I64 _124717_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1b2e8198e_EnumItem> _124817_first = (*(_123562_e)).get()._field_Items[0LL];;
	_1b662c0ae_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_124817_first), &(_124717_n));
	if ((_124817_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b662e27b:;
				{
					_124717_n=static_cast<jule::I64>(_1b18e1ae8_AsI64(_124817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b662c3de:;
		};
	};
	{
		auto expr = (*(_123562_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b663444b:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8198e_EnumItem> _126021_item = *it;
			{
				if (((_1b2e81d79_AutoExpr(_126021_item.ptr()) && (_124717_n > 0LL)) && ((_123617_max - _124717_n) <= 0LL))) {
					_1b2eb7563_pushErr(_self_.ptr(), _126021_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b663444b;
				};
				(_124717_n)++;
				_1b662c0ae_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_126021_item), &(_124717_n));
			}
			_iter_next_1b663444b:;
			++it;
			goto _iter_begin_1b663444b;
		}
		_iter_end_1b663444b:;
	};
}



inline void _1b2ec8e37_checkEnumItemsInt(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e82484_Enum>* _127042_e) {
	jule::Ptr<_1b3061772_Prim> _127113_prim = _1b305ddac_Prim((*(_127042_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1b18dd485_IsSigInt(_127113_prim.get()._field_Kind)) {
			_case_begin_1b6627ce1:;
			{
				_1b6626493_checkEnumItemsInt1(_self_, &(_127113_prim), _127042_e);
			}
		}
		else {
			_case_begin_1b6619e8c:;
			{
				_1b661a6da_checkEnumItemsInt1(_self_, &(_127113_prim), _127042_e);
			}
		}
		_match_end_1b6619e37:;
	};
}



inline void _1b2ec91ac_checkEnumDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e82484_Enum>* _128038_e) {
	if (_1cb18b301_IsIgnoreIdent((*(_128038_e)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_128038_e)))), (*(_128038_e)).get()._field_Ident, false)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_128038_e)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_128038_e)).get()._field_Items.len() == 0LL)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_128038_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b6638ce1_checkEnumItemsDup(_self_.ptr(), (*(_128038_e)).get()._field_Items);
	if (((*(_128038_e)).get()._field_Kind != nullptr)) {
		if ((!(_1b2ebc7bb_checkType(_self_, &((*(_128038_e)).get()._field_Kind), jule::Trait<_1b3077997_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_128038_e)).get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1b3061772_Prim> _130817_t = _1b305ddac_Prim((*(_128038_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_130817_t == nullptr)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1b30649a6_IsStr(_130817_t.ptr())) {
			_case_begin_1b664006c:;
			{
				_1b2ec8387_checkEnumItemsStr(_self_, _128038_e);
			}
		}
		else if (_1b18dda18_IsInt(_1b3061ad5_Str(_130817_t.ptr()))) {
			_case_begin_1b663ec70:;
			{
				_1b2ec8e37_checkEnumItemsInt(_self_, _128038_e);
			}
		}
		else {
			_case_begin_1b663e29c:;
			{
				_1b2eb7563_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b663e247:;
	};
}



inline void _1b2ec9432_checkTypeEnumDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e83a7e_TypeEnum>* _132542_e) {
	if (_1cb18b301_IsIgnoreIdent((*(_132542_e)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_132542_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_132542_e)))), (*(_132542_e)).get()._field_Ident, false)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_132542_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_132542_e)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_132542_e)).get()._field_Items.len() == 0LL)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_132542_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_132542_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b66440d7_checkEnumItemsDup(_self_.ptr(), (*(_132542_e)).get()._field_Items);
	{
		auto expr = &((*(_132542_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6641755:;
		if (it != expr_end) {
			jule::Ptr<_1b2e834b8_TypeEnumItem> _133921_item = *it;
			{
				if ((_133921_item.get()._field_Kind == nullptr)) {
					_1b2eb7563_pushErr(_self_.ptr(), _133921_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1b6641755;
				};
				jule::Bool _134417_ok = _1b2ebc7bb_checkType(_self_, &(_133921_item.get()._field_Kind), jule::Trait<_1b3077997_Lookup>(_self_, 3));;
				if ((!(_134417_ok))) {
					goto _iter_next_1b6641755;
				};
				jule::Ptr<_1b3061772_Prim> _134817_p = _1b305ddac_Prim(_133921_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_134817_p != nullptr) && _1b3064c1a_IsAny(_134817_p.ptr()))) {
					_1b2eb7563_pushErr(_self_.ptr(), _133921_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b6641755:;
			++it;
			goto _iter_begin_1b6641755;
		}
		_iter_end_1b6641755:;
	};
	if (((*(_132542_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1b2e834b8_TypeEnumItem> _135421_item = (*(_132542_e)).get()._field_Items[0LL];;
		_1b305ba25_TypeKind _135517_tk = _1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>((*(_132542_e)), 4)};;
		if (((_135421_item.get()._field_Kind.get()._field_Kind != nullptr) && _1b305c22e_Equal(_135421_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1b305ba25_TypeKind>)((&(_135517_tk))))))) {
			_1b2eb7563_pushErr(_self_.ptr(), _135421_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1b2e83dae_Str((*(_132542_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1b2ec9696_checkEnumDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b664d322:;
		if (it != expr_end) {
			jule::Ptr<_1b2e82484_Enum> _136621_e = *it;
			{
				_1b2ec91ac_checkEnumDecl(_self_, &(_136621_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b664d322:;
			++it;
			goto _iter_begin_1b664d322;
		}
		_iter_end_1b664d322:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2ec990a_checkTypeEnumDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b664e741:;
		if (it != expr_end) {
			jule::Ptr<_1b2e83a7e_TypeEnum> _137821_e = *it;
			{
				_1b2ec9432_checkTypeEnumDecl(_self_, &(_137821_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b664e741:;
			++it;
			goto _iter_begin_1b664e741;
		}
		_iter_end_1b664e741:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2ec9c18_checkDeclGenerics(_1b2eb48a1_Sema* _self_, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>* _138837_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _138837_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6650d2a:;
		if (it != expr_end) {
			jule::I32 _139013_i = it - expr->begin();
			jule::Ptr<_1b2e58a76_GenericDecl> *_139016_g = it;
			{
				if (_1cb18b301_IsIgnoreIdent((*(_139016_g)).get()._field_Ident)) {
					_1b2eb7563_pushErr(_self_, (*(_139016_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b6650d2a;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _138837_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6652557:;
					if (it != expr_end) {
						jule::I32 _139917_j = it - expr->begin();
						jule::Ptr<_1b2e58a76_GenericDecl> *_139920_ct = it;
						{
							{
								
								if ((_139917_j >= _139013_i)) {
									_case_begin_1b665347b:;
									{
										goto _iter_end_1b6652557;
									}
								}
								else if (((*(_139016_g)).get()._field_Ident == (*(_139920_ct)).get()._field_Ident)) {
									_case_begin_1b6653503:;
									{
										_1b2eb7563_pushErr(_self_, (*(_139016_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_139016_g)).get()._field_Ident, &__jule_any_type5)}));
										_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b6652557;
									}
								}
								_match_end_1b665336b:;
							};
						}
						_iter_next_1b6652557:;
						++it;
						_139917_j++;
						goto _iter_begin_1b6652557;
					}
					_iter_end_1b6652557:;
				};
			}
			_iter_next_1b6650d2a:;
			++it;
			_139013_i++;
			goto _iter_begin_1b6650d2a;
		}
		_iter_end_1b6650d2a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2eca026_checkFnDeclParamsDup(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e6e85b_Fn>* _141540_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_141540_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b665578b:;
		if (it != expr_end) {
			jule::I32 _141813_i = it - expr->begin();
			jule::Ptr<_1b2e6e66e_Param> *_141816_p = it;
			{
				{
					auto expr = &((*(_141540_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6656418:;
					if (it != expr_end) {
						jule::Ptr<_1b2e58a76_GenericDecl> *_142020_g = it;
						{
							if (((*(_141816_p)).get()._field_Ident == (*(_142020_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1b2eb7563_pushErr(_self_, (*(_141816_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141816_p)).get()._field_Ident, &__jule_any_type5)}));
								_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1b665578b;
							};
						}
						_iter_next_1b6656418:;
						++it;
						goto _iter_begin_1b6656418;
					}
					_iter_end_1b6656418:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_141540_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6656e0d:;
					if (it != expr_end) {
						jule::I32 _143017_j = it - expr->begin();
						jule::Ptr<_1b2e6e66e_Param> *_143020_jp = it;
						{
							{
								
								if ((_143017_j >= _141813_i)) {
									_case_begin_1b6658a36:;
									{
										goto _iter_end_1b6656e0d;
									}
								}
								else if (_1cb18b301_IsIgnoreIdent((*(_141816_p)).get()._field_Ident) || _1cb18b301_IsIgnoreIdent((*(_143020_jp)).get()._field_Ident) || _1cb18b598_IsAnonIdent((*(_141816_p)).get()._field_Ident) || _1cb18b598_IsAnonIdent((*(_143020_jp)).get()._field_Ident)) {
									_case_begin_1b6658aad:;
									{
										goto _iter_end_1b6656e0d;
									}
								}
								else if (((*(_141816_p)).get()._field_Ident == (*(_143020_jp)).get()._field_Ident)) {
									_case_begin_1b6658b35:;
									{
										__jule_func_result=false;
										_1b2eb7563_pushErr(_self_, (*(_141816_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141816_p)).get()._field_Ident, &__jule_any_type5)}));
										_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1b665578b;
									}
								}
								_match_end_1b6658915:;
							};
						}
						_iter_next_1b6656e0d:;
						++it;
						_143017_j++;
						goto _iter_begin_1b6656e0d;
					}
					_iter_end_1b6656e0d:;
				};
			}
			_iter_next_1b665578b:;
			++it;
			_141813_i++;
			goto _iter_begin_1b665578b;
		}
		_iter_end_1b665578b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2eca334_checkFnDeclResultDup(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e6e85b_Fn>* _145240_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1b2e1e102_IsVoid((*(_145240_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_145240_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b665ba8e:;
		if (it != expr_end) {
			jule::I32 _145913_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> *_145916_v = it;
			{
				if ((_1cb18b301_IsIgnoreIdent((*(_145916_v)).get()._field_Kind) || _1cb18b598_IsAnonIdent((*(_145916_v)).get()._field_Kind))) {
					goto _iter_next_1b665ba8e;
				};
				{
					auto expr = &((*(_145240_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b665d0ce:;
					if (it != expr_end) {
						jule::Ptr<_1b2e58a76_GenericDecl> *_146420_g = it;
						{
							if (((*(_145916_v)).get()._field_Kind == (*(_146420_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b665d0ce:;
						++it;
						goto _iter_begin_1b665d0ce;
					}
					_iter_end_1b665d0ce:;
				};
				{
					auto expr = &((*(_145240_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b665e2de:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e66e_Param> *_147020_p = it;
						{
							if (((*(_145916_v)).get()._field_Kind == (*(_147020_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b665e2de:;
						++it;
						goto _iter_begin_1b665e2de;
					}
					_iter_end_1b665e2de:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_145240_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b66604ee:;
					if (it != expr_end) {
						jule::I32 _147817_j = it - expr->begin();
						jule::Ptr<_1cb188a5c_Token> *_147820_jv = it;
						{
							{
								
								if ((_147817_j >= _145913_i)) {
									_case_begin_1b6661203:;
									{
										goto _iter_end_1b66604ee;
									}
								}
								else if (((*(_147820_jv)).get()._field_Kind == (*(_145916_v)).get()._field_Kind)) {
									_case_begin_1b666127a:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1b66610e3:;
							};
						}
						_iter_next_1b66604ee:;
						++it;
						_147817_j++;
						goto _iter_begin_1b66604ee;
					}
					_iter_end_1b66604ee:;
				};
				goto _iter_next_1b665ba8e;
				_julec_label_exist:;
				_1b2eb7563_pushErr(_self_, (*(_145916_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_145916_v)).get()._field_Kind, &__jule_any_type5)}));
				_1b2eb7882_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b665ba8e:;
			++it;
			_145913_i++;
			goto _iter_begin_1b665ba8e;
		}
		_iter_end_1b665ba8e:;
	};
	return __jule_func_result;;
}



inline void _1b2eca5a9_checkFnDeclPrototype(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e6e85b_Fn>* _149945_f) {
	if (((*(_149945_f)).get()._field_Exceptional && (*(_149945_f)).get()._field_CppLinked)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_149945_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_149945_f)).get()._field_Exceptional) {
		if (_1b2e34a41_IsEntryPoint((*(_149945_f)).ptr())) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_149945_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1b2e1bb38_IsInit((*(_149945_f)).ptr())) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_149945_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1b2ec9c18_checkDeclGenerics(_self_.ptr(), &((*(_149945_f)).get()._field_Generics))))) {
			_case_begin_1b666435a:;
		}
		else if ((!(_1b2eca026_checkFnDeclParamsDup(_self_.ptr(), _149945_f)))) {
			_case_begin_1b66643c1:;
		}
		else if ((!(_1b2eca334_checkFnDeclResultDup(_self_.ptr(), _149945_f)))) {
			_case_begin_1b6665702:;
		}
		_match_end_1b666424a:;
	};
}



inline void _1b2eca82e_checkTraitDeclMethod(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e6e85b_Fn>* _152045_f) {
	if (_1cb18b301_IsIgnoreIdent((*(_152045_f)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_152045_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	(*(_152045_f)).get()._field_sema=_self_;
	_1b2eca5a9_checkFnDeclPrototype(_self_, _152045_f);
	jule::Ptr<_1b2e71132_FnIns> _152717_ins = _1b2e6ead1_instance((*(_152045_f)));;
	_1b2ec1814_reloadFnInsTypes(_self_, _152717_ins);
	_152717_ins.get()._field_reloaded=true;
	_1b2e6edab_appendInstance((*(_152045_f)).ptr(), &(_152717_ins));
}



inline void _1b2ecaaa4_checkTraitDeclMethods(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e8033e_Trait>* _153346_t) {
	{
		auto expr = &((*(_153346_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6668a9b:;
		if (it != expr_end) {
			jule::I32 _153414_i = it - expr->begin();
			jule::Ptr<_1b2e6e85b_Fn> _153421_f = *it;
			{
				_1b2eca82e_checkTraitDeclMethod(_self_, &(_153421_f));
				(*(_153346_t)).get()._field_Mutable=((*(_153346_t)).get()._field_Mutable || _153421_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_153346_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b666aa59:;
					if (it != expr_end) {
						jule::I32 _154517_j = it - expr->begin();
						jule::Ptr<_1b2e6e85b_Fn> _154520_jf = *it;
						{
							{
								
								if ((_154517_j >= _153414_i)) {
									_case_begin_1b666b7d5:;
									{
										goto _iter_end_1b666aa59;
									}
								}
								else if ((_153421_f.get()._field_Ident == _154520_jf.get()._field_Ident)) {
									_case_begin_1b666b85c:;
									{
										_1b2eb7563_pushErr(_self_.ptr(), _153421_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_153421_f.get()._field_Ident, &__jule_any_type5)}));
										_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1b666aa59;
									}
								}
								_match_end_1b666b6c5:;
							};
						}
						_iter_next_1b666aa59:;
						++it;
						_154517_j++;
						goto _iter_begin_1b666aa59;
					}
					_iter_end_1b666aa59:;
				};
			}
			_iter_next_1b6668a9b:;
			++it;
			_153414_i++;
			goto _iter_begin_1b6668a9b;
		}
		_iter_end_1b6668a9b:;
	};
}



inline void _1b2ecad29_checkTraitDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e8033e_Trait>* _156439_t) {
	if (_1cb18b301_IsIgnoreIdent((*(_156439_t)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_156439_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_156439_t)))), (*(_156439_t)).get()._field_Ident, false)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_156439_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_156439_t)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b2ecaaa4_checkTraitDeclMethods(_self_, _156439_t);
}



inline jule::Bool _1b2ecb08d_checkTraitDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6670663:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> _157721_t = *it;
			{
				_1b2ecad29_checkTraitDecl(_self_, &(_157721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6670663:;
			++it;
			goto _iter_begin_1b6670663;
		}
		_iter_end_1b6670663:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2ecb445_checkTraitImplMethods(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e8033e_Trait>* _158745_base, jule::Ptr<_1b2e87ee5_Impl>* _158760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_158760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6672115:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> *_158916_f = it;
			{
				if ((_1b2e811b9_FindMethod((*(_158745_base)).ptr(), (*(_158916_f)).get()._field_Ident) == nullptr)) {
					_1b2eb7563_pushErr(_self_, (*(_158916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_158745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_158916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b6672115:;
			++it;
			goto _iter_begin_1b6672115;
		}
		_iter_end_1b6672115:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2ecb7ec_implToStruct(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _159837_dest, jule::Ptr<_1b2e87ee5_Impl>* _159857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_159857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6674359:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _160221_f = *it;
			{
				if (((_1b2e2c3a7_FindMethod((*(_159837_dest)).ptr(), _160221_f.get()._field_Ident, _160221_f.get()._field_Statically) != nullptr) || (_1b2e2dbd3_FindField((*(_159837_dest)).ptr(), _160221_f.get()._field_Ident) != nullptr))) {
					_1b2eb7563_pushErr(_self_.ptr(), _160221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_159837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_160221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b6674359;
				};
				if ((((*(_159837_dest)).get()._field_Generics.len() > 0LL) && (_160221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_160221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b6676867:;
						if (it != expr_end) {
							jule::Ptr<_1b2e58a76_GenericDecl> _161024_fg = *it;
							{
								{
									auto expr = &((*(_159837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b667714d:;
									if (it != expr_end) {
										jule::Ptr<_1b2e58a76_GenericDecl> _161128_dg = *it;
										{
											if ((_161024_fg.get()._field_Ident == _161128_dg.get()._field_Ident)) {
												_1b2eb7563_pushErr(_self_.ptr(), _161024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b667714d:;
										++it;
										goto _iter_begin_1b667714d;
									}
									_iter_end_1b667714d:;
								};
							}
							_iter_next_1b6676867:;
							++it;
							goto _iter_begin_1b6676867;
						}
						_iter_end_1b6676867:;
					};
				};
				_1b2eb84a9_checkDirectives(_self_, &(_160221_f.get()._field_Directives), jule::Any(_160221_f, &__jule_any_type65));
				_160221_f.get()._field_sema=_self_;
				_160221_f.get()._field_Owner=(*(_159837_dest));
				(*(_159837_dest)).get()._field_Methods = jule::alloc_for_append((*(_159837_dest)).get()._field_Methods,1);(*(_159837_dest)).get()._field_Methods.__push(_160221_f);;
			}
			_iter_next_1b6674359:;
			++it;
			goto _iter_begin_1b6674359;
		}
		_iter_end_1b6674359:;
	};
	{
		auto expr = &((*(_159857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66798c0:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _162721_v = *it;
			{
				;
				if (((_1b2e2c3a7_FindMethod((*(_159837_dest)).ptr(), _162721_v.get()._field_Ident, true) != nullptr) || (_1b2e2b807_FindStatic((*(_159837_dest)).ptr(), _162721_v.get()._field_Ident) != nullptr))) {
					_1b2eb7563_pushErr(_self_.ptr(), _162721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_159837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_162721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b66798c0;
				};
				(*(_159837_dest)).get()._field_Statics = jule::alloc_for_append((*(_159837_dest)).get()._field_Statics,1);(*(_159837_dest)).get()._field_Statics.__push(_162721_v);;
			}
			_iter_next_1b66798c0:;
			++it;
			goto _iter_begin_1b66798c0;
		}
		_iter_end_1b66798c0:;
	};
	return __jule_func_result;;
}



inline void _1b2ecba72_implTrait(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e87ee5_Impl>* _164034_decl) {
	jule::Ptr<_1b305ba25_TypeKind> _164117_base_t = _1b2ebd338_selectType(_self_, &((*(_164034_decl)).get()._field_Base));;
	if ((_164117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2e8033e_Trait> _164517_base = _1b3060573_Trait(_164117_base_t.ptr());;
	if ((_164517_base == nullptr)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_164117_base_t.ptr()), &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _165217_destT = _1b2ebd338_selectType(_self_, &((*(_164034_decl)).get()._field_Dest));;
	if ((_165217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _165617_destS = _1b306030e_Struct(_165217_destT.ptr());;
	if ((_165617_destS == nullptr)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_165217_destT.ptr()), &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e683e3_Struct> _166317_dest = _165617_destS.get()._field_Decl;;
	if ((_1cb18e7dd_Dir(_166317_dest.get()._field_Token.get()._field_File.ptr()) != _1cb18e7dd_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_164517_base.get()._field_Implemented = jule::alloc_for_append(_164517_base.get()._field_Implemented,1);_164517_base.get()._field_Implemented.__push(_166317_dest);;
	_166317_dest.get()._field_Implements = jule::alloc_for_append(_166317_dest.get()._field_Implements,1);_166317_dest.get()._field_Implements.__push(_164517_base);;
	if (((*(_164034_decl)).get()._field_Statics.len() > 0LL)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1b2ecb445_checkTraitImplMethods(_self_.ptr(), &(_164517_base), _164034_decl)))) {
			_case_begin_1b6683995:;
			{
				return;;
			}
		}
		else if ((!(_1b2ecb7ec_implToStruct(_self_, &(_166317_dest), _164034_decl)))) {
			_case_begin_1b6683a1c:;
			{
				return;;
			}
		}
		_match_end_1b6681dd3:;
	};
}



inline void _1b2ecbce7_implStruct(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e87ee5_Impl>* _168535_decl) {
	jule::Ptr<_1b305ba25_TypeKind> _168617_destT = _1b2ebd338_selectType(_self_, &((*(_168535_decl)).get()._field_Dest));;
	if ((_168617_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _169017_destS = _1b306030e_Struct(_168617_destT.ptr());;
	if ((_169017_destS == nullptr)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_168535_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_168617_destT.ptr()), &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e683e3_Struct> _169717_dest = _169017_destS.get()._field_Decl;;
	if ((_1cb18e7dd_Dir(_169717_dest.get()._field_Token.get()._field_File.ptr()) != _1cb18e7dd_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_168535_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1b2ecb7ec_implToStruct(_self_, &(_169717_dest), _168535_decl)))) {
			_case_begin_1b6688181:;
			{
				return;;
			}
		}
		_match_end_1b66859db:;
	};
}



inline void _1b2ecc06c_implImpl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e87ee5_Impl>* _171033_decl) {
	{
		
		if (_1b2e883e1_IsTraitImpl((*(_171033_decl)).ptr())) {
			_case_begin_1b6688c75:;
			{
				_1b2ecba72_implTrait(_self_, _171033_decl);
			}
		}
		else if (_1b2e88655_IsStructImpl((*(_171033_decl)).ptr())) {
			_case_begin_1b6688cec:;
			{
				_1b2ecbce7_implStruct(_self_, _171033_decl);
			}
		}
		_match_end_1b6688b65:;
	};
}



inline void _1b2ecc38b_checkVarDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2ed8034_Var>* _172137_decl, jule::Trait<_1b3077997_Lookup> _172153_l) {
	if (_1cb18b301_IsIgnoreIdent((*(_172137_decl)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b2ed8661_IsTypeInferred((*(_172137_decl)).ptr())) {
		if ((!(_1b2ed83ec_IsInitialized((*(_172137_decl)).ptr())))) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1b2ebc7bb_checkType(_self_, &((*(_172137_decl)).get()._field_Kind), _172153_l);
	};
	if (((*(_172137_decl)).get()._field_Constant && (*(_172137_decl)).get()._field_Reference)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1b2ed83ec_IsInitialized((*(_172137_decl)).ptr())))) {
		if ((*(_172137_decl)).get()._field_Constant) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_172137_decl)).get()._field_Statically) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_172137_decl)).get()._field_Reference) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1b2ecc611_checkGlobalVarDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2ed8034_Var>* _175343_decl) {
	if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_175343_decl)))), (*(_175343_decl)).get()._field_Ident, (*(_175343_decl)).get()._field_CppLinked)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_175343_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_175343_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_175343_decl)).get()._field_CppLinked && (*(_175343_decl)).get()._field_Constant)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_175343_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_175343_decl)).get()._field_CppLinked)) && (!((*(_175343_decl)).get()._field_Constant))) && (!((*(_175343_decl)).get()._field_Statically)))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_175343_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1b2eb84a9_checkDirectives(_self_, &((*(_175343_decl)).get()._field_Directives), jule::Any((*(_175343_decl)), &__jule_any_type8));
	_1b2ecc38b_checkVarDecl(_self_, _175343_decl, jule::Trait<_1b3077997_Lookup>(_self_, 3));
}



inline jule::Bool _1b2ecc875_checkGlobalDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66932ce:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _177121_decl = *it;
			{
				_1b2ecc611_checkGlobalVarDecl(_self_, &(_177121_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b66932ce:;
			++it;
			goto _iter_begin_1b66932ce;
		}
		_iter_end_1b66932ce:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2eccc2c_checkStructTraitImpl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _178145_strct, jule::Ptr<_1b2e8033e_Trait>* _178166_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_178166_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6694a2d:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _178221_tf = *it;
			{
				jule::Bool _178321_exist = false;;
				jule::Ptr<_1b2e6e85b_Fn> _178421_sf = _1b2e2c3a7_FindMethod((*(_178145_strct)).ptr(), _178221_tf.get()._field_Ident, _178221_tf.get()._field_Statically);;
				jule::Ptr<_1b2e71132_FnIns> _178517_tfK = _1b2ec0527_getTraitCheckFnKind(_self_, &(_178221_tf));;
				if ((_178421_sf != nullptr)) {
					jule::Ptr<_1b2e71132_FnIns> _178725_sfK = _1b2ec0527_getTraitCheckFnKind(_self_, &(_178421_sf));;
					_178321_exist=(((_178517_tfK.get()._field_Decl.get()._field_Public == _178725_sfK.get()._field_Decl.get()._field_Public) && (_178517_tfK.get()._field_Decl.get()._field_Ident == _178725_sfK.get()._field_Decl.get()._field_Ident)) && _1b2e71ee0_equalTrait(_178517_tfK, &(_178725_sfK)));
				};
				if (_178321_exist) {
					jule::Ptr<_1b2e184d6_Directive> _179321_d = _1b30561c3_findDirective(&(_178421_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_179321_d != nullptr)) {
						_1b2eb7563_pushErr(_self_.ptr(), _179321_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _180025_s = _1b2e72d48_GetKindStr(_178517_tfK.ptr(), true);;
					if (_178221_tf.get()._field_Public) {
						(_180025_s).buffer.insert(0, (jule::Str()));;
					};
					_1b2eb7563_pushErr(_self_.ptr(), (*(_178145_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_178166_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_180025_s, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b6694a2d:;
			++it;
			goto _iter_begin_1b6694a2d;
		}
		_iter_end_1b6694a2d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2ecd03a_checkStructImpls(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _181141_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_181141_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b669b282:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> _181321_trt = *it;
			{
				__jule_func_result=(_1b2eccc2c_checkStructTraitImpl(_self_, _181141_s, &(_181321_trt)) && __jule_func_result);
			}
			_iter_next_1b669b282:;
			++it;
			goto _iter_begin_1b669b282;
		}
		_iter_end_1b669b282:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b2ecd348_checkStructFields(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _181942_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_181942_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b669c5e6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e3becc_Field> _182121_f = *it;
			{
				_182121_f.get()._field_Owner=(*(_181942_st));
				{
					auto expr = &((*(_181942_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b669d141:;
					if (it != expr_end) {
						jule::Ptr<_1b2e3becc_Field> _182320_cf = *it;
						{
							if ((_182121_f == _182320_cf)) {
								goto _iter_end_1b669d141;
							} else if ((_182121_f.get()._field_Ident == _182320_cf.get()._field_Ident)) {
								_1b2eb7563_pushErr(_self_.ptr(), _182121_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_182121_f.get()._field_Ident, &__jule_any_type5)}));
								_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b669d141:;
						++it;
						goto _iter_begin_1b669d141;
					}
					_iter_end_1b669d141:;
				};
			}
			_iter_next_1b669c5e6:;
			++it;
			goto _iter_begin_1b669c5e6;
		}
		_iter_end_1b669c5e6:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b2ecd5bd_checkStructDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _183640_s) {
	if (_1cb18b301_IsIgnoreIdent((*(_183640_s)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_183640_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_183640_s)))), (*(_183640_s)).get()._field_Ident, (*(_183640_s)).get()._field_CppLinked)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_183640_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_183640_s)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b2eb84a9_checkDirectives(_self_, &((*(_183640_s)).get()._field_Directives), jule::Any((*(_183640_s)), &__jule_any_type66));
	{
		
		if ((!(_1b2ec9c18_checkDeclGenerics(_self_.ptr(), &((*(_183640_s)).get()._field_Generics))))) {
			_case_begin_1b669eeab:;
		}
		else if ((!(_1b2ecd348_checkStructFields(_self_, _183640_s)))) {
			_case_begin_1b66a1cd2:;
		}
		else if ((!(_1b2ecd03a_checkStructImpls(_self_, _183640_s)))) {
			_case_begin_1b66a1d59:;
		}
		_match_end_1b66a1bc2:;
	};
}



inline jule::Bool _1b2ecd832_checkStructDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66a3179:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _185521_s = *it;
			{
				_1b2ecd5bd_checkStructDecl(_self_, &(_185521_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b66a3179:;
			++it;
			goto _iter_begin_1b66a3179;
		}
		_iter_end_1b66a3179:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2ecdaa7_checkFnDecl(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e6e85b_Fn>* _186536_f) {
	if (_1cb18b301_IsIgnoreIdent((*(_186536_f)).get()._field_Ident)) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_186536_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1b2eb84a9_checkDirectives(_self_, &((*(_186536_f)).get()._field_Directives), jule::Any((*(_186536_f)), &__jule_any_type65));
	(*(_186536_f)).get()._field_sema=_self_;
	_1b2eca5a9_checkFnDeclPrototype(_self_, _186536_f);
	if (_1b2eb818a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_186536_f)))), (*(_186536_f)).get()._field_Ident, (*(_186536_f)).get()._field_CppLinked)) {
		if ((*(_186536_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1b2e6e85b_Fn> _187721_init = _1b2eb6199_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_187721_init != nullptr)) {
				return;;
			};
		};
		_1b2eb7563_pushErr(_self_.ptr(), (*(_186536_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_186536_f)).get()._field_Ident, &__jule_any_type5)}));
		_1b2eb7882_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b2ecdd1b_checkFnDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66a7d82:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _188921_f = *it;
			{
				_1b2ecdaa7_checkFnDecl(_self_, &(_188921_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b66a7d82:;
			++it;
			goto _iter_begin_1b66a7d82;
		}
		_iter_end_1b66a7d82:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2ece1d4_pushCycleError(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e683e3_Struct>* _189930_st1, jule::Ptr<_1b2e683e3_Struct>* _189945_st2, jule::Str* _189964_message) {
	;
	jule::Str _190113_refers_to = _1cac0c416_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_189930_st1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_189945_st2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_189964_message))).buffer.insert(0, (((_1caad032d_Repeat(jule::Str(" ", 1), 4LL) + _190113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1b2ece635_checkCrossCycle(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e683e3_Struct>* _190531_st1, jule::Ptr<_1b2e683e3_Struct>* _190546_st2, jule::Str* _190565_message) {
	{
		auto expr = &((*(_190546_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66ab0b6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> *_190616_u = it;
			{
				if (((*(_190616_u)) == (*(_190531_st1)))) {
					_1b2ece1d4_pushCycleError(_self_, _190546_st2, _190616_u, _190565_message);
					return false;;
				};
				if ((!(_1b2ece635_checkCrossCycle(_self_, _190531_st1, _190616_u, _190565_message)))) {
					_1b2ece1d4_pushCycleError(_self_, _190546_st2, _190616_u, _190565_message);
					return false;;
				};
			}
			_iter_next_1b66ab0b6:;
			++it;
			goto _iter_begin_1b66ab0b6;
		}
		_iter_end_1b66ab0b6:;
	};
	return true;;
}



inline jule::Bool _1b2eceaa8_checkStructDeriveIllegalCycles(_1b2eb48a1_Sema* _self_, jule::Str _192049_derive, jule::Ptr<_1b2e683e3_Struct>* _192063_st1, jule::Ptr<_1b305ba25_TypeKind>* _192082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2e683e3_Struct> _192117_st2 = _1b30750b0_getStructFromKind((*(_192082_k)));;
	if ((_192117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_192063_st1)) == _192117_st2)) {
		_1b2eb7563_pushErr(_self_, (*(_192063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_192049_derive, &__jule_any_type5),jule::Any((*(_192063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _193317_message = jule::Str();;
	if ((!(_1b2ece635_checkCrossCycle(_self_, _192063_st1, &(_192117_st2), &(_193317_message))))) {
		jule::Str _193521_errMsg = _193317_message;;
		_193317_message=jule::Str();
		_1b2ece1d4_pushCycleError(_self_, _192063_st1, &(_192117_st2), &(_193317_message));
		_193521_errMsg+=_193317_message;
		_1b2eb7563_pushErr(_self_, (*(_192063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_192049_derive, &__jule_any_type5),jule::Any(_193521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2ecede9_checkStructInsDeriveClone(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e687bc_StructIns> _194548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1b2e31ea0_IsDerives(_194548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_194548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66b18a2:;
		if (it != expr_end) {
			jule::Ptr<_1b2e685d0_FieldIns> _194921_f = *it;
			{
				if ((_194921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1b66b18a2;
				};
				if ((!(_1b305d8d4_SupportsCloning(_194921_f.get()._field_Kind.ptr())))) {
					_1b2eb7563_pushErr(_self_, _194548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_194921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1b2eceaa8_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_194548_st.get()._field_Decl), &(_194921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b66b18a2:;
			++it;
			goto _iter_begin_1b66b18a2;
		}
		_iter_end_1b66b18a2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2ed00d6_checkPackageDecls(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66b4432:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _196721_f = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _196721_f);
				if ((!(_1b2ec990a_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1b2ec7d8c_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b66b4432:;
			++it;
			goto _iter_begin_1b66b4432;
		}
		_iter_end_1b66b4432:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66b46da:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _197721_f = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _197721_f);
				if ((!(_1b2ecb08d_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b66b46da:;
			++it;
			goto _iter_begin_1b66b46da;
		}
		_iter_end_1b66b46da:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66b5697:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _198421_f = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _198421_f);
				if ((!(_1b2ecc875_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b66b5697:;
			++it;
			goto _iter_begin_1b66b5697;
		}
		_iter_end_1b66b5697:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66b6ed4:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _199121_f = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _199121_f);
				{
					
					if ((!(_1b2ecdd1b_checkFnDecls(_self_)))) {
						_case_begin_1b66b7b83:;
					}
					else if ((!(_1b2ecd832_checkStructDecls(_self_)))) {
						_case_begin_1b66b7be9:;
					}
					else {
						_case_begin_1b66b7b1c:;
						{
							goto _iter_next_1b66b6ed4;
						}
					}
					_match_end_1b66b7aa6:;
				};
				return;;
			}
			_iter_next_1b66b6ed4:;
			++it;
			goto _iter_begin_1b66b6ed4;
		}
		_iter_end_1b66b6ed4:;
	};
}



inline void _1b2ed0427_checkDataForTypeInference(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b3030a93_Data>* _200345_d, jule::Ptr<_1cb188a5c_Token>* _200356_err_token) {
	{
		
		if (_1b3030e7d_IsNil((*(_200345_d)).ptr())) {
			_case_begin_1b66b8b1d:;
			{
				_1b2eb7563_pushErr(_self_, (*(_200356_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1b30311e2_IsVoid((*(_200345_d)).ptr())) {
			_case_begin_1b66b8b95:;
			{
				_1b2eb7563_pushErr(_self_, (*(_200356_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_200345_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b66b8c1c:;
			{
				_1b2eb7563_pushErr(_self_, (*(_200356_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b66b89ec:;
	};
}



inline void _1b2ed06ad_checkVar(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2ed8034_Var>* _201433_v) {
	if ((*(_201433_v)).get()._field_CppLinked) {
		return;;
	};
	if (_1b2ed8661_IsTypeInferred((*(_201433_v)).ptr())) {
		(*(_201433_v)).get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=(*(_201433_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1b2ed0427_checkDataForTypeInference(_self_.ptr(), &((*(_201433_v)).get()._field_Value.get()._field_Data), &((*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1b2ec71bb_checkValidityForInitExpr(_self_, (*(_201433_v)).get()._field_Mutable, (*(_201433_v)).get()._field_Reference, &((*(_201433_v)).get()._field_Kind.get()._field_Kind), &((*(_201433_v)).get()._field_Value.get()._field_Data), &((*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1b3067b0d_Arr> _203121_arr = _1b305eac2_Arr((*(_201433_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_203121_arr != nullptr)) {
			if (_203121_arr.get()._field_Auto) {
				jule::Ptr<_1b3067b0d_Arr> _203425_dataArr = _1b305eac2_Arr((*(_201433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_203425_dataArr != nullptr)) {
					_203121_arr.get()._field_N=_203425_dataArr.get()._field_N;
				};
			};
		};
		if (_1b2ebe449_checkAssignType(_self_, (*(_201433_v)).get()._field_Reference, &((*(_201433_v)).get()._field_Kind.get()._field_Kind), &((*(_201433_v)).get()._field_Value.get()._field_Data), (*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1b2ec71bb_checkValidityForInitExpr(_self_, (*(_201433_v)).get()._field_Mutable, (*(_201433_v)).get()._field_Reference, &((*(_201433_v)).get()._field_Kind.get()._field_Kind), &((*(_201433_v)).get()._field_Value.get()._field_Data), &((*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_201433_v)).get()._field_Reference && (!(_1b3074422_isValidForRef(&((*(_201433_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1b2eb7563_pushErr(_self_.ptr(), (*(_201433_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_201433_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_201433_v)).get()._field_Constant) {
		if ((!(_1b3031456_IsConst((*(_201433_v)).get()._field_Value.get()._field_Data.ptr())))) {
			_1b2eb7563_pushErr(_self_.ptr(), (*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*(_201433_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1b3060a4b_Tup((*(_201433_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_201433_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1b2ed09cc_checkTypeVar(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2ed8034_Var>* _206937_decl, jule::Trait<_1b3077997_Lookup> _206953_l) {
	if (((*(_206937_decl)).get()._field_CppLinked || (!(_1b2ed83ec_IsInitialized((*(_206937_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1b3032611_Eval> _207417_eval = nullptr;;
	if (((*(_206937_decl)).get()._field_Kind != nullptr)) {
		_207417_eval=_1b2ebd789_evalpd(_self_, _206953_l, (*(_206937_decl)).get()._field_Kind.get()._field_Kind, (*(_206937_decl)));
	} else {
		_207417_eval=_1b2ebd789_evalpd(_self_, _206953_l, nullptr, (*(_206937_decl)));
	};
	_207417_eval.get()._field_immutable=(!((*(_206937_decl)).get()._field_Mutable));
	(*(_206937_decl)).get()._field_Value.get()._field_Data=_1b304d033_evalExpr(_207417_eval, (*(_206937_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_206937_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1b2ed06ad_checkVar(_self_, _206937_decl);
}



inline void _1b2ed0ba8_checkGlobalTypes(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66c790c:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _209021_decl = *it;
			{
				if (((_1b2ed83ec_IsInitialized(_209021_decl.ptr()) && (_209021_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1b2ed8661_IsTypeInferred(_209021_decl.ptr()) && (_209021_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1b2ed09cc_checkTypeVar(_self_, &(_209021_decl), jule::Trait<_1b3077997_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b66c790c:;
			++it;
			goto _iter_begin_1b66c790c;
		}
		_iter_end_1b66c790c:;
	};
}



inline jule::Ptr<_1b2e71132_FnIns> _1b2ed1060_readyToCheckFn(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _210139_s, jule::Ptr<_1b2e6e85b_Fn>* _210159_f) {
	jule::Ptr<_1b2e71132_FnIns> _210217_ins = _1b2e6ead1_instance((*(_210159_f)));;
	if (((*(_210159_f)).get()._field_Instances.len() != 0LL)) {
		return _210217_ins;;
	};
	_210217_ins.get()._field_Owner=(*(_210139_s));
	_1b2e6edab_appendInstance((*(_210159_f)).ptr(), &(_210217_ins));
	_210217_ins.get()._field_reloaded=true;
	if (_1b2ec1814_reloadFnInsTypes(_self_, _210217_ins)) {
		return _210217_ins;;
	};
	return nullptr;;
}



inline void _1b2ed137e_checkTypeMethod(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _211540_s, jule::Ptr<_1b2e6e85b_Fn>* _211560_f) {
	if (((*(_211560_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1b2e71132_FnIns> _212017_ins = (*(_211560_f)).get()._field_Instances[0LL];;
	if ((_212017_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1b2ed3a57_checkFnIns(_self_, &(_212017_ins));
}



inline jule::Ptr<_1b2e71132_FnIns> _1b2ed17d0_checkStructInsOp(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _212841_s, jule::Ptr<_1b2e6e85b_Fn>* _212861_f, jule::Fn<jule::Bool(jule::Ptr<_1b2e6e85b_Fn>)> _212869_p) {
	if (((((*(_212861_f)) == nullptr) || ((*(_212861_f)).get()._field_Generics.len() > 0LL)) || (!(_212869_p((*(_212861_f))))))) {
		return nullptr;;
	};
	return (*(_212861_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1b2ed1b87_checkStructEnv(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _213839_s, jule::Ptr<_1cb188a5c_Token> _213858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1b306a391_typeChecker _213917_tc = _1b306a391_typeChecker{._field_s=(*(_213839_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1b3077997_Lookup>((*(_213839_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1b3077997_Lookup>((*(_213839_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1b30694b1_referencer>(_1b30694b1_referencer{._field_ident=(*(_213839_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_213839_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_213839_s)).get()._field_Refers, };;
	if (((*(_213839_s)).get()._field_Generics.len() > 0LL)) {
		_213917_tc._field_useGenerics=jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>::alloc(0LL, (*(_213839_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_213839_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b66d154d:;
			if (it != expr_end) {
				jule::I32 _215218_i = it - expr->begin();
				jule::Ptr<_1b305a2e8_InsGeneric> _215225_g = *it;
				{
					jule::Ptr<_1b2e58a76_GenericDecl> _215325_decl = (*(_213839_s)).get()._field_Decl.get()._field_Generics[_215218_i];;
					_213917_tc._field_useGenerics = jule::alloc_for_append(_213917_tc._field_useGenerics,1);_213917_tc._field_useGenerics.__push(jule::new_ptr<_1b305ad32_TypeAlias>(_1b305ad32_TypeAlias{._field_Token=_215325_decl.get()._field_Token, ._field_Ident=_215325_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_215225_g.get()._field_Kind}), }));;
				}
				_iter_next_1b66d154d:;
				++it;
				_215218_i++;
				goto _iter_begin_1b66d154d;
			}
			_iter_end_1b66d154d:;
		};
	};
	jule::Ptr<_1b302ac69_SymbolTable> _216217_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1b2eb719a_setCurrentFile(_self_.ptr(), _216217_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_213839_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1b302ac69_SymbolTable> _216621_file = _1b2eb3eaa_findFile(&(_self_.get()._field_files), &((*(_213839_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_216621_file != nullptr)) {
			_1b2eb719a_setCurrentFile(_self_.ptr(), _216621_file);
		};
	};
	if (((*(_213839_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1b2e860ae_constraintChecker> _217321_cc = _1b2ebc414_constraintChecker(_self_);;
		_217321_cc.get()._field_et=_213858_errorToken;
		_217321_cc.get()._field_si=(*(_213839_s));
		_217321_cc.get()._field_genericsA=_213917_tc._field_useGenerics;
		_217321_cc.get()._field_uniq=true;
		if ((!(_1b2e86e8e_check(_217321_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_213839_s)).get()._field_Statics.len() > 0LL)) {
		jule::I32 _218621_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_213917_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_213839_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b66d8621:;
			if (it != expr_end) {
				jule::Ptr<_1b2ed8034_Var> _218825_v = *it;
				{
					_1b2ecc38b_checkVarDecl(_self_, &(_218825_v), jule::Trait<_1b3077997_Lookup>(_self_, 3));
					_1b2ed09cc_checkTypeVar(_self_, &(_218825_v), jule::Trait<_1b3077997_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _218621_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b66d8621:;
				++it;
				goto _iter_begin_1b66d8621;
			}
			_iter_end_1b66d8621:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_213917_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1b3032611_Eval> _219917_eval = _1b2ebde4e_eval(_self_, jule::Trait<_1b3077997_Lookup>(_self_, 3));;
	(*(_213839_s)).get()._field_Comparable=(!((*(_213839_s)).get()._field_Decl.get()._field_CppLinked));
	{
		auto expr = &((*(_213839_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66db16d:;
		if (it != expr_end) {
			jule::Ptr<_1b2e685d0_FieldIns> _220121_f = *it;
			{
				jule::Ptr<_1b305ba25_TypeKind> _220221_kind = _1b307260c_checkDecl(&_213917_tc, &(_220121_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_220221_kind != nullptr) && __jule_func_result);
				if ((_220221_kind == nullptr)) {
					if (((_self_ != (*(_213839_s)).get()._field_Decl.get()._field_sema) && ((*(_213839_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_213839_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_213839_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1b66db16d;
				};
				_220121_f.get()._field_Kind=_220221_kind;
				(*(_213839_s)).get()._field_Mutable=((*(_213839_s)).get()._field_Mutable || ((!(_220121_f.get()._field_Decl.get()._field_Mutable)) && _1b305d197_Mutable(_220121_f.get()._field_Kind.ptr())));
				(*(_213839_s)).get()._field_Comparable=((*(_213839_s)).get()._field_Comparable && _1b305ce33_Comparable(_220121_f.get()._field_Kind.ptr()));
				_1b2ecede9_checkStructInsDeriveClone(_self_.ptr(), (*(_213839_s)));
				if ((_220121_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1b66db16d;
				};
				_219917_eval.get()._field_prefix=_220121_f.get()._field_Kind;
				_219917_eval.get()._field_field=_220121_f;
				_220121_f.get()._field_Default=_1b304d033_evalExpr(_219917_eval, _220121_f.get()._field_Decl.get()._field_Default);
				if ((_220121_f.get()._field_Default == nullptr)) {
					goto _iter_next_1b66db16d;
				};
				;
				_1b2ebe449_checkAssignType(_self_, false, &(_220121_f.get()._field_Kind), &(_220121_f.get()._field_Default), _220121_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1b66db16d:;
			++it;
			goto _iter_begin_1b66db16d;
		}
		_iter_end_1b66db16d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2ed203e_precheckStructIns(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _223642_s, jule::Ptr<_1cb188a5c_Token> _223661_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1b2ed1b87_checkStructEnv(_self_, _223642_s, _223661_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_223642_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66e350a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _224121_f = *it;
			{
				if ((_224121_f.get()._field_Generics.len() == 0LL)) {
					if ((_1b2ed1060_readyToCheckFn(_self_, _223642_s, &(_224121_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b66e350a:;
			++it;
			goto _iter_begin_1b66e350a;
		}
		_iter_end_1b66e350a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2ed22b4_checkStructIns(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns>* _225139_s) {
	{
		auto expr = &((*(_225139_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66e4d58:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _225221_f = *it;
			{
				_1b2ed137e_checkTypeMethod(_self_, _225139_s, &(_225221_f));
			}
			_iter_next_1b66e4d58:;
			++it;
			goto _iter_begin_1b66e4d58;
		}
		_iter_end_1b66e4d58:;
	};
}



inline void _1b2ed2539_checkTypeStruct(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _225740_s) {
	if ((*(_225740_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_225740_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_225740_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66e66a6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _227021_ins = *it;
			{
				_1b2ed22b4_checkStructIns(_self_, &(_227021_ins));
			}
			_iter_next_1b66e66a6:;
			++it;
			goto _iter_begin_1b66e66a6;
		}
		_iter_end_1b66e66a6:;
	};
}



inline void _1b2ed2715_checkStructTypes(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66e7267:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _227621_s = *it;
			{
				_1b2ed2539_checkTypeStruct(_self_, &(_227621_s));
			}
			_iter_next_1b66e7267:;
			++it;
			goto _iter_begin_1b66e7267;
		}
		_iter_end_1b66e7267:;
	};
}



inline void _1b2ed29ac_checkStructInsOperators(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e687bc_StructIns> _228147_s) {
	{
		auto expr = &(_228147_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66e80ae:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _228221_m = *it;
			{
				{
					auto &_match_expr{ _228221_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1b66e8d18:;
						{
							_228147_s.get()._field_Operators._field_Eq=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ed9cd3_Eq);
							_228147_s.get()._field_Comparable=(_228147_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1b66e8d7e:;
						{
							_228147_s.get()._field_Operators._field_Gt=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2eda07a_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1b66e8de5:;
						{
							_228147_s.get()._field_Operators._field_GtEq=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2eda322_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1b66e8e6c:;
						{
							_228147_s.get()._field_Operators._field_Lt=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2eda5b9_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1b66e8ee4:;
						{
							_228147_s.get()._field_Operators._field_LtEq=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2eda861_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1b66e906b:;
						{
							_228147_s.get()._field_Operators._field_Shl=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edae49_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1b66e90e3:;
						{
							_228147_s.get()._field_Operators._field_Shr=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edb1e1_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1b66e916a:;
						{
							_228147_s.get()._field_Operators._field_Add=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edb488_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1b66e91e2:;
						{
							_228147_s.get()._field_Operators._field_Sub=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edb730_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1b66e9269:;
						{
							_228147_s.get()._field_Operators._field_Div=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edb9c7_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1b66e92e1:;
						{
							_228147_s.get()._field_Operators._field_Mul=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edbc6e_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1b66e9368:;
						{
							_228147_s.get()._field_Operators._field_Mod=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edc016_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1b66e93e0:;
						{
							_228147_s.get()._field_Operators._field_BitAnd=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edc2ad_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1b66e9467:;
						{
							_228147_s.get()._field_Operators._field_BitOr=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edc555_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1b66e94de:;
						{
							_228147_s.get()._field_Operators._field_BitXor=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edc7ec_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1b66e9566:;
						{
							_228147_s.get()._field_Operators._field_Neg=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edcdd5_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1b66e95dd:;
						{
							_228147_s.get()._field_Operators._field_Pos=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edd17c_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1b66e9665:;
						{
							_228147_s.get()._field_Operators._field_BitNot=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edd424_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1b66e96dc:;
						{
							_228147_s.get()._field_Operators._field_AddAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edda0c_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1b66e9764:;
						{
							_228147_s.get()._field_Operators._field_SubAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2eddca4_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1b66e97db:;
						{
							_228147_s.get()._field_Operators._field_DivAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ede04b_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1b66e9863:;
						{
							_228147_s.get()._field_Operators._field_MulAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ede2e3_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1b66e98da:;
						{
							_228147_s.get()._field_Operators._field_ModAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ede58a_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1b66e9962:;
						{
							_228147_s.get()._field_Operators._field_ShlAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ede832_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1b66e99d9:;
						{
							_228147_s.get()._field_Operators._field_ShrAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2edeac9_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1b66e9a61:;
						{
							_228147_s.get()._field_Operators._field_BitOrAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2eded71_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1b66e9ad8:;
						{
							_228147_s.get()._field_Operators._field_BitAndAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ee0118_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1b66e9b60:;
						{
							_228147_s.get()._field_Operators._field_BitXorAssign=_1b2ed17d0_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__1b2ee03b0_BitXorAssign);
						}
					}
					_match_end_1b66e88ea:;
				};
			}
			_iter_next_1b66e80ae:;
			++it;
			goto _iter_begin_1b66e80ae;
		}
		_iter_end_1b66e80ae:;
	};
}



inline void _1b2ed2c43_precheckStructType(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e683e3_Struct>* _234543_s) {
	if ((*(_234543_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_234543_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_234543_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b2e687bc_StructIns> _235621_ins = _1b2e284e6_instance((*(_234543_s)));;
		_235621_ins.get()._field_Checked=true;
		_1b2e29250_appendInstance((*(_234543_s)).ptr(), &(_235621_ins));
		_1b2ed203e_precheckStructIns(_self_, &(_235621_ins), nullptr);
	};
	_1b2ed29ac_checkStructInsOperators(_self_, (*(_234543_s)).get()._field_Instances[0LL]);
}



inline void _1b2ed2e1e_precheckStructTypes(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b670c17d:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _236621_s = *it;
			{
				_1b2ed2c43_precheckStructType(_self_, &(_236621_s));
			}
			_iter_next_1b670c17d:;
			++it;
			goto _iter_begin_1b670c17d;
		}
		_iter_end_1b670c17d:;
	};
}



inline void _1b2ed3194_checkRets(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e71132_FnIns>* _237133_f) {
	if (_1b2e1e102_IsVoid((*(_237133_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1b2ed533e_missingRetChecker _237513_mrc = static__1b2ed5707_new();;
	jule::Bool _237613_ok = _1b2ed6719_check(&_237513_mrc, (*(_237133_f)).get()._field_Scope);;
	if ((!(_237613_ok))) {
		_1b2eb7563_pushErr(_self_, (*(_237133_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1b2ed34b3_checkFnInsSc(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e71132_FnIns>* _238236_f, jule::Ptr<_1b2e94ab2_scopeChecker>* _238252_sc) {
	_1b2eb35c5_appendRetVars(&((*(_238252_sc)).get()._field_table.get()._field_Vars), _238236_f);
	_1b2eb387d_appendParamVars(&((*(_238252_sc)).get()._field_table.get()._field_Vars), _238236_f);
	_1b2eb3b58_appendGenericTypeAliases(&((*(_238252_sc)).get()._field_table.get()._field_TypeAliases), _238236_f);
	_1b2ea48b3_check((*(_238252_sc)), &((*(_238236_f)).get()._field_Decl.get()._field_Scope), &((*(_238236_f)).get()._field_Scope));
	if ((!(_1b2e97730_stopped((*(_238252_sc)).ptr())))) {
		_1b2ed3194_checkRets(_self_, _238236_f);
	};
}



inline void _1b2ed37d2_checkFnInsCaller(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e71132_FnIns>* _239541_f, jule::Ptr<_1cb188a5c_Token> _239556_caller) {
	if ((*(_239541_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1b302ac69_SymbolTable> _240017_old = (*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1b2eb719a_setCurrentFile((*(_239541_f)).get()._field_Decl.get()._field_sema.ptr(), _240017_old);
	});;
	jule::Ptr<_1b302ac69_SymbolTable> _240217_file = _1b2eb3eaa_findFile(&((*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_239541_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_240217_file != nullptr)) {
		_1b2eb719a_setCurrentFile((*(_239541_f)).get()._field_Decl.get()._field_sema.ptr(), _240217_file);
	};
	jule::Ptr<_1b2e94ab2_scopeChecker> _240717_sc = _1b2e8a415_newScopeChecker(&((*(_239541_f)).get()._field_Decl.get()._field_sema), (*(_239541_f)));;
	_240717_sc.get()._field_calledFrom=_239556_caller;
	_1b2ed34b3_checkFnInsSc(_self_.ptr(), _239541_f, &(_240717_sc));
	if (((*(_239541_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1b2ed3a57_checkFnIns(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e71132_FnIns>* _241735_f) {
	_1b2ed37d2_checkFnInsCaller(_self_, _241735_f, nullptr);
}



inline void _1b2ed3ccc_checkTypeFn(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e6e85b_Fn>* _242136_f) {
	if ((*(_242136_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_242136_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_242136_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6717650:;
		if (it != expr_end) {
			jule::Ptr<_1b2e71132_FnIns> _243121_ins = *it;
			{
				_1b2ed3a57_checkFnIns(_self_, &(_243121_ins));
			}
			_iter_next_1b6717650:;
			++it;
			goto _iter_begin_1b6717650;
		}
		_iter_end_1b6717650:;
	};
}



inline void _1b2ed4052_checkTestFn(_1b2eb48a1_Sema* _self_, jule::Ptr<_1b2e71132_FnIns>* _243635_f) {
	if ((*(_243635_f)).get()._field_Decl.get()._field_Public) {
		_1b2eb7563_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_, jule::Str("remove \"pub\" modifier", 21), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_243635_f)).get()._field_Decl.get()._field_Unsafety || (!(_1b2e1e102_IsVoid((*(_243635_f)).get()._field_Decl.ptr())))) || ((*(_243635_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_243635_f)).get()._field_Params.len() != 1LL)) || (*(_243635_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_243635_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1b2eb7563_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b3065006_Sptr> _245417_sptr = _1b305e121_Sptr((*(_243635_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_245417_sptr == nullptr)) {
		_1b2eb7563_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _246113_s = _1b306030e_Struct(_245417_sptr.get()._field_Elem.ptr());;
	if (((_246113_s == nullptr) || (!(_1b2eb1c88_isStdPackage(_246113_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1b2eb7563_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b2eb7882_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b2ed42c7_precheckTypeFn(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Ptr<_1b2e6e85b_Fn>* _246939_f) {
	if ((*(_246939_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_246939_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_246939_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b2e71132_FnIns> _248021_ins = _1b2e362d4_instanceForce((*(_246939_f)));;
		(*(_246939_f)).get()._field_Instances = jule::alloc_for_append((*(_246939_f)).get()._field_Instances,1);(*(_246939_f)).get()._field_Instances.__push(_248021_ins);;
		jule::Bool _248217_ok = _1b2ec1814_reloadFnInsTypes(_self_, _248021_ins);;
		_248021_ins.get()._field_reloaded=true;
		if ((_248217_ok && _1b3073ab4_hasDirective(&((*(_246939_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1b2ed4052_checkTestFn(_self_.ptr(), &(_248021_ins));
		};
	};
}



inline void _1b2ed44a3_precheckFnTypes(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6723161:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> _249321_decl = *it;
			{
				{
					auto expr = &(_249321_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b67239be:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _249425_m = *it;
						{
							_1b2ed42c7_precheckTypeFn(_self_, &(_249425_m));
						}
						_iter_next_1b67239be:;
						++it;
						goto _iter_begin_1b67239be;
					}
					_iter_end_1b67239be:;
				};
			}
			_iter_next_1b6723161:;
			++it;
			goto _iter_begin_1b6723161;
		}
		_iter_end_1b6723161:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b672368e:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _249821_decl = *it;
			{
				_1b2ed42c7_precheckTypeFn(_self_, &(_249821_decl));
			}
			_iter_next_1b672368e:;
			++it;
			goto _iter_begin_1b672368e;
		}
		_iter_end_1b672368e:;
	};
}



inline void _1b2ed467e_checkFnTypes(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6724c9a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _250521_decl = *it;
			{
				_1b2ed3ccc_checkTypeFn(_self_, &(_250521_decl));
			}
			_iter_next_1b6724c9a:;
			++it;
			goto _iter_begin_1b6724c9a;
		}
		_iter_end_1b6724c9a:;
	};
}



inline void _1b2ed485a_checkPackageTypes(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67259b0:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _251321_f = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _251321_f);
				_1b2ed0ba8_checkGlobalTypes(_self_);
				_1b2ed44a3_precheckFnTypes(_self_);
				_1b2ed2e1e_precheckStructTypes(_self_);
			}
			_iter_next_1b67259b0:;
			++it;
			goto _iter_begin_1b67259b0;
		}
		_iter_end_1b67259b0:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6727286:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _252421_f = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _252421_f);
				_1b2ed467e_checkFnTypes(_self_);
				_1b2ed2715_checkStructTypes(_self_);
			}
			_iter_next_1b6727286:;
			++it;
			goto _iter_begin_1b6727286;
		}
		_iter_end_1b6727286:;
	};
}



inline void _1b2ed4a36_setFileSemaFields(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b672786e:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _253221_f = *it;
			{
				_253221_f.get()._field_sema=_self_;
			}
			_iter_next_1b672786e:;
			++it;
			goto _iter_begin_1b672786e;
		}
		_iter_end_1b672786e:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b672885e:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _253521_st = *it;
			{
				_253521_st.get()._field_sema=_self_;
			}
			_iter_next_1b672885e:;
			++it;
			goto _iter_begin_1b672885e;
		}
		_iter_end_1b672885e:;
	};
}



inline void _1b2ed4c12_setSemaFields(jule::Ptr<_1b2eb48a1_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6729398:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _254121_file = *it;
			{
				_1b2eb719a_setCurrentFile(_self_.ptr(), _254121_file);
				_1b2ed4a36_setFileSemaFields(_self_);
			}
			_iter_next_1b6729398:;
			++it;
			goto _iter_begin_1b6729398;
		}
		_iter_end_1b6729398:;
	};
}



inline void _1b2ed4e87_check(jule::Ptr<_1b2eb48a1_Sema> _self_, jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _254730_files) {
	_self_.get()._field_files=(*(_254730_files));
	_1b2ebabc6_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2ed4c12_setSemaFields(_self_);
	_1b2ebb259_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2ebb07d_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2ed00d6_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2ed485a_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b2eb48a1_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1b2ed533e_missingRetChecker static__1b2ed5707_new(void) {
	return _1b2ed533e_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1b2ed59d2_checkConditional(_1b2ed533e_missingRetChecker* _self_, jule::Ptr<_1b2e8daab_Conditional> _259035_c) {
	{
		auto expr = &(_259035_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b672dc93:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8d44b_If> _259121_elif = *it;
			{
				if ((_259121_elif == nullptr)) {
					return false;;
				};
				if ((!(_1b2ed640b_checkScope(_self_, _259121_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b672dc93:;
			++it;
			goto _iter_begin_1b672dc93;
		}
		_iter_end_1b672dc93:;
	};
	return ((_259035_c.get()._field_Default != nullptr) && _1b2ed640b_checkScope(_self_, _259035_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1b2ed5ce0_checkMatch(_1b2ed533e_missingRetChecker* _self_, jule::Ptr<_1b2e91c9b_Match> _260229_m) {
	{
		auto expr = &(_260229_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6730888:;
		if (it != expr_end) {
			jule::Ptr<_1b2e927e6_Case> _260321_c = *it;
			{
				if ((_260321_c == nullptr)) {
					return false;;
				};
				jule::I32 _260717_n = (*(_self_))._field_breaked.len();;
				jule::Bool _260817_ok = _1b2ed640b_checkScope(_self_, _260321_c.get()._field_Scope);;
				{
					
					if ((_260717_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b67324d3:;
						{
							return false;;
						}
					}
					else if ((!(_260817_ok))) {
						_case_begin_1b6732549:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b67325c1;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b67325c1:;
						{
							(*(_self_))._field_falled=false;
							if ((_260321_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b6730888;
						}
					}
					_match_end_1b673247d:;
				};
			}
			_iter_next_1b6730888:;
			++it;
			goto _iter_begin_1b6730888;
		}
		_iter_end_1b6730888:;
	};
	return ((_260229_m.get()._field_Default != nullptr) && _1b2ed640b_checkScope(_self_, _260229_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1b2ed60ed_checkInfIter(_1b2ed533e_missingRetChecker* _self_, jule::Ptr<_1b2e8dd97_InfIter> _262831_it) {
	jule::I32 _262913_n = (*(_self_))._field_breaked.len();;
	if (_1b2ed640b_checkScope(_self_, _262831_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _262913_n);
		return true;;
	};
	if ((_262913_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _263517_itaddr = static_cast<jule::Uintptr>(_262831_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_262913_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b67362ea:;
			if (it != expr_end) {
				jule::Uintptr _263620_addr = *it;
				{
					if ((_263517_itaddr == _263620_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _262913_n);
						return false;;
					};
				}
				_iter_next_1b67362ea:;
				++it;
				goto _iter_begin_1b67362ea;
			}
			_iter_end_1b67362ea:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _262913_n);
	};
	return true;;
}



inline jule::Bool _1b2ed640b_checkScope(_1b2ed533e_missingRetChecker* _self_, jule::Ptr<_1b2e8d050_Scope> _264729_s) {
	if ((_264729_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_264729_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6737dac:;
		if (it != expr_end) {
			jule::Any _265121_st = *it;
			{
				{
					auto &_match_expr{ _265121_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1b67385e9:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1b6738693:;
						{
							jule::Uintptr _265721_addr = _265121_st.cast_ptr<_1b2e904a3_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_265721_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_265721_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1b6738709:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1b6738770:;
						{
							if (_1b2ed60ed_checkInfIter(_self_, _265121_st.cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1b67387d6:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b673884c:;
						{
							if (_1b2ed640b_checkScope(_self_, _265121_st.cast_ptr<_1b2e8d050_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b67388b3:;
						{
							{
								auto &_match_expr{ _265121_st.cast_ptr<_1b3030a93_Data>(&__jule_any_type23).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1b673c3bc:;
									{
										return true;;
									}
								}
								_match_end_1b673c114:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1b673893a:;
						{
							if (_1b2ed59d2_checkConditional(_self_, _265121_st.cast_ptr<_1b2e8daab_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1b67389b2:;
						{
							if (_1b2ed5ce0_checkMatch(_self_, _265121_st.cast_ptr<_1b2e91c9b_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1b6738451:;
				};
			}
			_iter_next_1b6737dac:;
			++it;
			goto _iter_begin_1b6737dac;
		}
		_iter_end_1b6737dac:;
	};
	return false;;
}



inline jule::Bool _1b2ed6719_check(_1b2ed533e_missingRetChecker* _self_, jule::Ptr<_1b2e8d050_Scope> _269324_s) {
	return _1b2ed640b_checkScope(_self_, _269324_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2ed533e_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2ed6ede_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2ed83ec_IsInitialized(_1b2ed8034_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1b2ed8661_IsTypeInferred(_1b2ed8034_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1b2ed88c5_untypedConstant(_1b2ed8034_Var* _self_) {
	return (_1b2ed8661_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2ed8034_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b2ed9453_Dispose(jule::Ptr<_1b2e6e85b_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1b2e1e102_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1b2e2e60c_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1b2ed96ea_Str(jule::Ptr<_1b2e6e85b_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1b2e1e102_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1b2e2e60c_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b2e71132_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1b3061772_Prim> _3913_prim = _1b305ddac_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1b30649a6_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1b2ed9a3b_logical(jule::Ptr<_1b2e6e85b_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1b2e1e102_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1b2e2e60c_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b2e71132_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1b3061772_Prim> _6413_prim = _1b305ddac_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1b3064742_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1b306030e_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1b2ed9cd3_Eq(jule::Ptr<_1b2e6e85b_Fn> _7218_f) {
	return static__1b2ed9a3b_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1b2eda07a_Gt(jule::Ptr<_1b2e6e85b_Fn> _7718_f) {
	return static__1b2ed9a3b_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1b2eda322_GtEq(jule::Ptr<_1b2e6e85b_Fn> _8220_f) {
	return static__1b2ed9a3b_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1b2eda5b9_Lt(jule::Ptr<_1b2e6e85b_Fn> _8718_f) {
	return static__1b2ed9a3b_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1b2eda861_LtEq(jule::Ptr<_1b2e6e85b_Fn> _9220_f) {
	return static__1b2ed9a3b_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1b2edaba2_result(jule::Ptr<_1b2e6e85b_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1b2e1e102_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1b2e2e60c_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b2e71132_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1b306030e_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1b2edae49_Shl(jule::Ptr<_1b2e6e85b_Fn> _11819_f) {
	return static__1b2edaba2_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1b2edb1e1_Shr(jule::Ptr<_1b2e6e85b_Fn> _12319_f) {
	return static__1b2edaba2_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1b2edb488_Add(jule::Ptr<_1b2e6e85b_Fn> _12819_f) {
	return static__1b2edaba2_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1b2edb730_Sub(jule::Ptr<_1b2e6e85b_Fn> _13319_f) {
	return static__1b2edaba2_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1b2edb9c7_Div(jule::Ptr<_1b2e6e85b_Fn> _13819_f) {
	return static__1b2edaba2_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1b2edbc6e_Mul(jule::Ptr<_1b2e6e85b_Fn> _14319_f) {
	return static__1b2edaba2_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1b2edc016_Mod(jule::Ptr<_1b2e6e85b_Fn> _14819_f) {
	return static__1b2edaba2_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1b2edc2ad_BitAnd(jule::Ptr<_1b2e6e85b_Fn> _15322_f) {
	return static__1b2edaba2_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1b2edc555_BitOr(jule::Ptr<_1b2e6e85b_Fn> _15821_f) {
	return static__1b2edaba2_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1b2edc7ec_BitXor(jule::Ptr<_1b2e6e85b_Fn> _16322_f) {
	return static__1b2edaba2_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1b2edcb3d_unary(jule::Ptr<_1b2e6e85b_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1b2e1e102_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1b2e2e60c_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b2e71132_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1b306030e_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1b2edcdd5_Neg(jule::Ptr<_1b2e6e85b_Fn> _18719_f) {
	return static__1b2edcb3d_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1b2edd17c_Pos(jule::Ptr<_1b2e6e85b_Fn> _19219_f) {
	return static__1b2edcb3d_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1b2edd424_BitNot(jule::Ptr<_1b2e6e85b_Fn> _19722_f) {
	return static__1b2edcb3d_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1b2edd765_assign(jule::Ptr<_1b2e6e85b_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1b2e1e102_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1b2e2e60c_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1b2edda0c_AddAssign(jule::Ptr<_1b2e6e85b_Fn> _22125_f) {
	return static__1b2edd765_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1b2eddca4_SubAssign(jule::Ptr<_1b2e6e85b_Fn> _22625_f) {
	return static__1b2edd765_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1b2ede04b_DivAssign(jule::Ptr<_1b2e6e85b_Fn> _23125_f) {
	return static__1b2edd765_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1b2ede2e3_MulAssign(jule::Ptr<_1b2e6e85b_Fn> _23625_f) {
	return static__1b2edd765_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1b2ede58a_ModAssign(jule::Ptr<_1b2e6e85b_Fn> _24125_f) {
	return static__1b2edd765_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1b2ede832_ShlAssign(jule::Ptr<_1b2e6e85b_Fn> _24625_f) {
	return static__1b2edd765_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1b2edeac9_ShrAssign(jule::Ptr<_1b2e6e85b_Fn> _25125_f) {
	return static__1b2edd765_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1b2eded71_BitOrAssign(jule::Ptr<_1b2e6e85b_Fn> _25627_f) {
	return static__1b2edd765_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1b2ee0118_BitAndAssign(jule::Ptr<_1b2e6e85b_Fn> _26128_f) {
	return static__1b2edd765_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1b2ee03b0_BitXorAssign(jule::Ptr<_1b2e6e85b_Fn> _26628_f) {
	return static__1b2edd765_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2ed8cd2_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1b3019d79_pushErr(_1b301985c_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1b301a0dd_checkTrait(_1b301985c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b305c95a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2e8033e_Trait> _12513_trt = _1b3060573_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1b305e121_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b677a33e:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1b305e121_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1b306030e_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b6779bac;
			}
		}
		else if ((_1b306030e_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b6779bac:;
			{
				jule::Ptr<_1b2e687bc_StructIns> _13617_s = _1b306030e_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1b2e2cece_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1b3001998_traitHasReferenceReceiver(&(_12513_trt)))) {
					_1b3019d79_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b3060573_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b6779c23:;
			{
				__jule_func_result = (_12513_trt == _1b3060573_Trait((*(_self_))._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b6779b46:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b6779ad0:;
	};
}



inline jule::Bool _1b301a352_checkPtr(_1b301985c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b305c95a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b306856a_Ptr> _15617_dest = _1b305e385_Ptr((*(_self_))._field_dest.ptr());;
	if (_1b306903d_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1b305c22e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b301a5b6_checkPrim(_1b301985c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1b3061772_Prim> _16517_prim = _1b305ddac_Prim((*(_self_))._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1b3064c1a_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1b305c22e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b301a96d_typeEnum(_1b301985c_typeCompatibilityChecker* _self_, jule::Ptr<_1b2e83a7e_TypeEnum>* _17328_e, jule::Ptr<_1b305ba25_TypeKind>* _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_17328_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b678217b:;
		if (it != expr_end) {
			jule::Ptr<_1b2e834b8_TypeEnumItem> _17421_item = *it;
			{
				if (_1b305c22e_Equal(_17421_item.get()._field_Kind.get()._field_Kind, (*(_17347_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1b2e83a7e_TypeEnum> _17821_ke = _1b305e85d_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1b678217b;
				};
				if (_1b301a96d_typeEnum(_self_, &(_17821_ke), _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b678217b:;
			++it;
			goto _iter_begin_1b678217b;
		}
		_iter_end_1b678217b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b301abd2_checkTypeEnum(_1b301985c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b305c22e_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2e83a7e_TypeEnum> _19317_e = _1b305e85d_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1b301a96d_typeEnum(_self_, &(_19317_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1b301ae46_check(_1b301985c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1b305e385_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1b301a352_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1b305d40b_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1b305c95a_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1b305ddac_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b6786c63:;
			{
				__jule_func_result = _1b301a5b6_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b305e85d_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b678714d:;
			{
				__jule_func_result = _1b301abd2_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b3060573_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b67871b4:;
			{
				__jule_func_result = _1b301a0dd_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b678616e:;
			{
				__jule_func_result = _1b305c22e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b6785d61:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b301985c_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1b301b8e7_pushErr(_1b301b485_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _22926_fmt, _22939_args);
}



inline jule::Bool _1b301bb5b_checkValidity(_1b301b485_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1b306009a_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6789d76:;
			{
				jule::Ptr<_1b2e71132_FnIns> _23717_f = _1b306009a_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1b2e724b8_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1b678b3e9:;
						{
							_1b301b8e7_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1b678b471:;
						{
							_1b301b8e7_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1b2e3d75e_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1b678b4e8:;
						{
							_1b301b8e7_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1b678b570:;
						{
							_1b301b8e7_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1b2eb7882_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1b678b31c:;
				};
			}
		}
		else if ((_1b3060a4b_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6789ded:;
			{
				_1b301b8e7_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1b6789cbb:;
	};
	return _23417_valid;;
}



inline jule::Bool _1b301bdc0_checkConst(_1b301b485_assignTypeChecker* _self_) {
	if (((((!(_1b3031456_IsConst((*(_self_))._field_d.ptr()))) || (_1b305ddac_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1b18de0ce_IsNum(_1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type47_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _1b305ddac_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1b18ddd37_IsFloat(_27413_kind)) {
			_case_begin_1b67939c8:;
			{
				if ((!(_1b3001aca_floatAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_1b301b8e7_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_1b18dda18_IsInt(_27413_kind)) {
			_case_begin_1b6793357:;
			{
				if ((!(_1b3019681_intAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_1b301b8e7_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1b67932e1:;
			{
				return false;;
			}
		}
		_match_end_1b679327a:;
	};
	return true;;
}



inline jule::Bool _1b301c134_isPrim(_1b301b485_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1b305c6e6_CppLinked((*(_self_))._field_dest.ptr()) || _1b305c6e6_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1b305ddac_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1b301c398_checkCompatibility(_1b301b485_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b6797a21:;
			{
				return false;;
			}
		}
		else if ((!(_1b301bb5b_checkValidity(_self_)))) {
			_case_begin_1b6797a98:;
			{
				return false;;
			}
		}
		else if (_1b301bdc0_checkConst(_self_)) {
			_case_begin_1b6797b20:;
			{
				return true;;
			}
		}
		else if ((_1b305e5e9_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6797b97:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _31821_dkind = (*(_self_))._field_dest;;
				if ((_1b305e5e9_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_1b305e5e9_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1b305ddac_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1b67978cd;
				};
				if (_1b18da84a_TypesAreCompatible(_1b305ddac_Prim(_1b305e5e9_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1b305ddac_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1b301c134_isPrim(_self_)) {
			_case_begin_1b6797c1e:;
			{
				jule::Ptr<_1b3061772_Prim> _32817_dest = _1b305ddac_Prim((*(_self_))._field_dest.ptr());;
				if (_1b3064c1a_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1b3061772_Prim> _33221_src = _1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1b18da84a_TypesAreCompatible(_32817_dest.get()._field_Kind, _33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1b67978cd:;
	};
	return _1b2ebe89a_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1b301c60c_check(_1b301b485_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _1b301c398_checkCompatibility(_self_);;
	if ((_34113_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1b3075610_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b301b485_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b67b04ea_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b67b1b06:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1b67b291a:;
						{
							_36421_elem=_1b305eac2_Arr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b67b2486:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4dc8b_ArrTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1b301e5ba_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1b67b1a4b:;
	};
	return false;;
}

inline jule::Bool _1b67aebe2_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b67b5115:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1b67b5eb2:;
						{
							_36421_elem=_1b305ed36_Slc((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b67b5995:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4d032_SlcTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1b301e5ba_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1b67b505a:;
	};
	return false;;
}

inline jule::Bool _1b67b1e69_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b67b86e0:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1b67b9603:;
						{
							_36421_elem=_1b305e385_Ptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b67b9070:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4d609_PtrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1b301e5ba_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1b67b8635:;
	};
	return false;;
}

inline jule::Bool _1b67b7436_annotateConstraintElem(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b67bb869:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1b67bc804:;
						{
							_36421_elem=_1b305e121_Sptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b67bc1e9:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4cb36_SptrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1b301e5ba_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1b67bb7ae:;
	};
	return false;;
}



inline jule::Bool _1b301d850_annotateConstraintMap(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b67a0452:;
			{
				jule::Ptr<_1b3067019_Map> _38421_m = _1b30607d7_Map((*(_38145_k)).ptr());;
				jule::Ptr<_1b2e4e4d9_MapTypeDecl> _38521_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4e4d9_MapTypeDecl>(&__jule_any_type80);;
				(*(_self_))._field_c=_38521_m2.get()._field_Key;
				if ((!(_1b301e5ba_annotateConstraint(_self_, &(_38421_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _1b301e5ba_annotateConstraint(_self_, &(_38421_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b67a03ca:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b301db5d_annotateConstraintTup(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b67a2b5d:;
			{
				jule::Ptr<_1b2e4d31d_TupleTypeDecl> _39921_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4d31d_TupleTypeDecl>(&__jule_any_type81);;
				jule::Ptr<_1b30664e1_Tuple> _40021_tup2 = _1b3060a4b_Tup((*(_39645_k)).ptr());;
				{
					auto expr = &(_40021_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b67a4005:;
					if (it != expr_end) {
						jule::Ptr<_1b305ba25_TypeKind> _40125_t2 = *it;
						{
							{
								auto expr = &(_39921_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b67a47b9:;
								if (it != expr_end) {
									jule::Ptr<_1b2e4b77d_TypeDecl> _40229_t = *it;
									{
										(*(_self_))._field_c=_40229_t;
										if (_1b301e5ba_annotateConstraint(_self_, &(_40125_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b67a47b9:;
									++it;
									goto _iter_begin_1b67a47b9;
								}
								_iter_end_1b67a47b9:;
							};
						}
						_iter_next_1b67a4005:;
						++it;
						goto _iter_begin_1b67a4005;
					}
					_iter_end_1b67a4005:;
				};
			}
		}
		_match_end_1b67a2b08:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b301de6b_annotateConstraintFn(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b67a44cd:;
			{
				jule::Ptr<_1b2e5d20c_FnDecl> _41621_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e5d20c_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1b2e71132_FnIns> _41721_f = _1b306009a_Fn((*(_41344_k)).ptr());;
				{
					auto expr = &(_41721_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b67a690e:;
					if (it != expr_end) {
						jule::I32 _41818_i = it - expr->begin();
						jule::Ptr<_1b2e70263_ParamIns> _41825_fp = *it;
						{
							(*(_self_))._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_1b301e5ba_annotateConstraint(_self_, &(_41825_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b67a690e:;
						++it;
						_41818_i++;
						goto _iter_begin_1b67a690e;
					}
					_iter_end_1b67a690e:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_1b301e5ba_annotateConstraint(_self_, &(_41721_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b67a2e9e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b301e29b_annotateConstraintIdent(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _43447_k) {
	jule::Ptr<_1b2e4bd44_IdentTypeDecl> _43517_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b2e4bd44_IdentTypeDecl>(&__jule_any_type19);;
	jule::Ptr<_1b2e687bc_StructIns> _43617_s = _1b306030e_Struct((*(_43447_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67a937e:;
		if (it != expr_end) {
			jule::I32 _43713_i = it - expr->begin();
			jule::Ptr<_1b2e58a76_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_1b305a2e8_InsGeneric> _43925_fg = (*(_self_))._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_1b301e8d9_pushGeneric(_self_, _43447_k, _43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_1b67a937e;
				};
				jule::Ptr<_1b2e4b77d_TypeDecl> _44921_c = (*(_self_))._field_c;;
				{
					auto expr = &(_43517_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b67ab67d:;
					if (it != expr_end) {
						jule::Ptr<_1b2e4b77d_TypeDecl> _45025_ig = *it;
						{
							(*(_self_))._field_c=_45025_ig;
							{
								auto expr = &(_43617_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b67acbe0:;
								if (it != expr_end) {
									jule::Ptr<_1b305a2e8_InsGeneric> _45229_sg = *it;
									{
										if (_1b301e5ba_annotateConstraint(_self_, &(_45229_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b67acbe0:;
									++it;
									goto _iter_begin_1b67acbe0;
								}
								_iter_end_1b67acbe0:;
							};
						}
						_iter_next_1b67ab67d:;
						++it;
						goto _iter_begin_1b67ab67d;
					}
					_iter_end_1b67ab67d:;
				};
				(*(_self_))._field_c=_44921_c;
			}
			_iter_next_1b67a937e:;
			++it;
			_43713_i++;
			goto _iter_begin_1b67a937e;
		}
		_iter_end_1b67a937e:;
	};
	return false;;
}



inline jule::Bool _1b301e5ba_annotateConstraint(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _46342_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b67ad075:;
			{
				return _1b301e29b_annotateConstraintIdent(_self_, _46342_k);;
			}
		}
		_match_end_1b67ac7d3:;
	};
	{
		
		if ((_1b305eac2_Arr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67aa2e7:;
			{
				return _1b67b04ea_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1b305ed36_Slc((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67ae582:;
			{
				return _1b67aebe2_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1b305e385_Ptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67ae5e8:;
			{
				return _1b67b1e69_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1b305e121_Sptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67ae6e7:;
			{
				return _1b67b7436_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1b30607d7_Map((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67ae75d:;
			{
				return _1b301d850_annotateConstraintMap(_self_, _46342_k);;
			}
		}
		else if ((_1b306009a_Fn((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67adbad:;
			{
				return _1b301de6b_annotateConstraintFn(_self_, _46342_k);;
			}
		}
		else if ((_1b3060a4b_Tup((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1b67adc24:;
			{
				return _1b301db5d_annotateConstraintTup(_self_, _46342_k);;
			}
		}
		else {
			_case_begin_1b67ae4b6:;
			{
				return false;;
			}
		}
		_match_end_1b67ae461:;
	};
}



inline void _1b301e8d9_pushGeneric(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _48835_k, jule::I32 _48849_i) {
	(*(_self_))._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_1b305a2e8_InsGeneric>(_1b305a2e8_InsGeneric{._field_Kind=(*(_48835_k)), });
	jule::Ptr<_1b2e58a76_GenericDecl> _49017_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67c01ca:;
		if (it != expr_end) {
			jule::Ptr<_1b305ba25_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _1b305be21_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=(*(_48835_k)).get()._field_Kind;
				};
			}
			_iter_next_1b67c01ca:;
			++it;
			goto _iter_begin_1b67c01ca;
		}
		_iter_end_1b67c01ca:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1b301e5ba_annotateConstraint(_self_, _48835_k);
}



inline jule::Bool _1b301ebe7_annotatePrim(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b3021a1d_annotateAny(_self_, _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _1b3020005_annotateArr(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b3067b0d_Arr> _50817_parr = _1b305eac2_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b3067b0d_Arr> _51217_arr = _1b305eac2_Arr((*(_50742_k)).ptr());;
	(*(_self_))._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _1b3021d2b_annotateKind(_self_, &(_51217_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b3020313_annotateSlc(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b3065963_Slc> _51817_pslc = _1b305ed36_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b3065963_Slc> _52217_slc = _1b305ed36_Slc((*(_51742_k)).ptr());;
	(*(_self_))._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _1b3021d2b_annotateKind(_self_, &(_52217_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b30206ba_checkMapKey(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _52741_k, jule::Ptr<_1b305ba25_TypeKind>* _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b305ba25_TypeKind>* _52817_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52741_k;
	__jule_func_result=_1b3021d2b_annotateKind(_self_, _52761_ck);
	(*(_self_))._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b30209c8_annotateMap(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b3067019_Map> _53617_pmap = _1b30607d7_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b3067019_Map> _54017_m = _1b30607d7_Map((*(_53542_k)).ptr());;
	__jule_func_result = (_1b30206ba_checkMapKey(_self_, (&(_53617_pmap.get()._field_Key)), &(_54017_m.get()._field_Key)) && _1b30206ba_checkMapKey(_self_, (&(_53617_pmap.get()._field_Val)), &(_54017_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1b3020cd6_annotateFn(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2e71132_FnIns> _54617_pf = _1b306009a_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2e71132_FnIns> _55017_f = _1b306009a_Fn((*(_54541_k)).ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_1b67cb2c4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1b2e1e102_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _1b2e1e102_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_1b67cb34b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b67cb24c:;
	};
	__jule_func_result=true;
	jule::Ptr<_1b305ba25_TypeKind>* _55917_old = (*(_self_))._field_k;;
	{
		auto expr = &(_55017_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67ccabc:;
		if (it != expr_end) {
			jule::I32 _56014_i = it - expr->begin();
			jule::Ptr<_1b2e70263_ParamIns> _56021_fp = *it;
			{
				(*(_self_))._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_1b3021d2b_annotateKind(_self_, &(_56021_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b67ccabc:;
			++it;
			_56014_i++;
			goto _iter_begin_1b67ccabc;
		}
		_iter_end_1b67ccabc:;
	};
	if ((!(_1b2e1e102_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_1b3021d2b_annotateKind(_self_, &(_55017_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b30210e4_annotatePtr(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b306856a_Ptr> _57517_pptr = _1b305e385_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b306856a_Ptr> _57917_ptr = _1b305e385_Ptr((*(_57442_k)).ptr());;
	(*(_self_))._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _1b3021d2b_annotateKind(_self_, &(_57917_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b3021402_annotateSptr(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b3065006_Sptr> _58517_ssptr = _1b305e121_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b3065006_Sptr> _58917_sptr = _1b305e121_Sptr((*(_58443_k)).ptr());;
	(*(_self_))._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _1b3021d2b_annotateKind(_self_, &(_58917_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b3021710_annotateStruct(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2e687bc_StructIns> _59517_s = _1b306030e_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _59917_s2 = _1b306030e_Struct((*(_59445_k)).ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_59517_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67d5465:;
		if (it != expr_end) {
			jule::I32 _60314_i = it - expr->begin();
			jule::Ptr<_1b305a2e8_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_1b305a2e8_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_1b305c22e_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_1b67d5465;
				};
				(*(_self_))._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_1b3021d2b_annotateKind(_self_, &(_60421_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b67d5465:;
			++it;
			_60314_i++;
			goto _iter_begin_1b67d5465;
		}
		_iter_end_1b67d5465:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b3021a1d_annotateAny(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _1b305be21_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67d84ac:;
		if (it != expr_end) {
			jule::I32 _61813_i = it - expr->begin();
			jule::Ptr<_1b2e58a76_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_1b67d84ac;
				};
				jule::Ptr<_1b305a2e8_InsGeneric> _62217_t = (*(_self_))._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_1b67d9e92:;
						{
							_1b301e8d9_pushGeneric(_self_, _61642_k, _61813_i);
						}
					}
					else if ((!(_1b305c22e_Equal(_62217_t.get()._field_Kind, (*(_61642_k)))))) {
						_case_begin_1b67da008:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b67d9d4e:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_61642_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b67d84ac:;
			++it;
			_61813_i++;
			goto _iter_begin_1b67d84ac;
		}
		_iter_end_1b67d84ac:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b3021d2b_annotateKind(_1b301ce6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1b305ba25_TypeKind>* _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1b3021a1d_annotateAny(_self_, _63743_k)) {
			_case_begin_1b67dc4a0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b305ddac_Prim((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc516:;
			{
				__jule_func_result = _1b301ebe7_annotatePrim(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b305eac2_Arr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc57c:;
			{
				__jule_func_result = _1b3020005_annotateArr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b305ed36_Slc((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc5e3:;
			{
				__jule_func_result = _1b3020313_annotateSlc(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b30607d7_Map((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc868:;
			{
				__jule_func_result = _1b30209c8_annotateMap(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b306009a_Fn((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc8ce:;
			{
				__jule_func_result = _1b3020cd6_annotateFn(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b305e385_Ptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc945:;
			{
				__jule_func_result = _1b30210e4_annotatePtr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b305e121_Sptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dc9ab:;
			{
				__jule_func_result = _1b3021402_annotateSptr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b306030e_Struct((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1b67dcc0e:;
			{
				__jule_func_result = _1b3021710_annotateStruct(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b67dc439:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b67dc3d4:;
	};
}



inline jule::Bool _1b3022090_annotate(_1b301ce6a_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1b3021d2b_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b301ce6a_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b3022d82_pushErrToken(_1b3022832_fnCallArgChecker* _self_, jule::Ptr<_1cb188a5c_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_1b2eb7563_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _68231_token, _68246_fmt, _68259_args);
}



inline void _1b30231a1_pushErr(_1b3022832_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_1b3022d82_pushErrToken(_self_, (*(_self_))._field_errorToken, _68626_fmt, _68639_args);
}



inline jule::Slice<jule::Ptr<_1b2e70263_ParamIns>> _1b3023415_getParams(_1b3022832_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1b2e2cc8c_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1b3023723_checkCounts(_1b3022832_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>* _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _70017_n = (*(_69931_params)).len();;
	if (((_70017_n > 0LL) && _1b2e2cc8c_IsSelf((*(_69931_params))[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I32 _70517_diff = (_70017_n - (*(_self_))._field_args.len());;
	jule::Str _70617_log = jule::Str();;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_1b67e8599:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && (*(_69931_params))[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1b67e8d6e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > (*(_69931_params)).len()))) {
			_case_begin_1b67e8995:;
			{
				_70617_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1b67e892e:;
			{
				_70617_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1b67e88b8:;
	};
	jule::Str _71717_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_71717_err).append("\n       wanted (", 16);
	{
		auto expr = _69931_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67e6ad6:;
		if (it != expr_end) {
			jule::I32 _71913_i = it - expr->begin();
			jule::Ptr<_1b2e70263_ParamIns> *_71916_p = it;
			{
				_71717_err+=_1b305be21_Str((*(_71916_p)).get()._field_Kind.ptr());
				if ((((*(_69931_params)).len() - _71913_i) > 1LL)) {
					(_71717_err).append(", ", 2);
				};
			}
			_iter_next_1b67e6ad6:;
			++it;
			_71913_i++;
			goto _iter_begin_1b67e6ad6;
		}
		_iter_end_1b67e6ad6:;
	};
	(_71717_err).append(")", 1);
	_1b30231a1_pushErr(_self_, _70617_log, jule::Slice<jule::Any>::make({jule::Any(_71717_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b3023b74_checkArg(_1b3022832_fnCallArgChecker* _self_, jule::Ptr<_1b2e70263_ParamIns>* _73032_p, jule::Ptr<_1b3030a93_Data>* _73051_arg, jule::Ptr<_1cb188a5c_Token>* _73068_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1b2e73244_parameterUsesGenerics(_73032_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_73032_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1b301ce6a_dynamicTypeAnnotation _73425_dta = _1b301ce6a_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_73032_p)), ._field_a=(*(_73051_arg)), ._field_errorToken=(*(_73068_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1b3022090_annotate(&_73425_dta);
		};
		if ((!(__jule_func_result))) {
			_1b3022d82_pushErrToken(_self_, (*(_73068_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1b2ec71bb_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_73032_p)).get()._field_Decl.get()._field_Mutable, (*(_73032_p)).get()._field_Decl.get()._field_Reference, &((*(_73032_p)).get()._field_Kind), _73051_arg, _73068_errorToken)) {
		_1b2ebe449_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_73032_p)).get()._field_Decl.get()._field_Reference, &((*(_73032_p)).get()._field_Kind), _73051_arg, (*(_73068_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b302402b_push(_1b3022832_fnCallArgChecker* _self_, jule::Ptr<_1b2e70263_ParamIns>* _75828_p, jule::Ptr<_1b2e50c9e_Expr> _75846_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b305ba25_TypeKind> _75917_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _76013_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_75828_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_75828_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_75828_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1b3030a93_Data> _76817_d = _1b304c917_evalExprKind((*(_self_))._field_e, _75846_arg.get()._field_Kind);;
	(*(_self_))._field_e.get()._field_prefix=_75917_old;
	(*(_self_))._field_e.get()._field_immutable=_76013_oldImmut;
	if ((_76817_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b3023b74_checkArg(_self_, _75828_p, &(_76817_d), &(_75846_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_76817_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1b30243d3_pushVariadic(_1b3022832_fnCallArgChecker* _self_, jule::Ptr<_1b2e70263_ParamIns>* _78236_p, jule::I32 _78254_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78417_variadiced = false;;
	jule::Bool _78513_more = ((_78254_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1b2e69d51_SliceExprModel> _78617_model = jule::new_ptr<_1b2e69d51_SliceExprModel>(_1b2e69d51_SliceExprModel{._field_ElemKind=(*(_78236_p)).get()._field_Kind, });;
	jule::Ptr<_1b305ba25_TypeKind> _79017_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _79513_variadic = (*(_78236_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_78236_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_78236_p)).get()._field_Kind.get()._field_Variadic=_79513_variadic;
	});;
	for (; (_78254_i < (*(_self_))._field_args.len()); (_78254_i)++) {
		{
			jule::Ptr<_1b2e50c9e_Expr> _80221_arg = (*(_self_))._field_args[_78254_i];;
			{
				auto &_match_expr{ _80221_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_1b6809258:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065963_Slc>(_1b3065963_Slc{._field_Elem=(*(_78236_p)).get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1b6809a3e:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_78236_p)).get()._field_Kind;
					}
				}
				_match_end_1b68099d9:;
			};
			jule::Ptr<_1b3030a93_Data> _81521_d = _1b304cc25_eval((*(_self_))._field_e, _80221_arg);;
			if ((_81521_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b68086b9;
			};
			if (_81521_d.get()._field_Kind.get()._field_Variadic) {
				_78417_variadiced=true;
				(*(_78236_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1b3023b74_checkArg(_self_, _78236_p, &(_81521_d), &(_80221_arg.get()._field_Token)));
				{
					auto &_match_expr{ _81521_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1b680bbea:;
						{
							_78617_model=_81521_d.get()._field_Model.cast_ptr<_1b2e69d51_SliceExprModel>(&__jule_any_type83);
							_78617_model.get()._field_ElemKind=(*(_78236_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1b680c976:;
						{
							_78617_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_81521_d.get()._field_Model);;
						}
					}
					_match_end_1b680ca64:;
				};
				(_78254_i)++;
				goto _iter_end_1b68086b9;
			};
			__jule_func_result=(__jule_func_result && _1b3023b74_checkArg(_self_, _78236_p, &(_81521_d), &(_80221_arg.get()._field_Token)));
			_78617_model.get()._field_Elems = jule::alloc_for_append(_78617_model.get()._field_Elems,1);_78617_model.get()._field_Elems.__push(_81521_d.get()._field_Model);;
		}
	_iter_next_1b68086b9:;
	}
	_iter_end_1b68086b9:;;
	(*(_self_))._field_e.get()._field_prefix=_79017_old;
	if ((_78417_variadiced && _78513_more)) {
		_1b3022d82_pushErrToken(_self_, (*(_self_))._field_args[_78254_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78617_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_78617_model, &__jule_any_type83));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b30246e1_checkArgs(_1b3022832_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>* _85833_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85913_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I32 _86317_i = 0LL;;
	if ((((*(_85833_params)).len() > 0LL) && _1b2e2cc8c_IsSelf((*(_85833_params))[0LL].get()._field_Decl.ptr()))) {
		(_86317_i)++;
	};
	_julec_label_iter:;
	while ((_86317_i < (*(_85833_params)).len())) {
		{
			jule::Ptr<_1b2e70263_ParamIns> _87021_p = (*(_85833_params))[_86317_i];;
			{
				
				if (_87021_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1b6813d12:;
					{
						__jule_func_result=(_1b30243d3_pushVariadic(_self_, &(_87021_p), _86317_i) && __jule_func_result);
						goto _iter_end_1b68123b5;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86317_i)) {
					_case_begin_1b681353c:;
					{
						__jule_func_result=false;
						goto _iter_end_1b68123b5;
					}
				}
				else {
					_case_begin_1b681396b:;
					{
						__jule_func_result=(_1b302402b_push(_self_, &(_87021_p), (*(_self_))._field_args[_86317_i]) && __jule_func_result);
					}
				}
				_match_end_1b6813905:;
			};
			(_86317_i)++;
		}
	_iter_next_1b68123b5:;
	}
	_iter_end_1b68123b5:;;
	(*(_self_))._field_e.get()._field_arg=_85913_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b3024977_checkDynamicTypeAnnotation(_1b3022832_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6815c8c:;
		if (it != expr_end) {
			jule::Ptr<_1b305a2e8_InsGeneric> _89016_g = *it;
			{
				if ((_89016_g == nullptr)) {
					_1b30231a1_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6815c8c:;
			++it;
			goto _iter_begin_1b6815c8c;
		}
		_iter_end_1b6815c8c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b3024bec_check(_1b3022832_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1b2e70263_ParamIns>> _90017_params = _1b3023415_getParams(_self_);;
	__jule_func_result=_1b3023723_checkCounts(_self_, &(_90017_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b30246e1_checkArgs(_self_, &(_90017_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1b3024977_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3022832_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b3025747_pushErr(_1b302523b_structLitChecker* _self_, jule::Ptr<_1cb188a5c_Token> _92126_token, jule::Str _92141_fmt, jule::Slice<jule::Any> _92154_args) {
	_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), _92126_token, _92141_fmt, _92154_args);
}



inline void _1b3025a66_pushSugggestion(_1b302523b_structLitChecker* _self_, jule::Str _92634_fmt, jule::Slice<jule::Any> _92647_args) {
	_1b3032e3b_pushSugggestion((*(_self_))._field_e.ptr(), _92634_fmt, _92647_args);
}



inline void _1b3025e2e_pushMatch(_1b302523b_structLitChecker* _self_, jule::Ptr<_1b2e685d0_FieldIns>* _93033_f, jule::Ptr<_1b3030a93_Data>* _93052_d, jule::Ptr<_1cb188a5c_Token>* _93067_errorToken) {
	;
	if (_1b2ec71bb_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_93033_f)).get()._field_Kind), _93052_d, _93067_errorToken)) {
		_1b2ebe449_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_93033_f)).get()._field_Kind), _93052_d, (*(_93067_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_1b2e693b1_StructArgExprModel>(_1b2e693b1_StructArgExprModel{._field_Field=(*(_93033_f)), ._field_Expr=(*(_93052_d)).get()._field_Model}));;
}



inline void _1b302624d_checkPair(_1b302523b_structLitChecker* _self_, jule::Ptr<_1b2e55710_FieldExprPair>* _94333_pair, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>* _94360_exprs) {
	jule::Ptr<_1b2e685d0_FieldIns> _94517_f = _1b2e253e4_FindField((*(_self_))._field_s.ptr(), (*(_94333_pair)).get()._field_Field.get()._field_Kind);;
	if ((_94517_f == nullptr)) {
		_1b3025747_pushErr(_self_, (*(_94333_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_94333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _94517_f.get()._field_Decl.get()._field_Public, _94517_f.get()._field_Decl.get()._field_Token)))) {
		_1b3025747_pushErr(_self_, (*(_94333_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_94333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1b3025a66_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _94360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b682047d:;
		if (it != expr_end) {
			jule::Ptr<_1b2e50c9e_Expr> _95721_expr = *it;
			{
				{
					auto &_match_expr{ _95721_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b6820cec:;
						{
							jule::Ptr<_1b2e55710_FieldExprPair> _96025_dpair = _95721_expr.get()._field_Kind.cast_ptr<_1b2e55710_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_94333_pair)) == _96025_dpair)) {
									_case_begin_1b6821c98:;
									{
										goto _iter_end_1b682047d;
									}
								}
								else if (((*(_94333_pair)).get()._field_Field.get()._field_Kind == _96025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1b6821d20:;
									{
										_1b3025747_pushErr(_self_, (*(_94333_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_94333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1b682047d;
									}
								}
								_match_end_1b6821bdd:;
							};
						}
					}
					_match_end_1b6820b43:;
				};
			}
			_iter_next_1b682047d:;
			++it;
			goto _iter_begin_1b682047d;
		}
		_iter_end_1b682047d:;
	};
	jule::Ptr<_1b305ba25_TypeKind> _97117_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_97117_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_94517_f.get()._field_Kind;
	jule::Ptr<_1b3030a93_Data> _97517_d = _1b304c917_evalExprKind((*(_self_))._field_e, (*(_94333_pair)).get()._field_Expr.get()._field_Kind);;
	if ((_97517_d == nullptr)) {
		return;;
	};
	_1b3025e2e_pushMatch(_self_, &(_94517_f), &(_97517_d), &((*(_94333_pair)).get()._field_Field));
}



inline jule::Bool _1b302655b_readyExprs(_1b302523b_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>* _98234_exprs) {
	jule::Bool _98317_ok = true;;
	{
		auto expr = _98234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b682552c:;
		if (it != expr_end) {
			jule::I32 _98414_i = it - expr->begin();
			jule::Ptr<_1b2e50c9e_Expr> _98421_expr = *it;
			{
				{
					auto &_match_expr{ _98421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1b6826275:;
						{
							jule::Ptr<_1b2e56ba6_KeyValPair> _98725_pair = _98421_expr.get()._field_Kind.cast_ptr<_1b2e56ba6_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _98725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_1b6827cd2:;
									{
										goto _match_end_1b6827045;
									}
								}
								else {
									_case_begin_1b68272ba:;
									{
										_1b3025747_pushErr(_self_, _98725_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_98317_ok=false;
										goto _iter_next_1b682552c;
									}
								}
								_match_end_1b6827045:;
							};
							(*(_98234_exprs))[_98414_i].get()._field_Kind=jule::Any(jule::new_ptr<_1b2e55710_FieldExprPair>(_1b2e55710_FieldExprPair{._field_Field=_98725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98725_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_1b68260bb:;
				};
			}
			_iter_next_1b682552c:;
			++it;
			_98414_i++;
			goto _iter_begin_1b682552c;
		}
		_iter_end_1b682552c:;
	};
	return _98317_ok;;
}



inline void _1b30267d1_check(_1b302523b_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>* _100629_exprs) {
	if (((*(_100629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1b302655b_readyExprs(_self_, _100629_exprs)))) {
		return;;
	};
	jule::Bool _101317_paired = false;;
	{
		auto expr = _100629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6826011:;
		if (it != expr_end) {
			jule::I32 _101414_i = it - expr->begin();
			jule::Ptr<_1b2e50c9e_Expr> _101421_expr = *it;
			{
				{
					auto &_match_expr{ _101421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b682e998:;
						{
							jule::Ptr<_1b2e55710_FieldExprPair> _101725_pair = _101421_expr.get()._field_Kind.cast_ptr<_1b2e55710_FieldExprPair>(&__jule_any_type84);;
							if (((_101414_i > 0LL) && (!(_101317_paired)))) {
								_1b3025747_pushErr(_self_, _101725_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_101317_paired=true;
							_1b302624d_checkPair(_self_, &(_101725_pair), _100629_exprs);
						}
					}
					else {
						_case_begin_1b682a312:;
						{
							if (_101317_paired) {
								_1b3025747_pushErr(_self_, _101421_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_101414_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1b3025747_pushErr(_self_, _101421_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1b6826011;
							};
							jule::Ptr<_1b2e685d0_FieldIns> _103225_field = (*(_self_))._field_s.get()._field_Fields[_101414_i];;
							if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _103225_field.get()._field_Decl.get()._field_Public, _103225_field.get()._field_Decl.get()._field_Token)))) {
								_1b3025747_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1b3025a66_pushSugggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1b305ba25_TypeKind> _104025_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_104025_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_103225_field.get()._field_Kind;
							jule::Ptr<_1b3030a93_Data> _104425_d = _1b304c917_evalExprKind((*(_self_))._field_e, _101421_expr.get()._field_Kind);;
							if ((_104425_d == nullptr)) {
								goto _iter_next_1b6826011;
							};
							_1b3025e2e_pushMatch(_self_, &(_103225_field), &(_104425_d), &(_101421_expr.get()._field_Token));
						}
					}
					_match_end_1b682a18b:;
				};
			}
			_iter_next_1b6826011:;
			++it;
			_101414_i++;
			goto _iter_begin_1b6826011;
		}
		_iter_end_1b6826011:;
	};
	if ((!(_101317_paired))) {
		jule::I32 _105517_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I32 _105621_diff = (_105517_n - (*(_100629_exprs)).len());;
		{
			
			if ((_105621_diff <= 0LL)) {
				_case_begin_1b6832858:;
				{
					return;;
				}
			}
			_match_end_1b6832737:;
		};
		jule::Str _106221_idents = jule::Str();;
		for (; (_105621_diff > 0LL); (_105621_diff)--) {
			{
				_106221_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_105517_n - _105621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1b683324e:;
		}
		_iter_end_1b683324e:;;
		(_106221_idents).mut_slice(2LL);;
		_1b3025747_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_106221_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b302523b_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2ed8034_Var> _1b30272b5_buildVar(_1b3026d20_rangeChecker* _self_, jule::Ptr<_1b2e5e1db_VarDecl>* _108128_decl) {
	jule::Ptr<_1b2ed8034_Var> _108217_v = _1b2e78cc7_buildVar((*(_108128_decl)));;
	return _108217_v;;
}



inline void _1b3027491_setSizeKey(_1b3026d20_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1cb18b301_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1b30272b5_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b6836c14:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1b2ed6ede_IterRelation>(_1b2ed6ede_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1b6836bae:;
	};
}



inline void _1b3027859_checkRangeExprValidity(_1b3026d20_rangeChecker* _self_, jule::Ptr<_1b3030a93_Data>* _111246_d, jule::Ptr<_1b2ed8034_Var>* _111257_key, jule::Ptr<_1b305ba25_TypeKind>* _111273_k) {
	jule::Bool _111317__mut = (*(_111257_key)).get()._field_Mutable;;
	if ((_111317__mut && (!(_1b305d197_Mutable((*(_111273_k)).ptr()))))) {
		_111317__mut=false;
	};
	_1b2ec71bb_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _111317__mut, (*(_111257_key)).get()._field_Reference, &((*(_111257_key)).get()._field_Kind.get()._field_Kind), _111246_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1b3027a35_checkSlice(_1b3026d20_rangeChecker* _self_) {
	_1b3027491_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1cb18b301_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b3065963_Slc> _113117_slc = _1b305ed36_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1b30272b5_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_113117_slc.get()._field_Elem});
	_1b3027859_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_113117_slc.get()._field_Elem));
}



inline void _1b3027c11_checkArray(_1b3026d20_rangeChecker* _self_) {
	_1b3027491_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1cb18b301_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b3067b0d_Arr> _114417_arr = _1b305eac2_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1b30272b5_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_114417_arr.get()._field_Elem});
	_1b3027859_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_114417_arr.get()._field_Elem));
}



inline void _1b3027ddc_checkMapKeyA(_1b3026d20_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1cb18b301_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b3067019_Map> _115617_m = _1b30607d7_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1b30272b5_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_115617_m.get()._field_Key});
	jule::Ptr<_1b3030a93_Data> _116017_d = jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d)));;
	_116017_d.get()._field_Kind=_115617_m.get()._field_Key;
	_1b3027859_checkRangeExprValidity(_self_, &(_116017_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_115617_m.get()._field_Key));
}



inline void _1b30280b8_checkMapKeyB(_1b3026d20_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1cb18b301_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b3067019_Map> _117117_m = _1b30607d7_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1b30272b5_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_117117_m.get()._field_Val});
	jule::Ptr<_1b3030a93_Data> _117517_d = jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d)));;
	_117517_d.get()._field_Kind=_117117_m.get()._field_Val;
	_1b3027859_checkRangeExprValidity(_self_, &(_117517_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_117117_m.get()._field_Val));
}



inline void _1b3028294_checkMap(_1b3026d20_rangeChecker* _self_) {
	_1b3027ddc_checkMapKeyA(_self_);
	_1b30280b8_checkMapKeyB(_self_);
}



inline void _1b3028470_checkStr(_1b3026d20_rangeChecker* _self_) {
	_1b3027491_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1cb18b301_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1b30272b5_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1b30286d4_check(_1b3026d20_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b684994c:;
		}
		else if ((_1b305ed36_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6849342:;
			{
				_1b3027a35_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1b305eac2_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b68493a8:;
			{
				_1b3027c11_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1b30607d7_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b684941e:;
			{
				_1b3028294_checkMap(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b68492cb:;
			{
				jule::Ptr<_1b3061772_Prim> _121317_prim = _1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_121317_prim != nullptr) && _1b30649a6_IsStr(_121317_prim.ptr()))) {
					_1b3028470_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b6849210:;
	};
	_1b2eb7563_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3026d20_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1b3029350_prepareTypes(_1b3028daa_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1b2e72254_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1b30295c5_prepareExprs(_1b3028daa_retTypeChecker* _self_, jule::Ptr<_1b2e50c9e_Expr>* _124136_e) {
	if (((*(_124136_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_124136_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b684e974:;
			{
				(*(_self_))._field_exprs=(*(_124136_e)).get()._field_Kind.cast_ptr<_1b2e5192b_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_1b684eb72:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_124136_e)));;
			}
		}
		_match_end_1b684e7a9:;
	};
}



inline void _1b30297a1_checkExprs(_1b3028daa_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b3030a93_Data>> _125717_datas = jule::Slice<jule::Ptr<_1b3030a93_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6851613:;
		if (it != expr_end) {
			jule::I32 _125814_i = it - expr->begin();
			jule::Ptr<_1b2e50c9e_Expr> _125821_expr = *it;
			{
				if ((_125814_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b6851613;
				};
				jule::Ptr<_1b305ba25_TypeKind> _126321_t = (*(_self_))._field_types[_125814_i];;
				jule::Ptr<_1b3030a93_Data> _126521_d = _1b304d033_evalExpr(_1b2ebdb41_evalp((*(_self_))._field_sc.get()._field_s, jule::Trait<_1b3077997_Lookup>((*(_self_))._field_sc, 0), _126321_t), _125821_expr);;
				if ((_126521_d == nullptr)) {
					goto _iter_next_1b6851613;
				};
				_125717_datas = jule::alloc_for_append(_125717_datas,1);_125717_datas.__push(_126521_d);;
				if (((!(_126521_d.get()._field_Mutable)) && _1b305d197_Mutable(_126521_d.get()._field_Kind.ptr()))) {
					_1b2eb7563_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1b301b485_assignTypeChecker _127721_ac = _1b301b485_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_126321_t, ._field_d=_126521_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1b301c60c_check(&_127721_ac);
			}
			_iter_next_1b6851613:;
			++it;
			_125814_i++;
			goto _iter_begin_1b6851613;
		}
		_iter_end_1b6851613:;
	};
	if ((_125717_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1b2e6b88b_TupleExprModel>(_1b2e6b88b_TupleExprModel{._field_Datas=_125717_datas}), &__jule_any_type88);
	} else if ((_125717_datas.len() == 1LL)) {
		(*(_self_))._field_model=_125717_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1b3029aae_check(_1b3028daa_retTypeChecker* _self_, jule::Ptr<_1b2e50c9e_Expr>* _129629_e) {
	_1b3029350_prepareTypes(_self_);
	_1b30295c5_prepareExprs(_self_, _129629_e);
	jule::I32 _130013_n = (*(_self_))._field_exprs.len();;
	if (((_130013_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1b2e41531_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1b2eb7563_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_130013_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1b2e1e102_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1b2eb7563_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_130013_n > (*(_self_))._field_types.len())) {
		_1b2eb7563_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_130013_n < (*(_self_))._field_types.len())) {
		_1b2eb7563_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1b30297a1_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3028daa_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b302b286_FindPackage(_1b302ac69_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b685c850:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1b685c850:;
			++it;
			goto _iter_begin_1b685c850;
		}
		_iter_end_1b685c850:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b302b594_SelectPackage(_1b302ac69_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b685d8c8:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1b685d8c8:;
			++it;
			goto _iter_begin_1b685d8c8;
		}
		_iter_end_1b685d8c8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2ed8034_Var> _1b302b94b_FindVar(_1b302ac69_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1b302d50d_findVar(_self_, _5226_ident, _5238_cppLinked, false);;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b302bd03_FindTypeAlias(_1b302ac69_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1b302d95e_findTypeAlias(_self_, _5832_ident, _5844_cppLinked, false);;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b302c1aa_FindStruct(_1b302ac69_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6861106:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1b6861106:;
			++it;
			goto _iter_begin_1b6861106;
		}
		_iter_end_1b6861106:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b302c562_FindFn(_1b302ac69_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6862503:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1b6862503:;
			++it;
			goto _iter_begin_1b6862503;
		}
		_iter_end_1b6862503:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b302c870_FindTrait(_1b302ac69_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68636be:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1b68636be:;
			++it;
			goto _iter_begin_1b68636be;
		}
		_iter_end_1b68636be:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e82484_Enum> _1b302cb7d_FindEnum(_1b302ac69_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b686459e:;
		if (it != expr_end) {
			jule::Ptr<_1b2e82484_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1b686459e:;
			++it;
			goto _iter_begin_1b686459e;
		}
		_iter_end_1b686459e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b302ce8b_FindTypeEnum(_1b302ac69_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b686547e:;
		if (it != expr_end) {
			jule::Ptr<_1b2e83a7e_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1b686547e:;
			++it;
			goto _iter_begin_1b686547e;
		}
		_iter_end_1b686547e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2ed8034_Var> _1b302d50d_findVar(_1b302ac69_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I32 _12121_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1b2ed8034_Var> _12325_v = (*(_self_))._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1b686744d:;
		}
		_iter_end_1b686744d:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6866eb9:;
			if (it != expr_end) {
				jule::Ptr<_1b2ed8034_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1b6866eb9:;
				++it;
				goto _iter_begin_1b6866eb9;
			}
			_iter_end_1b6866eb9:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b302d95e_findTypeAlias(_1b302ac69_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I32 _14021_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1b305ad32_TypeAlias> _14225_ta = (*(_self_))._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1b686a572:;
		}
		_iter_end_1b686a572:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b686a0dd:;
			if (it != expr_end) {
				jule::Ptr<_1b305ad32_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1b686a0dd:;
				++it;
				goto _iter_begin_1b686a0dd;
			}
			_iter_end_1b686a0dd:;
		};
	};
	return nullptr;;
}



inline jule::Any _1b302dd16_defByIdent(_1b302ac69_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b686c82c:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b686c82c:;
			++it;
			goto _iter_begin_1b686c82c;
		}
		_iter_end_1b686c82c:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b686bd8c:;
		if (it != expr_end) {
			jule::Ptr<_1b305ad32_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1b686bd8c:;
			++it;
			goto _iter_begin_1b686bd8c;
		}
		_iter_end_1b686bd8c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b686d6c9:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type66);;
				};
			}
			_iter_next_1b686d6c9:;
			++it;
			goto _iter_begin_1b686d6c9;
		}
		_iter_end_1b686d6c9:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b686edb2:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type65);;
				};
			}
			_iter_next_1b686edb2:;
			++it;
			goto _iter_begin_1b686edb2;
		}
		_iter_end_1b686edb2:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6871325:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b6871325:;
			++it;
			goto _iter_begin_1b6871325;
		}
		_iter_end_1b6871325:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68720a1:;
		if (it != expr_end) {
			jule::Ptr<_1b2e82484_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type68);;
				};
			}
			_iter_next_1b68720a1:;
			++it;
			goto _iter_begin_1b68720a1;
		}
		_iter_end_1b68720a1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6872953:;
		if (it != expr_end) {
			jule::Ptr<_1b2e83a7e_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type69);;
				};
			}
			_iter_next_1b6872953:;
			++it;
			goto _iter_begin_1b6872953;
		}
		_iter_end_1b6872953:;
	};
	return nullptr;;
}



inline jule::Bool _1b302e267_isDuplicatedIdent(_1b302ac69_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68736ce:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> *_21316_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21316_v))) != _21232_itself) && ((*(_21316_v)).get()._field_Ident == _21249_ident)) && ((*(_21316_v)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1b68736ce:;
			++it;
			goto _iter_begin_1b68736ce;
		}
		_iter_end_1b68736ce:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b687368a:;
		if (it != expr_end) {
			jule::Ptr<_1b305ad32_TypeAlias> *_21916_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21916_ta))) != _21232_itself) && ((*(_21916_ta)).get()._field_Ident == _21249_ident)) && ((*(_21916_ta)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1b687368a:;
			++it;
			goto _iter_begin_1b687368a;
		}
		_iter_end_1b687368a:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b687469c:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> *_22516_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22516_s))) != _21232_itself) && ((*(_22516_s)).get()._field_Ident == _21249_ident)) && ((*(_22516_s)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1b687469c:;
			++it;
			goto _iter_begin_1b687469c;
		}
		_iter_end_1b687469c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6875cec:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> *_23116_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_23116_f))) != _21232_itself) && ((*(_23116_f)).get()._field_Ident == _21249_ident)) && ((*(_23116_f)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1b6875cec:;
			++it;
			goto _iter_begin_1b6875cec;
		}
		_iter_end_1b6875cec:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6878261:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8033e_Trait> *_24116_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24116_t))) != _21232_itself) && ((*(_24116_t)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1b6878261:;
			++it;
			goto _iter_begin_1b6878261;
		}
		_iter_end_1b6878261:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6878838:;
		if (it != expr_end) {
			jule::Ptr<_1b2e82484_Enum> *_24716_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24716_e))) != _21232_itself) && ((*(_24716_e)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1b6878838:;
			++it;
			goto _iter_begin_1b6878838;
		}
		_iter_end_1b6878838:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6879a37:;
		if (it != expr_end) {
			jule::Ptr<_1b2e83a7e_TypeEnum> *_25316_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25316_te))) != _21232_itself) && ((*(_25316_te)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1b6879a37:;
			++it;
			goto _iter_begin_1b6879a37;
		}
		_iter_end_1b6879a37:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b302ac69_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3030e7d_IsNil(_1b3030a93_Data* _self_) {
	return _1b305c95a_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b30311e2_IsVoid(_1b3030a93_Data* _self_) {
	return _1b305cbbe_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b3031456_IsConst(_1b3030a93_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1b3031764_GoodOperand(_1b3030a93_Data* _self_, jule::Ptr<_1b3030a93_Data>* _10031_other) {
	if ((_1b305e85d_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1b305ddac_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1b3064c1a_IsAny(_1b305ddac_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1b3060573_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1b305c95a_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3030a93_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3031b1b_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1b3032b1c_pushErr(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1b3032e3b_pushSugggestion(_1b3032611_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1b2eb7882_pushSugggestion((*(_self_))._field_s.ptr(), _13634_fmt, _13647_args);
}



inline void _1b3033117_allowBuiltin(_1b3032611_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b30332e3_disallowBuiltin(_1b3032611_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1b3033557_isUnsafe(_1b3032611_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1b30337bb_isGlobal(_1b3032611_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b68ae3eb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b68ad807:;
			{
				return false;;
			}
		}
		_match_end_1b68add79:;
	};
}



inline jule::Bool _1b3033a96_applyNumericPrefix(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1b3031456_IsConst((*(_16342_d)).ptr())))) || (_1b305ddac_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b3061772_Prim> _17013_prim = _1b305ddac_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b18ddd37_IsFloat(_1b3061ad5_Str(_17013_prim.ptr()))) {
			_case_begin_1b68b15da:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>((*((*(_self_))._field_prefix)));
				_1b18e2d3b_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1b18e20c1_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1b18dd485_IsSigInt(_1b3061ad5_Str(_17013_prim.ptr()))) {
			_case_begin_1b68b1651:;
			{
				if ((!(_1b30184a4_sigAssignable(_1b3061ad5_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>((*((*(_self_))._field_prefix)));
				_1b18e2346_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1b18dd771_IsUnsigInt(_1b3061ad5_Str(_17013_prim.ptr()))) {
			_case_begin_1b68b16b7:;
			{
				if ((!(_1b30185d6_unsigAssignable(_1b3061ad5_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>((*((*(_self_))._field_prefix)));
				_1b18e25bb_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1b68b13ba:;
	};
	return true;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3033d0a_litNil(_1b3032611_Eval* _self_) {
	jule::Ptr<_1b18de5da_Const> _20217_constant = static__1b18e07d9_NewNil();;
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type47), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1b3030a93_Data> _1b3034118_litStr(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_1cb189db0_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1b301873a_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1b3018a37_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1b18de5da_Const> _21817_constant = static__1b18e0344_NewStr(_21217_s);;
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type47), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1b3030a93_Data> _1b3034426_litBool(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr>* _23023_l) {
	jule::Ptr<_1b18de5da_Const> _23117_constant = static__1b18e009c_NewBool((*(_23023_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type47), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_1b3030a93_Data> _1b3034734_litRune(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _1b3001701_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_1b3030a93_Data> _24917_data = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Constant=static__1b18dea5d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _1b300157a_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6dbce_RuneExprModel>(_1b2e6dbce_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type89);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3034a42_litFloat(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _1b18c534b_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b18de5da_Const> _27417_constant = static__1b18e05db_NewF64(_27313_f);;
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type47), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_1b3030a93_Data> _1b3034d50_litInt(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I32 _29017_base = 0LL;;
	{
		
		if (_1cab6e6db_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_1b68c2ed1:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_1cab6e6db_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_1b68c3047:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_1cab6e6db_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_1b68c2be5:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1b68c2c5b:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_1b68c2b7e:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_1b68c2b18:;
	};
	jule::Ptr<_1b3030a93_Data> _31017_d = jule::new_ptr<_1b3030a93_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _1b18bdd5b_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__1b18dea5d_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _1b18bd8e9_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1b3032b1c_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1b3032e3b_pushSugggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__1b18ded05_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type47);
	if ((!(_1b3033a96_applyNumericPrefix(_self_, &(_31017_d))))) {
		_1b3056767_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b303515d_litNum(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr>* _34626_l) {
	{
		
		if (_1cb18aa1a_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_1b68cb12c:;
			{
				return _1b3034a42_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_1b68ca934:;
			{
				return _1b3034d50_litInt(_self_, _34626_l);;
			}
		}
		_match_end_1b68ca868:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b303546b_evalLit(_1b3032611_Eval* _self_, jule::Ptr<_1b2e51cd3_LitExpr> _35526_lit) {
	{
		
		if (_1b2e52135_IsNil(_35526_lit.ptr())) {
			_case_begin_1b68cc23d:;
			{
				return _1b3033d0a_litNil(_self_);;
			}
		}
		else if (_1cb189b18_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_1b68cbb66:;
			{
				return _1b3034118_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_1cb18a773_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_1b68cbbdd:;
			{
				return _1b3034426_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_1cb18a157_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_1b68cbc65:;
			{
				return _1b3034734_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_1cb18acb2_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_1b68cbe63:;
			{
				return _1b303515d_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_1b68cb67c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b68cb5b1:;
	};
}



inline jule::Any _1b3035779_findBuiltins(_1b3032611_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b68ce1a7:;
			{
				jule::Any _37521_def = _1b3056558_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1b2eab755_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b68ce619:;
			{
				jule::Any _38021_def = _1b30571e6_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1b2eb48a1_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b68ce680:;
			{
				jule::Any _38521_def = _1b30571e6_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_1b68cd915:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1b30823db_findBuiltinDef(_37231_ident);;
}



inline jule::Any _1b3035b31_getDef(_1b3032611_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_1b2ed8034_Var> _40117_v = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3076314_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b305ad32_TypeAlias> _40617_ta = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b30766bb_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_1b2e82484_Enum> _41221_enm = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3077546_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1b2e83a7e_TypeEnum> _41721_tenm = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3077854_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1b2e6e85b_Fn> _42317_f = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3076e2a_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1b2e683e3_Struct> _42817_s = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3076a73_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _1b3035779_findBuiltins(_self_, _39625_ident);;
}



inline void _1b68e57d9_pushReference(_1b3032611_Eval* _self_, jule::Ptr<_1b2e71132_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b68ea02a:;
			{
				jule::Ptr<_1b2e94ab2_scopeChecker> _43921_sc = _1b2e97e6c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0));;
				if ((!(_1b68e7e4b_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1b2e74c07_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1b68e6b92:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1b68e7e4b_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1b2e74c07_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1b68e6b3c:;
	};
}

inline void _1b69095cd_pushReference(_1b3032611_Eval* _self_, jule::Ptr<_1b2ed8034_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b690dadd:;
			{
				jule::Ptr<_1b2e94ab2_scopeChecker> _43921_sc = _1b2e97e6c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0));;
				if ((!(_1b690bba7_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1b2e74c07_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1b690a8ed:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1b690bba7_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1b2e74c07_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1b690a898:;
	};
}

inline void _1b6999d22_pushReference(_1b3032611_Eval* _self_, jule::Ptr<_1b2e687bc_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b699aeaa:;
			{
				jule::Ptr<_1b2e94ab2_scopeChecker> _43921_sc = _1b2e97e6c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0));;
				if ((!(_1b699c4d9_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1b2e74c07_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1b699b230:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1b699c4d9_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1b2e74c07_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1b699b1ca:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b30361b4__evalEnum(_1b3032611_Eval* _self_, jule::Ptr<_1b2e82484_Enum> _45028_enm) {
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_45028_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b3030a93_Data> _1b303656b_evalEnum(_1b3032611_Eval* _self_, jule::Ptr<_1b2e82484_Enum> _45931_enm, jule::Ptr<_1cb188a5c_Token> _45943_errorToken) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _45931_enm.get()._field_Public, _45931_enm.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _45943_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_45931_enm.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b30361b4__evalEnum(_self_, _45931_enm);;
}



inline jule::Ptr<_1b3030a93_Data> _1b3036879__evalTypeEnum(_1b3032611_Eval* _self_, jule::Ptr<_1b2e83a7e_TypeEnum> _46832_enm) {
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_46832_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b3030a93_Data> _1b3036c31_evalTypeEnum(_1b3032611_Eval* _self_, jule::Ptr<_1b2e83a7e_TypeEnum> _47735_enm, jule::Ptr<_1cb188a5c_Token> _47751_errorToken) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _47735_enm.get()._field_Public, _47735_enm.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _47751_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_47735_enm.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b3036879__evalTypeEnum(_self_, _47735_enm);;
}



inline jule::Ptr<_1b3030a93_Data> _1b303703e__evalStruct(_1b3032611_Eval* _self_, jule::Ptr<_1b2e687bc_StructIns> _48630_s) {
	jule::Ptr<_1b3030a93_Data> _48717_d = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_48630_s, 0)}), ._field_Model=jule::Any(_48630_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48630_s.get()._field_Decl != nullptr) && _48630_s.get()._field_Decl.get()._field_CppLinked)) {
		_48717_d.get()._field_Kind.get()._field_CppIdent=_48630_s.get()._field_Decl.get()._field_Ident;
	};
	return _48717_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b30373e6_evalStruct(_1b3032611_Eval* _self_, jule::Ptr<_1b2e687bc_StructIns> _50033_s, jule::Ptr<_1cb188a5c_Token> _50048_errorToken) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _50033_s.get()._field_Decl.get()._field_Public, _50033_s.get()._field_Decl.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _50048_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50033_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b3037a23_checkDeprecated(_self_, &(_50033_s.get()._field_Decl.get()._field_Directives), _50048_errorToken);
	return _1b303703e__evalStruct(_self_, _50033_s);;
}



inline jule::Ptr<_1b3030a93_Data> _1b3037704_evalFnIns(_1b3032611_Eval* _self_, jule::Ptr<_1b2e71132_FnIns> _51028_f) {
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_51028_f, 1)}), ._field_Model=jule::Any(_51028_f, &__jule_any_type7), });;
}



inline void _1b3037a23_checkDeprecated(_1b3032611_Eval* _self_, jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _51939_directives, jule::Ptr<_1cb188a5c_Token> _51970_tok) {
	if (_1b3033557_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1b2e184d6_Directive> _52413_d = _1b30561c3_findDirective(_51939_directives, jule::Str("deprecated", 10));;
	if ((_52413_d != nullptr)) {
		if ((_52413_d.get()._field_Args.len() == 0LL)) {
			_1b3032b1c_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1b3032b1c_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52413_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1b3032e3b_pushSugggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3037dca_evalFn(_1b3032611_Eval* _self_, jule::Ptr<_1b2e6e85b_Fn> _53529_f, jule::Ptr<_1cb188a5c_Token> _53537_errorToken) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _53529_f.get()._field_Public, _53529_f.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _53537_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53529_f.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b3037a23_checkDeprecated(_self_, &(_53529_f.get()._field_Directives), _53537_errorToken);
	jule::Ptr<_1b2e71132_FnIns> _54417_ins = _1b2e6ead1_instance(_53529_f);;
	_1b68e57d9_pushReference(_self_, &(_54417_ins));
	return _1b3037704_evalFnIns(_self_, _54417_ins);;
}



inline void _1b3038293_pushIllegalCycleError(_1b3032611_Eval* _self_, jule::Ptr<_1b2ed8034_Var>* _54941_v1, jule::Ptr<_1b2ed8034_Var>* _54952_v2, jule::Str* _54967_message) {
	;
	jule::Str _55113_refers_to = _1cac0c416_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_54941_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_54952_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_54967_message))).buffer.insert(0, (((_1caad032d_Repeat(jule::Str(" ", 1), 4LL) + _55113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1b303864a_checkCrossCycle(_1b3032611_Eval* _self_, jule::Ptr<_1b2ed8034_Var>* _55535_v, jule::Str* _55549_message) {
	{
		auto expr = &((*(_55535_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68ed050:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> *_55616_d = it;
			{
				if (((*(_55616_d)) == (*(_self_))._field_owner)) {
					_1b3038293_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
				if ((!(_1b303864a_checkCrossCycle(_self_, _55616_d, _55549_message)))) {
					_1b3038293_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
			}
			_iter_next_1b68ed050:;
			++it;
			goto _iter_begin_1b68ed050;
		}
		_iter_end_1b68ed050:;
	};
	return true;;
}



inline jule::Bool _1b3038a02_checkIllegalCycles(_1b3032611_Eval* _self_, jule::Ptr<_1b2ed8034_Var>* _57442_v, jule::Ptr<_1cb188a5c_Token> _57451_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57442_v)))) {
		_1b3032b1c_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58617_message = jule::Str();;
	if ((!(_1b303864a_checkCrossCycle(_self_, _57442_v, &(_58617_message))))) {
		jule::Str _58921_errMsg = _58617_message;;
		_58617_message=jule::Str();
		_1b3038293_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57442_v, &(_58617_message));
		_58921_errMsg+=_58617_message;
		_1b3032b1c_pushErr(_self_, _57451_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_58921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57442_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3038da9_evalVar(_1b3032611_Eval* _self_, jule::Ptr<_1b2ed8034_Var> _60130_v, jule::Ptr<_1cb188a5c_Token> _60139_errorToken) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _60130_v.get()._field_Public, _60130_v.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _60139_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b3037a23_checkDeprecated(_self_, &(_60130_v.get()._field_Directives), _60139_errorToken);
	_60130_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b6905387:;
			{
				jule::Bool _61517_ok = _1b3038a02_checkIllegalCycles(_self_, &(_60130_v), _60139_errorToken);;
				if ((!(_61517_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b6905442:;
			{
				if (((!(_60130_v.get()._field_Reference)) || _1b3033557_isUnsafe(_self_))) {
					goto _match_end_1b6905332;
				};
				jule::Ptr<_1b2e94ab2_scopeChecker> _62321_s = (*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0);;
				while (((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr))) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1b6907554:;
				}
				_iter_end_1b6907554:;;
				if ((((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_Anon) && (_60130_v.get()._field_Scope != _62321_s.get()._field_owner.get()._field_Scope))) {
					_1b3032b1c_pushErr(_self_, _60139_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1b6905332:;
	};
	if ((_60130_v.get()._field_Scope == nullptr)) {
		_1b69095cd_pushReference(_self_, &(_60130_v));
	};
	if (((!(_60130_v.get()._field_CppLinked)) && ((_60130_v.get()._field_Value == nullptr) || (_60130_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60130_v.get()._field_Constant) {
			_1b2ed09cc_checkTypeVar((*(_self_))._field_s, &(_60130_v), jule::Trait<_1b3077997_Lookup>((*(_self_))._field_s, 3));
			if ((_60130_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60130_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1b2ed09cc_checkTypeVar((*(_self_))._field_s, &(_60130_v), (*(_self_))._field_lookup);
		if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1b3030a93_Data> _66617_d = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_60130_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60130_v.get()._field_Mutable, ._field_Reference=_60130_v.get()._field_Reference, ._field_Lvalue=(!(_60130_v.get()._field_Constant)), ._field_Model=jule::Any(_60130_v, &__jule_any_type8), });;
	if ((((!(_60130_v.get()._field_CppLinked)) && _1b2ed83ec_IsInitialized(_60130_v.ptr())) && (_60130_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66617_d.get()._field_IsRune=_60130_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60130_v.get()._field_Constant && (_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66617_d.get()._field_Constant=jule::new_ptr<_1b18de5da_Const>((*(_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66617_d.get()._field_Model=jule::Any(_66617_d.get()._field_Constant, &__jule_any_type47);
		if (_1b2ed88c5_untypedConstant(_60130_v.ptr())) {
			_1b3033a96_applyNumericPrefix(_self_, &(_66617_d));
			_66617_d.get()._field_untyped=true;
		};
	};
	return _66617_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3039261_evalTypeAlias(_1b3032611_Eval* _self_, jule::Ptr<_1b305ad32_TypeAlias> _69036_ta, jule::Ptr<_1cb188a5c_Token> _69052_errorToken) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _69036_ta.get()._field_Public, _69036_ta.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _69052_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69036_ta.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69036_ta.get()._field_Used=true;
	jule::Trait<_1b305b5e6_Kind> _69917_kind = _69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1b3030a93_Data> _70017_d = nullptr;;
	{
		auto &_match_expr{ _69917_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b691a6ee:;
			{
				_70017_d=_1b303703e__evalStruct(_self_, _69917_kind.cast_ptr<_1b2e687bc_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b69192d0:;
			{
				_70017_d=_1b30361b4__evalEnum(_self_, _69917_kind.cast_ptr<_1b2e82484_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b6919346:;
			{
				_70017_d=_1b3036879__evalTypeEnum(_self_, _69917_kind.cast_ptr<_1b2e83a7e_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1b69191ae:;
			{
				_70017_d=jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69036_ta.get()._field_CppLinked) {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Ident;
				} else {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70017_d.get()._field_Model=jule::Any(_70017_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_1b6919159:;
	};
	_70017_d.get()._field_Kind.get()._field_Generic=_69036_ta.get()._field_Generic;
	return _70017_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3039618_evalDef(_1b3032611_Eval* _self_, jule::Any _72630_def, jule::Ptr<_1cb188a5c_Token> _72640_ident) {
	{
		auto &_match_expr{ _72630_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b691d0c5:;
			{
				return _1b3038da9_evalVar(_self_, _72630_def.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b691d13b:;
			{
				return _1b303656b_evalEnum(_self_, _72630_def.cast_ptr<_1b2e82484_Enum>(&__jule_any_type68), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b691d1a2:;
			{
				return _1b3036c31_evalTypeEnum(_self_, _72630_def.cast_ptr<_1b2e83a7e_TypeEnum>(&__jule_any_type69), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b691d229:;
			{
				return _1b30373e6_evalStruct(_self_, _1b2e284e6_instance(_72630_def.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66)), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b691d290:;
			{
				jule::Ptr<_1b2e6e85b_Fn> _73721_f = _72630_def.cast_ptr<_1b2e6e85b_Fn>(&__jule_any_type65);;
				if ((!_73721_f.get()._field_Ident.equal("init", 4))) {
					return _1b3037dca_evalFn(_self_, _73721_f, _72640_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b691d317:;
			{
				return _1b3037704_evalFnIns(_self_, _72630_def.cast_ptr<_1b2e71132_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b691d38e:;
			{
				return _1b3039261_evalTypeAlias(_self_, _72630_def.cast_ptr<_1b305ad32_TypeAlias>(&__jule_any_type67), _72640_ident);;
			}
		}
		_match_end_1b691ced7:;
	};
	_1b3032b1c_pushErr(_self_, _72640_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_72640_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3039926_evalIdent(_1b3032611_Eval* _self_, jule::Ptr<_1b2e52960_IdentExpr> _75028_ident) {
	jule::Any _75117_def = _1b3035b31_getDef(_self_, _75028_ident.get()._field_Ident, _75028_ident.get()._field_CppLinked);;
	return _1b3039618_evalDef(_self_, _75117_def, _75028_ident.get()._field_Token);;
}



inline jule::Ptr<_1b3030a93_Data> _1b3039c34_evalUnary(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e53169_UnaryExpr> _75533_u) {
	_1b304d4a6_unaryEval _75617_unary = static__1b304d95c_new(_self_);;
	return _1b304ec05_eval(&_75617_unary, _75533_u);;
}



inline jule::Ptr<_1b3030a93_Data> _1b303a042_evalVariadic(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e53521_VariadicExpr> _76036_v) {
	if ((_76036_v.get()._field_Expr == nullptr)) {
		_1b3032b1c_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _76617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76617_prefix;
	});;
	jule::Ptr<_1b3030a93_Data> _77017_d = _1b304c917_evalExprKind(_self_, _76036_v.get()._field_Expr.get()._field_Kind);;
	if ((_77017_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b305db48_Variadicable(_77017_d.get()._field_Kind.ptr())))) {
		_1b3032b1c_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_77017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b3065963_Slc> _78013_slc = _1b305ed36_Slc(_77017_d.get()._field_Kind.ptr());;
	_77017_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_CppIdent=_78013_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78013_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78013_slc.get()._field_Elem.get()._field_Kind});
	return _77017_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b303a350_evalUnsafe(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e524dc_UnsafeExpr> _79034_u) {
	jule::Bool _79113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1b3030a93_Data> _79317_d = _1b304c917_evalExprKind(_self_, _79034_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79113_unsafety;
	return _79317_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b303a65d_evalArr(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e5738d_SliceExpr> _79831_s) {
	jule::Ptr<_1b3067b0d_Arr> _80017_pt = _1b305eac2_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1b3067b0d_Arr> _80217_arr = jule::new_ptr<_1b3067b0d_Arr>(_1b3067b0d_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80017_pt.get()._field_Elem});;
	jule::Bool _80817_filled = false;;
	if ((_79831_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79831_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1b692c029:;
				{
					if ((_79831_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1b2e53521_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_1b692bec4;
					};
					if (_80017_pt.get()._field_Auto) {
						_1b3032b1c_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80817_filled=true;
					_79831_s.get()._field_Exprs=_79831_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1b692bec4:;
		};
	};
	_80217_arr.get()._field_N=static_cast<jule::I32>(_79831_s.get()._field_Exprs.len());
	if ((!(_80017_pt.get()._field_Auto))) {
		if ((_80217_arr.get()._field_N > _80017_pt.get()._field_N)) {
			_1b3032b1c_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80217_arr.get()._field_N < _80017_pt.get()._field_N)) {
			_80217_arr.get()._field_N=_80017_pt.get()._field_N;
		};
	};
	jule::Ptr<_1b2e6b2c5_ArrayExprModel> _83717_model = jule::new_ptr<_1b2e6b2c5_ArrayExprModel>(_1b2e6b2c5_ArrayExprModel{._field_Kind=_80217_arr, });;
	if (_80817_filled) {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79831_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1b305ba25_TypeKind> _84617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80217_arr.get()._field_Elem;
	{
		auto expr = &(_79831_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69321b6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e50c9e_Expr> _84821_elem = *it;
			{
				jule::Ptr<_1b3030a93_Data> _84921_d = _1b304c917_evalExprKind(_self_, _84821_elem.get()._field_Kind);;
				if ((_84921_d == nullptr)) {
					goto _iter_next_1b69321b6;
				};
				_1b2ebe449_checkAssignType(_self_.get()._field_s, false, &(_80217_arr.get()._field_Elem), &(_84921_d), _79831_s.get()._field_Token);
				_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(_84921_d.get()._field_Model);;
			}
			_iter_next_1b69321b6:;
			++it;
			goto _iter_begin_1b69321b6;
		}
		_iter_end_1b69321b6:;
	};
	_self_.get()._field_prefix=_84617_prefix;
	if (_80817_filled) {
		_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_80217_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83717_model, &__jule_any_type91), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b303aaae_evalExpSlc(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e5738d_SliceExpr> _87334_s, jule::Ptr<_1b305ba25_TypeKind> _87353_t, jule::Any _87371_first) {
	jule::Ptr<_1b3065963_Slc> _87417_slc = jule::new_ptr<_1b3065963_Slc>(_1b3065963_Slc{._field_Elem=_87353_t});;
	jule::I32 _87817_i = 0LL;;
	jule::Ptr<_1b2e69d51_SliceExprModel> _87917_model = jule::new_ptr<_1b2e69d51_SliceExprModel>(_1b2e69d51_SliceExprModel{._field_ElemKind=_87353_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87334_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87371_first != nullptr)) {
		_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_87371_first);;
		_87817_i=1LL;
	};
	jule::Ptr<_1b305ba25_TypeKind> _88817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87417_slc.get()._field_Elem;
	{
		auto expr = _87334_s.get()._field_Exprs.slice(_87817_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b6937760:;
		if (it != expr_end) {
			jule::Ptr<_1b2e50c9e_Expr> _89021_elem = *it;
			{
				jule::Ptr<_1b3030a93_Data> _89121_d = _1b304c917_evalExprKind(_self_, _89021_elem.get()._field_Kind);;
				if ((_89121_d == nullptr)) {
					goto _iter_next_1b6937760;
				};
				_1b2ebe449_checkAssignType(_self_.get()._field_s, false, &(_87417_slc.get()._field_Elem), &(_89121_d), _87334_s.get()._field_Token);
				_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_89121_d.get()._field_Model);;
			}
			_iter_next_1b6937760:;
			++it;
			goto _iter_begin_1b6937760;
		}
		_iter_end_1b6937760:;
	};
	_self_.get()._field_prefix=_88817_prefix;
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_87417_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87917_model, &__jule_any_type83), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b303adbc_evalSliceExpr(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e5738d_SliceExpr> _90937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1b305eac2_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b693a39a:;
				{
					return _1b303a65d_evalArr(_self_, _90937_s);;
				}
			}
			else if ((_1b305ed36_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b693a422:;
				{
					jule::Ptr<_1b3065963_Slc> _91525_pt = _1b305ed36_Slc(_self_.get()._field_prefix.ptr());;
					return _1b303aaae_evalExpSlc(_self_, _90937_s, _91525_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1b693a28a:;
		};
	};
	jule::Ptr<_1b305ba25_TypeKind> _92017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90937_s.get()._field_Exprs.len() == 0LL)) {
		_1b3032b1c_pushErr(_self_.ptr(), _90937_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _92817_firstElem = _1b304c917_evalExprKind(_self_, _90937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92817_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _93317_d = _1b303aaae_evalExpSlc(_self_, _90937_s, _92817_firstElem.get()._field_Kind, _92817_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92017_prefix;
	return _93317_d;;
}



inline void _1b303b20d_checkIntegerIndexingByData(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _93950_d, jule::Ptr<_1cb188a5c_Token> _93960_token) {
	jule::Str _94013_err_key = _1b305866a_checkDataForIntegerIndexing(_93950_d);;
	{
		auto &_match_expr{ _94013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b6940317:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b6940801:;
			{
				_1b3032b1c_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_93950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b694068b:;
			{
				_1b3032b1c_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b69405ae:;
	};
}



inline void _1b303b5d7_indexingPtr(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _95135_d, jule::Ptr<_1b3030a93_Data>* _95150_index, jule::Ptr<_1b2e57c0c_IndexingExpr>* _95165_i) {
	_1b303b20d_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	jule::Ptr<_1b306856a_Ptr> _95417_ptr = _1b305e385_Ptr((*(_95135_d)).get()._field_Kind.ptr());;
	{
		
		if (_1b306903d_IsUnsafe(_95417_ptr.ptr())) {
			_case_begin_1b6942e85:;
			{
				_1b3032b1c_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1b3033557_isUnsafe(_self_)))) {
			_case_begin_1b6942eeb:;
			{
				_1b3032b1c_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6942d64:;
	};
	(*(_95135_d)).get()._field_Kind=_95417_ptr.get()._field_Elem;
}



inline void _1b303b9a0_indexingArr(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _96635_d, jule::Ptr<_1b3030a93_Data>* _96650_index, jule::Ptr<_1b2e57c0c_IndexingExpr>* _96665_i) {
	jule::Ptr<_1b3067b0d_Arr> _96717_arr = _1b305eac2_Arr((*(_96635_d)).get()._field_Kind.ptr());;
	(*(_96635_d)).get()._field_Kind=_96717_arr.get()._field_Elem;
	_1b303b20d_checkIntegerIndexingByData(_self_, _96650_index, (*(_96665_i)).get()._field_Token);
	if ((_1b3031456_IsConst((*(_96650_index)).ptr()) && (_1b18e20c1_AsF64((*(_96650_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96717_arr.get()._field_N)))) {
		_1b3032b1c_pushErr(_self_, (*(_96665_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1b303bd68_indexingSlc(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _97535_d, jule::Ptr<_1b3030a93_Data>* _97550_index, jule::Ptr<_1b2e57c0c_IndexingExpr>* _97565_i) {
	jule::Ptr<_1b3065963_Slc> _97617_slc = _1b305ed36_Slc((*(_97535_d)).get()._field_Kind.ptr());;
	(*(_97535_d)).get()._field_Kind=_97617_slc.get()._field_Elem;
	_1b303b20d_checkIntegerIndexingByData(_self_, _97550_index, (*(_97565_i)).get()._field_Token);
	if ((!(_1b3031456_IsConst((*(_97550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97535_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b69486b6:;
			{
				jule::Ptr<_1b2e69d51_SliceExprModel> _98621_m = (*(_97535_d)).get()._field_Model.cast_ptr<_1b2e69d51_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _98717_indx = _1b18e20c1_AsF64((*(_97550_index)).get()._field_Constant.ptr());;
				if ((_98717_indx >= static_cast<jule::F64>(_98621_m.get()._field_Elems.len()))) {
					_1b3032b1c_pushErr(_self_, (*(_97565_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97535_d)).get()._field_Model=_98621_m.get()._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_98717_indx))];
					(*(_97535_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1b694862d:;
	};
}



inline void _1b303c231_indexingMap(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _99735_d, jule::Ptr<_1b3030a93_Data>* _99750_index, jule::Ptr<_1b2e57c0c_IndexingExpr>* _99769_i) {
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1b3067019_Map> _100117_m = _1b30607d7_Map((*(_99735_d)).get()._field_Kind.ptr());;
	_1b301b485_assignTypeChecker _100217_atc = _1b301b485_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100117_m.get()._field_Key, ._field_d=(*(_99750_index)), ._field_errorToken=(*(_99769_i)).get()._field_Token};;
	_1b301c60c_check(&_100217_atc);
	(*(_99735_d)).get()._field_Kind=_100117_m.get()._field_Val;
}



inline void _1b303c5e9_indexingStr(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _101235_d, jule::Ptr<_1b3030a93_Data>* _101250_index, jule::Ptr<_1b2e57c0c_IndexingExpr>* _101265_i) {
	;
	(*(_101235_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u8", 2)), 6)});
	if (((*(_101250_index)) == nullptr)) {
		return;;
	};
	_1b303b20d_checkIntegerIndexingByData(_self_, _101250_index, (*(_101265_i)).get()._field_Token);
	if ((!(_1b3031456_IsConst((*(_101250_index)).ptr())))) {
		(*(_101235_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1b3031456_IsConst((*(_101235_d)).ptr())) {
		jule::Ptr<_1cb188a5c_Token> _102817_errorToken = (*(_101265_i)).get()._field_Token;;
		jule::I64 _102917_j = _1b18e1ae8_AsI64((*(_101250_index)).get()._field_Constant.ptr());;
		jule::Str _103017_s = _1b18e1620_ReadStr((*(_101235_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_102917_j) >= _103017_s.len())) {
			_1b3032b1c_pushErr(_self_, _102817_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1b18e25bb_SetU64((*(_101235_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103017_s[static_cast<jule::I32>(_102917_j)])));
		};
	};
}



inline void _1b303c9b2_toIndexing(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _103934_d, jule::Ptr<_1b3030a93_Data>* _103949_index, jule::Ptr<_1b2e57c0c_IndexingExpr>* _103968_i) {
	{
		
		if ((_1b305e385_Ptr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b695323c:;
			{
				_1b303b5d7_indexingPtr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1b305eac2_Arr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b69532b4:;
			{
				_1b303b9a0_indexingArr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1b305ed36_Slc((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b695333b:;
			{
				_1b303bd68_indexingSlc(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1b30607d7_Map((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b69533b3:;
			{
				_1b303c231_indexingMap(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1b305ddac_Prim((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b695343a:;
			{
				jule::Ptr<_1b3061772_Prim> _105417_prim = _1b305ddac_Prim((*(_103934_d)).get()._field_Kind.ptr());;
				{
					
					if (_1b30649a6_IsStr(_105417_prim.ptr())) {
						_case_begin_1b6957373:;
						{
							_1b303c5e9_indexingStr(_self_, _103934_d, _103949_index, _103968_i);
							return;;
						}
					}
					_match_end_1b69572c9:;
				};
			}
		}
		_match_end_1b69530e9:;
	};
	_1b3032b1c_pushErr(_self_, (*(_103968_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_103934_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1b303ce35_pushGenericsFromExprSubIdent(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54203_SubIdentExpr>* _106453_sexpr, jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>* _106514_generics, jule::Ptr<_1b2e50c9e_Expr>* _106542_expr) {
	jule::Ptr<_1b2e4c493_SubIdentTypeDecl> _106617_t = jule::new_ptr<_1b2e4c493_SubIdentTypeDecl>();;
	if ((!(_1b305943a_pushSubIdentFromExpr(jule::Any((*(_106453_sexpr)), &__jule_any_type92), &(_106617_t))))) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_106542_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106514_generics)) = jule::alloc_for_append((*(_106514_generics)),1);(*(_106514_generics)).__push(jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Kind=jule::Any(_106617_t, &__jule_any_type93)}));;
	return true;;
}



inline jule::Bool _1b303d2ed_pushGenericsFromData(jule::Ptr<_1b3032611_Eval> _self_, jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>* _107545_generics, jule::Ptr<_1b2e50c9e_Expr>* _107573_expr) {
	{
		auto &_match_expr{ (*(_107573_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b695b1ac:;
			{
				jule::Ptr<_1b2e53169_UnaryExpr> _107821_u = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1b2e53169_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _107821_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1b695b8b6:;
						{
							jule::Ptr<_1b2e4d609_PtrTypeDecl> _108125_kind = jule::new_ptr<_1b2e4d609_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _108225__generics = jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, 1LL);;
							_1b303d2ed_pushGenericsFromData(_self_, &(_108225__generics), &(_107821_u.get()._field_Expr));
							_108125_kind.get()._field_Elem=_108225__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_108125_kind, &__jule_any_type78)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1b695ca0a:;
						{
							jule::Ptr<_1b2e4cb36_SptrTypeDecl> _109025_kind = jule::new_ptr<_1b2e4cb36_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _109125__generics = jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, 1LL);;
							_1b303d2ed_pushGenericsFromData(_self_, &(_109125__generics), &(_107821_u.get()._field_Expr));
							_109025_kind.get()._field_Elem=_109125__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_109025_kind, &__jule_any_type79)}));;
						}
					}
					else {
						_case_begin_1b695c0ae:;
						{
							_1b3032b1c_pushErr(_self_.ptr(), _107821_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b695bd39:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b695b223:;
			{
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push((*(_107573_expr)).get()._field_Kind.cast_ptr<_1b2e4b77d_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b695b003:;
			{
				jule::Ptr<_1b2e54203_SubIdentExpr> _110521_sexpr = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1b2e54203_SubIdentExpr>(&__jule_any_type92);;
				return _1b303ce35_pushGenericsFromExprSubIdent(_self_, &(_110521_sexpr), _107545_generics, _107573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b695b069:;
			{
				jule::Ptr<_1b2e52960_IdentExpr> _110821_ident = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1b2e52960_IdentExpr>(&__jule_any_type86);;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_110821_ident.get()._field_Token, ._field_Ident=_110821_ident.get()._field_Ident, ._field_CppLinked=_110821_ident.get()._field_CppLinked, }), &__jule_any_type19)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b695b0d0:;
			{
				{
					auto expr = &((*(_107573_expr)).get()._field_Kind.cast_ptr<_1b2e5192b_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6962c63:;
					if (it != expr_end) {
						jule::Ptr<_1b2e50c9e_Expr> _111725_texpr = *it;
						{
							if ((!(_1b303d2ed_pushGenericsFromData(_self_, _107545_generics, &(_111725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b6962c63:;
						++it;
						goto _iter_begin_1b6962c63;
					}
					_iter_end_1b6962c63:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b695a684:;
			{
				jule::Ptr<_1b2e53c80_NsSelectionExpr> _112321_ns = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1b2e53c80_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_1b2e4bd44_IdentTypeDecl> _112421_decl = jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_112321_ns.get()._field_Ident, ._field_Ident=_112321_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4c84a_NamespaceTypeDecl>(_1b2e4c84a_NamespaceTypeDecl{._field_Idents=_112321_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(_112421_decl, &__jule_any_type19)})}), &__jule_any_type97)}));;
			}
		}
		else {
			_case_begin_1b695a60c:;
			{
				_1b3032b1c_pushErr(_self_.ptr(), (*(_107573_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b695a5a7:;
	};
	return true;;
}



inline void _1b303d63e_evalIdentDeclFromIndexing(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b3030a93_Data>* _114550_d, jule::Ptr<_1b2e57c0c_IndexingExpr>* _114565_i) {
	jule::Ptr<_1b2e687bc_StructIns> _114617_s = _1b306030e_Struct((*(_114550_d)).get()._field_Kind.ptr());;
	if ((_114617_s == nullptr)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Expr.get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_114550_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b2e4bd44_IdentTypeDecl> _115317_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114565_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b69680ba:;
			{
				jule::Ptr<_1b2e52960_IdentExpr> _115621_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1b2e52960_IdentExpr>(&__jule_any_type86);;
				_115317_decl=jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_115621_expr.get()._field_Token, ._field_Ident=_115621_expr.get()._field_Ident, ._field_CppLinked=_115621_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b6969132:;
			{
				jule::Ptr<_1b2e53c80_NsSelectionExpr> _116321_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1b2e53c80_NsSelectionExpr>(&__jule_any_type96);;
				_115317_decl=jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_116321_expr.get()._field_Ident, ._field_Ident=_116321_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1b69684b6:;
			{
				_1b3032b1c_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114550_d))=nullptr;
				return;;
			}
		}
		_match_end_1b6968461:;
	};
	if ((!(_1b303d2ed_pushGenericsFromData(_self_, &(_115317_decl.get()._field_Generics), &((*(_114565_i)).get()._field_Index))))) {
		(*(_114550_d))=nullptr;
		return;;
	};
	_114617_s=({ auto _wrap_copy = _1b3044898_typeChecker(_self_.ptr()); _1b306e21e_fromStruct(&_wrap_copy, &(_115317_decl), &(_114617_s.get()._field_Decl)); });
	if ((_114617_s == nullptr)) {
		(*(_114550_d))=nullptr;
		return;;
	};
	(*(_114550_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1b305b5e6_Kind>(_114617_s, 0);
}



inline jule::Bool _1b303daa1_checkGenericFn(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e71132_FnIns>* _118839_f, jule::Ptr<_1cb188a5c_Token>* _118855_et, jule::Any* _118872_model) {
	jule::Bool _118913_ok = _1b2ec1814_reloadFnInsTypes(_self_.get()._field_s, (*(_118839_f)));;
	(*(_118839_f)).get()._field_reloaded=true;
	if ((!(_118913_ok))) {
		return false;;
	};
	jule::Ptr<_1b2e71132_FnIns> _119417_existInstance = _1b2e6edab_appendInstance((*(_118839_f)).get()._field_Decl.ptr(), _118839_f);;
	if ((!(_1b2ec0978_checkConstraintsFn(_self_.get()._field_s, _118839_f, _118855_et, _119417_existInstance)))) {
		return false;;
	};
	if ((_119417_existInstance != nullptr)) {
		(*(_118839_f))=_119417_existInstance;
		_1b30591e8_updateModelToGenericIns(_118872_model, &(_119417_existInstance));
	} else {
		_1b2ed37d2_checkFnInsCaller(_self_.get()._field_s, _118839_f, (*(_118855_et)));
	};
	return true;;
}



inline void _1b303dde2_evalFnGenericFromIndexing(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b3030a93_Data>* _121350_d, jule::Ptr<_1b2e57c0c_IndexingExpr>* _121365_i) {
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _121417_generics = jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1b303d2ed_pushGenericsFromData(_self_, &(_121417_generics), &((*(_121365_i)).get()._field_Index))))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b2e71132_FnIns> _122017_f = _1b306009a_Fn((*(_121350_d)).get()._field_Kind.ptr());;
	jule::I32 _122117_genericsLen = 0LL;;
	if ((_122017_f.get()._field_Decl != nullptr)) {
		_122117_genericsLen=static_cast<jule::I32>(_122017_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1b2eb890a_checkGenericQuantity(_self_.get()._field_s.ptr(), _122117_genericsLen, static_cast<jule::I32>(_121417_generics.len()), (*(_121365_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	_122017_f.get()._field_Generics=jule::Slice<jule::Ptr<_1b305a2e8_InsGeneric>>::alloc(0LL, _122017_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121417_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6973603:;
		if (it != expr_end) {
			jule::Ptr<_1b2e4b77d_TypeDecl> _123221_g = *it;
			{
				jule::Ptr<_1b3030a93_Data> _123321_k = _1b3044ba6_evalType(_self_.ptr(), _123221_g);;
				if ((_123321_k == nullptr)) {
					(*(_121350_d))=nullptr;
					return;;
				};
				_122017_f.get()._field_Generics = jule::alloc_for_append(_122017_f.get()._field_Generics,1);_122017_f.get()._field_Generics.__push(jule::new_ptr<_1b305a2e8_InsGeneric>(_1b305a2e8_InsGeneric{._field_Kind=_123321_k.get()._field_Kind, }));;
			}
			_iter_next_1b6973603:;
			++it;
			goto _iter_begin_1b6973603;
		}
		_iter_end_1b6973603:;
	};
	if (_1b2e724b8_IsBuiltin(_122017_f.ptr())) {
		return;;
	};
	if (_1b303daa1_checkGenericFn(_self_, &(_122017_f), &((*(_121365_i)).get()._field_Expr.get()._field_Token), &((*(_121350_d)).get()._field_Model))) {
		(*(_121350_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1b305b5e6_Kind>(_122017_f, 1);
	} else {
		(*(_121350_d))=nullptr;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b303e211_evalIndexing(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e57c0c_IndexingExpr> _125236_i) {
	jule::Ptr<_1b305ba25_TypeKind> _125317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125317_prefix;
	});;
	jule::Ptr<_1b3030a93_Data> _125717_d = _1b304c917_evalExprKind(_self_, _125236_i.get()._field_Expr.get()._field_Kind);;
	if ((_125717_d == nullptr)) {
		return nullptr;;
	};
	if (_125717_d.get()._field_Decl) {
		_1b303d63e_evalIdentDeclFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	if ((_1b306009a_Fn(_125717_d.get()._field_Kind.ptr()) != nullptr)) {
		_1b303dde2_evalFnGenericFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	_1b3030a93_Data _127317_old_d = (*(_125717_d));;
	jule::Ptr<_1b3030a93_Data> _127517_index = _1b304c917_evalExprKind(_self_, _125236_i.get()._field_Index.get()._field_Kind);;
	if ((_127517_index == nullptr)) {
		return nullptr;;
	};
	_125717_d.get()._field_Decl=false;
	_1b303c9b2_toIndexing(_self_.ptr(), &(_125717_d), &(_127517_index), &(_125236_i));
	if (_1b3031456_IsConst(_125717_d.ptr())) {
		_125717_d.get()._field_Decl=false;
		_125717_d.get()._field_Model=jule::Any(_125717_d.get()._field_Constant, &__jule_any_type47);
	} else if (_125717_d.get()._field_Decl) {
		_125717_d.get()._field_Decl=false;
	} else {
		_125717_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6a03d_IndexingExprModel>(_1b2e6a03d_IndexingExprModel{._field_Token=_125236_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1b3030a93_Data>(_127317_old_d), ._field_Index=_127517_index}), &__jule_any_type45);
	};
	return _125717_d;;
}



inline __jule_tuple_x_1b3030a93_Data__jule_tuple_x_1b3030a93_Data _1b303e51e_evalSlicingExprs(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e58317_SlicingExpr>* _130641_s) {
	__jule_tuple_x_1b3030a93_Data__jule_tuple_x_1b3030a93_Data __jule_func_result;
	jule::Ptr<_1b305ba25_TypeKind> _130717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130717_prefix;
	});;
	jule::Ptr<_1b3030a93_Data> _131117_l = nullptr;;
	jule::Ptr<_1b3030a93_Data> _131217_r = nullptr;;
	if (((*(_130641_s)).get()._field_Start != nullptr)) {
		_131117_l=_1b304c917_evalExprKind(_self_, (*(_130641_s)).get()._field_Start.get()._field_Kind);
		if ((_131117_l != nullptr)) {
			_1b303b20d_checkIntegerIndexingByData(_self_.ptr(), &(_131117_l), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131117_l=jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1b18dea5d_NewI64(0LL)});
		_131117_l.get()._field_Model=jule::Any(_131117_l.get()._field_Constant, &__jule_any_type47);
	};
	if (((*(_130641_s)).get()._field_To != nullptr)) {
		_131217_r=_1b304c917_evalExprKind(_self_, (*(_130641_s)).get()._field_To.get()._field_Kind);
		if ((_131217_r != nullptr)) {
			_1b303b20d_checkIntegerIndexingByData(_self_.ptr(), &(_131217_r), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131117_l;
	__jule_func_result.__jule_result_arg1 = _131217_r;
	return __jule_func_result;;
}



inline void _1b303e794_slicingArr(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _134130_d) {
	jule::Ptr<_1b305ba25_TypeKind> _134217_elemType = _1b305eac2_Arr((*(_134130_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134130_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065963_Slc>(_1b3065963_Slc{._field_Elem=_134217_elemType}), 8)});
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=((*(_134130_d)).get()._field_Mutable || (!(_1b305d197_Mutable(_134217_elemType.ptr()))));
}



inline void _1b303eb5c_slicingStr(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _135630_d, jule::Ptr<_1b3030a93_Data>* _135641_l, jule::Ptr<_1b3030a93_Data>* _135652_r) {
	(*(_135630_d)).get()._field_Lvalue=false;
	(*(_135630_d)).get()._field_Mutable=true;
	if ((!(_1b3031456_IsConst((*(_135630_d)).ptr())))) {
		return;;
	};
	if ((((*(_135641_l)) == nullptr) || ((*(_135652_r)) == nullptr))) {
		(*(_135630_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1b3031456_IsConst((*(_135641_l)).ptr()) && _1b3031456_IsConst((*(_135652_r)).ptr()))) {
		jule::I64 _136917_left = _1b18e1ae8_AsI64((*(_135641_l)).get()._field_Constant.ptr());;
		if ((_136917_left < 0LL)) {
			return;;
		};
		jule::Str _137417_s = _1b18e1620_ReadStr((*(_135630_d)).get()._field_Constant.ptr());;
		jule::I64 _137521_right = 0LL;;
		if (((*(_135652_r)) == nullptr)) {
			_137521_right=static_cast<jule::I64>(static_cast<jule::I64>(_137417_s.len()));
		} else {
			_137521_right=static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_135652_r)).get()._field_Constant.ptr()));
		};
		if ((_136917_left > _137521_right)) {
			return;;
		};
		_1b18e2ab6_SetStr((*(_135630_d)).get()._field_Constant.ptr(), _137417_s.slice(static_cast<jule::I32>(_136917_left), static_cast<jule::I32>(_137521_right)));
		(*(_135630_d)).get()._field_Decl=true;
	} else {
		(*(_135630_d)).get()._field_Constant=nullptr;
	};
}



inline void _1b30400be_checkSlicing(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data>* _139236_d, jule::Ptr<_1b3030a93_Data>* _139247_l, jule::Ptr<_1b3030a93_Data>* _139258_r, jule::Ptr<_1b2e58317_SlicingExpr>* _139269_s) {
	{
		
		if ((_1b305eac2_Arr((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b698a043:;
			{
				_1b303e794_slicingArr(_self_, _139236_d);
				return;;
			}
		}
		else if ((_1b305ed36_Slc((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b698a0ba:;
			{
				return;;
			}
		}
		else if ((_1b305ddac_Prim((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b698a142:;
			{
				jule::Ptr<_1b3061772_Prim> _140017_prim = _1b305ddac_Prim((*(_139236_d)).get()._field_Kind.ptr());;
				{
					
					if (_1b30649a6_IsStr(_140017_prim.ptr())) {
						_case_begin_1b698c52e:;
						{
							_1b303eb5c_slicingStr(_self_, _139236_d, _139247_l, _139258_r);
							return;;
						}
					}
					_match_end_1b698c485:;
				};
			}
		}
		_match_end_1b6989e22:;
	};
	_1b3032b1c_pushErr(_self_, (*(_139269_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_139236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1b3030a93_Data> _1b30403cc_evalSlicing(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e58317_SlicingExpr> _141135_s) {
	jule::Ptr<_1b3030a93_Data> _141217_d = _1b304c917_evalExprKind(_self_, _141135_s.get()._field_Expr.get()._field_Kind);;
	if ((_141217_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _141718_l;;
	jule::Ptr<_1b3030a93_Data> _141725_r;;
	({
		__jule_tuple_x_1b3030a93_Data__jule_tuple_x_1b3030a93_Data __jule_assign_result = _1b303e51e_evalSlicingExprs(_self_, &(_141135_s));
		_141718_l = __jule_assign_result.__jule_result_arg0;
		_141725_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141718_l == nullptr)) {
		return _141217_d;;
	};
	_141217_d.get()._field_Decl=false;
	_1b30400be_checkSlicing(_self_.ptr(), &(_141217_d), &(_141718_l), &(_141725_r), &(_141135_s));
	if (_1b3031456_IsConst(_141217_d.ptr())) {
		_141217_d.get()._field_Decl=false;
		_141217_d.get()._field_Model=jule::Any(_141217_d.get()._field_Constant, &__jule_any_type47);
	} else if (_141217_d.get()._field_Decl) {
		_141217_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1b2e6a7e1_SlicingExprModel> _143521_model = jule::new_ptr<_1b2e6a7e1_SlicingExprModel>(_1b2e6a7e1_SlicingExprModel{._field_Token=_141135_s.get()._field_Token, ._field_Expr=_141217_d.get()._field_Model, ._field_Left=_141718_l.get()._field_Model, });;
		if ((_141725_r != nullptr)) {
			_143521_model.get()._field_Right=_141725_r.get()._field_Model;
		};
		_141217_d.get()._field_Model=jule::Any(_143521_model, &__jule_any_type98);
	};
	return _141217_d;;
}



inline void _1b3040795_castPtr(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _144830_t, jule::Ptr<_1b3030a93_Data> _144848_d, jule::Ptr<_1cb188a5c_Token> _144858_errorToken) {
	_144848_d.get()._field_Constant=nullptr;
	jule::Ptr<_1b3065006_Sptr> _145013_sptr = _1b305e121_Sptr(_144848_d.get()._field_Kind.ptr());;
	if ((_145013_sptr != nullptr)) {
		if ((!(_1b305c22e_Equal(_1b305e385_Ptr(_144830_t.ptr()).get()._field_Elem, _145013_sptr.get()._field_Elem)))) {
			_1b3032b1c_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_144830_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1b3033557_isUnsafe(_self_)))) {
		_1b3032b1c_pushErr(_self_, _144858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b3061772_Prim> _146313_prim = _1b305ddac_Prim(_144848_d.get()._field_Kind.ptr());;
	if (((_1b305e385_Ptr(_144848_d.get()._field_Kind.ptr()) == nullptr) && ((_146313_prim == nullptr) || (!(_1b18dda18_IsInt(_1b3061ad5_Str(_146313_prim.ptr()))))))) {
		_1b3032b1c_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_144830_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1b3040b5d_castStruct(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _146933_t, jule::Ptr<_1b3030a93_Data> _146951_d, jule::Ptr<_1cb188a5c_Token> _146961_errorToken) {
	_146951_d.get()._field_Constant=nullptr;
	jule::Ptr<_1b2e8033e_Trait> _147117_tr = _1b3060573_Trait(_146951_d.get()._field_Kind.ptr());;
	if ((_147117_tr == nullptr)) {
		_1b3032b1c_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_146933_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _147717_s = _1b306030e_Struct(_146933_t.ptr());;
	_1b6999d22_pushReference(_self_, &(_147717_s));
	if ((!(_1b2e2cece_IsImplements(_147717_s.get()._field_Decl.ptr(), _147117_tr)))) {
		_1b3032b1c_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_146933_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1b3041026_castRef(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _148530_t, jule::Ptr<_1b3030a93_Data> _148548_d, jule::Ptr<_1cb188a5c_Token> _148558_errorToken) {
	_148548_d.get()._field_Constant=nullptr;
	jule::Ptr<_1b3065006_Sptr> _148717_sptr = _1b305e121_Sptr(_148530_t.ptr());;
	jule::Ptr<_1b306856a_Ptr> _148917_ptr = _1b305e385_Ptr(_148548_d.get()._field_Kind.ptr());;
	if (((_148917_ptr != nullptr) && _1b305c22e_Equal(_148717_sptr.get()._field_Elem, _148917_ptr.get()._field_Elem))) {
		if ((!(_1b3033557_isUnsafe(_self_)))) {
			_1b3032b1c_pushErr(_self_, _148558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1b306030e_Struct(_148717_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1b3040b5d_castStruct(_self_, _148717_sptr.get()._field_Elem, _148548_d, _148558_errorToken);
		return;;
	};
	_1b3032b1c_pushErr(_self_, _148558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_148548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_148530_t.ptr()), &__jule_any_type5)}));
}



inline void _1b30413de_castSlc(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _150730_t, jule::Ptr<_1b3030a93_Data> _150748_d, jule::Ptr<_1cb188a5c_Token> _150758_errorToken) {
	_150748_d.get()._field_Constant=nullptr;
	if ((_1b305e5e9_Enum(_150748_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1b305ddac_Prim(_1b305e5e9_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1b30649a6_IsStr(_1b305ddac_Prim(_1b305e5e9_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1b3032b1c_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_150730_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1b305ddac_Prim(_150748_d.get()._field_Kind.ptr()) == nullptr) || (!(_1b30649a6_IsStr(_1b305ddac_Prim(_150748_d.get()._field_Kind.ptr()).ptr()))))) {
		_1b3032b1c_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_150730_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_150730_t=_1b305ed36_Slc(_150730_t.ptr()).get()._field_Elem;
	jule::Ptr<_1b3061772_Prim> _152013_prim = _1b305ddac_Prim(_150730_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_1b306307b_IsU8(_152013_prim.ptr()))) && (!(_1b3062aa3_IsI32(_152013_prim.ptr())))))) {
		_1b3032b1c_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_150730_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1b304170d_castStr(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _152630_d, jule::Ptr<_1cb188a5c_Token> _152640_errorToken) {
	_152630_d.get()._field_Constant=nullptr;
	if ((_1b305e5e9_Enum(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2e82484_Enum> _152921_e = _1b305e5e9_Enum(_152630_d.get()._field_Kind.ptr());;
		if (((_1b305ddac_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1b30649a6_IsStr(_1b305ddac_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1b305ddac_Prim(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b3061772_Prim> _153617_prim = _1b305ddac_Prim(_152630_d.get()._field_Kind.ptr());;
		if (((!(_1b306307b_IsU8(_153617_prim.ptr()))) && (!(_1b3062aa3_IsI32(_153617_prim.ptr()))))) {
			_1b3032b1c_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1b305be21_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1b305ed36_Slc(_152630_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b3032b1c_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1b305be21_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _154817_t = _1b305ed36_Slc(_152630_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1b3061772_Prim> _154913_prim = _1b305ddac_Prim(_154817_t.ptr());;
	if (((_154913_prim == nullptr) || ((!(_1b306307b_IsU8(_154913_prim.ptr()))) && (!(_1b3062aa3_IsI32(_154913_prim.ptr())))))) {
		_1b3032b1c_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1b305be21_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _1b3041ac6_castInt(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _155530_t, jule::Ptr<_1b3030a93_Data> _155548_d, jule::Ptr<_1cb188a5c_Token> _155558_errorToken) {
	if (_1b3031456_IsConst(_155548_d.ptr())) {
		jule::Ptr<_1b3061772_Prim> _155717_prim = _1b305ddac_Prim(_155530_t.ptr());;
		{
			
			if (_1b18dd485_IsSigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1b69b45cd:;
				{
					_1b18e2346_SetI64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1b18dd771_IsUnsigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1b69b4655:;
				{
					_1b18e25bb_SetU64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b69b4523:;
		};
	} else {
		_155548_d.get()._field_Constant=nullptr;
	};
	if ((_1b305e5e9_Enum(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2e82484_Enum> _156917_e = _1b305e5e9_Enum(_155548_d.get()._field_Kind.ptr());;
		if (_1b18de0ce_IsNum(_1b305be21_Str(_156917_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1b305e121_Sptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b3061772_Prim> _157617_prim = _1b305ddac_Prim(_155530_t.ptr());;
		if ((!(_1b30644cd_IsUintptr(_157617_prim.ptr())))) {
			_1b3032b1c_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_155530_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1b305e385_Ptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b3061772_Prim> _158317_prim = _1b305ddac_Prim(_155530_t.ptr());;
		if (_1b30644cd_IsUintptr(_158317_prim.ptr())) {
		} else if ((!(_1b3033557_isUnsafe(_self_)))) {
			_1b3032b1c_pushErr(_self_, _155558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1b3061772_Prim> _159213_prim = _1b305ddac_Prim(_155548_d.get()._field_Kind.ptr());;
	if (((_159213_prim != nullptr) && _1b18de0ce_IsNum(_1b3061ad5_Str(_159213_prim.ptr())))) {
		return;;
	};
	_1b3032b1c_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_155530_t.ptr()), &__jule_any_type5)}));
}



inline void _1b3041e8e_castNum(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _160030_t, jule::Ptr<_1b3030a93_Data> _160048_d, jule::Ptr<_1cb188a5c_Token> _160058_errorToken) {
	if (_1b3031456_IsConst(_160048_d.ptr())) {
		jule::Ptr<_1b3061772_Prim> _160217_prim = _1b305ddac_Prim(_160030_t.ptr());;
		{
			
			if (_1b18ddd37_IsFloat(_160217_prim.get()._field_Kind)) {
				_case_begin_1b69bd153:;
				{
					_1b18e2d3b_SetF64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1b18e20c1_AsF64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1b18dd485_IsSigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1b69bd1ca:;
				{
					_1b18e2346_SetI64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1b18dd771_IsUnsigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1b69bd252:;
				{
					_1b18e25bb_SetU64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b69bd087:;
		};
	} else {
		_160048_d.get()._field_Constant=nullptr;
	};
	if ((_1b305e5e9_Enum(_160048_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2e82484_Enum> _161617_e = _1b305e5e9_Enum(_160048_d.get()._field_Kind.ptr());;
		if (_1b18de0ce_IsNum(_1b305be21_Str(_161617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b3061772_Prim> _162213_prim = _1b305ddac_Prim(_160048_d.get()._field_Kind.ptr());;
	if (((_162213_prim != nullptr) && _1b18de0ce_IsNum(_1b3061ad5_Str(_162213_prim.ptr())))) {
		return;;
	};
	_1b3032b1c_pushErr(_self_, _160058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_160048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_160030_t.ptr()), &__jule_any_type5)}));
}



inline void _1b3042357_castPrim(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _163031_t, jule::Ptr<_1b3030a93_Data> _163049_d, jule::Ptr<_1cb188a5c_Token> _163059_errorToken) {
	jule::Ptr<_1b3061772_Prim> _163113_prim = _1b305ddac_Prim(_163031_t.ptr());;
	{
		
		if (_1b3064c1a_IsAny(_163113_prim.ptr())) {
			_case_begin_1b69c3ba3:;
			{
				_163049_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1b30649a6_IsStr(_163113_prim.ptr())) {
			_case_begin_1b69c4214:;
			{
				_1b304170d_castStr(_self_, _163049_d, _163059_errorToken);
			}
		}
		else if (_1b18dda18_IsInt(_1b3061ad5_Str(_163113_prim.ptr()))) {
			_case_begin_1b69c427a:;
			{
				_1b3041ac6_castInt(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else if (_1b18de0ce_IsNum(_1b3061ad5_Str(_163113_prim.ptr()))) {
			_case_begin_1b69c4302:;
			{
				_1b3041e8e_castNum(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else {
			_case_begin_1b69c419d:;
			{
				_1b3032b1c_pushErr(_self_, _163059_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_163031_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1b69c4137:;
	};
}



inline void _1b3042676_castConstant(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind>* _164736_t, jule::Ptr<_1b3030a93_Data>* _164755_d) {
	if ((((*(_164755_d)) == nullptr) || (!(_1b3031456_IsConst((*(_164755_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1b3061772_Prim> _165113_prim = _1b305ddac_Prim((*(_164736_t)).ptr());;
	_1b3058bdc_castConstByType(&(_165113_prim.get()._field_Kind), _164755_d);
	(*(_164755_d)).get()._field_Model=jule::Any((*(_164755_d)).get()._field_Constant, &__jule_any_type47);
}



inline void _1b3042a3e_castTypeEnum(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind>* _165636_t, jule::Ptr<_1b3030a93_Data>* _165655_d, jule::Ptr<_1cb188a5c_Token>* _165670_errorToken) {
	jule::I32 _165713_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1b2ebe89a_checkTypeCompatibility((*(_self_))._field_s, &((*(_165655_d)).get()._field_Kind), _165636_t, _165670_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _165713_n);
		_1b3032b1c_pushErr(_self_, (*(_165670_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_165655_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_165636_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_165655_d)).get()._field_Constant=nullptr;
}



inline void _1b3042e07_castTypeEnumT(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind>* _166537_t, jule::Ptr<_1b3030a93_Data>* _166556_d, jule::Ptr<_1cb188a5c_Token>* _166571_errorToken) {
	jule::I32 _166613_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1b2ebe89a_checkTypeCompatibility((*(_self_))._field_s, _166537_t, &((*(_166556_d)).get()._field_Kind), _166571_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166613_n);
		_1b3032b1c_pushErr(_self_, (*(_166571_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_166556_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_166537_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166556_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1b3030a93_Data> _1b3043358_evalCastByTypeNData(_1b3032611_Eval* _self_, jule::Ptr<_1b305ba25_TypeKind> _167442_t, jule::Ptr<_1b3030a93_Data> _167460_d, jule::Ptr<_1cb188a5c_Token> _167474_errorToken) {
	if (((_167460_d != nullptr) && _167460_d.get()._field_Decl)) {
		_1b3032b1c_pushErr(_self_, _167474_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1b3030e7d_IsNil(_167460_d.ptr())) {
			_case_begin_1b69d04c8:;
			{
				if ((!(_1b305d40b_NilCompatible(_167442_t.ptr())))) {
					_1b3032b1c_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1b305be21_Str(_167442_t.ptr()), &__jule_any_type5)}));
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1b305ddac_Prim(_167460_d.get()._field_Kind.ptr()) != nullptr) && _1b3064c1a_IsAny(_1b305ddac_Prim(_167460_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b69ceb6a:;
			{
				if ((_1b305e5e9_Enum(_167442_t.ptr()) != nullptr)) {
					_1b3032b1c_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1b3032e3b_pushSugggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1b305e85d_TypeEnum(_167442_t.ptr()) != nullptr)) {
					_1b3032b1c_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1b305e85d_TypeEnum(_167460_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b69ce8e5:;
			{
				_1b3042a3e_castTypeEnum(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1b305e85d_TypeEnum(_167442_t.ptr()) != nullptr)) {
			_case_begin_1b69ce95b:;
			{
				_1b3042e07_castTypeEnumT(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1b305e385_Ptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1b69ce9c2:;
			{
				_1b3040795_castPtr(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1b305e121_Sptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1b69d061b:;
			{
				_1b3041026_castRef(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1b305ed36_Slc(_167442_t.ptr()) != nullptr)) {
			_case_begin_1b69d0682:;
			{
				_1b30413de_castSlc(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1b306030e_Struct(_167442_t.ptr()) != nullptr)) {
			_case_begin_1b69d06e8:;
			{
				_1b3040b5d_castStruct(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1b305ddac_Prim(_167442_t.ptr()) != nullptr)) {
			_case_begin_1b69d0770:;
			{
				_1b3042357_castPrim(_self_, _167442_t, _167460_d, _167474_errorToken);
				_1b3042676_castConstant(_self_, &(_167442_t), &(_167460_d));
			}
		}
		else {
			_case_begin_1b69ce7c4:;
			{
				_1b3032b1c_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_167442_t.ptr()), &__jule_any_type5)}));
				_167460_d=nullptr;
			}
		}
		_match_end_1b69ce76e:;
	};
	if ((_167460_d == nullptr)) {
		return nullptr;;
	};
	_167460_d.get()._field_Mutable=(_167460_d.get()._field_Mutable || ((!(_1b305d197_Mutable(_167460_d.get()._field_Kind.ptr()))) && _1b305d197_Mutable(_167442_t.ptr())));
	_167460_d.get()._field_Lvalue=false;
	_167460_d.get()._field_Decl=false;
	if (((_1b305e5e9_Enum(_167460_d.get()._field_Kind.ptr()) == nullptr) || (!(_1b305c22e_Equal(_1b305e5e9_Enum(_167460_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167442_t))))) {
		_1b30581a3_applyCastKind(&(_167460_d), &(_167442_t));
		_167460_d.get()._field_Model.cast_ptr<_1b2e69977_CastingExprModel>(&__jule_any_type100).get()._field_Token=_167474_errorToken;
	} else {
		_167460_d.get()._field_Kind=_167442_t;
	};
	_167460_d.get()._field_untyped=false;
	if (_1b3031456_IsConst(_167460_d.ptr())) {
		_167460_d.get()._field_Constant.get()._field_Kind=_1b305ddac_Prim(_167442_t.ptr()).get()._field_Kind;
	};
	return _167460_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b30437a9_evalCastT(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b305ba25_TypeKind>* _173934_t, jule::Ptr<_1b2e50c9e_Expr>* _173953_e, jule::Ptr<_1cb188a5c_Token>* _173968_et) {
	jule::Ptr<_1b305ba25_TypeKind> _174017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174017_prefix;
	});;
	if ((_1b305ed36_Slc((*(_173934_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_173953_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1b69dd261:;
				{
					_self_.get()._field_prefix=(*(_173934_t));
				}
			}
			_match_end_1b69dd1b7:;
		};
	};
	jule::Ptr<_1b3030a93_Data> _174917_d = _1b304c917_evalExprKind(_self_, (*(_173953_e)).get()._field_Kind);;
	if (((_174917_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174917_d;;
	};
	return _1b3043358_evalCastByTypeNData(_self_.ptr(), (*(_173934_t)), _174917_d, (*(_173968_et)));;
}



inline jule::Ptr<_1b3030a93_Data> _1b3043ab7_evalCast(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e538c8_CastExpr> _175632_c) {
	jule::Ptr<_1b3060e03_TypeSymbol> _175717_t = _1b2e7571e_buildType(_175632_c.get()._field_Kind);;
	jule::Bool _175813_ok = _1b2ebc7bb_checkType(_self_.get()._field_s, &(_175717_t), _self_.get()._field_lookup);;
	if ((!(_175813_ok))) {
		return nullptr;;
	};
	return _1b30437a9_evalCastT(_self_, &(_175717_t.get()._field_Kind), &(_175632_c.get()._field_Expr), &(_175632_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1b3030a93_Data> _1b3043dc5_evalNsSelection(_1b3032611_Eval* _self_, jule::Ptr<_1b2e53c80_NsSelectionExpr> _176534_s) {
	jule::Str _176613_path = _1b3074961_buildLinkPathByTokens(&(_176534_s.get()._field_Ns));;
	jule::Ptr<_1b2eab755_ImportInfo> _176717_imp = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3075e5c_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>([=](jule::Ptr<_1b2eab755_ImportInfo> _176752_imp) mutable -> jule::Bool {
		if (((_176534_s.get()._field_Ns.len() == 1LL) && (_176752_imp.get()._field_Alias == _176613_path))) {
			return true;;
		};
		return ((_176752_imp.get()._field_LinkPath == _176613_path) && _1b2eae3b2_isAccessibleViaSelection(_176752_imp.ptr()));;
	}));;
	if ((_176717_imp == nullptr)) {
		_1b3032b1c_pushErr(_self_, _176534_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_176613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1b3077997_Lookup> _177917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1b3077997_Lookup>(_176717_imp, 1);
	;
	_1b30332e3_disallowBuiltin(_self_);
	jule::Any _178417_def = _1b3035b31_getDef(_self_, _176534_s.get()._field_Ident.get()._field_Kind, false);;
	_1b3033117_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_177917_lookup;
	jule::Ptr<_1b3030a93_Data> _178717_d = _1b3039618_evalDef(_self_, _178417_def, _176534_s.get()._field_Ident);;
	return _178717_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3044326_evalStructLitExplicit(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e687bc_StructIns> _179145_s, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _179213_exprs, jule::Ptr<_1cb188a5c_Token> _179233_errorToken) {
	jule::Bool _179313_ok = _1b2eb890a_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_179145_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_179145_s.get()._field_Generics.len()), _179233_errorToken);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179145_s.get()._field_Decl))) {
		_1b3032b1c_pushErr(_self_.ptr(), _179233_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179145_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1b6999d22_pushReference(_self_.ptr(), &(_179145_s));
	_1b3037a23_checkDeprecated(_self_.ptr(), &(_179145_s.get()._field_Decl.get()._field_Directives), _179233_errorToken);
	_1b302523b_structLitChecker _180617_slc = _1b302523b_structLitChecker{._field_e=_self_, ._field_errorToken=_179233_errorToken, ._field_s=_179145_s, };;
	_1b30267d1_check(&_180617_slc, &(_179213_exprs));
	jule::Ptr<_1b3030a93_Data> _181317_d = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_179145_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1b2e6959d_StructLitExprModel>(_1b2e6959d_StructLitExprModel{._field_Strct=_179145_s, ._field_Args=_180617_slc._field_args}), &__jule_any_type102), });;
	if (_179145_s.get()._field_Decl.get()._field_CppLinked) {
		_181317_d.get()._field_Kind.get()._field_CppIdent=_179145_s.get()._field_Decl.get()._field_Ident;
	};
	return _181317_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3044634_evalStructLit(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e55e5d_StructLit> _182937_lit) {
	jule::Ptr<_1b3060e03_TypeSymbol> _183017_t = _1b2e7571e_buildType(_182937_lit.get()._field_Kind);;
	jule::Bool _183113_ok = _1b2ebc7bb_checkType(_self_.get()._field_s, &(_183017_t), _self_.get()._field_lookup);;
	if ((!(_183113_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _183617_s = _1b306030e_Struct(_183017_t.get()._field_Kind.ptr());;
	if ((_183617_s == nullptr)) {
		if ((_1b305e121_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
			_183617_s=_1b306030e_Struct(_1b305e121_Sptr(_183017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183617_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1b3032b1c_pushErr(_self_.ptr(), _182937_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1b3030a93_Data> _184917_d = _1b3044326_evalStructLitExplicit(_self_, _183617_s, _182937_lit.get()._field_Exprs, _182937_lit.get()._field_Kind.get()._field_Token);;
	if ((_1b305e121_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2e6959d_StructLitExprModel> _185121_model = _184917_d.get()._field_Model.cast_ptr<_1b2e6959d_StructLitExprModel>(&__jule_any_type102);;
		_1b3056a64_makeStructLitAlloc(&(_184917_d), &(_185121_model));
	};
	return _184917_d;;
}



inline _1b306a391_typeChecker _1b3044898_typeChecker(_1b3032611_Eval* _self_) {
	return _1b2ebb6aa_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1b3030a93_Data> _1b3044ba6_evalType(_1b3032611_Eval* _self_, jule::Ptr<_1b2e4b77d_TypeDecl> _186131_t) {
	jule::Ptr<_1b3060e03_TypeSymbol> _186217_tk = _1b2e7571e_buildType(_186131_t);;
	jule::Bool _186313_ok = _1b2ebc7bb_checkType((*(_self_))._field_s, &(_186217_tk), (*(_self_))._field_lookup);;
	if ((!(_186313_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_186217_tk.get()._field_Kind, ._field_Model=jule::Any(_186217_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _1b3044ec5_callTypeFn(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54c81_FnCallExpr>* _187435_fc, jule::Ptr<_1b3030a93_Data>* _187457_d) {
	if (((*(_187435_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187435_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_187457_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_187435_fc)).get()._field_IsCo) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	} else if (((*(_187435_fc)).get()._field_Exception != nullptr)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	};
	if (((*(_187435_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1b2e50c9e_Expr> _189021_arg = (*(_187435_fc)).get()._field_Args[0LL];;
		(*(_187457_d))=_1b30437a9_evalCastT(_self_, &((*(_187457_d)).get()._field_Kind), &(_189021_arg), &(_189021_arg.get()._field_Token));
		return;;
	};
	if (((*(_187457_d)) != nullptr)) {
		(*(_187457_d)).get()._field_Decl=false;
	};
}



inline void _1b30452e4_callBuiltinFn(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54c81_FnCallExpr>* _190038_fc, jule::Ptr<_1b3030a93_Data>* _190060_d) {
	(*(_190060_d))=_1b306009a_Fn((*(_190060_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190038_fc, _190060_d);
	if (((*(_190060_d)) == nullptr)) {
		return;;
	};
	(*(_190060_d)).get()._field_Mutable=true;
}



inline void _1b3045635_checkFnOfConcurrentCall(_1b3032611_Eval* _self_, jule::Ptr<_1b2e71132_FnIns>* _190843_f, jule::Ptr<_1cb188a5c_Token> _190854_errorToken) {
	if (_1b3033557_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_190843_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a12ac1:;
		if (it != expr_end) {
			jule::Ptr<_1b2e70263_ParamIns> *_191216_p = it;
			{
				if (_1b2e2cc8c_IsSelf((*(_191216_p)).get()._field_Decl.ptr())) {
					if ((!(_1b2e2e60c_IsRef((*(_191216_p)).get()._field_Decl.ptr())))) {
						_1b3032b1c_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1b3032e3b_pushSugggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191216_p)).get()._field_Decl.get()._field_Reference) {
					_1b3032b1c_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1b3032e3b_pushSugggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b6a12ac1:;
			++it;
			goto _iter_begin_1b6a12ac1;
		}
		_iter_end_1b6a12ac1:;
	};
}



inline void _1b3045a31_processExceptionalHandler(_1b3032611_Eval* _self_, jule::Ptr<_1b2e71132_FnIns>* _192749_f, jule::Ptr<_1b2e54c81_FnCallExpr>* _192765_fc, jule::Ptr<_1b3030a93_Data>* _192787_d) {
	jule::Bool _192813_resultNeeded = ((!(_1b2e1e102_IsVoid((*(_192749_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1b2e94ab2_scopeChecker> _192917_csc = nullptr;;
	jule::Ptr<_1b2e8d050_Scope> _193017_ch = nullptr;;
	jule::Ptr<_1b2e69b64_FnCallExprModel> _193217_model = (*(_192787_d)).get()._field_Model.cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1b2e94ab2_scopeChecker> _193617_sc = (*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0);;
	_192917_csc=_1b2ea4b27_newChildChecker(_193617_sc);
	if (_192813_resultNeeded) {
		_192917_csc.get()._field_result=(*(_192749_f));
	};
	_193017_ch=_1b2e994ac_getChild(_193617_sc.ptr());
	(*(_192765_fc)).get()._field_Exception.get()._field_Parent=_193617_sc.get()._field_tree;
	_192917_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192917_csc.get()._field_table.get()._field_Vars,1);_192917_csc.get()._field_table.get()._field_Vars.__push(_1b3056da5_buildErrorVar(&(_193017_ch), _192765_fc));;
	_1b2e99875_checkChildSsc(_193617_sc, &((*(_192765_fc)).get()._field_Exception), &(_193017_ch), &(_192917_csc));
	_193217_model.get()._field_Assigned=_192813_resultNeeded;
	_193217_model.get()._field_Except=_193017_ch;
	if ((_192813_resultNeeded && (_192917_csc.get()._field_result != nullptr))) {
		_1b3032b1c_pushErr(_self_, (*(_192765_fc)).get()._field_Token, jule::Str("assignments requires expression", 31), jule::Slice<jule::Any>());
	};
}



inline void _1b3045d61_callFn(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54c81_FnCallExpr>* _195431_fc, jule::Ptr<_1b3030a93_Data>* _195453_d) {
	jule::Ptr<_1b2e71132_FnIns> _195517_f = _1b306009a_Fn((*(_195453_d)).get()._field_Kind.ptr());;
	if (_1b2e724b8_IsBuiltin(_195517_f.ptr())) {
		_1b30452e4_callBuiltinFn(_self_, _195431_fc, _195453_d);
		return;;
	};
	if ((_1b30337bb_isGlobal(_self_.ptr()) && _195517_f.get()._field_Decl.get()._field_Exceptional)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1b3032e3b_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((!(_1b2e3d75e_IsMethod(_195517_f.get()._field_Decl.ptr()))) && _1b3073ab4_hasDirective(&(_195517_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((((!((*(_195453_d)).get()._field_Mutable)) && _1b2e3d75e_IsMethod(_195517_f.get()._field_Decl.ptr())) && (!(_195517_f.get()._field_Decl.get()._field_Statically))) && _195517_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1b3033557_isUnsafe(_self_.ptr()))) && _195517_f.get()._field_Decl.get()._field_Unsafety)) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _197917_dynamicAnnotation = (((_195517_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195517_f.get()._field_Generics.len() == 0LL)) && (_195517_f.get()._field_Params.len() > 0LL));;
	if (_197917_dynamicAnnotation) {
		_195517_f.get()._field_Generics=jule::Slice<jule::Ptr<_1b305a2e8_InsGeneric>>::alloc(_195517_f.get()._field_Decl.get()._field_Generics.len(), _195517_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195517_f.get()._field_Generics.len() != _195517_f.get()._field_Decl.get()._field_Generics.len())) {
		_1b2eb890a_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_195517_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_195517_f.get()._field_Generics.len()), (*(_195431_fc)).get()._field_Token);
		(*(_195453_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b2eb48a1_Sema> _198817_old = _self_.get()._field_s;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195517_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198817_old != _self_.get()._field_s)) {
			_198817_old.get()._field_errors=jule::append(_198817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198817_old;
	});;
	_1b3022832_fnCallArgChecker _200117_fcac = _1b3022832_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195431_fc)).get()._field_Args, ._field_errorToken=(*(_195431_fc)).get()._field_Token, ._field_dynamicAnnotation=_197917_dynamicAnnotation, };;
	if ((!(_197917_dynamicAnnotation))) {
		if ((!(_195517_f.get()._field_reloaded))) {
			jule::Bool _201021_ok = _1b2ec1814_reloadFnInsTypes(_self_.get()._field_s, _195517_f);;
			_195517_f.get()._field_reloaded=true;
			if ((!(_201021_ok))) {
				(*(_195453_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1b2e71132_FnIns> _201721_existInstance = _1b2e6edab_appendInstance(_195517_f.get()._field_Decl.ptr(), &(_195517_f));;
		if ((_201721_existInstance != nullptr)) {
			_195517_f=_201721_existInstance;
		};
	} else if ((!(_1b2ec0208_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195517_f), &(_200117_fcac._field_ignored))))) {
		(*(_195453_d))=nullptr;
		return;;
	};
	_200117_fcac._field_f=_195517_f;
	jule::Bool _202817_ok = false;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1b2eb48a1_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1b2eb48a1_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202817_ok=_1b3024bec_check(&_200117_fcac);
		({
			jule::Ptr<_1b2eb48a1_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1b2eb48a1_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202817_ok=_1b3024bec_check(&_200117_fcac);
	};
	if (_197917_dynamicAnnotation) {
		if ((!(_202817_ok))) {
			(*(_195453_d))=nullptr;
			return;;
		};
		if ((!(_1b303daa1_checkGenericFn(_self_, &(_195517_f), &((*(_195431_fc)).get()._field_Token), &((*(_195453_d)).get()._field_Model))))) {
			(*(_195453_d))=nullptr;
			return;;
		};
	};
	jule::Any _204817_callModel = (*(_195453_d)).get()._field_Model;;
	if (_1b2e1e102_IsVoid(_195517_f.get()._field_Decl.ptr())) {
		(*(_195453_d))=_1b30583a1_buildVoidData();
	} else {
		(*(_195453_d)).get()._field_Kind=_195517_f.get()._field_Result;
		(*(_195453_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1b2e69b64_FnCallExprModel> _205717_model = jule::new_ptr<_1b2e69b64_FnCallExprModel>(_1b2e69b64_FnCallExprModel{._field_Token=(*(_195431_fc)).get()._field_Token, ._field_Func=_195517_f, ._field_IsCo=(*(_195431_fc)).get()._field_IsCo, ._field_Expr=_204817_callModel, ._field_Args=_200117_fcac._field_argModels, });;
	(*(_195453_d)).get()._field_Model=jule::Any(_205717_model, &__jule_any_type34);
	(*(_195453_d)).get()._field_Mutable=true;
	if (_195517_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195431_fc)).get()._field_IsCo) {
			_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1b2eb7882_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1b2e550e4_Unhandled((*(_195431_fc)).ptr())) {
				_case_begin_1b6a3054a:;
				{
					_1b3032b1c_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1b3032e3b_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1b2e55358_Ignored((*(_195431_fc)).ptr())) {
				_case_begin_1b6a300d8:;
				{
					goto _match_end_1b6a2e1b4;
				}
			}
			else {
				_case_begin_1b6a2e22a:;
				{
					_1b3045a31_processExceptionalHandler(_self_.ptr(), &(_195517_f), _195431_fc, _195453_d);
				}
			}
			_match_end_1b6a2e1b4:;
		};
	} else if ((!(_1b2e550e4_Unhandled((*(_195431_fc)).ptr())))) {
		_1b3032b1c_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195431_fc)).get()._field_IsCo) {
		_1b3045635_checkFnOfConcurrentCall(_self_.ptr(), &(_205717_model.get()._field_Func), (*(_195431_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304616e_evalFnCall(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54c81_FnCallExpr> _209234_fc) {
	jule::Ptr<_1b305ba25_TypeKind> _209317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209317_prefix;
	});;
	{
		auto &_match_expr{ _209234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b6a33086:;
			{
				if (_209234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1b311865e_builtinCallerError(&(_self_), &(_209234_fc));;
				};
			}
		}
		_match_end_1b6a33031:;
	};
	jule::Ptr<_1b3030a93_Data> _210617_d = _1b304c917_evalExprKind(_self_, _209234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210617_d == nullptr)) {
		return nullptr;;
	};
	if (_210617_d.get()._field_Decl) {
		_1b3044ec5_callTypeFn(_self_, &(_209234_fc), &(_210617_d));
		return _210617_d;;
	};
	if ((_1b306009a_Fn(_210617_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b3032b1c_pushErr(_self_.ptr(), _209234_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b3045d61_callFn(_self_, &(_209234_fc), &(_210617_d));
	return _210617_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3046526_evalEnumStatic(_1b3032611_Eval* _self_, jule::Ptr<_1b2e82484_Enum> _212537_enm, jule::Ptr<_1cb188a5c_Token> _212549_ident) {
	jule::Ptr<_1b3030a93_Data> _212617_d = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_212537_enm, 3)}), });;
	jule::Ptr<_1b2e8198e_EnumItem> _213217_item = _1b2e83045_FindItem(_212537_enm.ptr(), _212549_ident.get()._field_Kind);;
	if ((_213217_item == nullptr)) {
		_1b3032b1c_pushErr(_self_, _212549_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212537_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212549_ident.get()._field_Kind, &__jule_any_type5)}));
	} else {
		_212617_d.get()._field_Constant=jule::new_ptr<_1b18de5da_Const>((*(_213217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212617_d.get()._field_Model=jule::Any(_212617_d.get()._field_Constant, &__jule_any_type47);
		_1b3058934_applyCastModelByEnum(&(_212617_d), _212537_enm);
	};
	return _212617_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b30468cd_evalTypeEnumStatic(_1b3032611_Eval* _self_, jule::Ptr<_1b2e83a7e_TypeEnum> _214441_enm, jule::Ptr<_1cb188a5c_Token> _214457_ident) {
	jule::Ptr<_1b2e834b8_TypeEnumItem> _214517_item = _1b2e845b8_FindItem(_214441_enm.ptr(), _214457_ident.get()._field_Kind);;
	if ((_214517_item == nullptr)) {
		_1b3032b1c_pushErr(_self_, _214457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_214441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_214457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1b305e5e9_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a3add5:;
			{
				return _1b30361b4__evalEnum(_self_, _1b305e5e9_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1b305e85d_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a3b578:;
			{
				return _1b3036879__evalTypeEnum(_self_, _1b305e85d_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1b306030e_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a3a90c:;
			{
				return _1b303703e__evalStruct(_self_, _1b306030e_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1b6a3a742:;
			{
				jule::Ptr<_1b3030a93_Data> _215821_d = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_214517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215821_d.get()._field_Model=jule::Any(_215821_d.get()._field_Kind, &__jule_any_type90);
				return _215821_d;;
			}
		}
		_match_end_1b6a3a6dc:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3046c85_evalStructStatic(_1b3032611_Eval* _self_, jule::Ptr<_1b2e687bc_StructIns> _216739_s, jule::Ptr<_1cb188a5c_Token> _216754_ident) {
	jule::Ptr<_1b3030a93_Data> _216817_d = jule::new_ptr<_1b3030a93_Data>();;
	;
	jule::Ptr<_1b2e6e85b_Fn> _217217_method = _1b2e43478_FindMethod(_216739_s.ptr(), _216754_ident.get()._field_Kind, true);;
	if ((_217217_method != nullptr)) {
		if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _217217_method.get()._field_Public, _217217_method.get()._field_Token)))) {
			_1b3032b1c_pushErr(_self_, _216754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
			_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2e71132_FnIns> _217921_ins = _1b2e6ead1_instance(_217217_method);;
		_217921_ins.get()._field_Owner=_216739_s;
		_1b68e57d9_pushReference(_self_, &(_217921_ins));
		_216817_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6b0d8_StructStaticIdentExprModel>(_1b2e6b0d8_StructStaticIdentExprModel{._field_Structure=_216739_s, ._field_Expr=_216817_d.get()._field_Model, ._field_Method=_217921_ins}), &__jule_any_type103);
		_216817_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_217921_ins, 1)});
		return _216817_d;;
	};
	jule::Ptr<_1b2ed8034_Var> _219317_sttc = _1b2e31411_FindStatic(_216739_s.ptr(), _216754_ident.get()._field_Kind);;
	if ((_219317_sttc != nullptr)) {
		return _1b3038da9_evalVar(_self_, _219317_sttc, _216754_ident);;
	};
	_1b3032b1c_pushErr(_self_, _216754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b3030a93_Data> _1b30471d6_evalTraitSubIdent(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _220240_d, jule::Ptr<_1b2e8033e_Trait> _220254_trt, jule::Ptr<_1cb188a5c_Token> _220271_ident) {
	jule::Ptr<_1b2e6e85b_Fn> _220317_f = _1b2e811b9_FindMethod(_220254_trt.ptr(), _220271_ident.get()._field_Kind);;
	if ((_220317_f == nullptr)) {
		_1b3032b1c_pushErr(_self_, _220271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_220271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b2e6ead1_instance(_220317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(_1b2e6a9cd_TraitSubIdentExprModel{._field_Token=_220271_ident, ._field_Expr=_220240_d.get()._field_Model, ._field_Method=_220317_f, ._field_Trt=_220254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b30476d1_evalStructSubIdent(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _222141_d, jule::Ptr<_1b2e687bc_StructIns> _222155_s, jule::Ptr<_1b2e54203_SubIdentExpr> _222174_si, jule::Bool _222193_ref) {
	jule::Ptr<_1b2e685d0_FieldIns> _222217_f = _1b2e253e4_FindField(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind);;
	if ((_222217_f != nullptr)) {
		if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_f.get()._field_Decl.get()._field_Public, _222217_f.get()._field_Decl.get()._field_Token)))) {
			_1b3032b1c_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_222217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _222921_model = jule::new_ptr<_1b2e6adeb_StructSubIdentExprModel>(_1b2e6adeb_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1b3030a93_Data>((*(_222141_d))), ._field_Field=_222217_f, ._field_Owner=_222155_s});;
		_222141_d.get()._field_Model=jule::Any(_222921_model, &__jule_any_type71);
		_222141_d.get()._field_Kind=_222217_f.get()._field_Kind;
		_222141_d.get()._field_Lvalue=true;
		if ((_222217_f.get()._field_Decl.get()._field_Mutable && (!(_222141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*(_self_))._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_1b6a4bb3d:;
					{
						jule::Ptr<_1b2e94ab2_scopeChecker> _224325_scope = _1b2e97c08_getRoot((*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0));;
						_222141_d.get()._field_Mutable=((_224325_scope.get()._field_owner != nullptr) && (_224325_scope.get()._field_owner.get()._field_Owner == _222155_s));
					}
				}
				_match_end_1b6a4bad8:;
			};
		};
		return _222141_d;;
	};
	;
	jule::Ptr<_1b2e6e85b_Fn> _225217_m = _1b2e43478_FindMethod(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_225217_m == nullptr)) {
		_1b3032b1c_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_222155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_222174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), _225217_m.get()._field_Public, _225217_m.get()._field_Token)))) {
		_1b3032b1c_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_225217_m.get()._field_Ident, &__jule_any_type5)}));
		_1b3032e3b_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	if ((_1b2e2e60c_IsRef(_225217_m.get()._field_Params[0LL].ptr()) && (!(_222193_ref)))) {
		_1b3032b1c_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1b3037a23_checkDeprecated(_self_, &(_225217_m.get()._field_Directives), _222174_si.get()._field_Ident);
	jule::Ptr<_1b2e71132_FnIns> _226817_ins = _1b2e6ead1_instance(_225217_m);;
	_226817_ins.get()._field_Owner=_222155_s;
	_1b68e57d9_pushReference(_self_, &(_226817_ins));
	jule::Ptr<_1b3030a93_Data> _227117_model = jule::new_ptr<_1b3030a93_Data>((*(_222141_d)));;
	_222141_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6adeb_StructSubIdentExprModel>(_1b2e6adeb_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=_227117_model, ._field_Method=_226817_ins, ._field_Owner=_222155_s}), &__jule_any_type71);
	_222141_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_226817_ins, 1)});
	return _222141_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3047a88_evalSliceSubIdent(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _228240_d, jule::Ptr<_1cb188a5c_Token> _228254_ident) {
	{
		auto &_match_expr{ _228254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b6a54d66:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>::make({jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311831d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1b2e6b69e_CommonSubIdentExprModel>(_1b2e6b69e_CommonSubIdentExprModel{._field_ExprKind=_228240_d.get()._field_Kind, ._field_Expr=_228240_d.get()._field_Model, ._field_Token=_228254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b6a55141:;
			{
				_1b3032b1c_pushErr(_self_, _228254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_228240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_228254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a54dee:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3047e40_evalArraySubIdent(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _231940_d, jule::Ptr<_1cb188a5c_Token> _231954_ident) {
	{
		auto &_match_expr{ _231954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b6a563a6:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>::make({jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311831d_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1b2e6b69e_CommonSubIdentExprModel>(_1b2e6b69e_CommonSubIdentExprModel{._field_ExprKind=_231940_d.get()._field_Kind, ._field_Expr=_231940_d.get()._field_Model, ._field_Token=_231954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b6a58551:;
			{
				_1b3032b1c_pushErr(_self_, _231954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_231940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a584a7:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304824d_evalIntTypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _235636_ident) {
	;
	{
		auto &_match_expr{ _235636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a5c91d:;
			{
				jule::Ptr<_1b18de5da_Const> _236021_c = static__1b18dea5d_NewI64(static_cast<jule::I64>(_1b18d7d0e_MaxI(jule::Str("int", 3))));;
				_236021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236021_c, &__jule_any_type47), ._field_Constant=_236021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a5c984:;
			{
				jule::Ptr<_1b18de5da_Const> _236821_c = static__1b18dea5d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1b18d82b5_Min(jule::Str("int", 3)))));;
				_236821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236821_c, &__jule_any_type47), ._field_Constant=_236821_c});;
			}
		}
		else {
			_case_begin_1b6a5bbc5:;
			{
				_1b3032b1c_pushErr(_self_, _235636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_235636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a5ba2c:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304855b_evalUintTypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ _238137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a5ca3e:;
			{
				jule::Ptr<_1b18de5da_Const> _238521_c = static__1b18ded05_NewU64(static_cast<jule::U64>(_1b18d80a6_MaxU(jule::Str("uint", 4))));;
				_238521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238521_c, &__jule_any_type47), ._field_Constant=_238521_c});;
			}
		}
		else {
			_case_begin_1b6a60734:;
			{
				_1b3032b1c_pushErr(_self_, _238137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_238137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a6058b:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3048869_evalI8TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _239835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a62857:;
			{
				jule::Ptr<_1b18de5da_Const> _240421_c = static__1b18dea5d_NewI64(127LL);;
				_240421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240421_c, &__jule_any_type47), ._field_Constant=_240421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a643b4:;
			{
				jule::Ptr<_1b18de5da_Const> _241221_c = static__1b18dea5d_NewI64(-128LL);;
				_241221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241221_c, &__jule_any_type47), ._field_Constant=_241221_c});;
			}
		}
		else {
			_case_begin_1b6a63605:;
			{
				_1b3032b1c_pushErr(_self_, _239835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a62318:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3048b77_evalI16TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _242536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a6830d:;
			{
				jule::Ptr<_1b18de5da_Const> _243121_c = static__1b18dea5d_NewI64(32767LL);;
				_243121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243121_c, &__jule_any_type47), ._field_Constant=_243121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a68374:;
			{
				jule::Ptr<_1b18de5da_Const> _243921_c = static__1b18dea5d_NewI64(-32768LL);;
				_243921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243921_c, &__jule_any_type47), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_1b6a6764d:;
			{
				_1b3032b1c_pushErr(_self_, _242536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_242536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a6754e:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3048e85_evalI32TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _245236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a6c257:;
			{
				jule::Ptr<_1b18de5da_Const> _245821_c = static__1b18dea5d_NewI64(2147483647LL);;
				_245821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245821_c, &__jule_any_type47), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a6c2bd:;
			{
				jule::Ptr<_1b18de5da_Const> _246621_c = static__1b18dea5d_NewI64(-2147483648LL);;
				_246621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246621_c, &__jule_any_type47), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_1b6a6b597:;
			{
				_1b3032b1c_pushErr(_self_, _245236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_245236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a6b498:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3049293_evalI64TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a711a1:;
			{
				jule::Ptr<_1b18de5da_Const> _248521_c = static__1b18dea5d_NewI64(jule::MAX_I64);;
				_248521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248521_c, &__jule_any_type47), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a71217:;
			{
				jule::Ptr<_1b18de5da_Const> _249321_c = static__1b18dea5d_NewI64(jule::MIN_I64);;
				_249321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249321_c, &__jule_any_type47), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_1b6a704e1:;
			{
				_1b3032b1c_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a703e2:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b30495a1_evalU8TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _250635_ident) {
	;
	;
	{
		auto &_match_expr{ _250635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a742e7:;
			{
				jule::Ptr<_1b18de5da_Const> _251121_c = static__1b18ded05_NewU64(255LLU);;
				_251121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_251121_c, &__jule_any_type47), ._field_Constant=_251121_c});;
			}
		}
		else {
			_case_begin_1b6a73b76:;
			{
				_1b3032b1c_pushErr(_self_, _250635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_250635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a73db8:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b30498ae_evalU16TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _252436_ident) {
	;
	;
	{
		auto &_match_expr{ _252436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a76c78:;
			{
				jule::Ptr<_1b18de5da_Const> _252921_c = static__1b18ded05_NewU64(65535LLU);;
				_252921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252921_c, &__jule_any_type47), ._field_Constant=_252921_c});;
			}
		}
		else {
			_case_begin_1b6a76607:;
			{
				_1b3032b1c_pushErr(_self_, _252436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_252436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a76849:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3049bbc_evalU32TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _254236_ident) {
	;
	;
	{
		auto &_match_expr{ _254236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a79709:;
			{
				jule::Ptr<_1b18de5da_Const> _254721_c = static__1b18ded05_NewU64(4294967295LLU);;
				_254721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254721_c, &__jule_any_type47), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1b6a79088:;
			{
				_1b3032b1c_pushErr(_self_, _254236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_254236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a792ca:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3049eca_evalU64TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _256036_ident) {
	;
	;
	{
		auto &_match_expr{ _256036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a7c18a:;
			{
				jule::Ptr<_1b18de5da_Const> _256521_c = static__1b18ded05_NewU64(jule::MAX_U64);;
				_256521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256521_c, &__jule_any_type47), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1b6a7ba19:;
			{
				_1b3032b1c_pushErr(_self_, _256036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_256036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a7bc5b:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304a2d8_evalF32TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _257836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a7ec2b:;
			{
				jule::Ptr<_1b18de5da_Const> _258521_c = static__1b18e05db_NewF64(340282346638528860000000000000000000000.0);;
				_258521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258521_c, &__jule_any_type47), ._field_Constant=_258521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a80c2c:;
			{
				jule::Ptr<_1b18de5da_Const> _259321_c = static__1b18e05db_NewF64(-340282346638528860000000000000000000000.0);;
				_259321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259321_c, &__jule_any_type47), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b6a80c93:;
			{
				jule::Ptr<_1b18de5da_Const> _260121_c = static__1b18e05db_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_260121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_260121_c, &__jule_any_type47), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1b6a7eeb2:;
			{
				_1b3032b1c_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type99),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a7ee5c:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304a5e6_evalF64TypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1cb188a5c_Token> _261436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b6a85094:;
			{
				jule::Ptr<_1b18de5da_Const> _262121_c = static__1b18e05db_NewF64(jule::MAX_F64);;
				_262121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262121_c, &__jule_any_type47), ._field_Constant=_262121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b6a86095:;
			{
				jule::Ptr<_1b18de5da_Const> _262921_c = static__1b18e05db_NewF64(jule::MIN_F64);;
				_262921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262921_c, &__jule_any_type47), ._field_Constant=_262921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b6a8610b:;
			{
				jule::Ptr<_1b18de5da_Const> _263721_c = static__1b18e05db_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263721_c, &__jule_any_type47), ._field_Constant=_263721_c});;
			}
		}
		else {
			_case_begin_1b6a8532a:;
			{
				_1b3032b1c_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type99),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a852c5:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304a99d_evalPrimStatic(_1b3032611_Eval* _self_, jule::Str _265033_kind, jule::Ptr<_1cb188a5c_Token> _265044_ident) {
	{
		auto &_match_expr{ _265033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b6a88edd:;
			{
				return _1b304824d_evalIntTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b6a8a42e:;
			{
				return _1b304855b_evalUintTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b6a8a495:;
			{
				return _1b3048869_evalI8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b6a89890:;
			{
				return _1b3048b77_evalI16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b6a89906:;
			{
				return _1b3048e85_evalI32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b6a8996c:;
			{
				return _1b3049293_evalI64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b6a899d3:;
			{
				return _1b30495a1_evalU8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b6a8a50b:;
			{
				return _1b30498ae_evalU16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b6a8a572:;
			{
				return _1b3049bbc_evalU32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b6a8a5d8:;
			{
				return _1b3049eca_evalU64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b6a8a64e:;
			{
				return _1b304a2d8_evalF32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b6a8a6b5:;
			{
				return _1b304a5e6_evalF64TypeStatic(_self_, _265044_ident);;
			}
		}
		else {
			_case_begin_1b6a862c6:;
			{
				_1b3032b1c_pushErr(_self_, _265044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_265033_kind, &__jule_any_type5),jule::Any(_265044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a86271:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304ad55_evalTypeStatic(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _268237_d, jule::Ptr<_1b2e54203_SubIdentExpr> _268251_si) {
	{
		
		if ((_1b305ddac_Prim(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a90731:;
			{
				return _1b304a99d_evalPrimStatic(_self_, _1b3061ad5_Str(_1b305ddac_Prim(_268237_d.get()._field_Kind.ptr()).ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1b305e5e9_Enum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a90797:;
			{
				return _1b3046526_evalEnumStatic(_self_, _1b305e5e9_Enum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1b305e85d_TypeEnum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a905aa:;
			{
				return _1b30468cd_evalTypeEnumStatic(_self_, _1b305e85d_TypeEnum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1b306030e_Struct(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a90621:;
			{
				return _1b3046c85_evalStructStatic(_self_, _1b306030e_Struct(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1b6a8e796:;
			{
				_1b3032b1c_pushErr(_self_, _268251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_268237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6a8e6ec:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304b20c_evalObjSubIdent(_1b3032611_Eval* _self_, jule::Ptr<_1b3030a93_Data> _269838_d, jule::Ptr<_1b2e54203_SubIdentExpr> _269852_si) {
	if (_1cb18b301_IsIgnoreIdent(_269852_si.get()._field_Ident.get()._field_Kind)) {
		_1b3032b1c_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _270417_kind = _269838_d.get()._field_Kind;;
	{
		
		if ((_1b305e385_Ptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a9524c:;
			{
				jule::Ptr<_1b306856a_Ptr> _270717_ptr = _1b305e385_Ptr(_269838_d.get()._field_Kind.ptr());;
				if (_1b306903d_IsUnsafe(_270717_ptr.ptr())) {
					goto _match_end_1b6a9512b;
				};
				if (((!(_269852_si.get()._field_IsSelf)) && (!(_1b3033557_isUnsafe(_self_))))) {
					_1b3032b1c_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_270417_kind=_1b305e385_Ptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1b305e121_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a952b3:;
			{
				_270417_kind=_1b305e121_Sptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1b6a9512b:;
	};
	{
		
		if ((_1b3060573_Trait(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6a97b12:;
			{
				return _1b30471d6_evalTraitSubIdent(_self_, _269838_d, _1b3060573_Trait(_269838_d.get()._field_Kind.ptr()), _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1b306030e_Struct(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1b6a97b89:;
			{
				jule::Ptr<_1b2e687bc_StructIns> _272317_s = _1b306030e_Struct(_270417_kind.ptr());;
				if (_1b3057845_isInstancedStruct(_272317_s)) {
					jule::Bool _272525_usedReferenceElem = (_1b305e121_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr);;
					return _1b30476d1_evalStructSubIdent(_self_, _269838_d, _1b306030e_Struct(_270417_kind.ptr()), _269852_si, _272525_usedReferenceElem);;
				};
			}
		}
		else if ((_1b305ed36_Slc(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1b6a97c11:;
			{
				return _1b3047a88_evalSliceSubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1b305eac2_Arr(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1b6a97c88:;
			{
				return _1b3047e40_evalArraySubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		_match_end_1b6a97a35:;
	};
	_1b3032b1c_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_269838_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b3030a93_Data> _1b304b51a_evalSubIdent(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54203_SubIdentExpr> _273736_si) {
	jule::Ptr<_1b305ba25_TypeKind> _273817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273817_prefix;
	});;
	jule::Ptr<_1b3030a93_Data> _274217_d = _1b304c917_evalExprKind(_self_, _273736_si.get()._field_Expr.get()._field_Kind);;
	if ((_274217_d == nullptr)) {
		return nullptr;;
	};
	if (_274217_d.get()._field_Decl) {
		return _1b304ad55_evalTypeStatic(_self_.ptr(), _274217_d, _273736_si);;
	};
	return _1b304b20c_evalObjSubIdent(_self_.ptr(), _274217_d, _273736_si);;
}



inline jule::Ptr<_1b3030a93_Data> _1b304b828_evalTuple(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e5192b_TupleExpr> _275433_tup) {
	jule::Ptr<_1b30664e1_Tuple> _275517_tupT = jule::new_ptr<_1b30664e1_Tuple>();;
	_275517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>::alloc(0LL, _275433_tup.get()._field_Expr.len());
	jule::Ptr<_1b2e6b88b_TupleExprModel> _275817_model = jule::new_ptr<_1b2e6b88b_TupleExprModel>(_1b2e6b88b_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1b3030a93_Data>>::alloc(0LL, _275433_tup.get()._field_Expr.len())});;
	jule::Bool _276217_ok = true;;
	{
		auto expr = &(_275433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa19d9:;
		if (it != expr_end) {
			jule::Ptr<_1b2e50c9e_Expr> _276321_expr = *it;
			{
				jule::Ptr<_1b3030a93_Data> _276421_d = _1b304c917_evalExprKind(_self_, _276321_expr.get()._field_Kind);;
				if ((_276421_d == nullptr)) {
					_276217_ok=false;
					goto _iter_next_1b6aa19d9;
				};
				_275517_tupT.get()._field_Types = jule::alloc_for_append(_275517_tupT.get()._field_Types,1);_275517_tupT.get()._field_Types.__push(_276421_d.get()._field_Kind);;
				_275817_model.get()._field_Datas = jule::alloc_for_append(_275817_model.get()._field_Datas,1);_275817_model.get()._field_Datas.__push(_276421_d);;
			}
			_iter_next_1b6aa19d9:;
			++it;
			goto _iter_begin_1b6aa19d9;
		}
		_iter_end_1b6aa19d9:;
	};
	if ((!(_276217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_275517_tupT, 9)}), ._field_Model=jule::Any(_275817_model, &__jule_any_type88), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b304bbd0_evalMap(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b3067019_Map> _278331_m, jule::Ptr<_1b2e563d1_BraceLit> _278344_lit) {
	jule::Ptr<_1b2e6a604_MapExprModel> _278417_model = jule::new_ptr<_1b2e6a604_MapExprModel>(_1b2e6a604_MapExprModel{._field_KeyKind=_278331_m.get()._field_Key, ._field_ValKind=_278331_m.get()._field_Val, });;
	{
		auto expr = &(_278344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa4a97:;
		if (it != expr_end) {
			jule::Ptr<_1b2e50c9e_Expr> _278921_expr = *it;
			{
				{
					auto &_match_expr{ _278921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1b6aa52b2:;
						{
							goto _match_end_1b6aa535b;
						}
					}
					else {
						_case_begin_1b6aa54e3:;
						{
							_1b3032b1c_pushErr(_self_.ptr(), _278344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b6aa535b:;
				};
				jule::Ptr<_1b2e56ba6_KeyValPair> _279921_pair = _278921_expr.get()._field_Kind.cast_ptr<_1b2e56ba6_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_1b3030a93_Data> _280121_key = _1b304c917_evalExprKind(_self_, _279921_pair.get()._field_Key.get()._field_Kind);;
				if ((_280121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1b3030a93_Data> _280621_val = _1b304c917_evalExprKind(_self_, _279921_pair.get()._field_Val.get()._field_Kind);;
				if ((_280621_val == nullptr)) {
					return nullptr;;
				};
				_1b2ebe449_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Key), &(_280121_key), _279921_pair.get()._field_Colon);
				_1b2ebe449_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Val), &(_280621_val), _279921_pair.get()._field_Colon);
				_278417_model.get()._field_Entries = jule::alloc_for_append(_278417_model.get()._field_Entries,1);_278417_model.get()._field_Entries.__push(jule::new_ptr<_1b2e6a417_KeyValPairExprModel>(_1b2e6a417_KeyValPairExprModel{._field_Key=_280121_key.get()._field_Model, ._field_Val=_280621_val.get()._field_Model}));;
			}
			_iter_next_1b6aa4a97:;
			++it;
			goto _iter_begin_1b6aa4a97;
		}
		_iter_end_1b6aa4a97:;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_278331_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278417_model, &__jule_any_type104), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b304bedd_evalBraceLit(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e563d1_BraceLit> _282736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b6aa9d44:;
			{
				_1b3032b1c_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b30607d7_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b6aaa619:;
			{
				return _1b304bbd0_evalMap(_self_, _1b30607d7_Map(_self_.get()._field_prefix.ptr()), _282736_lit);;
			}
		}
		else if ((_1b306030e_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b6aaa680:;
			{
				return _1b3044326_evalStructLitExplicit(_self_, _1b306030e_Struct(_self_.get()._field_prefix.ptr()), _282736_lit.get()._field_Exprs, _282736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1b6aa99ae:;
			{
				_1b3032b1c_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b6aa9085:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304c2eb_evalAnonFn(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e5d20c_FnDecl> _284234_decl) {
	_1b306a391_typeChecker _284317_tc = _1b306a391_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1b2e71132_FnIns> _284817_ins = _1b3071bd3_buildFn(&_284317_tc, _284234_decl);;
	if ((_284817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b6aae1cd:;
			{
				jule::Ptr<_1b2e94ab2_scopeChecker> _285421_sc = _self_.get()._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0);;
				jule::Ptr<_1b2e94ab2_scopeChecker> _285521_scc = _1b2ea4b27_newChildChecker(_285421_sc);;
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b2e9382a_scopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b2e93c9d_scopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_childIndex=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284817_ins;
				_1b2ed34b3_checkFnInsSc(_self_.get()._field_s.ptr(), &(_284817_ins), &(_285521_scc));
			}
		}
		else {
			_case_begin_1b6aae079:;
			{
				_1b2ed3a57_checkFnIns(_self_.get()._field_s, &(_284817_ins));
			}
		}
		_match_end_1b6aae024:;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_284817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1b2e6a22a_AnonFnExprModel>(_1b2e6a22a_AnonFnExprModel{._field_Func=_284817_ins, ._field_Global=_1b30337bb_isGlobal(_self_.ptr())}), &__jule_any_type105), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b304c609_evalBinop(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e54676_BinopExpr> _287733_op) {
	_1b3050244_binaryEval _287817_bs = static__1b305081b_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1b3061772_Prim> _288117_prim = _1b305ddac_Prim(_self_.get()._field_prefix.ptr());;
		if (((_288117_prim == nullptr) || (!(_1b18de0ce_IsNum(_1b3061ad5_Str(_288117_prim.ptr())))))) {
			jule::Ptr<_1b305ba25_TypeKind> _288325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288325_prefix;
			});;
			return _1b3055cc7_eval(&_287817_bs, &(_287733_op));;
		};
	};
	return _1b3055cc7_eval(&_287817_bs, &(_287733_op));;
}



inline jule::Ptr<_1b3030a93_Data> _1b304c917_evalExprKind(jule::Ptr<_1b3032611_Eval> _self_, jule::Any _289236_kind) {
	{
		auto &_match_expr{ _289236_kind };
		
		if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b6ab35de:;
			{
				jule::Ptr<_1b2e5108a_RangeExpr> _289521_e = _289236_kind.cast_ptr<_1b2e5108a_RangeExpr>(&__jule_any_type106);;
				return _1b304c917_evalExprKind(_self_, _289521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b6ab63d3:;
			{
				return _1b303546b_evalLit(_self_.ptr(), _289236_kind.cast_ptr<_1b2e51cd3_LitExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b6ab6449:;
			{
				return _1b3039926_evalIdent(_self_.ptr(), _289236_kind.cast_ptr<_1b2e52960_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b6ab5e60:;
			{
				return _1b3039c34_evalUnary(_self_, _289236_kind.cast_ptr<_1b2e53169_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b6ab5ec6:;
			{
				return _1b303a042_evalVariadic(_self_, _289236_kind.cast_ptr<_1b2e53521_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b6ab604d:;
			{
				return _1b303a350_evalUnsafe(_self_, _289236_kind.cast_ptr<_1b2e524dc_UnsafeExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b6ab60c5:;
			{
				return _1b303adbc_evalSliceExpr(_self_, _289236_kind.cast_ptr<_1b2e5738d_SliceExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b6ab64c1:;
			{
				return _1b303e211_evalIndexing(_self_, _289236_kind.cast_ptr<_1b2e57c0c_IndexingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b6ab6548:;
			{
				return _1b30403cc_evalSlicing(_self_, _289236_kind.cast_ptr<_1b2e58317_SlicingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b6ab65c0:;
			{
				return _1b3043ab7_evalCast(_self_, _289236_kind.cast_ptr<_1b2e538c8_CastExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b6ab6647:;
			{
				return _1b3043dc5_evalNsSelection(_self_.ptr(), _289236_kind.cast_ptr<_1b2e53c80_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b6ab66be:;
			{
				return _1b3044634_evalStructLit(_self_, _289236_kind.cast_ptr<_1b2e55e5d_StructLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b6ab6746:;
			{
				return _1b3044ba6_evalType(_self_.ptr(), _289236_kind.cast_ptr<_1b2e4b77d_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b6ab67bd:;
			{
				return _1b304616e_evalFnCall(_self_, _289236_kind.cast_ptr<_1b2e54c81_FnCallExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b6ab6845:;
			{
				return _1b304b51a_evalSubIdent(_self_, _289236_kind.cast_ptr<_1b2e54203_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b6ab68bc:;
			{
				return _1b304b828_evalTuple(_self_, _289236_kind.cast_ptr<_1b2e5192b_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b6ab6944:;
			{
				return _1b304bedd_evalBraceLit(_self_, _289236_kind.cast_ptr<_1b2e563d1_BraceLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b6ab69bb:;
			{
				return _1b304c2eb_evalAnonFn(_self_, _289236_kind.cast_ptr<_1b2e5d20c_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b6ab6a43:;
			{
				return _1b304c609_evalBinop(_self_, _289236_kind.cast_ptr<_1b2e54676_BinopExpr>(&__jule_any_type115));;
			}
		}
		else {
			_case_begin_1b6ab5d0b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ab5c1d:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304cc25_eval(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e50c9e_Expr> _294028_expr) {
	jule::Ptr<_1b3030a93_Data> _294117_d = _1b304c917_evalExprKind(_self_, _294028_expr.get()._field_Kind);;
	if (((_294117_d == nullptr) || (_294117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1b306009a_Fn(_294117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ac11ac:;
			{
				jule::Ptr<_1b2e71132_FnIns> _294821_f = _1b306009a_Fn(_294117_d.get()._field_Kind.ptr());;
				if (_1b2e724b8_IsBuiltin(_294821_f.ptr())) {
					goto _match_end_1b6ac107a;
				};
				if ((_294821_f.get()._field_Generics.len() != _294821_f.get()._field_Decl.get()._field_Generics.len())) {
					_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				};
				if (((!(_294821_f.get()._field_Decl.get()._field_Statically)) && _1b2e3d75e_IsMethod(_294821_f.get()._field_Decl.ptr()))) {
					_1b2eb7563_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b6ac107a:;
	};
	return _294117_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b304d033_evalExpr(jule::Ptr<_1b3032611_Eval> _self_, jule::Ptr<_1b2e50c9e_Expr> _296632_expr) {
	jule::Ptr<_1b3030a93_Data> _296717_d = _1b304cc25_eval(_self_, _296632_expr);;
	{
		
		if ((_296717_d == nullptr)) {
			_case_begin_1b6ac4b83:;
			{
				return nullptr;;
			}
		}
		else if (_296717_d.get()._field_Decl) {
			_case_begin_1b6ac4c0a:;
			{
				_1b3032b1c_pushErr(_self_.ptr(), _296632_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b6ac4ab7:;
			{
				return _296717_d;;
			}
		}
		_match_end_1b6ac4a51:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b3032611_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1b304d4a6_unaryEval static__1b304d95c_new(jule::Ptr<_1b3032611_Eval> _298723_e) {
	return _1b304d4a6_unaryEval{._field_e=_298723_e, };;
}



inline void _1b304db38_minus(_1b304d4a6_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b6ac66ce:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ac639e:;
			{
				if ((!(_1b18de0ce_IsNum(_1b305be21_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b306030e_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ac6415:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b6ac6338:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b6ac615c:;
	};
	if (_1b3031456_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1b18e3c2c_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ac9c43:;
				{
					_1b18e2d3b_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1b18e1884_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1b18e327b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ac9cba:;
				{
					_1b18e2346_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1b18e0dd3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1b18e34e0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ac9d42:;
				{
					_1b18e2346_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1b18e1ae8_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b6ac9b55:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b304dd14_plus(_1b304d4a6_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b6ace253:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6acde23:;
			{
				if ((!(_1b18de0ce_IsNum(_1b305be21_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b306030e_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6acde89:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b6acddac:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b6acdce1:;
	};
	if (_1b3031456_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1b18e3c2c_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ad27b7:;
				{
					_1b18e2d3b_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1b18e1884_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1b18e327b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ad283e:;
				{
					_1b18e2346_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1b18e0dd3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1b18e34e0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ad28b6:;
				{
					_1b18e2346_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1b18e1ae8_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b6ad26c9:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b304dee0_caret(_1b304d4a6_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b6ad6cc7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ad6997:;
			{
				if ((!(_1b18dda18_IsInt(_1b305be21_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b306030e_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ad6a0d:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b6ad6931:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b6ad6865:;
	};
	if (_1b3031456_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1b18e327b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ada32a:;
				{
					_1b18e2346_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1b18e0dd3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1b18e34e0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6ada3a2:;
				{
					_1b18e25bb_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1b18e1147_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b6ada24d:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b304e1bb_excl(_1b304d4a6_unaryEval* _self_) {
	jule::Ptr<_1b3061772_Prim> _310613_t = _1b305ddac_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_310613_t == nullptr) || (!(_1b3064742_IsBool(_310613_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1b3031456_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1b18e3754_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b6adeb7b:;
				{
					_1b18e2841_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1b18e13ab_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1b6adea7c:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b304e397_star(_1b304d4a6_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1b305e385_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ae2a2a:;
			{
				if ((!(_1b3033557_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b306856a_Ptr> _313821_t = _1b305e385_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1b306903d_IsUnsafe(_313821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_313821_t.get()._field_Elem;
			}
		}
		else if ((_1b305e121_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6ae26ea:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1b305e121_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1b6ae2684:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b6ae261d:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1b304e573_amper(_1b304d4a6_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b6ae7359:;
			{
				jule::Ptr<_1b2e6959d_StructLitExprModel> _315821_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1b2e6959d_StructLitExprModel>(&__jule_any_type102);;
				_1b3056a64_makeStructLitAlloc(&((*(_self_))._field_d), &(_315821_lit));
			}
		}
		else {
			_case_begin_1b6ae6c4e:;
			{
				{
					
					if (_1b3073d5b_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b6ae7898:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b306856a_Ptr>(_1b306856a_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 12)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1b6ae72e3:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1b6ae7227:;
				};
			}
		}
		_match_end_1b6ae6bc7:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1b304e74e_typeDecl(_1b304d4a6_unaryEval* _self_) {
	_1b306a391_typeChecker _318217_tc = _1b306a391_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b6aea923:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3070572_buildPtrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b6aeceec:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b306ee56_buildSptrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 7)});
			}
		}
		else {
			_case_begin_1b6aeb8be:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b6aeb869:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1b304e92a_evalData(_1b304d4a6_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b6b00351:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _320521_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1b304c917_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
				(*(_self_))._field_e.get()._field_prefix=_320521_prefix;
			}
		}
		else {
			_case_begin_1b6aeee22:;
			{
				(*(_self_))._field_d=_1b304c917_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1b6aeedbc:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b304ec05_eval(_1b304d4a6_unaryEval* _self_, jule::Ptr<_1b2e53169_UnaryExpr> _321427_u) {
	(*(_self_))._field_u=_321427_u;
	_1b304e92a_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1b304e74e_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _322513_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b6b044dc:;
			{
				_1b304db38_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b6b03ed1:;
			{
				_1b304dd14_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b6b04047:;
			{
				_1b304dee0_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b6b040ad:;
			{
				_1b304e1bb_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b6b04124:;
			{
				_1b304e397_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b6b04685:;
			{
				_1b304e573_amper(_self_);
			}
		}
		else {
			_case_begin_1b6b03e6a:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b6b03ba1:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b6b0470c:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str(_322513_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1b3031456_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b6b0649a:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type47);
			}
		}
		_match_end_1b6b06445:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b304d4a6_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1b3050244_binaryEval static__1b305081b_newPlain(jule::Ptr<_1b3032611_Eval> _326328_e) {
	return _1b3050244_binaryEval{._field_e=_326328_e, };;
}



inline _1b3050244_binaryEval static__1b3050b5c_new(jule::Ptr<_1b3032611_Eval> _326923_e, jule::Ptr<_1cb188a5c_Token> _326937_op) {
	return _1b3050244_binaryEval{._field_e=_326923_e, ._field_op=_326937_op};;
}



inline jule::Bool _1b3050dc1_checkTypeCompatibility(_1b3050244_binaryEval* _self_) {
	return _1b2ebe89a_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1b3051168_checkStructCommonOperatorCompatibility(_1b3050244_binaryEval* _self_) {
	jule::Ptr<_1b2e71132_FnIns> _328317_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b6b0a779:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b6b0be51:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b6b0beb7:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b6b0ac41:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b6b0aca7:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b6b0ad1d:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b6b0ad84:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b6b0c061:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b6b0c0c7:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b6b0c13d:;
			{
				_328317_overload=_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b6b0abca:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b6b0ab53:;
	};
	if ((_328317_overload == nullptr)) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1b2e70263_ParamIns> _331517_p = _328317_overload.get()._field_Params[1LL];;
	return _1b2ebe449_checkAssignType((*(_self_))._field_e.get()._field_s, _331517_p.get()._field_Decl.get()._field_Reference, &(_331517_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1b3030a93_Data> _1b3051410_evalNil(_1b3050244_binaryEval* _self_) {
	if ((!(_1b305d40b_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type116),jule::Any(_1b305be21_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b159c6:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b15b4c:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type116)}));
				return nullptr;;
			}
		}
		_match_end_1b6b15ad6:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3051674_evalEnum(_1b3050244_binaryEval* _self_) {
	jule::Ptr<_1b2e82484_Enum> _334017_enm = _1b305e5e9_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b17db3:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _334421_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1b305e5e9_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334421_rkind=_1b305e5e9_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1b2ebe89a_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_334017_enm.get()._field_Kind.get()._field_Kind), &(_334421_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1b6b17d5d:;
	};
	if (((_1b305e5e9_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_334017_enm != _1b305e5e9_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b6b1770e:;
			{
				if ((!(_1b18de0ce_IsNum(_1b305be21_Str(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b6b1ceb7:;
			{
				jule::Ptr<_1b2e8198e_EnumItem> _337817_first = _334017_enm.get()._field_Items[0LL];;
				{
					
					if (_1b18e327b_IsI64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b6b20c78:;
						{
							if ((_1b18e0dd3_ReadI64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1b18e34e0_IsU64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b6b202a5:;
						{
							if ((_1b18e1147_ReadU64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1b6b208d2:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3391:17"));;
						}
					}
					_match_end_1b6b2086b:;
				};
				_julec_label_err:;
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1b3032e3b_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1b6b1d02d;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b6b1d02d:;
			{
				if (((_1b305ddac_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1b18dda18_IsInt(_1b3061ad5_Str(_1b305ddac_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b6b1c0b5:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b1bec7:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b30518d8_evalTypeEnum(_1b3050244_binaryEval* _self_) {
	jule::Ptr<_1b2e83a7e_TypeEnum> _341117_enm = _1b305e85d_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b282e1:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b27da1:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b2e83dae_Str(_341117_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b27a71:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3051b4c_evalSptr(_1b3050244_binaryEval* _self_) {
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b29d92:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b294ce:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b29479:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3051db1_evalPtr(_1b3050244_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b6b2b107:;
			{
				if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1b6b2cceb:;
			{
				if ((_1b305e385_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1b306903d_IsUnsafe(_1b305e385_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1b3057ba8_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b6b2b602:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b2bb96:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3052125_evalArr(_1b3050244_binaryEval* _self_) {
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b32c24:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b32d01:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b2d69d:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3052389_evalSlc(_1b3050244_binaryEval* _self_) {
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b34d58:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b34495:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b34440:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b30525ed_evalFn(_1b3050244_binaryEval* _self_) {
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b35177:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b365c9:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b36574:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3052862_evalStruct(_1b3050244_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b6b38763:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b6b387c9:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b6b38de5:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b6b38e5b:;
			{
				if ((_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b38ec2:;
			{
				if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1b6b38c91:;
	};
	if ((!(_1b3051168_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3052ac6_evalTrait(_1b3050244_binaryEval* _self_) {
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b42cde:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b42e10:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b42b35:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3052d3a_evalAny(_1b3050244_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b44ae3:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b44560:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1b6b4311e:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b305309e_evalBool(_1b3050244_binaryEval* _self_) {
	if ((!(_1b3050dc1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1b6b46892:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b6b45ece:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b45e79:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3053313_evalStr(_1b3050244_binaryEval* _self_) {
	jule::Str _365317_rk = _1b305be21_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_365317_rk.equal("str", 3))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_365317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b6b49d18:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b6b4a962:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1b6b48410:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1b6b49950:;
	};
}



inline void _1b30534de_setTypeToGreater(_1b3050244_binaryEval* _self_) {
	jule::Ptr<_1b3061772_Prim> _368013_lp = _1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1b3061772_Prim> _368113_rp = _1b305ddac_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1b3031456_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1b3031456_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1b3031456_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_368013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1b3031456_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1b18dc451_IsGreater(_368113_rp.get()._field_Kind, _368013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1b3031456_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
		};
	};
}



inline void _1b3053731_checkModData(_1b3050244_binaryEval* _self_, jule::Ptr<_1b3030a93_Data>* _371336_d) {
	if ((!(_1b3031456_IsConst((*(_371336_d)).ptr())))) {
		if (((_1b305ddac_Prim((*(_371336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1b18dda18_IsInt(_1b305ddac_Prim((*(_371336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1b30184a4_sigAssignable(jule::Str("i64", 3), _371336_d)) {
			_case_begin_1b6b550dc:;
			{
				_1b18e2346_SetI64((*(_371336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_371336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1b30185d6_unsigAssignable(jule::Str("u64", 3), _371336_d)) {
			_case_begin_1b6b54cbd:;
			{
				_1b18e25bb_SetU64((*(_371336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_371336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1b6b54c57:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6b536b2:;
	};
}



inline void _1b305390c_mod(_1b3050244_binaryEval* _self_) {
	_1b3053731_checkModData(_self_, &((*(_self_))._field_l));
	_1b3053731_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1b3053cb4_numbersAreCompatibile(_1b3050244_binaryEval* _self_, jule::Str* _373537_lk, jule::Str* _373547_rk) {
	if ((!(_1b18de0ce_IsNum((*(_373547_rk)))))) {
		return false;;
	};
	if ((_1b3031456_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_373537_lk)).equal("f32", 3)) {
		if ((_1b3031456_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_373547_rk)).equal("f32", 3);;
	};
	if ((*(_373537_lk)).equal("f64", 3)) {
		if ((_1b3031456_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_373547_rk)).equal("f64", 3);;
	};
	if ((_1b3031456_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_373537_lk)) == (*(_373547_rk)));;
}



inline jule::Ptr<_1b3030a93_Data> _1b3054028_evalFloat(_1b3050244_binaryEval* _self_) {
	jule::Str _376113_lk = _1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _376213_rk = _1b305ddac_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1b3053cb4_numbersAreCompatibile(_self_, &(_376113_lk), &(_376213_rk))))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b6b5d0a1:;
			{
				if (((!(_1b3031456_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b3019681_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1b3031456_IsConst((*(_self_))._field_r.ptr()))) || (!(_1b3019681_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1b18e2346_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1b18e25bb_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1b305748d_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b6b5c4bd:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b6b62a56:;
			{
				_1b30534de_setTypeToGreater(_self_);
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1b6b62704:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1b6b5c2c0:;
			{
				_1b30534de_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b6b64b46:;
			{
				if ((!(_1b18dda18_IsInt(_376213_rk)))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1b305390c_mod(_self_);
				_1b30534de_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b6b63a13:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b635a1:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b305428c_evalInt(_1b3050244_binaryEval* _self_) {
	jule::Str _382713_lk = _1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _382813_rk = _1b305ddac_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b6b65130:;
			{
				if (((!(_1b18dda18_IsInt(_382713_lk))) || (!(_1b18dda18_IsInt(_382813_rk))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382713_lk, &__jule_any_type5),jule::Any(_382813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1b305748d_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b6b6caa5:;
	};
	if ((!(_1b3053cb4_numbersAreCompatibile(_self_, &(_382713_lk), &(_382813_rk))))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382713_lk, &__jule_any_type5),jule::Any(_382813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b6b70987:;
			{
				return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1b6b708ee:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b6b6cbd7:;
			{
				_1b30534de_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b6b728e0:;
			{
				_1b305390c_mod(_self_);
				_1b30534de_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b6b71757:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b6b71669:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3054501_evalPrim(_1b3050244_binaryEval* _self_) {
	jule::Ptr<_1b3061772_Prim> _388613_prim = _1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1b3064742_IsBool(_388613_prim.ptr())) {
			_case_begin_1b6b748d1:;
			{
				return _1b305309e_evalBool(_self_);;
			}
		}
		else if (_1b30649a6_IsStr(_388613_prim.ptr())) {
			_case_begin_1b6b74958:;
			{
				return _1b3053313_evalStr(_self_);;
			}
		}
		_match_end_1b6b74826:;
	};
	if ((_1b305ddac_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b3061ad5_Str(_388613_prim.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1b18ddd37_IsFloat(_388613_prim.get()._field_Kind)) {
			_case_begin_1b6b77142:;
			{
				return _1b3054028_evalFloat(_self_);;
			}
		}
		else if (_1b18dda18_IsInt(_388613_prim.get()._field_Kind)) {
			_case_begin_1b6b76a15:;
			{
				return _1b305428c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b6b7699e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6b74edb:;
	};
}



inline void _1b30546cc_checkSpecialCases(_1b3050244_binaryEval* _self_) {
	if (((!(_1b305ce33_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1b305c95a_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1b305ce33_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1b305c95a_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3054941_evalOp(_1b3050244_binaryEval* _self_) {
	_1b30546cc_checkSpecialCases(_self_);
	{
		
		if (_1b305cbbe_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b6b7a8e8:;
			{
				_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (((_1b305ddac_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1b3064c1a_IsAny(_1b305ddac_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b6b7b575:;
			{
				({
					jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b6b7b5db;
			}
		}
		else if (((_1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1b3064c1a_IsAny(_1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b6b7b5db:;
			{
				return _1b3052d3a_evalAny(_self_);;
			}
		}
		else if ((_1b305e85d_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7aed1:;
			{
				({
					jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b6b7b058;
			}
		}
		else if ((_1b305e85d_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b058:;
			{
				return _1b30518d8_evalTypeEnum(_self_);;
			}
		}
		else if (_1b305c95a_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b6b7b0d0:;
			{
				return _1b3051410_evalNil(_self_);;
			}
		}
		else if ((_1b305e5e9_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b157:;
			{
				({
					jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b6b7b663;
			}
		}
		else if ((_1b305e5e9_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b663:;
			{
				return _1b3051674_evalEnum(_self_);;
			}
		}
		else if ((_1b305e121_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b6da:;
			{
				({
					jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b6b7b762;
			}
		}
		else if ((_1b305e121_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b762:;
			{
				return _1b3051b4c_evalSptr(_self_);;
			}
		}
		else if ((_1b305e385_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b7d9:;
			{
				({
					jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b6b7b861;
			}
		}
		else if ((_1b305e385_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b861:;
			{
				return _1b3051db1_evalPtr(_self_);;
			}
		}
		else if ((_1b305eac2_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b8d8:;
			{
				return _1b3052125_evalArr(_self_);;
			}
		}
		else if ((_1b305ed36_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b960:;
			{
				return _1b3052389_evalSlc(_self_);;
			}
		}
		else if ((_1b306009a_Fn((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7b9d7:;
			{
				return _1b30525ed_evalFn(_self_);;
			}
		}
		else if ((_1b3060573_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7ba5e:;
			{
				({
					jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b6b7bad6;
			}
		}
		else if ((_1b3060573_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7bad6:;
			{
				return _1b3052ac6_evalTrait(_self_);;
			}
		}
		else if ((_1b306030e_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7bb5d:;
			{
				return _1b3052862_evalStruct(_self_);;
			}
		}
		else if ((_1b305ddac_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6b7bbd5:;
			{
				return _1b3054501_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b6b7ae59:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6b7ade3:;
	};
}



inline void _1b3054bb6_evalConst(_1b3050244_binaryEval* _self_, jule::Ptr<_1b3030a93_Data>* _397033_d) {
	{
		
		if (((*(_397033_d)) == nullptr)) {
			_case_begin_1b6b8ae14:;
			{
				return;;
			}
		}
		else if ((!(_1b3031456_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b3031456_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b6b8ae7a:;
			{
				(*(_397033_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1b6b8a782:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b6b8c498:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e4bc8_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b6b8c50e:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool((!(_1b18e4bc8_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b6b8c575:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e48ba_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b6b8c5db:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e45ac_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b6b8c652:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e5602_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b6b8c6b8:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e4ed6_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b6b8c72e:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e5910_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b6b8c795:;
			{
				(*(_397033_d)).get()._field_Constant=static__1b18e009c_NewBool(_1b18e52e4_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b6b8c80b:;
			{
				_1b18e5c1d_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b6b8c872:;
			{
				_1b18e602b_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b6b8c8d8:;
			{
				_1b18e6339_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b6b8c94e:;
			{
				jule::Bool _400717_ok = _1b18e6647_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_400717_ok)) && (_1b18e20c1_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1b3061772_Prim> _401221_prim = _1b305ddac_Prim((*(_397033_d)).get()._field_Kind.ptr());;
				{
					
					if (_1b18dd485_IsSigInt(_401221_prim.get()._field_Kind)) {
						_case_begin_1b6b990ba:;
						{
							_1b18e2346_SetI64((*(_397033_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_397033_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1b18dd771_IsUnsigInt(_401221_prim.get()._field_Kind)) {
						_case_begin_1b6b99142:;
						{
							_1b18e25bb_SetU64((*(_397033_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_397033_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1b6b99010:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b6b8c9c6:;
			{
				jule::Bool _402017_ok = _1b18e6955_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_402017_ok)) && (_1b18e20c1_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b6b8ca4d:;
			{
				_1b18e7071_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b6b8cac5:;
			{
				_1b18e6c63_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b6b8cb4c:;
			{
				_1b18e737e_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b6b8cbc4:;
			{
				_1b18e768c_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b6b8cc4b:;
			{
				_1b18e799a_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1b6b8bc5b:;
	};
	(*(_397033_d)).get()._field_Model=jule::Any((*(_397033_d)).get()._field_Constant, &__jule_any_type47);
	_1b3058934_applyCastModelByEnum(_397033_d, _1b305e5e9_Enum((*(_397033_d)).get()._field_Kind.ptr()));
}



inline void _1b3054e3b_checkData(_1b3050244_binaryEval* _self_, jule::Ptr<_1b3030a93_Data>* _404533_d) {
	jule::Ptr<_1b2e71132_FnIns> _404613_f = _1b306009a_Fn((*(_404533_d)).get()._field_Kind.ptr());;
	if ((((_404613_f != nullptr) && (_404613_f.get()._field_Decl != nullptr)) && _1b2e3d75e_IsMethod(_404613_f.get()._field_Decl.ptr()))) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1b3055117_checkDatas(_1b3050244_binaryEval* _self_) {
	_1b3054e3b_checkData(_self_, &((*(_self_))._field_l));
	_1b3054e3b_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1b305538c_setModel(_1b3050244_binaryEval* _self_, jule::Ptr<_1b3030a93_Data>* _405732_d) {
	if (_1b3031456_IsConst((*(_405732_d)).ptr())) {
		if ((_1b3031456_IsConst((*(_self_))._field_l.ptr()) && _1b3031456_IsConst((*(_self_))._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b3030a93_Data> _406518_l;;
	jule::Ptr<_1b3030a93_Data> _406525_r;;
	({
		jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_406518_l = ___jule_assign_arg;
		_406525_r = _1___jule_assign_arg;
	});
	if ((!(_1b3031764_GoodOperand(_406518_l.ptr(), &(_406525_r))))) {
		({
			jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = _406525_r;
			jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = _406518_l;
			_406518_l = ___jule_assign_arg;
			_406525_r = _1___jule_assign_arg;
		});
	};
	(*(_405732_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e68ed7_BinopExprModel>(_1b2e68ed7_BinopExprModel{._field_Left=jule::new_ptr<_1b2e68cea_OperandExprModel>(_1b2e68cea_OperandExprModel{._field_Kind=_406518_l.get()._field_Kind, ._field_Model=_406518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1b2e68cea_OperandExprModel>(_1b2e68cea_OperandExprModel{._field_Kind=_406525_r.get()._field_Kind, ._field_Model=_406525_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type117);
}



inline void _1b3055612_postEval(_1b3050244_binaryEval* _self_, jule::Ptr<_1b3030a93_Data>* _408332_d) {
	(*(_408332_d)).get()._field_Lvalue=false;
	_1b305538c_setModel(_self_, _408332_d);
}



inline jule::Ptr<_1b3030a93_Data> _1b30559b9_solveExplicit(_1b3050244_binaryEval* _self_, jule::Ptr<_1b3030a93_Data>* _408837_l, jule::Ptr<_1b3030a93_Data>* _408852_r) {
	({
		jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_408837_l));
		jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_408852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b3055117_checkDatas(_self_);
	jule::Ptr<_1b3030a93_Data> _409317_d = _1b3054941_evalOp(_self_);;
	({
		jule::Ptr<_1b3030a93_Data> ___jule_assign_arg = (*(_408837_l));
		jule::Ptr<_1b3030a93_Data> _1___jule_assign_arg = (*(_408852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b3054bb6_evalConst(_self_, &(_409317_d));
	if ((_409317_d != nullptr)) {
		_409317_d.get()._field_Mutable=true;
		_1b3055612_postEval(_self_, &(_409317_d));
	};
	return _409317_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3055cc7_eval(_1b3050244_binaryEval* _self_, jule::Ptr<_1b2e54676_BinopExpr>* _410828_op) {
	if ((*(_410828_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_1b3032b1c_pushErr((*(_self_))._field_e.ptr(), (*(_410828_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1b3032e3b_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _411517_l = _1b304c917_evalExprKind((*(_self_))._field_e, (*(_410828_op)).get()._field_Left.get()._field_Kind);;
	if (((_411517_l == nullptr) || (_411517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _412017_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_411517_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_412017_prefix;
	});;
	jule::Ptr<_1b3030a93_Data> _412317_r = _1b304c917_evalExprKind((*(_self_))._field_e, (*(_410828_op)).get()._field_Right.get()._field_Kind);;
	if (((_412317_r == nullptr) || (_412317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_410828_op)).get()._field_Op;
	jule::Ptr<_1b3030a93_Data> _413017_d = _1b30559b9_solveExplicit(_self_, &(_411517_l), &(_412317_r));;
	if ((((_413017_d != nullptr) && _411517_l.get()._field_IsRune) && _412317_r.get()._field_IsRune)) {
		_413017_d.get()._field_IsRune=true;
	};
	return _413017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3050244_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b305a2e8_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b305ad32_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b305be21_Str(_1b305ba25_TypeKind* _self_) {
	if (_1b305c95a_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1b305c6e6_CppLinked(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_1b305b5e6_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1b305b195_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1b305c22e_Equal(jule::Ptr<_1b305ba25_TypeKind> _self_, jule::Ptr<_1b305ba25_TypeKind> _9021_other) {
	if (_1b305c95a_IsNil(_self_.ptr())) {
		return _1b305c95a_IsNil(_9021_other.ptr());;
	};
	if (_1b305c6e6_CppLinked(_self_.ptr())) {
		return (_1b305c6e6_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1b305b5e6_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1b305b4a3_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1b305c6e6_CppLinked(_1b305ba25_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1b305c95a_IsNil(_1b305ba25_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1b305cbbe_Void(_1b305ba25_TypeKind* _self_) {
	jule::Ptr<_1b3061772_Prim> _11113_prim = _1b305ddac_Prim(_self_);;
	return ((_11113_prim != nullptr) && _11113_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1b305ce33_Comparable(_1b305ba25_TypeKind* _self_) {
	{
		_1b305ba25_TypeKind* _11821__self = (&((*(_self_))));;
		if ((_1b306030e_Struct(_11821__self) != nullptr)) {
			return _1b306030e_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_1b30607d7_Map(_11821__self) == nullptr) && (_1b305ed36_Slc(_11821__self) == nullptr)) && (_1b306009a_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _1b305d197_Mutable(_1b305ba25_TypeKind* _self_) {
	{
		_1b305ba25_TypeKind* _12921__self = (&((*(_self_))));;
		if ((_1b306030e_Struct(_12921__self) != nullptr)) {
			return _1b306030e_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_1b3060573_Trait(_12921__self) != nullptr)) {
			return _1b3060573_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_1b305ddac_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_1b3061772_Prim> _13721_p = _1b305ddac_Prim(_12921__self);;
			return _1b3064c1a_IsAny(_13721_p.ptr());;
		};
		if ((_1b305eac2_Arr(_12921__self) != nullptr)) {
			return _1b305d197_Mutable(_1b305eac2_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_1b305ed36_Slc(_12921__self) != nullptr) || (_1b305e385_Ptr(_12921__self) != nullptr)) || (_1b305e121_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _1b305d40b_NilCompatible(_1b305ba25_TypeKind* _self_) {
	{
		_1b305ba25_TypeKind* _15221__self = (&((*(_self_))));;
		jule::Ptr<_1b3061772_Prim> _15417_prim = _1b305ddac_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _1b3064c1a_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_1b305c95a_IsNil(_15221__self) || (_1b306009a_Fn(_15221__self) != nullptr)) || (_1b305e121_Sptr(_15221__self) != nullptr)) || (_1b305e385_Ptr(_15221__self) != nullptr)) || (_1b3060573_Trait(_15221__self) != nullptr)) || (_1b305ed36_Slc(_15221__self) != nullptr)) || (_1b30607d7_Map(_15221__self) != nullptr)) || (_1b305e85d_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _1b305d670_PerformsRC(_1b305ba25_TypeKind* _self_) {
	{
		_1b305ba25_TypeKind* _17321__self = (&((*(_self_))));;
		jule::Ptr<_1b3061772_Prim> _17417_prim = _1b305ddac_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _1b3064c1a_IsAny(_17417_prim.ptr());;
		};
		return (((_1b305e121_Sptr(_17321__self) != nullptr) || (_1b305ed36_Slc(_17321__self) != nullptr)) || (_1b3060573_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _1b305d8d4_SupportsCloning(_1b305ba25_TypeKind* _self_) {
	{
		_1b305ba25_TypeKind* _18521__self = (&((*(_self_))));;
		{
			
			if ((_1b305ddac_Prim(_18521__self) != nullptr)) {
				_case_begin_1b5641d72:;
				{
					return (!(_1b3064c1a_IsAny(_1b305ddac_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_1b305e5e9_Enum(_18521__self) != nullptr)) {
				_case_begin_1b5643dda:;
				{
					return true;;
				}
			}
			else if ((_1b306009a_Fn(_18521__self) != nullptr)) {
				_case_begin_1b5643e51:;
				{
					return true;;
				}
			}
			else if ((_1b305e385_Ptr(_18521__self) != nullptr)) {
				_case_begin_1b5643eb7:;
				{
					return true;;
				}
			}
			else if ((_1b305ed36_Slc(_18521__self) != nullptr)) {
				_case_begin_1b5643a11:;
				{
					return _1b305d8d4_SupportsCloning(_1b305ed36_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1b30607d7_Map(_18521__self) != nullptr)) {
				_case_begin_1b5643a77:;
				{
					jule::Ptr<_1b3067019_Map> _19821_m = _1b30607d7_Map(_18521__self);;
					return (_1b305d8d4_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _1b305d8d4_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1b305eac2_Arr(_18521__self) != nullptr)) {
				_case_begin_1b5643add:;
				{
					return _1b305d8d4_SupportsCloning(_1b305eac2_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1b305e121_Sptr(_18521__self) != nullptr)) {
				_case_begin_1b5643b54:;
				{
					return _1b305d8d4_SupportsCloning(_1b305e121_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1b306030e_Struct(_18521__self) != nullptr)) {
				_case_begin_1b56441e8:;
				{
					jule::Ptr<_1b2e687bc_StructIns> _20525_s = _1b306030e_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _1b2e31ea0_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1b564399a:;
				{
					return false;;
				}
			}
			_match_end_1b5643934:;
		};
	};
}



inline jule::Bool _1b305db48_Variadicable(_1b305ba25_TypeKind* _self_) {
	{
		_1b305ba25_TypeKind* _21821__self = (&((*(_self_))));;
		return (_1b305ed36_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_1b3061772_Prim> _1b305ddac_Prim(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1b5642180:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b3061772_Prim>(6);;
			}
		}
		else {
			_case_begin_1b56432c4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b564326e:;
	};
}



inline jule::Ptr<_1b3065006_Sptr> _1b305e121_Sptr(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1b564335c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b3065006_Sptr>(7);;
			}
		}
		else {
			_case_begin_1b564b9b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b564b95e:;
	};
}



inline jule::Ptr<_1b306856a_Ptr> _1b305e385_Ptr(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1b564ba4c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b306856a_Ptr>(12);;
			}
		}
		else {
			_case_begin_1b564c6a7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b564c652:;
	};
}



inline jule::Ptr<_1b2e82484_Enum> _1b305e5e9_Enum(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b564c740:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2e82484_Enum>(3);;
			}
		}
		else {
			_case_begin_1b564d39a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b564d345:;
	};
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b305e85d_TypeEnum(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b564d433:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2e83a7e_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1b564e08d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b564e038:;
	};
}



inline jule::Ptr<_1b3067b0d_Arr> _1b305eac2_Arr(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1b564e126:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b3067b0d_Arr>(11);;
			}
		}
		else {
			_case_begin_1b564ec81:;
			{
				return nullptr;;
			}
		}
		_match_end_1b564ec2b:;
	};
}



inline jule::Ptr<_1b3065963_Slc> _1b305ed36_Slc(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1b564ed19:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b3065963_Slc>(8);;
			}
		}
		else {
			_case_begin_1b5650974:;
			{
				return nullptr;;
			}
		}
		_match_end_1b565091e:;
	};
}



inline jule::Ptr<_1b2e71132_FnIns> _1b306009a_Fn(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b5650a0c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2e71132_FnIns>(1);;
			}
		}
		else {
			_case_begin_1b5651667:;
			{
				return nullptr;;
			}
		}
		_match_end_1b5651612:;
	};
}



inline jule::Ptr<_1b2e687bc_StructIns> _1b306030e_Struct(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b5651700:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2e687bc_StructIns>(0);;
			}
		}
		else {
			_case_begin_1b565235a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b5652305:;
	};
}



inline jule::Ptr<_1b2e8033e_Trait> _1b3060573_Trait(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1b56523e3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2e8033e_Trait>(2);;
			}
		}
		else {
			_case_begin_1b565304d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b5652ee8:;
	};
}



inline jule::Ptr<_1b3067019_Map> _1b30607d7_Map(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1b56530d6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b3067019_Map>(10);;
			}
		}
		else {
			_case_begin_1b5653c41:;
			{
				return nullptr;;
			}
		}
		_match_end_1b5653bdb:;
	};
}



inline jule::Ptr<_1b30664e1_Tuple> _1b3060a4b_Tup(_1b305ba25_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1b5653cc9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b30664e1_Tuple>(9);;
			}
		}
		else {
			_case_begin_1b565489b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b5654cca:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b305ba25_TypeKind _Src) {
	_Stream << _1b305be21_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b30612aa_checked(_1b3060e03_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1b3061486_removeKind(_1b3060e03_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3060e03_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b3061ad5_Str(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1b3061de3_Equal(jule::Ptr<_1b3061772_Prim> _self_, jule::Ptr<_1b305ba25_TypeKind> _37121_other) {
	jule::Ptr<_1b3061772_Prim> _37213_prim = _1b305ddac_Prim(_37121_other.ptr());;
	if ((_37213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37213_prim.get()._field_Kind);;
}



inline jule::Bool _1b3062366_IsConstraint(_1b3061772_Prim* _self_) {
	return ((((!(_1b30649a6_IsStr(_self_))) && (!(_1b3064c1a_IsAny(_self_)))) && (!(_1b3064742_IsBool(_self_)))) && (!(_1b18de0ce_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1b30625ca_IsI8(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1b306283e_IsI16(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1b3062aa3_IsI32(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1b3062d17_IsI64(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1b306307b_IsU8(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1b30632e0_IsU16(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1b3063554_IsU32(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1b30637b8_IsU64(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1b3063a2c_IsF32(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1b3063c91_IsF64(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1b3064005_IsInt(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1b3064269_IsUint(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1b30644cd_IsUintptr(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1b3064742_IsBool(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1b30649a6_IsStr(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1b3064c1a_IsAny(_1b3061772_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3061772_Prim _Src) {
	_Stream << _1b3061ad5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b3065369_Str(_1b3065006_Sptr* _self_) {
	return (jule::Str("&", 1) + _1b305be21_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b3065677_Equal(jule::Ptr<_1b3065006_Sptr> _self_, jule::Ptr<_1b305ba25_TypeKind> _44821_other) {
	jule::Ptr<_1b3065006_Sptr> _44913_sptr = _1b305e121_Sptr(_44821_other.ptr());;
	if ((_44913_sptr == nullptr)) {
		return false;;
	};
	return _1b305c22e_Equal(_self_.get()._field_Elem, _44913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3065006_Sptr _Src) {
	_Stream << _1b3065369_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b3065e6e_Str(_1b3065963_Slc* _self_) {
	return (jule::Str("[]", 2) + _1b305be21_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b306627c_Equal(jule::Ptr<_1b3065963_Slc> _self_, jule::Ptr<_1b305ba25_TypeKind> _46721_other) {
	jule::Ptr<_1b3065963_Slc> _46813_slc = _1b305ed36_Slc(_46721_other.ptr());;
	if ((_46813_slc == nullptr)) {
		return false;;
	};
	return _1b305c22e_Equal(_self_.get()._field_Elem, _46813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3065963_Slc _Src) {
	_Stream << _1b3065e6e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b3066854_Str(_1b30664e1_Tuple* _self_) {
	jule::Str _48417_s = jule::Str("(", 1);;
	_48417_s+=_1b305be21_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b5663c95:;
		if (it != expr_end) {
			jule::Ptr<_1b305ba25_TypeKind> *_48616_t = it;
			{
				(_48417_s).append(",", 1);
				_48417_s+=_1b305be21_Str((*(_48616_t)).ptr());
			}
			_iter_next_1b5663c95:;
			++it;
			goto _iter_begin_1b5663c95;
		}
		_iter_end_1b5663c95:;
	};
	(_48417_s).append(")", 1);
	return _48417_s;;
}



inline jule::Bool _1b3066b62_Equal(jule::Ptr<_1b30664e1_Tuple> _self_, jule::Ptr<_1b305ba25_TypeKind> _49521_other) {
	jule::Ptr<_1b30664e1_Tuple> _49613_tup = _1b3060a4b_Tup(_49521_other.ptr());;
	if ((_49613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I32 _50317_i = 0LL;;
	for (; (_50317_i < _self_.get()._field_Types.len()); (_50317_i)++) {
		{
			if ((!(_1b305c22e_Equal(_self_.get()._field_Types[_50317_i], _49613_tup.get()._field_Types[_50317_i])))) {
				return false;;
			};
		}
	_iter_next_1b56667ae:;
	}
	_iter_end_1b56667ae:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b30664e1_Tuple _Src) {
	_Stream << _1b3066854_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b306737c_Str(_1b3067019_Map* _self_) {
	jule::Str _52317_s = jule::Str("[", 1);;
	_52317_s+=_1b305be21_Str((*(_self_))._field_Key.ptr());
	(_52317_s).append(":", 1);
	_52317_s+=_1b305be21_Str((*(_self_))._field_Val.ptr());
	(_52317_s).append("]", 1);
	return _52317_s;;
}



inline jule::Bool _1b306768a_Equal(jule::Ptr<_1b3067019_Map> _self_, jule::Ptr<_1b305ba25_TypeKind> _53221_other) {
	jule::Ptr<_1b3067019_Map> _53313_m = _1b30607d7_Map(_53221_other.ptr());;
	if ((_53313_m == nullptr)) {
		return false;;
	};
	return (_1b305c22e_Equal(_self_.get()._field_Key, _53313_m.get()._field_Key) && _1b305c22e_Equal(_self_.get()._field_Val, _53313_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3067019_Map _Src) {
	_Stream << _1b306737c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b3067e71_Str(_1b3067b0d_Arr* _self_) {
	jule::Str _55117_s = jule::Str("[", 1);;
	_55117_s+=_1b18ce971_Itoa((*(_self_))._field_N);
	(_55117_s).append("]", 1);
	_55117_s+=_1b305be21_Str((*(_self_))._field_Elem.ptr());
	return _55117_s;;
}



inline jule::Bool _1b306827e_Equal(jule::Ptr<_1b3067b0d_Arr> _self_, jule::Ptr<_1b305ba25_TypeKind> _55921_other) {
	jule::Ptr<_1b3067b0d_Arr> _56013_arr = _1b305eac2_Arr(_55921_other.ptr());;
	if ((_56013_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56013_arr.get()._field_N) && _1b305c22e_Equal(_self_.get()._field_Elem, _56013_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3067b0d_Arr _Src) {
	_Stream << _1b3067e71_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b30688cd_Str(_1b306856a_Ptr* _self_) {
	if (_1b306903d_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1b305be21_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b3068bdb_Equal(jule::Ptr<_1b306856a_Ptr> _self_, jule::Ptr<_1b305ba25_TypeKind> _58321_other) {
	jule::Ptr<_1b306856a_Ptr> _58413_ptr = _1b305e385_Ptr(_58321_other.ptr());;
	if ((_58413_ptr == nullptr)) {
		return false;;
	};
	return _1b305c22e_Equal(_self_.get()._field_Elem, _58413_ptr.get()._field_Elem);;
}



inline jule::Bool _1b306903d_IsUnsafe(_1b306856a_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b306856a_Ptr _Src) {
	_Stream << _1b30688cd_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b30694b1_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1b306aa9a_pushErr(_1b306a391_typeChecker* _self_, jule::Ptr<_1cb188a5c_Token> _66926_token, jule::Str _66941_fmt, jule::Slice<jule::Any> _66954_args) {
	_1b2eb7563_pushErr((*(_self_))._field_s.ptr(), _66926_token, _66941_fmt, _66954_args);
}



inline void _1b306ac76_allowBuiltin(_1b306a391_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b306ae52_disallowBuiltin(_1b306a391_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_1b3061772_Prim> _1b306b260_buildPrim(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _68129_decl) {
	if ((!(_1b3075357_isPrim((*(_68129_decl)).get()._field_Ident)))) {
		_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_68129_decl)).get()._field_Generics.len() > 0LL)) {
		_1b306aa9a_pushErr(_self_, (*(_68129_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_68129_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b3074d18_buildPrimType((*(_68129_decl)).get()._field_Ident);;
}



inline void _1b56758ab_pushReference(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e687bc_StructIns>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b699c4d9_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_1b2e74c07_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type9));
}

inline void _1b5678738_pushReference(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e8033e_Trait>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b567a394_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_1b2e74c07_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type10));
}



inline void _1b306b75a_pushReferenceByKind(_1b306a391_typeChecker* _self_, jule::Ptr<_1b305ba25_TypeKind>* _70543_k) {
	{
		
		if ((_1b306030e_Struct((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_1b5674569:;
			{
				jule::Ptr<_1b2e687bc_StructIns> _70821_t = _1b306030e_Struct((*(_70543_k)).ptr());;
				_1b56758ab_pushReference(_self_, &(_70821_t));
			}
		}
		else if ((_1b3060573_Trait((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_1b56745e1:;
			{
				jule::Ptr<_1b2e8033e_Trait> _71121_t = _1b3060573_Trait((*(_70543_k)).ptr());;
				_1b5678738_pushReference(_self_, &(_71121_t));
			}
		}
		_match_end_1b5674459:;
	};
}



inline void _1b306bb23_pushCycleError(_1b306a391_typeChecker* _self_, jule::Any _71629_def1, jule::Any _71640_def2, jule::Str* _71656_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _71813_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _71828_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_71828_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b567d8b4:;
				{
					return (*(_71828_def)).cast_ptr<_1b305ad32_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1b567d92a:;
				{
					return (*(_71828_def)).cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1b567d276:;
				{
					return jule::Str();;
				}
			}
			_match_end_1b567d199:;
		};
	});;
	jule::Str _72813_def1Ident = _71813_getIdent(&(_71629_def1));;
	jule::Str _72913_def2Ident = _71813_getIdent(&(_71640_def2));;
	jule::Str _73013_refersTo = _1cac0c416_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_72813_def1Ident, &__jule_any_type5),jule::Any(_72913_def2Ident, &__jule_any_type5)}));;
	((*(_71656_message))).buffer.insert(0, (((_1caad032d_Repeat(jule::Str(" ", 1), 4LL) + _73013_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1b306beca_checkCrossCycle(_1b306a391_typeChecker* _self_, jule::Any _73430_decl, jule::Str* _73446_message) {
	{
		auto &_match_expr{ _73430_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b5680a70:;
			{
				jule::Ptr<_1b305ad32_TypeAlias> _73717_ta = _73430_decl.cast_ptr<_1b305ad32_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_73717_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b5681532:;
					if (it != expr_end) {
						jule::Any *_73820_d = it;
						{
							{
								
								if (((*(_73820_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1b5682225:;
									{
										_1b306bb23_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								else if ((!(_1b306beca_checkCrossCycle(_self_, (*(_73820_d)), _73446_message)))) {
									_case_begin_1b568229c:;
									{
										_1b306bb23_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								_match_end_1b5682115:;
							};
						}
						_iter_next_1b5681532:;
						++it;
						goto _iter_begin_1b5681532;
					}
					_iter_end_1b5681532:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b5680ad6:;
			{
				jule::Ptr<_1b2e683e3_Struct> _74917_s = _73430_decl.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_74917_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b5682a1c:;
					if (it != expr_end) {
						jule::Ptr<_1b2e683e3_Struct> *_75020_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_75020_d))))) {
									_case_begin_1b5684502:;
									{
										_1b306bb23_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								else if ((!(_1b306beca_checkCrossCycle(_self_, jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message)))) {
									_case_begin_1b5684579:;
									{
										_1b306bb23_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								_match_end_1b56843e2:;
							};
						}
						_iter_next_1b5682a1c:;
						++it;
						goto _iter_begin_1b5682a1c;
					}
					_iter_end_1b5682a1c:;
				};
			}
		}
		_match_end_1b5680982:;
	};
	return true;;
}



inline jule::Bool _1b306c382_checkIllegalCycles(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _76838_ident, jule::Any _76865_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _76865_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b56841b1:;
			{
				if (((*(_self_))._field_notPlain || _76865_decl.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b5686427:;
			{
				if (_76865_decl.cast_ptr<_1b305ad32_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b568405c:;
	};
	if ((_76865_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1b306aa9a_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79117_message = jule::Str();;
	if ((!(_1b306beca_checkCrossCycle(_self_, _76865_decl, &(_79117_message))))) {
		jule::Str _79421_errMsg = _79117_message;;
		_79117_message=jule::Str();
		_1b306bb23_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _76865_decl, &(_79117_message));
		_79421_errMsg+=_79117_message;
		_1b306aa9a_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_79421_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b56888e1:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_76865_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b5688968:;
			{
				{
					auto &_match_expr{ _76865_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b568aa69:;
						{
							jule::Ptr<_1b2e683e3_Struct> _81025_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66);;
							_81025_s.get()._field_Depends = jule::alloc_for_append(_81025_s.get()._field_Depends,1);_81025_s.get()._field_Depends.__push(_76865_decl.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_1b568a97b:;
				};
			}
		}
		_match_end_1b568a294:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1b305b5e6_Kind> _1b306c739_fromTypeAlias(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _81833_decl, jule::Ptr<_1b305ad32_TypeAlias>* _81860_ta) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_81860_ta)).get()._field_Public, (*(_81860_ta)).get()._field_Token)))) {
		_1b306aa9a_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_81860_ta)).get()._field_Used=true;
	if (((*(_81833_decl)).get()._field_Generics.len() > 0LL)) {
		_1b306aa9a_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b568ee25:;
			if (it != expr_end) {
				jule::Ptr<_1b305ad32_TypeAlias> _83520_bg = *it;
				{
					if (((_83520_bg == (*(_81860_ta))) || (((*(_81860_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1b305c22e_Equal((*(_81860_ta)).get()._field_Kind.get()._field_Kind, _83520_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b568ee25;
					};
				}
				_iter_next_1b568ee25:;
				++it;
				goto _iter_begin_1b568ee25;
			}
			_iter_end_1b568ee25:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b5690772:;
			if (it != expr_end) {
				jule::Ptr<_1b305ad32_TypeAlias> _84620_bg = *it;
				{
					if ((_84620_bg == (*(_81860_ta)))) {
						_1b306aa9a_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_81860_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b5692851:;
						if (it != expr_end) {
							jule::Ptr<_1b305ad32_TypeAlias> _85124_dg = *it;
							{
								if ((_84620_bg == _85124_dg)) {
									_1b306aa9a_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1b5692851:;
							++it;
							goto _iter_begin_1b5692851;
						}
						_iter_end_1b5692851:;
					};
				}
				_iter_next_1b5690772:;
				++it;
				goto _iter_begin_1b5690772;
			}
			_iter_end_1b5690772:;
		};
	};
	jule::Bool _86017_ok = _1b306c382_checkIllegalCycles(_self_, _81833_decl, jule::Any((*(_81860_ta)), &__jule_any_type67));;
	if ((!(_86017_ok))) {
		return nullptr;;
	};
	if (((*(_81860_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_86017_ok=_1b2ec7584_checkTypeAliasDeclKind((*(_self_))._field_s, _81860_ta, (*(_self_))._field_lookup);
		if ((!(_86017_ok))) {
			return nullptr;;
		};
	};
	if (((*(_81860_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_81860_ta)));;
	};
	jule::Ptr<_1b305ba25_TypeKind> _87917_tk = jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Generic=(*(_81860_ta)).get()._field_Generic, ._field_Kind=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1b306b75a_pushReferenceByKind(_self_, &(_87917_tk));
	if ((*(_81860_ta)).get()._field_CppLinked) {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Ident;
	} else {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1b305b5e6_Kind>(_87917_tk, 5);;
}



inline jule::Ptr<_1b2e82484_Enum> _1b306cae1_fromEnum(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _89228_decl, jule::Ptr<_1b2e82484_Enum>* _89255_e) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_89255_e)).get()._field_Public, (*(_89255_e)).get()._field_Token)))) {
		_1b306aa9a_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89228_decl)).get()._field_Generics.len() > 0LL)) {
		_1b306aa9a_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_89255_e));;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b306ce98_fromTypeEnum(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _90432_decl, jule::Ptr<_1b2e83a7e_TypeEnum>* _90459_e) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_90459_e)).get()._field_Public, (*(_90459_e)).get()._field_Token)))) {
		_1b306aa9a_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90432_decl)).get()._field_Generics.len() > 0LL)) {
		_1b306aa9a_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_90459_e));;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b306d350_fromTrait(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _91629_decl, jule::Ptr<_1b2e8033e_Trait>* _91656_t) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_91656_t)).get()._field_Public, (*(_91656_t)).get()._field_Token)))) {
		_1b306aa9a_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91629_decl)).get()._field_Generics.len() > 0LL)) {
		_1b306aa9a_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1b5678738_pushReference(_self_, _91656_t);
	return (*(_91656_t));;
}



inline jule::Bool _1b306d707_checkStructIns(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e687bc_StructIns>* _92938_ins, jule::Ptr<_1cb188a5c_Token>* _92960_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_92938_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_92938_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_92938_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1b2ed203e_precheckStructIns((*(_self_))._field_s, _92938_ins, (*(_92960_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_92938_ins)).get()._field_Generics.len() > 0LL)) {
		_1b2ed29ac_checkStructInsOperators((*(_self_))._field_s, (*(_92938_ins)));
		_1b2ed22b4_checkStructIns((*(_self_))._field_s, _92938_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b306d99e_appendUsedStructReference(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e683e3_Struct>* _95049_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b56a3301:;
			{
				jule::Ptr<_1b2e683e3_Struct> _95621_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1b2e683e3_Struct>(&__jule_any_type66);;
				if ((!(_1b2e32665_IsUses(_95621_refS.ptr(), (*(_95049_s)))))) {
					_95621_refS.get()._field_Uses = jule::alloc_for_append(_95621_refS.get()._field_Uses,1);_95621_refS.get()._field_Uses.__push((*(_95049_s)));;
				};
			}
		}
		_match_end_1b56a329b:;
	};
}



inline jule::Ptr<_1b2e687bc_StructIns> _1b306dd67_buildStructInstance(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _96343_decl, jule::Ptr<_1b2e683e3_Struct>* _96370_s) {
	jule::Ptr<_1b30694b1_referencer> _96517_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>> _96717_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b56a5dc5:;
				{
					jule::Ptr<_1b2e94ab2_scopeChecker> _97425_sc = (*(_self_))._field_lookup.cast_ptr<_1b2e94ab2_scopeChecker>(0);;
					jule::Ptr<_1b2e94ab2_scopeChecker> _97525_hard = _1b2e97e6c_getHardRoot(_97425_sc);;
					if (((_97525_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97525_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_96370_s))))) {
						goto _match_end_1b56a5d70;
					};
					jule::I32 _97921_n = (_97525_hard.get()._field_owner.get()._field_Generics.len() + _97525_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_97525_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _97921_n);
				}
			}
			_match_end_1b56a5d70:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1b3077997_Lookup> _98917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1b2e687bc_StructIns> _99317_ins = _1b2e284e6_instance((*(_96370_s)));;
	_99317_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1b305a2e8_InsGeneric>>::alloc(0LL, (*(_96343_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_96343_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56aa21a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e4b77d_TypeDecl> _99521_g = *it;
			{
				jule::Ptr<_1b305ba25_TypeKind> _99621_kind = _1b30722ee_build(_self_, &(_99521_g.get()._field_Kind));;
				if ((_99621_kind == nullptr)) {
					return nullptr;;
				};
				_99317_ins.get()._field_Generics = jule::alloc_for_append(_99317_ins.get()._field_Generics,1);_99317_ins.get()._field_Generics.__push(jule::new_ptr<_1b305a2e8_InsGeneric>(_1b305a2e8_InsGeneric{._field_Kind=_99621_kind, }));;
			}
			_iter_next_1b56aa21a:;
			++it;
			goto _iter_begin_1b56aa21a;
		}
		_iter_end_1b56aa21a:;
	};
	(*(_self_))._field_lookup=_98917_lookup;
	(*(_self_))._field_bannedGenerics=_96717_bannedGenerics;
	(*(_self_))._field_referencer=_96517_referencer;
	return _99317_ins;;
}



inline jule::Ptr<_1b2e687bc_StructIns> _1b306e21e_fromStruct(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _101134_decl, jule::Ptr<_1b2e683e3_Struct>* _101161_s) {
	if ((!(_1b2eb7c39_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_101161_s)).get()._field_Public, (*(_101161_s)).get()._field_Token)))) {
		_1b306aa9a_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_101134_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_101134_decl)).get()._field_Generics.len() > 0LL)) {
			_1b306aa9a_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1b2e687bc_StructIns>(_1b2e687bc_StructIns{._field_Decl=(*(_101161_s)), });;
	};
	jule::Bool _102917_ok = ((*(_self_))._field_notPlain || _1b306c382_checkIllegalCycles(_self_, _101134_decl, jule::Any((*(_101161_s)), &__jule_any_type66)));;
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	_1b306d99e_appendUsedStructReference(_self_, _101161_s);
	jule::Ptr<_1b2e687bc_StructIns> _103517_ins = _1b306dd67_buildStructInstance(_self_, _101134_decl, _101161_s);;
	if ((_103517_ins == nullptr)) {
		return nullptr;;
	};
	_102917_ok=_1b2eb890a_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>(_103517_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_103517_ins.get()._field_Generics.len()), (*(_101134_decl)).get()._field_Token);
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _104517_existInstance = _1b2e29250_appendInstance((*(_101161_s)).ptr(), &(_103517_ins));;
	if ((_104517_existInstance != nullptr)) {
		if ((!(_1b2ec0dc9_checkConstraintsStruct((*(_self_))._field_s, &(_103517_ins), &((*(_101134_decl)).get()._field_Token), _104517_existInstance)))) {
			return nullptr;;
		};
		_1b56758ab_pushReference(_self_, &(_104517_existInstance));
		return _104517_existInstance;;
	};
	if ((!(_1b306d707_checkStructIns(_self_, &(_103517_ins), &((*(_101134_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1b56758ab_pushReference(_self_, &(_103517_ins));
	return _103517_ins;;
}



inline jule::Trait<_1b305b5e6_Kind> _1b306e52c_getDef(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl>* _106930_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56b4554:;
		if (it != expr_end) {
			jule::Ptr<_1b2e58a76_GenericDecl> _107016_g = *it;
			{
				if ((_107016_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					return jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(_107016_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1b56b4554:;
			++it;
			goto _iter_begin_1b56b4554;
		}
		_iter_end_1b56b4554:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56b46db:;
		if (it != expr_end) {
			jule::Ptr<_1b305ad32_TypeAlias> _107621_g = *it;
			{
				if ((_107621_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					if (((*(_106930_decl)).get()._field_Generics.len() > 0LL)) {
						_1b306aa9a_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1b2e687bc_StructIns> _108225_st = _1b306030e_Struct(_107621_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108225_st != nullptr)) {
						jule::Bool _108425_ok = _1b306c382_checkIllegalCycles(_self_, _106930_decl, jule::Any(_108225_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_108425_ok))) {
							return nullptr;;
						};
					};
					return _107621_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1b56b46db:;
			++it;
			goto _iter_begin_1b56b46db;
		}
		_iter_end_1b56b46db:;
	};
	if ((!((*(_106930_decl)).get()._field_CppLinked))) {
		jule::Ptr<_1b2e82484_Enum> _109421_e = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3077546_FindEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109421_e != nullptr)) {
			return jule::Trait<_1b305b5e6_Kind>(_1b306cae1_fromEnum(_self_, _106930_decl, &(_109421_e)), 3);;
		};
		jule::Ptr<_1b2e83a7e_TypeEnum> _109921_te = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3077854_FindTypeEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109921_te != nullptr)) {
			return jule::Trait<_1b305b5e6_Kind>(_1b306ce98_fromTypeEnum(_self_, _106930_decl, &(_109921_te)), 4);;
		};
		jule::Ptr<_1b2e8033e_Trait> _110421_t = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3077238_FindTrait((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_110421_t != nullptr)) {
			return jule::Trait<_1b305b5e6_Kind>(_1b306d350_fromTrait(_self_, _106930_decl, &(_110421_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1b306aa9a_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e683e3_Struct> _111317_s = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3076a73_FindStruct((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if ((_111317_s != nullptr)) {
		return jule::Trait<_1b305b5e6_Kind>(_1b306e21e_fromStruct(_self_, _106930_decl, &(_111317_s)), 0);;
	};
	jule::Ptr<_1b305ad32_TypeAlias> _111817_ta = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b30766bb_FindTypeAlias((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if (((_111817_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_111817_ta=_1b3086b93_findBuiltinTypeAlias((*(_106930_decl)).get()._field_Ident);
	};
	if ((_111817_ta != nullptr)) {
		return _1b306c739_fromTypeAlias(_self_, _106930_decl, &(_111817_ta));;
	};
	_1b306aa9a_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1b305b5e6_Kind> _1b306e83a_buildIdent(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4bd44_IdentTypeDecl> _113033_decl) {
	{
		
		if (_1b3075357_isPrim(_113033_decl.get()._field_Ident)) {
			_case_begin_1b56c0241:;
			{
				return jule::Trait<_1b305b5e6_Kind>(_1b306b260_buildPrim(_self_, &(_113033_decl)), 6);;
			}
		}
		else {
			_case_begin_1b56bea48:;
			{
				return _1b306e52c_getDef(_self_, &(_113033_decl));;
			}
		}
		_match_end_1b56be97c:;
	};
}



inline jule::Trait<_1b305b5e6_Kind> _1b306eb48_buildSubIdent(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4c493_SubIdentTypeDecl> _113936_decl) {
	jule::Trait<_1b305b5e6_Kind> _114017_ident = _1b306e83a_buildIdent(_self_, _113936_decl.get()._field_Idents[0LL]);;
	if ((_114017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114017_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b56c1a17:;
			{
				goto _match_end_1b56c1929;
			}
		}
		else {
			_case_begin_1b56c17e7:;
			{
				_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b56c1929:;
	};
	jule::Ptr<_1b2e83a7e_TypeEnum> _115117_t = _114017_ident.cast_ptr<_1b2e83a7e_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1b2e4bd44_IdentTypeDecl>> _115217_idents = _113936_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_115217_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56c2dc0:;
		if (it != expr_end) {
			jule::I32 _115313_i = it - expr->begin();
			jule::Ptr<_1b2e4bd44_IdentTypeDecl> _115316_id = *it;
			{
				jule::Ptr<_1b2e834b8_TypeEnumItem> _115421_item = _1b2e845b8_FindItem(_115117_t.ptr(), _115316_id.get()._field_Ident);;
				if ((_115421_item == nullptr)) {
					_1b306aa9a_pushErr(_self_, _115316_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_115117_t.get()._field_Ident, &__jule_any_type5),jule::Any(_115316_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_115217_idents.len() - _115313_i) == 1LL)) {
					_1b306b75a_pushReferenceByKind(_self_, &(_115421_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1b305b5e6_Kind>(_115421_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115117_t=_1b305e85d_TypeEnum(_115421_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115117_t == nullptr)) {
					_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b56c2dc0:;
			++it;
			_115313_i++;
			goto _iter_begin_1b56c2dc0;
		}
		_iter_end_1b56c2dc0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b3065006_Sptr> _1b306ee56_buildSptrFromType(_1b306a391_typeChecker* _self_, jule::Ptr<_1b305ba25_TypeKind>* _117341_elem) {
	{
		
		if (((*(_117341_elem)) == nullptr)) {
			_case_begin_1b56c6b4e:;
			{
				return nullptr;;
			}
		}
		else if ((_1b306030e_Struct((*(_117341_elem)).ptr()) != nullptr)) {
			_case_begin_1b56c6bc6:;
			{
				jule::Ptr<_1b2e687bc_StructIns> _117917_s = _1b306030e_Struct((*(_117341_elem)).ptr());;
				if (((_117917_s.get()._field_Decl != nullptr) && _117917_s.get()._field_Decl.get()._field_CppLinked)) {
					_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1b305eac2_Arr((*(_117341_elem)).ptr()) != nullptr) && _1b305eac2_Arr((*(_117341_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b56c6c4d:;
			{
				_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b56c62be:;
	};
	return jule::new_ptr<_1b3065006_Sptr>(_1b3065006_Sptr{._field_Elem=(*(_117341_elem))});;
}



inline jule::Ptr<_1b3065006_Sptr> _1b3070264_buildSptr(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4cb36_SptrTypeDecl> _119332_decl) {
	jule::Bool _119413_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_119413_notPlain;
	});;
	jule::Ptr<_1b305ba25_TypeKind> _119817_elem = _1b307260c_checkDecl(_self_, &(_119332_decl.get()._field_Elem));;
	return _1b306ee56_buildSptrFromType(_self_, &(_119817_elem));;
}



inline jule::Ptr<_1b306856a_Ptr> _1b3070572_buildPtrFromType(_1b306a391_typeChecker* _self_, jule::Ptr<_1b305ba25_TypeKind>* _120240_elem) {
	{
		
		if (((*(_120240_elem)) == nullptr)) {
			_case_begin_1b56cb912:;
			{
				return nullptr;;
			}
		}
		else if (((_1b305eac2_Arr((*(_120240_elem)).ptr()) != nullptr) && _1b305eac2_Arr((*(_120240_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b56cb989:;
			{
				_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1b306856a_Ptr>();;
			}
		}
		_match_end_1b56cb802:;
	};
	return jule::new_ptr<_1b306856a_Ptr>(_1b306856a_Ptr{._field_Elem=(*(_120240_elem))});;
}



inline jule::Ptr<_1b306856a_Ptr> _1b3070880_buildPtr(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4d609_PtrTypeDecl> _121731_decl) {
	jule::Bool _121813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_121813_notPlain;
	});;
	jule::Ptr<_1b305ba25_TypeKind> _122217_elem = nullptr;;
	if ((!(_1b2e4d95b_IsUnsafe(_121731_decl.ptr())))) {
		_122217_elem=_1b307260c_checkDecl(_self_, &(_121731_decl.get()._field_Elem));
		return _1b3070572_buildPtrFromType(_self_, &(_122217_elem));;
	};
	return jule::new_ptr<_1b306856a_Ptr>(_1b306856a_Ptr{._field_Elem=_122217_elem});;
}



inline jule::Ptr<_1b3065963_Slc> _1b3070b8d_buildSlc(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4d032_SlcTypeDecl> _123431_decl) {
	jule::Bool _123513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_123513_notPlain;
	});;
	jule::Ptr<_1b305ba25_TypeKind> _123917_elem = _1b307260c_checkDecl(_self_, &(_123431_decl.get()._field_Elem));;
	{
		
		if ((_123917_elem == nullptr)) {
			_case_begin_1b56d18a1:;
			{
				return nullptr;;
			}
		}
		else if (((_1b305eac2_Arr(_123917_elem.ptr()) != nullptr) && _1b305eac2_Arr(_123917_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b56d1928:;
			{
				_1b306aa9a_pushErr(_self_, _123431_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b56d17e6:;
	};
	return jule::new_ptr<_1b3065963_Slc>(_1b3065963_Slc{._field_Elem=_123917_elem});;
}



inline jule::Ptr<_1b3067b0d_Arr> _1b3070e9b_buildArr(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4dc8b_ArrTypeDecl> _125531_decl) {
	jule::Bool _125613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_125613_notPlain;
	});;
	jule::I32 _126017_n = 0LL;;
	if ((!(_1b2e4e165_AutoSized(_125531_decl.ptr())))) {
		jule::Ptr<_1b3030a93_Data> _126321_size = _1b304d033_evalExpr(_1b2ebde4e_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _125531_decl.get()._field_Size);;
		if ((_126321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1b3031456_IsConst(_126321_size.ptr())))) {
			_1b306aa9a_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1b305ddac_Prim(_126321_size.get()._field_Kind.ptr()) == nullptr) || (!(_1b18dda18_IsInt(_1b305ddac_Prim(_126321_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1b306aa9a_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126017_n=static_cast<jule::I32>(static_cast<jule::I32>(_1b18e1ae8_AsI64(_126321_size.get()._field_Constant.ptr())));
		if ((_126017_n < 0LL)) {
			_1b306aa9a_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1b18d0c08_BitSize != 64LL) && (static_cast<jule::F64>(_126017_n) > _1b18d855c_Max(jule::Str("int", 3))))) {
			_1b306aa9a_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1b305ba25_TypeKind> _128617_elem = _1b307260c_checkDecl(_self_, &(_125531_decl.get()._field_Elem));;
	{
		
		if ((_128617_elem == nullptr)) {
			_case_begin_1b56d9d1b:;
			{
				return nullptr;;
			}
		}
		else if (((_1b305eac2_Arr(_128617_elem.ptr()) != nullptr) && _1b305eac2_Arr(_128617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b56d9d82:;
			{
				_1b306aa9a_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b56d9b1d:;
	};
	return jule::new_ptr<_1b3067b0d_Arr>(_1b3067b0d_Arr{._field_Auto=_1b2e4e165_AutoSized(_125531_decl.ptr()), ._field_N=_126017_n, ._field_Elem=_128617_elem});;
}



inline jule::Ptr<_1b3067019_Map> _1b30712a9_buildMap(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4e4d9_MapTypeDecl> _130431_decl) {
	jule::Bool _130513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_130513_notPlain;
	});;
	jule::Ptr<_1b305ba25_TypeKind> _130917_key = _1b307260c_checkDecl(_self_, &(_130431_decl.get()._field_Key));;
	if ((_130917_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _131417_val = _1b307260c_checkDecl(_self_, &(_130431_decl.get()._field_Val));;
	if ((_131417_val == nullptr)) {
		return nullptr;;
	};
	if ((_1b305e5e9_Enum(_131417_val.ptr()) != nullptr)) {
		_1b306aa9a_pushErr(_self_, _130431_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1b3067019_Map>(_1b3067019_Map{._field_Key=_130917_key, ._field_Val=_131417_val});;
}



inline jule::Ptr<_1b30664e1_Tuple> _1b30715b7_buildTuple(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4d31d_TupleTypeDecl> _132833_decl) {
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _132917_types = jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>::alloc(0LL, _132833_decl.get()._field_Types.len());;
	{
		auto expr = &(_132833_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56e07b1:;
		if (it != expr_end) {
			jule::Ptr<_1b2e4b77d_TypeDecl> _133021_t = *it;
			{
				jule::Ptr<_1b305ba25_TypeKind> _133121_kind = _1b307260c_checkDecl(_self_, &(_133021_t));;
				if ((_133121_kind == nullptr)) {
					return nullptr;;
				};
				_132917_types = jule::alloc_for_append(_132917_types,1);_132917_types.__push(_133121_kind);;
			}
			_iter_next_1b56e07b1:;
			++it;
			goto _iter_begin_1b56e07b1;
		}
		_iter_end_1b56e07b1:;
	};
	return jule::new_ptr<_1b30664e1_Tuple>(_1b30664e1_Tuple{._field_Types=_132917_types});;
}



inline jule::Bool _1b30718c5_checkFnTypes(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e71132_FnIns>* _134136_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_134136_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56e2175:;
		if (it != expr_end) {
			jule::Ptr<_1b2e70263_ParamIns> _134221_p = *it;
			{
				_134221_p.get()._field_Kind=_1b30722ee_build(_self_, &(_134221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_134221_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1b2ec1506_checkFnParamKind((*(_self_))._field_s, &(_134221_p));
			}
			_iter_next_1b56e2175:;
			++it;
			goto _iter_begin_1b56e2175;
		}
		_iter_end_1b56e2175:;
	};
	if ((!(_1b2e1e102_IsVoid((*(_134136_f)).get()._field_Decl.ptr())))) {
		(*(_134136_f)).get()._field_Result=_1b30722ee_build(_self_, &((*(_134136_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_134136_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e71132_FnIns> _1b3071bd3_buildFn(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e5d20c_FnDecl> _135930_decl) {
	if ((_135930_decl.get()._field_Generics.len() > 0LL)) {
		_1b306aa9a_pushErr(_self_, _135930_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e6e85b_Fn> _136517_f = _1b2e7726a_buildFn(_135930_decl);;
	jule::I32 _136713_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1b2ecdaa7_checkFnDecl((*(_self_))._field_s, &(_136517_f));
	if ((_136713_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b2e71132_FnIns> _137317_ins = _1b2e362d4_instanceForce(_136517_f);;
	_137317_ins.get()._field_Anon=true;
	jule::Bool _137613_ok = _1b30718c5_checkFnTypes(_self_, &(_137317_ins));;
	if ((!(_137613_ok))) {
		return nullptr;;
	};
	return _137317_ins;;
}



inline jule::Trait<_1b305b5e6_Kind> _1b3071ee1_buildByNamespace(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4c84a_NamespaceTypeDecl> _138439_decl) {
	jule::Str _138513_path = _1b3074961_buildLinkPathByTokens(&(_138439_decl.get()._field_Idents));;
	jule::Ptr<_1b2eab755_ImportInfo> _138617_imp = _1b3077997_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b3075e5c_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1b2eab755_ImportInfo>)>([=](jule::Ptr<_1b2eab755_ImportInfo> _138652_imp) mutable -> jule::Bool {
		if (((_138439_decl.get()._field_Idents.len() == 1LL) && (_138652_imp.get()._field_Alias == _138513_path))) {
			return true;;
		};
		return ((_138652_imp.get()._field_LinkPath == _138513_path) && _1b2eae3b2_isAccessibleViaSelection(_138652_imp.ptr()));;
	}));;
	if (((_138617_imp == nullptr) || (!(_1b2eadd1d_isLookupable(_138617_imp.ptr(), jule::Str("self", 4)))))) {
		_1b306aa9a_pushErr(_self_, _138439_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_138513_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1b306ae52_disallowBuiltin(_self_);
	jule::Trait<_1b3077997_Lookup> _139917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1b3077997_Lookup>(_138617_imp, 1);
	jule::Ptr<_1b305ba25_TypeKind> _140117_kind = _1b307260c_checkDecl(_self_, &(_138439_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_139917_lookup;
	_1b306ac76_allowBuiltin(_self_);
	return jule::Trait<_1b305b5e6_Kind>(_140117_kind, 5);;
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b30722ee_build(_1b306a391_typeChecker* _self_, jule::Any* _140729_declKind) {
	jule::Trait<_1b305b5e6_Kind> _140817_kind = nullptr;;
	{
		auto &_match_expr{ (*(_140729_declKind)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b56edb87:;
			{
				jule::Trait<_1b305b5e6_Kind> _141121_t = _1b306e83a_buildIdent(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4bd44_IdentTypeDecl>(&__jule_any_type19));;
				if ((_141121_t != nullptr)) {
					_140817_kind=_141121_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b56ee935:;
			{
				jule::Trait<_1b305b5e6_Kind> _141621_t = _1b306eb48_buildSubIdent(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4c493_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_141621_t != nullptr)) {
					_140817_kind=_141621_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b56ee99b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b3065006_Sptr> _142221_t = _1b3070264_buildSptr(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4cb36_SptrTypeDecl>(&__jule_any_type79));;
				if ((_142221_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_142221_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b56ee13d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b306856a_Ptr> _142821_t = _1b3070880_buildPtr(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4d609_PtrTypeDecl>(&__jule_any_type78));;
				if ((_142821_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_142821_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b56ee1a4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b3065963_Slc> _143421_t = _1b3070b8d_buildSlc(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4d032_SlcTypeDecl>(&__jule_any_type77));;
				if ((_143421_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_143421_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b56ee21a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b3067b0d_Arr> _144021_t = _1b3070e9b_buildArr(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4dc8b_ArrTypeDecl>(&__jule_any_type76));;
				if ((_144021_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_144021_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b56ee281:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b3067019_Map> _144621_t = _1b30712a9_buildMap(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4e4d9_MapTypeDecl>(&__jule_any_type80));;
				if ((_144621_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_144621_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b56eeb66:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b30664e1_Tuple> _145221_t = _1b30715b7_buildTuple(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4d31d_TupleTypeDecl>(&__jule_any_type81));;
				if ((_145221_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_145221_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b56eebcc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2e71132_FnIns> _145821_t = _1b3071bd3_buildFn(_self_, (*(_140729_declKind)).cast_ptr<_1b2e5d20c_FnDecl>(&__jule_any_type14));;
				if ((_145821_t != nullptr)) {
					_140817_kind=jule::Trait<_1b305b5e6_Kind>(_145821_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b56eec43:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1b305b5e6_Kind> _146421_t = _1b3071ee1_buildByNamespace(_self_, (*(_140729_declKind)).cast_ptr<_1b2e4c84a_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_146421_t != nullptr)) {
					_140817_kind=_146421_t;
				};
			}
		}
		else {
			_case_begin_1b56eded9:;
			{
				_1b306aa9a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b56eddeb:;
	};
	if ((_140817_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _140817_kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1b570a3ad:;
			{
				return _140817_kind.cast_ptr<_1b305ba25_TypeKind>(5);;
			}
		}
		else {
			_case_begin_1b570ac93:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _147921_tk = jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=_140817_kind});;
				{
					auto &_match_expr{ _140817_kind };
					
					if (_match_expr.type_is(true, 6)) {
						_case_begin_1b570b6cd:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1b305ba25_TypeKind>>::make({_147921_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1b570b755:;
						{
							jule::Ptr<_1b2e687bc_StructIns> _148621_s = _140817_kind.cast_ptr<_1b2e687bc_StructIns>(0);;
							if (((_148621_s.get()._field_Decl != nullptr) && _148621_s.get()._field_Decl.get()._field_CppLinked)) {
								_147921_tk.get()._field_CppIdent=_148621_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1b570b5bd:;
				};
				return _147921_tk;;
			}
		}
		_match_end_1b570ac3d:;
	};
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b307260c_checkDecl(_1b306a391_typeChecker* _self_, jule::Ptr<_1b2e4b77d_TypeDecl>* _149533_decl) {
	jule::Ptr<_1cb188a5c_Token> _149717_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_149533_decl)).get()._field_Token;
	jule::Ptr<_1b305ba25_TypeKind> _150017_kind = _1b30722ee_build(_self_, &((*(_149533_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_149717_errorToken;
	return _150017_kind;;
}



inline void _1b3072882_check(_1b306a391_typeChecker* _self_, jule::Ptr<_1b3060e03_TypeSymbol>* _150629_t) {
	if (((*(_150629_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1b305ba25_TypeKind> _151017_kind = _1b307260c_checkDecl(_self_, &((*(_150629_t)).get()._field_Decl));;
	if ((_151017_kind == nullptr)) {
		_1b3061486_removeKind((*(_150629_t)).ptr());
		return;;
	};
	(*(_150629_t)).get()._field_Kind=_151017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1b306a391_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b3072ee2_prim(jule::Str* _152221_ident, jule::Ptr<_1b3061772_Prim> _152233_t) {
	return (_152233_t.get()._field_Kind == (*(_152221_ident)));;
}



inline jule::Bool static__1b3073333_exist(jule::Str* _152622_ident, jule::Ptr<_1b305ba25_TypeKind>* _152639_k) {
	{
		
		if ((_1b305ddac_Prim((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b57124c5:;
			{
				return static__1b3072ee2_prim(_152622_ident, _1b305ddac_Prim((*(_152639_k)).ptr()));;
			}
		}
		else if ((_1b305e121_Sptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b571253b:;
			{
				jule::Ptr<_1b3065006_Sptr> _153121_sptr = _1b305e121_Sptr((*(_152639_k)).ptr());;
				return static__1b3073333_exist(_152622_ident, &(_153121_sptr.get()._field_Elem));;
			}
		}
		else if ((_1b305e385_Ptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b57125a2:;
			{
				jule::Ptr<_1b306856a_Ptr> _153421_ptr = _1b305e385_Ptr((*(_152639_k)).ptr());;
				return static__1b3073333_exist(_152622_ident, &(_153421_ptr.get()._field_Elem));;
			}
		}
		else if ((_1b305ed36_Slc((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b5712618:;
			{
				jule::Ptr<_1b3065963_Slc> _153721_slc = _1b305ed36_Slc((*(_152639_k)).ptr());;
				return static__1b3073333_exist(_152622_ident, &(_153721_slc.get()._field_Elem));;
			}
		}
		else if ((_1b305eac2_Arr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b571289e:;
			{
				jule::Ptr<_1b3067b0d_Arr> _154021_arr = _1b305eac2_Arr((*(_152639_k)).ptr());;
				return static__1b3073333_exist(_152622_ident, &(_154021_arr.get()._field_Elem));;
			}
		}
		else if ((_1b30607d7_Map((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b5712915:;
			{
				jule::Ptr<_1b3067019_Map> _154321_m = _1b30607d7_Map((*(_152639_k)).ptr());;
				return (static__1b3073333_exist(_152622_ident, &(_154321_m.get()._field_Key)) || static__1b3073333_exist(_152622_ident, &(_154321_m.get()._field_Val)));;
			}
		}
		else if ((_1b306030e_Struct((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b571297b:;
			{
				jule::Ptr<_1b2e687bc_StructIns> _154721_s = _1b306030e_Struct((*(_152639_k)).ptr());;
				{
					auto expr = &(_154721_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6cc8cee:;
					if (it != expr_end) {
						jule::Ptr<_1b305a2e8_InsGeneric> _154825_g = *it;
						{
							if (static__1b3073333_exist(_152622_ident, &(_154825_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b6cc8cee:;
						++it;
						goto _iter_begin_1b6cc8cee;
					}
					_iter_end_1b6cc8cee:;
				};
				return false;;
			}
		}
		else if ((_1b306009a_Fn((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b57129e2:;
			{
				jule::Ptr<_1b2e71132_FnIns> _155521_f = _1b306009a_Fn((*(_152639_k)).ptr());;
				{
					auto expr = &(_155521_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6cca4e8:;
					if (it != expr_end) {
						jule::Ptr<_1b2e70263_ParamIns> _155625_p = *it;
						{
							if (_1b2e2cc8c_IsSelf(_155625_p.get()._field_Decl.ptr())) {
								goto _iter_next_1b6cca4e8;
							};
							if (static__1b3073333_exist(_152622_ident, &(_155625_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b6cca4e8:;
						++it;
						goto _iter_begin_1b6cca4e8;
					}
					_iter_end_1b6cca4e8:;
				};
				if ((_155521_f.get()._field_Result != nullptr)) {
					return static__1b3073333_exist(_152622_ident, &(_155521_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1b3060a4b_Tup((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1b5712c45:;
			{
				jule::Ptr<_1b30664e1_Tuple> _156921_tup = _1b3060a4b_Tup((*(_152639_k)).ptr());;
				{
					auto expr = &(_156921_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6ccc62c:;
					if (it != expr_end) {
						jule::Ptr<_1b305ba25_TypeKind> _157025_t = *it;
						{
							if (static__1b3073333_exist(_152622_ident, &(_157025_t))) {
								return true;;
							};
						}
						_iter_next_1b6ccc62c:;
						++it;
						goto _iter_begin_1b6ccc62c;
					}
					_iter_end_1b6ccc62c:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b571245e:;
			{
				return false;;
			}
		}
		_match_end_1b5712393:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b3072aa2_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b38356c7_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3881756_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1b3882713_stop(_1b3882081_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1b3882977_stopped(_1b3882081_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1b3882bdb_finished(_1b3882081_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1b3882e50_isLastSt(_1b3882081_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1b388326e_pushErr(_1b3882081_scopeParser* _self_, jule::Ptr<_1cb188a5c_Token> _19126_token, jule::Str _19141_fmt) {
	_1b389e136_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1b388358d_pushSuggestion(_1b3882081_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1b389e455_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1b3883813_insertAsNext(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1b3881756_stmt>(_1b3881756_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1b3881756_stmt> _1b3883a77_next(_1b3882081_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1b2e5b716_ScopeTree> _1b3883e2e_buildScope(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _21034_tokens, jule::Ptr<_1cb188a5c_Token> _21056_end) {
	jule::Ptr<_1b2e5b716_ScopeTree> _21117_s = _1b3880656_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1b3882081_scopeParser _21417_ssp = _1b3882081_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1b388cb19_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1b2e5e1db_VarDecl> _1b388423c_buildVarSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _22134_tokens) {
	jule::Ptr<_1b2e5e1db_VarDecl> _22217_v = _1b38a1b72_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1b2e5e593_RetSt> _1b388454a_buildRetSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _22733_tokens) {
	jule::Ptr<_1b2e5e593_RetSt> _22817_st = jule::new_ptr<_1b2e5e593_RetSt>(_1b2e5e593_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1b2e5ec03_Iter> _1b3884858_buildWhileNextIter(_1b3882081_scopeParser* _self_, jule::Ptr<_1b3881756_stmt>* _23842_s) {
	jule::Ptr<_1b2e5ec03_Iter> _23917_it = jule::new_ptr<_1b2e5ec03_Iter>(_1b2e5ec03_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1b2e604c8_WhileKind> _24317_kind = jule::new_ptr<_1b2e604c8_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1b3882e50_isLastSt(_self_)) {
		_1b388326e_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1b3883a77_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _25517_stTokens = _1b389886c_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1b3881756_stmt> _25721_stmt = jule::new_ptr<_1b3881756_stmt>(_1b3881756_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1b388c7ea_buildSt(_self_, &(_25721_stmt));
	};
	jule::I32 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _26617_blockTokens = _1b389b93b_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1b3882713_stop(_self_);
		_1b388326e_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1b388358d_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1b388326e_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1b3883e2e_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type37);
	return _23917_it;;
}



inline jule::Ptr<_1b2e604c8_WhileKind> _1b3884b66_buildWhileIterKind(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _28342_tokens) {
	return jule::new_ptr<_1b2e604c8_WhileKind>(_1b2e604c8_WhileKind{._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b3884e74_getRangeKindKeysTokens(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _29018_vars;;
	jule::Slice<_1cac0bec6_Log> _29024_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(_28946_toks, static_cast<jule::U32>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1b2e5e1db_VarDecl> _1b3885282_buildRangeKindKey(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b2e5e1db_VarDecl> _29917_key = jule::new_ptr<_1b2e5e1db_VarDecl>(_1b2e5e1db_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1b388326e_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1b388326e_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b388326e_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1b388358d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>> _1b3885590_buildRangeKindKeys(_1b3882081_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5440d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1b3885282_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_1b6e5440d:;
			++it;
			goto _iter_begin_1b6e5440d;
		}
		_iter_end_1b6e5440d:;
	};
	return _32117_keys;;
}



inline void _1b38858d1_setupRangeKindKeysPlain(_1b3882081_scopeParser* _self_, jule::Ptr<_1b2e60d69_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _32917_keyTokens = _1b3884e74_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1b388326e_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>> _33617_keys = _1b3885590_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1b3885c33_setupRangeKindKeysExplicit(_1b3882081_scopeParser* _self_, jule::Ptr<_1b2e60d69_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _34372_tokens) {
	jule::I32 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _34517_rang = _1b389b93b_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1b388326e_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1b38858d1_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1b3886063_setupRangeKindKeys(_1b3882081_scopeParser* _self_, jule::Ptr<_1b2e60d69_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(3LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1b388326e_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1b3885c33_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1b38858d1_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1b2e60d69_RangeKind> _1b38864b4_buildRangeIterKind(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _36514_exprTokens, jule::Ptr<_1cb188a5c_Token>* _36541_inToken) {
	jule::Ptr<_1b2e60d69_RangeKind> _36617_rng = jule::new_ptr<_1b2e60d69_RangeKind>(_1b2e60d69_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1b388326e_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1b3886063_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1b388686b_buildCommonIterKind(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _38043_tokens, jule::Ptr<_1cb188a5c_Token>* _38062_err_tok) {
	jule::I32 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5ea9a:;
		if (it != expr_end) {
			jule::I32 _38214_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b6e61184:;
							{
								(_38117_braceN)++;
								goto _iter_next_1b6e5ea9a;
							}
						}
						else {
							_case_begin_1b6e60c88:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1b6e60a79:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1b6e5ea9a;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(15LLU)) {
						_case_begin_1b6e6122d:;
						{
							jule::Slice<jule::Ptr<_1cb188a5c_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_1cb188a5c_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1b38864b4_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1b6e619e2:;
				};
			}
			_iter_next_1b6e5ea9a:;
			++it;
			_38214_i++;
			goto _iter_begin_1b6e5ea9a;
		}
		_iter_end_1b6e5ea9a:;
	};
	return jule::Any(_1b3884b66_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1b2e5ec03_Iter> _1b3886b79_buildCommonIter(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _40738_tokens) {
	jule::Ptr<_1b2e5ec03_Iter> _40817_it = jule::new_ptr<_1b2e5ec03_Iter>(_1b2e5ec03_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1b3882713_stop(_self_);
		_1b388326e_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1b388358d_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _41817_exprTokens = _1b389886c_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1b388686b_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I32 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _42317_scopeTokens = _1b389b93b_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1b3882713_stop(_self_);
		_1b388326e_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1b388358d_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1b388326e_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1b3883e2e_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1b2e5ec03_Iter> _1b3886e87_buildIterSt(_1b3882081_scopeParser* _self_, jule::Ptr<_1b3881756_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1b3884858_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1b3886b79_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1b2e61221_BreakSt> _1b3887295_buildBreakSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _44436_tokens) {
	jule::Ptr<_1b2e61221_BreakSt> _44517_brk = jule::new_ptr<_1b2e61221_BreakSt>(_1b2e61221_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_1b388326e_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1b388358d_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1b388326e_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1b2e615c8_ContSt> _1b38875a3_buildContSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _46235_tokens) {
	jule::Ptr<_1b2e615c8_ContSt> _46317_cont = jule::new_ptr<_1b2e615c8_ContSt>(_1b2e615c8_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_1b388326e_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1b388358d_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1b388326e_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1b2e61a4b_If> _1b38878b1_buildIf(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _48031_tokens) {
	jule::Ptr<_1b2e61a4b_If> _48117_model = jule::new_ptr<_1b2e61a4b_If>(_1b2e61a4b_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _48517_exprTokens = _1b389886c_getBlockExpr(_48031_tokens);;
	jule::I32 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1b388326e_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I32>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _49217_scopeTokens = _1b389b93b_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1b3882713_stop(_self_);
		_1b388326e_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1b388358d_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cb188a5c_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U32>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1b388326e_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1b3883e2e_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1b2e61e03_Else> _1b3887bbe_buildElse(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _51333_tokens) {
	jule::Ptr<_1b2e61e03_Else> _51417_els = jule::new_ptr<_1b2e61e03_Else>(_1b2e61e03_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I32 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _51917_scopeTokens = _1b389b93b_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1b388326e_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1b3882713_stop(_self_);
			_1b388326e_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1b388358d_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1b388326e_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1b3883e2e_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1b2e62376_Conditional> _1b3887ecc_buildIfElseChain(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _53739_tokens) {
	jule::Ptr<_1b2e62376_Conditional> _53817_chain = jule::new_ptr<_1b2e62376_Conditional>(_1b2e62376_Conditional{._field_Head=_1b38878b1_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U32>(17LLU))) {
				goto _iter_end_1b6e7b91e;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U32>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1b2e61a4b_If> _55025_elif = _1b38878b1_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1b6e7b91e;
			};
			_53817_chain.get()._field_Default=_1b3887bbe_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1b6e7b91e;
		}
	_iter_next_1b6e7b91e:;
	}
	_iter_end_1b6e7b91e:;;
	return _53817_chain;;
}



inline jule::Ptr<_1b2e50c9e_Expr> _1b38882da_buildCoCallSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _56036_tokens) {
	jule::Ptr<_1cb188a5c_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1b2e50c9e_Expr> _56317_e = _1b389e763_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b6e8059e:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1b2e54c81_FnCallExpr>(&__jule_any_type113).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b6e809bc:;
			{
				_1b388326e_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1b6e8068c:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1b2e592d5_GotoSt> _1b38885e8_buildGotoSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _57635_tokens) {
	jule::Ptr<_1b2e592d5_GotoSt> _57717_gt = jule::new_ptr<_1b2e592d5_GotoSt>(_1b2e592d5_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1b388326e_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1b388326e_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1cb188a5c_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b388326e_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1b388358d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1b2e595c1_FallSt> _1b3888906_buildFallSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _59635_tokens) {
	jule::Ptr<_1b2e595c1_FallSt> _59717_fll = jule::new_ptr<_1b2e595c1_FallSt>(_1b2e595c1_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1b388326e_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1b2e62a4c_TypeAliasDecl> _1b3888c14_buildTypeAliasSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _60640_tokens) {
	jule::Ptr<_1b2e62a4c_TypeAliasDecl> _60717_tad = _1b38a0d5d_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1b3889176_pushCaseExpr(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _61235_tokens, jule::Ptr<_1cb188a5c_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I32 _61921_i = 0LL;;
		jule::Ptr<_1b2e4b77d_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_1b2e50c9e_Expr>(_1b2e50c9e_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type95)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1b388326e_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1b389e763_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _1b38895c7_buildCaseExprs(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _63638_tokens, jule::Ptr<_1cb188a5c_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63917_braceN = 0LL;;
	jule::I32 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e8ba3e:;
		if (it != expr_end) {
			jule::I32 _64114_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1b6e8de5e:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1b6e8da63:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1b6e8d854:;
					};
					goto _iter_next_1b6e8ba3e;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1b6e8ba3e;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U32>(7LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_1b6e8e756:;
						{
							jule::Slice<jule::Ptr<_1cb188a5c_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1b388326e_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1b3889176_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I32>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(11LLU))) {
						_case_begin_1b6e8e7bc:;
						{
							(*(_63661_colon))=_64121_tok;
							_1b3889176_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1b6e8e2c2:;
				};
			}
			_iter_next_1b6e8ba3e:;
			++it;
			_64114_i++;
			goto _iter_begin_1b6e8ba3e;
		}
		_iter_end_1b6e8ba3e:;
	};
	_1b388326e_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1b2e5b716_ScopeTree> _1b38898d5_buildCaseScope(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _67638_tokens) {
	jule::I32 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _68022_next;;
			({
				__jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool __jule_assign_result = _1b3881459_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1b6e93161;
			};
			jule::Ptr<_1cb188a5c_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1b6e93161;
			};
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1b2e5b716_ScopeTree> _69021_scope = _1b3883e2e_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1b6e93161:;
	}
	_iter_end_1b6e93161:;;
	jule::Ptr<_1cb188a5c_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1b2e5b716_ScopeTree> _69817_scope = _1b3883e2e_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1b2e62ec0_Case__jule_tuple_bool _1b3889c8c_buildCase(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1b2e62ec0_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2e62ec0_Case> _70417_c = jule::new_ptr<_1b2e62ec0_Case>(_1b2e62ec0_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_1cb188a5c_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1b38895c7_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1b38898d5_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b2e62ec0_Case__jule_tuple_x_1b2e61e03_Else _1b388a144_buildCases(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1b2e62ec0_Case__jule_tuple_x_1b2e61e03_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1b2e62ec0_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1b2e61e03_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1cb188a5c_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1b388326e_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1b6e9b851;
			};
			jule::Ptr<_1b2e62ec0_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1b2e62ec0_Case__jule_tuple_bool __jule_assign_result = _1b3889c8c_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1b2e61e03_Else>(_1b2e61e03_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1b388326e_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1b6e9b851:;
	}
	_iter_end_1b6e9b851:;;
	if (_72117_defNotLast) {
		_1b388326e_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e63696_MatchCase> _1b388a452_buildMatchCase(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _75237_tokens) {
	jule::Ptr<_1b2e63696_MatchCase> _75317_m = jule::new_ptr<_1b2e63696_MatchCase>(_1b2e63696_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U32>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _76317_exprTokens = _1b389886c_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1b388326e_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I32 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _77117_blockToks = _1b389b93b_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1b3882713_stop(_self_);
		_1b388326e_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1b388358d_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1b388326e_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1b2e62ec0_Case__jule_tuple_x_1b2e61e03_Else __jule_assign_result = _1b388a144_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1b2e5b716_ScopeTree> _1b388a760_buildScopeSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_1cb188a5c_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1b388326e_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1b388326e_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1b388326e_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _81517_scopeTokens = _1b389b93b_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1b388326e_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1b388326e_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1b2e5b716_ScopeTree> _82217_scope = _1b3883e2e_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1b2e58e2d_LabelSt> _1b388aa6d_buildLabelSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _82836_tokens) {
	jule::Ptr<_1b2e58e2d_LabelSt> _82917_lbl = jule::new_ptr<_1b2e58e2d_LabelSt>(_1b2e58e2d_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1b3883813_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1b2e5adca_StmtData__jule_tuple_bool _1b388ad7b_buildIdSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _84333_tokens) {
	__jule_tuple__1b2e5adca_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1cb188a5c_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1b6eb2757:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1b388aa6d_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b6eb2702:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b3899d9b_assignInfo> _1b388b189_buildAssignInfo(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _85739_tokens) {
	jule::Ptr<_1b3899d9b_assignInfo> _85817_info = jule::new_ptr<_1b3899d9b_assignInfo>(_1b3899d9b_assignInfo{._field_ok=true});;
	jule::I32 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb3eb7:;
		if (it != expr_end) {
			jule::I32 _86214_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b6eb55c3:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1b6eb51c7:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1b6eb4eb8:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1b6eb58ae:;
						{
							goto _iter_next_1b6eb3eb7;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U32>(7LLU))) {
						_case_begin_1b6eb5925:;
						{
							goto _iter_next_1b6eb3eb7;
						}
					}
					else if ((!(_1cb18d644_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1b6eb599c:;
						{
							goto _iter_next_1b6eb3eb7;
						}
					}
					_match_end_1b6eb566c:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_1cb18d39c_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1b6eb3eb7;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_1cb18d39c_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1b388326e_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1b6eb3eb7;
			}
			_iter_next_1b6eb3eb7:;
			++it;
			_86214_i++;
			goto _iter_begin_1b6eb3eb7;
		}
		_iter_end_1b6eb3eb7:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1b2e59bcb_AssignLeft> _1b388b497_buildAssignL(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _90536_tokens) {
	jule::Ptr<_1b2e59bcb_AssignLeft> _90617_l = jule::new_ptr<_1b2e59bcb_AssignLeft>(_1b2e59bcb_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1b2e59bcb_AssignLeft>> _1b388b7a5_buildAssignLs(_1b3882081_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1b2e59bcb_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ebc4a9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _91821_part = *it;
			{
				jule::Ptr<_1b2e59bcb_AssignLeft> _91921_l = _1b388b497_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1b6ebc4a9:;
			++it;
			goto _iter_begin_1b6ebc4a9;
		}
		_iter_end_1b6ebc4a9:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool _1b388bab3_buildPlainAssign(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _92640_tokens) {
	__jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b3899d9b_assignInfo> _92717_info = _1b388b189_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2e5a21a_AssignSt> _93217_assign = jule::new_ptr<_1b2e5a21a_AssignSt>(_1b2e5a21a_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _93618_parts;;
	jule::Slice<_1cac0bec6_Log> _93625_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_92717_info.get()._field_l), static_cast<jule::U32>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1b388b7a5_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1b389e763_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool _1b388bdc1_buildDeclAssign(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _95038_tokens) {
	__jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_1cb188a5c_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2e5a21a_AssignSt> _96117_assign = jule::new_ptr<_1b2e5a21a_AssignSt>(_1b2e5a21a_AssignSt{._field_Declarative=true, });;
	jule::I32 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _96617_rang = _1b389b93b_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1b388326e_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_1cb188a5c_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1b389e763_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _97818_parts;;
	jule::Slice<_1cac0bec6_Log> _97825_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_96617_rang), static_cast<jule::U32>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ec842c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1b388326e_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b6ec842c;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1b388326e_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b6ec842c;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(3LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1b388326e_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1b6ec842c;
				};
				jule::Ptr<_1b2e59bcb_AssignLeft> _101421_l = _1b388b497_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1b6ec842c:;
			++it;
			goto _iter_begin_1b6ec842c;
		}
		_iter_end_1b6ec842c:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool _1b388c1ce_buildAssignSt(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _102337_tokens) {
	__jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1b389a242_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1b6ed1798:;
			{
				({
					__jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool __jule_assign_result = _1b388bdc1_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b6ed138b:;
			{
				({
					__jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool __jule_assign_result = _1b388bab3_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b6ed1336:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e51640_UseExpr> _1b388c4dc_buildUseExpr(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1b388326e_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1b2e51640_UseExpr> _104317_ue = jule::new_ptr<_1b2e51640_UseExpr>(_1b2e51640_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1b389e763_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1b388c7ea_buildSt(_1b3882081_scopeParser* _self_, jule::Ptr<_1b3881756_stmt>* _105131_st) {
	jule::Ptr<_1cb188a5c_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1b2e5adca_StmtData__jule_tuple_bool __jule_assign_result = _1b388ad7b_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1b2e5a21a_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1b2e5a21a_AssignSt__jule_tuple_bool __jule_assign_result = _1b388c1ce_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b6ed6737:;
			{
				return jule::Any(_1b388c4dc_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1b6ed688b:;
			{
				return jule::Any(_1b388423c_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1b6ed6902:;
			{
				return jule::Any(_1b388454a_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(12LLU)) {
			_case_begin_1b6ed69bd:;
			{
				return jule::Any(_1b3886e87_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1b6ed6a34:;
			{
				return jule::Any(_1b3887295_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(14LLU)) {
			_case_begin_1b6ed6a9a:;
			{
				return jule::Any(_1b38875a3_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b6ed6b11:;
			{
				return jule::Any(_1b3887ecc_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1b6ed6b77:;
			{
				return jule::Any(_1b38882da_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b6ed6bdd:;
			{
				return jule::Any(_1b38885e8_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b6ed6c54:;
			{
				return jule::Any(_1b3888906_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1b6ed6cba:;
			{
				return jule::Any(_1b3888c14_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1b6ed6d31:;
			{
				return jule::Any(_1b388a452_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1b6ed6d97:;
			{
				return jule::Any(_1b388a760_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b6ed6e1e:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1b388a760_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1b6ed65e4:;
	};
	jule::Ptr<_1b2e50c9e_Expr> _110117_expr = _1b389e763_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1b388326e_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1b388cb19_build(_1b3882081_scopeParser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _110929_tokens, jule::Ptr<_1b2e5b716_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1b3881aec_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1b3882e50_isLastSt(_self_))) && (!(_1b3882bdb_finished(_self_))))) {
		{
			jule::Ptr<_1b3881756_stmt> _111721_st = _1b3883a77_next(_self_);;
			jule::Any _111821_data = _1b388c7ea_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_1b2e5b10b_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1b3882977_stopped(_self_)) {
				goto _iter_end_1b6ede8b6;
			};
		}
	_iter_next_1b6ede8b6:;
	}
	_iter_end_1b6ede8b6:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3882081_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1b388dd3a_pushErr(_1b388d565_exprBuilder* _self_, jule::Ptr<_1cb188a5c_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1b389e136_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1b388e159_pushSuggestion(_1b388d565_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1b389e455_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1b2e5192b_TupleExpr> _1b388e467_buildTuple(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>* _5334_parts) {
	jule::Ptr<_1b2e5192b_TupleExpr> _5417_tuple = jule::new_ptr<_1b2e5192b_TupleExpr>(_1b2e5192b_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b700e991:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1b3897e87_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_1b700e991:;
			++it;
			goto _iter_begin_1b700e991;
		}
		_iter_end_1b700e991:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1b2e51cd3_LitExpr> _1b388e775_buildLit(_1b388d565_exprBuilder* _self_, jule::Ptr<_1cb188a5c_Token> _6327_token) {
	return jule::new_ptr<_1b2e51cd3_LitExpr>(_1b2e51cd3_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b388ea83_buildPrimitiveType(_1b388d565_exprBuilder* _self_, jule::Ptr<_1cb188a5c_Token>* _7038_token) {
	return _1b38ade59_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1b388ed91_buildSingle(_1b388d565_exprBuilder* _self_, jule::Ptr<_1cb188a5c_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1b7011432:;
			{
				return jule::Any(_1b388e775_buildLit(_self_, _7434_token), &__jule_any_type107);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b7011498:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_1b2e53521_VariadicExpr>(_1b2e53521_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type82);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(27LLU) || _match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1b7011520:;
			{
				return jule::Any(_1b3899241_buildIdentExpr(&(_7434_token)), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b7011597:;
			{
				return jule::Any(_1b388ea83_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type95);;
			}
		}
		_match_end_1b70110d0:;
	};
	_1b388dd3a_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b2e52960_IdentExpr> _1b389019e_buildCppLinkedIdent(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U32>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(20LLU))) {
		_1b388dd3a_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cb188a5c_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b388dd3a_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e52960_IdentExpr> _10917_expr = _1b3899241_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1b2e53169_UnaryExpr> _1b38904ac_buildUnary(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _11433_tokens) {
	jule::Ptr<_1cb188a5c_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1b388dd3a_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1cb189266_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1b388dd3a_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1b2e53169_UnaryExpr>(_1b2e53169_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1b3897e87_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_1b2e54203_SubIdentExpr> _1b38907ba_buildObjSubIdent(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _13539_tokens) {
	jule::I32 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1cb188a5c_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2e54203_SubIdentExpr>(_1b2e54203_SubIdentExpr{._field_Expr=_1b3897e87_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1b2e53c80_NsSelectionExpr> _1b3890ac8_buildNsSubIdent(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _15039_tokens) {
	jule::Ptr<_1b2e53c80_NsSelectionExpr> _15117_ns = jule::new_ptr<_1b2e53c80_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b701c592:;
		if (it != expr_end) {
			jule::I32 _15214_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
						_1b388dd3a_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b388e159_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1b388dd3a_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1b388e159_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b701c592:;
			++it;
			_15214_i++;
			goto _iter_begin_1b701c592;
		}
		_iter_end_1b701c592:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b3890dd6_buildType(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _16933_tokens) {
	jule::I32 _17017_i = 0LL;;
	jule::Ptr<_1b2e4b77d_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1b388dd3a_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_1b388dd3a_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1b38911e4_buildSubIdent(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _18337_tokens) {
	jule::I32 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_1cb188a5c_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1b7024610:;
			{
				return jule::Any(_1b38907ba_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1b7024b0a:;
			{
				return jule::Any(_1b3890ac8_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b7024b71:;
			{
				if (_18513_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1b3890dd6_buildType(_self_, _18337_tokens), &__jule_any_type95);;
				};
			}
		}
		_match_end_1b7024995:;
	};
	_1b388dd3a_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b2e53521_VariadicExpr> _1b3891502_buildVariadic(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _20136_tokens) {
	jule::Ptr<_1cb188a5c_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1b2e53521_VariadicExpr>(_1b2e53521_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1b3897e87_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _1b3891810_buildOpRight(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _21036_tokens) {
	jule::Ptr<_1cb188a5c_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b7028a43:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _1b389786b_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1b702a10a:;
						{
							_21521_d.cast_ptr<_1b2e54c81_FnCallExpr>(&__jule_any_type113).get()._field_Exception=jule::new_ptr<_1b2e5b716_ScopeTree>(_1b2e5b716_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1b702a23c:;
				};
			}
		}
		_match_end_1b7028889:;
	};
	_1b388dd3a_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b2e5108a_RangeExpr> _1b3891b40_buildBetweenParentheses(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1b388dd3a_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1b2e5108a_RangeExpr>(_1b2e5108a_RangeExpr{._field_Expr=_1b3897e87_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_1b2e538c8_CastExpr> _1b3891e5e_tryBuildCast(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _24336_tokens) {
	jule::I32 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b702d42c:;
		if (it != expr_end) {
			jule::I32 _24513_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b702e9e4:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1b702d42c;
							}
						}
						else {
							_case_begin_1b702e5e8:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1b702e3d9:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1b702d42c;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1cb188a5c_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_27217_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1b2e538c8_CastExpr> _27721_cast = jule::new_ptr<_1b2e538c8_CastExpr>(_1b2e538c8_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1b388dd3a_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1b388e159_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1b388dd3a_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1b388e159_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I32 _29125_typeIndex = 0LL;;
					jule::Ptr<_1b2e4b77d_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1b388dd3a_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I32 _30229_j = 0LL;;
						_1b389b93b_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_1b3897e87_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1b702d42c:;
			++it;
			_24513_i++;
			goto _iter_begin_1b702d42c;
		}
		_iter_end_1b702d42c:;
	};
	return nullptr;;
}



inline void _1b3892327_pushArg(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>* _31731_args, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _31750_tokens, jule::Ptr<_1cb188a5c_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_1b3897e87_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _1b3892635_buildArgs(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _33217_args = nullptr;;
	jule::I32 _33317_last = 0LL;;
	jule::I32 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b703beb8:;
		if (it != expr_end) {
			jule::I32 _33613_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b703d74a:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1b703d34e:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1b703d140:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1b703beb8;
				};
				_1b3892327_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I32>((_33613_i + 1LL));
			}
			_iter_next_1b703beb8:;
			++it;
			_33613_i++;
			goto _iter_begin_1b703beb8;
		}
		_iter_end_1b703beb8:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1b3892327_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_1b3892327_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _1b3892943_buildCallGenerics(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _37418_parts;;
	jule::Slice<_1cac0bec6_Log> _37425_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_36840_tokens), static_cast<jule::U32>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70432ee:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1b70432ee;
				};
				jule::I32 _38121_j = 0LL;;
				jule::Ptr<_1b2e4b77d_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1b388dd3a_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1b70432ee:;
			++it;
			goto _iter_begin_1b70432ee;
		}
		_iter_end_1b70432ee:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1b2e54c81_FnCallExpr> _1b3892d94_buildFnCall(_1b388d565_exprBuilder* _self_, jule::Ptr<_1cb188a5c_Token>* _39235_token, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _39255_expr, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _39276_args) {
	return jule::new_ptr<_1b2e54c81_FnCallExpr>(_1b2e54c81_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_1b3897e87_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_1b3892635_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _1b38931a2_buildParenthesesRange(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _40045_tokens) {
	jule::Ptr<_1cb188a5c_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b70474bd:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b7047d3c:;
						{
							jule::Ptr<_1b2e538c8_CastExpr> _40625_expr = _1b3891e5e_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type111);;
							};
						}
					}
					_match_end_1b7047b72:;
				};
			}
		}
		_match_end_1b7047314:;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_assign_result = _1b389bbd3_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1b3891b40_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type106);;
	};
	return jule::Any(_1b3892d94_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type113);;
}



inline jule::Ptr<_1b2e524dc_UnsafeExpr> _1b38934b0_buildUnsafeExpr(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _42138_tokens) {
	jule::Ptr<_1cb188a5c_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I32 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _42517_rangeTokens = _1b389b93b_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2e524dc_UnsafeExpr>(_1b2e524dc_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1b3897e87_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38937bd_buildAnonFn(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _43635_tokens) {
	jule::Ptr<_1b2e5d20c_FnDecl> _43717_f = _1b38a4b97_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_1b2e5d55e_IsAnon(_43717_f.ptr())))) {
		_1b388dd3a_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1b3893acb_buildUnsafe(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1b704dcee:;
			{
				return jule::Any(_1b38937bd_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b704e2c7:;
			{
				return jule::Any(_1b38934b0_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type108);;
			}
		}
		_match_end_1b704e250:;
	};
}



inline void _1b3893e94_pushRangeLitPart(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _45539_part, jule::Ptr<_1cb188a5c_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b38942c4_getBraceRangeLitExprParts(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _47217_parts = nullptr;;
	jule::I32 _47417_last = 0LL;;
	jule::I32 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b705341e:;
		if (it != expr_end) {
			jule::I32 _47713_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7054ba1:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1b70547a5:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1b7054596:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1b705341e;
				};
				_1b3893e94_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I32>((_47713_i + 1LL));
			}
			_iter_next_1b705341e:;
			++it;
			_47713_i++;
			goto _iter_begin_1b705341e;
		}
		_iter_end_1b705341e:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1b3893e94_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_1b3893e94_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1b2e55710_FieldExprPair> _1b38945e3_buildFieldExprPair(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1b388dd3a_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e55710_FieldExprPair> _51317_pair = jule::new_ptr<_1b2e55710_FieldExprPair>(_1b2e55710_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1b3897e87_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1b2e50c9e_Expr> _1b3894901_buildStructLitExpr(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _52142_tokens) {
	jule::Ptr<_1cb188a5c_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U32>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U32>(11LLU))) {
			return jule::new_ptr<_1b2e50c9e_Expr>(_1b2e50c9e_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1b38945e3_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1b3897e87_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _1b3894c0e_buildStructLitExprs(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _53717_parts = _1b38942c4_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2e50c9e_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b705ca33:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1b3894901_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_1b705ca33:;
			++it;
			goto _iter_begin_1b705ca33;
		}
		_iter_end_1b705ca33:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1b2e55e5d_StructLit> _1b389503e_buildTypedStructLiteral(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _54946_tokens) {
	jule::I32 _55017_i = 0LL;;
	jule::Ptr<_1b2e4b77d_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1b388dd3a_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1cb188a5c_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_56013_token.get()._field_Kind.equal("{", 1)))) {
		_1b388dd3a_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2e55e5d_StructLit>(_1b2e55e5d_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1b3894c0e_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_1b2e50c9e_Expr> _1b389535d_buildBraceLitPart(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _57425_r;;
	({
		__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_assign_result = _1b3898c02_splitDelim(_57341_tokens, static_cast<jule::U32>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1b2e50c9e_Expr>(_1b2e50c9e_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1b2e56ba6_KeyValPair>(_1b2e56ba6_KeyValPair{._field_Key=_1b3897e87_buildFromTokens(_self_, _57418_l), ._field_Val=_1b3897e87_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type85)});;
	};
	return _1b3897e87_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_1b2e563d1_BraceLit> _1b389566b_buildBraceLit(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _59037_tokens) {
	jule::Ptr<_1b2e563d1_BraceLit> _59117_lit = jule::new_ptr<_1b2e563d1_BraceLit>(_1b2e563d1_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _59617_parts = _1b38942c4_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7067378:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1b389535d_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_1b7067378:;
			++it;
			goto _iter_begin_1b7067378;
		}
		_iter_end_1b7067378:;
	};
	return _59117_lit;;
}



inline jule::Any _1b3895979_buildBraceRange(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _61018_exprTokens;;
	jule::I32 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_1cb188a5c_Token__jule_tuple_int __jule_assign_result = _1b38994d8_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1b7068ca3:;
			{
				return jule::Any(_1b389566b_buildBraceLit(_self_, _60939_tokens), &__jule_any_type114);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1b7068d2a:;
			{
				_1b388dd3a_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7067c4c:;
	};
	jule::Ptr<_1cb188a5c_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U32>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1b389786b_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_1b706bd94:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I32 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1cb188a5c_Token>> _63225_rangeTokens = _1b389b93b_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_1b2e54c81_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1b2e54c81_FnCallExpr>(&__jule_any_type113);;
					if (_1b2e55358_Ignored(_63325_model.ptr())) {
						_1b388dd3a_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b388e159_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1b38a019d_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1b706c092:;
				{
					_1b388dd3a_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b706bec6:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b707197b:;
			{
				return _1b3893acb_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1b70719e2:;
			{
				return jule::Any(_1b38937bd_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b70717d3:;
			{
				return jule::Any(_1b389503e_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type112);;
			}
		}
		else {
			_case_begin_1b706e34c:;
			{
				_1b388dd3a_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7070b34:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b3895c87_getEnumerableParts(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _66318_parts;;
	jule::Slice<_1cac0bec6_Log> _66325_errors;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_66141_tokens), static_cast<jule::U32>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1b2e5738d_SliceExpr> _1b3896095_buildSlice(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _66833_tokens) {
	jule::Ptr<_1b2e5738d_SliceExpr> _66917_slc = jule::new_ptr<_1b2e5738d_SliceExpr>(_1b2e5738d_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _67417_parts = _1b3895c87_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1b2e50c9e_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7075dae:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1b7075dae;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1b3897e87_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_1b7075dae:;
			++it;
			goto _iter_begin_1b7075dae;
		}
		_iter_end_1b7075dae:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1b2e57c0c_IndexingExpr> _1b38964e6_buildIndexing(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _69113_tokens, jule::Ptr<_1cb188a5c_Token> _69135_errorToken) {
	jule::Ptr<_1cb188a5c_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e50c9e_Expr> _69817_expr = _1b3897e87_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2e50c9e_Expr> _70217_index = _1b3897e87_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2e57c0c_IndexingExpr>(_1b2e57c0c_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1b2e58317_SlicingExpr> _1b3896a8a_buildSlicing(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _71463_start, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _71514_to, jule::Ptr<_1cb188a5c_Token>* _71533_errorToken, jule::Ptr<_1cb188a5c_Token> _71557_end) {
	jule::Ptr<_1b2e58317_SlicingExpr> _71617_slc = jule::new_ptr<_1b2e58317_SlicingExpr>(_1b2e58317_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_1b3897e87_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_1b3897e87_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_1b3897e87_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _1b3896d98_buildBracketRange(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _73040_tokens) {
	jule::Ptr<_1cb188a5c_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _73218_exprTokens;;
	jule::I32 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_1cb188a5c_Token__jule_tuple_int __jule_assign_result = _1b38994d8_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1b3896095_buildSlice(_self_, _73040_tokens), &__jule_any_type101);;
	} else if ((_73230_rangeN > 0LL)) {
		_1b388dd3a_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _74829_to;;
	({
		__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_assign_result = _1b3898c02_splitDelim(&(_74717_splitTokens), static_cast<jule::U32>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1b3896a8a_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type110);;
	};
	return jule::Any(_1b38964e6_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type109);;
}



inline jule::Any _1b38971a6_buildData(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b7082b13:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b7082b9b:;
			{
				return _1b388ed91_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b7082c12:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(30LLU))) {
					return jule::Any(_1b389019e_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_1b7082915:;
	};
	jule::Ptr<_1cb188a5c_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _76717_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1b3891502_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type82);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b7085dad:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && _76717_token.get()._field_Kind.equal("*", 1))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U32>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U32>(34LLU)))) {
						return jule::Any(_1b3890dd6_buildType(_self_, _75533_tokens), &__jule_any_type95);;
					};
				};
				return jule::Any(_1b38904ac_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b7085e35:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_1b7085cd1;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_1cb188a5c_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U32>(3LLU)) && _78921_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_1b7085cd1;
					};
				};
				jule::Ptr<_1cb188a5c_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_79517_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_1b7085cd1;
				};
				return jule::Any(_1b3890dd6_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		_match_end_1b7085cd1:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1b7086441:;
			{
				return _1b38911e4_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b7091704:;
			{
				return jule::Any(_1b3890dd6_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b709176a:;
			{
				return _1b3891810_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b70917d1:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b7093030:;
						{
							return _1b38931a2_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b70930a7:;
						{
							return _1b3895979_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b709312e:;
						{
							return _1b3896d98_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_1b7092a35:;
				};
			}
		}
		_match_end_1b70863db:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		return jule::Any(_1b3890dd6_buildType(_self_, _75533_tokens), &__jule_any_type95);;
	};
	_1b388dd3a_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b389755d_buildBinop(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _83134_tokens, jule::I32 _83152_i) {
	jule::Ptr<_1cb188a5c_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_1b38982d9_isTypeOp(&(_83217_op.get()._field_Kind)) && _1b38985c5_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_1b3890dd6_buildType(_self_, _83134_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1b388dd3a_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b388e159_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1b2e54676_BinopExpr>(_1b2e54676_BinopExpr{._field_Left=_1b3897e87_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_1b3897e87_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type115);;
}



inline jule::Any _1b389786b_build(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _85629_tokens) {
	jule::I32 _85713_i = _1b3898e99_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1b38971a6_buildData(_self_, _85629_tokens);;
	};
	return _1b389755d_buildBinop(_self_, _85629_tokens, _85713_i);;
}



inline jule::Any _1b3897b79_buildKind(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _86518_parts;;
	jule::Slice<_1cac0bec6_Log> _86525_errors;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(_86433_tokens, static_cast<jule::U32>(8LLU), true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1b388e467_buildTuple(_self_, &(_86518_parts)), &__jule_any_type87);;
	};
	return _1b389786b_build(_self_, _86433_tokens);;
}



inline jule::Ptr<_1b2e50c9e_Expr> _1b3897e87_buildFromTokens(_1b388d565_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2e50c9e_Expr>(_1b2e50c9e_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1b3897b79_buildKind(_self_, &(_87538_tokens))});;
}







std::ostream &operator<<(std::ostream &_Stream, _1b388d565_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3899d9b_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1b389da09_stop(_1b389d6c9_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1b389dc6d_stopped(_1b389d6c9_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1b389e136_pushErr(_1b389d6c9_parser* _self_, jule::Ptr<_1cb188a5c_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1b389cb3a_compilerErr(&(_28126_token), &(_28141_fmt), _28154_args));;
}



inline void _1b389e455_pushSuggestion(_1b389d6c9_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1b389d069_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28633_fmt, _28646_args);
	};
}



inline jule::Ptr<_1b2e50c9e_Expr> _1b389e763_buildExpr(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _29034_tokens) {
	jule::Ptr<_1b388d565_exprBuilder> _29117_ep = jule::new_ptr<_1b388d565_exprBuilder>(_1b388d565_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1b2e50c9e_Expr> _29417_expr = _1b3897e87_buildFromTokens(_29117_ep.ptr(), (*(_29034_tokens)));;
	return _29417_expr;;
}



inline jule::Ptr<_1b2e184d6_Directive> _1b389ea71_buildDirective(_1b389d6c9_parser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1b389e136_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1b389e136_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2e184d6_Directive>(_1b2e184d6_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1b389ece6_pushDirective(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e184d6_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70c5d54:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b70c5d54:;
			++it;
			goto _iter_begin_1b70c5d54;
		}
		_iter_end_1b70c5d54:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1b2e5b716_ScopeTree> _1b38a019d_buildScope(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _32635_tokens, jule::Ptr<_1cb188a5c_Token> _32657_end) {
	jule::Ptr<_1b2e5b716_ScopeTree> _32717_s = _1b3880656_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1b3882081_scopeParser _32917_sp = _1b3882081_scopeParser{._field_p=_self_, };;
	_1b388cb19_build(&_32917_sp, _32635_tokens, &(_32717_s));
	return _32717_s;;
}



inline __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool _1b38a05ee__buildType(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _33642_tokens, jule::I32* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1b38ae3dd_typeBuilder _33817_tb = _1b38ae3dd_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33642_tokens)), ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1b2e4b77d_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38b2688_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool _1b38a0a50_buildType(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _34941_tokens, jule::I32* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1cb188a5c_Token> _35113_token = (*(_34941_tokens))[(*(_35013_i))];;
	jule::Ptr<_1b2e4b77d_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a05ee__buildType(_self_, _34941_tokens, _35013_i, _35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1b389e136_pushErr(_self_.ptr(), _35113_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e62a4c_TypeAliasDecl> _1b38a0d5d_buildTypeAliasDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _35943_tokens) {
	jule::I32 _36017_i = 1LL;;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e62a4c_TypeAliasDecl> _36517_tad = jule::new_ptr<_1b2e62a4c_TypeAliasDecl>(_1b2e62a4c_TypeAliasDecl{._field_Token=(*(_35943_tokens))[1LL], ._field_Ident=(*(_35943_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1cb188a5c_Token> _36917_token = (*(_35943_tokens))[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _36917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=(*(_35943_tokens))[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U32>(11LLU))) {
		_1b389e136_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_1b2e4b77d_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, _35943_tokens, (&(_36017_i)), true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < (*(_35943_tokens)).len()))) {
		_1b389e136_pushErr(_self_.ptr(), (*(_35943_tokens))[_36017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1b38ad376_isPub(&(_36517_tad.get()._field_Ident));
	return _36517_tad;;
}



inline void _1b38a117c_buildVarTypeAndExpr(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1b2e5e1db_VarDecl>* _39944_v, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _39962_tokens) {
	jule::I32 _40017_i = 0LL;;
	jule::Ptr<_1cb188a5c_Token> _40117_tok = (*(_39962_tokens))[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U32>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= (*(_39962_tokens)).len()) || (((*(_39962_tokens))[_40017_i].get()._field_Id == static_cast<jule::U32>(7LLU)) && (*(_39962_tokens))[_40017_i].get()._field_Kind.equal("=", 1)))) {
			_1b389e136_pushErr(_self_.ptr(), _40117_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1b2e4b77d_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, _39962_tokens, (&(_40017_i)), true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			(*(_39944_v)).get()._field_Kind=_40922_t;
			if ((_40017_i >= (*(_39962_tokens)).len())) {
				return;;
			};
			_40117_tok=(*(_39962_tokens))[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U32>(7LLU))) {
		if ((!_40117_tok.get()._field_Kind.equal("=", 1))) {
			_1b389e136_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1cb188a5c_Token>> _42421_exprTokens = (*(_39962_tokens)).slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1b389e136_pushErr(_self_.ptr(), _40117_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39944_v)).get()._field_Expr=_1b389e763_buildExpr(_self_, &(_42421_exprTokens));
	} else {
		_1b389e136_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b38a149b_buildVarCommon(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1b2e5e1db_VarDecl>* _43539_v, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _43556_tokens) {
	(*(_43539_v)).get()._field_Token=_43556_tokens[0LL];
	if (((*(_43539_v)).get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), (*(_43539_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43539_v)).get()._field_Ident=(*(_43539_v)).get()._field_Token.get()._field_Kind;
	(*(_43539_v)).get()._field_Public=_1b38ad376_isPub(&((*(_43539_v)).get()._field_Ident));
	(*(_43539_v)).get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1b38a117c_buildVarTypeAndExpr(_self_, _43539_v, &(_43556_tokens));
	};
}



inline void _1b38a1864_buildVarBegin(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e5e1db_VarDecl>* _45137_v, jule::I32* _45155_i, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _45164_tokens) {
	jule::Ptr<_1cb188a5c_Token> _45213_tok = (*(_45164_tokens))[(*(_45155_i))];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1b70e04bc:;
			{
				(*(_45137_v)).get()._field_Statically=true;
				goto _case_begin_1b70debe7;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1b70debe7:;
			{
				((*(_45155_i)))++;
				if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
					_1b389e136_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_45164_tokens))[(*(_45155_i))].get()._field_Id == static_cast<jule::U32>(35LLU))) {
					(*(_45137_v)).get()._field_Mutable=true;
					((*(_45155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1b70dec5d:;
			{
				((*(_45155_i)))++;
				(*(_45137_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1b70deb3c:;
			{
				_1b389e136_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b70de9b6:;
	};
	if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
		_1b389e136_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b2e5e1db_VarDecl> _1b38a1b72_buildVar(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _48132_tokens) {
	jule::I32 _48217_i = 0LL;;
	jule::Ptr<_1b2e5e1db_VarDecl> _48317_v = jule::new_ptr<_1b2e5e1db_VarDecl>(_1b2e5e1db_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1b38a1864_buildVarBegin(_self_.ptr(), &(_48317_v), &(_48217_i), &(_48132_tokens));
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _48132_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1b38a149b_buildVarCommon(_self_, &(_48317_v), _48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_1b2e58a76_GenericDecl> _1b38a1e80_buildGeneric(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _50337_tokens) {
	jule::Ptr<_1b2e58a76_GenericDecl> _50417_g = jule::new_ptr<_1b2e58a76_GenericDecl>(_1b2e58a76_GenericDecl{._field_Token=(*(_50337_tokens))[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _50417_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if (((*(_50337_tokens)).len() > 1LL)) {
		if (((*(_50337_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
			_1b389e136_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50337_tokens)).len() == 2LL)) {
			_1b389e136_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1cb188a5c_Token>> _52121_constraintTokens = (*(_50337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _52222_parts;;
		jule::Slice<_1cac0bec6_Log> _52229_errors;;
		({
			__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c0bd_partsKind(&(_52121_constraintTokens), jule::Str("|", 1), true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1b2e58603_Constraint>(_1b2e58603_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto expr = &(_52222_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b70eb64e:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _52825_part = *it;
				{
					jule::I32 _52925_i = 0LL;;
					jule::Ptr<_1b2e4b77d_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, &(_52825_part), (&(_52925_i)), true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1b389e136_pushErr(_self_.ptr(), _52825_part[_52925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b70eb64e:;
				++it;
				goto _iter_begin_1b70eb64e;
			}
			_iter_end_1b70eb64e:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _1b38a2337_buildGenerics(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _54038_tokens, jule::Ptr<_1cb188a5c_Token>* _54057_errorToken) {
	if (((*(_54038_tokens)).len() == 0LL)) {
		_1b389e136_pushErr(_self_.ptr(), (*(_54057_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _54618_parts;;
	jule::Slice<_1cac0bec6_Log> _54625_errors;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(_54038_tokens, static_cast<jule::U32>(8LLU), true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto expr = &(_54618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71012d0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1b38a1e80_buildGeneric(_self_, &(_55321_part)));;
			}
			_iter_next_1b71012d0:;
			++it;
			goto _iter_begin_1b71012d0;
		}
		_iter_end_1b71012d0:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_1b2e5bddc_ParamDecl> _1b38a2645_buildSelfParam(_1b389d6c9_parser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b2e5bddc_ParamDecl> _56517_param = jule::new_ptr<_1b2e5bddc_ParamDecl>();;
	jule::I32 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1b389e136_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_56037_tokens[_56817_i].get()._field_Kind.equal("&", 1)) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1b389e136_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U32>(27LLU))) {
		(_56517_param.get()._field_Ident).append("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1b389e136_pushErr(_self_, _56037_tokens[_56817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1b38a2a0d_paramTypeBegin(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e5bddc_ParamDecl>* _59938_param, jule::I32* _59962_i, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _59971_tokens) {
	for (; ((*(_59962_i)) < (*(_59971_tokens)).len()); ((*(_59962_i)))++) {
		{
			jule::Ptr<_1cb188a5c_Token> _60117_token = (*(_59971_tokens))[(*(_59962_i))];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U32>(7LLU))) {
				return;;
			} else if ((!_60117_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59938_param)).get()._field_Variadic) {
				_1b389e136_pushErr(_self_, _60117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1b71081c7;
			};
			(*(_59938_param)).get()._field_Variadic=true;
		}
	_iter_next_1b71081c7:;
	}
	_iter_end_1b71081c7:;;
}



inline void _1b38a2d2c_buildParamType(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1b2e5bddc_ParamDecl>* _61639_param, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _61663_tokens) {
	jule::I32 _61717_i = 0LL;;
	_1b38a2a0d_paramTypeBegin(_self_.ptr(), _61639_param, &(_61717_i), _61663_tokens);
	if ((_61717_i >= (*(_61663_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, _61663_tokens, (&(_61717_i)), true);
		(*(_61639_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < (*(_61663_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_61663_tokens))[_61717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b38a314b_buildParamBody(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1b2e5bddc_ParamDecl>* _62939_param, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _62962_tokens) {
	jule::Ptr<_1cb188a5c_Token> _63017_tok = _62962_tokens[0LL];;
	if ((_62962_tokens.len() == 1LL)) {
		(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1b389e136_pushErr(_self_.ptr(), _63017_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
		(*(_62939_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1b38a2d2c_buildParamType(_self_, _62939_param, &(_62962_tokens));
		return;;
	};
	(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
	_62962_tokens=_62962_tokens.slice(2LL);
	_1b38a2d2c_buildParamType(_self_, _62939_param, &(_62962_tokens));
}



inline jule::Ptr<_1b2e5bddc_ParamDecl> _1b38a3459_buildParam(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _64934_tokens) {
	jule::Ptr<_1b2e5bddc_ParamDecl> _65017_param = jule::new_ptr<_1b2e5bddc_ParamDecl>(_1b2e5bddc_ParamDecl{._field_Token=_64934_tokens[0LL], });;
	if ((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_65017_param.get()._field_Mutable=true;
		if ((_64934_tokens.len() == 1LL)) {
			_1b389e136_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64934_tokens=_64934_tokens.slice(1LL);
		_65017_param.get()._field_Token=_64934_tokens[0LL];
	};
	if ((_64934_tokens.len() >= 3LL)) {
		if (((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _65017_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64934_tokens.len() == 1LL)) {
				_1b389e136_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64934_tokens[1LL].get()._field_Id == static_cast<jule::U32>(2LLU)) && (_64934_tokens[2LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
				_65017_param.get()._field_Reference=true;
				_64934_tokens=_64934_tokens.slice(1LL);
				_65017_param.get()._field_Token=_64934_tokens[0LL];
			};
		};
	};
	if ((_65017_param.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_65017_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1b38a2d2c_buildParamType(_self_, &(_65017_param), &(_64934_tokens));
	} else {
		_1b38a314b_buildParamBody(_self_, &(_65017_param), _64934_tokens);
	};
	return _65017_param;;
}



inline void _1b38a36ce_checkParams(_1b389d6c9_parser* _self_, jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>>* _69235_params) {
	{
		auto expr = _69235_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b711779c:;
		if (it != expr_end) {
			jule::Ptr<_1b2e5bddc_ParamDecl> _69321_param = *it;
			{
				if ((_1b2e5c250_IsSelf(_69321_param.ptr()) || (_69321_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1b711779c;
				};
				if ((_69321_param.get()._field_Token == nullptr)) {
					_1b389e136_pushErr(_self_, _69321_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69321_param.get()._field_Kind=jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Ident=_69321_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type19)});
					_69321_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1b711779c:;
			++it;
			goto _iter_begin_1b711779c;
		}
		_iter_end_1b711779c:;
	};
}



inline jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>> _1b38a3a86_buildParams(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _71236_tokens, jule::Bool _71254_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _71318_parts;;
	jule::Slice<_1cac0bec6_Log> _71325_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(_71236_tokens, static_cast<jule::U32>(8LLU), true);
		_71318_parts = __jule_assign_result.__jule_result_arg0;
		_71325_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71325_errs);
	if ((_71318_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>> _71917_params = nullptr;;
	if ((_71254_method && (_71318_parts.len() > 0LL))) {
		jule::Ptr<_1b2e5bddc_ParamDecl> _72121_param = _1b38a2645_buildSelfParam(_self_.ptr(), _71318_parts[0LL]);;
		if (((_72121_param != nullptr) && _1b2e5c250_IsSelf(_72121_param.ptr()))) {
			_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72121_param);;
			_71318_parts=_71318_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b711bdcd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _72821_part = *it;
			{
				jule::Ptr<_1b2e5bddc_ParamDecl> _72921_param = _1b38a3459_buildParam(_self_, _72821_part);;
				if ((_72921_param != nullptr)) {
					_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72921_param);;
				};
			}
			_iter_next_1b711bdcd:;
			++it;
			goto _iter_begin_1b711bdcd;
		}
		_iter_end_1b711bdcd:;
	};
	_1b38a36ce_checkParams(_self_.ptr(), &(_71917_params));
	return _71917_params;;
}



inline __jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool _1b38a3e3d_buildMultiRetType(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _73942_tokens, jule::I32* _73965_i) {
	__jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b2e4e891_RetTypeDecl>();
	((*(_73965_i)))++;
	if (((*(_73965_i)) >= (*(_73942_tokens)).len())) {
		((*(_73965_i)))--;
		({
			__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, _73942_tokens, (&((*(_73965_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73965_i)))--;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _74917_rangeTokens = _1b389b93b_range(_73965_i, jule::Str("(", 1), jule::Str(")", 1), _73942_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _75118_parts;;
	jule::Slice<_1cac0bec6_Log> _75125_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_74917_rangeTokens), static_cast<jule::U32>(8LLU), true);
		_75118_parts = __jule_assign_result.__jule_result_arg0;
		_75125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75125_errs);
	if ((_75118_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _75717_types = jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, _75118_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1cb188a5c_Token>>::alloc(0LL, _75118_parts.len());
	{
		auto expr = &(_75118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b712317b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _75921_part = *it;
			{
				jule::Ptr<_1cb188a5c_Token> _76021_token = _75921_part[0LL];;
				jule::I32 _76121_offset = 0LL;;
				if ((_75921_part.len() > 1LL)) {
					_76021_token=_75921_part[1LL];
					if ((_76021_token.get()._field_Id == static_cast<jule::U32>(11LLU))) {
						_76121_offset=2LL;
						if ((_75921_part.len() < 3LL)) {
							_1b389e136_pushErr(_self_.ptr(), _76021_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1b712317b;
						};
					};
				};
				_76021_token=_75921_part[0LL];
				if ((_76121_offset != 2LL)) {
					jule::Ptr<_1cb188a5c_Token> _77725_newToken = jule::new_ptr<_1cb188a5c_Token>((*(_76021_token)));;
					_77725_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77725_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_76021_token);;
				};
				jule::Ptr<_1b2e4b77d_TypeDecl> _78422_tk;;
				({
					__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, &(_75921_part), (&(_76121_offset)), true);
					_78422_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_76121_offset < _75921_part.len())) {
					_1b389e136_pushErr(_self_.ptr(), _75921_part[_76121_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75717_types = jule::alloc_for_append(_75717_types,1);_75717_types.__push(_78422_tk);;
			}
			_iter_next_1b712317b:;
			++it;
			goto _iter_begin_1b712317b;
		}
		_iter_end_1b712317b:;
	};
	if ((_75717_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=(*(_73942_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1b2e4d31d_TupleTypeDecl>(_1b2e4d31d_TupleTypeDecl{._field_Types=_75717_types}), &__jule_any_type81)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75717_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool _1b38a42e5_buildRetType(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _80737_tokens, jule::I32* _80760_i) {
	__jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b2e4e891_RetTypeDecl>();
	if (((*(_80760_i)) >= (*(_80737_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1cb188a5c_Token> _81317_token = (*(_80737_tokens))[(*(_80760_i))];;
	{
		auto &_match_expr{ _81317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b712b739:;
			{
				if (_81317_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b712b7a0:;
			{
				if (_81317_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1b712b816:;
			{
				if ((((*(_80760_i)) + 1LL) >= (*(_80737_tokens)).len())) {
					_1b389e136_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80760_i)))++;
				_81317_token=(*(_80737_tokens))[(*(_80760_i))];
				if ((_81317_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _81317_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1b712e143:;
							{
								({
									__jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b38a3e3d_buildMultiRetType(_self_, _80737_tokens, _80760_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1b712e1a9:;
							{
								_1b389e136_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1b712e088:;
					};
				};
				({
					__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, _80737_tokens, (&((*(_80760_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b712b63a:;
	};
	((*(_80760_i)))++;
	_1b389e136_pushErr(_self_.ptr(), _81317_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38a4746_buildFnPrototype(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _85241_tokens, jule::I32* _85264_i, jule::Bool _85272_method) {
	jule::Ptr<_1b2e5d20c_FnDecl> _85317_f = jule::new_ptr<_1b2e5d20c_FnDecl>(_1b2e5d20c_FnDecl{._field_Token=(*(_85241_tokens))[(*(_85264_i))], });;
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(37LLU))) {
		_85317_f.get()._field_Statically=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_85317_f.get()._field_Unsafety=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	((*(_85264_i)))++;
	if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cb188a5c_Token> _88613_tok = (*(_85241_tokens))[(*(_85264_i))];;
	if ((_88613_tok.get()._field_Id == static_cast<jule::U32>(2LLU))) {
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Ident=_88613_tok.get()._field_Kind;
	} else {
		_85317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1cb188a5c_Token> _89813_errorToken = (*(_85241_tokens))[(*(_85264_i))];;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _89917_genericsTokens = _1b389b93b_range(_85264_i, jule::Str("[", 1), jule::Str("]", 1), _85241_tokens);;
	if ((_89917_genericsTokens != nullptr)) {
		_85317_f.get()._field_Generics=_1b38a2337_buildGenerics(_self_, &(_89917_genericsTokens), &(_89813_errorToken));
	};
	if ((!(*(_85241_tokens))[(*(_85264_i))].get()._field_Kind.equal("(", 1))) {
		_1b389e136_pushErr(_self_.ptr(), (*(_85241_tokens))[(*(_85264_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _90917_paramsToks = _1b389b93b_range(_85264_i, jule::Str("(", 1), jule::Str(")", 1), _85241_tokens);;
	if ((_90917_paramsToks.len() > 0LL)) {
		_85317_f.get()._field_Params=_1b38a3a86_buildParams(_self_, &(_90917_paramsToks), _85272_method);
	};
	if (((*(_85264_i)) < (*(_85241_tokens)).len())) {
		jule::Ptr<_1cb188a5c_Token> _91517_token = (*(_85241_tokens))[(*(_85264_i))];;
		if (((_91517_token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _91517_token.get()._field_Kind.equal("!", 1))) {
			_85317_f.get()._field_Exceptional=true;
			((*(_85264_i)))++;
		};
	};
	_85317_f.get()._field_Public=_1b38ad376_isPub(&(_85317_f.get()._field_Ident));
	({
		__jule_tuple_x_1b2e4e891_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b38a42e5_buildRetType(_self_, _85241_tokens, _85264_i);
		_85317_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85317_f;;
}



inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38a4b97_buildFn(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _92932_tokens, jule::Bool _92950_method, jule::Bool _92964_prototype) {
	jule::I32 _93017_i = 0LL;;
	jule::Ptr<_1b2e5d20c_FnDecl> _93117_f = _1b38a4746_buildFnPrototype(_self_, _92932_tokens, &(_93017_i), _92950_method);;
	if (_92964_prototype) {
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), (*(_92932_tokens))[(_93017_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _93117_f;;
	} else if ((_93117_f == nullptr)) {
		return _93117_f;;
	};
	if ((_93017_i >= (*(_92932_tokens)).len())) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _94717_blockTokens = _1b389b93b_range(&(_93017_i), jule::Str("{", 1), jule::Str("}", 1), _92932_tokens);;
	if ((_94717_blockTokens != nullptr)) {
		_93117_f.get()._field_Scope=_1b38a019d_buildScope(_self_, &(_94717_blockTokens), (*(_92932_tokens))[(_93017_i - 1LL)]);
		_93117_f.get()._field_Scope.get()._field_Unsafety=_93117_f.get()._field_Unsafety;
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), (*(_92932_tokens))[_93017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _93117_f;;
}



inline jule::Slice<jule::Ptr<_1cb188a5c_Token>> _1b38a4ea5_getUseDeclSelectors(_1b389d6c9_parser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _96342_tokens) {
	jule::I32 _96417_i = 0LL;;
	_96342_tokens=_1b389b93b_range(&(_96417_i), jule::Str("{", 1), jule::Str("}", 1), &(_96342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _96618_parts;;
	jule::Slice<_1cac0bec6_Log> _96625_errs;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_96342_tokens), static_cast<jule::U32>(8LLU), true);
		_96618_parts = __jule_assign_result.__jule_result_arg0;
		_96625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96625_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96625_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _97217_selectors = jule::Slice<jule::Ptr<_1cb188a5c_Token>>::alloc(0LL, _96618_parts.len());;
	{
		auto expr = &(_96618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7145027:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _97321_part = *it;
			{
				if ((_97321_part.len() > 1LL)) {
					_1b389e136_pushErr(_self_, _97321_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1cb188a5c_Token> _97721_tok = _97321_part[0LL];;
				if (((_97721_tok.get()._field_Id != static_cast<jule::U32>(2LLU)) && (_97721_tok.get()._field_Id != static_cast<jule::U32>(27LLU)))) {
					_1b389e136_pushErr(_self_, _97721_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1b389e455_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1b7145027;
				};
				_97217_selectors = jule::alloc_for_append(_97217_selectors,1);_97217_selectors.__push(_97721_tok);;
			}
			_iter_next_1b7145027:;
			++it;
			goto _iter_begin_1b7145027;
		}
		_iter_end_1b7145027:;
	};
	return _97217_selectors;;
}



inline void _1b38a52c4_buildCppUseDecl(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _98839_decl, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _98856_tokens) {
	if (((*(_98856_tokens)).len() > 1LL)) {
		_1b389e136_pushErr(_self_, (*(_98856_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1cb188a5c_Token> _99213_token = (*(_98856_tokens))[0LL];;
	if (((_99213_token.get()._field_Id != static_cast<jule::U32>(6LLU)) || ((_99213_token.get()._field_Kind[0LL] != '`') && (_99213_token.get()._field_Kind[0LL] != '\"')))) {
		_1b389e136_pushErr(_self_, _99213_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98839_decl)).get()._field_CppLinked=true;
	(*(_98839_decl)).get()._field_LinkPath=_99213_token.get()._field_Kind.slice(1LL, (_99213_token.get()._field_Kind.len() - 1LL));
}



inline void _1b38a55e3_buildStdUseDecl(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _100139_decl, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _100159_tokens) {
	(*(_100139_decl)).get()._field_Std=true;
	jule::Ptr<_1cb188a5c_Token> _100417_token = _100159_tokens[0LL];;
	if ((_100159_tokens.len() < 3LL)) {
		_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_100159_tokens=_100159_tokens.slice(2LL);
	_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1b714d66d:;
			{
				_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b714d6e5:;
			{
				if ((!_100417_token.get()._field_Kind.equal("}", 1))) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _102121_selectors = nullptr;;
				({
					__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_assign_result = _1b389bbd3_rangeLast(&(_100159_tokens));
					_100159_tokens = __jule_assign_result.__jule_result_arg0;
					_102121_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_100139_decl)).get()._field_Selected=_1b38a4ea5_getUseDeclSelectors(_self_, _102121_selectors);
				if ((_100159_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b714d76c:;
			{
				if ((!_100417_token.get()._field_Kind.equal("*", 1))) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_100139_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b714d5e6:;
	};
	(*(_100139_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1b389d311_tokstoa(&(_100159_tokens)));
}



inline void _1b38a5912_buildIdentUseDecl(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _106341_decl, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _106361_tokens) {
	(*(_106341_decl)).get()._field_Std=false;
	jule::Ptr<_1cb188a5c_Token> _106617_token = _106361_tokens[(_106361_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1b7157c60:;
			{
				_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b7158337:;
			{
				if ((!_106617_token.get()._field_Kind.equal("}", 1))) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _107721_selectors = nullptr;;
				({
					__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_assign_result = _1b389bbd3_rangeLast(&(_106361_tokens));
					_106361_tokens = __jule_assign_result.__jule_result_arg0;
					_107721_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106341_decl)).get()._field_Selected=_1b38a4ea5_getUseDeclSelectors(_self_, _107721_selectors);
				if ((_106361_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b71584d0:;
			{
				if ((!_106617_token.get()._field_Kind.equal("*", 1))) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1b389e136_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106341_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b71582d2:;
	};
	(*(_106341_decl)).get()._field_LinkPath=_1b389d311_tokstoa(&(_106361_tokens));
}



inline void _1b38a5c31_parseUseDecl(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e63e38_UseDecl>* _112636_decl, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _112656_tokens) {
	if ((*(_112636_decl)).get()._field_CppLinked) {
		_1b38a52c4_buildCppUseDecl(_self_, _112636_decl, &(_112656_tokens));
		return;;
	};
	jule::Ptr<_1cb188a5c_Token> _113217_token = _112656_tokens[0LL];;
	if ((_113217_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112656_tokens.len() > 2LL) && (_112656_tokens[1LL].get()._field_Id == static_cast<jule::U32>(12LLU)))) {
		(*(_112636_decl)).get()._field_Alias=_113217_token.get()._field_Kind;
		if ((_112656_tokens[2LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_1b389e136_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1b389e455_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112656_tokens=_112656_tokens.slice(2LL);
		_113217_token=_112656_tokens[0LL];
	};
	;
	{
		
		if (_113217_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1b71645da:;
			{
				_1b38a55e3_buildStdUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		else {
			_case_begin_1b71666a8:;
			{
				_1b38a5912_buildIdentUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		_match_end_1b7166642:;
	};
}



inline jule::Ptr<_1b2e63e38_UseDecl> _1b38a60d8_buildUseDecl(_1b389d6c9_parser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _116035_tokens, jule::Bool _116053_cpp_linked) {
	jule::Ptr<_1b2e63e38_UseDecl> _116117_decl = jule::new_ptr<_1b2e63e38_UseDecl>(_1b2e63e38_UseDecl{._field_Token=_116035_tokens[0LL], ._field_CppLinked=_116053_cpp_linked, });;
	if ((_116035_tokens.len() < 2LL)) {
		_1b389e136_pushErr(_self_, _116117_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_116035_tokens=_116035_tokens.slice(1LL);
	_1b38a5c31_parseUseDecl(_self_, &(_116117_decl), _116035_tokens);
	return _116117_decl;;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38a6490_buildTypeEnumItemKind(jule::Ptr<_1b389d6c9_parser> _self_, jule::I32* _117446_i, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _117459_tokens) {
	jule::I32 _117517_braceN = 0LL;;
	jule::I32 _117613_exprStart = (*(_117446_i));;
	for (; ((*(_117446_i)) < (*(_117459_tokens)).len()); ((*(_117446_i)))++) {
		{
			jule::Ptr<_1cb188a5c_Token> _117817_t = (*(_117459_tokens))[(*(_117446_i))];;
			if ((_117817_t.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _117817_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b716b768:;
						{
							(_117517_braceN)++;
							goto _iter_next_1b716a2d3;
						}
					}
					else {
						_case_begin_1b716b36c:;
						{
							(_117517_braceN)--;
						}
					}
					_match_end_1b716b15d:;
				};
			};
			if ((_117517_braceN > 0LL)) {
				goto _iter_next_1b716a2d3;
			};
			if (((_117817_t.get()._field_Id == static_cast<jule::U32>(8LLU)) || (((*(_117446_i)) + 1LL) >= (*(_117459_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _119425_kindTokens = nullptr;;
				if ((_117817_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart, (*(_117446_i)));
				} else {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart);
				};
				jule::I32 _120025_j = 0LL;;
				jule::Ptr<_1b2e4b77d_TypeDecl> _120126_kind;;
				({
					__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, &(_119425_kindTokens), (&(_120025_j)), true);
					_120126_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_120025_j < _119425_kindTokens.len())) {
					_1b389e136_pushErr(_self_.ptr(), _119425_kindTokens[_120025_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _120126_kind;;
			};
		}
	_iter_next_1b716a2d3:;
	}
	_iter_end_1b716a2d3:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>> _1b38a679d_buildTypeEnumItems(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _121143_tokens) {
	jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>> _121217_items = jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121317_i = 0LL;;
	for (; (_121317_i < (*(_121143_tokens)).len()); (_121317_i)++) {
		{
			jule::Ptr<_1cb188a5c_Token> _121521_t = (*(_121143_tokens))[_121317_i];;
			jule::Ptr<_1b2e658da_TypeEnumItemDecl> _121621_item = jule::new_ptr<_1b2e658da_TypeEnumItemDecl>();;
			_121621_item.get()._field_Token=_121521_t;
			if (((_121621_item.get()._field_Token.get()._field_Id == static_cast<jule::U32>(2LLU)) && (((*(_121143_tokens)).len() - _121317_i) > 2LL))) {
				_121621_item.get()._field_Ident=_121621_item.get()._field_Token.get()._field_Kind;
				_121521_t=(*(_121143_tokens))[(_121317_i + 1LL)];
				if ((_121521_t.get()._field_Id == static_cast<jule::U32>(11LLU))) {
					_121317_i+=2LL;
					if (((_121317_i >= (*(_121143_tokens)).len()) || ((*(_121143_tokens))[_121317_i].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
						_1b389e136_pushErr(_self_.ptr(), _121521_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1b7171020;
					};
				};
			};
			_121621_item.get()._field_Kind=_1b38a6490_buildTypeEnumItemKind(_self_, &(_121317_i), _121143_tokens);
			_121217_items = jule::alloc_for_append(_121217_items,1);_121217_items.__push(_121621_item);;
		}
	_iter_next_1b7171020:;
	}
	_iter_end_1b7171020:;;
	return _121217_items;;
}



inline jule::Ptr<_1b2e65ee5_TypeEnumDecl> _1b38a6aab_buildTypeEnumDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _123542_tokens) {
	jule::I32 _123617_i = 1LL;;
	jule::Ptr<_1b2e65ee5_TypeEnumDecl> _123717_e = jule::new_ptr<_1b2e65ee5_TypeEnumDecl>(_1b2e65ee5_TypeEnumDecl{._field_Token=(*(_123542_tokens))[_123617_i], });;
	if ((_123717_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Ident=_123717_e.get()._field_Token.get()._field_Kind;
	_123617_i+=3LL;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _124717_itemTokens = _1b389b93b_range(&(_123617_i), jule::Str("{", 1), jule::Str("}", 1), _123542_tokens);;
	if ((_124717_itemTokens == nullptr)) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123717_e;;
	} else if ((_123617_i < (*(_123542_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_123542_tokens))[_123617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Public=_1b38ad376_isPub(&(_123717_e.get()._field_Ident));
	_123717_e.get()._field_End=(*(_123542_tokens))[(_123617_i - 1LL)];
	_123717_e.get()._field_Items=_1b38a679d_buildTypeEnumItems(_self_, &(_124717_itemTokens));
	return _123717_e;;
}



inline jule::Ptr<_1b2e50c9e_Expr> _1b38a6e63_buildEnumItemExpr(jule::Ptr<_1b389d6c9_parser> _self_, jule::I32* _126242_i, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _126255_tokens) {
	jule::I32 _126317_braceN = 0LL;;
	jule::I32 _126413_exprStart = (*(_126242_i));;
	for (; ((*(_126242_i)) < (*(_126255_tokens)).len()); ((*(_126242_i)))++) {
		{
			jule::Ptr<_1cb188a5c_Token> _126617_t = (*(_126255_tokens))[(*(_126242_i))];;
			if ((_126617_t.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _126617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b717c504:;
						{
							(_126317_braceN)++;
							goto _iter_next_1b717b06e;
						}
					}
					else {
						_case_begin_1b717c108:;
						{
							(_126317_braceN)--;
						}
					}
					_match_end_1b717bde9:;
				};
			};
			if ((_126317_braceN > 0LL)) {
				goto _iter_next_1b717b06e;
			};
			if (((_126617_t.get()._field_Id == static_cast<jule::U32>(8LLU)) || (((*(_126242_i)) + 1LL) >= (*(_126255_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1cb188a5c_Token>> _128225_exprTokens = nullptr;;
				if ((_126617_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart, (*(_126242_i)));
				} else {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart);
				};
				return _1b389e763_buildExpr(_self_, &(_128225_exprTokens));;
			};
		}
	_iter_next_1b717b06e:;
	}
	_iter_end_1b717b06e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>> _1b38a7271_buildEnumItems(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _129439_tokens) {
	jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>> _129517_items = jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _129617_i = 0LL;;
	for (; (_129617_i < (*(_129439_tokens)).len()); (_129617_i)++) {
		{
			jule::Ptr<_1cb188a5c_Token> _129821_t = (*(_129439_tokens))[_129617_i];;
			jule::Ptr<_1b2e643ab_EnumItemDecl> _129921_item = jule::new_ptr<_1b2e643ab_EnumItemDecl>();;
			_129921_item.get()._field_Token=_129821_t;
			if ((_129921_item.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
				_1b389e136_pushErr(_self_.ptr(), _129921_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129921_item.get()._field_Ident=_129921_item.get()._field_Token.get()._field_Kind;
			if ((((_129617_i + 1LL) >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[(_129617_i + 1LL)].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				if (((_129617_i + 1LL) < (*(_129439_tokens)).len())) {
					(_129617_i)++;
				};
				_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
				goto _iter_next_1b7180936;
			};
			(_129617_i)++;
			_129821_t=(*(_129439_tokens))[_129617_i];
			(_129617_i)++;
			if ((_129821_t.get()._field_Id != static_cast<jule::U32>(11LLU))) {
				_1b389e136_pushErr(_self_.ptr(), _129821_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1b7180936;
			};
			if (((_129617_i >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[_129617_i].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				_1b389e136_pushErr(_self_.ptr(), _129821_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1b7180936;
			};
			_129921_item.get()._field_Expr=_1b38a6e63_buildEnumItemExpr(_self_, &(_129617_i), _129439_tokens);
			_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
		}
	_iter_next_1b7180936:;
	}
	_iter_end_1b7180936:;;
	return _129517_items;;
}



inline jule::Ptr<_1b2e64dd4_EnumDecl> _1b38a757e_buildEnumDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _133138_tokens) {
	if (((*(_133138_tokens)).len() < 3LL)) {
		_1b389e136_pushErr(_self_.ptr(), (*(_133138_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e64dd4_EnumDecl> _133617_e = jule::new_ptr<_1b2e64dd4_EnumDecl>(_1b2e64dd4_EnumDecl{._field_Token=(*(_133138_tokens))[1LL], });;
	if ((_133617_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Ident=_133617_e.get()._field_Token.get()._field_Kind;
	jule::I32 _134417_i = 2LL;;
	if (((*(_133138_tokens))[_134417_i].get()._field_Id == static_cast<jule::U32>(11LLU))) {
		(_134417_i)++;
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), (*(_133138_tokens))[(_134417_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133617_e;;
		};
		({
			__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, _133138_tokens, (&(_134417_i)), true);
			_133617_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1b389da09_stop(_self_.ptr());
			_1b389e136_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133617_e;;
		};
	} else {
		_133617_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _136117_itemTokens = _1b389b93b_range(&(_134417_i), jule::Str("{", 1), jule::Str("}", 1), _133138_tokens);;
	if ((_136117_itemTokens == nullptr)) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133617_e;;
	} else if ((_134417_i < (*(_133138_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_133138_tokens))[_134417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Public=_1b38ad376_isPub(&(_133617_e.get()._field_Ident));
	_133617_e.get()._field_End=(*(_133138_tokens))[(_134417_i - 1LL)];
	_133617_e.get()._field_Items=_1b38a7271_buildEnumItems(_self_, &(_136117_itemTokens));
	return _133617_e;;
}



inline jule::Any _1b38a788c_buildNodeEnumDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _137642_tokens) {
	if ((((*(_137642_tokens)).len() > 3LL) && ((*(_137642_tokens))[2LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
		if (((*(_137642_tokens))[3LL].get()._field_Id == static_cast<jule::U32>(10LLU))) {
			return jule::Any(_1b38a6aab_buildTypeEnumDecl(_self_, _137642_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1b38a757e_buildEnumDecl(_self_, _137642_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1b2e661e3_FieldDecl> _1b38a7b9a_buildField(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _138534_tokens) {
	jule::Ptr<_1b2e661e3_FieldDecl> _138617_f = jule::new_ptr<_1b2e661e3_FieldDecl>();;
	_138617_f.get()._field_Mutable=(_138534_tokens[0LL].get()._field_Id == static_cast<jule::U32>(35LLU));
	if (_138617_f.get()._field_Mutable) {
		if ((_138534_tokens.len() == 1LL)) {
			_1b389e136_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(1LL);
	};
	_138617_f.get()._field_Token=_138534_tokens[0LL];
	if ((_138617_f.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _138617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138617_f.get()._field_Ident=_138617_f.get()._field_Token.get()._field_Kind;
	if ((_138534_tokens.len() == 1LL)) {
		_1b389e136_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138534_tokens[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _138534_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138534_tokens=_138534_tokens.slice(2LL);
	jule::I32 _141417_i = 0LL;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, &(_138534_tokens), (&(_141417_i)), true);
		_138617_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141417_i < _138534_tokens.len())) {
		jule::Ptr<_1cb188a5c_Token> _141717_token = _138534_tokens[_141417_i];;
		if (((_141717_token.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_141717_token.get()._field_Kind.equal("=", 1)))) {
			_1b389e136_pushErr(_self_.ptr(), _138534_tokens[_141417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141417_i)++;
		if ((_141417_i >= _138534_tokens.len())) {
			_1b389e136_pushErr(_self_.ptr(), _141717_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(_141417_i);
		_138617_f.get()._field_Default=_1b389e763_buildExpr(_self_, &(_138534_tokens));
	};
	_138617_f.get()._field_Public=_1b38ad376_isPub(&(_138617_f.get()._field_Ident));
	return _138617_f;;
}



inline jule::Slice<jule::Ptr<_1b2e661e3_FieldDecl>> _1b38a7ea8_buildStructDeclFields(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _143445_tokens) {
	jule::Slice<jule::Ptr<_1b2e661e3_FieldDecl>> _143517_fields = nullptr;;
	jule::Slice<jule::Ptr<_1b3881756_stmt>> _143617_stmts = _1b3881aec_splitStmts(&(_143445_tokens));;
	{
		auto expr = &(_143617_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b719bdb4:;
		if (it != expr_end) {
			jule::Ptr<_1b3881756_stmt> _143721_stmt = *it;
			{
				_143445_tokens=_143721_stmt.get()._field_tokens;
				jule::Ptr<_1b2e661e3_FieldDecl> _143921_f = _1b38a7b9a_buildField(_self_, _143445_tokens);;
				_143517_fields = jule::alloc_for_append(_143517_fields,1);_143517_fields.__push(_143921_f);;
			}
			_iter_next_1b719bdb4:;
			++it;
			goto _iter_begin_1b719bdb4;
		}
		_iter_end_1b719bdb4:;
	};
	return _143517_fields;;
}



inline jule::Ptr<_1b2e66996_StructDecl> _1b38a82b6_buildStructDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _144540_tokens) {
	if (((*(_144540_tokens)).len() < 3LL)) {
		_1b389e136_pushErr(_self_.ptr(), (*(_144540_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _145117_i = 1LL;;
	jule::Ptr<_1b2e66996_StructDecl> _145217_s = jule::new_ptr<_1b2e66996_StructDecl>(_1b2e66996_StructDecl{._field_Token=(*(_144540_tokens))[_145117_i], });;
	if ((_145217_s.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_145117_i)++;
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	_145217_s.get()._field_Ident=_145217_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1cb188a5c_Token> _146613_errorToken = (*(_144540_tokens))[_145117_i];;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _146717_genericsTokens = _1b389b93b_range(&(_145117_i), jule::Str("[", 1), jule::Str("]", 1), _144540_tokens);;
	if ((_146717_genericsTokens != nullptr)) {
		_145217_s.get()._field_Generics=_1b38a2337_buildGenerics(_self_, &(_146717_genericsTokens), &(_146613_errorToken));
	};
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_144540_tokens))[(_145117_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _147717_bodyTokens = _1b389b93b_range(&(_145117_i), jule::Str("{", 1), jule::Str("}", 1), _144540_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	if ((_145117_i < (*(_144540_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145217_s.get()._field_Public=_1b38ad376_isPub(&(_145217_s.get()._field_Ident));
	_145217_s.get()._field_Fields=_1b38a7ea8_buildStructDeclFields(_self_, _147717_bodyTokens);
	_145217_s.get()._field_End=(*(_144540_tokens))[(_145117_i - 1LL)];
	return _145217_s;;
}



inline void _1b38a853b_checkMethodReceiver(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e5d20c_FnDecl>* _149339_f) {
	if ((*(_149339_f)).get()._field_Statically) {
		if ((((*(_149339_f)).get()._field_Params.len() > 0LL) && _1b2e5c250_IsSelf((*(_149339_f)).get()._field_Params[0LL].ptr()))) {
			_1b389e136_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149339_f)).get()._field_Params.len() == 0LL)) {
		_1b389e136_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2e5bddc_ParamDecl> _150513_param = (*(_149339_f)).get()._field_Params[0LL];;
	if ((!(_1b2e5c250_IsSelf(_150513_param.ptr())))) {
		_1b389e136_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>> _1b38a8849_buildTraitMethods(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _151241_tokens) {
	jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>> _151317_methods = nullptr;;
	jule::Slice<jule::Ptr<_1b3881756_stmt>> _151417_stmts = _1b3881aec_splitStmts(&(_151241_tokens));;
	{
		auto expr = &(_151417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71aac19:;
		if (it != expr_end) {
			jule::Ptr<_1b3881756_stmt> _151521_stmt = *it;
			{
				_151241_tokens=_151521_stmt.get()._field_tokens;
				if ((_151241_tokens.len() == 0LL)) {
					goto _iter_next_1b71aac19;
				};
				jule::Ptr<_1b2e5d20c_FnDecl> _152021_f = _1b38a4b97_buildFn(_self_, &(_151241_tokens), true, true);;
				if ((_152021_f != nullptr)) {
					if (_1b2e5d55e_IsAnon(_152021_f.ptr())) {
						_1b389e136_pushErr(_self_.ptr(), _152021_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
					_1b38a853b_checkMethodReceiver(_self_.ptr(), &(_152021_f));
					if ((_152021_f.get()._field_Generics.len() > 0LL)) {
						_1b389e136_pushErr(_self_.ptr(), _152021_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
					};
					_151317_methods = jule::alloc_for_append(_151317_methods,1);_151317_methods.__push(_152021_f);;
				};
			}
			_iter_next_1b71aac19:;
			++it;
			goto _iter_begin_1b71aac19;
		}
		_iter_end_1b71aac19:;
	};
	return _151317_methods;;
}



inline jule::Ptr<_1b2e670a1_TraitDecl> _1b38a8b57_buildTraitDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _153539_tokens) {
	if (((*(_153539_tokens)).len() < 3LL)) {
		_1b389e136_pushErr(_self_.ptr(), (*(_153539_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e670a1_TraitDecl> _154017_t = jule::new_ptr<_1b2e670a1_TraitDecl>(_1b2e670a1_TraitDecl{._field_Token=(*(_153539_tokens))[1LL], });;
	if ((_154017_t.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _154017_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154017_t.get()._field_Ident=_154017_t.get()._field_Token.get()._field_Kind;
	jule::I32 _154817_i = 2LL;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _154917_bodyTokens = _1b389b93b_range(&(_154817_i), jule::Str("{", 1), jule::Str("}", 1), _153539_tokens);;
	if ((_154917_bodyTokens == nullptr)) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _154017_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154817_i < (*(_153539_tokens)).len())) {
		_1b389e136_pushErr(_self_.ptr(), (*(_153539_tokens))[_154817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154017_t.get()._field_Public=_1b38ad376_isPub(&(_154017_t.get()._field_Ident));
	_154017_t.get()._field_Methods=_1b38a8849_buildTraitMethods(_self_, _154917_bodyTokens);
	_154017_t.get()._field_End=(*(_153539_tokens))[(_154817_i - 1LL)];
	return _154017_t;;
}



inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38a8e65_buildCppLinkFn(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _156538_tokens) {
	_156538_tokens=_156538_tokens.slice(1LL);
	jule::Ptr<_1b2e5d20c_FnDecl> _156717_f = _1b38a4b97_buildFn(_self_, &(_156538_tokens), false, true);;
	if ((_156717_f != nullptr)) {
		if (_1b2e5d55e_IsAnon(_156717_f.ptr())) {
			_1b389e136_pushErr(_self_.ptr(), _156717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		_156717_f.get()._field_Public=false;
		_156717_f.get()._field_CppLinked=true;
	};
	return _156717_f;;
}



inline jule::Ptr<_1b2e5e1db_VarDecl> _1b38a9273_buildCppLinkVar(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _157839_tokens) {
	_157839_tokens=_157839_tokens.slice(1LL);
	jule::Ptr<_1b2e5e1db_VarDecl> _158017_v = _1b38a1b72_buildVar(_self_, _157839_tokens);;
	if ((_158017_v != nullptr)) {
		_158017_v.get()._field_Public=false;
		_158017_v.get()._field_CppLinked=true;
		if ((_158017_v.get()._field_Expr != nullptr)) {
			_1b389e136_pushErr(_self_.ptr(), _158017_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _158017_v;;
}



inline jule::Ptr<_1b2e66996_StructDecl> _1b38a9581_buildCppLinkStruct(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _159142_tokens) {
	_159142_tokens=_159142_tokens.slice(1LL);
	jule::Ptr<_1b2e66996_StructDecl> _159317_s = _1b38a82b6_buildStructDecl(_self_, &(_159142_tokens));;
	if ((_159317_s != nullptr)) {
		_159317_s.get()._field_Public=false;
		{
			auto expr = &(_159317_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b71ba201:;
			if (it != expr_end) {
				jule::Ptr<_1b2e661e3_FieldDecl> _159625_f = *it;
				{
					_159625_f.get()._field_Public=true;
				}
				_iter_next_1b71ba201:;
				++it;
				goto _iter_begin_1b71ba201;
			}
			_iter_end_1b71ba201:;
		};
		_159317_s.get()._field_CppLinked=true;
	};
	return _159317_s;;
}



inline jule::Ptr<_1b2e62a4c_TypeAliasDecl> _1b38a988e_buildCppLinkTypeAlias(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _160545_tokens) {
	_160545_tokens=_160545_tokens.slice(1LL);
	jule::Ptr<_1b2e62a4c_TypeAliasDecl> _160717_t = _1b38a0d5d_buildTypeAliasDecl(_self_, &(_160545_tokens));;
	if ((_160717_t != nullptr)) {
		_160717_t.get()._field_Public=false;
		_160717_t.get()._field_CppLinked=true;
	};
	return _160717_t;;
}



inline jule::Ptr<_1b2e63e38_UseDecl> _1b38a9b9c_buildCppLinkUse(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _161539_tokens) {
	if ((_161539_tokens.len() == 1LL)) {
		_1b389e136_pushErr(_self_.ptr(), _161539_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161539_tokens=_161539_tokens.slice(1LL);
	;
	return _1b38a60d8_buildUseDecl(_self_.ptr(), _161539_tokens, true);;
}



inline jule::Any _1b38a9eaa_buildCppLink(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _162637_tokens) {
	jule::Ptr<_1cb188a5c_Token> _162717_token = (*(_162637_tokens))[0LL];;
	if (((*(_162637_tokens)).len() == 1LL)) {
		_1b389e136_pushErr(_self_.ptr(), _162717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162717_token=(*(_162637_tokens))[1LL];
	{
		auto &_match_expr{ _162717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b71becd8:;
			{
				return jule::Any(_1b38a8e65_buildCppLinkFn(_self_, (*(_162637_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1b71c0987:;
			{
				return jule::Any(_1b38a9273_buildCppLinkVar(_self_, (*(_162637_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_1b71c09ed:;
			{
				return jule::Any(_1b38a9581_buildCppLinkStruct(_self_, (*(_162637_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1b71c0a64:;
			{
				return jule::Any(_1b38a988e_buildCppLinkTypeAlias(_self_, (*(_162637_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b71c0833:;
			{
				_1b389e136_pushErr(_self_.ptr(), _162717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b71c0921:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e5d20c_FnDecl> _1b38aa2b8_getMethod(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _165034_tokens) {
	jule::I32 _165117_i = 0LL;;
	jule::Ptr<_1cb188a5c_Token> _165217_token = (*(_165034_tokens))[_165117_i];;
	if ((_165217_token.get()._field_Id == static_cast<jule::U32>(37LLU))) {
		if (((_165117_i + 1LL) >= (*(_165034_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165117_i)++;
		_165217_token=(*(_165034_tokens))[_165117_i];
	};
	if ((_165217_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_165117_i + 1LL) >= (*(_165034_tokens)).len())) {
			_1b389e136_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165117_i)++;
		_165217_token=(*(_165034_tokens))[_165117_i];
	};
	if ((_165217_token.get()._field_Id != static_cast<jule::U32>(32LLU))) {
		_1b389e136_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e5d20c_FnDecl> _167617_f = _1b38a4b97_buildFn(_self_, _165034_tokens, true, false);;
	if (((_167617_f != nullptr) && _1b2e5d55e_IsAnon(_167617_f.ptr()))) {
		_1b389e136_pushErr(_self_.ptr(), _167617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _167617_f;;
}



inline void _1b38aa5d7_parseImplBody(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1b2e676ab_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_1b3881756_stmt>> _168417_stmts = _1b3881aec_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71c884c:;
		if (it != expr_end) {
			jule::Ptr<_1b3881756_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_1cb188a5c_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(38LLU)) {
						_case_begin_1b71c8e9b:;
						{
							_1b389ece6_pushDirective(_self_.ptr(), _1b389ea71_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_1b71c884c;
						}
					}
					_match_end_1b71c9980:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(9LLU)) {
						_case_begin_1b71c9ad4:;
						{
							jule::Ptr<_1b2e5e1db_VarDecl> _169625_v = _1b38a1b72_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								(*(_168338_ipl)).get()._field_Statics = jule::alloc_for_append((*(_168338_ipl)).get()._field_Statics,1);(*(_168338_ipl)).get()._field_Statics.__push(_169625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(37LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
						_case_begin_1b71c9ead:;
						{
							jule::Ptr<_1b2e5d20c_FnDecl> _170325_f = _1b38aa2b8_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_1b38a853b_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_1b38aae78_applyFnMeta(_self_.ptr(), &(_170325_f));
								(*(_168338_ipl)).get()._field_Methods = jule::alloc_for_append((*(_168338_ipl)).get()._field_Methods,1);(*(_168338_ipl)).get()._field_Methods.__push(_170325_f);;
							};
						}
					}
					else {
						_case_begin_1b71c9e47:;
						{
							_1b389e136_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1b71c884c;
						}
					}
					_match_end_1b71ca673:;
				};
			}
			_iter_next_1b71c884c:;
			++it;
			goto _iter_begin_1b71c884c;
		}
		_iter_end_1b71c884c:;
	};
}



inline jule::Ptr<_1b2e676ab_Impl> _1b38aa8e5_buildImpl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _171633_tokens) {
	jule::Ptr<_1cb188a5c_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_1b389e136_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _172317_i = 1LL;;
	jule::Ptr<_1b2e4b77d_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1b389e136_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e676ab_Impl> _173417_ipl = jule::new_ptr<_1b2e676ab_Impl>(_1b2e676ab_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U32>(12LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U32>(3LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_1b2e4b77d_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_1b2e4b77d_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _177217_bodyTokens = _1b389b93b_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_1b389da09_stop(_self_.ptr());
		_1b389e136_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_1b389e136_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_1b38aa5d7_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _1b38aac03_buildNodeData(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _178738_tokens) {
	jule::Ptr<_1cb188a5c_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b71d9e9b:;
			{
				jule::Ptr<_1b2e5d20c_FnDecl> _179221_f = _1b38a4b97_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
					if (_1b2e5d55e_IsAnon(_179221_f.ptr())) {
						_1b389e136_pushErr(_self_.ptr(), _179221_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(35LLU) || _match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1b71dadd1:;
			{
				return jule::Any(_1b38a1b72_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1b71dae47:;
			{
				return jule::Any(_1b38a0d5d_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1b71daead:;
			{
				return _1b38a788c_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_1b71da61c:;
			{
				return jule::Any(_1b38a82b6_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1b71da683:;
			{
				return jule::Any(_1b38a8b57_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b71da6e9:;
			{
				return jule::Any(_1b38aa8e5_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b71da760:;
			{
				return _1b38a9eaa_buildCppLink(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_1b71da584:;
			{
				_1b389e136_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b71da3db:;
	};
}



inline void _1b38aae78_applyFnMeta(_1b389d6c9_parser* _self_, jule::Ptr<_1b2e5d20c_FnDecl>* _182335_f) {
	(*(_182335_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1b38ab1ed_applyMeta(_1b389d6c9_parser* _self_, _1b2e180da_Node* _182833_node) {
	{
		auto &_match_expr{ (*(_182833_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b71e17ee:;
			{
				jule::Ptr<_1b2e5e1db_VarDecl> _183121_v = (*(_182833_node))._field_Data.cast_ptr<_1b2e5e1db_VarDecl>(&__jule_any_type16);;
				if ((_183121_v == nullptr)) {
					return;;
				};
				_183121_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b71e1865:;
			{
				jule::Ptr<_1b2e5d20c_FnDecl> _183821_f = (*(_182833_node))._field_Data.cast_ptr<_1b2e5d20c_FnDecl>(&__jule_any_type14);;
				if ((_183821_f == nullptr)) {
					return;;
				};
				_1b38aae78_applyFnMeta(_self_, &(_183821_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b71e18cb:;
			{
				jule::Ptr<_1b2e66996_StructDecl> _184421_sd = (*(_182833_node))._field_Data.cast_ptr<_1b2e66996_StructDecl>(&__jule_any_type13);;
				if ((_184421_sd == nullptr)) {
					return;;
				};
				_184421_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b71e15e0:;
	};
}



inline void _1b38ab473_pushUseDecl(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1b2e63e38_UseDecl>* _185336_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_185336_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1b389e136_pushErr(_self_.ptr(), (*(_185336_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1b389e455_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b38ab781_pushMetaNodes(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _186138_tokens) {
	{
		auto &_match_expr{ (*(_186138_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b71ec101:;
			{
				;
				jule::Ptr<_1b2e63e38_UseDecl> _186521_decl = _1b38a60d8_buildUseDecl(_self_.ptr(), (*(_186138_tokens)), false);;
				_1b38ab473_pushUseDecl(_self_, &(_186521_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b71ec178:;
			{
				if ((((*(_186138_tokens)).len() > 1LL) && ((*(_186138_tokens))[1LL].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
					jule::Ptr<_1b2e63e38_UseDecl> _187025_decl = _1b38a9b9c_buildCppLinkUse(_self_, (*(_186138_tokens)));;
					_1b38ab473_pushUseDecl(_self_, &(_187025_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_1b71ec200:;
			{
				_1b389ece6_pushDirective(_self_.ptr(), _1b389ea71_buildDirective(_self_.ptr(), (*(_186138_tokens))));
				return true;;
			}
		}
		_match_end_1b71ec024:;
	};
	return false;;
}



inline _1b2e180da_Node _1b38aba8e_parseNode(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _188134_st) {
	_1b2e180da_Node _188217_node = _1b2e180da_Node{._field_Token=(*(_188134_st))[0LL], };;
	if (_1b38ab781_pushMetaNodes(_self_, _188134_st)) {
		return _188217_node;;
	};
	jule::Any _189017_data = _1b38aac03_buildNodeData(_self_, _188134_st);;
	if ((_189017_data == nullptr)) {
		return _188217_node;;
	};
	_188217_node._field_Data=_189017_data;
	_1b38ab1ed_applyMeta(_self_.ptr(), &(_188217_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b389e136_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188217_node;;
}



inline void _1b38abd14_appendNode(jule::Ptr<_1b389d6c9_parser> _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _190535_st) {
	if (((*(_190535_st)).len() == 0LL)) {
		return;;
	};
	_1b2e180da_Node _190917_node = _1b38aba8e_parseNode(_self_, _190535_st);;
	if (((_190917_node._field_Data == nullptr) || _1b389dc6d_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190917_node);;
}



inline void _1b38ac276_removeRange(_1b389d6c9_parser* _self_, jule::I32 _191630_i, jule::Str _191638_kind, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _191650_tokens, jule::Slice<jule::I32>* _191673_ranges) {
	jule::Str _191713_close = _1b389c750_getCloseKindOfBrace(_191638_kind);;
	for (; (_191630_i >= 0LL); (_191630_i)--) {
		{
			jule::Ptr<_1cb188a5c_Token> _191917_tok = (*(_191650_tokens))[(*(_191673_ranges))[_191630_i]];;
			if ((_191917_tok.get()._field_Kind != _191713_close)) {
				goto _iter_next_1b7206605;
			};
			(*(_191673_ranges))=jule::append((*(_191673_ranges)).slice(0LL, _191630_i),(*(_191673_ranges)).slice((_191630_i + 1LL)));
			goto _iter_end_1b7206605;
		}
	_iter_next_1b7206605:;
	}
	_iter_end_1b7206605:;;
}



inline void _1b38ac63e_pushWrongOrderCloseErr(_1b389d6c9_parser* _self_, jule::Ptr<_1cb188a5c_Token>* _192842_t, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _192854_tokens, jule::Slice<jule::I32>* _192873_ranges) {
	{
		auto &_match_expr{ (*(_192854_tokens))[(*(_192873_ranges))[((*(_192873_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1b7208690:;
			{
				_1b389e136_pushErr(_self_, (*(_192842_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1b7208717:;
			{
				_1b389e136_pushErr(_self_, (*(_192842_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1b720878e:;
			{
				_1b389e136_pushErr(_self_, (*(_192842_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b720856e:;
	};
}



inline void _1b38acaa1_pushRangeClose(_1b389d6c9_parser* _self_, jule::Ptr<_1cb188a5c_Token> _193933_t, jule::Str _193944_left, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _193956_tokens, jule::Slice<jule::I32>* _193979_ranges) {
	jule::I32 _194013_n = (*(_193979_ranges)).len();;
	if ((_194013_n == 0LL)) {
		{
			auto &_match_expr{ _193933_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1b720b275:;
				{
					_1b389e136_pushErr(_self_, _193933_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1b720b2ec:;
				{
					_1b389e136_pushErr(_self_, _193933_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1b720b374:;
				{
					_1b389e136_pushErr(_self_, _193933_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b720b044:;
		};
		return;;
	} else if (((*(_193956_tokens))[(*(_193979_ranges))[(_194013_n - 1LL)]].get()._field_Kind != _193944_left)) {
		_1b38ac63e_pushWrongOrderCloseErr(_self_, &(_193933_t), _193956_tokens, _193979_ranges);
	};
	_1b38ac276_removeRange(_self_, static_cast<jule::I32>((_194013_n - 1LL)), _193933_t.get()._field_Kind, _193956_tokens, _193979_ranges);
}



inline void _1b38acd26_checkRanges(_1b389d6c9_parser* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _195731_tokens) {
	jule::Slice<jule::I32> _195817_ranges = nullptr;;
	{
		auto expr = _195731_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b720e377:;
		if (it != expr_end) {
			jule::I32 _196013_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> *_196016_token = it;
			{
				if (((*(_196016_token)).get()._field_Id != static_cast<jule::U32>(3LLU))) {
					goto _iter_next_1b720e377;
				};
				{
					auto &_match_expr{ (*(_196016_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1b72105dc:;
						{
							_195817_ranges = jule::alloc_for_append(_195817_ranges,1);_195817_ranges.__push(_196013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b7210686:;
						{
							_1b38acaa1_pushRangeClose(_self_, (*(_196016_token)), jule::Str("(", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b72106ec:;
						{
							_1b38acaa1_pushRangeClose(_self_, (*(_196016_token)), jule::Str("{", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b7210763:;
						{
							_1b38acaa1_pushRangeClose(_self_, (*(_196016_token)), jule::Str("[", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					_match_end_1b7210169:;
				};
			}
			_iter_next_1b720e377:;
			++it;
			_196013_i++;
			goto _iter_begin_1b720e377;
		}
		_iter_end_1b720e377:;
	};
	{
		auto expr = &(_195817_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b720e113:;
		if (it != expr_end) {
			jule::I32 _197816_i = *it;
			{
				jule::Ptr<_1cb188a5c_Token> _197917_token = (*(_195731_tokens))[_197816_i];;
				{
					auto &_match_expr{ _197917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b7212ce8:;
						{
							_1b389e136_pushErr(_self_, _197917_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1b7212d5e:;
						{
							_1b389e136_pushErr(_self_, _197917_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b7212dc5:;
						{
							_1b389e136_pushErr(_self_, _197917_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b7212ab7:;
				};
			}
			_iter_next_1b720e113:;
			++it;
			goto _iter_begin_1b720e113;
		}
		_iter_end_1b720e113:;
	};
}



inline void _1b38ad09b_parse(jule::Ptr<_1b389d6c9_parser> _self_, jule::Ptr<_1cb18dde7_File>* _199130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1b2e172e8_Ast>(_1b2e172e8_Ast{._field_File=(*(_199130_f)), });
	_1b38acd26_checkRanges(_self_.ptr(), &((*(_199130_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b3881756_stmt>> _200117_stmts = _1b3881aec_splitStmts(&((*(_199130_f)).get()._field_Tokens));;
	jule::I32 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1b3881756_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U32>(38LLU))) {
				goto _iter_end_1b7215c96;
			};
			if ((!(_1cac0dda7_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1b7215c96;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1b389ea71_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_1b7215c96:;
	}
	_iter_end_1b7215c96:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1b3881756_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1b38abd14_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_1b389dc6d_stopped(_self_.ptr())) {
				goto _iter_end_1b7214cc8;
			};
		}
	_iter_next_1b7214cc8:;
	}
	_iter_end_1b7214cc8:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b389e136_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b389d6c9_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1b38ae9b5_pushErr(_1b38ae3dd_typeBuilder* _self_, jule::Ptr<_1cb188a5c_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1b389e136_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1b38aecd4_pushSuggestion(_1b38ae3dd_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1b389e455_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b0048_buildPrim(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1b2e4b77d_TypeDecl> _5517_t = _1b38ade59_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b02ac_buildNamespace(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1b2e4b77d_TypeDecl> _6117_t = jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1b2e4c84a_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1b2e4c84a_NamespaceTypeDecl>();;
	jule::I32 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1cb188a5c_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
					_1b38ae9b5_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_1b38aecd4_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
				goto _iter_end_1b721e6d9;
			};
			(_6617_n)++;
		}
	_iter_next_1b721e6d9:;
	}
	_iter_end_1b721e6d9:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_1b38b09e9_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type97);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _1b38b0521_buildGenerics(_1b38ae3dd_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1cb188a5c_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_9413_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _9917_parts = _1b38b0785_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_1b38ae9b5_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1b2e4b77d_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7226db7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _10621_part = *it;
			{
				jule::I32 _10721_j = 0LL;;
				jule::Ptr<_1b2e4b77d_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1b38ae9b5_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1b7226db7:;
			++it;
			goto _iter_begin_1b7226db7;
		}
		_iter_end_1b7226db7:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b38b0785_identGenerics(_1b38ae3dd_typeBuilder* _self_) {
	jule::I32 _11813_first = (*((*(_self_))._field_i));;
	jule::I32 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1cb188a5c_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b722a86b:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b722a8e3:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1b722a64b:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b722957e;
			};
		}
	_iter_next_1b722957e:;
	}
	_iter_end_1b722957e:;;
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _13618_parts;;
	jule::Slice<_1cac0bec6_Log> _13625_errors;;
	({
		__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b389c4a8_parts(&(_13517_tokens), static_cast<jule::U32>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b09e9_buildIdent(_1b38ae3dd_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U32>(22LLU)))) {
		return _1b38b02ac_buildNamespace(_self_);;
	};
	jule::Ptr<_1cb188a5c_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b2e4bd44_IdentTypeDecl> _14917_it = jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b2e4b77d_TypeDecl> _15517_itd = jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type19)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(20LLU)))) {
		_14917_it.get()._field_Generics=_1b38b0521_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1b38ae9b5_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1b38ae9b5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1b2e4c493_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1b2e4c493_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1b2e4b77d_TypeDecl> _17417_ident = _1b38b09e9_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b7235579:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1b2e4bd44_IdentTypeDecl>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b7235656:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1b2e4c493_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);
			}
		}
		_match_end_1b72354be:;
	};
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b0c5d_buildCppLink(_1b38ae3dd_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U32>(20LLU)))) {
		_1b38ae9b5_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1b2e4b77d_TypeDecl> _19317_t = _1b38b09e9_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_1b2e4bd44_IdentTypeDecl>(&__jule_any_type19).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b0ec2_buildFn(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b2e5d20c_FnDecl> _20017_f = _1b38a4746_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2e5d55e_IsAnon(_20017_f.ptr())))) {
		_1b38ae9b5_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1236_buildPtr(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b38ae9b5_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U32>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4d609_PtrTypeDecl>(_1b2e4d609_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type78)});;
	};
	jule::Ptr<_1b2e4b77d_TypeDecl> _23117_elem = _1b38b2424_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4d609_PtrTypeDecl>(_1b2e4d609_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b149a_buildSptr(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b38ae9b5_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b2e4b77d_TypeDecl> _25217_elem = _1b38b2424_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4cb36_SptrTypeDecl>(_1b2e4cb36_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b170e_buildOp(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b7242c18:;
			{
				return _1b38b1236_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b7243ce6:;
			{
				return _1b38b149a_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b7243d5c:;
			{
				return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b2e4cb36_SptrTypeDecl>(_1b2e4cb36_SptrTypeDecl{._field_Elem=_1b38b149a_buildSptr(_self_)}), &__jule_any_type79)});;
			}
		}
		else {
			_case_begin_1b724339a:;
			{
				_1b38ae9b5_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b7243224:;
	};
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1973_buildSlc(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b2e4b77d_TypeDecl> _28717_elem = _1b38b2424_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4d032_SlcTypeDecl>(_1b2e4d032_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1bd7_buildArr(_1b38ae3dd_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _30017_exprTokens = _1b389b93b_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b38ae9b5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b2e4b77d_TypeDecl> _30617_elem = _1b38b2424_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2e4dc8b_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1b2e4dc8b_ArrTypeDecl>(_1b2e4dc8b_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_1cb188a5c_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U32>(7LLU))) && _31517_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_31117_arrt.get()._field_Size=_1b389e763_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type76)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b1e4b_buildMap(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b38ae9b5_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _33717_keyTokens = _1b389b93b_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b38ae9b5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1b38ae9b5_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b2e4e4d9_MapTypeDecl> _34617_mapt = jule::new_ptr<_1b2e4e4d9_MapTypeDecl>();;
	jule::I32 _34717_j = 0LL;;
	jule::Ptr<_1b2e4b77d_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1b38ae9b5_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1b2e4b77d_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_assign_result = _1b38a0a50_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type80)});;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b21b0_buildEnumerable(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U32>(3LLU))) || (!_36817_token.get()._field_Kind.equal("[", 1)))) {
		_1b38ae9b5_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U32>(3LLU)) && _36817_token.get()._field_Kind.equal("]", 1))) {
		return _1b38b1973_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1b38b1bd7_buildArr(_self_);;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38b2424_step(_1b38ae3dd_typeBuilder* _self_) {
	jule::Ptr<_1cb188a5c_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b7257205:;
			{
				return _1b38b0048_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1b7256a95:;
			{
				return _1b38b09e9_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b7256b0b:;
			{
				return _1b38b0c5d_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1b7256b72:;
			{
				return _1b38b0ec2_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b7257546:;
			{
				return _1b38b170e_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1b72575ac:;
			{
				return _1b38b21b0_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1b7257623:;
			{
				return _1b38b1e4b_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1b7256996:;
			{
				((*((*(_self_))._field_i)))++;
				_1b38ae9b5_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b7256820:;
	};
}



inline __jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool _1b38b2688_build(_1b38ae3dd_typeBuilder* _self_) {
	__jule_tuple_x_1b2e4b77d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2e4b77d_TypeDecl> _41117_root = _1b38b2424_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1b38adc17_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b38ae3dd_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b31d7de3_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1b31d9796_pushErr(_1b31d9246_directiveEval* _self_, jule::Ptr<_1cb188a5c_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1cac0c416_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _1b31d9b4d_splitOperans(_1b31d9246_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3617_i = 0LL;;
	jule::I32 _3717_rangeN = 0LL;;
	jule::I32 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1cb188a5c_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b727c4e4:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1b727a679;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b727c55a:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1b727c2c4:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U32>(7LLU)))) {
				goto _iter_next_1b727a679;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I32>((_3617_i + 1LL));
			};
		}
	_iter_next_1b727a679:;
	}
	_iter_end_1b727a679:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_1b31d9796_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1b31d9e5b_evalDirectiveIdent(_1b31d9246_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7280508:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1b7280508:;
			++it;
			goto _iter_begin_1b7280508;
		}
		_iter_end_1b7280508:;
	};
	return false;;
}



inline jule::Bool _1b31da269_evalDirectivePart(_1b31d9246_directiveEval* _self_, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1b31d9796_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1b31d9e5b_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1b31da4cd_eval(_1b31d9246_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1b31d9796_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _11317_logicalOrParts = _1b31d9b4d_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b728683e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _12021_logicalAndParts = _1b31d9b4d_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7287a3d:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1cb188a5c_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1cb188a5c_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U32>(3LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_1cb188a5c_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_1b31d9796_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1b31da269_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1b7287a3d:;
						++it;
						goto _iter_begin_1b7287a3d;
					}
					_iter_end_1b7287a3d:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1b728683e:;
			++it;
			goto _iter_begin_1b728683e;
		}
		_iter_end_1b728683e:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b31d9246_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b37a5db7_JuleImporter> static__1b32cea34_New(_1b31d7de3_CompileInfo _5819_info) {
	jule::Ptr<_1b37a5db7_JuleImporter> _5917_imp = jule::new_ptr<_1b37a5db7_JuleImporter>(_1b37a5db7_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1cac17344_PathStdlib}), });;
	_1b31d870c_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>> _1b33230e9_AllPackages(_1b37a5db7_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1b3342239_SetModPath(_1b37a5db7_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1b33538aa_GetModPath(_1b37a5db7_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1b3380002_ModById(_1b37a5db7_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b3384622_GetImport(_1b37a5db7_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b728ebaa:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1b728ebaa:;
			++it;
			goto _iter_begin_1b728ebaa;
		}
		_iter_end_1b728ebaa:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log _1b344752b_ImportPackage(_1b37a5db7_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	jule::Slice<jule::Ptr<_20bad439a_DirEntry>> _9717_dirents = ({
		auto except = static__1cab7a263_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1cac0bec6_Log>::make({_1b32c9347_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_20bad439a_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1b31e93dd_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1cac0bec6_Log> _10525_errs = _1b31e961e_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1b2e172e8_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1b2e172e8_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7293be2:;
		if (it != expr_end) {
			jule::Ptr<_20bad439a_DirEntry> _11316_dirent = *it;
			{
				if ((_20ba66a47_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1cab6e950_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1b7293be2;
				};
				jule::Str _11917__path = _1cab78b57_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1cb18dde7_File> _12021_file = _1cb190426_NewFileSet(_11917__path);;
				_1cb18e579_Fill(_12021_file.ptr(), _1b320331a_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1cac0bec6_Log> _12221_errors = _1cb19acc2_Lex(_12021_file, static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1b38356c7_FileInfo> _12721_finfo = _1b38382ce_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1b31bd5e3_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1b7293be2;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1cac0bec6_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b3458ac0_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1b7293be2;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1b7293be2:;
			++it;
			goto _iter_begin_1b7293be2;
		}
		_iter_end_1b7293be2:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b34562a4_Imported(_1b37a5db7_JuleImporter* _self_, jule::Ptr<_1b2eab755_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7299203:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b7299203:;
			++it;
			goto _iter_begin_1b7299203;
		}
		_iter_end_1b7299203:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b729a9c9:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1b729a9c9:;
				++it;
				_16217_i++;
				goto _iter_begin_1b729a9c9;
			}
			_iter_end_1b729a9c9:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_1cac0bec6_Log _1b3458ac0_isPassBuildDirectives(_1b37a5db7_JuleImporter* _self_, jule::Ptr<_1b2e172e8_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b729daed:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1b729daed;
				};
				_1b31d9246_directiveEval _18421_de = _1b31d9246_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1b31da4cd_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b729daed:;
			++it;
			goto _iter_begin_1b729daed;
		}
		_iter_end_1b729daed:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b37a5db7_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3200b75_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b72be6bd_isCommonOrdered(jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _1834_s, jule::Ptr<_1b2e683e3_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72c0768:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72c1082:;
					if (it != expr_end) {
						jule::Ptr<_1b2e683e3_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b72c1082:;
						++it;
						goto _iter_begin_1b72c1082;
					}
					_iter_end_1b72c1082:;
				};
			}
			_iter_next_1b72c0768:;
			++it;
			goto _iter_begin_1b72c0768;
		}
		_iter_end_1b72c0768:;
	};
	return true;;
}

inline jule::Bool _1b72c4618_isCommonOrdered(jule::Slice<jule::Ptr<_1b2ed8034_Var>> _1834_s, jule::Ptr<_1b2ed8034_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72c566e:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72c5e88:;
					if (it != expr_end) {
						jule::Ptr<_1b2ed8034_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b72c5e88:;
						++it;
						goto _iter_begin_1b72c5e88;
					}
					_iter_end_1b72c5e88:;
				};
			}
			_iter_next_1b72c566e:;
			++it;
			goto _iter_begin_1b72c566e;
		}
		_iter_end_1b72c566e:;
	};
	return true;;
}



inline void _1b72bad90_orderCommon(jule::Slice<jule::Ptr<_1b2e683e3_Struct>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72bc3e1:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b72be6bd_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b72bd227:;
				}
				_iter_end_1b72bd227:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b72bc3e1;
				};
				(_3217_n)--;
			}
			_iter_next_1b72bc3e1:;
			++it;
			goto _iter_begin_1b72bc3e1;
		}
		_iter_end_1b72bc3e1:;
	};
}

inline void _1b72bc5de_orderCommon(jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72c233b:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b72c4618_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b72c3172:;
				}
				_iter_end_1b72c3172:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b72c233b;
				};
				(_3217_n)--;
			}
			_iter_next_1b72c233b:;
			++it;
			goto _iter_begin_1b72c233b;
		}
		_iter_end_1b72c233b:;
	};
}



inline void static__1b34e7015_orderStructures(jule::Slice<jule::Ptr<_1b2e683e3_Struct>>* _5136_structs) {
	_1b72bad90_orderCommon(_5136_structs);
}



inline void static__1b36761e9_orderVars(jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _5730_vars) {
	_1b72bc5de_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1b32c7a3d_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b397cab6_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1b39b3bda_optimizeChild(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8d050_Scope>* _3938_s) {
	jule::Ptr<_1b39b3712_scopeDeadCode> _4017_sdc = jule::new_ptr<_1b39b3712_scopeDeadCode>(_1b39b3712_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1b39b632a_optimizeStmts(_4017_sdc);
	};
}



inline void _1b39b3e82_optimizeBodyChildExceptional(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8d050_Scope>* _5053_s) {
	jule::Ptr<_1b39b3712_scopeDeadCode> _5117_sdc = jule::new_ptr<_1b39b3712_scopeDeadCode>(_1b39b3712_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1b39b632a_optimizeStmts(_5117_sdc);
	};
}



inline void _1b39b4218_optimizeBodyChild(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8d050_Scope>* _6142_s) {
	jule::Ptr<_1b39b3712_scopeDeadCode> _6217_sdc = jule::new_ptr<_1b39b3712_scopeDeadCode>(_1b39b3712_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1b39b632a_optimizeStmts(_6217_sdc);
	};
}



inline void _1b39b448d_optimizeExprModel(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1b39b766c_exprDeadCode _7213_edc = static__1b39b7c99_new(&(_self_));;
	_1b39bd9b4_optimize(&_7213_edc, _7142_model);
}



inline void _1b39b4669_eliminateFollowed(_1b39b3712_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1b39b3712_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1b7341223:;
	}
	_iter_end_1b7341223:;;
}



inline void _1b39b48de_pushGoto(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e90a7a_GotoSt> _9232_gt) {
	jule::I32 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b7343b0a:;
	}
	_iter_end_1b7343b0a:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1b2e90a7a_GotoSt>>::make({_9232_gt}));
}



inline void _1b39b4b64_pushLabel(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e9078e_Label> _10233_l) {
	jule::I32 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1b734536a;
			};
			(_10317_i)++;
		}
	_iter_next_1b734536a:;
	}
	_iter_end_1b734536a:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1b2e9078e_Label>>::make({_10233_l}));
}



inline void _1b39b4dd9_optimizeRangeIter(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8ec00_RangeIter> _11541_it) {
	_1b39b448d_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1b39b4218_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1b39b515e_optimizeWhileIter(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8e31a_WhileIter> _12041_it) {
	_1b39b448d_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1b39b614e_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1b39b4218_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1b39b53d4_optimizeInfIter(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8dd97_InfIter> _12839_it) {
	_1b39b4218_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1b39b5659_optimizeConditional(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e8daab_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b734b3b5:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8d44b_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1b39b448d_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1b39b4218_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1b734b3b5:;
			++it;
			goto _iter_begin_1b734b3b5;
		}
		_iter_end_1b734b3b5:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1b39b3bda_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1b39b4218_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1b39b58ce_optimizeMatch(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e91c9b_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b734d791:;
		if (it != expr_end) {
			jule::Ptr<_1b2e927e6_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73545bb:;
					if (it != expr_end) {
						jule::Ptr<_1b3030a93_Data> _15225_expr = *it;
						{
							_1b39b448d_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1b73545bb:;
						++it;
						goto _iter_begin_1b73545bb;
					}
					_iter_end_1b73545bb:;
				};
				_1b39b4218_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1b734d791:;
			++it;
			goto _iter_begin_1b734d791;
		}
		_iter_end_1b734d791:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1b39b3bda_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1b39b4218_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1b39b5b54_optimizeAssign(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e913a5_Assign> _16838_assign) {
	_1b39b448d_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1b39b448d_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1b39b5dc9_optimizeMultiAssign(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Ptr<_1b2e9175c_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7357954:;
		if (it != expr_end) {
			jule::Ptr<_1b3030a93_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1b39b448d_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1b7357954:;
			++it;
			goto _iter_begin_1b7357954;
		}
		_iter_end_1b7357954:;
	};
	_1b39b448d_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1b39b614e_optimizeStmt(jule::Ptr<_1b39b3712_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b73590d7:;
			{
				jule::Ptr<_1b2e8d050_Scope> _18521_scope = _18236_st.cast_ptr<_1b2e8d050_Scope>(&__jule_any_type21);;
				if (_18521_scope.get()._field_Deferred) {
					_1b39b6616_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1b39b3bda_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b735925d:;
			{
				_1b39b4dd9_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1b2e8ec00_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b73592c4:;
			{
				_1b39b515e_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1b2e8e31a_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b735933a:;
			{
				_1b39b53d4_optimizeInfIter(_self_, _18236_st.cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b73593b2:;
			{
				_1b39b5659_optimizeConditional(_self_, _18236_st.cast_ptr<_1b2e8daab_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b7359439:;
			{
				_1b39b58ce_optimizeMatch(_self_, _18236_st.cast_ptr<_1b2e91c9b_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b73594b1:;
			{
				_1b39b5b54_optimizeAssign(_self_, _18236_st.cast_ptr<_1b2e913a5_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b7359538:;
			{
				_1b39b5dc9_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1b2e9175c_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b73595b0:;
			{
				jule::Ptr<_1b3030a93_Data> _20621_d = _18236_st.cast_ptr<_1b3030a93_Data>(&__jule_any_type23);;
				if (_self_.get()._field_except) {
					goto _match_end_1b73591e7;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1b735da26:;
						{
							_1b39b4669_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1b735e96c:;
						{
							_1b39b448d_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1b735e917:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b7359637:;
			{
				_1b39b4669_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b73596ae:;
			{
				_1b39b48de_pushGoto(_self_, _18236_st.cast_ptr<_1b2e90a7a_GotoSt>(&__jule_any_type42));
				_1b39b4669_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b7359736:;
			{
				_1b39b4b64_pushLabel(_self_, _18236_st.cast_ptr<_1b2e9078e_Label>(&__jule_any_type20));
			}
		}
		_match_end_1b73591e7:;
	};
}



inline void _1b39b632a_optimizeStmts(jule::Ptr<_1b39b3712_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1b39b614e_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1b7361d6a:;
	}
	_iter_end_1b7361d6a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39b3712_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1b39b766c_exprDeadCode static__1b39b7c99_new(jule::Ptr<_1b39b3712_scopeDeadCode>* _5024_s) {
	return _1b39b766c_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1b39b801e_binary(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e68ed7_BinopExprModel> _5625_m) {
	_1b39bd9b4_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1b39bd9b4_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1b39b8294_unary(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e691c4_UnaryExprModel> _6124_m) {
	_1b39bd9b4_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1b39b8519_structureLit(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6959d_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7364ea0:;
		if (it != expr_end) {
			jule::Ptr<_1b2e693b1_StructArgExprModel> _6621_arg = *it;
			{
				_1b39bd9b4_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1b7364ea0:;
			++it;
			goto _iter_begin_1b7364ea0;
		}
		_iter_end_1b7364ea0:;
	};
}



inline void _1b39b878e_allocStructure(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6978a_AllocStructLitExprModel> _7133_m) {
	_1b39b8519_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1b39b8a14_casting(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e69977_CastingExprModel> _7526_m) {
	_1b39bd9b4_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1b39b8c89_args(_1b39b766c_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b736718e:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1b39bd9b4_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1b736718e:;
			++it;
			goto _iter_begin_1b736718e;
		}
		_iter_end_1b736718e:;
	};
}



inline void _1b39b900e_funcCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e69b64_FnCallExprModel> _8527_m) {
	_1b39bd9b4_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1b39b8c89_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1b39b3e82_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1b39b9284_slice(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e69d51_SliceExprModel> _9324_m) {
	_1b39b8c89_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1b39b9509_array(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6b2c5_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1b39bd9b4_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1b39b8c89_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1b39b977e_indexing(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6a03d_IndexingExprModel> _10427_m) {
	_1b39bd9b4_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1b39bd9b4_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1b39b9a04_anonFunc(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6a22a_AnonFnExprModel> _10927_m) {
	_1b39b6616_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1b39b9c79_mapExpr(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6a604_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b736ce86:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6a417_KeyValPairExprModel> _11421_pair = *it;
			{
				_1b39bd9b4_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1b39bd9b4_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1b736ce86:;
			++it;
			goto _iter_begin_1b736ce86;
		}
		_iter_end_1b736ce86:;
	};
}



inline void _1b39b9eee_slicing(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6a7e1_SlicingExprModel> _12026_m) {
	_1b39bd9b4_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1b39bd9b4_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1b39bd9b4_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1b39ba274_traitSub(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel> _12827_m) {
	_1b39bd9b4_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1b39ba4e9_structureSub(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _13231_m) {
	_1b39bd9b4_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1b39ba76e_commonSub(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel> _13628_m) {
	_1b39bd9b4_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1b39ba9e4_tuple(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6b88b_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7372331:;
		if (it != expr_end) {
			jule::Ptr<_1b3030a93_Data> _14121_d = *it;
			{
				_1b39bd9b4_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1b7372331:;
			++it;
			goto _iter_begin_1b7372331;
		}
		_iter_end_1b7372331:;
	};
}



inline void _1b39bac69_newCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1b39bd9b4_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1b39baede_outCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel> _15226_m) {
	_1b39bd9b4_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1b39bb264_outlnCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel> _15628_m) {
	_1b39bd9b4_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1b39bb4d9_panicCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel> _16028_m) {
	_1b39bd9b4_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1b39bb75e_assertCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel> _16429_m) {
	_1b39bd9b4_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1b39bb9d4_errorCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel> _16828_m) {
	_1b39bd9b4_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1b39bbc59_makeCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1b39bd9b4_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1b39bd9b4_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1b39bbece_appendCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel> _18129_m) {
	_1b39bd9b4_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1b39bd9b4_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1b39bc254_lenCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel> _18626_m) {
	_1b39bd9b4_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1b39bc4c9_capCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel> _19026_m) {
	_1b39bd9b4_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1b39bc74e_cloneCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel> _19428_m) {
	_1b39bd9b4_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1b39bc9c4_deleteCall(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel> _19829_m) {
	_1b39bd9b4_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1b39bd9b4_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1b39bcc49_sizeof(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6d805_SizeofExprModel> _20525_m) {
	_1b39bd9b4_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1b39bcebe_alignof(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6d9e2_AlignofExprModel> _20926_m) {
	_1b39bd9b4_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1b39bd244_integratedToStr(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel> _21334_m) {
	_1b39bd9b4_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1b39bd4b9_free(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6e295_FreeExprModel> _21723_m) {
	_1b39bd9b4_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1b39bd73e_backendEmit(_1b39b766c_exprDeadCode* _self_, jule::Ptr<_1b2e6e0a8_BackendEmitExprModel> _22130_m) {
	_1b39b8c89_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1b39bd9b4_optimize(_1b39b766c_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b737ea7a:;
			{
				_1b39b801e_binary(_self_, (*(_22528_model)).cast_ptr<_1b2e68ed7_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b737eb02:;
			{
				_1b39b8294_unary(_self_, (*(_22528_model)).cast_ptr<_1b2e691c4_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b737eb79:;
			{
				_1b39b8519_structureLit(_self_, (*(_22528_model)).cast_ptr<_1b2e6959d_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b7380053:;
			{
				_1b39b878e_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1b2e6978a_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b73800b9:;
			{
				_1b39b8a14_casting(_self_, (*(_22528_model)).cast_ptr<_1b2e69977_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b7380141:;
			{
				_1b39b900e_funcCall(_self_, (*(_22528_model)).cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b73801b8:;
			{
				_1b39b9284_slice(_self_, (*(_22528_model)).cast_ptr<_1b2e69d51_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b7380240:;
			{
				_1b39b9509_array(_self_, (*(_22528_model)).cast_ptr<_1b2e6b2c5_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b73802b7:;
			{
				_1b39b977e_indexing(_self_, (*(_22528_model)).cast_ptr<_1b2e6a03d_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b738033e:;
			{
				_1b39b9a04_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1b2e6a22a_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b73803b6:;
			{
				_1b39b9c79_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1b2e6a604_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b738043d:;
			{
				_1b39b9eee_slicing(_self_, (*(_22528_model)).cast_ptr<_1b2e6a7e1_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b73804b5:;
			{
				_1b39ba274_traitSub(_self_, (*(_22528_model)).cast_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b738053c:;
			{
				_1b39ba4e9_structureSub(_self_, (*(_22528_model)).cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b73805b4:;
			{
				_1b39ba76e_commonSub(_self_, (*(_22528_model)).cast_ptr<_1b2e6b69e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b738063b:;
			{
				_1b39ba9e4_tuple(_self_, (*(_22528_model)).cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b73806b3:;
			{
				_1b39baede_outCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6ba78_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b738073a:;
			{
				_1b39bb264_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b73807b2:;
			{
				_1b39bac69_newCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6c13e_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b7380839:;
			{
				_1b39bb4d9_panicCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6c32b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b73808b1:;
			{
				_1b39bb75e_assertCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6c518_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b7380938:;
			{
				_1b39bb9d4_errorCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6d618_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b73809b0:;
			{
				_1b39bbc59_makeCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6c705_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b7380a37:;
			{
				_1b39bbece_appendCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b7380aae:;
			{
				_1b39bc254_lenCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6cace_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b7380b36:;
			{
				_1b39bc4c9_capCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6ccbb_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b7380bad:;
			{
				_1b39bc74e_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6be52_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b7380c35:;
			{
				_1b39bc9c4_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1b2e6abba_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b7380cac:;
			{
				_1b39bcc49_sizeof(_self_, (*(_22528_model)).cast_ptr<_1b2e6d805_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b7380d34:;
			{
				_1b39bcebe_alignof(_self_, (*(_22528_model)).cast_ptr<_1b2e6d9e2_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b7380dab:;
			{
				_1b39bd244_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1b2e6ddbb_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b7380e33:;
			{
				_1b39bd4b9_free(_self_, (*(_22528_model)).cast_ptr<_1b2e6e295_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7380eaa:;
			{
				_1b39bd73e_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1b2e6e0a8_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1b737ec78:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b39b766c_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb139ed6_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2c57325_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb0ae653_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2c63771_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb08b344_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb0d91a5_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cb0c1885_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b2c1931a_scopeOptimizer> static__1cb08ad5a_new(jule::Ptr<_1b2e8d050_Scope> _4623_scope) {
	return jule::new_ptr<_1b2c1931a_scopeOptimizer>(_1b2c1931a_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1cb091602_setCurrentStmt(_1b2c1931a_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1cb09e555_optimizeData(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b3030a93_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b73bc07e:;
			{
				jule::Ptr<_1b2e69b64_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34);;
				if (_20b9476d6_Production) {
					if (((!(_1b2e724b8_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1cb125a1b_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1cb091602_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1b73bbd70:;
	};
	static__1cb144111_optimize(&(_5635_d.get()._field_Model));
}



inline void _1cb0cb3b7_optimizeVar(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2ed8034_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1cb144111_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1cb0dabac_optimizeConditional(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e8daab_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73c0060:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8d44b_If> _7821_elif = *it;
			{
				static__1cb144111_optimize(&(_7821_elif.get()._field_Expr));
				_1cb0d0a4d_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1b73c0060:;
			++it;
			goto _iter_begin_1b73c0060;
		}
		_iter_end_1b73c0060:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1cb0d0a4d_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1cb0b25e0_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73c1d64:;
		if (it != expr_end) {
			jule::I32 _9314_i = it - expr->begin();
			jule::Ptr<_1b2e8d44b_If> _9321_elif = *it;
			{
				if ((!(_1cb145761_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1b73c1d64;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1b2e8d737_Else>(_1b2e8d737_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1b73c1d64;
			}
			_iter_next_1b73c1d64:;
			++it;
			_9314_i++;
			goto _iter_begin_1b73c1d64;
		}
		_iter_end_1b73c1d64:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b2e8d44b_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1b2e8d44b_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1cb0c72c5_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1b73c4eee:;
	}
	_iter_end_1b73c4eee:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I32 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73c664e:;
		if (it != expr_end) {
			jule::I32 _13013_j = it - expr->begin();
			jule::Ptr<_1b2e8d44b_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1b73c664e:;
			++it;
			_13013_j++;
			goto _iter_begin_1b73c664e;
		}
		_iter_end_1b73c664e:;
	};
	if ((_12917_only != -1LL)) {
		_1cb091602_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _1cb0eb2c7_buildDefaultConstatTrueCase(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e927e6_Case> _14650_case, jule::I32* _14668_i, jule::Ptr<_1b2e91c9b_Match>* _14681_m) {
	_14650_case.get()._field_Exprs=nullptr;
	jule::I32 _14813_start = (*(_14668_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14650_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b73c90be;
			};
			jule::Any *_15422_stmt = &(_14650_case.get()._field_Scope.get()._field_Stmts[(_14650_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1b73c95ca:;
					{
						((*(_14668_i)))++;
						if (((*(_14668_i)) >= (*(_14681_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14681_m)).get()._field_Default.get()._field_Scope, &__jule_any_type21);
							goto _iter_end_1b73c90be;
						};
						_14650_case=(*(_14681_m)).get()._field_Cases[(*(_14668_i))];
						(*(_15422_stmt))=jule::Any(_14650_case.get()._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1b73cab09:;
					{
						goto _iter_end_1b73c90be;
					}
				}
				_match_end_1b73caa1b:;
			};
		}
	_iter_next_1b73c90be:;
	}
	_iter_end_1b73c90be:;;
	(*(_14681_m)).get()._field_Default=(*(_14681_m)).get()._field_Cases[_14813_start];
	(*(_14681_m)).get()._field_Cases=(*(_14681_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1cb10eb48_optimizeMatch(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e91c9b_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73ccb61:;
		if (it != expr_end) {
			jule::Ptr<_1b2e927e6_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73cd49c:;
					if (it != expr_end) {
						jule::Ptr<_1b3030a93_Data> _17425_expr = *it;
						{
							static__1cb144111_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1b73cd49c:;
						++it;
						goto _iter_begin_1b73cd49c;
					}
					_iter_end_1b73cd49c:;
				};
				_1cb0d0a4d_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1b73ccb61:;
			++it;
			goto _iter_begin_1b73ccb61;
		}
		_iter_end_1b73ccb61:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1cb0d0a4d_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1cb0b25e0_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73d00a3:;
		if (it != expr_end) {
			jule::I32 _19018_i = it - expr->begin();
			jule::Ptr<_1b2e927e6_Case> _19025_case = *it;
			{
				if ((!(_1cb08e424_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1b73d00a3;
				};
				_18717_constCase=true;
				_1cb0eb2c7_buildDefaultConstatTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1b73d00a3;
			}
			_iter_next_1b73d00a3:;
			++it;
			_19018_i++;
			goto _iter_begin_1b73d00a3;
		}
		_iter_end_1b73d00a3:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b2e927e6_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1b2e927e6_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1cb0d106a_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1b73d2c54:;
	}
	_iter_end_1b73d2c54:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I32 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73d3d10:;
		if (it != expr_end) {
			jule::I32 _22013_j = it - expr->begin();
			jule::Ptr<_1b2e927e6_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1b73d3d10:;
			++it;
			_22013_j++;
			goto _iter_begin_1b73d3d10;
		}
		_iter_end_1b73d3d10:;
	};
	if ((_21917_only != -1LL)) {
		_1cb091602_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _1cb11cc88_optimizeRangeIter(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e8ec00_RangeIter> _23640_it) {
	static__1cb144111_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1cb0d0a4d_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1b2c400ee_optimizeWhileIter(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e8e31a_WhileIter> _24140_it) {
	static__1cb144111_optimize(&(_24140_it.get()._field_Expr));
	_1cb09324c_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1cb0d0a4d_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1b2c64909_substr(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e913a5_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b73d8463:;
			{
				jule::Ptr<_1b2e6a7e1_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1b2e6a7e1_SlicingExprModel>(&__jule_any_type98);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1cb091602_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1cb0d91a5_MutSlicingExprModel>(_1cb0d91a5_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type126));
					return true;;
				};
			}
		}
		_match_end_1b73d83db:;
	};
	return false;;
}



inline jule::Bool _1b2d48317_strInsert(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e913a5_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b73dada0:;
			{
				jule::Ptr<_1b2e68ed7_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1b2e68ed7_BinopExprModel>(&__jule_any_type117);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1cb091602_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1cb0c1885_StrInsertBeginExprModel>(_1cb0c1885_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_1b73dad28:;
	};
	return false;;
}



inline jule::Bool _1b2d59adc_strAppend(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e913a5_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b73dd7dc:;
			{
				_1cb091602_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b2c57325_StrAppendExprModel>(_1b2c57325_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type128));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b73dd853:;
			{
				jule::Ptr<_1b2e69977_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1b2e69977_CastingExprModel>(&__jule_any_type100);;
				jule::Ptr<_1b3061772_Prim> _30121_prim = _1b305ddac_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1b305ed36_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1b305ddac_Prim(_1b305ed36_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1b306307b_IsU8(_30121_prim.ptr()))) && (!(_1b3062aa3_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1b73dd765;
				};
				_1cb091602_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b2c57325_StrAppendExprModel>(_1b2c57325_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type128));
				return true;;
			}
		}
		_match_end_1b73dd765:;
	};
	return false;;
}



inline jule::Bool _1b2d7395d_strAssign(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e913a5_Assign> _31732_a) {
	if ((!(_1cb0b3613_Str))) {
		return false;;
	};
	jule::Ptr<_1b3061772_Prim> _32113_lp = _1b305ddac_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1b30649a6_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1b2c64909_substr(_self_, _31732_a) || _1b2d48317_strInsert(_self_, _31732_a) || _1b2d59adc_strAppend(_self_, _31732_a)) {
			_case_begin_1b73e44b3:;
			{
				return true;;
			}
		}
		_match_end_1b73e4419:;
	};
	return false;;
}



inline void _1b2d83a5b_optimizeAssign(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e913a5_Assign> _33437_assign) {
	if (_1b2d7395d_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1cb144111_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1cb144111_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b73e64a4:;
			{
				if ((_1cb0ac40e_Math && (_1b306030e_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1b2e68ed7_BinopExprModel>(_1b2e68ed7_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type117);;
					static__1cb144111_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type117) {
							_case_begin_1b73e886e:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1b2e68cea_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1b73e861b:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1b73e6394:;
	};
	if (_1cb0ab3db_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1b73ea40e:;
				{
					jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_1b73eb476:;
							{
								{
									auto &_match_expr{ _36825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_1b73ebc07:;
										{
											_1cb091602_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1cb08b344_PushToSliceExprModel>(_1cb08b344_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_1b2e69d51_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type129));
										}
									}
									_match_end_1b73ebba2:;
								};
							}
						}
						_match_end_1b73eb267:;
					};
				}
			}
			_match_end_1b73e7087:;
		};
	};
}



inline void _1cb0d9392_optimizeMultiAssign(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e9175c_MultiAssign> _38442_assign) {
	{
		auto expr = &(_38442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73ea81b:;
		if (it != expr_end) {
			jule::Ptr<_1b3030a93_Data> _38521_l = *it;
			{
				if ((_38521_l != nullptr)) {
					static__1cb144111_optimize(&(_38521_l.get()._field_Model));
				};
			}
			_iter_next_1b73ea81b:;
			++it;
			goto _iter_begin_1b73ea81b;
		}
		_iter_end_1b73ea81b:;
	};
	static__1cb144111_optimize(&(_38442_assign.get()._field_R));
}



inline void _1cb08d126_optimizeRet(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e93220_RetSt> _39334_r) {
	static__1cb144111_optimize(&(_39334_r.get()._field_Expr));
}



inline void _1cb09324c_optimizeStmt(_1b2c1931a_scopeOptimizer* _self_, jule::Any _39735_stmt) {
	{
		auto &_match_expr{ _39735_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b73ee127:;
			{
				_1cb0d0a4d_optimizeChild(_self_, _39735_stmt.cast_ptr<_1b2e8d050_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b73ee19e:;
			{
				_1cb09e555_optimizeData(_self_, _39735_stmt.cast_ptr<_1b3030a93_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b73ee226:;
			{
				_1cb0cb3b7_optimizeVar(_self_, _39735_stmt.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b73ee29d:;
			{
				_1cb0dabac_optimizeConditional(_self_, _39735_stmt.cast_ptr<_1b2e8daab_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b73ee325:;
			{
				_1cb11cc88_optimizeRangeIter(_self_, _39735_stmt.cast_ptr<_1b2e8ec00_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b73ee39c:;
			{
				_1b2c400ee_optimizeWhileIter(_self_, _39735_stmt.cast_ptr<_1b2e8e31a_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b73ee424:;
			{
				_1cb0d0a4d_optimizeChild(_self_, _39735_stmt.cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b73ee49b:;
			{
				_1b2d83a5b_optimizeAssign(_self_, _39735_stmt.cast_ptr<_1b2e913a5_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b73ee523:;
			{
				_1cb0d9392_optimizeMultiAssign(_self_, _39735_stmt.cast_ptr<_1b2e9175c_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b73ee59a:;
			{
				_1cb10eb48_optimizeMatch(_self_, _39735_stmt.cast_ptr<_1b2e91c9b_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b73ee622:;
			{
				_1cb08d126_optimizeRet(_self_, _39735_stmt.cast_ptr<_1b2e93220_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1b73ede6d:;
	};
}



inline void _1cb0d0a4d_optimizeChild(_1b2c1931a_scopeOptimizer* _self_, jule::Ptr<_1b2e8d050_Scope> _42436_child) {
	jule::Ptr<_1b2c1931a_scopeOptimizer> _42517_so = static__1cb08ad5a_new(_42436_child);;
	_1cb0d3c4e_optimize(_42517_so.ptr());
}



inline void _1cb0d3c4e_optimize(_1b2c1931a_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7405705:;
		if (it != expr_end) {
			jule::I32 _43114_i = it - expr->begin();
			jule::Any _43121_stmt = *it;
			{
				(*(_self_))._field_i=_43114_i;
				_1cb09324c_optimizeStmt(_self_, _43121_stmt);
			}
			_iter_next_1b7405705:;
			++it;
			_43114_i++;
			goto _iter_begin_1b7405705;
		}
		_iter_end_1b7405705:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b2c1931a_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1cb144111_optimize(jule::Any* _5829_model) {
	if (_1b38b6093_exprEnabled) {
		jule::Ptr<_1b2c19507_exprOptimizer> _6121_exop = jule::new_ptr<_1b2c19507_exprOptimizer>(_1b2c19507_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1b3122019_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1cb08ddd5_strCond(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e68ed7_BinopExprModel> _6826_m) {
	jule::Ptr<_1b3061772_Prim> _6913_lp = _1b305ddac_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1b30649a6_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b740e0e3:;
			{
				({
					jule::Ptr<_1b2e68cea_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1b2e68cea_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1b740e08d:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b740d862:;
			{
				goto _match_end_1b740ead8;
			}
		}
		else {
			_case_begin_1b741017c:;
			{
				return true;;
			}
		}
		_match_end_1b740ead8:;
	};
	_julec_label_opt:;
	jule::Ptr<_1b18de5da_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b7411249:;
			{
				if (_1b18e1620_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1b2e6b69e_CommonSubIdentExprModel>(_1b2e6b69e_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1b74111e4;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1cb139ed6_StrCompExprModel>(_1cb139ed6_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b74112b0:;
			{
				if (_1b18e1620_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_1cb188a5c_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1b2e691c4_UnaryExprModel>(_1b2e691c4_UnaryExprModel{._field_Expr=jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Model=jule::Any(jule::new_ptr<_1b2e6b69e_CommonSubIdentExprModel>(_1b2e6b69e_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1b74111e4;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_1cb139ed6_StrCompExprModel>(_1cb139ed6_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_1b74111e4:;
	};
	return true;;
}



inline void _1cb0b65c2_binary(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e68ed7_BinopExprModel> _13125_m) {
	static__1cb144111_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__1cb144111_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b7417d44:;
			{
				goto _match_end_1b7417849;
			}
		}
		else {
			_case_begin_1b7417904:;
			{
				return;;
			}
		}
		_match_end_1b7417849:;
	};
	if ((_1cb0b25e0_Cond && _1cb08ddd5_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_1cb0ac40e_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b7418916:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b312214b_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1b18de5da_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
					_1b18e25bb_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b741898d:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b312214b_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1b18de5da_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
					_1b18e25bb_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b7418a15:;
			{
				jule::Ptr<_1b18de5da_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
				jule::F64 _16817_d = _1b18e20c1_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1b18e2346_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1b741888e:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_1cb0ae653_UnsafeBinopExprModel>(_1cb0ae653_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _1cb0c49ba_unary(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e691c4_UnaryExprModel> _17824_m) {
	static__1cb144111_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_1cb0b15bc_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1b74207ca:;
				{
					jule::Ptr<_1b2e691c4_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_1b2e691c4_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1b7420775:;
		};
	};
}



inline void _1cb0d0861_structureLit(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6959d_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74222e3:;
		if (it != expr_end) {
			jule::Ptr<_1b2e693b1_StructArgExprModel> _19221_arg = *it;
			{
				static__1cb144111_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_1b74222e3:;
			++it;
			goto _iter_begin_1b74222e3;
		}
		_iter_end_1b74222e3:;
	};
}



inline void _1cb0d667a_allocStructure(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6978a_AllocStructLitExprModel> _19733_m) {
	_1cb0d0861_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _1cb0dbb25_casting(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e69977_CastingExprModel> _20126_m) {
	static__1cb144111_optimize(&(_20126_m.get()._field_Expr));
}



inline void _1b2d1a22e_args(_1b2c19507_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7423c95:;
		if (it != expr_end) {
			jule::I32 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__1cb144111_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_1b7423c95:;
			++it;
			_20614_i++;
			goto _iter_begin_1b7423c95;
		}
		_iter_end_1b7423c95:;
	};
}



inline void _1cb08b047_scope(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e8d050_Scope>* _21225_s) {
	jule::Ptr<_1b2c1931a_scopeOptimizer> _21317_scopt = static__1cb08ad5a_new((*(_21225_s)));;
	_1cb0d3c4e_optimize(_21317_scopt.ptr());
}



inline void _1cb08c873_funcCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e69b64_FnCallExprModel> _21727_m) {
	static__1cb144111_optimize(&(_21727_m.get()._field_Expr));
	_1b2d1a22e_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_1cb08b047_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _1cb095837_slice(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e69d51_SliceExprModel> _22524_m) {
	_1b2d1a22e_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _1cb0b4834_array(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6b2c5_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__1cb144111_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_1b2d1a22e_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _1cb0d4205_indexing(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6a03d_IndexingExprModel> _23827_m) {
	static__1cb144111_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__1cb144111_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_1cb0ad432_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_1b305eac2_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _1b3031456_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_1b2c63771_UnsafeIndexingExprModel>(_1b2c63771_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b742c485:;
			{
				jule::Ptr<_1b2ed8034_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1b742c331;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b742dbe5:;
						{
							jule::Ptr<_1b2ed8034_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_1b2c63771_UnsafeIndexingExprModel>(_1b2c63771_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_1b742db90:;
				};
			}
		}
		_match_end_1b742c331:;
	};
}



inline void _1cb0db2d9_anonFunc(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6a22a_AnonFnExprModel> _26927_m) {
	_1cb08b047_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _1cb156860_mapExpr(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6a604_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74312ad:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6a417_KeyValPairExprModel> _27421_pair = *it;
			{
				static__1cb144111_optimize(&(_27421_pair.get()._field_Key));
				static__1cb144111_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_1b74312ad:;
			++it;
			goto _iter_begin_1b74312ad;
		}
		_iter_end_1b74312ad:;
	};
}



inline void _1b2c2c6c4_slicing(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6a7e1_SlicingExprModel> _28026_m) {
	static__1cb144111_optimize(&(_28026_m.get()._field_Expr));
	static__1cb144111_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__1cb144111_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _1cb14cb31_traitSub(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel> _28827_m) {
	static__1cb144111_optimize(&(_28827_m.get()._field_Expr));
}



inline void _1b2d811a7_structureSub(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _29231_m) {
	static__1cb144111_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _1b2d8251b_commonSub(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel> _29628_m) {
	static__1cb144111_optimize(&(_29628_m.get()._field_Expr));
}



inline void _1b2d900c8_tuple(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6b88b_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74345be:;
		if (it != expr_end) {
			jule::Ptr<_1b3030a93_Data> _30121_d = *it;
			{
				static__1cb144111_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_1b74345be:;
			++it;
			goto _iter_begin_1b74345be;
		}
		_iter_end_1b74345be:;
	};
}



inline void _1b2d9a248_newCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__1cb144111_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _1cb0cc6a4_outCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel> _31226_m) {
	static__1cb144111_optimize(&(_31226_m.get()._field_Expr));
}



inline void _1cb11ca57_outlnCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel> _31628_m) {
	static__1cb144111_optimize(&(_31628_m.get()._field_Expr));
}



inline void _1cb114b1a_panicCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel> _32028_m) {
	static__1cb144111_optimize(&(_32028_m.get()._field_Expr));
}



inline void _1cb147961_assertCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel> _32429_m) {
	static__1cb144111_optimize(&(_32429_m.get()._field_Expr));
}



inline void _1cb149e08_errorCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel> _32828_m) {
	static__1cb144111_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _1b2c11103_makeCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__1cb144111_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__1cb144111_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _1b3121304_appendCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel> _34129_m) {
	static__1cb144111_optimize(&(_34129_m.get()._field_Dest));
	static__1cb144111_optimize(&(_34129_m.get()._field_Elements));
}



inline void _1b3121436_lenCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel> _34626_m) {
	static__1cb144111_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _1b3121568_capCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel> _35026_m) {
	static__1cb144111_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _1b312169a_cloneCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel> _35428_m) {
	static__1cb144111_optimize(&(_35428_m.get()._field_Expr));
}



inline void _1b31217cc_deleteCall(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel> _35829_m) {
	static__1cb144111_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__1cb144111_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1b312190e_sizeof(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6d805_SizeofExprModel> _36525_m) {
	static__1cb144111_optimize(&(_36525_m.get()._field_Expr));
}



inline void _1b3121a41_alignof(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6d9e2_AlignofExprModel> _36926_m) {
	static__1cb144111_optimize(&(_36926_m.get()._field_Expr));
}



inline void _1b3121b73_integratedToStr(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel> _37334_m) {
	static__1cb144111_optimize(&(_37334_m.get()._field_Expr));
}



inline void _1b3121ca5_free(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6e295_FreeExprModel> _37723_m) {
	static__1cb144111_optimize(&(_37723_m.get()._field_Expr));
}



inline void _1b3121dd7_backendEmit(_1b2c19507_exprOptimizer* _self_, jule::Ptr<_1b2e6e0a8_BackendEmitExprModel> _38130_m) {
	_1b2d1a22e_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _1b3122019_do(_1b2c19507_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b743d8d6:;
			{
				_1cb0b65c2_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e68ed7_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b743dbd3:;
			{
				_1cb0c49ba_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e691c4_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b743dc49:;
			{
				_1cb0d0861_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6959d_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b743dcb0:;
			{
				_1cb0d667a_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6978a_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b743dd26:;
			{
				_1cb0dbb25_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e69977_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b743dd9d:;
			{
				_1cb08c873_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b743de25:;
			{
				_1cb095837_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e69d51_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b743de9c:;
			{
				_1cb0b4834_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6b2c5_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b743e024:;
			{
				_1cb0d4205_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6a03d_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b743e09b:;
			{
				_1cb0db2d9_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6a22a_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b743e123:;
			{
				_1cb156860_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6a604_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b743e19a:;
			{
				_1b2c2c6c4_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6a7e1_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b743e222:;
			{
				_1cb14cb31_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b743e299:;
			{
				_1b2d811a7_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b743e321:;
			{
				_1b2d8251b_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6b69e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b743e398:;
			{
				_1b2d900c8_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b743e420:;
			{
				_1cb0cc6a4_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6ba78_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b743e497:;
			{
				_1cb11ca57_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b743e51e:;
			{
				_1b2d9a248_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6c13e_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b743e596:;
			{
				_1cb114b1a_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6c32b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b743e61d:;
			{
				_1cb147961_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6c518_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b743e695:;
			{
				_1cb149e08_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6d618_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b743e71c:;
			{
				_1b2c11103_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6c705_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b743e794:;
			{
				_1b3121304_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b743e81b:;
			{
				_1b3121436_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6cace_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b743e893:;
			{
				_1b3121568_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6ccbb_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b743e91a:;
			{
				_1b312169a_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6be52_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b743e992:;
			{
				_1b31217cc_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6abba_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b743ea19:;
			{
				_1b312190e_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6d805_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b743ea91:;
			{
				_1b3121a41_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6d9e2_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b743eb18:;
			{
				_1b3121b73_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6ddbb_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b743eb90:;
			{
				_1b3121ca5_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6e295_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b743ec17:;
			{
				_1b3121dd7_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b2e6e0a8_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1b743d881:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b2c19507_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b38b46ce_Optimizer> static__1b38d3dd5_New(jule::Ptr<_1b345d553_IR>* _2524_ir) {
	return jule::new_ptr<_1b38b46ce_Optimizer>(_1b38b46ce_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1b38e2355_optimizeGlobal(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2ed8034_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__1cb144111_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1b392141c_optimizeFunction(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2e6e85b_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7456e93:;
		if (it != expr_end) {
			jule::Ptr<_1b2e71132_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1b2c1931a_scopeOptimizer> _4221_so = static__1cb08ad5a_new(_4121_ins.get()._field_Scope);;
				_1cb0d3c4e_optimize(_4221_so.ptr());
			}
			_iter_next_1b7456e93:;
			++it;
			goto _iter_begin_1b7456e93;
		}
		_iter_end_1b7456e93:;
	};
}



inline void _1b3930c01_optimizeStruct(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2e683e3_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b745846c:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7458b65:;
					if (it != expr_end) {
						jule::Ptr<_1b2e685d0_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1cb144111_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1b7458b65:;
						++it;
						goto _iter_begin_1b7458b65;
					}
					_iter_end_1b7458b65:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b745968d:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _5725_m = *it;
						{
							_1b392141c_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1b745968d:;
						++it;
						goto _iter_begin_1b745968d;
					}
					_iter_end_1b745968d:;
				};
			}
			_iter_next_1b745846c:;
			++it;
			goto _iter_begin_1b745846c;
		}
		_iter_end_1b745846c:;
	};
}



inline void _1b3938e07_optimizeGlobals(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2eae6ae_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b745a073:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b745ac66:;
					if (it != expr_end) {
						jule::Ptr<_1b2ed8034_Var> _6525_v = *it;
						{
							_1b38e2355_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1b745ac66:;
						++it;
						goto _iter_begin_1b745ac66;
					}
					_iter_end_1b745ac66:;
				};
			}
			_iter_next_1b745a073:;
			++it;
			goto _iter_begin_1b745a073;
		}
		_iter_end_1b745a073:;
	};
}



inline void _1b3948b4d_optimizeFunctions(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2eae6ae_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b745b2e9:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b745c031:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _7325_func = *it;
						{
							_1b392141c_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1b745c031:;
						++it;
						goto _iter_begin_1b745c031;
					}
					_iter_end_1b745c031:;
				};
			}
			_iter_next_1b745b2e9:;
			++it;
			goto _iter_begin_1b745b2e9;
		}
		_iter_end_1b745b2e9:;
	};
}



inline void _1b394a38b_optimizeStructs(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2eae6ae_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b745c5b4:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b745d2eb:;
					if (it != expr_end) {
						jule::Ptr<_1b2e683e3_Struct> _8125_s = *it;
						{
							_1b3930c01_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1b745d2eb:;
						++it;
						goto _iter_begin_1b745d2eb;
					}
					_iter_end_1b745d2eb:;
				};
			}
			_iter_next_1b745c5b4:;
			++it;
			goto _iter_begin_1b745c5b4;
		}
		_iter_end_1b745c5b4:;
	};
}



inline void _1b38e58ec_optimizePackage(_1b38b46ce_Optimizer* _self_, jule::Ptr<_1b2eae6ae_Package>* _8739_p) {
	_1b3938e07_optimizeGlobals(_self_, _8739_p);
	_1b3948b4d_optimizeFunctions(_self_, _8739_p);
	_1b394a38b_optimizeStructs(_self_, _8739_p);
}



inline void _1b3924255_Optimize(_1b38b46ce_Optimizer* _self_) {
	_1b3944462_detectEnabled();
	if (_1cb0aa3b8_Deadcode) {
		_1b39b22e3_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1b38b6c0e_scopeEnabled || _1b38b6093_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7460595:;
			if (it != expr_end) {
				jule::Ptr<_1b2eab755_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1b38e58ec_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1b7460595:;
				++it;
				goto _iter_begin_1b7460595;
			}
			_iter_end_1b7460595:;
		};
		_1b38e58ec_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1cb0aa3b8_Deadcode) {
		_1b39b7095_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b38b46ce_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1b39c0675_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1b39c1775_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1b39c0675_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1b39c1588_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1b39c2d09_LogFlat(_1cac0bec6_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1b39c3018_LogError(_1cac0bec6_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1b39c0675_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1b18ce971_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1b18ce971_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1cab76193_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_oldLen = _3621_line.len();;
		_3621_line=_1cab76193_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1b18ce971_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1caad032d_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1caad032d_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1caad032d_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1b39c1775_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1b39c3227_Log(_1cac0bec6_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1b74700dd:;
			{
				static__1b39c2d09_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1b7470154:;
			{
				static__1b39c3018_LogError(_6520_l);
			}
		}
		_match_end_1b746ee89:;
	};
}



inline void static__1b39c3436_PrintLogs(jule::Slice<_1cac0bec6_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74710ab:;
		if (it != expr_end) {
			_1cac0bec6_Log *_7616_l = it;
			{
				static__1b39c3227_Log(_7616_l);
			}
			_iter_next_1b74710ab:;
			++it;
			goto _iter_begin_1b74710ab;
		}
		_iter_end_1b74710ab:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1b18ce971_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1b39c2a73_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1b421a3db_Unix(_1b421a034_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1b421c971_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1b421cd06_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b421a034_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1b421a6c7_Time static__1b421aa6d_Unix(jule::U64 _9120_sec) {
	return _1b421a6c7_Time{._field_sec=_9120_sec};;
}



inline _1b421a6c7_Time static__1b421ac6b_Now(void) {
	return static__1b421aa6d_Unix(static_cast<jule::U64>(_1b421c663_unix()));;
}



inline jule::U64 _1b421b1bc_Unix(_1b421a6c7_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1b421b431_Day(_1b421a6c7_Time* _self_) {
	return _1b421c3aa_Abs(_self_)._field_Day;;
}



inline jule::U64 _1b421b695_Month(_1b421a6c7_Time* _self_) {
	return _1b421c3aa_Abs(_self_)._field_Month;;
}



inline jule::U64 _1b421b909_Year(_1b421a6c7_Time* _self_) {
	return _1b421c3aa_Abs(_self_)._field_Year;;
}



inline jule::U64 _1b421bb6d_Second(_1b421a6c7_Time* _self_) {
	return _1b421c3aa_Abs(_self_)._field_Second;;
}



inline jule::U64 _1b421bdd2_Minute(_1b421a6c7_Time* _self_) {
	return _1b421c3aa_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1b421c146_Hour(_1b421a6c7_Time* _self_) {
	return _1b421c3aa_Abs(_self_)._field_Hour;;
}



inline _1b421a034_AbsTime _1b421c3aa_Abs(_1b421a6c7_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1b42195b6_mdays[static_cast<jule::I32>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1b42195b6_mdays[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_1b74a0a8b:;
	}
	_iter_end_1b74a0a8b:;;
	_1b421a034_AbsTime _17417_t = _1b421a034_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b421a6c7_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b4164ea1_scopeCoder> static__1b41655de_new(jule::Ptr<_1b42224e2_ObjectCoder>* _6424_oc) {
	return jule::new_ptr<_1b4164ea1_scopeCoder>(_1b4164ea1_scopeCoder{._field_oc=(*(_6424_oc))});;
}



inline void _1b754589a_iterHead(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8ec00_RangeIter>* _7132_it, jule::Bool* _7144_ref, jule::Str* _7156_begin) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1cb08e0b1_Copy && _1b416ab66_isCopyOptimizable(&((*(_7132_it)).get()._field_Expr)))) {
		(*(_7144_ref))=true;
		{
			auto &_match_expr{ (*(_7132_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b754723c:;
				{
					jule::Ptr<_1b2ed8034_Var> _8021_v = (*(_7132_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_1b4179ca7_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1b7548c88;
					};
					goto _case_begin_1b7548cdd;
				}
			}
			else {
				_case_begin_1b7548cdd:;
				{
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b4179ca7_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1b7548c88:;
		};
	} else {
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7144_ref))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7144_ref))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, (*(_7156_begin)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
}



inline void _1b4165c2c_rangeIndexIter(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8ec00_RangeIter>* _12039_it) {
	jule::Str _12113_begin = static__1b4183a5d_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Str _12213_next = static__1b418409c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Bool _12417_ref = false;;
	_1b754589a_iterHead(_self_, _12039_it, &(_12417_ref), &(_12113_begin));
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1b4224d85_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12417_ref) {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b41ebbc5_indent(_self_.get()._field_oc);
	};
	if (((*(_12039_it)).get()._field_KeyB != nullptr)) {
		(*(_12039_it)).get()._field_KeyB.get()._field_Reference=(_1cb08e0b1_Copy && _1b416aeeb_isIterCopyOptimizable(&((*(_12039_it)).get()._field_Expr), &((*(_12039_it)).get()._field_KeyB)));
		_1b4224d85_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12039_it)).get()._field_KeyB.get()._field_Reference) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b41ebbc5_indent(_self_.get()._field_oc);
	};
	_1b416a58e_scope(_self_, (*(_12039_it)).get()._field_Scope);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, _12213_next);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, static__1b41837b6_var((*(_12039_it)).get()._field_KeyA));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1b41ebbc5_indent(_self_.get()._field_oc);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b41a8e7e_write(_self_.get()._field_oc, _12113_begin);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183d05_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it))))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b4165ea2_rangeHashmapIter(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8ec00_RangeIter>* _18341_it) {
	jule::Str _18413_begin = static__1b4183a5d_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Str _18513_next = static__1b418409c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Bool _18717_ref = false;;
	_1b754589a_iterHead(_self_, _18341_it, &(_18717_ref), &(_18413_begin));
	if (((*(_18341_it)).get()._field_KeyA != nullptr)) {
		_1b4224d85_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b41ebbc5_indent(_self_.get()._field_oc);
	};
	if (((*(_18341_it)).get()._field_KeyB != nullptr)) {
		_1b4224d85_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b41ebbc5_indent(_self_.get()._field_oc);
	};
	_1b416a58e_scope(_self_, (*(_18341_it)).get()._field_Scope);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, _18513_next);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b41a8e7e_write(_self_.get()._field_oc, _18413_begin);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183d05_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it))))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b4166227_ifCase(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8d44b_If> _22630_i) {
	if ((_22630_i.get()._field_Expr != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22630_i.get()._field_Expr);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1b416a58e_scope(_self_, _22630_i.get()._field_Scope);
}



inline void _1b416649c_conditional(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8daab_Conditional> _23535_c) {
	jule::Bool _23617_writed = false;;
	{
		auto expr = &(_23535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b756bb8a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e8d44b_If> _23721_elif = *it;
			{
				if ((_23721_elif == nullptr)) {
					goto _iter_next_1b756bb8a;
				};
				if (_23617_writed) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23617_writed=true;
				_1b4166227_ifCase(_self_, _23721_elif);
			}
			_iter_next_1b756bb8a:;
			++it;
			goto _iter_begin_1b756bb8a;
		}
		_iter_end_1b756bb8a:;
	};
	if ((_23535_c.get()._field_Default != nullptr)) {
		if (_23617_writed) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1b416a58e_scope(_self_, _23535_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1b4166722_infIter(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8dd97_InfIter> _25531_it) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b416a58e_scope(_self_, _25531_it.get()._field_Scope);
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b418409c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183d05_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b4166997_whileIter(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8e31a_WhileIter> _27233_it) {
	if (((_27233_it.get()._field_Expr != nullptr) && (_27233_it.get()._field_Next == nullptr))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27233_it.get()._field_Expr != nullptr)) {
			_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27233_it.get()._field_Next != nullptr)) {
			_1b416a094_st(_self_, _27233_it.get()._field_Next);
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b416a58e_scope(_self_, _27233_it.get()._field_Scope);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b418409c_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183d05_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b4166c1c_rangeIter(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8ec00_RangeIter> _30533_it) {
	{
		
		if ((_1b305ed36_Slc(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b757bb23:;
			{
				_1b4165c2c_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1b305eac2_Arr(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b757b7e3:;
			{
				_1b4165c2c_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1b30607d7_Map(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b757b859:;
			{
				_1b4165ea2_rangeHashmapIter(_self_, &(_30533_it));
			}
		}
		else {
			_case_begin_1b757b77c:;
			{
				_1b4165c2c_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		_match_end_1b757b6b1:;
	};
}



inline void _1b4166e92_cont(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e900eb_ContSt> _31824_c) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b418409c_iterNext(_31824_c.get()._field_It));
}



inline void _1b4167217_label(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e9078e_Label> _32325_l) {
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4184344_label(&(_32325_l.get()._field_Ident)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1b416748c_gotoSt(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e90a7a_GotoSt> _32826_gt) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4184344_label(&(_32826_gt.get()._field_Ident)));
}



inline void _1b4167712_postfix(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e90e32_Postfix> _33331_p) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33331_p.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1b41a8e7e_write(_self_.get()._field_oc, _33331_p.get()._field_Op);
}



inline void _1b4167987_assign(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e913a5_Assign> _34030_a) {
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_L.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, _34030_a.get()._field_Op.get()._field_Kind);
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_R.get()._field_Model);
}



inline void _1b4167c0c_mapLookupAssign(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e9175c_MultiAssign>* _34640_a) {
	jule::Ptr<_1b2e6a03d_IndexingExprModel> _34717_iem = (*(_34640_a)).get()._field_R.cast_ptr<_1b2e6a03d_IndexingExprModel>(&__jule_any_type45);;
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Expr.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Index.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34640_a)).get()._field_L[0LL] != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[0LL].get()._field_Model);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34640_a)).get()._field_L[1LL] != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[1LL].get()._field_Model);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4167e82_multiAssignTup(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e9175c_MultiAssign>* _36939_a) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1b2e6b88b_TupleExprModel> _37317_tup = (*(_36939_a)).get()._field_R.cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_37317_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b758beeb:;
		if (it != expr_end) {
			jule::I32 _37514_i = it - expr->begin();
			jule::Ptr<_1b3030a93_Data> _37521_r = *it;
			{
				_1b41ebbc5_indent(_self_.get()._field_oc);
				jule::Ptr<_1b3030a93_Data> _37721_l = (*(_36939_a)).get()._field_L[_37514_i];;
				if ((_37721_l != nullptr)) {
					{
						auto &_match_expr{ _37721_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b758e8b1:;
							{
								jule::Ptr<_1b2ed8034_Var> _38129_v = _37721_l.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
								if ((_38129_v.get()._field_Reference && (!(_1b2ed83ec_IsInitialized(_38129_v.ptr()))))) {
									_1b41a8e7e_write(_self_.get()._field_oc, static__1b41837b6_var(_38129_v));
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36939_a)).get()._field_L[_37514_i]=nullptr;
									goto _iter_next_1b758beeb;
								};
							}
						}
						_match_end_1b758e85b:;
					};
					_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37721_l.get()._field_Kind));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1b41a8e7e_write(_self_.get()._field_oc, static__1b4181cc0_toOut(&(_1b4164a1c_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37514_i))));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b758beeb:;
			++it;
			_37514_i++;
			goto _iter_begin_1b758beeb;
		}
		_iter_end_1b758beeb:;
	};
	{
		auto expr = &((*(_36939_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7594366:;
		if (it != expr_end) {
			jule::I32 _40214_i = it - expr->begin();
			jule::Ptr<_1b3030a93_Data> _40221_l = *it;
			{
				if ((_40221_l == nullptr)) {
					goto _iter_next_1b7594366;
				};
				_1b41ebbc5_indent(_self_.get()._field_oc);
				_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40221_l.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b41a8e7e_write(_self_.get()._field_oc, static__1b4181cc0_toOut(&(_1b4164a1c_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40214_i))));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b7594366:;
			++it;
			_40214_i++;
			goto _iter_begin_1b7594366;
		}
		_iter_end_1b7594366:;
	};
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b4168207_multiAssignFn(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e9175c_MultiAssign>* _41838_a) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	jule::Ptr<_1b2e69b64_FnCallExprModel> _42317_f = (*(_41838_a)).get()._field_R.cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34);;
	_1b4233613_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42317_f.get()._field_Func.get()._field_Result));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41838_a)).get()._field_R);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41838_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b759a768:;
		if (it != expr_end) {
			jule::I32 _42914_i = it - expr->begin();
			jule::Ptr<_1b3030a93_Data> _42921_l = *it;
			{
				if ((_42921_l != nullptr)) {
					_1b41ebbc5_indent(_self_.get()._field_oc);
					_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42921_l.get()._field_Model);
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_42914_i));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1b759a768:;
			++it;
			_42914_i++;
			goto _iter_begin_1b759a768;
		}
		_iter_end_1b759a768:;
	};
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b416847c_multiAssign(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e9175c_MultiAssign> _44435_a) {
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b759dedb:;
			{
				_1b4167c0c_mapLookupAssign(_self_, &(_44435_a));
				return;;
			}
		}
		_match_end_1b759dccc:;
	};
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b759dc11:;
			{
				_1b4167e82_multiAssignTup(_self_, &(_44435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b759ed55:;
			{
				_1b4168207_multiAssignFn(_self_, &(_44435_a));
			}
		}
		else {
			_case_begin_1b759e371:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:458:13"));;
			}
		}
		_match_end_1b759e97b:;
	};
}



inline jule::Fn<void(void)> _1b416878a_matchExpr(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e91c9b_Match> _46233_m) {
	if ((!(_1b3031456_IsConst(_46233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1b18e3754_IsBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1b18e13ab_ReadBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1b4168aa9_case(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e91c9b_Match> _47228_m, jule::Ptr<_1b2e927e6_Case> _47243_c) {
	if (((_47243_c.get()._field_Exprs.len() != 0LL) && (!(_1b2e922a7_IsGenericTypeMatch(_47228_m.ptr()))))) {
		if (((_47228_m.get()._field_Cases.len() > 0LL) && (_47228_m.get()._field_Cases[0LL] == _47243_c))) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47243_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b75a52bc:;
			if (it != expr_end) {
				jule::I32 _47918_i = it - expr->begin();
				jule::Ptr<_1b3030a93_Data> _47925_expr = *it;
				{
					{
						
						if ((!(_47228_m.get()._field_TypeMatch))) {
							_case_begin_1b75ab669:;
							{
								jule::Fn<void(void)> _48225_caseExpr = _1b416878a_matchExpr(_self_, _47228_m);;
								if (_1b3031764_GoodOperand(_47228_m.get()._field_Expr.ptr(), &(_47925_expr))) {
									if ((_48225_caseExpr != nullptr)) {
										_48225_caseExpr();
										_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
								} else {
									_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
									if ((_48225_caseExpr != nullptr)) {
										_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b75a64ee:;
							{
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1b305ba25_TypeKind> _49829_tk = _47925_expr.get()._field_Model.cast_ptr<_1b305ba25_TypeKind>(&__jule_any_type90);;
								if ((_1b3060573_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1b416dce0_boolean(_self_.get()._field_oc.get()._field_ec, (_1b305e121_Sptr(_47925_expr.get()._field_Kind.ptr()) != nullptr));
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(static_cast<jule::I32>(_1b4189316_findTypeOffset(_self_.get()._field_oc.ptr(), _1b3060573_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()), _47925_expr.get()._field_Kind))));
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I32 _50629_j = _1b41ad57c_pushAnyType(_self_.get()._field_oc, &(_49829_tk));;
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_50629_j));
								};
							}
						}
						_match_end_1b75a6433:;
					};
					if (((_47243_c.get()._field_Exprs.len() - _47918_i) > 1LL)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1b75a52bc:;
				++it;
				_47918_i++;
				goto _iter_begin_1b75a52bc;
			}
			_iter_end_1b75a52bc:;
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47228_m.get()._field_Default == _47243_c) && (_47228_m.get()._field_Cases.len() != 0LL))) {
		_1b41ebbc5_indent(_self_.get()._field_oc);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4184883_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47243_c))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1b41ebbc5_indent(_self_.get()._field_oc);
		_1b416a58e_scope(_self_, _47243_c.get()._field_Scope);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b4168d2e_matchSt(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e91c9b_Match> _54031_m) {
	if (((_54031_m.get()._field_Cases.len() == 0LL) && (_54031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _54513_genericTypeMatch = _1b2e922a7_IsGenericTypeMatch(_54031_m.ptr());;
	if ((_54513_genericTypeMatch && ((_54031_m.get()._field_Default == nullptr) || (_54031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	if (((!(_54513_genericTypeMatch)) && (!(_1b3031456_IsConst(_54031_m.get()._field_Expr.ptr()))))) {
		if ((_1cb08e0b1_Copy && _1b416ab66_isCopyOptimizable(&(_54031_m.get()._field_Expr)))) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54031_m.get()._field_Expr.get()._field_Model);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1b41ebbc5_indent(_self_.get()._field_oc);
	};
	if ((_54031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54031_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b75ba205:;
			if (it != expr_end) {
				jule::Ptr<_1b2e927e6_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1b75ba205;
					};
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b41ebbc5_indent(_self_.get()._field_oc);
					_1b4168aa9_case(_self_, _54031_m, _56925_c);
				}
				_iter_next_1b75ba205:;
				++it;
				goto _iter_begin_1b75ba205;
			}
			_iter_end_1b75ba205:;
		};
	};
	if ((_54031_m.get()._field_Default != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b4168aa9_case(_self_, _54031_m, _54031_m.get()._field_Default);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b41845db_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54031_m))));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b41690a4_fallSt(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e92d9b_FallSt> _59626_f) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4184883_caseBegin(_59626_f.get()._field_DestCase));
}



inline void _1b4169329_breakSt(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e904a3_BreakSt> _60127_b) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60127_b.get()._field_It != 0LLU)) {
		_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183d05_iterEnd(_60127_b.get()._field_It));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, static__1b41845db_matchEnd(_60127_b.get()._field_Mtch));
	};
}



inline void _1b416959e_setResult(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e93220_RetSt> _61033_r) {
	if ((_61033_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61033_r.get()._field_Expr);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1b41ebbc5_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1b3030a93_Data>> _61817_datas = _61033_r.get()._field_Expr.cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_61817_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75c5199:;
		if (it != expr_end) {
			jule::I32 _61913_i = it - expr->begin();
			jule::Ptr<_1b3030a93_Data> _61916_data = *it;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_61913_i));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61916_data.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1b41ebbc5_indent(_self_.get()._field_oc);
			}
			_iter_next_1b75c5199:;
			++it;
			_61913_i++;
			goto _iter_begin_1b75c5199;
		}
		_iter_end_1b75c5199:;
	};
}



inline void _1b4169824_retSt(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e93220_RetSt> _62929_r) {
	if (_1b2e1e102_IsVoid(_62929_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62929_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62929_r.get()._field_Func.get()._field_Result));
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62929_r.get()._field_Expr);
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62929_r.get()._field_Expr);
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62929_r.get()._field_Expr != nullptr)) {
		_1b416959e_setResult(_self_, _62929_r);
	};
	if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1b4233613_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62929_r.get()._field_Func.get()._field_Result));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1b4169a99_var(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2ed8034_Var> _66527_v) {
	if ((!(_66527_v.get()._field_Constant))) {
		_1b4224eb7_var(_self_.get()._field_oc, _66527_v);
	};
}



inline void _1b4169d1e_strAppend(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2c57325_StrAppendExprModel> _67133_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67133_m.get()._field_Str);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67133_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b75d112d:;
			{
				jule::Ptr<_1b18de5da_Const> _67717_c = _67133_m.get()._field_Expr.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
				jule::Slice<jule::U8> _67817_bytes = static_cast<jule::Slice<jule::U8>>(_1b18e1620_ReadStr(_67717_c.ptr()));;
				_1b41a8e7e_write(_self_.get()._field_oc, _1b417ac31_cstrLit(_67817_bytes));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce6c9_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67817_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1b75d233d:;
			{
				_1b41713ec_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67133_m.get()._field_Expr);
			}
		}
		_match_end_1b75d22c7:;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b416a094_st(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Any _68926_st) {
	if ((_68926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68926_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b75d5e24:;
			{
				_1b416a58e_scope(_self_, _68926_st.cast_ptr<_1b2e8d050_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b75d5ab1:;
			{
				_1b4169a99_var(_self_, _68926_st.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b75d64c9:;
			{
				_1b4179ca7_model(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1b3030a93_Data>(&__jule_any_type23).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b75d6540:;
			{
				_1b416649c_conditional(_self_, _68926_st.cast_ptr<_1b2e8daab_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b75d65a6:;
			{
				_1b4166722_infIter(_self_, _68926_st.cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b75d661c:;
			{
				_1b4166997_whileIter(_self_, _68926_st.cast_ptr<_1b2e8e31a_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b75d6683:;
			{
				_1b4166c1c_rangeIter(_self_, _68926_st.cast_ptr<_1b2e8ec00_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b75d66e9:;
			{
				_1b4166e92_cont(_self_, _68926_st.cast_ptr<_1b2e900eb_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b75d6771:;
			{
				_1b4167217_label(_self_, _68926_st.cast_ptr<_1b2e9078e_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b75d67e8:;
			{
				_1b416748c_gotoSt(_self_, _68926_st.cast_ptr<_1b2e90a7a_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b75d6870:;
			{
				_1b4167712_postfix(_self_, _68926_st.cast_ptr<_1b2e90e32_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b75d68e7:;
			{
				_1b4167987_assign(_self_, _68926_st.cast_ptr<_1b2e913a5_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b75d696e:;
			{
				_1b416847c_multiAssign(_self_, _68926_st.cast_ptr<_1b2e9175c_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b75d69e6:;
			{
				_1b4168d2e_matchSt(_self_, _68926_st.cast_ptr<_1b2e91c9b_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b75d6a6d:;
			{
				_1b41690a4_fallSt(_self_, _68926_st.cast_ptr<_1b2e92d9b_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b75d6ae5:;
			{
				_1b4169329_breakSt(_self_, _68926_st.cast_ptr<_1b2e904a3_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b75d6b6c:;
			{
				_1b4169824_retSt(_self_, _68926_st.cast_ptr<_1b2e93220_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b75d6be4:;
			{
				_1b41779b9_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1cb08b344_PushToSliceExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b75d6c6b:;
			{
				_1b4179537_mutSlicing(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1cb0d91a5_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b75d6ce3:;
			{
				_1b41797ac_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1cb0c1885_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b75d6d6a:;
			{
				_1b4169d1e_strAppend(_self_, _68926_st.cast_ptr<_1b2c57325_StrAppendExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_1b75d5891:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b75d583b:;
	};
}



inline void _1b416a319_scopeStmts(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8d050_Scope>* _74135_s) {
	{
		auto expr = &((*(_74135_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75e20a6:;
		if (it != expr_end) {
			jule::Any _74221_st = *it;
			{
				_1b41ebbc5_indent(_self_.get()._field_oc);
				_1b416a094_st(_self_, _74221_st);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b75e20a6:;
			++it;
			goto _iter_begin_1b75e20a6;
		}
		_iter_end_1b75e20a6:;
	};
}



inline void _1b416a58e_scope(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e8d050_Scope> _75029_s) {
	_1b41e8155_addIndent(_self_.get()._field_oc);
	if (_75029_s.get()._field_Deferred) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b416a319_scopeStmts(_self_, &(_75029_s));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75029_s.get()._field_Deferred) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1b416a814_funcScope(jule::Ptr<_1b4164ea1_scopeCoder> _self_, jule::Ptr<_1b2e71132_FnIns> _76633_f) {
	if ((_76633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	if ((!(_1b2e1e102_IsVoid(_76633_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1b30664e1_Tuple> _77321_tup = _1b3060a4b_Tup(_76633_f.get()._field_Result.ptr());;
		if ((_77321_tup != nullptr)) {
			_1b41ebbc5_indent(_self_.get()._field_oc);
			_1b4232ec5_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77321_tup);
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77321_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b75e8189:;
				if (it != expr_end) {
					jule::I32 _77822_i = it - expr->begin();
					jule::Ptr<_1b305ba25_TypeKind> _77829_t = *it;
					{
						if (_1b4235901_shouldInitialized(&(_77829_t))) {
							_1b41ebbc5_indent(_self_.get()._field_oc);
							_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_77822_i));
							_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1b417a02c_initExpr(_self_.get()._field_oc.get()._field_ec, _77829_t);
							_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1b75e8189:;
					++it;
					_77822_i++;
					goto _iter_begin_1b75e8189;
				}
				_iter_end_1b75e8189:;
			};
		} else if ((_76633_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1b41ebbc5_indent(_self_.get()._field_oc);
			_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76633_f.get()._field_Result));
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1b4235901_shouldInitialized(&(_76633_f.get()._field_Result))) {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b417a02c_initExpr(_self_.get()._field_oc.get()._field_ec, _76633_f.get()._field_Result);
			};
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1b416a319_scopeStmts(_self_, &(_76633_f.get()._field_Scope));
	if ((_76633_f.get()._field_Decl.get()._field_Exceptional && _1b2e1e102_IsVoid(_76633_f.get()._field_Decl.ptr()))) {
		_1b41ebbc5_indent(_self_.get()._field_oc);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1b4164ea1_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b416d3e9_exprCoder> static__1b416d7e5_new(jule::Ptr<_1b42224e2_ObjectCoder>* _10824_oc) {
	return jule::new_ptr<_1b416d3e9_exprCoder>(_1b416d3e9_exprCoder{._field_oc=(*(_10824_oc))});;
}



inline void _1b416da6a_string(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b18de5da_Const>* _11427_c) {
	jule::Str _11513_content = _1b18e1620_ReadStr((*(_11427_c)).ptr());;
	if ((_11513_content.len() == 0LL)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12013_bytes = static_cast<jule::Slice<jule::U8>>(_11513_content);;
	jule::Str _12113_len = _1b18ce6c9_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12013_bytes.len())), 10LL);;
	jule::Str _12213_lit = _1b417ac31_cstrLit(_12013_bytes);;
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41a8e7e_write(_self_.get()._field_oc, _12213_lit);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b41a8e7e_write(_self_.get()._field_oc, _12113_len);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b416dce0_boolean(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Bool _13127_b) {
	if (_13127_b) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1b416debb_nilLit(jule::Ptr<_1b416d3e9_exprCoder> _self_) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1b416e2c9_ftoaSpecialCases(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::F64* _14337_x) {
	{
		
		if (_1b188cc09_IsNaN((*(_14337_x)))) {
			_case_begin_1b7621943:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1b188ce6d_IsInf((*(_14337_x)), 1LL)) {
			_case_begin_1b762126c:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1b188ce6d_IsInf((*(_14337_x)), -1LL)) {
			_case_begin_1b76212d3:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b7621206:;
			{
				return false;;
			}
		}
		_match_end_1b762113a:;
	};
	return true;;
}



inline void _1b416e54e_float32(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b18de5da_Const>* _15728_c) {
	jule::F64 _15813_x = _1b18e20c1_AsF64((*(_15728_c)).ptr());;
	if (_1b416e2c9_ftoaSpecialCases(_self_, &(_15813_x))) {
		return;;
	};
	{
		
		if ((_15813_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b762423c:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15813_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b7623e51:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b7623dda:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b417b03e_ftoa(_15813_x, 32LL));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1b7623cb9:;
	};
}



inline void _1b416e7c4_float64(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b18de5da_Const>* _17628_c) {
	jule::F64 _17713_x = _1b18e20c1_AsF64((*(_17628_c)).ptr());;
	if (_1b416e2c9_ftoaSpecialCases(_self_, &(_17713_x))) {
		return;;
	};
	{
		
		if ((_17713_x == jule::MAX_F64)) {
			_case_begin_1b7627141:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17713_x == jule::MIN_F64)) {
			_case_begin_1b7627828:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b7626cde:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b417b03e_ftoa(_17713_x, 64LL));
			}
		}
		_match_end_1b7626bbd:;
	};
}



inline void _1b416ea49_constant(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b18de5da_Const> _19432_c) {
	{
		
		if (_1b18e39b8_IsStr(_19432_c.ptr())) {
			_case_begin_1b7628d79:;
			{
				_1b416da6a_string(_self_, &(_19432_c));
			}
		}
		else if (_1b18e3754_IsBool(_19432_c.ptr())) {
			_case_begin_1b7628de0:;
			{
				_1b416dce0_boolean(_self_, _1b18e13ab_ReadBool(_19432_c.ptr()));
			}
		}
		else if (_1b18e3c2c_IsF64(_19432_c.ptr())) {
			_case_begin_1b7628e56:;
			{
				{
					
					if (_19432_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1b762b233:;
						{
							_1b416e54e_float32(_self_, &(_19432_c));
						}
					}
					else {
						_case_begin_1b762ad8c:;
						{
							_1b416e7c4_float64(_self_, &(_19432_c));
						}
					}
					_match_end_1b762acc1:;
				};
			}
		}
		else if (_1b18e327b_IsI64(_19432_c.ptr())) {
			_case_begin_1b7628ebc:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b417b2d6_itoa(static_cast<jule::I64>(_1b18e0dd3_ReadI64(_19432_c.ptr()))));
			}
		}
		else if (_1b18e34e0_IsU64(_19432_c.ptr())) {
			_case_begin_1b76297e7:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b417b57d_utoa(static_cast<jule::U64>(_1b18e1147_ReadU64(_19432_c.ptr()))));
			}
		}
		else if (_1b18e3e91_IsNil(_19432_c.ptr())) {
			_case_begin_1b762985d:;
			{
				_1b416debb_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b7628d13:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b7628c47:;
	};
}



inline void _1b416ee12_divByZeroBinary(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1cb188a5c_Token>* _21836_op, jule::Ptr<_1b2e68cea_OperandExprModel>* _21853_l, jule::Ptr<_1b2e68cea_OperandExprModel>* _21880_r) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21836_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1b762e423:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b762e49a:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1b762e3ac:;
	};
	if ((!(_20b9476d6_Production))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b4222adb_locInfo(_self_.get()._field_oc, _21836_op);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b41713ec_possibleRefExpr(_self_, (*(_21853_l)).get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b41713ec_possibleRefExpr(_self_, (*(_21880_r)).get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4170187_unsafeBinary(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e68ed7_BinopExprModel> _24036_m) {
	if ((_24036_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24036_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_1b417c1c7_isAny(&(_24036_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1b305c95a_IsNil(_24036_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1b417c1c7_isAny(&(_24036_m.get()._field_Right.get()._field_Kind)))))) {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24036_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I32 _25025_i = _1b41ad57c_pushAnyType(_self_.get()._field_oc, &(_24036_m.get()._field_Right.get()._field_Kind));;
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_25025_i));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1b41713ec_possibleRefExpr(_self_, _24036_m.get()._field_Left.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b41713ec_possibleRefExpr(_self_, _24036_m.get()._field_Right.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41713ec_possibleRefExpr(_self_, _24036_m.get()._field_Left.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b41a8e7e_write(_self_.get()._field_oc, _24036_m.get()._field_Op.get()._field_Kind);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b41713ec_possibleRefExpr(_self_, _24036_m.get()._field_Right.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b417040c_binary(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e68ed7_BinopExprModel> _27130_m) {
	{
		auto &_match_expr{ _27130_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1b763ab27:;
			{
				if ((_1b306030e_Struct(_27130_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1b416ee12_divByZeroBinary(_self_, &(_27130_m.get()._field_Op), &(_27130_m.get()._field_Left), &(_27130_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1b763aaa0:;
	};
	_1b4170187_unsafeBinary(_self_, _27130_m);
}



inline void _1b4170682_var(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2ed8034_Var> _28327_m) {
	if (_28327_m.get()._field_CppLinked) {
		jule::Ptr<_1b2e184d6_Directive> _28517_d = _1b42352c4_findDirective(&(_28327_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28517_d != nullptr)) {
			_1b41a8e7e_write(_self_.get()._field_oc, _1b4227393_concatAllParts(_28517_d.get()._field_Args));
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b41837b6_var(_28327_m));
}



inline void _1b4170907_structureIns(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e687bc_StructIns> _29436_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422c420_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29436_m));
}



inline void _1b4170b7c_unary(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e691c4_UnaryExprModel> _29829_m) {
	{
		auto &_match_expr{ _29829_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b7640731:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1b41713ec_possibleRefExpr(_self_, _29829_m.get()._field_Expr.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b76407a8:;
			{
				if ((_20b9476d6_Production || (_1b305e121_Sptr(_29829_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b7640698;
				};
				_1b41713ec_possibleRefExpr(_self_, _29829_m.get()._field_Expr.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1b4222adb_locInfo(_self_.get()._field_oc, &(_29829_m.get()._field_Op));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1b7640698:;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41a8e7e_write(_self_.get()._field_oc, _29829_m.get()._field_Op.get()._field_Kind);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41713ec_possibleRefExpr(_self_, _29829_m.get()._field_Expr.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b4170e02_structureLit(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6959d_StructLitExprModel> _32236_m) {
	if (_32236_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183277_structureIns(&(_32236_m.get()._field_Strct)));
	if (_32236_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32236_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32236_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7647aac:;
			if (it != expr_end) {
				jule::I32 _33517_i = it - expr->begin();
				jule::Ptr<_1b2e685d0_FieldIns> _33520_f = *it;
				{
					{
						auto expr = &(_32236_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b76485e6:;
						if (it != expr_end) {
							jule::Ptr<_1b2e693b1_StructArgExprModel> _33629_arg = *it;
							{
								if ((_33629_arg.get()._field_Field == _33520_f)) {
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1b41a8e7e_write(_self_.get()._field_oc, static__1b418351e_field(&(_33629_arg.get()._field_Field.get()._field_Decl)));
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1b41713ec_possibleRefExpr(_self_, _33629_arg.get()._field_Expr);
									if (((_32236_m.get()._field_Strct.get()._field_Fields.len() - _33517_i) > 1LL)) {
										_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1b7647aac;
								};
							}
							_iter_next_1b76485e6:;
							++it;
							goto _iter_begin_1b76485e6;
						}
						_iter_end_1b76485e6:;
					};
				}
				_iter_next_1b7647aac:;
				++it;
				_33517_i++;
				goto _iter_begin_1b7647aac;
			}
			_iter_end_1b7647aac:;
		};
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b4171177_allocStructure(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6978a_AllocStructLitExprModel> _35338_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4183277_structureIns(&(_35338_m.get()._field_Lit.get()._field_Strct)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b4170e02_structureLit(_self_, _35338_m.get()._field_Lit);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b41713ec_possibleRefExpr(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Any _36135_expr) {
	{
		auto &_match_expr{ _36135_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b764dd9e:;
			{
				jule::Ptr<_1b2ed8034_Var> _36417_v = _36135_expr.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
				if (_36417_v.get()._field_Reference) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1b4179ca7_model(_self_, _36135_expr);
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1b764dca0:;
	};
	_1b4179ca7_model(_self_, _36135_expr);
}



inline void _1b4171672_casting(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69977_CastingExprModel> _38131_m) {
	{
		
		if (_1b417c1c7_isAny(&(_38131_m.get()._field_Kind))) {
			_case_begin_1b7651126:;
			{
				if (_1b305c95a_IsNil(_38131_m.get()._field_ExprKind.ptr())) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1b305e85d_TypeEnum(_38131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
					return;;
				};
				jule::I32 _39217_i = _1b41ad57c_pushAnyType(_self_.get()._field_oc, &(_38131_m.get()._field_ExprKind));;
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _38131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1b76549cb:;
						{
							jule::Ptr<_1b3061772_Prim> _39621_prim = _1b305ddac_Prim(_38131_m.get()._field_ExprKind.ptr());;
							if (((_39621_prim != nullptr) && _1b18dda18_IsInt(_39621_prim.get()._field_Kind))) {
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1b41a8e7e_write(_self_.get()._field_oc, _1b422964d_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _39621_prim));
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1b76558ab;
							};
							goto _case_begin_1b7655911;
						}
					}
					else {
						_case_begin_1b7655911:;
						{
							_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
						}
					}
					_match_end_1b76558ab:;
				};
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_39217_i));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if (_1b417c1c7_isAny(&(_38131_m.get()._field_ExprKind))) {
			_case_begin_1b765118c:;
			{
				_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1b305e121_Sptr(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1b305e121_Sptr(_38131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				};
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_20b9476d6_Production))) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b4222adb_locInfo(_self_.get()._field_oc, &(_38131_m.get()._field_Token));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(static_cast<jule::I32>(_1b41ad57c_pushAnyType(_self_.get()._field_oc, &(_38131_m.get()._field_Kind)))));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1b305e385_Ptr(_38131_m.get()._field_ExprKind.ptr()) != nullptr) || (_1b305e385_Ptr(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7651203:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1b3060573_Trait(_38131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b7651269:;
			{
				_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1b305e121_Sptr(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1b305e121_Sptr(_38131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				};
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_20b9476d6_Production))) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b4222adb_locInfo(_self_.get()._field_oc, &(_38131_m.get()._field_Token));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(static_cast<jule::I32>(_1b4189316_findTypeOffset(_self_.get()._field_oc.ptr(), _1b3060573_Trait(_38131_m.get()._field_ExprKind.ptr()), _38131_m.get()._field_Kind))));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1b3060573_Trait(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b765315b:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(static_cast<jule::I32>(_1b4189316_findTypeOffset(_self_.get()._field_oc.ptr(), _1b3060573_Trait(_38131_m.get()._field_Kind.ptr()), _38131_m.get()._field_ExprKind))));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1b76510b0:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1b41713ec_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b7650ee4:;
	};
}



inline void _1b41718e7_models(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Slice<jule::Any> _47230_args) {
	if ((_47230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_47230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b766b43d:;
		if (it != expr_end) {
			jule::I32 _47614_i = it - expr->begin();
			jule::Any _47621_a = *it;
			{
				_1b41713ec_possibleRefExpr(_self_, _47621_a);
				if (((_47230_args.len() - _47614_i) > 1LL)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b766b43d:;
			++it;
			_47614_i++;
			goto _iter_begin_1b766b43d;
		}
		_iter_end_1b766b43d:;
	};
}



inline void _1b4171b6c_args(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69b64_FnCallExprModel>* _48429_m) {
	jule::I32 _48517_j = 0LL;;
	if ((((*(_48429_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_48429_m)).get()._field_Func.get()._field_Decl.get()._field_Statically)))) {
		(_48517_j)++;
	};
	{
		auto expr = &((*(_48429_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b766e221:;
		if (it != expr_end) {
			jule::I32 _48913_i = it - expr->begin();
			jule::Any _48916_arg = *it;
			{
				jule::Ptr<_1b2e70263_ParamIns> _49017_p = (*(_48429_m)).get()._field_Func.get()._field_Params[_48517_j];;
				if (((_49017_p.get()._field_Decl != nullptr) && _49017_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _48916_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b76709d6:;
							{
								jule::Ptr<_1b2ed8034_Var> _49425_v = _48916_arg.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
								if (_49425_v.get()._field_Reference) {
									_1b4179ca7_model(_self_, _48916_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1b76708e8:;
					};
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b4179ca7_model(_self_, _48916_arg);
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1b41713ec_possibleRefExpr(_self_, _48916_arg);
				_julec_label_end:;
				if ((((*(_48429_m)).get()._field_Args.len() - _48913_i) > 1LL)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_48517_j)++;
			}
			_iter_next_1b766e221:;
			++it;
			_48913_i++;
			goto _iter_begin_1b766e221;
		}
		_iter_end_1b766e221:;
	};
}



inline void _1b4171de2_modelForCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Any _51436_expr) {
	{
		auto &_match_expr{ _51436_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7674c1b:;
			{
				_1b4175269_funcIns(_self_, _51436_expr.cast_ptr<_1b2e71132_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b7674c93:;
			{
				jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _52021_ssie = _51436_expr.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_52021_ssie.get()._field_Method != nullptr)) {
					_1b4175269_funcIns(_self_, _52021_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1b7674b0b:;
	};
	_1b41713ec_possibleRefExpr(_self_, _51436_expr);
}



inline void _1b4172167_pushCallInf(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69b64_FnCallExprModel>* _52932_m) {
	if ((_20b9476d6_Production || ((!((*(_52932_m)).get()._field_Func.get()._field_Anon)) && (!(_1b417bbee_isBuiltinCallHasDebuginf(_52932_m)))))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_52932_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_52932_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b7677e3e:;
				{
					if ((*(_52932_m)).get()._field_Expr.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1b767811a;
				}
			}
			else {
				_case_begin_1b767811a:;
				{
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1b7677ed8:;
		};
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1b4222adb_locInfo(_self_.get()._field_oc, &((*(_52932_m)).get()._field_Token));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_52932_m)).get()._field_Args.len() != 0LL)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1b4172475_isWrapped(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69b64_FnCallExprModel>* _55434_m) {
	if ((((!(_1b2e724b8_IsBuiltin((*(_55434_m)).get()._field_Func.ptr()))) && ((*(_55434_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1b2e2cc8c_IsSelf((*(_55434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_55434_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b767ba69:;
				{
					jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _55825_ssie = (*(_55434_m)).get()._field_Expr.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1b2e2e60c_IsRef((*(_55434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1b305e121_Sptr(_55825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b767c33e:;
							{
								goto _match_end_1b767c8d3;
							}
						}
						else {
							_case_begin_1b767c949:;
							{
								if ((_1b306030e_Struct(_55825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_55825_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1b4179ca7_model(_self_, _55825_ssie.get()._field_Expr.get()._field_Model);
										_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b767c8d3:;
					};
				}
			}
			_match_end_1b767b85a:;
		};
	};
	return false;;
}



inline void _1b41726ea_pureFuncCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69b64_FnCallExprModel>* _57837_m) {
	jule::Bool _57913_wrapped = _1b4172475_isWrapped(_self_, _57837_m);;
	_1b4171de2_modelForCall(_self_, (*(_57837_m)).get()._field_Expr);
	if ((!(_1b2e724b8_IsBuiltin((*(_57837_m)).get()._field_Func.ptr())))) {
		if (((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_57837_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1b4235659_hasDirective(&((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_57837_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7683334:;
					if (it != expr_end) {
						jule::I32 _58526_i = it - expr->begin();
						jule::Ptr<_1b305a2e8_InsGeneric> _58533_g = *it;
						{
							_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58533_g.get()._field_Kind));
							if ((((*(_57837_m)).get()._field_Func.get()._field_Generics.len() - _58526_i) > 1LL)) {
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1b7683334:;
						++it;
						_58526_i++;
						goto _iter_begin_1b7683334;
					}
					_iter_end_1b7683334:;
				};
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1b4172167_pushCallInf(_self_, _57837_m);
	jule::Bool _59617_locinfo = false;;
	if ((((!(_1b2e724b8_IsBuiltin((*(_57837_m)).get()._field_Func.ptr()))) && ((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1b2e2cc8c_IsSelf((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_57837_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b7686c94:;
				{
					jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _60025_ssie = (*(_57837_m)).get()._field_Expr.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1b2e2e60c_IsRef((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1b768a847:;
							{
								_1b41713ec_possibleRefExpr(_self_, _60025_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1b305e121_Sptr(_60025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b768a8ad:;
							{
								_1b41713ec_possibleRefExpr(_self_, _60025_ssie.get()._field_Expr.get()._field_Model);
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_20b9476d6_Production))) {
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1b4222adb_locInfo(_self_.get()._field_oc, &((*(_57837_m)).get()._field_Token));
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1b7687c0c:;
							{
								if ((_1b306030e_Struct(_60025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _60025_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b7687602:;
											{
												jule::Ptr<_1b2ed8034_Var> _61733_v = _60025_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
												if (_61733_v.get()._field_Reference) {
													goto _match_end_1b7688779;
												};
												goto _case_begin_1b76887ce;
											}
										}
										else {
											_case_begin_1b76887ce:;
											{
												_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1b7688779:;
									};
								};
								if (_57913_wrapped) {
									_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1b4179ca7_model(_self_, _60025_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1b7687b96:;
					};
					if (((*(_57837_m)).get()._field_Args.len() > 0LL)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1b7686d0a:;
				{
					_1b41713ec_possibleRefExpr(_self_, (*(_57837_m)).get()._field_Expr.cast_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_20b9476d6_Production))) {
						_59617_locinfo=true;
					};
					if (((*(_57837_m)).get()._field_Args.len() > 0LL)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1b7686a85:;
		};
	};
	_1b4171b6c_args(_self_, _57837_m);
	if (_59617_locinfo) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1b4222adb_locInfo(_self_.get()._field_oc, &((*(_57837_m)).get()._field_Token));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_57913_wrapped) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1b4172970_coFuncCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69b64_FnCallExprModel>* _65935_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	jule::Str _66217_head = jule::Str("std::thread([", 13);;
	if (((*(_65935_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_66217_head).append("_self_", 6);
		if (((*(_65935_m)).get()._field_Args.len() > 0LL)) {
			(_66217_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_65935_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7695148:;
		if (it != expr_end) {
			jule::I32 _66913_i = it - expr->begin();
			jule::Any _66916_arg = *it;
			{
				if ((_66913_i > 0LL)) {
					(_66217_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _66916_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b769704b:;
						{
							jule::Ptr<_1b2ed8034_Var> _67525_v = _66916_arg.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
							_66217_head+=static__1b41837b6_var(_67525_v);
							goto _iter_next_1b7695148;
						}
					}
					_match_end_1b76967ed:;
				};
				jule::Str _67917_name = (jule::Str("_co_arg_", 8) + _1b18ce971_Itoa(_66913_i));;
				_66217_head+=_67917_name;
				_1b41ebbc5_indent(_self_.get()._field_oc);
				_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_65935_m)).get()._field_Func.get()._field_Params[_66913_i].get()._field_Kind));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_65935_m)).get()._field_Func.get()._field_Params[_66913_i].get()._field_Decl.get()._field_Reference) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1b41a8e7e_write(_self_.get()._field_oc, _67917_name);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b41713ec_possibleRefExpr(_self_, _66916_arg);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _69117_argS = jule::Any(_67917_name, &__jule_any_type5);;
				(*(_65935_m)).get()._field_Args[_66913_i]=(*(((jule::Any*)((&(_69117_argS))))));
			}
			_iter_next_1b7695148:;
			++it;
			_66913_i++;
			goto _iter_begin_1b7695148;
		}
		_iter_end_1b7695148:;
	};
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, _66217_head);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41726ea_pureFuncCall(_self_, _65935_m);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b4172c8e_writeUseExpr(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e71132_FnIns>* _70937_f, jule::Ptr<_1b3030a93_Data> _70952_d) {
	if ((_1b3060a4b_Tup(_70952_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b41713ec_possibleRefExpr(_self_, _70952_d.get()._field_Model);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1b2e6b88b_TupleExprModel> _71517_tup = _70952_d.get()._field_Model.cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88);;
	_1b4232ec5_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1b3060a4b_Tup((*(_70937_f)).get()._field_Result.ptr()));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_71517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b76a2e36:;
		if (it != expr_end) {
			jule::I32 _71813_i = it - expr->begin();
			jule::Ptr<_1b3030a93_Data> _71816_data = *it;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_71813_i));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1b41713ec_possibleRefExpr(_self_, _71816_data.get()._field_Model);
				if (((_71517_tup.get()._field_Datas.len() - _71813_i) > 1LL)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1b76a2e36:;
			++it;
			_71813_i++;
			goto _iter_begin_1b76a2e36;
		}
		_iter_end_1b76a2e36:;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1b4173014_funcCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69b64_FnCallExprModel> _73032_m) {
	if (_73032_m.get()._field_IsCo) {
		_1b4172970_coFuncCall(_self_, &(_73032_m));
		return;;
	};
	if (((_1b2e724b8_IsBuiltin(_73032_m.get()._field_Func.ptr()) || (!(_73032_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_73032_m.get()._field_Except != nullptr) && (_73032_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1b41726ea_pureFuncCall(_self_, &(_73032_m));
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1b41726ea_pureFuncCall(_self_, &(_73032_m));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	if ((_73032_m.get()._field_Except != nullptr)) {
		if (((_73032_m.get()._field_Func.get()._field_Result == nullptr) || (!(_73032_m.get()._field_Assigned)))) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1b416a58e_scope(_self_.get()._field_oc.get()._field_sc, _73032_m.get()._field_Except);
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _75621_forwarded = _1b417b935_isForwarded(&(_73032_m.get()._field_Except));;
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_75621_forwarded) {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _76125_stmt = _73032_m.get()._field_Except.get()._field_Stmts[(_73032_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _76125_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1b76ac616:;
					{
						_73032_m.get()._field_Except.get()._field_Stmts=_73032_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_73032_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1b41e8155_addIndent(_self_.get()._field_oc);
						_1b416a319_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_73032_m.get()._field_Except));
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1b41ebbc5_indent(_self_.get()._field_oc);
						_1b4172c8e_writeUseExpr(_self_, &(_73032_m.get()._field_Func), _76125_stmt.cast_ptr<_1b3030a93_Data>(&__jule_any_type23));
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1b41e8672_doneIndent(_self_.get()._field_oc);
						_1b41ebbc5_indent(_self_.get()._field_oc);
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1b76ad4e6:;
					{
						_1b416a58e_scope(_self_.get()._field_oc.get()._field_sc, _73032_m.get()._field_Except);
					}
				}
				_match_end_1b76ad491:;
			};
			if (_75621_forwarded) {
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1b417a02c_initExpr(_self_, _73032_m.get()._field_Func.get()._field_Result);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1b41e8672_doneIndent(_self_.get()._field_oc);
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1b4222adb_locInfo(_self_.get()._field_oc, &(_73032_m.get()._field_Token));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1b2e1e102_IsVoid(_73032_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1b41ebbc5_indent(_self_.get()._field_oc);
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1b41e8672_doneIndent(_self_.get()._field_oc);
	};
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b4173289_slice(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e69d51_SliceExprModel> _80129_m) {
	if ((_80129_m.get()._field_Elems.len() == 0LL)) {
		_1b41a8e7e_write(_self_.get()._field_oc, _1b422b0bc_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _80129_m.get()._field_ElemKind));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422b0bc_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _80129_m.get()._field_ElemKind));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1b41718e7_models(_self_, _80129_m.get()._field_Elems);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b417350e_indexing(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6a03d_IndexingExprModel> _81332_m) {
	_1b41713ec_possibleRefExpr(_self_, _81332_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_20b9476d6_Production || (_1b305e385_Ptr(_81332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1b30607d7_Map(_81332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1b417be30_isExprComesFromBind(&(_81332_m.get()._field_Expr))) {
			_case_begin_1b76b9c3e:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b41713ec_possibleRefExpr(_self_, _81332_m.get()._field_Index.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b76ba4ae:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1b4222adb_locInfo(_self_.get()._field_oc, &(_81332_m.get()._field_Token));
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1b41713ec_possibleRefExpr(_self_, _81332_m.get()._field_Index.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b76ba448:;
	};
}



inline void _1b4173784_unsafeIndexing(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2c63771_UnsafeIndexingExprModel> _83338_m) {
	_1b41713ec_possibleRefExpr(_self_, _83338_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_20b9476d6_Production || (_1b305e385_Ptr(_83338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1b30607d7_Map(_83338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76be2c6:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b41713ec_possibleRefExpr(_self_, _83338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b76beabd:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1b41713ec_possibleRefExpr(_self_, _83338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b76bea57:;
	};
}



inline void _1b4173a09_anonFunc(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6a22a_AnonFnExprModel> _85032_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422da92_func(_self_.get()._field_oc.get()._field_tc.ptr(), _85032_m.get()._field_Func));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1b4224c53_paramsIns(_self_.get()._field_oc, &(_85032_m.get()._field_Func.get()._field_Params));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1b422d476_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_85032_m.get()._field_Func));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b416a814_funcScope(_self_.get()._field_oc.get()._field_sc, _85032_m.get()._field_Func);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4173c7e_mapExpr(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6a604_MapExprModel> _86131_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _86131_m.get()._field_KeyKind));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _86131_m.get()._field_ValKind));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_86131_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_86131_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b76c8a0b:;
			if (it != expr_end) {
				jule::I32 _86818_i = it - expr->begin();
				jule::Ptr<_1b2e6a417_KeyValPairExprModel> _86825_pair = *it;
				{
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1b41713ec_possibleRefExpr(_self_, _86825_pair.get()._field_Key);
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1b41713ec_possibleRefExpr(_self_, _86825_pair.get()._field_Val);
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_86131_m.get()._field_Entries.len() - _86818_i) > 1LL)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1b76c8a0b:;
				++it;
				_86818_i++;
				goto _iter_begin_1b76c8a0b;
			}
			_iter_end_1b76c8a0b:;
		};
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b4174004_slicing(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6a7e1_SlicingExprModel> _88231_m) {
	_1b41713ec_possibleRefExpr(_self_, _88231_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_20b9476d6_Production))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b4222adb_locInfo(_self_.get()._field_oc, &(_88231_m.get()._field_Token));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b41713ec_possibleRefExpr(_self_, _88231_m.get()._field_Left);
	if ((_88231_m.get()._field_Right != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b41713ec_possibleRefExpr(_self_, _88231_m.get()._field_Right);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4174279_traitSub(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel> _89832_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4182991_traitDecl(_89832_m.get()._field_Trt));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1b41713ec_possibleRefExpr(_self_, _89832_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4182452_func(&(_89832_m.get()._field_Method)));
}



inline void _1b41744ee_structureSub(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _90736_m) {
	_1b41713ec_possibleRefExpr(_self_, _90736_m.get()._field_Expr.get()._field_Model);
	if ((_90736_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1b305e385_Ptr(_90736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1b305e121_Sptr(_90736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_20b9476d6_Production))) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1b4222adb_locInfo(_self_.get()._field_oc, &(_90736_m.get()._field_Token));
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b418351e_field(&(_90736_m.get()._field_Field.get()._field_Decl)));
}



inline void _1b4174774_commonIdent(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6b4b2_CommonIdentExprModel> _92831_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, _92831_m.get()._field_Ident);
}



inline void _1b41749e9_commonSub(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel> _93233_m) {
	_1b41713ec_possibleRefExpr(_self_, _93233_m.get()._field_Expr);
	{
		
		if ((_1b305e385_Ptr(_93233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b76d7ae7:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1b305e121_Sptr(_93233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b76d8301:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_20b9476d6_Production))) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b4222adb_locInfo(_self_.get()._field_oc, &(_93233_m.get()._field_Token));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1b76d828a:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1b76d8224:;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, _93233_m.get()._field_Ident);
}



inline void _1b4174c6e_array(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6b2c5_ArrayExprModel> _95129_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422c72d_array(_self_.get()._field_oc.get()._field_tc.ptr(), _95129_m.get()._field_Kind));
	if ((_95129_m.get()._field_Elems.len() == 0LL)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_95129_m.get()._field_Elems.len() == 2LL) && (_95129_m.get()._field_Elems[1LL] == nullptr))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b41713ec_possibleRefExpr(_self_, _95129_m.get()._field_Elems[0LL]);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1b41718e7_models(_self_, _95129_m.get()._field_Elems);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1b4174ee4_funcInsCommon(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e71132_FnIns> _97437_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422da92_func(_self_.get()._field_oc.get()._field_tc.ptr(), _97437_m));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b4175269_funcIns(_self_, _97437_m);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4175269_funcIns(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e71132_FnIns> _98131_m) {
	if (((_98131_m.get()._field_Decl != nullptr) && _98131_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1b2e184d6_Directive> _98317_d = _1b42352c4_findDirective(&(_98131_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_98317_d != nullptr)) {
			_1b41a8e7e_write(_self_.get()._field_oc, _1b4227393_concatAllParts(_98317_d.get()._field_Args));
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b41826e9_funcIns(&(_98131_m)));
}



inline void _1b41754de_tuple(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6b88b_TupleExprModel> _99229_m) {
	{
		auto expr = &(_99229_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b76e55e9:;
		if (it != expr_end) {
			jule::I32 _99314_i = it - expr->begin();
			jule::Ptr<_1b3030a93_Data> _99321_d = *it;
			{
				_1b41713ec_possibleRefExpr(_self_, _99321_d.get()._field_Model);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_99229_m.get()._field_Datas.len() - _99314_i) > 1LL)) {
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b41ebbc5_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1b76e55e9:;
			++it;
			_99314_i++;
			goto _iter_begin_1b76e55e9;
		}
		_iter_end_1b76e55e9:;
	};
}



inline void _1b4175764_newCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c13e_BuiltinNewCallExprModel> _100331_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _100331_m.get()._field_Kind));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_100331_m.get()._field_Init != nullptr)) {
		_1b41713ec_possibleRefExpr(_self_, _100331_m.get()._field_Init);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b41759d9_outCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6ba78_BuiltinOutCallExprModel> _101331_m) {
	if ((_101331_m.get()._field_Debug && _20b9476d6_Production)) {
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1b41713ec_possibleRefExpr(_self_, _101331_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4175c5e_outlnCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6bc65_BuiltinOutlnCallExprModel> _102233_m) {
	if ((_102233_m.get()._field_Debug && _20b9476d6_Production)) {
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b41713ec_possibleRefExpr(_self_, _102233_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4175ed4_panicCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c32b_BuiltinPanicCallExprModel> _103133_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1b41713ec_possibleRefExpr(_self_, _103133_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1b4222adb_locInfo(_self_.get()._field_oc, &(_103133_m.get()._field_Token));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b4176259_assertCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel> _103934_m) {
	if (_20b9476d6_Production) {
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1b41713ec_possibleRefExpr(_self_, _103934_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b417ac31_cstrLit(static_cast<jule::Slice<jule::U8>>(_103934_m.get()._field_Log)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1b4222adb_locInfo(_self_.get()._field_oc, &(_103934_m.get()._field_Token));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b41764ce_errorCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6d618_BuiltinErrorCallExprModel> _105233_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1b2e1e102_IsVoid(_105233_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _105233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b770331b:;
				{
					jule::Ptr<_1b2ed8034_Var> _105721_v = _105233_m.get()._field_Err.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
					if (_105721_v.get()._field_Ident.equal("error", 5)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1b77032b6:;
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1b4233613_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_105233_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _105233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b77060ee:;
				{
					jule::Ptr<_1b2ed8034_Var> _106921_v = _105233_m.get()._field_Err.get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
					if (_106921_v.get()._field_Ident.equal("error", 5)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1b7706044:;
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1b41713ec_possibleRefExpr(_self_, _105233_m.get()._field_Err.get()._field_Model);
	jule::I32 _107813_i = _1b41ad57c_pushAnyType(_self_.get()._field_oc, &(_105233_m.get()._field_Err.get()._field_Kind));;
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_107813_i));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b4176754_copyCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6d42b_BuiltinCopyCallExprModel> _108432_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1b41713ec_possibleRefExpr(_self_, _108432_m.get()._field_Dest.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1b305ddac_Prim(_108432_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1b41713ec_possibleRefExpr(_self_, _108432_m.get()._field_Src.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1b305ddac_Prim(_108432_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b41769c9_lenCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6cace_BuiltinLenCallExprModel> _110031_m) {
	_1b41713ec_possibleRefExpr(_self_, _110031_m.get()._field_Expr.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1b4176c4e_capCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6ccbb_BuiltinCapCallExprModel> _110531_m) {
	_1b41713ec_possibleRefExpr(_self_, _110531_m.get()._field_Expr.get()._field_Model);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1b4176ec4_deleteCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel> _111034_m) {
	_1b41713ec_possibleRefExpr(_self_, _111034_m.get()._field_Dest.get()._field_Model);
	if ((_111034_m.get()._field_Key != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1b41713ec_possibleRefExpr(_self_, _111034_m.get()._field_Key.get()._field_Model);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1b4177249_makeCallSlice(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>* _112138_m) {
	jule::Ptr<_1b3065963_Slc> _112217_slice = _1b305ed36_Slc((*(_112138_m)).get()._field_Kind.ptr());;
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_112138_m)).get()._field_Kind));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b41713ec_possibleRefExpr(_self_, (*(_112138_m)).get()._field_Len);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_112138_m)).get()._field_Cap != nullptr)) {
		_1b41713ec_possibleRefExpr(_self_, (*(_112138_m)).get()._field_Cap);
	} else {
		_1b41713ec_possibleRefExpr(_self_, (*(_112138_m)).get()._field_Len);
	};
	if (_1b4235901_shouldInitialized(&(_112217_slice.get()._field_Elem))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b417a02c_initExpr(_self_, _112217_slice.get()._field_Elem);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b41774be_makeCallStr(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel>* _113936_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b41713ec_possibleRefExpr(_self_, (*(_113936_m)).get()._field_Len);
	if (((*(_113936_m)).get()._field_Cap != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b41713ec_possibleRefExpr(_self_, (*(_113936_m)).get()._field_Cap);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4177744_makeCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel> _115032_m) {
	if ((_1b305ed36_Slc(_115032_m.get()._field_Kind.ptr()) != nullptr)) {
		_1b4177249_makeCallSlice(_self_, &(_115032_m));
		return;;
	};
	_1b41774be_makeCallStr(_self_, &(_115032_m));
}



inline void _1b41779b9_pushToSlice(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1cb08b344_PushToSliceExprModel> _115835_m) {
	jule::I32 _115913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1b41713ec_possibleRefExpr(_self_, _115835_m.get()._field_Dest);
	jule::Str _116113_dest = _self_.get()._field_oc.get()._field_Obj.slice(_115913_n);;
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1b41a8e7e_write(_self_.get()._field_oc, _116113_dest);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(static_cast<jule::I32>(_115835_m.get()._field_Elems.get()._field_Elems.len())));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_115835_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b771ccb4:;
		if (it != expr_end) {
			jule::Any _116821_e = *it;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _116113_dest);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1b41713ec_possibleRefExpr(_self_, _116821_e);
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1b771ccb4:;
			++it;
			goto _iter_begin_1b771ccb4;
		}
		_iter_end_1b771ccb4:;
	};
}



inline void _1b4177c3e_appendCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6c8e2_BuiltinAppendCallExprModel> _117734_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1b41713ec_possibleRefExpr(_self_, _117734_m.get()._field_Dest);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b41713ec_possibleRefExpr(_self_, _117734_m.get()._field_Elements);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4177eb4_cloneCall(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6be52_BuiltinCloneCallExprModel> _118533_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1b41713ec_possibleRefExpr(_self_, _118533_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b4178239_sizeof(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6d805_SizeofExprModel> _119130_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1b41713ec_possibleRefExpr(_self_, _119130_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b41784ae_alignof(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6d9e2_AlignofExprModel> _119731_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1b41713ec_possibleRefExpr(_self_, _119731_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1b41787bc_runeLit(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6dbce_RuneExprModel> _120327_m) {
	if ((_120327_m.get()._field_Code <= 127LL)) {
		jule::Str _120521_b = _1b417a66a_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_120327_m.get()._field_Code)));;
		if (_120521_b.equal("'", 1)) {
			_120521_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _120521_b) + jule::Str("'", 1));;
	};
	return _1b417b2d6_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_120327_m.get()._field_Code)));;
}



inline void _1b4178a42_structureStatic(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6b0d8_StructStaticIdentExprModel> _121439_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b41826e9_funcIns(&(_121439_m.get()._field_Method)));
}



inline void _1b4178cb7_integratedToStr(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6ddbb_IntegratedToStrExprModel> _121839_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1b41713ec_possibleRefExpr(_self_, _121839_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b417903c_backendEmit(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6e0a8_BackendEmitExprModel> _122435_m) {
	if ((_122435_m.get()._field_Exprs.len() == 0LL)) {
		_1b41a8e7e_write(_self_.get()._field_oc, _122435_m.get()._field_Code);
		return;;
	};
	jule::I32 _122913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _123017_args = jule::Slice<jule::Any>::alloc(_122435_m.get()._field_Exprs.len(), _122435_m.get()._field_Exprs.len());;
	{
		auto expr = &(_122435_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b772873c:;
		if (it != expr_end) {
			jule::I32 _123114_i = it - expr->begin();
			jule::Any _123121_expr = *it;
			{
				_1b41713ec_possibleRefExpr(_self_, _123121_expr);
				_123017_args[_123114_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_122913_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _122913_n);
			}
			_iter_next_1b772873c:;
			++it;
			_123114_i++;
			goto _iter_begin_1b772873c;
		}
		_iter_end_1b772873c:;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, _1b3117a48_Format(_122435_m.get()._field_Code, _123017_args));
}



inline void _1b41792b2_free(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b2e6e295_FreeExprModel> _123928_m) {
	_1b41713ec_possibleRefExpr(_self_, _123928_m.get()._field_Expr);
	if (_20b947043_RC) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1b4179537_mutSlicing(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1cb0d91a5_MutSlicingExprModel> _124834_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41713ec_possibleRefExpr(_self_, _124834_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_20b9476d6_Production))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b4222adb_locInfo(_self_.get()._field_oc, &(_124834_m.get()._field_Token));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b41713ec_possibleRefExpr(_self_, _124834_m.get()._field_Left);
	if ((_124834_m.get()._field_Right != nullptr)) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b41713ec_possibleRefExpr(_self_, _124834_m.get()._field_Right);
	};
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b41797ac_strInsertBegin(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1cb0c1885_StrInsertBeginExprModel> _126538_m) {
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b41713ec_possibleRefExpr(_self_, _126538_m.get()._field_Dest);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1b41713ec_possibleRefExpr(_self_, _126538_m.get()._field_Expr);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1b4179a32_strComp(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1cb139ed6_StrCompExprModel> _127331_m) {
	if (_127331_m.get()._field_NotEq) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _127713_bytes = static_cast<jule::Slice<jule::U8>>(_1b18e1620_ReadStr(_127331_m.get()._field_Right.ptr()));;
	_1b41713ec_possibleRefExpr(_self_, _127331_m.get()._field_Left);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b417ac31_cstrLit(_127713_bytes));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(static_cast<jule::I32>(_127713_bytes.len())));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_127331_m.get()._field_NotEq) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b4179ca7_model(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Any _128929_m) {
	{
		auto &_match_expr{ _128929_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b77377e5:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _128929_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b7737ac0:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _128929_m.cast_ptr<_1b305ba25_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b7737b36:;
			{
				_1b416ea49_constant(_self_, _128929_m.cast_ptr<_1b18de5da_Const>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7737b9c:;
			{
				_1b4170682_var(_self_, _128929_m.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b7737c13:;
			{
				_1b4170907_structureIns(_self_, _128929_m.cast_ptr<_1b2e687bc_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b773872a:;
			{
				_1b4174ee4_funcInsCommon(_self_, _128929_m.cast_ptr<_1b2e71132_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b7738791:;
			{
				_1b4170187_unsafeBinary(_self_, _128929_m.cast_ptr<_1cb0ae653_UnsafeBinopExprModel>(&__jule_any_type131).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b7738807:;
			{
				_1b417040c_binary(_self_, _128929_m.cast_ptr<_1b2e68ed7_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b773886d:;
			{
				_1b4170b7c_unary(_self_, _128929_m.cast_ptr<_1b2e691c4_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b77388d4:;
			{
				_1b4170e02_structureLit(_self_, _128929_m.cast_ptr<_1b2e6959d_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b773894a:;
			{
				_1b4171177_allocStructure(_self_, _128929_m.cast_ptr<_1b2e6978a_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b77389b1:;
			{
				_1b4171672_casting(_self_, _128929_m.cast_ptr<_1b2e69977_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b7738a27:;
			{
				_1b4173014_funcCall(_self_, _128929_m.cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b7738a8d:;
			{
				_1b4173289_slice(_self_, _128929_m.cast_ptr<_1b2e69d51_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b7738b04:;
			{
				_1b4174c6e_array(_self_, _128929_m.cast_ptr<_1b2e6b2c5_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b7738b6a:;
			{
				_1b4173784_unsafeIndexing(_self_, _128929_m.cast_ptr<_1b2c63771_UnsafeIndexingExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b7738bd1:;
			{
				_1b417350e_indexing(_self_, _128929_m.cast_ptr<_1b2e6a03d_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b7738c58:;
			{
				_1b4173a09_anonFunc(_self_, _128929_m.cast_ptr<_1b2e6a22a_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b7738cd0:;
			{
				_1b4173c7e_mapExpr(_self_, _128929_m.cast_ptr<_1b2e6a604_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b7738d57:;
			{
				_1b4174004_slicing(_self_, _128929_m.cast_ptr<_1b2e6a7e1_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b7738dce:;
			{
				_1b4174279_traitSub(_self_, _128929_m.cast_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b7738e56:;
			{
				_1b41744ee_structureSub(_self_, _128929_m.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b7738ecd:;
			{
				_1b4174774_commonIdent(_self_, _128929_m.cast_ptr<_1b2e6b4b2_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b7739055:;
			{
				_1b41749e9_commonSub(_self_, _128929_m.cast_ptr<_1b2e6b69e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b77390cc:;
			{
				_1b41754de_tuple(_self_, _128929_m.cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b7739154:;
			{
				_1b41759d9_outCall(_self_, _128929_m.cast_ptr<_1b2e6ba78_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b77391cb:;
			{
				_1b4175c5e_outlnCall(_self_, _128929_m.cast_ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b7739253:;
			{
				_1b4175764_newCall(_self_, _128929_m.cast_ptr<_1b2e6c13e_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b77392ca:;
			{
				_1b4175ed4_panicCall(_self_, _128929_m.cast_ptr<_1b2e6c32b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b7739352:;
			{
				_1b4176259_assertCall(_self_, _128929_m.cast_ptr<_1b2e6c518_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b77393c9:;
			{
				_1b41764ce_errorCall(_self_, _128929_m.cast_ptr<_1b2e6d618_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b7739451:;
			{
				_1b4177744_makeCall(_self_, _128929_m.cast_ptr<_1b2e6c705_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b77394c8:;
			{
				_1b4177c3e_appendCall(_self_, _128929_m.cast_ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b7739550:;
			{
				_1b4177eb4_cloneCall(_self_, _128929_m.cast_ptr<_1b2e6be52_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b77395c7:;
			{
				_1b4176754_copyCall(_self_, _128929_m.cast_ptr<_1b2e6d42b_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b773964e:;
			{
				_1b41769c9_lenCall(_self_, _128929_m.cast_ptr<_1b2e6cace_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b77396c6:;
			{
				_1b4176c4e_capCall(_self_, _128929_m.cast_ptr<_1b2e6ccbb_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b773974d:;
			{
				_1b4176ec4_deleteCall(_self_, _128929_m.cast_ptr<_1b2e6abba_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b77397c5:;
			{
				_1b4178239_sizeof(_self_, _128929_m.cast_ptr<_1b2e6d805_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b773984c:;
			{
				_1b41784ae_alignof(_self_, _128929_m.cast_ptr<_1b2e6d9e2_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b77398c4:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, _1b41787bc_runeLit(_self_, _128929_m.cast_ptr<_1b2e6dbce_RuneExprModel>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b773994b:;
			{
				_1b4178a42_structureStatic(_self_, _128929_m.cast_ptr<_1b2e6b0d8_StructStaticIdentExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b77399c3:;
			{
				_1b4178cb7_integratedToStr(_self_, _128929_m.cast_ptr<_1b2e6ddbb_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7739a4a:;
			{
				_1b417903c_backendEmit(_self_, _128929_m.cast_ptr<_1b2e6e0a8_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b7739ac2:;
			{
				_1b41792b2_free(_self_, _128929_m.cast_ptr<_1b2e6e295_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b7739b49:;
			{
				_1b4179537_mutSlicing(_self_, _128929_m.cast_ptr<_1cb0d91a5_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b7739bc1:;
			{
				_1b41797ac_strInsertBegin(_self_, _128929_m.cast_ptr<_1cb0c1885_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b7739c48:;
			{
				_1b4179a32_strComp(_self_, _128929_m.cast_ptr<_1cb139ed6_StrCompExprModel>(&__jule_any_type130));
			}
		}
		else {
			_case_begin_1b773796b:;
			{
				_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b773788e:;
	};
}



inline void _1b417a02c_initExpr(jule::Ptr<_1b416d3e9_exprCoder> _self_, jule::Ptr<_1b305ba25_TypeKind> _139232_t) {
	if (_1b305d40b_NilCompatible(_139232_t.ptr())) {
		if ((_1b305e385_Ptr(_139232_t.ptr()) != nullptr)) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1b30664e1_Tuple> _140217_tup = _1b3060a4b_Tup(_139232_t.ptr());;
	if ((_140217_tup != nullptr)) {
		_1b4232ec5_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _140217_tup);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_140217_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b77552d5:;
			if (it != expr_end) {
				jule::I32 _140618_i = it - expr->begin();
				jule::Ptr<_1b305ba25_TypeKind> _140625_tt = *it;
				{
					if ((!(_1b4235901_shouldInitialized(&(_140625_tt))))) {
						goto _iter_next_1b77552d5;
					};
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1b41a8e7e_write(_self_.get()._field_oc, _1b18ce971_Itoa(_140618_i));
					_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1b417a02c_initExpr(_self_, _140625_tt);
					if (((_140217_tup.get()._field_Types.len() - _140618_i) > 1LL)) {
						_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1b77552d5:;
				++it;
				_140618_i++;
				goto _iter_begin_1b77552d5;
			}
			_iter_end_1b77552d5:;
		};
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1b2e82484_Enum> _142117_enm = _1b305e5e9_Enum(_139232_t.ptr());;
	if ((_142117_enm != nullptr)) {
		_1b4179ca7_model(_self_, _142117_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1b3061772_Prim> _142613_prim = _1b305ddac_Prim(_139232_t.ptr());;
	if ((_142613_prim != nullptr)) {
		if (_1b18de0ce_IsNum(_142613_prim.get()._field_Kind)) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1b3064742_IsBool(_142613_prim.ptr())) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1b30649a6_IsStr(_142613_prim.ptr())) {
			_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1b305eac2_Arr(_139232_t.ptr()) != nullptr)) {
		jule::Ptr<_1b3067b0d_Arr> _143821_arr = _1b305eac2_Arr(_139232_t.ptr());;
		_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b417a02c_initExpr(_self_, _143821_arr.get()._field_Elem);
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _144517_s = _1b306030e_Struct(_139232_t.ptr());;
	if ((((_144517_s != nullptr) && _144517_s.get()._field_Decl.get()._field_CppLinked) && (_1b42352c4_findDirective(&(_144517_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422dda0_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b416d3e9_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b417c7c1_deriveCoder> static__1b417cbab_new(jule::Ptr<_1b42224e2_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1b417c7c1_deriveCoder>(_1b417c7c1_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1b417ceb9_cloneFuncDecl(_1b417c7c1_deriveCoder* _self_, jule::Ptr<_1b2e683e3_Struct>* _1633_s) {
	jule::Str _1717_obj = _1b422c112_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1b417d2c7_cloneFuncDef(_1b417c7c1_deriveCoder* _self_, jule::Ptr<_1b2e683e3_Struct>* _2232_s) {
	jule::Str _2317_obj = _1b422c112_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b417c7c1_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b417e1a7_TestCoder> static__1b417e62a_New(jule::Ptr<_1b42224e2_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1b417e1a7_TestCoder>(_1b417e1a7_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1b2eab755_ImportInfo> _1b417e88e_findTestingPackage(jule::Ptr<_1b417e1a7_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7763ed6:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1b7763ed6:;
			++it;
			goto _iter_begin_1b7763ed6;
		}
		_iter_end_1b7763ed6:;
	};
	return nullptr;;
}



inline void _1b417eb14_appendTest(jule::Ptr<_1b417e1a7_TestCoder> _self_, jule::Ptr<_1b2e71132_FnIns> _4334_f) {
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41802c9_callTmReset(_self_);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b417ac31_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b41826e9_funcIns(&(_4334_f)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1b417ed89_appendPackageTests(jule::Ptr<_1b417e1a7_TestCoder> _self_, jule::Ptr<_1b2eae6ae_Package>* _6043_p) {
	{
		auto expr = &((*(_6043_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77696b2:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _6121_file = *it;
			{
				{
					auto expr = &(_6121_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7769eed:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _6225_f = *it;
						{
							if (_1b4235659_hasDirective(&(_6225_f.get()._field_Directives), jule::Str("test", 4))) {
								_1b417eb14_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1b7769eed:;
						++it;
						goto _iter_begin_1b7769eed;
					}
					_iter_end_1b7769eed:;
				};
			}
			_iter_next_1b77696b2:;
			++it;
			goto _iter_begin_1b77696b2;
		}
		_iter_end_1b77696b2:;
	};
}



inline jule::Bool _1b41800ed_readyTestingPackage(jule::Ptr<_1b417e1a7_TestCoder> _self_) {
	jule::Ptr<_1b2eab755_ImportInfo> _7117_p = _1b417e88e_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1b2eacb96_FindStruct(_7117_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1b2e43478_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1b2e43478_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1b2e43478_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1b41802c9_callTmReset(jule::Ptr<_1b417e1a7_TestCoder> _self_) {
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4182452_func(&(_self_.get()._field_tmReset)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b41804a5_callTmFailed(jule::Ptr<_1b417e1a7_TestCoder> _self_) {
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4182452_func(&(_self_.get()._field_tmFailed)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b4180681_callTmSkipped(jule::Ptr<_1b417e1a7_TestCoder> _self_) {
	_1b41a8e7e_write(_self_.get()._field_oc, static__1b4182452_func(&(_self_.get()._field_tmSkipped)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b418085c_Serialize(jule::Ptr<_1b417e1a7_TestCoder> _self_) {
	_1b4226a68_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1b422688c_end(_self_.get()._field_oc);
	});;
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	if ((!(_1b41800ed_readyTestingPackage(_self_)))) {
		_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1b41e8672_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1b41a8e7e_write(_self_.get()._field_oc, _1b4229c69_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1b422c420_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1b41a8e7e_write(_self_.get()._field_oc, _1b422c420_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1b41e8155_addIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1b41804a5_callTmFailed(_self_);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1b4180681_callTmSkipped(_self_);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1b417ed89_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1b41e8672_doneIndent(_self_.get()._field_oc);
	_1b41ebbc5_indent(_self_.get()._field_oc);
	_1b41a8e7e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b417e1a7_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1b4181cc0_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1b41821aa_toLocal(jule::I32 _5423_row, jule::I32 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1b18ce971_Itoa(_5423_row);
	_5517_obj+=_1b18ce971_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1b4182452_func(jule::Ptr<_1b2e6e85b_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_1b778748d:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1b7787504:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1b2e3d75e_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1b7786899:;
			{
				jule::Str _7221_obj = static__1b4181cc0_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1b7786833:;
			{
				return static__1b4181cc0_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1b7786789:;
	};
}



inline jule::Str static__1b41826e9_funcIns(jule::Ptr<_1b2e71132_FnIns>* _8424_f) {
	if (_1b2e724b8_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1b4182452_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1b4181cc0_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1b4182991_traitDecl(jule::Ptr<_1b2e8033e_Trait> _9525_t) {
	if (_1b2e80dab_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1b4181cc0_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1b4182c38_param(jule::Ptr<_1b2e6e66e_Param>* _10322_p) {
	if ((_1cb18b598_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _1cb18b301_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1b2e2cc8c_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1b41821aa_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1b41821aa_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1b4182ed0_structure(jule::Ptr<_1b2e683e3_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_1b4235659_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1b4181cc0_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1b4183277_structureIns(jule::Ptr<_1b2e687bc_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1b4182ed0_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1b4181cc0_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1b418351e_field(jule::Ptr<_1b2e3becc_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1b41837b6_var(jule::Ptr<_1b2ed8034_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1b779208b:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1b7791420:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1b7791486:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1b77914ec:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1b7791563:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1b18ce971_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1b77917e9:;
			{
				return static__1b41821aa_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1b77913a9:;
			{
				return static__1b4181cc0_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1b7790cb0:;
	};
}



inline jule::Str static__1b4183a5d_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1b4183d05_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1b418409c_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1b4184344_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1b41845db_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1b4184883_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b41816e8_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b41b4099_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b41895ad_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b422832d_Str(_1b4228075_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1b422863b_Equal(jule::Ptr<_1b4228075_customType> _self_, jule::Ptr<_1b305ba25_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4228075_customType _Src) {
	_Stream << _1b422832d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b42289e3_typeCoder> static__1b4229032_new(jule::Ptr<_1b42224e2_ObjectCoder>* _6224_oc) {
	jule::Ptr<_1b42289e3_typeCoder> _6317_tc = jule::new_ptr<_1b42289e3_typeCoder>(_1b42289e3_typeCoder{._field_oc=(*(_6224_oc)), });;
	_6317_tc.get()._field_rc=static__1b42317dc_new(&(_6317_tc));
	return _6317_tc;;
}



inline jule::Str _1b4229340_toType(_1b42289e3_typeCoder* _self_, jule::Str _6929_id) {
	if ((!_6929_id.equal("uintptr", 7))) {
		_6929_id=_1b18d1973_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _1b422964d_prim(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b3061772_Prim> _8023_p) {
	return _1b4229340_toType(_self_, _1b3061ad5_Str(_8023_p.ptr()));;
}



inline jule::Str _1b422995b_tuple(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b30664e1_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8528_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64b5101:;
		if (it != expr_end) {
			jule::Ptr<_1b305ba25_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_1b422dda0_kind(_self_, _8721_tk);
				(_8617_obj).append(",", 1);
			}
			_iter_next_1b64b5101:;
			++it;
			goto _iter_begin_1b64b5101;
		}
		_iter_end_1b64b5101:;
	};
	(_8617_obj).mut_slice(0LL, (_8617_obj.len() - 1LL));;
	(_8617_obj).append(">", 1);
	return _8617_obj;;
}



inline jule::Str _1b4229c69_asSptr(_1b42289e3_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	(_9817_obj).append(">", 1);
	return _9817_obj;;
}



inline jule::Str _1b422a077_asPtr(_1b42289e3_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _1b422a385_sptr(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b3065006_Sptr> _11027_sptr) {
	return _1b4229c69_asSptr(_self_, _1b422dda0_kind(_self_, _11027_sptr.get()._field_Elem));;
}



inline jule::Str _1b422a693_ptr(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b306856a_Ptr> _11526_p) {
	;
	if (_1b306903d_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _1b422dda0_kind(_self_, _11526_p.get()._field_Elem);;
	(_12017_elem).append("*", 1);
	return _12017_elem;;
}



inline jule::Str _1b422a9a1_enumDecl(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e82484_Enum> _12631_e) {
	return _1b422dda0_kind(_self_, _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1b422acae_typeEnumDecl(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e83a7e_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1b422b0bc_asSlice(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b305ba25_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_1b422dda0_kind(_self_, _13530_elem);
	(_13617_obj).append(">", 1);
	return _13617_obj;;
}



inline jule::Str _1b422b3ca_slice(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b3065963_Slc> _14328_s) {
	return _1b422b0bc_asSlice(_self_, _14328_s.get()._field_Elem);;
}



inline jule::Str _1b422b6d8_mapType(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b3067019_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_1b422dda0_kind(_self_, _14830_m.get()._field_Key);
	(_14917_obj).append(",", 1);
	_14917_obj+=_1b422dda0_kind(_self_, _14830_m.get()._field_Val);
	(_14917_obj).append(">", 1);
	return _14917_obj;;
}



inline jule::Str _1b422b9e6_traitIdent(_1b42289e3_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	(_15817_obj).append(">", 1);
	return _15817_obj;;
}



inline jule::Str _1b422bd04_traitDecl(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e8033e_Trait> _16528_t) {
	return _1b422b9e6_traitIdent(_self_, static__1b4182991_traitDecl(_16528_t));;
}



inline jule::Str _1b422c112_structure(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e683e3_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_1b4235659_hasDirective(&(_17028_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17117_rep).append("struct ", 7);
	};
	_17117_rep+=static__1b4182ed0_structure(&(_17028_s));
	return _17117_rep;;
}



inline jule::Str _1b422c420_structureIns(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e687bc_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__1b4183277_structureIns(&(_18035_s));;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			(_18221_ident).append("<", 1);
			{
				auto expr = &(_18035_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b64c156e:;
				if (it != expr_end) {
					jule::Ptr<_1b305a2e8_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_1b422dda0_kind(_self_, _18529_g.get()._field_Kind);
						(_18221_ident).append(",", 1);
					}
					_iter_next_1b64c156e:;
					++it;
					goto _iter_begin_1b64c156e;
				}
				_iter_end_1b64c156e:;
			};
			(_18221_ident).mut_slice(0LL, (_18221_ident.len() - 1LL));;
			(_18221_ident).append(">", 1);
		};
		jule::Ptr<_1b2e184d6_Directive> _19217_d = _1b42352c4_findDirective(&(_18035_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_1b4227393_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__1b4183277_structureIns(&(_18035_s));;
}



inline jule::Str _1b422c72d_array(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b3067b0d_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_1b422dda0_kind(_self_, _20228_a.get()._field_Elem);
	(_20317_obj).append(",", 1);
	_20317_obj+=_1b18ce971_Itoa(_20228_a.get()._field_N);
	(_20317_obj).append(">", 1);
	return _20317_obj;;
}



inline jule::Str _1b422cd49_paramIns(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e70263_ParamIns>* _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if ((*(_22832_p)).get()._field_Decl.get()._field_Variadic) {
		(_22917_obj).append("jule::Slice<", 12);
		_22917_obj+=_1b422dda0_kind(_self_, (*(_22832_p)).get()._field_Kind);
		(_22917_obj).append(">", 1);
	} else {
		_22917_obj+=_1b422dda0_kind(_self_, (*(_22832_p)).get()._field_Kind);
	};
	if ((*(_22832_p)).get()._field_Decl.get()._field_Reference) {
		(_22917_obj).append("*", 1);
	};
	return _22917_obj;;
}



inline void _1b422d476_funcInsResult(_1b42289e3_typeCoder* _self_, jule::Str* _25837_s, jule::Ptr<_1b2e71132_FnIns>* _25850_f) {
	if (_1b2e1e102_IsVoid((*(_25850_f)).get()._field_Decl.ptr())) {
		if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25837_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25837_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25837_s))).append("jule::Exceptional<", 18);
		_1b4233613_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
		((*(_25837_s))).append(">", 1);
		return;;
	};
	_1b4233613_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
}



inline jule::Str _1b422d784_anonFunc(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e71132_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_1b3060a4b_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_1b41ac7ac_pushResultIns((*(_self_))._field_oc, &(_27631_f));
	};
	jule::Str _28017_decl = jule::Str();;
	_1b422d476_funcInsResult(_self_, &(_28017_decl), &(_27631_f));
	(_28017_decl).append("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27631_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b64d068d:;
			if (it != expr_end) {
				jule::Ptr<_1b2e70263_ParamIns> _28425_param = *it;
				{
					if (_1b2e2cc8c_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_1b64d068d;
					};
					_28017_decl+=_1b422cd49_paramIns(_self_, &(_28425_param));
					(_28017_decl).append(",", 1);
				}
				_iter_next_1b64d068d:;
				++it;
				goto _iter_begin_1b64d068d;
			}
			_iter_end_1b64d068d:;
		};
		(_28017_decl).mut_slice(0LL, (_28017_decl.len() - 1LL));;
	} else {
		(_28017_decl).append("void", 4);
	};
	(_28017_decl).append(")", 1);
	return _28017_decl;;
}



inline jule::Str _1b422da92_func(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b2e71132_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_1b422d784_anonFunc(_self_, _30027_f);
	(_30117_obj).append(">", 1);
	return _30117_obj;;
}



inline jule::Str _1b422dda0_kind(_1b42289e3_typeCoder* _self_, jule::Ptr<_1b305ba25_TypeKind> _30827_k) {
	{
		
		if ((_1b306030e_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3839:;
			{
				return _1b422c420_structureIns(_self_, _1b306030e_Struct(_30827_k.ptr()));;
			}
		}
		else if (_1b305c6e6_CppLinked(_30827_k.ptr())) {
			_case_begin_1b64d38b1:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_1b305ddac_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3938:;
			{
				return _1b422964d_prim(_self_, _1b305ddac_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_1b3060a4b_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d39b0:;
			{
				return _1b422995b_tuple(_self_, _1b3060a4b_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_1b305e121_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3a37:;
			{
				return _1b422a385_sptr(_self_, _1b305e121_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_1b305e385_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3aae:;
			{
				return _1b422a693_ptr(_self_, _1b305e385_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_1b305e5e9_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3b36:;
			{
				return _1b422a9a1_enumDecl(_self_, _1b305e5e9_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_1b305e85d_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3bad:;
			{
				return _1b422acae_typeEnumDecl(_self_, _1b305e85d_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_1b305ed36_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3c35:;
			{
				return _1b422b3ca_slice(_self_, _1b305ed36_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_1b30607d7_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3cac:;
			{
				return _1b422b6d8_mapType(_self_, _1b30607d7_Map(_30827_k.ptr()));;
			}
		}
		else if ((_1b3060573_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3d34:;
			{
				return _1b422bd04_traitDecl(_self_, _1b3060573_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_1b305eac2_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3dab:;
			{
				return _1b422c72d_array(_self_, _1b305eac2_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_1b306009a_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_1b64d3e33:;
			{
				return _1b422da92_func(_self_, _1b306009a_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_1b64d365d:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1b64d3edd:;
			{
				return _30827_k.get()._field_Kind.cast_ptr<_1b4228075_customType>(13).get()._field_kind;;
			}
		}
		else {
			_case_begin_1b64db105:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1b64dab1b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b42289e3_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b42312d1_resultCoder> static__1b42317dc_new(jule::Ptr<_1b42289e3_typeCoder>* _36224_tc) {
	return jule::new_ptr<_1b42312d1_resultCoder>(_1b42312d1_resultCoder{._field_tc=(*(_36224_tc))});;
}



inline void _1b4231b0b_ptr(_1b42312d1_resultCoder* _self_, jule::Str* _36627_s, jule::Ptr<_1b306856a_Ptr> _36639_p) {
	((*(_36627_s))).append("p", 1);
	_1b42332e4_codeMut(_self_, _36627_s, &(_36639_p.get()._field_Elem));
}



inline void _1b4231e2a_sptr(_1b42312d1_resultCoder* _self_, jule::Str* _37128_s, jule::Ptr<_1b3065006_Sptr> _37140_p) {
	((*(_37128_s))).append("x", 1);
	_1b42332e4_codeMut(_self_, _37128_s, &(_37140_p.get()._field_Elem));
}



inline void _1b4232249_mapType(_1b42312d1_resultCoder* _self_, jule::Str* _37631_s, jule::Ptr<_1b3067019_Map> _37643_p) {
	((*(_37631_s))).append("m", 1);
	_1b42332e4_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Key));
	_1b42332e4_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Val));
}



inline void _1b4232568_slice(_1b42312d1_resultCoder* _self_, jule::Str* _38229_s, jule::Ptr<_1b3065963_Slc> _38241_slc) {
	((*(_38229_s))).append("s", 1);
	_1b42332e4_codeMut(_self_, _38229_s, &(_38241_slc.get()._field_Elem));
}



inline void _1b4232887_arr(_1b42312d1_resultCoder* _self_, jule::Str* _38727_s, jule::Ptr<_1b3067b0d_Arr> _38739_arr) {
	((*(_38727_s))).append("a", 1);
	(*(_38727_s))+=_1b18ce6c9_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)), 16LL);
	_1b42332e4_codeMut(_self_, _38727_s, &(_38739_arr.get()._field_Elem));
}



inline void _1b4232ba6_func(_1b42312d1_resultCoder* _self_, jule::Str* _39328_s, jule::Ptr<_1b2e71132_FnIns> _39340_f) {
	((*(_39328_s))).append("f", 1);
	{
		auto expr = &(_39340_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64e23b4:;
		if (it != expr_end) {
			jule::Ptr<_1b2e70263_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					((*(_39328_s))).append("r", 1);
				};
				_1b42332e4_codeMut(_self_, _39328_s, &(_39521_p.get()._field_Kind));
			}
			_iter_next_1b64e23b4:;
			++it;
			goto _iter_begin_1b64e23b4;
		}
		_iter_end_1b64e23b4:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_1b42332e4_codeMut(_self_, _39328_s, &(_39340_f.get()._field_Result));
	};
}



inline void _1b4232ec5_tup(_1b42312d1_resultCoder* _self_, jule::Str* _40627_s, jule::Ptr<_1b30664e1_Tuple> _40639_tup) {
	{
		auto expr = &(_40639_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64e400e:;
		if (it != expr_end) {
			jule::Ptr<_1b305ba25_TypeKind> _40721_t = *it;
			{
				((*(_40627_s))).append("__jule_tuple_", 13);
				_1b42332e4_codeMut(_self_, _40627_s, &(_40721_t));
			}
			_iter_next_1b64e400e:;
			++it;
			goto _iter_begin_1b64e400e;
		}
		_iter_end_1b64e400e:;
	};
}



inline void _1b42332e4_codeMut(_1b42312d1_resultCoder* _self_, jule::Str* _41331_s, jule::Ptr<_1b305ba25_TypeKind>* _41344_t) {
	{
		auto &_match_expr{ (*(_41344_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1b64e5142:;
			{
				_1b4231b0b_ptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b306856a_Ptr>(12));
			}
		}
		else if (_match_expr.type_is(true, 7)) {
			_case_begin_1b64e53ea:;
			{
				_1b4231e2a_sptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b3065006_Sptr>(7));
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_1b64e5461:;
			{
				_1b4232249_mapType(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b3067019_Map>(10));
			}
		}
		else if (_match_expr.type_is(true, 8)) {
			_case_begin_1b64e54c7:;
			{
				_1b4232568_slice(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b3065963_Slc>(8));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_1b64e553d:;
			{
				_1b4232887_arr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b3067b0d_Arr>(11));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b64e5ac1:;
			{
				_1b4232ba6_func(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b2e71132_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b64e5b37:;
			{
				jule::Ptr<_1b2e82484_Enum> _42817_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_1b2e82484_Enum>(3);;
				(*(_41331_s))+=static__1b4181cc0_toOut(&(_42817_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b64e5b9d:;
			{
				jule::Ptr<_1b2e83a7e_TypeEnum> _43117_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_1b2e83a7e_TypeEnum>(4);;
				(*(_41331_s))+=static__1b4181cc0_toOut(&(_43117_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b64e5c14:;
			{
				jule::Ptr<_1b2e687bc_StructIns> _43421_si = (*(_41344_t)).get()._field_Kind.cast_ptr<_1b2e687bc_StructIns>(0);;
				(*(_41331_s))+=static__1b4183277_structureIns(&(_43421_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b64e5c7a:;
			{
				jule::Ptr<_1b2e8033e_Trait> _43721_trt = (*(_41344_t)).get()._field_Kind.cast_ptr<_1b2e8033e_Trait>(2);;
				(*(_41331_s))+=static__1b4182991_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is(true, 6)) {
			_case_begin_1b64e5ce1:;
			{
				(*(_41331_s))+=(*(_41344_t)).get()._field_Kind.cast_ptr<_1b3061772_Prim>(6).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 9)) {
			_case_begin_1b64e5d57:;
			{
				_1b4232ec5_tup(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1b30664e1_Tuple>(9));
			}
		}
		else {
			_case_begin_1b64e5373:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_1b64e51ca:;
	};
}



inline void _1b4233613_codeMut1(_1b42312d1_resultCoder* _self_, jule::Str* _44832_s, jule::Ptr<_1b305ba25_TypeKind>* _44845_t) {
	jule::Ptr<_1b30664e1_Tuple> _44917_tup = _1b3060a4b_Tup((*(_44845_t)).ptr());;
	if ((_44917_tup != nullptr)) {
		_1b4232ec5_tup(_self_, _44832_s, _44917_tup);
	} else {
		(*(_44832_s))+=_1b422dda0_kind((*(_self_))._field_tc.ptr(), (*(_44845_t)));
	};
}



inline jule::Str _1b42338dd_code(_1b42312d1_resultCoder* _self_, jule::Ptr<_1b305ba25_TypeKind>* _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_1b42332e4_codeMut(_self_, &(_45817_s), _45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b42312d1_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6500c85_Name(_1b6500999_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b6500db7_What(_1b6500999_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b6500ee9_Reset(_1b6500999_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b650113c_Short(_1b6500999_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6500999_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b6504195_Name(_1b6504607_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b65048e3_What(_1b6504607_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b6504a25_Reset(_1b6504607_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b6504b57_Short(_1b6504607_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6504607_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b650795c_Name(_1b6507dbe_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b65081aa_What(_1b6507dbe_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b65082dc_Reset(_1b6507dbe_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b650841e_Short(_1b6507dbe_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6507dbe_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b650b268_Name(_1b650b6ca_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b650b9b6_What(_1b650b6ca_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b650bae8_Reset(_1b650b6ca_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b650bc2a_Short(_1b650b6ca_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b650b6ca_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b650ea30_Name(_1b650ee92_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b651027d_What(_1b650ee92_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b65103b0_Reset(_1b650ee92_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b65104e2_Short(_1b650ee92_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b650ee92_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b425b97c_FlagSet> static__1b425bc68_New(void) {
	return jule::new_ptr<_1b425b97c_FlagSet>(_1b425b97c_FlagSet{._field_flags=jule::Slice<jule::Trait<_1b3a75c69_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1b3a75c69_CommonFlag> _1b425c1ec_FindFlag(_1b425b97c_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b651a277:;
		if (it != expr_end) {
			jule::Trait<_1b3a75c69_CommonFlag> _7221_flag = *it;
			{
				if ((_1b3a75c69_CommonFlag_mptr_data[(_7221_flag).type_offset]._1b425a0eb_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1b651a277:;
			++it;
			goto _iter_begin_1b651a277;
		}
		_iter_end_1b651a277:;
	};
	return nullptr;;
}



inline jule::Trait<_1b3a75c69_CommonFlag> _1b425c50a_FindFlagShort(_1b425b97c_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b651a8a4:;
		if (it != expr_end) {
			jule::Trait<_1b3a75c69_CommonFlag> _8221_flag = *it;
			{
				if ((_1b3a75c69_CommonFlag_mptr_data[(_8221_flag).type_offset]._1b425a22d_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1b651a8a4:;
			++it;
			goto _iter_begin_1b651a8a4;
		}
		_iter_end_1b651a8a4:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1b3a75c69_CommonFlag>> _1b425c76e_Flags(_1b425b97c_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b425ca7c_Parse(_1b425b97c_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1b425e155_argParser _11617_ap = _1b425e155_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1b4260541_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1b425cc58_Reset(_1b425b97c_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b651c664:;
		if (it != expr_end) {
			jule::Trait<_1b3a75c69_CommonFlag> _12616_f = *it;
			{
				_1b3a75c69_CommonFlag_mptr_data[(_12616_f).type_offset]._1b425a492_Reset(_12616_f);
			}
			_iter_next_1b651c664:;
			++it;
			goto _iter_begin_1b651c664;
		}
		_iter_end_1b651c664:;
	};
}



inline jule::Ptr<_1b650ee92_Flag> _1b6582982_addFlagCommon(_1b425b97c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b65840c1:;
			{
				goto _match_end_1b658406b;
			}
		}
		_match_end_1b658406b:;
	};
	if ((_1b425c1ec_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b425c50a_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b650ee92_Flag> _14817_flag = jule::new_ptr<_1b650ee92_Flag>(_1b650ee92_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1b3a75c69_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1b650b6ca_Flag> _1b658b2c6_addFlagCommon(_1b425b97c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b658c8b0:;
			{
				goto _match_end_1b658c816;
			}
		}
		_match_end_1b658c816:;
	};
	if ((_1b425c1ec_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b425c50a_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b650b6ca_Flag> _14817_flag = jule::new_ptr<_1b650b6ca_Flag>(_1b650b6ca_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1b3a75c69_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1b6580919_AddVar(_1b425b97c_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b650ee92_Flag> _17617_flag = _1b6582982_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1b6589291_AddVar(_1b425b97c_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b650b6ca_Flag> _17617_flag = _1b658b2c6_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1b425b97c_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1b65232b3_parseInteger(_1b425e155_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b6525e42:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1cab6e6db_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b65263a4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cab6e6db_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b652654c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cab6e6db_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b6526294:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b6525b12:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b6525a9b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b65259d0:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b652b387_parseInteger(_1b425e155_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b652dec2:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1cab6e6db_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b652e434:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cab6e6db_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b652e5cc:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1cab6e6db_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b652e324:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b652db92:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b652db2b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b652da60:;
	};
	return __jule_func_result;;
}



inline jule::Str _1b425e94c_getData(_1b425e155_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1b425eb8e_processFlag(_1b425e155_argParser* _self_, jule::Trait<_1b3a75c69_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b6520546:;
			{
				jule::Ptr<_1b650b6ca_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1b650b6ca_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1b65204d0:;
	};
	jule::Str _22513_data = _1b425e94c_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b3a75c69_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b425a0eb_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b6521a97:;
			{
				jule::Ptr<_1b6500999_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1b6500999_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b65232b3_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23370_s, jule::I32 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1b18bdd5b_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b3a75c69_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b425a0eb_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b6522559:;
			{
				jule::Ptr<_1b6504607_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1b6504607_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b652b387_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24171_s, jule::I32 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1b18bd8e9_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b3a75c69_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b425a0eb_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b65225c0:;
			{
				jule::Ptr<_1b6507dbe_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1b6507dbe_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1b18c534b_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b3a75c69_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b425a0eb_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b6522636:;
			{
				(*((*(_21735_flag)).cast_ptr<_1b650ee92_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1b65224e3:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b425ee14_singleDash(_1b425e155_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b653666c:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1b3a75c69_CommonFlag> _26321_flag = _1b425c50a_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1b425eb8e_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b653666c:;
			++it;
			goto _iter_begin_1b653666c;
		}
		_iter_end_1b653666c:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b4260189_doubleDash(_1b425e155_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1b3a75c69_CommonFlag> _27617_flag = _1b425c1ec_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1b425eb8e_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b4260365_tryArg(_1b425e155_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1b4260189_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1b425ee14_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b4260541_parse(_1b425e155_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1b4260365_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b653c0bd:;
	}
	_iter_end_1b653c0bd:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1b425e155_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b42224e2_ObjectCoder> static__1b4188a96_New(jule::Ptr<_1b345d553_IR>* _8624_ir, _1b41b4099_SerializationInfo _8633_info) {
	jule::Ptr<_1b42224e2_ObjectCoder> _8717_oc = jule::new_ptr<_1b42224e2_ObjectCoder>(_1b42224e2_ObjectCoder{._field_ir=(*(_8624_ir)), ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__1b416d7e5_new(&(_8717_oc));
	_8717_oc.get()._field_sc=static__1b41655de_new(&(_8717_oc));
	_8717_oc.get()._field_tc=static__1b4229032_new(&(_8717_oc));
	_8717_oc.get()._field_dc=static__1b417cbab_new(_8717_oc);
	return _8717_oc;;
}



inline void _1b41a8e7e_write(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _1b41e8155_addIndent(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1b41e8672_doneIndent(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1b41ebbc5_indent(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I32 _1b4202ba9_findAnyType(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b305ba25_TypeKind>* _11736_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77a1595:;
		if (it != expr_end) {
			jule::I32 _11814_i = it - expr->begin();
			jule::Ptr<_1b305ba25_TypeKind> _11821_at = *it;
			{
				if (_1b305c22e_Equal(_11821_at, (*(_11736_t)))) {
					return _11814_i;;
				};
			}
			_iter_next_1b77a1595:;
			++it;
			_11814_i++;
			goto _iter_begin_1b77a1595;
		}
		_iter_end_1b77a1595:;
	};
	return -1LL;;
}



inline jule::I32 _1b41ad57c_pushAnyType(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b305ba25_TypeKind>* _12636_t) {
	jule::I32 _12717_i = _1b4202ba9_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I32>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push((*(_12636_t)));;
	jule::Str _13313_si = _1b18ce971_Itoa(_12717_i);;
	if ((_1b305e121_Sptr((*(_12636_t)).ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _1b422dda0_kind(_self_.get()._field_tc.ptr(), _1b305e121_Sptr((*(_12636_t)).ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _1b4229c69_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _1b305ce33_Comparable((*(_12636_t)).ptr());;
		jule::Str _16317_kind = _1b422dda0_kind(_self_.get()._field_tc.ptr(), (*(_12636_t)));;
		if (_16317_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1b305be21_Str((*(_12636_t)).ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1b305e385_Ptr((*(_12636_t)).ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_16317_kind;
		} else {
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_16217_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_16217_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _1b41ac7ac_pushResultIns(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e71132_FnIns>* _23138_f) {
	jule::Str _23213_s = _1b42338dd_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_23138_f)).get()._field_Result));;
	jule::Bool _23317_ok = false;;
	_self_.get()._field_resultMap.lookup(_23213_s, nullptr, &(_23317_ok));
	if (_23317_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_23213_s]=false;
	jule::Str _23817_obj = jule::Str::alloc(0LL, 128LL);;
	(_23817_obj).append("struct ", 7);
	_23817_obj+=_23213_s;
	(_23817_obj).append(" {\n", 3);
	{
		auto expr = &(_1b3060a4b_Tup((*(_23138_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77b5026:;
		if (it != expr_end) {
			jule::I32 _24214_i = it - expr->begin();
			jule::Ptr<_1b305ba25_TypeKind> _24221_t = *it;
			{
				(_23817_obj).append("\t", 1);
				_23817_obj+=_1b422dda0_kind(_self_.get()._field_tc.ptr(), _24221_t);
				(_23817_obj).append(" ", 1);
				(_23817_obj).append("__jule_result_arg", 17);
				_23817_obj+=_1b18ce971_Itoa(_24214_i);
				(_23817_obj).append(";\n", 2);
			}
			_iter_next_1b77b5026:;
			++it;
			_24214_i++;
			goto _iter_begin_1b77b5026;
		}
		_iter_end_1b77b5026:;
	};
	(_23817_obj).append("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23817_obj);;
}



inline void _1b41ea61e_pushResult(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e6e85b_Fn>* _25435_f) {
	if ((_1b2e1e102_IsVoid((*(_25435_f)).ptr()) || ((*(_25435_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _25817_n = (*(_25435_f)).get()._field_Instances.len();;
	if (((*(_25435_f)).get()._field_Generics.len() == 0LL)) {
		_25817_n=1LL;
	};
	{
		auto expr = (*(_25435_f)).get()._field_Instances.slice(0LL, _25817_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b77b8975:;
		if (it != expr_end) {
			jule::Ptr<_1b2e71132_FnIns> _26221_ins = *it;
			{
				_1b41ac7ac_pushResultIns(_self_, &(_26221_ins));
			}
			_iter_next_1b77b8975:;
			++it;
			goto _iter_begin_1b77b8975;
		}
		_iter_end_1b77b8975:;
	};
}



inline jule::I32 _1b4189316_findTypeOffset(_1b42224e2_ObjectCoder* _self_, jule::Ptr<_1b2e8033e_Trait> _26729_t, jule::Ptr<_1b305ba25_TypeKind> _26744_k) {
	if ((_26729_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1b2e687bc_StructIns> _27117_s = nullptr;;
	if ((_1b305e121_Sptr(_26744_k.ptr()) != nullptr)) {
		_26744_k=_1b305e121_Sptr(_26744_k.ptr()).get()._field_Elem;
	};
	if ((_1b306030e_Struct(_26744_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_27117_s=_1b306030e_Struct(_26744_k.ptr());
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77bb648:;
		if (it != expr_end) {
			jule::Ptr<_1b41895ad_traitHash> *_27916_hash = it;
			{
				if ((((*(_27916_hash)).get()._field_t == _26729_t) && ((*(_27916_hash)).get()._field_s == _27117_s))) {
					return (*(_27916_hash)).get()._field_i;;
				};
			}
			_iter_next_1b77bb648:;
			++it;
			goto _iter_begin_1b77bb648;
		}
		_iter_end_1b77bb648:;
	};
	return -1LL;;
}



inline void _1b4222adb_locInfo(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1cb188a5c_Token>* _28828_t) {
	jule::Str *_28914_loc = &((*(_28828_t)).get()._field_File.get()._field_Path);;
	if (_20b9476d6_Production) {
		{
			
			if (_1cab6e6db_HasPrefix((*(_28914_loc)), _1cac17344_PathStdlib)) {
				_case_begin_1b77be074:;
				{
					_1b41a8e7e_write(_self_, _1b417a912_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)).slice((_1cab797b2_Dir(_1cac17344_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1cab6e6db_HasPrefix((*(_28914_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1b77bd969:;
				{
					_1b41a8e7e_write(_self_, _1b417a912_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)).slice((_1cab797b2_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1b77bd5c3:;
				{
					_1b41a8e7e_write(_self_, _1b417a912_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)))));
				}
			}
			_match_end_1b77bd507:;
		};
	} else {
		_1b41a8e7e_write(_self_, _1b417a912_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)))));
	};
	_1b41a8e7e_write(_self_, jule::Str(":", 1));
	_1b41a8e7e_write(_self_, _1b18ce971_Itoa((*(_28828_t)).get()._field_Row));
	_1b41a8e7e_write(_self_, jule::Str(":", 1));
	_1b41a8e7e_write(_self_, _1b18ce971_Itoa((*(_28828_t)).get()._field_Column));
}



inline void _1b4222c1d_head(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b421a6c7_Time _31513_time = static__1b421ac6b_Now();;
	_1b421a034_AbsTime _31613_abs = _1b421c3aa_Abs(&_31513_time);;
	_1b41a8e7e_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1b41a8e7e_write(_self_, jule::Str("// JuleC version: ", 18));
	_1b41a8e7e_write(_self_, jule::Str("jule0.0.13 @master", 18));
	_1b41a8e7e_write(_self_, jule::Str("\n", 1));
	_1b41a8e7e_write(_self_, jule::Str("// Date: ", 9));
	_1b41a8e7e_write(_self_, _1b18ce344_FmtUint(_31613_abs._field_Day, 10LL));
	_1b41a8e7e_write(_self_, jule::Str("/", 1));
	_1b41a8e7e_write(_self_, _1b18ce344_FmtUint(_31613_abs._field_Month, 10LL));
	_1b41a8e7e_write(_self_, jule::Str("/", 1));
	_1b41a8e7e_write(_self_, _1b18ce344_FmtUint(_31613_abs._field_Year, 10LL));
	_1b41a8e7e_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1b41a8e7e_write(_self_, _self_.get()._field_info._field_Compiler);
	_1b41a8e7e_write(_self_, jule::Str(" ", 1));
	_1b41a8e7e_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	if (_20b9476d6_Production) {
		_1b41a8e7e_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_20b947043_RC))) {
		_1b41a8e7e_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20b94741c_Safety))) {
		_1b41a8e7e_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1b4222d50_links(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n\n#include \"", 12));
	_1b41a8e7e_write(_self_, _1cac37dd1_PathApi);
	_1b41a8e7e_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1b4222d50_links(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77c94ad:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _35316_used = *it;
			{
				{
					
					if ((!(_35316_used.get()._field_CppLinked))) {
						_case_begin_1b77c9ee7:;
						{
							goto _iter_next_1b77c94ad;
						}
					}
					else if (_1cabeec11_IsStdHeaderPath(_35316_used.get()._field_Path)) {
						_case_begin_1b77ca06e:;
						{
							_1b41a8e7e_write(_self_, jule::Str("#include ", 9));
							_1b41a8e7e_write(_self_, _35316_used.get()._field_Path);
							_1b41a8e7e_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1cabeee31_IsValidHeaderExt(_1cab78dee_Ext(_35316_used.get()._field_Path))) {
						_case_begin_1b77ca0e6:;
						{
							_1b41a8e7e_write(_self_, jule::Str("#include \"", 10));
							_1b41a8e7e_write(_self_, _35316_used.get()._field_Path);
							_1b41a8e7e_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1b77c9dc6:;
				};
			}
			_iter_next_1b77c94ad:;
			++it;
			goto _iter_begin_1b77c94ad;
		}
		_iter_end_1b77c94ad:;
	};
}



inline void _1b4222e82_prepareStructure(_1b42224e2_ObjectCoder* _self_, jule::Ptr<_1b2e683e3_Struct>* _36940_s) {
	{
		auto expr = &((*(_36940_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77c9bea:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _37021_ins = *it;
			{
				{
					auto expr = &(_37021_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b77cce40:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _37125_m = *it;
						{
							if (_37125_m.get()._field_Statically) {
								goto _iter_next_1b77cce40;
							};
							{
								auto expr = &(_37125_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b77cdb99:;
								if (it != expr_end) {
									jule::Ptr<_1b2e71132_FnIns> _37529_mins = *it;
									{
										jule::Ptr<_1b2e70263_ParamIns> _37629_p = _37529_mins.get()._field_Params[0LL];;
										if ((!(_1b2e2e60c_IsRef(_37629_p.get()._field_Decl.ptr())))) {
											_37629_p.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b4228075_customType>(_1b4228075_customType{._field_kind=_1b422a077_asPtr((*(_self_))._field_tc.ptr(), _1b422dda0_kind((*(_self_))._field_tc.ptr(), _37629_p.get()._field_Kind))}), 13)});
										} else {
											_37629_p.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b4228075_customType>(_1b4228075_customType{._field_kind=_1b422dda0_kind((*(_self_))._field_tc.ptr(), _37629_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1b77cdb99:;
									++it;
									goto _iter_begin_1b77cdb99;
								}
								_iter_end_1b77cdb99:;
							};
						}
						_iter_next_1b77cce40:;
						++it;
						goto _iter_begin_1b77cce40;
					}
					_iter_end_1b77cce40:;
				};
			}
			_iter_next_1b77c9bea:;
			++it;
			goto _iter_begin_1b77c9bea;
		}
		_iter_end_1b77c9bea:;
	};
}



inline void _1b42230b4_prepareStructures(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77ccd85:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _39621_s = *it;
			{
				if ((_39621_s.get()._field_Token != nullptr)) {
					_1b4222e82_prepareStructure(_self_.ptr(), &(_39621_s));
				};
			}
			_iter_next_1b77ccd85:;
			++it;
			goto _iter_begin_1b77ccd85;
		}
		_iter_end_1b77ccd85:;
	};
}



inline void _1b42231e6_iterPackages(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)> _40332_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77d2609:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _40421_used = *it;
			{
				if ((!(_40421_used.get()._field_CppLinked))) {
					_40332_f(&(_40421_used.get()._field_Package));
				};
			}
			_iter_next_1b77d2609:;
			++it;
			goto _iter_begin_1b77d2609;
		}
		_iter_end_1b77d2609:;
	};
	_40332_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1b4223328_buildTraitMap(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b42231e6_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>([=](jule::Ptr<_1b2eae6ae_Package>* _41335_pkg) mutable -> void {
		_1b42270a7_iterFiles(_41335_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>([=](jule::Ptr<_1b302ac69_SymbolTable>* _41436_file) mutable -> void {
			{
				auto expr = &((*(_41436_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b77d57e9:;
				if (it != expr_end) {
					jule::Ptr<_1b2e8033e_Trait> _41529_t = *it;
					{
						if ((_41529_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_41529_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1b41895ad_traitHash>(_1b41895ad_traitHash{._field_t=_41529_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1b77d57e9;
						};
						jule::I32 _42729_i = 0LL;;
						{
							auto expr = &(_41529_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b77d608b:;
							if (it != expr_end) {
								jule::Ptr<_1b2e683e3_Struct> _42833_s = *it;
								{
									{
										auto expr = &(_42833_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b77d8049:;
										if (it != expr_end) {
											jule::Ptr<_1b2e687bc_StructIns> _42937_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1b41895ad_traitHash>(_1b41895ad_traitHash{._field_t=_41529_t, ._field_s=_42937_ins, ._field_i=_42729_i}));;
												(_42729_i)++;
											}
											_iter_next_1b77d8049:;
											++it;
											goto _iter_begin_1b77d8049;
										}
										_iter_end_1b77d8049:;
									};
								}
								_iter_next_1b77d608b:;
								++it;
								goto _iter_begin_1b77d608b;
							}
							_iter_end_1b77d608b:;
						};
					}
					_iter_next_1b77d57e9:;
					++it;
					goto _iter_begin_1b77d57e9;
				}
				_iter_end_1b77d57e9:;
			};
		}));
	}));
}



inline void _1b422345a_traitDecls(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b42231e6_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>([=](jule::Ptr<_1b2eae6ae_Package>* _44435_pkg) mutable -> void {
		_1b42270a7_iterFiles(_44435_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>([=](jule::Ptr<_1b302ac69_SymbolTable>* _44536_file) mutable -> void {
			{
				auto expr = &((*(_44536_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b77da0e5:;
				if (it != expr_end) {
					jule::Ptr<_1b2e8033e_Trait> _44629_t = *it;
					{
						if ((_44629_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1b41ebbc5_indent(_self_);
						_1b41a8e7e_write(_self_, jule::Str("struct ", 7));
						_1b41a8e7e_write(_self_, static__1b4182991_traitDecl(_44629_t));
						_1b41a8e7e_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1b77da0e5:;
					++it;
					goto _iter_begin_1b77da0e5;
				}
				_iter_end_1b77da0e5:;
			};
		}));
	}));
}



inline void _1b422358c_structurePlainDecl(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e683e3_Struct>* _45943_s) {
	{
		auto expr = &((*(_45943_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77d7e39:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _46021_ins = *it;
			{
				_1b41a8e7e_write(_self_, jule::Str("struct ", 7));
				_1b41a8e7e_write(_self_, static__1b4183277_structureIns(&(_46021_ins)));
				_1b41a8e7e_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b77d7e39:;
			++it;
			goto _iter_begin_1b77d7e39;
		}
		_iter_end_1b77d7e39:;
	};
}



inline void _1b42236be_structurePlainDecls(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77dced8:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _46821_s = *it;
			{
				if ((_46821_s.get()._field_Token != nullptr)) {
					_1b422358c_structurePlainDecl(_self_, &(_46821_s));
				};
			}
			_iter_next_1b77dced8:;
			++it;
			goto _iter_begin_1b77dced8;
		}
		_iter_end_1b77dced8:;
	};
}



inline void _1b4223801_fieldDecl(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e685d0_FieldIns>* _47534_f) {
	_1b41a8e7e_write(_self_, _1b422dda0_kind(_self_.get()._field_tc.ptr(), (*(_47534_f)).get()._field_Kind));
	_1b41a8e7e_write(_self_, jule::Str(" ", 1));
	_1b41a8e7e_write(_self_, static__1b418351e_field(&((*(_47534_f)).get()._field_Decl)));
	if (((*(_47534_f)).get()._field_Default == nullptr)) {
		if (_1b4235901_shouldInitialized(&((*(_47534_f)).get()._field_Kind))) {
			_1b41a8e7e_write(_self_, jule::Str(" = ", 3));
			_1b417a02c_initExpr(_self_.get()._field_ec, (*(_47534_f)).get()._field_Kind);
		};
	} else {
		_1b41a8e7e_write(_self_, jule::Str(" = ", 3));
		_1b41713ec_possibleRefExpr(_self_.get()._field_ec, (*(_47534_f)).get()._field_Default.get()._field_Model);
	};
	_1b41a8e7e_write(_self_, jule::Str(";", 1));
}



inline void _1b4223933_structureDestructor(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _49344_s) {
	;
	jule::Ptr<_1b2e6e85b_Fn> _49613_disposeMethod = _1b2e43478_FindMethod((*(_49344_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _49717_disposed = static__1b2ed9453_Dispose(_49613_disposeMethod);;
	if ((!(_49717_disposed))) {
		return;;
	};
	_1b41a8e7e_write(_self_, jule::Str("~", 1));
	_1b41a8e7e_write(_self_, static__1b4183277_structureIns(_49344_s));
	_1b41a8e7e_write(_self_, jule::Str("(void) { ", 9));
	_1b41a8e7e_write(_self_, static__1b4182452_func(&(_49613_disposeMethod)));
	_1b41a8e7e_write(_self_, jule::Str("(this); }", 9));
}



inline void _1b4223a65_structureDeriveDefsDecls(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _50945_s) {
	if (_1b2e31ea0_IsDerives((*(_50945_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, _1b417ceb9_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_50945_s)).get()._field_Decl)));
		_1b41a8e7e_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1b4223b97_structureOperatorEq(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Str* _51740_ident, jule::Ptr<_1b2e687bc_StructIns>* _51757_s) {
	if ((!((*(_51757_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_51757_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1b4223e0b_structureOperator(_self_, _51740_ident, &((*(_51757_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1b41ebbc5_indent(_self_);
	if (_1cb0ae455_Inline) {
		_1b41a8e7e_write(_self_, jule::Str("inline ", 7));
	};
	_1b41a8e7e_write(_self_, jule::Str("bool operator==(", 16));
	_1b41a8e7e_write(_self_, (*(_51740_ident)));
	_1b41a8e7e_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_51757_s)).get()._field_Fields.len() > 0LL)) {
		_1b41e8155_addIndent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("\n", 1));
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("return ", 7));
		_1b41e8155_addIndent(_self_);
		jule::Bool _54021_writed = false;;
		{
			auto expr = &((*(_51757_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b77eabb6:;
			if (it != expr_end) {
				jule::Ptr<_1b2e685d0_FieldIns> _54125_f = *it;
				{
					jule::Ptr<_1b2e687bc_StructIns> _54321_strct = _1b306030e_Struct(_54125_f.get()._field_Kind.ptr());;
					if ((((_54321_strct != nullptr) && (_54321_strct.get()._field_Decl != nullptr)) && _54321_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1b77eabb6;
					};
					if (_54021_writed) {
						_1b41a8e7e_write(_self_, jule::Str(" &&", 3));
					};
					_54021_writed=true;
					_1b41a8e7e_write(_self_, jule::Str("\n", 1));
					_1b41ebbc5_indent(_self_);
					_1b41a8e7e_write(_self_, jule::Str("this->", 6));
					jule::Str _55421_fIdent = static__1b418351e_field(&(_54125_f.get()._field_Decl));;
					_1b41a8e7e_write(_self_, _55421_fIdent);
					_1b41a8e7e_write(_self_, jule::Str(" == _other.", 11));
					_1b41a8e7e_write(_self_, _55421_fIdent);
				}
				_iter_next_1b77eabb6:;
				++it;
				goto _iter_begin_1b77eabb6;
			}
			_iter_end_1b77eabb6:;
		};
		_1b41e8672_doneIndent(_self_);
		if ((!(_54021_writed))) {
			_1b41a8e7e_write(_self_, jule::Str("true", 4));
		};
		_1b41a8e7e_write(_self_, jule::Str(";\n", 2));
		_1b41e8672_doneIndent(_self_);
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("}", 1));
	} else {
		_1b41a8e7e_write(_self_, jule::Str(" return true; }", 15));
	};
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b4223cc9_structureOperatorNotEq(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Str* _57343_ident, jule::Ptr<_1b2e687bc_StructIns>* _57360_s) {
	if ((!((*(_57360_s)).get()._field_Comparable))) {
		return;;
	};
	_1b41ebbc5_indent(_self_);
	if (_1cb0ae455_Inline) {
		_1b41a8e7e_write(_self_, jule::Str("inline ", 7));
	};
	_1b41a8e7e_write(_self_, jule::Str("bool operator!=(", 16));
	_1b41a8e7e_write(_self_, (*(_57343_ident)));
	_1b41a8e7e_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1b4223e0b_structureOperator(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Str* _58738_ident, jule::Ptr<_1b2e71132_FnIns>* _58755_f, jule::Str _58766_op) {
	if (((*(_58755_f)) == nullptr)) {
		return;;
	};
	jule::Bool _59213_unary = ((*(_58755_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _59313_assignment = _1b2e1e102_IsVoid((*(_58755_f)).get()._field_Decl.ptr());;
	_1b41ebbc5_indent(_self_);
	if (_1cb0ae455_Inline) {
		_1b41a8e7e_write(_self_, jule::Str("inline ", 7));
	};
	if (_59313_assignment) {
		_1b41a8e7e_write(_self_, (*(_58738_ident)));
		_1b41a8e7e_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1b305ddac_Prim((*(_58755_f)).get()._field_Result.ptr()) == nullptr)) {
			_1b41a8e7e_write(_self_, (*(_58738_ident)));
		} else {
			_1b41a8e7e_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1b41a8e7e_write(_self_, jule::Str(" operator", 9));
	_1b41a8e7e_write(_self_, _58766_op);
	_1b41a8e7e_write(_self_, jule::Str("(", 1));
	if ((!(_59213_unary))) {
		jule::Ptr<_1b2e70263_ParamIns> _61521_p = (*(_58755_f)).get()._field_Params[1LL];;
		_1b41a8e7e_write(_self_, _1b422cd49_paramIns(_self_.get()._field_tc.ptr(), &(_61521_p)));
		_1b41a8e7e_write(_self_, jule::Str(" _other", 7));
	};
	_1b41a8e7e_write(_self_, jule::Str(") { ", 4));
	if ((!(_59313_assignment))) {
		_1b41a8e7e_write(_self_, jule::Str("return ", 7));
	};
	_1b41a8e7e_write(_self_, static__1b41826e9_funcIns(_58755_f));
	if ((!(_59213_unary))) {
		_1b41a8e7e_write(_self_, jule::Str("(this, _other); ", 16));
		if (_59313_assignment) {
			_1b41a8e7e_write(_self_, jule::Str("return *this; ", 14));
		};
		_1b41a8e7e_write(_self_, jule::Str("}", 1));
	} else {
		_1b41a8e7e_write(_self_, jule::Str("(this); }", 9));
	};
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b422403d_structureOperators(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _63643_s) {
	jule::Str _63713_ident = static__1b4183277_structureIns(_63643_s);;
	_1b4223b97_structureOperatorEq(_self_, &(_63713_ident), _63643_s);
	_1b4223cc9_structureOperatorNotEq(_self_, &(_63713_ident), _63643_s);
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1b4223e0b_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1b4224170_structureInsDecl(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _67541_s) {
	if (((*(_67541_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_67541_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b78181ab:;
			if (it != expr_end) {
				jule::Ptr<_1b2e6e85b_Fn> _67725_m = *it;
				{
					_1b41ea61e_pushResult(_self_, &(_67725_m));
					_1b422477a_funcDecl(_self_, &(_67725_m), false);
				}
				_iter_next_1b78181ab:;
				++it;
				goto _iter_begin_1b78181ab;
			}
			_iter_end_1b78181ab:;
		};
	};
	_1b41a8e7e_write(_self_, jule::Str("struct ", 7));
	jule::Str _68413_outIdent = static__1b4183277_structureIns(_67541_s);;
	_1b41a8e7e_write(_self_, _68413_outIdent);
	_1b41a8e7e_write(_self_, jule::Str(" {\n", 3));
	_1b41e8155_addIndent(_self_);
	{
		auto expr = &((*(_67541_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b781a356:;
		if (it != expr_end) {
			jule::Ptr<_1b2e685d0_FieldIns> _69021_f = *it;
			{
				_1b41ebbc5_indent(_self_);
				_1b4223801_fieldDecl(_self_, &(_69021_f));
				_1b41a8e7e_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1b781a356:;
			++it;
			goto _iter_begin_1b781a356;
		}
		_iter_end_1b781a356:;
	};
	_1b41ebbc5_indent(_self_);
	_1b4223933_structureDestructor(_self_, _67541_s);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_1b41ebbc5_indent(_self_);
	_1b41a8e7e_write(_self_, _68413_outIdent);
	_1b41a8e7e_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1b4223a65_structureDeriveDefsDecls(_self_, _67541_s);
	_1b422403d_structureOperators(_self_, _67541_s);
	_1b41a8e7e_write(_self_, jule::Str("\n", 1));
	_1b41e8672_doneIndent(_self_);
	_1b41ebbc5_indent(_self_);
	_1b41a8e7e_write(_self_, jule::Str("};", 2));
}



inline void _1b42242a2_structureDecl(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e683e3_Struct>* _71538_s) {
	{
		auto expr = &((*(_71538_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b781e0c4:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _71621_ins = *it;
			{
				_1b4224170_structureInsDecl(_self_, &(_71621_ins));
			}
			_iter_next_1b781e0c4:;
			++it;
			goto _iter_begin_1b781e0c4;
		}
		_iter_end_1b781e0c4:;
	};
}



inline void _1b42243d4_structureDecls(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b781ee93:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _72221_s = *it;
			{
				if ((_72221_s.get()._field_Token != nullptr)) {
					_1b42242a2_structureDecl(_self_, &(_72221_s));
					_1b41a8e7e_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1b781ee93:;
			++it;
			goto _iter_begin_1b781ee93;
		}
		_iter_end_1b781ee93:;
	};
}



inline void _1b4224516_paramsDecls(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>* _73036_params) {
	if (((*(_73036_params)).len() == 0LL)) {
		_1b41a8e7e_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b41a8e7e_write(_self_, jule::Str("(", 1));
	{
		auto expr = _73036_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7821e73:;
		if (it != expr_end) {
			jule::I32 _73714_i = it - expr->begin();
			jule::Ptr<_1b2e70263_ParamIns> _73721_p = *it;
			{
				_1b41a8e7e_write(_self_, _1b422cd49_paramIns(_self_.get()._field_tc.ptr(), &(_73721_p)));
				if ((((*(_73036_params)).len() - _73714_i) > 1LL)) {
					_1b41a8e7e_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b7821e73:;
			++it;
			_73714_i++;
			goto _iter_begin_1b7821e73;
		}
		_iter_end_1b7821e73:;
	};
	_1b41a8e7e_write(_self_, jule::Str(")", 1));
}



inline void _1b4224648_funcHead(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e71132_FnIns>* _74733_f, jule::Bool _74744_ptr) {
	if ((((!(_74744_ptr)) && _1cb0ae455_Inline) && (!(_1b2e34a41_IsEntryPoint((*(_74733_f)).get()._field_Decl.ptr()))))) {
		_1b41a8e7e_write(_self_, jule::Str("inline ", 7));
	};
	_1b422d476_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _74733_f);
	if (_74744_ptr) {
		_1b41a8e7e_write(_self_, jule::Str("(*", 2));
		_1b41a8e7e_write(_self_, static__1b41826e9_funcIns(_74733_f));
		_1b41a8e7e_write(_self_, jule::Str(")", 1));
	} else {
		_1b41a8e7e_write(_self_, jule::Str(" ", 1));
		_1b41a8e7e_write(_self_, static__1b41826e9_funcIns(_74733_f));
	};
}



inline void _1b422477a_funcDecl(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e6e85b_Fn>* _76233_f, jule::Bool _76241_ptr) {
	{
		auto expr = &((*(_76233_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b782730d:;
		if (it != expr_end) {
			jule::Ptr<_1b2e71132_FnIns> _76321_c = *it;
			{
				_1b41ebbc5_indent(_self_);
				_1b4224648_funcHead(_self_, &(_76321_c), _76241_ptr);
				_1b4224516_paramsDecls(_self_, &(_76321_c.get()._field_Params));
				_1b41a8e7e_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b782730d:;
			++it;
			goto _iter_begin_1b782730d;
		}
		_iter_end_1b782730d:;
	};
}



inline void _1b42248ac_funcDecls(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b42231e6_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>([=](jule::Ptr<_1b2eae6ae_Package>* _77235_pkg) mutable -> void {
		_1b42270a7_iterFiles(_77235_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>([=](jule::Ptr<_1b302ac69_SymbolTable>* _77336_file) mutable -> void {
			{
				auto expr = &((*(_77336_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b782a751:;
				if (it != expr_end) {
					jule::Ptr<_1b2e6e85b_Fn> _77429_f = *it;
					{
						if (((!(_77429_f.get()._field_CppLinked)) && (_77429_f.get()._field_Token != nullptr))) {
							_1b41ea61e_pushResult(_self_, &(_77429_f));
							_1b422477a_funcDecl(_self_, &(_77429_f), false);
						};
					}
					_iter_next_1b782a751:;
					++it;
					goto _iter_begin_1b782a751;
				}
				_iter_end_1b782a751:;
			};
		}));
	}));
}



inline void _1b42249de_traitDataTypes(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b42231e6_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>([=](jule::Ptr<_1b2eae6ae_Package>* _78535_pkg) mutable -> void {
		_1b42270a7_iterFiles(_78535_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>([=](jule::Ptr<_1b302ac69_SymbolTable>* _78636_file) mutable -> void {
			{
				auto expr = &((*(_78636_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b782d6aa:;
				if (it != expr_end) {
					jule::Ptr<_1b2e8033e_Trait> _78729_t = *it;
					{
						if ((_78729_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1b41a8e7e_write(_self_, jule::Str("struct ", 7));
						_1b41a8e7e_write(_self_, static__1b4182991_traitDecl(_78729_t));
						_1b41a8e7e_write(_self_, jule::Str("MptrData", 8));
						_1b41a8e7e_write(_self_, jule::Str(" {\n", 3));
						_1b41e8155_addIndent(_self_);
						{
							auto expr = &(_78729_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b7830800:;
							if (it != expr_end) {
								jule::Ptr<_1b2e6e85b_Fn> _79633_m = *it;
								{
									jule::Ptr<_1b2e71132_FnIns> _79733_ins = _79633_m.get()._field_Instances[0LL];;
									jule::Ptr<_1b2e70263_ParamIns> _79833_p = _79733_ins.get()._field_Params[0LL];;
									_79833_p.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_78729_t, 2)});
									{
										auto expr = _79733_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										auto expr_end = expr.end();
										_iter_begin_1b7832604:;
										if (it != expr_end) {
											jule::I32 _80230_i = it - expr.begin();
											jule::Ptr<_1b2e70263_ParamIns> _80237_ip = *it;
											{
												if (_1cb18b598_IsAnonIdent(_80237_ip.get()._field_Decl.get()._field_Ident)) {
													_80237_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1b18ce971_Itoa(_80230_i));
												};
											}
											_iter_next_1b7832604:;
											++it;
											_80230_i++;
											goto _iter_begin_1b7832604;
										}
										_iter_end_1b7832604:;
									};
									if ((!(_20b9476d6_Production))) {
										_79733_ins.get()._field_Params = jule::alloc_for_append(_79733_ins.get()._field_Params,1);_79733_ins.get()._field_Params.__push(jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b4228075_customType>(_1b4228075_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1b41ea61e_pushResult(_self_, &(_79633_m));
									_1b422477a_funcDecl(_self_, &(_79633_m), true);
								}
								_iter_next_1b7830800:;
								++it;
								goto _iter_begin_1b7830800;
							}
							_iter_end_1b7830800:;
						};
						_1b41e8672_doneIndent(_self_);
						_1b41ebbc5_indent(_self_);
						_1b41a8e7e_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1b782d6aa:;
					++it;
					goto _iter_begin_1b782d6aa;
				}
				_iter_end_1b782d6aa:;
			};
		}));
	}));
}



inline void _1b4224b21_paramIns(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e70263_ParamIns>* _83033_p) {
	_1b41a8e7e_write(_self_, _1b422cd49_paramIns(_self_.get()._field_tc.ptr(), _83033_p));
	_1b41a8e7e_write(_self_, jule::Str(" ", 1));
	_1b41a8e7e_write(_self_, static__1b4182c38_param(&((*(_83033_p)).get()._field_Decl)));
}



inline void _1b4224c53_paramsIns(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>* _83634_params) {
	if (((*(_83634_params)).len() == 0LL)) {
		_1b41a8e7e_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b41a8e7e_write(_self_, jule::Str("(", 1));
	{
		auto expr = _83634_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7837087:;
		if (it != expr_end) {
			jule::I32 _84214_i = it - expr->begin();
			jule::Ptr<_1b2e70263_ParamIns> _84221_p = *it;
			{
				_1b4224b21_paramIns(_self_, &(_84221_p));
				if ((((*(_83634_params)).len() - _84214_i) > 1LL)) {
					_1b41a8e7e_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b7837087:;
			++it;
			_84214_i++;
			goto _iter_begin_1b7837087;
		}
		_iter_end_1b7837087:;
	};
	_1b41a8e7e_write(_self_, jule::Str(")", 1));
}



inline void _1b4224d85_varInitExpr(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2ed8034_Var>* _85136_v, jule::Fn<void(void)> _85145_init) {
	if ((*(_85136_v)).get()._field_Statically) {
		_1b41a8e7e_write(_self_, jule::Str("static ", 7));
	};
	_1b41a8e7e_write(_self_, _1b422dda0_kind(_self_.get()._field_tc.ptr(), (*(_85136_v)).get()._field_Kind.get()._field_Kind));
	_1b41a8e7e_write(_self_, jule::Str(" ", 1));
	if ((*(_85136_v)).get()._field_Reference) {
		_1b41a8e7e_write(_self_, jule::Str("*", 1));
	};
	_1b41a8e7e_write(_self_, static__1b41837b6_var((*(_85136_v))));
	if ((_85145_init != nullptr)) {
		_1b41a8e7e_write(_self_, jule::Str(" = ", 3));
		_85145_init();
	};
	_1b41a8e7e_write(_self_, jule::Str(";", 1));
}



inline void _1b4224eb7_var(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2ed8034_Var> _86927_v) {
	if (_1cb18b301_IsIgnoreIdent(_86927_v.get()._field_Ident)) {
		return;;
	};
	if (((_86927_v.get()._field_Value != nullptr) && (_86927_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86927_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_86927_v.get()._field_Reference) {
				_1b4224d85_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b41a8e7e_write(_self_, jule::Str("&(", 2));
					_1b4179ca7_model(_self_.get()._field_ec, _86927_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1b41a8e7e_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1b4224d85_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b41713ec_possibleRefExpr(_self_.get()._field_ec, _86927_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1b4224d85_varInitExpr(_self_, &(_86927_v), nullptr);
		return;;
	};
	if (_86927_v.get()._field_Reference) {
		_1b4224d85_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b41a8e7e_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1b4235901_shouldInitialized(&(_86927_v.get()._field_Kind.get()._field_Kind))) {
		_1b4224d85_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b417a02c_initExpr(_self_.get()._field_ec, _86927_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1b4224d85_varInitExpr(_self_, &(_86927_v), nullptr);
}



inline void _1b42250e9_func(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e6e85b_Fn>* _90029_f) {
	{
		auto expr = &((*(_90029_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7843eea:;
		if (it != expr_end) {
			jule::Ptr<_1b2e71132_FnIns> _90121_ins = *it;
			{
				_1b4224648_funcHead(_self_, &(_90121_ins), false);
				_1b4224c53_paramsIns(_self_, &(_90121_ins.get()._field_Params));
				_1b41a8e7e_write(_self_, jule::Str(" ", 1));
				_1b416a814_funcScope(_self_.get()._field_sc, _90121_ins);
				if ((_90121_ins.get()._field_Scope != nullptr)) {
					_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b7843eea:;
			++it;
			goto _iter_begin_1b7843eea;
		}
		_iter_end_1b7843eea:;
	};
}



inline void _1b422522b_traitWrappers(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7846140:;
		if (it != expr_end) {
			jule::Ptr<_1b41895ad_traitHash> _91321_hash = *it;
			{
				{
					auto expr = &(_91321_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7846937:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _91425_m = *it;
						{
							jule::Str _91521_ident = _91425_m.get()._field_Ident;;
							_91425_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_91425_m.get()._field_Ident=((_91521_ident + jule::Str("_", 1)) + _1b18ce971_Itoa(_91321_hash.get()._field_i));
							_1b42250e9_func(_self_, &(_91425_m));
							_91425_m.get()._field_Ident=_91521_ident;
							if ((_91321_hash.get()._field_s == nullptr)) {
								if (_20b9476d6_Production) {
									_1b41a8e7e_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1b41a8e7e_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1b7846937;
							};
							jule::Bool _93121_ptr = (!(_1b2e2e60c_IsRef(_91425_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1b2e6e85b_Fn> _93325_sm = _1b2e43478_FindMethod(_91321_hash.get()._field_s.ptr(), _91425_m.get()._field_Ident, false);;
							if (((_93325_sm == nullptr) || (_93325_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1b7846937;
							};
							_1b41e8155_addIndent(_self_);
							_1b41a8e7e_write(_self_, jule::Str("{\n", 2));
							_1b41ebbc5_indent(_self_);
							if ((_93325_sm.get()._field_Exceptional || (!(_1b2e1e102_IsVoid(_93325_sm.ptr()))))) {
								_1b41a8e7e_write(_self_, jule::Str("return ", 7));
							};
							_1b41a8e7e_write(_self_, static__1b4182452_func(&(_93325_sm)));
							_1b41a8e7e_write(_self_, jule::Str("(", 1));
							if (_93121_ptr) {
								_1b41a8e7e_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1b41a8e7e_write(_self_, _1b422c420_structureIns(_self_.get()._field_tc.ptr(), _91321_hash.get()._field_s));
								_1b41a8e7e_write(_self_, jule::Str(">(", 2));
								if ((!(_20b9476d6_Production))) {
									_1b41a8e7e_write(_self_, jule::Str("_00___file", 10));
								};
								_1b41a8e7e_write(_self_, jule::Str(")", 1));
							} else {
								_1b41a8e7e_write(_self_, jule::Str("_self_.data.as<", 15));
								_1b41a8e7e_write(_self_, _1b422c112_structure(_self_.get()._field_tc.ptr(), _93325_sm.get()._field_Owner));
								_1b41a8e7e_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _91425_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1b784d664:;
								if (it != expr_end) {
									jule::Ptr<_1b2e6e66e_Param> _95924_mp = *it;
									{
										_1b41a8e7e_write(_self_, jule::Str(", ", 2));
										_1b41a8e7e_write(_self_, static__1b4182c38_param(&(_95924_mp)));
									}
									_iter_next_1b784d664:;
									++it;
									goto _iter_begin_1b784d664;
								}
								_iter_end_1b784d664:;
							};
							_1b41a8e7e_write(_self_, jule::Str(");\n}\n", 5));
							_1b41e8672_doneIndent(_self_);
						}
						_iter_next_1b7846937:;
						++it;
						goto _iter_begin_1b7846937;
					}
					_iter_end_1b7846937:;
				};
			}
			_iter_next_1b7846140:;
			++it;
			goto _iter_begin_1b7846140;
		}
		_iter_end_1b7846140:;
	};
}



inline void _1b422535d_traitDatas(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	jule::Ptr<_1b2e8033e_Trait> _97017_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78465b3:;
		if (it != expr_end) {
			jule::Ptr<_1b41895ad_traitHash> _97121_hash = *it;
			{
				jule::Str _97217_ident = static__1b4182991_traitDecl(_97121_hash.get()._field_t);;
				if ((_97121_hash.get()._field_t != _97017_old)) {
					if ((_97017_old != nullptr)) {
						_1b41e8672_doneIndent(_self_);
						_1b41ebbc5_indent(_self_);
						_1b41a8e7e_write(_self_, jule::Str("};\n", 3));
					};
					_1b41a8e7e_write(_self_, jule::Str("static ", 7));
					_1b41a8e7e_write(_self_, _97217_ident);
					_1b41a8e7e_write(_self_, jule::Str("MptrData ", 9));
					_1b41a8e7e_write(_self_, _97217_ident);
					_1b41a8e7e_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_97017_old=_97121_hash.get()._field_t;
					_1b41e8155_addIndent(_self_);
				};
				_1b41ebbc5_indent(_self_);
				_1b41a8e7e_write(_self_, jule::Str("{\n", 2));
				_1b41e8155_addIndent(_self_);
				{
					auto expr = &(_97121_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b78563d6:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _99025_m = *it;
						{
							jule::Str _99121_mIdent = static__1b4182452_func(&(_99025_m));;
							_1b41ebbc5_indent(_self_);
							_1b41a8e7e_write(_self_, jule::Str(".", 1));
							_1b41a8e7e_write(_self_, _99121_mIdent);
							_1b41a8e7e_write(_self_, jule::Str("=", 1));
							_1b41a8e7e_write(_self_, _99121_mIdent);
							_1b41a8e7e_write(_self_, jule::Str("_", 1));
							_1b41a8e7e_write(_self_, _1b18ce971_Itoa(_97121_hash.get()._field_i));
							_1b41a8e7e_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1b78563d6:;
						++it;
						goto _iter_begin_1b78563d6;
					}
					_iter_end_1b78563d6:;
				};
				_1b41e8672_doneIndent(_self_);
				_1b41ebbc5_indent(_self_);
				_1b41a8e7e_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1b78465b3:;
			++it;
			goto _iter_begin_1b78465b3;
		}
		_iter_end_1b78465b3:;
	};
	if ((_97017_old != nullptr)) {
		_1b41e8672_doneIndent(_self_);
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1b4225490_globals(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b785a451:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _101321_v = *it;
			{
				_1b41a8e7e_write(_self_, _1b422dda0_kind(_self_.get()._field_tc.ptr(), _101321_v.get()._field_Kind.get()._field_Kind));
				_1b41a8e7e_write(_self_, jule::Str(" ", 1));
				_1b41a8e7e_write(_self_, static__1b41837b6_var(_101321_v));
				_1b41a8e7e_write(_self_, jule::Str(" = ", 3));
				_1b4179ca7_model(_self_.get()._field_ec, _101321_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1b41a8e7e_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b785a451:;
			++it;
			goto _iter_begin_1b785a451;
		}
		_iter_end_1b785a451:;
	};
}



inline void _1b42255c2_decls(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b422345a_traitDecls(_self_);
	_1b42236be_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_1b42243d4_structureDecls(_self_);
	_1b42248ac_funcDecls(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_1b42249de_traitDataTypes(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_1b422522b_traitWrappers(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_1b422535d_traitDatas(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_1b4225490_globals(_self_);
}



inline void _1b4225704_structureMethods(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _104041_s) {
	{
		auto expr = &((*(_104041_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7861149:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _104121_f = *it;
			{
				_1b42250e9_func(_self_, &(_104121_f));
				_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b7861149:;
			++it;
			goto _iter_begin_1b7861149;
		}
		_iter_end_1b7861149:;
	};
}



inline void _1b4225836_structureDeriveDefs(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _104744_s) {
	if (_1b2e31ea0_IsDerives((*(_104744_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b41a8e7e_write(_self_, _1b417d2c7_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_104744_s)).get()._field_Decl)));
		_1b41a8e7e_write(_self_, jule::Str("{\n", 2));
		_1b41e8155_addIndent(_self_);
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, _1b422c420_structureIns(_self_.get()._field_tc.ptr(), (*(_104744_s))));
		_1b41a8e7e_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_104744_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b78642c3:;
			if (it != expr_end) {
				jule::Ptr<_1b2e685d0_FieldIns> _105520_f = *it;
				{
					jule::Str _105621_ident = static__1b418351e_field(&(_105520_f.get()._field_Decl));;
					_1b41ebbc5_indent(_self_);
					_1b41a8e7e_write(_self_, jule::Str("clone.", 6));
					_1b41a8e7e_write(_self_, _105621_ident);
					_1b41a8e7e_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1b41a8e7e_write(_self_, _105621_ident);
					_1b41a8e7e_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1b78642c3:;
				++it;
				goto _iter_begin_1b78642c3;
			}
			_iter_end_1b78642c3:;
		};
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("return clone;\n", 14));
		_1b41e8672_doneIndent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("}", 1));
	};
}



inline void _1b4225968_structureOstream(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _107141_s) {
	_1b41ebbc5_indent(_self_);
	_1b41a8e7e_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1b41a8e7e_write(_self_, static__1b4183277_structureIns(_107141_s));
	_1b41a8e7e_write(_self_, jule::Str(" _Src) {\n", 9));
	_1b41e8155_addIndent(_self_);
	_1b41ebbc5_indent(_self_);
	jule::Ptr<_1b2e6e85b_Fn> _107917_fts = _1b2e43478_FindMethod((*(_107141_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1b2ed96ea_Str(_107917_fts)) {
		_1b41a8e7e_write(_self_, jule::Str("_Stream << ", 11));
		_1b41a8e7e_write(_self_, static__1b4182452_func(&(_107917_fts)));
		_1b41a8e7e_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1b41a8e7e_write(_self_, jule::Str("_Stream << \"", 12));
		_1b41a8e7e_write(_self_, (*(_107141_s)).get()._field_Decl.get()._field_Ident);
		_1b41a8e7e_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_107141_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b786b385:;
			if (it != expr_end) {
				jule::I32 _108918_i = it - expr->begin();
				jule::Ptr<_1b2e685d0_FieldIns> _108925_f = *it;
				{
					_1b41ebbc5_indent(_self_);
					_1b41a8e7e_write(_self_, jule::Str("_Stream << \"", 12));
					_1b41a8e7e_write(_self_, _108925_f.get()._field_Decl.get()._field_Ident);
					_1b41a8e7e_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1b2e687bc_StructIns> _109621_strct = _1b306030e_Struct(_108925_f.get()._field_Kind.ptr());;
					if ((((_109621_strct != nullptr) && (_109621_strct.get()._field_Decl != nullptr)) && _109621_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1b41a8e7e_write(_self_, jule::Str(" cpp.", 5));
						_1b41a8e7e_write(_self_, static__1b418351e_field(&(_108925_f.get()._field_Decl)));
						_1b41a8e7e_write(_self_, jule::Str("\"", 1));
					} else {
						_1b41a8e7e_write(_self_, jule::Str("\" << _Src.", 10));
						_1b41a8e7e_write(_self_, static__1b418351e_field(&(_108925_f.get()._field_Decl)));
					};
					if (((_108918_i + 1LL) < (*(_107141_s)).get()._field_Fields.len())) {
						_1b41a8e7e_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1b41a8e7e_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1b786b385:;
				++it;
				_108918_i++;
				goto _iter_begin_1b786b385;
			}
			_iter_end_1b786b385:;
		};
		_1b41ebbc5_indent(_self_);
		_1b41a8e7e_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1b41ebbc5_indent(_self_);
	_1b41a8e7e_write(_self_, jule::Str("return _Stream;\n", 16));
	_1b41e8672_doneIndent(_self_);
	_1b41a8e7e_write(_self_, jule::Str("}", 1));
}



inline void _1b4225b33_structureIns(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e687bc_StructIns>* _112237_s) {
	_1b4225704_structureMethods(_self_, _112237_s);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_1b4225836_structureDeriveDefs(_self_, _112237_s);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	_1b4225968_structureOstream(_self_, _112237_s);
}



inline void _1b4225da8_structure(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2e683e3_Struct>* _113034_s) {
	{
		auto expr = &((*(_113034_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7873e70:;
		if (it != expr_end) {
			jule::Ptr<_1b2e687bc_StructIns> _113121_ins = *it;
			{
				_1b4225b33_structureIns(_self_, &(_113121_ins));
				_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b7873e70:;
			++it;
			goto _iter_begin_1b7873e70;
		}
		_iter_end_1b7873e70:;
	};
}



inline void _1b4226084_structures(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7875180:;
		if (it != expr_end) {
			jule::Ptr<_1b2e683e3_Struct> _113821_s = *it;
			{
				if ((_113821_s.get()._field_Token != nullptr)) {
					_1b4225da8_structure(_self_, &(_113821_s));
					_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b7875180:;
			++it;
			goto _iter_begin_1b7875180;
		}
		_iter_end_1b7875180:;
	};
}



inline void _1b4226260_funcs(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b42231e6_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>([=](jule::Ptr<_1b2eae6ae_Package>* _114735_pkg) mutable -> void {
		_1b42270a7_iterFiles(_114735_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>([=](jule::Ptr<_1b302ac69_SymbolTable>* _114836_file) mutable -> void {
			{
				auto expr = &((*(_114836_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b78782c6:;
				if (it != expr_end) {
					jule::Ptr<_1b2e6e85b_Fn> _114929_f = *it;
					{
						if (((!(_20b946c79_Test)) && _1b4235659_hasDirective(&(_114929_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1b78782c6;
						};
						if (((!(_114929_f.get()._field_CppLinked)) && (_114929_f.get()._field_Token != nullptr))) {
							_1b42250e9_func(_self_, &(_114929_f));
							_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1b78782c6:;
					++it;
					goto _iter_begin_1b78782c6;
				}
				_iter_end_1b78782c6:;
			};
		}));
	}));
}



inline void _1b42264d5_pushInit(jule::Ptr<_1b42224e2_ObjectCoder> _self_, jule::Ptr<_1b2eae6ae_Package>* _116233_pkg) {
	_1b42270a7_iterFiles(_116233_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)>([=](jule::Ptr<_1b302ac69_SymbolTable>* _116332_file) mutable -> void {
		{
			auto expr = &((*(_116332_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b787aa26:;
			if (it != expr_end) {
				jule::Ptr<_1b2e6e85b_Fn> _116420_f = *it;
				{
					if (_116420_f.get()._field_Ident.equal("init", 4)) {
						_1b41ebbc5_indent(_self_);
						_1b41a8e7e_write(_self_, static__1b4182452_func(&(_116420_f)));
						_1b41a8e7e_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1b787aa26:;
				++it;
				goto _iter_begin_1b787aa26;
			}
			_iter_end_1b787aa26:;
		};
	}));
}



inline void _1b42266b1_initCaller(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b41a8e7e_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1b41e8155_addIndent(_self_);
	_1b42231e6_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b2eae6ae_Package>*)>([=](jule::Ptr<_1b2eae6ae_Package>* _117735_pkg) mutable -> void {
		_1b42264d5_pushInit(_self_, _117735_pkg);
	}));
	_1b41e8672_doneIndent(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n}", 2));
}



inline void _1b422688c_end(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b41a8e7e_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_20b946c79_Test) {
		_1b41a8e7e_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1b41a8e7e_write(_self_, jule::Str("entry_point();", 14));
	};
	_1b41a8e7e_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1b4226a68_serializeHead(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b42230b4_prepareStructures(_self_);
	_1b4223328_buildTraitMap(_self_);
	_1b4222c1d_head(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n", 1));
	_1b42255c2_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _121221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b78821d1:;
			if (it != expr_end) {
				jule::Str _121320_decl = *it;
				{
					_121221_head+=_121320_decl;
					_self_.get()._field_declPos+=_121320_decl.len();
				}
				_iter_next_1b78821d1:;
				++it;
				goto _iter_begin_1b78821d1;
			}
			_iter_end_1b78821d1:;
		};
		_121221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_121221_head;
	};
	_1b41a8e7e_write(_self_, jule::Str("\n", 1));
	_1b4226084_structures(_self_);
	_1b4226260_funcs(_self_);
	_1b42266b1_initCaller(_self_);
	_1b41a8e7e_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _122821_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_122821_head+=_self_.get()._field_anyObj;
		_122821_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_122821_head;
	};
}



inline void _1b4226c44_Serialize(jule::Ptr<_1b42224e2_ObjectCoder> _self_) {
	_1b4226a68_serializeHead(_self_);
	_1b422688c_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b42224e2_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b397cd80_ObjectDeadCode> static__1b397d2d1_new(jule::Ptr<_1b345d553_IR>* _3424_ir) {
	return jule::new_ptr<_1b397cd80_ObjectDeadCode>(_1b397cd80_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1b72eb156_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e8033e_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1b2e8033e_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b72ecdd3:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1b72ecae7:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72ed5ba:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b72ed5ba:;
			++it;
			_5213_i++;
			goto _iter_begin_1b72ed5ba;
		}
		_iter_end_1b72ed5ba:;
	};
	return false;;
}

inline jule::Bool _1b7300d92_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e71132_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1b2e71132_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b730313b:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1b7303081:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7303911:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b7303911:;
			++it;
			_5213_i++;
			goto _iter_begin_1b7303911;
		}
		_iter_end_1b7303911:;
	};
	return false;;
}

inline jule::Bool _1b7308949_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e687bc_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1b2e687bc_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b730b9e6:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1b730b771:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b730bac3:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b730bac3:;
			++it;
			_5213_i++;
			goto _iter_begin_1b730bac3;
		}
		_iter_end_1b730bac3:;
	};
	return false;;
}

inline jule::Bool _1b730e433_isLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2ed8034_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b7310ea1:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1b7310d80:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7311710:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b7311710:;
			++it;
			_5213_i++;
			goto _iter_begin_1b7311710;
		}
		_iter_end_1b7311710:;
	};
	return false;;
}



inline void _1b72eb4a8_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e8033e_Trait> _6035_t) {
	{
		
{
			_case_begin_1b72eeeb2:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1b72eeb60:;
	};
}

inline void _1b7301986_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e71132_FnIns> _6035_t) {
	{
		
{
			_case_begin_1b730598a:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1b7305715:;
	};
}

inline void _1b7307c34_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e687bc_StructIns> _6035_t) {
	{
		
{
			_case_begin_1b730942d:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1b7309142:;
	};
}

inline void _1b730e785_pushLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2ed8034_Var> _6035_t) {
	{
		
{
			_case_begin_1b73133c1:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1b73132e4:;
	};
}



inline void _1b39b04ab_setReferencesAsLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2e7408b_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _1b2e74674_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1b2e74982_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b72e9c59:;
					{
						jule::Ptr<_1b2e8033e_Trait> _8225_t = _7921_ref.cast_ptr<_1b2e8033e_Trait>(&__jule_any_type10);;
						if (_1b72eb156_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1b72e9286;
						};
						_1b72eb4a8_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b72ed17a:;
							if (it != expr_end) {
								jule::Ptr<_1b2e6e85b_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b72eba19:;
										if (it != expr_end) {
											jule::Ptr<_1b2e71132_FnIns> _8833_mins = *it;
											{
												if (_1b7300d92_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1b72eba19;
												};
												_1b7301986_pushLive(_self_, _8833_mins);
												_1b39b04ab_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1b72eba19:;
											++it;
											goto _iter_begin_1b72eba19;
										}
										_iter_end_1b72eba19:;
									};
								}
								_iter_next_1b72ed17a:;
								++it;
								goto _iter_begin_1b72ed17a;
							}
							_iter_end_1b72ed17a:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b72e9cc0:;
					{
						jule::Ptr<_1b2e71132_FnIns> _9725_f = _7921_ref.cast_ptr<_1b2e71132_FnIns>(&__jule_any_type7);;
						if (_1b7300d92_isLive(_self_, &(_9725_f))) {
							goto _match_end_1b72e9de1;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1b7308949_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1b7307c34_pushLive(_self_, _9725_f.get()._field_Owner);
								_1b39b04ab_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1b7301986_pushLive(_self_, _9725_f);
						_1b39b04ab_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b72ea001:;
					{
						jule::Ptr<_1b2ed8034_Var> _11025_v = _7921_ref.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8);;
						if (_1b730e433_isLive(_self_, &(_11025_v))) {
							goto _match_end_1b72e9de1;
						};
						_1b730e785_pushLive(_self_, _11025_v);
						_1b39b04ab_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b72ea067:;
					{
						jule::Ptr<_1b2e687bc_StructIns> _11725_s = _7921_ref.cast_ptr<_1b2e687bc_StructIns>(&__jule_any_type9);;
						if (_1b7308949_isLive(_self_, &(_11725_s))) {
							goto _match_end_1b72e9de1;
						};
						_1b7307c34_pushLive(_self_, _11725_s);
						_1b39b04ab_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b7316506:;
							if (it != expr_end) {
								jule::Ptr<_1b2e6e85b_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b7316bee:;
										if (it != expr_end) {
											jule::Ptr<_1b2e71132_FnIns> _12433_mins = *it;
											{
												if (_1b7300d92_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1b7316bee;
												};
												_1b7301986_pushLive(_self_, _12433_mins);
												_1b39b04ab_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1b7316bee:;
											++it;
											goto _iter_begin_1b7316bee;
										}
										_iter_end_1b7316bee:;
									};
								}
								_iter_next_1b7316506:;
								++it;
								goto _iter_begin_1b7316506;
							}
							_iter_end_1b7316506:;
						};
					}
				}
				_match_end_1b72e9de1:;
			};
		}
	_iter_next_1b72e9286:;
	}
	_iter_end_1b72e9286:;;
}



inline void _1b39b0731_inits(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2eae6ae_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e9660:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7319262:;
					if (it != expr_end) {
						jule::Ptr<_1b2e6e85b_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1b2e71132_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1b39b04ab_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1b7319262:;
						++it;
						goto _iter_begin_1b7319262;
					}
					_iter_end_1b7319262:;
				};
			}
			_iter_next_1b72e9660:;
			++it;
			goto _iter_begin_1b72e9660;
		}
		_iter_end_1b72e9660:;
	};
}



inline void _1b39b09a6_collectLivePackage(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2eae6ae_Package>* _14843_pkg) {
	_1b39b0731_inits(_self_, _14843_pkg);
	if (_20b946c79_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b731b62c:;
			if (it != expr_end) {
				jule::Ptr<_1b302ac69_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b731be57:;
						if (it != expr_end) {
							jule::Ptr<_1b2e6e85b_Fn> _15529_f = *it;
							{
								if (_1b39b29b9_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1b2e71132_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1b39b04ab_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1b731be57:;
							++it;
							goto _iter_begin_1b731be57;
						}
						_iter_end_1b731be57:;
					};
				}
				_iter_next_1b731b62c:;
				++it;
				goto _iter_begin_1b731b62c;
			}
			_iter_end_1b731b62c:;
		};
	};
}



inline void _1b39b0b82_collectLive(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b731b5d8:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1b39b09a6_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1b731b5d8:;
			++it;
			goto _iter_begin_1b731b5d8;
		}
		_iter_end_1b731b5d8:;
	};
	_1b39b09a6_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1b2e6e85b_Fn> _17517_main = _1b2eb0e63_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1b2e71132_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1b39b04ab_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1b39b0e07_removeDeadGlobals(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _18142_vars) {
	jule::I32 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1b2ed8034_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1b730e433_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1b73219a6;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1b73219a6:;
	}
	_iter_end_1b73219a6:;;
}



inline void _1b39b117c_removeDeadFns(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>* _19338_funcs) {
	jule::I32 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1b2e6e85b_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I32 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1b2e71132_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1b7300d92_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1b7324de9;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1b7324de9:;
			}
			_iter_end_1b7324de9:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1b7323304;
			};
			(_19417_i)++;
		}
	_iter_next_1b7323304:;
	}
	_iter_end_1b7323304:;;
}



inline void _1b39b1402_removeDeadStructs(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2e683e3_Struct>>* _21442_structs) {
	jule::I32 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1b2e683e3_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I32 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1b2e687bc_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1b39b117c_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1b7308949_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1b7328ded;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1b7328ded:;
			}
			_iter_end_1b7328ded:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1b7327ccb;
			};
			(_21517_i)++;
		}
	_iter_next_1b7327ccb:;
	}
	_iter_end_1b7327ccb:;;
}



inline void _1b39b1677_removeDeadTraits(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2e8033e_Trait>>* _23641_traits) {
	jule::I32 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1b2e8033e_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1b72eb156_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1b732b5c6;
			};
			jule::I32 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1b2e683e3_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1b732d331;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1b732d331:;
			}
			_iter_end_1b732d331:;;
			(_23717_i)++;
		}
	_iter_next_1b732b5c6:;
	}
	_iter_end_1b732b5c6:;;
}



inline void _1b39b18ec_removeDeadsFile(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b302ac69_SymbolTable>* _25740_file) {
	_1b39b117c_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1b39b1402_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1b39b1677_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1b39b0e07_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1b39b1b72_removeDeadsPackage(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_, jule::Ptr<_1b2eae6ae_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7332b71:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _26521_file = *it;
			{
				_1b39b18ec_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1b7332b71:;
			++it;
			goto _iter_begin_1b7332b71;
		}
		_iter_end_1b7332b71:;
	};
}



inline void _1b39b1d4d_removeDeads(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7333a40:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1b39b1b72_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1b7333a40:;
			++it;
			goto _iter_begin_1b7333a40;
		}
		_iter_end_1b7333a40:;
	};
	_1b39b1b72_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1b39b2029_elimanate(jule::Ptr<_1b397cd80_ObjectDeadCode> _self_) {
	_1b39b0b82_collectLive(_self_);
	_1b39b1d4d_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b397cd80_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1b345d553_IR__jule_tuple_s_1cac0bec6_Log static__1b3192b4a_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1b345d553_IR__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	jule::Ptr<_1b37a5db7_JuleImporter> _2817_importer = static__1b32cea34_New(_1b34b270b_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1b2e172e8_Ast>> _2918_files;;
	jule::Slice<_1cac0bec6_Log> _2929_logs;;
	({
		__jule_tuple_sx_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b344752b_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2eae6ae_Package> _3918_pkg;;
	({
		__jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b3078e93_AnalyzePackage(_2918_files, jule::Trait<_1b2ea8ad7_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1b345d553_IR> _4417_ir = jule::new_ptr<_1b345d553_IR>(_1b345d553_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1b33230e9_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1b34a1244_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b3194135_appendStructs(_1b345d553_IR* _self_, jule::Ptr<_1b2eae6ae_Package>* _5633_p, jule::Slice<jule::Ptr<_1b2e683e3_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b35b3:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72b3dee:;
					if (it != expr_end) {
						jule::Ptr<_1b2e683e3_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_1b72b3dee:;
						++it;
						goto _iter_begin_1b72b3dee;
					}
					_iter_end_1b72b3dee:;
				};
			}
			_iter_next_1b72b35b3:;
			++it;
			goto _iter_begin_1b72b35b3;
		}
		_iter_end_1b72b35b3:;
	};
}



inline jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _1b31a0e77_GetAllStructures(_1b345d553_IR* _self_) {
	jule::Slice<jule::Ptr<_1b2e683e3_Struct>> _6917_buffer = nullptr;;
	_1b3194135_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b3c9a:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1b3194135_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1b72b3c9a:;
			++it;
			goto _iter_begin_1b72b3c9a;
		}
		_iter_end_1b72b3c9a:;
	};
	return _6917_buffer;;
}



inline void _1b31bdd85_appendGlobals(_1b345d553_IR* _self_, jule::Ptr<_1b2eae6ae_Package>* _7933_p, jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b64ea:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72b6d25:;
					if (it != expr_end) {
						jule::Ptr<_1b2ed8034_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_1b72b6d25:;
						++it;
						goto _iter_begin_1b72b6d25;
					}
					_iter_end_1b72b6d25:;
				};
			}
			_iter_next_1b72b64ea:;
			++it;
			goto _iter_begin_1b72b64ea;
		}
		_iter_end_1b72b64ea:;
	};
}



inline jule::Slice<jule::Ptr<_1b2ed8034_Var>> _1b31be89c_GetAllGlobals(_1b345d553_IR* _self_) {
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _9217_buffer = nullptr;;
	_1b31bdd85_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b871c:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1b31bdd85_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1b72b871c:;
			++it;
			goto _iter_begin_1b72b871c;
		}
		_iter_end_1b72b871c:;
	};
	return _9217_buffer;;
}



inline void _1b31c3d13_Order(_1b345d553_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1b31a0e77_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1b31be89c_GetAllGlobals(_self_);
	static__1b34e7015_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1b36761e9_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1b345d553_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b2e3db9e_Str(_1b2e687bc_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b559ba79:;
			if (it != expr_end) {
				jule::Ptr<_1b305a2e8_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1b305be21_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1b559ba79:;
				++it;
				goto _iter_begin_1b559ba79;
			}
			_iter_end_1b559ba79:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1b2e3ed04_Equal(jule::Ptr<_1b2e687bc_StructIns> _self_, jule::Ptr<_1b305ba25_TypeKind> _26521_other) {
	jule::Ptr<_1b2e687bc_StructIns> _26613_s = _1b306030e_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I32 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1b305c22e_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b55a0143:;
	}
	_iter_end_1b55a0143:;;
	return true;;
}



inline jule::Bool _1b2e42158_Same(_1b2e687bc_StructIns* _self_, jule::Ptr<_1b2e687bc_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55a24ca:;
		if (it != expr_end) {
			jule::I32 _29713_i = it - expr->begin();
			jule::Ptr<_1b305a2e8_InsGeneric> *_29716_g = it;
			{
				if ((!(_1b305c22e_Equal((*(_29716_g)).get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1b55a24ca:;
			++it;
			_29713_i++;
			goto _iter_begin_1b55a24ca;
		}
		_iter_end_1b55a24ca:;
	};
	return true;;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2e43478_FindMethod(_1b2e687bc_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55a3da0:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1b55a3da0:;
			++it;
			goto _iter_begin_1b55a3da0;
		}
		_iter_end_1b55a3da0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e685d0_FieldIns> _1b2e253e4_FindField(_1b2e687bc_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55a506b:;
		if (it != expr_end) {
			jule::Ptr<_1b2e685d0_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1b55a506b:;
			++it;
			goto _iter_begin_1b55a506b;
		}
		_iter_end_1b55a506b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2e31411_FindStatic(_1b2e687bc_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55a55dd:;
		if (it != expr_end) {
			jule::Ptr<_1b2ed8034_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1b55a55dd:;
			++it;
			goto _iter_begin_1b55a55dd;
		}
		_iter_end_1b55a55dd:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2e687bc_StructIns _Src) {
	_Stream << _1b2e3db9e_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1cac7b584_Cmd> static__1cac7b9d5_New(jule::Str _2619_path) {
	return jule::new_ptr<_1cac7b584_Cmd>(_1cac7b584_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1cac7bbb1_Spawn(_1cac7b584_Cmd* _self_) {
	({
		auto except = _1cac9c2ca_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1cac7bd8c_Kill(_1cac7b584_Cmd* _self_) {
	({
		auto except = _1cac9c4a6_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1cac7c101_Wait(_1cac7b584_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _1cac9c71a_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1cac9c2ca_spawn(_1cac7b584_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U32>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U32>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U32>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	_5117_args=jule::append(_5117_args,(*(_self_))._field_Args);
	jule::Slice<jule::U16> _5413_argv = _20c7b5575_Utf16FromStr(_1cac9cd25_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _1cac9d1cc_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_1cac9e3ba_getLastProcessError(), &__jule_any_type133));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1cac9c4a6_kill(_1cac7b584_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:73:13"));;
	};
	if (TerminateProcess((*(_self_))._field_attrs._field_hProcess, 0LL)) {
		(*(_self_))._field_attrs._field_hProcess=nullptr;
		(*(_self_))._field_attrs._field_hThread=nullptr;
		return jule::VoidExceptional();;
	};
	return jule::VoidExceptional(jule::Any(-1LL, &__jule_any_type134));
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1cac9c71a_wait(_1cac7b584_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_20c7eb37a_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_20c7eb37a_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(static_cast<jule::I32>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1cac7b584_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _20c7c8d3b_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _20c7c90d3_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _20c7c9402_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42687d0:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_1b42687d0:;
			++it;
			goto _iter_begin_1b42687d0;
		}
		_iter_end_1b42687d0:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4268db8:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1b426a77c:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1b426a64a:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _20c7c90d3_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_1b426a2a4:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_1b426a1d8:;
				};
			}
			_iter_next_1b4268db8:;
			++it;
			goto _iter_begin_1b4268db8;
		}
		_iter_end_1b4268db8:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _20c7c9699_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I32 _12113_n = 0LL;;
	jule::I32 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1b427030e:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1b426e8d5:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_20c7c8d3b_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1b426edbe:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1b426ed58:;
			};
			(_12113_n)++;
		}
	_iter_next_1b426d939:;
	}
	_iter_end_1b426d939:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _20c7c99a7_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1b42734ee:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1b4273565:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _20c7c90d3_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_1b426e5e9:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _20c7b5575_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b427d949:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1b427d949;
				};
				_2113_buff=_20c7c99a7_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_1b427d949:;
			++it;
			goto _iter_begin_1b427d949;
		}
		_iter_end_1b427d949:;
	};
	return _20c7c99a7_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _20c7b904b_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4280c7b:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_1b4280c7b;
				};
			}
			_iter_next_1b4280c7b:;
			++it;
			_399_i++;
			goto _iter_begin_1b4280c7b;
		}
		_iter_end_1b4280c7b:;
	};
	return static_cast<jule::Str>(_20c7c9699_Decode(_3813_codePage));;
}



inline jule::Str _20c7b4552_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I32 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_20c7c9699_Decode(_5513_codePage));;
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_1b4281d15:;
	}
	_iter_end_1b4281d15:;;
	return jule::Str();;
}



inline jule::I32 _20b9d1bb0_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _20c7eb0d3_GetStdHandle(jule::Uintptr _6517_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6517_stdh))));;
}



inline jule::Bool _20c7eb37a_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _20c7eb6bb_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return static_cast<jule::I32>(_wstat(((wchar_t*)(_6917_path)), _6933_stat));;
}



inline jule::I32 _20c7ebaa6_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return static_cast<jule::I32>(_wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode));;
}



inline jule::U32 _20c7ebca4_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _20c7ec0e5_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff))));;
}



inline jule::Bool _20c7ec634_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _20c7ec8cb_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _20c7ecb73_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _20c7ed107_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1105_buff, jule::U16** _11017_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1105_buff)), ((wchar_t**)(_11017_fname))));;
}



inline jule::Bool _20c7ed448_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)((&((*(_11540_mode)))))));;
}



inline jule::Bool _20c7eda0e_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _20c7ee009_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::I32 _12554_toWrite, jule::I32* _12610_written, void* _12624_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_12610_written)))), _12624_reserved);;
}



inline jule::Bool _20c7ee48d_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::I32 _13357_toRead, jule::I32* _13410_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)((&((*(_13410_readed)))))), nullptr);;
}



inline jule::Uintptr _20c7ee9cc_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data))));;
}



inline jule::I32 _20c7eed1d_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return static_cast<jule::I32>(FindNextFileW(((HANDLE)(_15024_h)), _15039_data));;
}



inline jule::I32 _20c8000b5_FindClose(jule::Uintptr _15514_h) {
	return static_cast<jule::I32>(FindClose(((HANDLE)(_15514_h))));;
}



inline jule::I32 _20c801ade_Seek(jule::I32 _159_handle, jule::I32 _1522_offset, jule::I32 _1535_origin) {
	return static_cast<jule::I32>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I32 _20c801ec9_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _20c80234d_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _20c802738_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _20c802947_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _20bae0780_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _20ba640e9_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _20c95b1dd_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _20c95a0bb_first[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_20c95a64e_acceptRange _1969_accept = _20c95a95c_acceptRanges[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _20c95b50c_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _20c95a0bb_first[static_cast<jule::I32>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2429_sz = static_cast<jule::I32>((_2349_x & 7LLU));;
	_20c95a64e_acceptRange _2439_accept = _20c95a95c_acceptRanges[static_cast<jule::I32>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _20c95b7a4_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2809_end = _27619_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_20c95d179_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1b43360a6;
			};
		}
	_iter_next_1b43360a6:;
	}
	_iter_end_1b43360a6:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _20c95bce3_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1b433d047:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1b433c7d8:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1b433c860:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1b433c8d7:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1b433c95e:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1b433cbb2:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1b433c761:;
			{
				return -1LL;;
			}
		}
		_match_end_1b433c695:;
	};
}



inline jule::I32 _20c95c211_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1b4340b71:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1b434335a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1b43433c1:;
			{
				_37434_r=65533LL;
				goto _case_begin_1b4343190;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1b4343190:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1b434080d:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1b43407a8:;
	};
}



inline jule::Slice<jule::U8> _20c95c552_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _20c95c893_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _20c95c893_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1b43497c3:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1b434b4c8:;
			{
				_41242_r=128LL;
				goto _case_begin_1b4349b14;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1b4349b14:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1b4349174:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1b434911e:;
	};
}



inline jule::I32 _20c95cdd2_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1b4354a20;
			};
			jule::U8 _48213_x = _20c95a0bb_first[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1b4354a20;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1b4354a20;
			};
			_20c95a64e_acceptRange _49213_accept = _20c95a95c_acceptRanges[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1b4354a20:;
	}
	_iter_end_1b4354a20:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20c95d179_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _20ca03d79_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _20c7ebca4_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1b437879c:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b437a66c:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b437a6d3:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1b437a749:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1b4378b21:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1b4378abb:;
	};
}



inline jule::Slice<jule::Str> _20ca07de4_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _20ca08367_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _20ca08c2a_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _20ca08c2a_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _20c7ec0e5_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_20ca03d79_getLastOsErrorWindows(), &__jule_any_type135));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _20c7b4552_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _1cab01b24_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1cab61d93__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1cab6a1cb_isExcludingLatin(_1cab0ad09_Letter, _7613_r);;
}



inline jule::Bool _1cab695e8_is16(jule::Slice<_1cab67a36_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b49ce6e9:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_1cab67a36_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b49ce6e9:;
				++it;
				_19313_i++;
				goto _iter_begin_1b49ce6e9;
			}
			_iter_end_1b49ce6e9:;
		};
		return false;;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1cab67a36_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1b49ce1bb:;
	}
	_iter_end_1b49ce1bb:;;
	return false;;
}



inline jule::Bool _1cab69939_is32(jule::Slice<_1cab67ea9_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b49d5a85:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_1cab67ea9_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b49d5a85:;
				++it;
				_23013_i++;
				goto _iter_begin_1b49d5a85;
			}
			_iter_end_1b49d5a85:;
		};
		return false;;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1cab67ea9_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1b49d28c8:;
	}
	_iter_end_1b49d28c8:;;
	return false;;
}



inline jule::Bool _1cab6a1cb_isExcludingLatin(jule::Ptr<_1cab6842c_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1cab67a36_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I32 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1cab695e8_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1cab67ea9_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1cab69939_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1cab6a473_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1cab61d93__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1cab6a1cb_isExcludingLatin(_1cab12360_Upper, _29512_r);;
}



inline jule::I32 _1cab7e8b6_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49e9e1d:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1b49e9e1d:;
			++it;
			_399_i++;
			goto _iter_begin_1b49e9e1d;
		}
		_iter_end_1b49e9e1d:;
	};
	return -1LL;;
}



inline jule::I32 _1cab7ea3c_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1b49ec30a:;
	}
	_iter_end_1b49ec30a:;;
	return -1LL;;
}



inline jule::I32 _1cab6e103_FindByteStr(jule::Str* _6417_s, jule::U8 _6425_b) {
	return static_cast<jule::I32>(_1cab7e8b6_FindByte(_20bae0780_Stobs(_6417_s), _6425_b));;
}



inline jule::I32 _1cab6e444_FindLastByteStr(jule::Str* _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I32>(_1cab7ea3c_FindLastByte(_20bae0780_Stobs(_6921_s), _6929_b));;
}



inline jule::Str _1caad032d_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1b4a11143:;
	}
	_iter_end_1b4a11143:;;
	return _2013_ss;;
}



inline jule::Bool _1cab6e5a9_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_3213_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1b4a1419b:;
	}
	_iter_end_1b4a1419b:;;
	return true;;
}



inline jule::Bool _1cab6e6db_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1cab6e5a9_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1cab6e81d_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1b4a161c0:;
	}
	_iter_end_1b4a161c0:;;
	return true;;
}



inline jule::Bool _1cab6e950_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1cab6e81d_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _1cab6ec4c_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1cab6e5a9_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1b4a1a2a1:;
	}
	_iter_end_1b4a1a2a1:;;
	return -1LL;;
}



inline jule::I32 _1cab70588_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I32 _10017_k = _9413_j;;
			jule::I32 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10017_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1b4a1c803;
					};
				}
			_iter_next_1b4a1e063:;
			}
			_iter_end_1b4a1e063:;;
			return _9413_j;;
		}
	_iter_next_1b4a1c803:;
	}
	_iter_end_1b4a1c803:;;
	return -1LL;;
}



inline jule::I32 _1cab708c9_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_1cab70588_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _1cab71b72_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I32 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1b4a26961:;
	}
	_iter_end_1b4a26961:;;
	return -1LL;;
}



inline jule::I32 _1cab724ad_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_1cab6e444_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _1cab732c2_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _20bae0780_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _20bae0780_Stobs(&(_22820_runes));;
	jule::I32 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I32 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1cab71b72_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1b4a2c1e7:;
	}
	_iter_end_1b4a2c1e7:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1cab739ed_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _27613_j = _1cab6ec4c_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1b4a335e9;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I32>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1b4a335e9:;
	}
	_iter_end_1b4a335e9:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _1cab73d3e_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1cab6ec4c_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1cab74812_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1cab732c2_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _1cab74b53_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _31613_n = 0LL;;
	jule::I32 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I32 _31913_j = _1cab6ec4c_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1b4a38ba4;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I32>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1b4a38ba4:;
	}
	_iter_end_1b4a38ba4:;;
	return _31613_n;;
}



inline jule::Str _1cab750d7_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3379_m = _1cab74b53_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I32 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _34813_j = _1cab6ec4c_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1b4a3c9cc;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I32>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1b4a3c9cc:;
	}
	_iter_end_1b4a3c9cc:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _1cab7214a_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I32 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1cab71b72_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1b4a405e5:;
	}
	_iter_end_1b4a405e5:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1cab76193_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _20bae0780_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _20bae0780_Stobs(&(_40321_cutset));;
	_1cab7214a_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1cab7644b_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I32 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b7a4_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1cab71b72_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1b4a44c59:;
	}
	_iter_end_1b4a44c59:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1cab76acd_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _20bae0780_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _20bae0780_Stobs(&(_43417_cutset));;
	_1cab7214a_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1cab7644b_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _20c9d1582_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _20c9d16b4_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _20c9d17e6_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I32 _20c9d1d13_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_20c9d16b4_isSlash(_8218_path[0LL]))) || (!(_20c9d16b4_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20c9d20aa_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20c9d20aa_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I32>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_20c9d17e6_toUpper(_9613_p2[0LL]) == 'U')) && (_20c9d17e6_toUpper(_9613_p2[1LL]) == 'N')) && (_20c9d17e6_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20c9d20aa_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20c9d20aa_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I32>(_8218_path.len());;
		};
	};
	return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _20c9d20aa_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a6198a:;
		if (it != expr_end) {
			jule::I32 _1209_i = it - expr->begin();
			{
				if (_20c9d16b4_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b4a6198a:;
			++it;
			_1209_i++;
			goto _iter_begin_1b4a6198a;
		}
		_iter_end_1b4a6198a:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _20c9d2352_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _20c7b5575_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_13113_n), static_cast<jule::I32>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_20c7ed107_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _20c7b904b_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I32>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1b4a615e4:;
	}
	_iter_end_1b4a615e4:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _20c9d26c6_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20c9d2352_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1cab782a5_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _20c9d296d_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a68aa2:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1b4a697b7:;
					}
					else if (_20c9d16b4_isSlash(_16113_lastChar)) {
						_case_begin_1b4a699d7:;
						{
							while (((_16217_e.len() > 0LL) && _20c9d16b4_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1b4a6a389:;
							}
							_iter_end_1b4a6a389:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1b4a69487:;
					}
					else {
						_case_begin_1b4a69421:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1b4a69355:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1b4a68aa2:;
			++it;
			goto _iter_begin_1b4a68aa2;
		}
		_iter_end_1b4a68aa2:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _1cab782a5_Clean(_16013_s);;
}



inline jule::Str _1cab782a5_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I32 _1109_volLen = _20c9d1d13_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _20c9d1582_IsPathSep(_1099_originalPath[0LL])) && _20c9d1582_IsPathSep(_1099_originalPath[1LL]))) {
			return _1cab78838_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _20c9d1582_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1269_n = _10814_path.len();;
	_1cab774e6_lazyBuff _12713_out = _1cab774e6_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I32 _13214_r = 0;;
	jule::I32 _13221_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_1cab77bde_append(&_12713_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_20c9d1582_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1b4a738e2:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _20c9d1582_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1b4a76560:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _20c9d1582_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1b4a765c6:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1b4a794a8:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_20c9d1582_IsPathSep(static_cast<jule::U8>(_1cab77969_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1b4a79cc2:;
									}
									_iter_end_1b4a79cc2:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1b4a7951e:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1cab77bde_append(&_12713_out, 92LLU);
									};
									_1cab77bde_append(&_12713_out, '.');
									_1cab77bde_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1b4a79123:;
						};
					}
				}
				else {
					_case_begin_1b4a71da7:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1cab77bde_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I32 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_20c9d1582_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_1cab77bde_append(&_12713_out, '.');
										_1cab77bde_append(&_12713_out, 92LLU);
										goto _iter_end_1b4a73a46;
									};
								}
							_iter_next_1b4a73a46:;
							}
							_iter_end_1b4a73a46:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_20c9d1582_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1cab77bde_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1b4a733a3:;
						}
						_iter_end_1b4a733a3:;;
					}
				}
				_match_end_1b4a71b76:;
			};
		}
	_iter_next_1b4a71d0d:;
	}
	_iter_end_1b4a71d0d:;;
	if ((_12713_out._field_w == 0LL)) {
		_1cab77bde_append(&_12713_out, '.');
	};
	return _1cab78838_FromSlash(_1cab77e53_string(&_12713_out));;
}



inline jule::Str _1cab78838_FromSlash(jule::Str _21114_path) {
	;
	return _1cab750d7_Replace(_21114_path, jule::Str("/", 1), static_cast<jule::Str>(92LL), -1LL);;
}



inline jule::Str _1cab78b57_Join(jule::Slice<jule::Str> _2259_elem) {
	return _20c9d296d_join(_2259_elem);;
}



inline jule::Str _1cab78dee_Ext(jule::Str _2308_path) {
	jule::I32 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_20c9d1582_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1b4a7d952:;
	}
	_iter_end_1b4a7d952:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1cab79196_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20c9d26c6_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _1cab7943d_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _20c9d1582_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1b4a8104d:;
	}
	_iter_end_1b4a8104d:;;
	(_25413_path).mut_slice(_1cab79a59_VolumeName(_25413_path).len());;
	jule::I32 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_20c9d1582_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1b4a82868:;
	}
	_iter_end_1b4a82868:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(92LL);;
	};
	return _25413_path;;
}



inline jule::Str _1cab797b2_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1cab79a59_VolumeName(_2858_path);;
	jule::I32 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_20c9d1582_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1b4a84b89:;
	}
	_iter_end_1b4a84b89:;;
	jule::Str _2919_dir = _1cab782a5_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _1cab79a59_VolumeName(jule::Str _30315_path) {
	return _1cab78838_FromSlash(_30315_path.slice(0LL, _20c9d1d13_volumeNameLen(_30315_path)));;
}



inline jule::I32 _20ba643a2_getLastFsError(void) {
	jule::I32 _729_err = _20b9d1bb0_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b4a99d03:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b4a99286:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1b4a996e8:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1b4a9975e:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b4a997c5:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b4a9983b:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1b4a99e24:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b4a99e8a:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b4a9a001:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b4a9a067:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b4a9a0de:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b4a9a166:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b4a9a1dd:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b4a9a265:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b4a9a2dc:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1b4a9a364:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b4a9a3db:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b4a9a463:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b4a9a4da:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b4a9a562:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1b4a9a5d9:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b4a9a661:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b4a9a6d8:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b4a9a760:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b4a9a7d7:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1b4a9a85e:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1b4a9a8d6:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1b4a9a95d:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1b4a99550:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1b4a994ea:;
	};
}



inline jule::Bool _20c8e1629_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _20c7ea81e_STDIN) || (_11320_handle == _20c7eaad8_STDOUT)) || (_11320_handle == _20c7ead6e_STDERR));;
}



inline void _1cac9ca7d_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I32 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1b4b19b0e:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1b4b19b86:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_1b4b19a21:;
			};
		}
	_iter_next_1b4b159c8:;
	}
	_iter_end_1b4b159c8:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I32 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_1b4b1d261:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1b4b1c837:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_1b4b1d97b:;
						}
						_iter_end_1b4b1d97b:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_1b4b1cbcd:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_1b4b1cb78:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_1b4b1c062:;
	}
	_iter_end_1b4b1c062:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_1b4b1cb34:;
		}
		_iter_end_1b4b1cb34:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _1cac9cd25_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b20274:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_1cac9ca7d_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_1b4b20274:;
			++it;
			goto _iter_begin_1b4b20274;
		}
		_iter_end_1b4b20274:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1cac9d1cc_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _20c7c9402_Encode(static_cast<jule::Slice<jule::I32>>(jule::Str("\x00\x00", 2))));;
	};
	jule::I32 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b21e46:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_1cab6e103_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type133));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_1b4b21e46:;
			++it;
			goto _iter_begin_1b4b21e46;
		}
		_iter_end_1b4b21e46:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b235da:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1b4b23e7b:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_20c7c99a7_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_1b4b23e7b:;
						++it;
						goto _iter_begin_1b4b23e7b;
					}
					_iter_end_1b4b23e7b:;
				};
				_19013_b=_20c7c99a7_AppendRune(_19013_b, 0LL);
			}
			_iter_next_1b4b235da:;
			++it;
			goto _iter_begin_1b4b235da;
		}
		_iter_end_1b4b235da:;
	};
	_19013_b=_20c7c99a7_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I32 _1cac9e1ab_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1b4b23ac4:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1b4b24ca1:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1b4b24bb3:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1b4b22331:;
	};
}



inline jule::I32 _1cac9e3ba_getLastProcessError(void) {
	return _1cac9e1ab_processErrorFromCode(static_cast<jule::I32>(static_cast<jule::I32>(_20c7ebca4_GetLastError())));;
}



inline void _1cac9eb6d_Exit(jule::I32 _129_code) {
	_20c802947_Exit(_129_code);
}



inline jule::Str _1cac9ed6b_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1cabeec11_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1cabeee31_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1cab81bb5_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b57894:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1b4b57894:;
			++it;
			goto _iter_begin_1b4b57894;
		}
		_iter_end_1b4b57894:;
	};
	return false;;
}



inline jule::Bool _1cac001c8_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1cabeceb7_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b58202:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1b4b58202:;
			++it;
			goto _iter_begin_1b4b58202;
		}
		_iter_end_1b4b58202:;
	};
	{
		auto expr = &(_1cabeeb12_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b59511:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1b4b59511:;
			++it;
			goto _iter_begin_1b4b59511;
		}
		_iter_end_1b4b59511:;
	};
	return false;;
}



inline jule::Str _1cac0c416_Logf(jule::Str _3039_fmt, jule::Slice<jule::Any> _30322_args) {
	return _1cac0cd2e_applyFmt(_3039_fmt, _30322_args);;
}



inline jule::Str _1cac0c702_argToStr(jule::Any _30713_arg) {
	{
		auto &_match_expr{ _30713_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b4b5a963:;
			{
				return _30713_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b4b5a9c9:;
			{
				return static_cast<jule::Str>(_30713_arg.cast<jule::U8>(&__jule_any_type136));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b4b5a754:;
			{
				return static_cast<jule::Str>(_30713_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1b4b5a325:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1b4b5a138:;
	};
}



inline jule::I32 _1cac0c999_findNextFmt(jule::Str _32016_fmt) {
	{
		auto expr = &(_32016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b5b18e:;
		if (it != expr_end) {
			jule::I32 _3219_i = it - expr->begin();
			jule::U8 *_32112_b = it;
			{
				if (((*(_32112_b)) == '@')) {
					return _3219_i;;
				};
			}
			_iter_next_1b4b5b18e:;
			++it;
			_3219_i++;
			goto _iter_begin_1b4b5b18e;
		}
		_iter_end_1b4b5b18e:;
	};
	return -1LL;;
}



inline jule::Str _1cac0cd2e_applyFmt(jule::Str _32917_fmt, jule::Slice<jule::Any> _32927_args) {
	jule::Str _33013_s = jule::Str();;
	{
		auto expr = &(_32927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b5cd94:;
		if (it != expr_end) {
			jule::Any *_33112_arg = it;
			{
				jule::I32 _33213_i = _1cac0c999_findNextFmt(_32917_fmt);;
				if ((_33213_i == -1LL)) {
					goto _iter_end_1b4b5cd94;
				};
				_33013_s+=_32917_fmt.slice(0LL, _33213_i);
				_33013_s+=_1cac0c702_argToStr((*(_33112_arg)));
				(_32917_fmt).mut_slice((_33213_i + 1LL));;
			}
			_iter_next_1b4b5cd94:;
			++it;
			goto _iter_begin_1b4b5cd94;
		}
		_iter_end_1b4b5cd94:;
	};
	_33013_s+=_32917_fmt;
	return _33013_s;;
}



inline jule::Bool _1cac0dda7_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _1cac102d7_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1cac10590_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1cac10837_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1cac10b56_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1cac10ded_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1cac11195_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1cac1143c_IsUnix(jule::Str _5511_os) {
	return (_1cac10590_IsDarwin(_5511_os) || _1cac10837_IsLinux(_5511_os));;
}



inline jule::Bool _1cac117b1_Is32Bit(jule::Str _5812_arch) {
	return _1cac10b56_IsI386(_5812_arch);;
}



inline jule::Bool _1cac11a58_Is64Bit(jule::Str _6112_arch) {
	return (_1cac10ded_IsAmd64(_6112_arch) || _1cac11195_IsArm64(_6112_arch));;
}



inline void _1cac1892d_init(void) {
	jule::Str _2513_path = _1cac9ed6b_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1cac37c6b_PathWd=({
			auto except = _20ca08367_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1cac36e79_PathExec=_1cab797b2_Dir(_2513_path);
		_1cac17344_PathStdlib=_1cab78b57_Join(jule::Slice<jule::Str>::make({_1cac36e79_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1cac37dd1_PathApi=_1cab78b57_Join(jule::Slice<jule::Str>::make({_1cac36e79_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1cb189266_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_1cb182627_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ba6d11:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_1b4ba6d11:;
			++it;
			goto _iter_begin_1b4ba6d11;
		}
		_iter_end_1b4ba6d11:;
	};
	return false;;
}



inline jule::Bool _1cb189552_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_1cb182968_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ba72a6:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_1b4ba72a6:;
			++it;
			goto _iter_begin_1b4ba72a6;
		}
		_iter_end_1b4ba72a6:;
	};
	return false;;
}



inline jule::Bool _1cb189b18_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _1cb189db0_IsRawStr(_34210_k)));;
}



inline jule::Bool _1cb189db0_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _1cb18a157_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _1cb18a773_IsBool(jule::Str _35511_k) {
	return (_35511_k.equal("true", 4) || _35511_k.equal("false", 5));;
}



inline jule::Bool _1cb18aa1a_IsFloat(jule::Str _35812_k) {
	if (_1cab6e6db_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _1cab74812_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _1cab74812_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1cb18acb2_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _1cb18b301_IsIgnoreIdent(jule::Str _38118_ident) {
	return _38118_ident.equal("_", 1);;
}



inline jule::Bool _1cb18b598_IsAnonIdent(jule::Str _38416_ident) {
	return _38416_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1cb18bad7_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_1cb18232a_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4bb0c0a:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_1b4bb0c0a:;
			++it;
			goto _iter_begin_1b4bb0c0a;
		}
		_iter_end_1b4bb0c0a:;
	};
	return false;;
}



inline jule::Bool _1cb18c038_IsLetter(jule::I32 _40713_r) {
	return _1cab01b24_IsLetter(_40713_r);;
}



inline jule::Bool _1cb18c577_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _1cb18c81e_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _1cb18cab6_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _1cb18cd5d_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1b4bb59bd:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1b4bb52e7:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1b4bb535d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b4bb5281:;
			{
				return false;;
			}
		}
		_match_end_1b4bb51b5:;
	};
}



inline jule::Bool _1cb18d105_IsAssign(jule::U32 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U32>(2LLU)) || (_45113_id == static_cast<jule::U32>(30LLU))) || (_45113_id == static_cast<jule::U32>(33LLU))) || (_45113_id == static_cast<jule::U32>(20LLU))) || (_45113_id == static_cast<jule::U32>(27LLU))) || (_45113_id == static_cast<jule::U32>(3LLU))) || (_45113_id == static_cast<jule::U32>(7LLU)));;
}



inline jule::Bool _1cb18d39c_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_1cb183062_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4bb8d23:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_1b4bb8d23:;
			++it;
			goto _iter_begin_1b4bb8d23;
		}
		_iter_end_1b4bb8d23:;
	};
	return false;;
}



inline jule::Bool _1cb18d644_IsAssignOp(jule::Str _47215_kind) {
	if (_1cb18d39c_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_1cb18335e_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4bba022:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_1b4bba022:;
			++it;
			goto _iter_begin_1b4bba022;
		}
		_iter_end_1b4bba022:;
	};
	return false;;
}



inline jule::Ptr<_1cb18dde7_File> _1cb190426_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1cb18dde7_File>(_1cb18dde7_File{._field_Path=_6315_path, });;
}



inline _1cac0bec6_Log _1cb191bb9_makeErr(jule::I32 _11112_row, jule::I32 _11122_col, jule::Ptr<_1cb18dde7_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_1cac0c416_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _1cb19204e_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4bc489a:;
		if (it != expr_end) {
			jule::I32 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1b4bc489a:;
			++it;
			_1259_i++;
			goto _iter_begin_1b4bc489a;
		}
		_iter_end_1b4bc489a:;
	};
	return true;;
}



inline jule::Str _1cb192390_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I32 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_1cb18c577_IsDecimal(_13913_b))))) {
				goto _iter_end_1b4bc82c7;
			};
		}
	_iter_next_1b4bc82c7:;
	}
	_iter_end_1b4bc82c7:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _1cb192725_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I32 _16728_i) {
	return _1cb192390_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _1cb192a66_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I32 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1cb18c577_IsDecimal(_17913_b)) {
					_case_begin_1b4bcb132:;
					{
						goto _iter_next_1b4bca4c7;
					}
				}
				else if (_1cb19431a_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_1b4bcb198:;
					{
						return _1cb192725_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_1b4bcb0bb:;
					{
						goto _iter_end_1b4bca4c7;
					}
				}
				_match_end_1b4bcb055:;
			};
		}
	_iter_next_1b4bca4c7:;
	}
	_iter_end_1b4bca4c7:;;
	return jule::Str();;
}



inline jule::Str _1cb192da7_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I32 _19236_i) {
	_19236_i+=2LL;
	return _1cb192390_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _1cb1931e8_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I32 _19735_i) {
	(_19735_i)++;
	return _1cb192390_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _1cb193649_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I32 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _1cb192390_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_1cb18c577_IsDecimal(_21213_b))))) {
				goto _iter_end_1b4bcd9b4;
			};
		}
	_iter_next_1b4bcd9b4:;
	}
	_iter_end_1b4bcd9b4:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _1cb1938e1_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1b4bd2930:;
					{
						__jule_func_result = _1cb193649_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1b4bd29a7:;
					{
						goto _iter_next_1b4bd1c3c;
					}
				}
				else if (_1cb193ec9_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_1b4bd2a2e:;
					{
						__jule_func_result = _1cb192390_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1cb18c577_IsDecimal(_23113_b)))) {
					_case_begin_1b4bd2aa6:;
					{
						goto _iter_end_1b4bd1c3c;
					}
				}
				_match_end_1b4bd2853:;
			};
		}
	_iter_next_1b4bd1c3c:;
	}
	_iter_end_1b4bd1c3c:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _1cb193b88_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1cb19204e_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_1cb18c81e_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_1b4bd4338;
			};
		}
	_iter_next_1b4bd4338:;
	}
	_iter_end_1b4bd4338:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _1cb193ec9_isFloatFmtE(jule::U8 _27216_b, jule::I32 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _1cb19431a_isFloatFmtP(jule::U8 _27616_b, jule::I32 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _1cb19465b_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I32 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1cb18c577_IsDecimal(_28713_b)) {
					_case_begin_1b4bda262:;
					{
						goto _iter_next_1b4bd9074;
					}
				}
				else if (_1cb19431a_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_1b4bda2c8:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1b4bda1eb:;
					{
						goto _iter_end_1b4bd9074;
					}
				}
				_match_end_1b4bda185:;
			};
		}
	_iter_next_1b4bd9074:;
	}
	_iter_end_1b4bd9074:;;
	return false;;
}



inline jule::Bool _1cb19499c_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I32 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_1b4bdbe56:;
			{
				goto _case_begin_1b4bdb780;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_1b4bdb780:;
			{
				goto _case_begin_1b4bdb7e6;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1b4bdb7e6:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b4bdb719:;
			{
				return true;;
			}
		}
		_match_end_1b4bdb64d:;
	};
}



inline jule::Bool _1cb194cdd_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I32 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_1b4bde255:;
			{
				goto _case_begin_1b4bdda90;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_1b4bdda90:;
			{
				goto _case_begin_1b4bddb06;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1b4bddb06:;
			{
				goto _case_begin_1b4bddb6c;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1b4bddb6c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b4bdd62d:;
			{
				return true;;
			}
		}
		_match_end_1b4bdd562:;
	};
}



inline jule::Str _1cb19523e_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I32 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1cb193649_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_1cb193ec9_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _1cb192390_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_1cb18cab6_IsOctal(_35013_b))))) {
				goto _iter_end_1b4be329d;
			};
		}
	_iter_next_1b4be329d:;
	}
	_iter_end_1b4be329d:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _1cb1954d6_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_1cb19499c_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_1b4be92b5:;
					{
						__jule_func_result = _1cb1931e8_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1cb194cdd_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_1b4be933c:;
					{
						__jule_func_result = _1cb192da7_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1cb19431a_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_1b4be93b4:;
					{
						__jule_func_result = _1cb192725_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1cb19465b_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_1b4be943b:;
					{
						__jule_func_result = _1cb192a66_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_1cb18cd5d_IsHex(_38313_b))))) {
					_case_begin_1b4be94b3:;
					{
						goto _iter_end_1b4be8506;
					}
				}
				_match_end_1b4be91c7:;
			};
		}
	_iter_next_1b4be8506:;
	}
	_iter_end_1b4be8506:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _1cb195827_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I32 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1cb18cd5d_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1b4bebb8b:;
	}
	_iter_end_1b4bebb8b:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _1cb195abe_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _1cb195827_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _1cb195d88_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _1cb195827_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _1cb196042_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _1cb195827_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _1cb1962c8_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1cb18cab6_IsOctal((*(_43716_txt))[1LL]))) || (!(_1cb18cab6_IsOctal((*(_43716_txt))[2LL])))) || (!(_1cb18cab6_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1cac0bec6_Log> _1cb19acc2_Lex(jule::Ptr<_1cb18dde7_File> _82612_f, jule::I32 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_1cb1969b0_lex _83113_lex = _1cb1969b0_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1cb199551_newLine(&_83113_lex);
	_1cb19754e_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I32 _1b187e558_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _1b18869d3_Len64(_6119_x)));;
}



inline jule::I32 _1b188048d_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_1b188112b_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _1b1880d84_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1b187eb63__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _1b188112b_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1b1880229__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _1b188673b_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _1b18869d3_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b1887693_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b1888d26_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _20c8a8657_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _20c8a8943_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _20c8a8bda_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _20c8a9009_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _20c8ab4e5_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b4d32574:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b188ce6d_IsInf(_4714_f, 0LL) || _1b188cc09_IsNaN(_4714_f)) {
			_case_begin_1b4d325eb:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1b4d32464:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b188d0a0_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _20c8a8bda_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20c8a9009_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1b188cac7_NaN(void) {
	return static_cast<jule::F64>(_20c8a9009_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1b188cc09_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1b188cd3b_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_20c8a9009_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_20c8a9009_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1b188ce6d_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b188d0a0_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b188e58a_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b188de6e_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b188cc09_IsNaN(_1118_x) || _1b188ce6d_IsInf(_1118_x, 1LL)) {
			_case_begin_1b2be3a97:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1b2be3b1e:;
			{
				return static_cast<jule::F64>(_1b188cac7_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1b2be3b96:;
			{
				return static_cast<jule::F64>(_1b188cd3b_Inf(-1LL));;
			}
		}
		_match_end_1b2be39cb:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I32 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20c8ab4e5_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1b188e58a_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_20c8a9009_F64FromBits(static_cast<jule::U64>((_20c8a8bda_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b189333b_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1b188e58a_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1b4e29e96:;
		}
		_iter_end_1b4e29e96:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1b189377b_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I32 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20c8ab4e5_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1b188de6e_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _20b97ed8e_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_1b18ba2ca_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1b18bc4b9_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1b18ba2ca_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1b18b9e01_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1b1c8ccc9:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_20c8a8657_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1b18b9e01_floatInfo>)((&(_20b981a72_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b1cabeb3:;
			{
				_8313_bits=static_cast<jule::U64>(_20c8a8bda_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1b18b9e01_floatInfo>)((&(_20c853b63_f64info))));
			}
		}
		else {
			_case_begin_1b1c85b6d:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1b1c845d9:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1b1939ca6:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1b1acac7c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1b1acbbb2:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1b1a6c5d1:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1b1a589a7:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b196da43:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1b1938c2d:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1b253e28e:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1b18bb6b6_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1b18bbd37_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1b18ba0dd_decimalSlice _13213_digs = _1b18ba0dd_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1b18c6c65_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b1a5b537:;
				{
					_8258_prec=static_cast<jule::I32>(_1b18bc4b9_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b1a5db77:;
				{
					_8258_prec=static_cast<jule::I32>(_1b18bc4b9_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1a5ec44:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1b1a5948b:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b1c95562:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1d82088:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1b1cd9a7e:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1b1c9ed0d:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b18c5abb_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b18c600b_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1b18ba40c_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1b18ba53e_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1b18ba40c_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _1b18b9e01_floatInfo* _18327_flt) {
	_1b18ca75d_decimal _18413_d = _1b18ca75d_decimal{};;
	_1b18cab37_assign(&_18413_d, _1835_mant);
	_1b18cadac_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_1b18ba0dd_decimalSlice _18713_digs = _1b18ba0dd_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1b18ba671_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1b18ba0dd_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b24251b9:;
				{
					_18233_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b1aa6bd1:;
				{
					_18233_prec=static_cast<jule::I32>(_1b18bc4b9_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b1c7d814:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1b1a9c127:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b2483942:;
				{
					_1b18cb62c_round(&_18413_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b2477bab:;
				{
					_1b18cb62c_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b248c8c4:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1b18cb62c_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1b233c697:;
		};
		_18713_digs=_1b18ba0dd_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1b18ba53e_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1b18ba53e_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1b18ba0dd_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b1b09b8a:;
			{
				return _1b18bab27_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b1d9b525:;
			{
				return _1b18bb0ab_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b1daa677:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1b18bab27_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1b18bb0ab_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_1b18bc4b9_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1b1add7c8:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1b18ba671_roundShortest(_1b18ca75d_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _1b18b9e01_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1b18ca75d_decimal _28713_upper = _1b18ca75d_decimal{};;
	_1b18cab37_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1b18cadac_shift(&_28713_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_1b18ca75d_decimal _30613_lower = _1b18ca75d_decimal{};;
	_1b18cab37_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1b18cadac_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1b19402d9;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1b1e4e8e7:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1b1e4e95d:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1b1e50d5a:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1b1e4b6b3:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1b2242ba7:;
					{
						_1b18cb62c_round(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1b2242c1d:;
					{
						_1b18cb132_roundDown(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1b2244b65:;
					{
						_1b18cb3a7_roundUp(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1b223ae03:;
			};
		}
	_iter_next_1b19402d9:;
	}
	_iter_end_1b19402d9:;;
}



inline jule::Slice<jule::U8> _1b18bab27_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1b18ba0dd_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _1b18bc178_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1b24413a0:;
		}
		_iter_end_1b24413a0:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I32 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1b2560de8:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1b24e5b91:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1b248c5e9:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1b24c1e8b:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1b18bb0ab_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1b18ba0dd_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _1b18bc178_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1b19b12b1:;
		}
		_iter_end_1b19b12b1:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1b223688d:;
		}
		_iter_end_1b223688d:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1b18bb6b6_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _1b18b9e01_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b18d0565_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b18d0565_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1b18bbd37_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _1b18b9e01_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1b24644d3:;
	}
	_iter_end_1b24644d3:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1b24e1906:;
		}
		_iter_end_1b24e1906:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1b1999266:;
		}
		_iter_end_1b1999266:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1b18bd0d0_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1b1adc233:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1b1adc167:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1b18e902e:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1b18e8ec9:;
	};
	return _50613_dst;;
}



inline jule::I32 _1b18bc178_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _1b18bc4b9_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1b18bd0d0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1b12566e4_ConvError _1b18bd50e_parseUint(jule::Str _5118_s, jule::I32 _5130_base, jule::I32 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1b12566e4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1b25bae86:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1b25bad65:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1b18bd0d0_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1b25bcc8a:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1b18bd0d0_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1b25bca9d:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1b18bd0d0_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1b25bcb14:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b25bc707:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1b25bc63b:;
					};
				};
			}
		}
		else {
			_case_begin_1b25ba172:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1b25ba10b:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b25c2971:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b25c208b:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b25c2366:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1b25c21e0:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b25c2454:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b25c3ab5:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b25c2696:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b25c4bc6:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1b25c3d29:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1b18bd0d0_lower(_10912_c)) && (_1b18bd0d0_lower(_10912_c) <= 'z'))) {
						_case_begin_1b25c6018:;
						{
							_11017_d=static_cast<jule::U8>(((_1b18bd0d0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1b25c5b3e:;
						{
							goto _iter_next_1b25c4bc6;
						}
					}
					else {
						_case_begin_1b25c5ac8:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1b25c5a62:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1b25c4bc6:;
			++it;
			goto _iter_begin_1b25c4bc6;
		}
		_iter_end_1b25c4bc6:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b18bd8e9_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I32 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18bd50e_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type137));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1b18bdd5b_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type137));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I32 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18bd50e_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type137));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type137));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type137));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1b18be972_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20c8a9009_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _579_clz = _1b187e558_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(_4122_man, _1b18c07db_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(_4122_man, _1b18c07db_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20c8a9009_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b18bed6d_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_20c8a8943_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1329_clz = _1b187e558_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(_11022_man, _1b18c07db_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(_11022_man, _1b18c07db_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_20c8a8943_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1b18c1a84_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I32 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I32>(_4530_s.len());
	};
	jule::I32 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1b25ec814:;
	}
	_iter_end_1b25ec814:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b18c1d81_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _7213_sign = 1LL;;
	jule::I32 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b2601bc0:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1b2601c47;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b2601c47:;
			{
				jule::I32 _8317_caseN = _1b18c1a84_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b188cd3b_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b2601cbe:;
			{
				if ((_1b18c1a84_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b188cac7_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b2601b04:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b18c2128_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1b2607841:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1b26078b8:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1b26076ed:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I32 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1b18bd0d0_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I32 _12913_nd = 0LL;;
	jule::I32 _13013_ndMant = 0LL;;
	jule::I32 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1b260da34:;
					{
						goto _iter_next_1b260ce84;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1b260daab:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1b260ce84;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1b260db33:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1b260ce84;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b260ce84;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1b18bd0d0_lower(_13313_c))) && (_1b18bd0d0_lower(_13313_c) <= 'f'))) {
					_case_begin_1b260dbaa:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1b18bd0d0_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b260ce84;
					}
				}
				_match_end_1b260d957:;
			};
			goto _iter_end_1b260ce84;
		}
	_iter_next_1b260ce84:;
	}
	_iter_end_1b260ce84:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1b18bd0d0_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1b261808d;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I32>((((_20617_e * 10LL) + static_cast<jule::I32>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1b261808d:;
		}
		_iter_end_1b261808d:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b18c3aa8_atof64exact(jule::U64 _48116_mantissa, jule::I32 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _20c853b63_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1b2622edd:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1b2623065:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b18c2ec5_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1b18c2ec5_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1b26230dc:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1b18c2ec5_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2622e22:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b18c3e93_atof32exact(jule::U64 _51516_mantissa, jule::I32 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _20b981a72_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1b2627bb3:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1b2627c3a:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b18c3316_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1b18c3316_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1b2627cb2:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1b18c3316_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2627ae7:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b12566e4_ConvError _1b18c456a_atofHex(jule::Str _55112_s, _1b18b9e01_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I32 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1b12566e4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5529_maxExp = ((static_cast<jule::I32>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I32 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I32>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1b262ca86:;
	}
	_iter_end_1b262ca86:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1b262e901:;
	}
	_iter_end_1b262e901:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1b26303b3:;
	}
	_iter_end_1b26303b3:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I32 _59813_err = static_cast<jule::I32>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I32>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _20b981a72_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_20c8a8943_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20c8a9009_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b12566e4_ConvError _1b18c4922_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b12566e4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I32 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c1d81_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I32 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I32 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c2128_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18c456a_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_20b981a72_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b18c3e93_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b18bed6d_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b18bed6d_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b18ca75d_decimal _66213_d = _1b18ca75d_decimal{};;
	if ((!(_1b18c27cc_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b18c2ada_floatBits(&_66213_d, &(_20b981a72_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_20c8a8943_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError _1b18c4bb9_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I32 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c1d81_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I32 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I32 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c2128_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18c456a_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_20c853b63_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b18c3aa8_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b18be972_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b18be972_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b18ca75d_decimal _71913_d = _1b18ca75d_decimal{};;
	if ((!(_1b18c27cc_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b18c2ada_floatBits(&_71913_d, &(_20c853b63_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20c8a9009_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError _1b18c500a_parseFloatPrefix(jule::Str _73121_s, jule::I32 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I32 _73317_n = 0;;
		jule::I32 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18c4922_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I32 _73713_n = 0;;
	jule::I32 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18c4bb9_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b18c534b_ParseFloat(jule::Str _76515_s, jule::I32 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I32 _76613_n = 0;;
	jule::I32 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b12566e4_ConvError __jule_assign_result = _1b18c500a_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I32>(0LL)) || (_76616_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type137));
	};
	if ((_76616_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type137));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1b18c5abb_ryuFtoaFixed32(_1b18ba0dd_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _6213_e2 = _4956_exp;;
	jule::I32 _639_b = _1b188673b_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_1b18c700c_mulByLog2Log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I32 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8706_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1b18c8e32_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1b18c67e2_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1b18c600b_ryuFtoaFixed64(_1b18ba0dd_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _13113_e2 = _12156_exp;;
	jule::I32 _1329_b = _1b18869d3_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_1b18c700c_mulByLog2Log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I32 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8ae1_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1b18c8e32_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1b18c67e2_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1b18c67e2_formatDecimal(_1b18ba0dd_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2019_max = _1b18c633b_u64pow10[_20088_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b2666262:;
	}
	_iter_end_1b2666262:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1b2669c16:;
	}
	_iter_end_1b2669c16:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1b26709ec:;
	}
	_iter_end_1b26709ec:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1b18c6c65_ryuFtoaShortest(_1b18ba0dd_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1b18b9e01_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1b188112b_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_1b18c7c33_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I32 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b18c768e_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1b18c7c33_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I32 _2799_q = (_1b18c700c_mulByLog2Log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _20b981a72_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8706_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8706_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8706_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8ae1_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8ae1_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b18c8ae1_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1b18c8e32_divisibleByPow5(_27310_ml, static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1b18c8e32_divisibleByPow5(_27314_mc, static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1b18c8e32_divisibleByPow5(_27318_mu, static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1b18c7c33_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I32 _1b18c700c_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _1b18c72a4_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b18c768e_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1b18b9e01_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1b18c7c33_ryuDigits(_1b18ba0dd_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b18c91c9_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b18c91c9_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b18c91c9_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1b18c831b_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1b18c831b_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1b51a067d:;
		}
		_iter_end_1b51a067d:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_1b18c831b_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1b51a0c22:;
	}
	_iter_end_1b51a0c22:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1b51a0370:;
	}
	_iter_end_1b51a0370:;;
}



inline void _1b18c831b_ryuDigits32(_1b18ba0dd_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1b51a6244;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1b51a6244:;
	}
	_iter_end_1b51a6244:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1b51acc0c:;
	}
	_iter_end_1b51acc0c:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b18c8706_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1b18c07db_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b18c72a4_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b18c8ae1_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1b18c07db_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b18c72a4_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1888d26_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b1887693_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b18c8e32_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1b51bbcb5:;
	}
	_iter_end_1b51bbcb5:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b18c91c9_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1b18cbe46_trim(_1b18ca75d_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1b51c037e:;
	}
	_iter_end_1b51c037e:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1b18cc1ee_rightShift(_1b18ca75d_decimal* _46320_a, jule::U32 _46332_k) {
	jule::I32 _46413_r = 0LL;;
	jule::I32 _46513_w = 0LL;;
	jule::U32 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1b51c3b46:;
				}
				_iter_end_1b51c3b46:;;
				goto _iter_end_1b51c278d;
			};
			jule::U32 _48213_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1b51c278d:;
	}
	_iter_end_1b51c278d:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U32 _4879_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U32 _49113_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			jule::U32 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1b51c63eb:;
	}
	_iter_end_1b51c63eb:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U32 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
		}
	_iter_next_1b51c682a:;
	}
	_iter_end_1b51c682a:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1b18cbe46_trim(_46320_a);
}



inline jule::Bool _1b18cc661_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I32 _51735_end, jule::Str _51745_s) {
	jule::I32 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1b51cabe7:;
	}
	_iter_end_1b51cabe7:;;
	return false;;
}



inline void _1b18cc8d6_leftShift(_1b18ca75d_decimal* _53119_a, jule::U32 _53131_k) {
	jule::I32 _53213_delta = _1b18ca1b9_leftCheats[static_cast<jule::I32>(_53131_k)]._field_delta;;
	if (_1b18cc661_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1b18ca1b9_leftCheats[static_cast<jule::I32>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I32 _53713_r = (*(_53119_a))._field_nd;;
	jule::I32 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U32 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U32>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U32 _54513_quo = (_54113_n / 10LLU);;
			jule::U32 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1b51ce239:;
	}
	_iter_end_1b51ce239:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U32 _55813_quo = (_54113_n / 10LLU);;
			jule::U32 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1b51d1c97:;
	}
	_iter_end_1b51d1c97:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1b18cbe46_trim(_53119_a);
}



inline jule::Bool _1b18ccc27_shouldRoundUp(_1b18ca75d_decimal* _57819_a, jule::I32 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1b18ce344_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1b18cec90_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b18d0565_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1b18ce6c9_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1b18cec90_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b18d0565_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1b18ce971_Itoa(jule::I32 _809_i) {
	return _1b18ce6c9_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1b18cec90_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1b18d0037_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b18d0565_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_1b521e994:;
		}
		_iter_end_1b521e994:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		};
	} else if (_1b18d0037_isPowerOfTwo(_10141_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_1b188048d_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1b5228272:;
		}
		_iter_end_1b5228272:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1b522ad8a:;
		}
		_iter_end_1b522ad8a:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1b18d1973_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b52461b3:;
			{
				return _1b18d0ec2_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b5246229:;
			{
				return _1b18d128b_SysUint;;
			}
		}
		else {
			_case_begin_1b52465ae:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b5246a65:;
	};
}



inline jule::I32 _1b18d1c1a_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b5247a77:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1b5247add:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1b5247615:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1b524767b:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1b52476e2:;
			{
				return _1b18d0c08_BitSize;;
			}
		}
		else {
			_case_begin_1b524713c:;
			{
				return -1LL;;
			}
		}
		_match_end_1b524756b:;
	};
}



inline jule::Str _1b18d2039_IntFromBits(jule::I32 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b5249a13:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b5249a79:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b5249826:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b524988c:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1b5247cb9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b524955c:;
	};
}



inline jule::Str _1b18d22d1_UintFromBits(jule::I32 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b524ae87:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b524aeed:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b524ac89:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b524ad00:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1b524a805:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b524a6c3:;
	};
}



inline jule::Str _1b18d2578_FloatFromBits(jule::I32 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b524c40b:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b524c472:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1b524bc79:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b524bb47:;
	};
}



inline jule::Bool _1b18d3128_CheckBitFloat(jule::Str _15018_val, jule::I32 _15028_bit) {
	({
		auto except = _1b18c534b_ParseFloat(_15018_val, _15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1b18d33c0_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b5252455:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b52515a8:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b525150e:;
	};
}



inline jule::I32 _1b18d3667_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1b5253335:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1b525339b:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1b5253412:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b5252a60:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b5252994:;
	};
}



inline jule::I32 _1b18d390e_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1b5255249:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1b52552b0:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1b5255326:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b5254688:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b525429d:;
	};
}



inline void _1b18d3a74_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1cac5c466_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1b52563b0:;
				{
					_1b18d0c08_BitSize=64LLU;
					_1b18d0ec2_SysInt=jule::Str("i64", 3);
					_1b18d128b_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1b5256437:;
				{
					_1b18d0c08_BitSize=32LLU;
					_1b18d0ec2_SysInt=jule::Str("i32", 3);
					_1b18d128b_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1b5256305:;
		};
	};
}



inline void _1b18d3bd9_init(void) {
	_1b18d3a74_UpdateTarget();
}



inline jule::I64 _1b18d7a23_MinI(jule::Str _6113_k) {
	_6113_k=_1b18d1973_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b5258c53:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b5258cb9:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b5258769:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b52587d0:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b5256668:;
			{
				return 0LL;;
			}
		}
		_match_end_1b5256833:;
	};
}



inline jule::I64 _1b18d7d0e_MaxI(jule::Str _7913_k) {
	_7913_k=_1b18d1973_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b525a2b5:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b525a32b:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b5259cdc:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b5259d53:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b5259a23:;
			{
				return 0LL;;
			}
		}
		_match_end_1b5259737:;
	};
}



inline jule::U64 _1b18d80a6_MaxU(jule::Str _9713_k) {
	_9713_k=_1b18d1973_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b525b827:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b525b88d:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b525b34e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b525b3b5:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b525b085:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b525ac99:;
	};
}



inline jule::F64 _1b18d82b5_Min(jule::Str _11512_k) {
	_11512_k=_1b18d1973_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1b18d7a23_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b525d86d:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b525d8d4:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b525d362:;
			{
				return 0LL;;
			}
		}
		_match_end_1b525d30c:;
	};
}



inline jule::F64 _1b18d855c_Max(jule::Str _13312_k) {
	_13312_k=_1b18d1973_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1b18d7d0e_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1b18d80a6_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b5260bc2:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b5260c38:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b5260661:;
			{
				return 0LL;;
			}
		}
		_match_end_1b52607a4:;
	};
}



inline jule::Bool _1b18d89ad_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1b18d8c99_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1b18d9041_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1b18d9360_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1b18d9607_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1b18d989e_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1b18d9b46_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1b18d9eba_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1b18da262_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1b18da509_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1b18da84a_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b5266ba6:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b526748c:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b5267503:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b5266e81:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b5266ee7:;
			{
				return _1b18d89ad_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b526705d:;
			{
				return _1b18d8c99_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b52670c4:;
			{
				return _1b18d9041_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b526759c:;
			{
				return _1b18d9360_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b5267613:;
			{
				return _1b18d9607_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b5267679:;
			{
				return _1b18d989e_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b52676e0:;
			{
				return _1b18d9b46_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b5267756:;
			{
				return _1b18d9eba_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b52677bc:;
			{
				return _1b18da262_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b5267844:;
			{
				return _1b18da509_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b52678bb:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b5267943:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1b5266d71:;
			{
				return false;;
			}
		}
		_match_end_1b5266c3e:;
	};
}



inline jule::Bool _1b18daae2_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1b18dad89_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1b18db131_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1b18db3c8_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1b18db829_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1b18dbac1_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1b18dbd68_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1b18dc110_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1b18dc451_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b5268009:;
			{
				return _1b18dd485_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b5270561:;
			{
				return _1b18dd771_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b52705c7:;
			{
				return _1b18dd771_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b527063d:;
			{
				return _1b18daae2_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b5270286:;
			{
				return _1b18dad89_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b52702ec:;
			{
				return _1b18db131_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b5270363:;
			{
				return _1b18db3c8_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b52703c9:;
			{
				return _1b18db829_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b527086e:;
			{
				return _1b18dbac1_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b52708d5:;
			{
				return _1b18dbd68_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b527094b:;
			{
				return _1b18dc110_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b52709c3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b5270121:;
			{
				return false;;
			}
		}
		_match_end_1b5270077:;
	};
}



inline jule::Bool _1b18dd485_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1b18dd771_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1b18dda18_IsInt(jule::Str _4610_k) {
	return (_1b18dd485_IsSigInt(_4610_k) || _1b18dd771_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b18ddd37_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1b18de0ce_IsNum(jule::Str _5610_k) {
	return (_1b18dda18_IsInt(_5610_k) || _1b18ddd37_IsFloat(_5610_k));;
}



inline jule::Bool _1b18de376_IsSigNum(jule::Str _6113_k) {
	return (_1b18dd485_IsSigInt(_6113_k) || _1b18ddd37_IsFloat(_6113_k));;
}



inline void _1b18e7d0d_lshiftUnsig(_1b18de5da_Const* _59021_c, _1b18de5da_Const* _59032_x) {
	jule::U64 _5919_l = _1b18e1d5c_AsU64(_59021_c);;
	jule::U64 _5929_r = _1b18e1d5c_AsU64(_59032_x);;
	_1b18e25bb_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1b18e810a_rshiftUnsig(_1b18de5da_Const* _59621_c, _1b18de5da_Const* _59632_x) {
	jule::U64 _5979_l = _1b18e1d5c_AsU64(_59621_c);;
	jule::U64 _5989_r = _1b18e1d5c_AsU64(_59632_x);;
	_1b18e25bb_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1b300157a_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1b3001701_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1b30190dc_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1b301873a_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1b3018a37_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1b301942d_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I32 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_20c95c552_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1b53342c3:;
	}
	_iter_end_1b53342c3:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1b3018cce_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b533878e:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b5338805:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b533886b:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b53388d2:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b5338959:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b53389d1:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b5338a58:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b5338ad0:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b5338b57:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b5338bce:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b533866d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1b30190dc_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1b3018cce_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b533e850:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1b18bd8e9_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b533e1e0:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1b18bd8e9_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b533e256:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1b18bd8e9_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1b533ce03:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1b18bd8e9_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1b533cd9d:;
	};
}



inline jule::Slice<jule::U8> _1b301942d_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1259_r = _1b30190dc_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I32 _1b3110799_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I32* _1038_start) {
	jule::I32 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I32 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1b53738d9:;
	}
	_iter_end_1b53738d9:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1b3116393_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _289_start = (*(_2724_i));;
	jule::I32 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I32 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b1dd_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1b537648b:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b5376502:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1b537617d:;
			};
		}
	_iter_next_1b5375754:;
	}
	_iter_end_1b5375754:;;
	return nullptr;;
}



inline void _1b311664b_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1b537747b:;
			{
				(*(_4722_buf))+=_20b97ed8e_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type138))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b5378218:;
			{
				(*(_4722_buf))+=_20b97ed8e_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1b53783c2:;
			{
				(*(_4722_buf))+=_1b18ce6c9_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type139)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1b5377514:;
			{
				(*(_4722_buf))+=_1b18ce6c9_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type140)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b5377d3e:;
			{
				(*(_4722_buf))+=_1b18ce6c9_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b5377da5:;
			{
				(*(_4722_buf))+=_1b18ce6c9_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b5378449:;
			{
				(*(_4722_buf))+=_1b18ce344_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1b53784b0:;
			{
				(*(_4722_buf))+=_1b18ce344_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type141)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1b5378526:;
			{
				(*(_4722_buf))+=_1b18ce344_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type142)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b537858c:;
			{
				(*(_4722_buf))+=_1b18ce344_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b5378603:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b5378669:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1b5377bda:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1b5376975:;
	};
}



inline void _1b3116a25_applyFmtByDefault(jule::Str* _8627_buf, jule::I32* _8642_j, jule::Slice<jule::Any>* _8651_args) {
	jule::Any _879_arg = (*(_8651_args))[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1b311664b_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1b3116e21_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I32* _9451_j, jule::Slice<jule::Any>* _9460_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1b3116a25_applyFmtByDefault(_9436_buf, _9451_j, _9460_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_20ba640e9_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1b311722e_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _20bae0780_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I32 _11913_j = 0LL;;
	jule::I32 _12013_last = 0LL;;
	jule::I32 _12113_i = _1b3110799_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I32>(_1b3110799_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_20ba640e9_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1b3116393_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1b5384cb3;
			};
			_1b3116e21_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), &(_11322_args));
			if ((_11913_j >= _11322_args.len())) {
				_20ba640e9_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I32>(_11713_fmtBytes.len());
				goto _iter_end_1b5384cb3;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1b5384cb3:;
	}
	_iter_end_1b5384cb3:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_20ba640e9_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1b3117a48_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1b311722e_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1b2e73244_parameterUsesGenerics(jule::Ptr<_1b2e70263_ParamIns>* _37431_p, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>* _37446_generics) {
	if (_1b2e2cc8c_IsSelf((*(_37431_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1b307372e_kindUsesGenerics(&((*(_37431_p)).get()._field_Kind), _37446_generics);;
}



inline jule::Ptr<_1b3060e03_TypeSymbol> _1b2e7571e_buildType(jule::Ptr<_1b2e4b77d_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1b3031b1b_Value> _1b2e75a0a_buildExpr(jule::Ptr<_1b2e50c9e_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b2e75ca2_buildTypeAlias(jule::Ptr<_1b2e62a4c_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1b305ad32_TypeAlias>(_1b305ad32_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1b2e7571e_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1b2e3becc_Field> _1b2e760c1_buildField(jule::Ptr<_1b2e661e3_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1b2e3becc_Field>(_1b2e3becc_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1b2e7571e_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1b2e3becc_Field>> _1b2e76368_buildFields(jule::Slice<jule::Ptr<_1b2e661e3_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1b2e3becc_Field>> _13513_fields = jule::Slice<jule::Ptr<_1b2e3becc_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55d5ae6:;
		if (it != expr_end) {
			jule::Ptr<_1b2e661e3_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1b2e760c1_buildField(_13617_decl));;
			}
			_iter_next_1b55d5ae6:;
			++it;
			goto _iter_begin_1b55d5ae6;
		}
		_iter_end_1b55d5ae6:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b2e76610_buildStruct(jule::Ptr<_1b2e66996_StructDecl> _14220_decl) {
	return jule::new_ptr<_1b2e683e3_Struct>(_1b2e683e3_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1b2e76368_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1b2e6e66e_Param> _1b2e768a7_buildParam(jule::Ptr<_1b2e5bddc_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1b2e7571e_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1b2e6e66e_Param>> _1b2e76c2b_buildParams(jule::Slice<jule::Ptr<_1b2e5bddc_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1b2e6e66e_Param>> _16613_params = jule::Slice<jule::Ptr<_1b2e6e66e_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55d86ed:;
		if (it != expr_end) {
			jule::Ptr<_1b2e5bddc_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1b2e768a7_buildParam(_16717_decl));;
			}
			_iter_next_1b55d86ed:;
			++it;
			goto _iter_begin_1b55d86ed;
		}
		_iter_end_1b55d86ed:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1b2e6e482_RetType> _1b2e76ec3_buildRetType(jule::Ptr<_1b2e4e891_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2e6e482_RetType>(_1b2e6e482_RetType{._field_Kind=_1b2e7571e_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2e7726a_buildFn(jule::Ptr<_1b2e5d20c_FnDecl> _18316_decl) {
	return jule::new_ptr<_1b2e6e85b_Fn>(_1b2e6e85b_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1b2e76ec3_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1b2e76c2b_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _1b2e77512_buildMethods(jule::Slice<jule::Ptr<_1b2e5d20c_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1b2e6e85b_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55dc01a:;
		if (it != expr_end) {
			jule::Ptr<_1b2e5d20c_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1b2e7726a_buildFn(_20317_decl));;
			}
			_iter_next_1b55dc01a:;
			++it;
			goto _iter_begin_1b55dc01a;
		}
		_iter_end_1b55dc01a:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b2e777a9_buildTrait(jule::Ptr<_1b2e670a1_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1b2e8033e_Trait>(_1b2e8033e_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1b2e77512_buildMethods(&(_20919_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1b2e8198e_EnumItem> _1b2e77a51_buildEnumItem(jule::Ptr<_1b2e643ab_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1b2e8198e_EnumItem>(_1b2e8198e_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1b2e75a0a_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>> _1b2e77ce8_buildEnumItems(jule::Slice<jule::Ptr<_1b2e643ab_EnumItemDecl>>* _22624_decls) {
	jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1b2e8198e_EnumItem>>::alloc(0LL, (*(_22624_decls)).len());;
	{
		auto expr = _22624_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55de3b3:;
		if (it != expr_end) {
			jule::Ptr<_1b2e643ab_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1b2e77a51_buildEnumItem(_22817_decl));;
			}
			_iter_next_1b55de3b3:;
			++it;
			goto _iter_begin_1b55de3b3;
		}
		_iter_end_1b55de3b3:;
	};
	return _22713_items;;
}



inline jule::Ptr<_1b2e82484_Enum> _1b2e78090_buildEnum(jule::Ptr<_1b2e64dd4_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1b2e82484_Enum>(_1b2e82484_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1b2e7571e_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1b2e77ce8_buildEnumItems(&(_23418_decl.get()._field_Items))});;
}



inline jule::Ptr<_1b2e834b8_TypeEnumItem> _1b2e784e1_buildTypeEnumItem(jule::Ptr<_1b2e658da_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1b2e834b8_TypeEnumItem>(_1b2e834b8_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1b2e7571e_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>> _1b2e78788_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b2e658da_TypeEnumItemDecl>>* _25228_decls) {
	jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1b2e834b8_TypeEnumItem>>::alloc(0LL, (*(_25228_decls)).len());;
	{
		auto expr = _25228_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55e197b:;
		if (it != expr_end) {
			jule::Ptr<_1b2e658da_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1b2e784e1_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1b55e197b:;
			++it;
			goto _iter_begin_1b55e197b;
		}
		_iter_end_1b55e197b:;
	};
	return _25313_items;;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2e78a30_buildTypeEnum(jule::Ptr<_1b2e65ee5_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1b2e83a7e_TypeEnum>(_1b2e83a7e_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1b2e78788_buildTypeEnumItems(&(_26022_decl.get()._field_Items))});;
}



inline jule::Ptr<_1b2ed8034_Var> _1b2e78cc7_buildVar(jule::Ptr<_1b2e5e1db_VarDecl> _26917_decl) {
	return jule::new_ptr<_1b2ed8034_Var>(_1b2ed8034_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1b2e7571e_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1b2e75a0a_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1b2e742de_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1b2ed8034_Var>> _1b2e7906e_buildVars(jule::Slice<jule::Ptr<_1b2e5e1db_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1b2ed8034_Var>> _28713_vars = jule::Slice<jule::Ptr<_1b2ed8034_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto expr = &(_28618_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55e4a17:;
		if (it != expr_end) {
			jule::Ptr<_1b2e5e1db_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1b2e78cc7_buildVar(_28817_decl));;
			}
			_iter_next_1b55e4a17:;
			++it;
			goto _iter_begin_1b55e4a17;
		}
		_iter_end_1b55e4a17:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_1b2e87ee5_Impl> _1b2e79316_buildImpl(jule::Ptr<_1b2e676ab_Impl> _29418_decl) {
	return jule::new_ptr<_1b2e87ee5_Impl>(_1b2e87ee5_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1b2e77512_buildMethods(&(_29418_decl.get()._field_Methods)), ._field_Statics=_1b2e7906e_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _1b2e8738a_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1b305ba25_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1e32798b1:;
			{
				jule::Ptr<_1b3061772_Prim> _14513_prim = _1b305ddac_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1b18de376_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1e3278904:;
			{
				jule::Ptr<_1b3061772_Prim> _15113_prim = _1b305ddac_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1b18dd771_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1e3279619:;
			{
				jule::Ptr<_1b3061772_Prim> _15713_prim = _1b305ddac_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1b18ddd37_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1e3279691:;
			{
				jule::Ptr<_1b3061772_Prim> _16313_prim = _1b305ddac_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1b18de0ce_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1e3279718:;
			{
				return _1b305d197_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1e32793e9:;
			{
				return (!(_1b305d197_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1e3279460:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1e32794d7:;
			{
				jule::Ptr<_1b3061772_Prim> _17513_prim = _1b305ddac_Prim((*(_14234_g)).ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1b18de0ce_IsNum(_17513_prim.get()._field_Kind) || _1b30649a6_IsStr(_17513_prim.ptr()));;
				};
				if ((_1b305e385_Ptr((*(_14234_g)).ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1b2e687bc_StructIns> _18213_s = _1b306030e_Struct((*(_14234_g)).ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1b2e82484_Enum> _18913_enm = _1b305e5e9_Enum((*(_14234_g)).ptr());;
				if ((_18913_enm != nullptr)) {
					return _1b18de0ce_IsNum(_1b305be21_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1e32791da:;
			{
				return false;;
			}
		}
		_match_end_1e3279141:;
	};
}



inline jule::Bool _1b2e87676_isBuiltinConstraint(jule::Str* _19925_ident) {
	{
		auto expr = &(_1b2e857ea_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e3281214:;
		if (it != expr_end) {
			jule::Str *_20012_bc = it;
			{
				if (((*(_19925_ident)) == (*(_20012_bc)))) {
					return true;;
				};
			}
			_iter_next_1e3281214:;
			++it;
			goto _iter_begin_1e3281214;
		}
		_iter_end_1e3281214:;
	};
	return false;;
}



inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e8a080_newScopeCheckerBase(jule::Ptr<_1b2eb48a1_Sema>* _5829_s, jule::Ptr<_1b2e71132_FnIns> _5843_owner) {
	return jule::new_ptr<_1b2e94ab2_scopeChecker>(_1b2e94ab2_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1b302ac69_SymbolTable>(), });;
}



inline jule::Ptr<_1b2e94ab2_scopeChecker> _1b2e8a415_newScopeChecker(jule::Ptr<_1b2eb48a1_Sema>* _6625_s, jule::Ptr<_1b2e71132_FnIns> _6639_owner) {
	jule::Ptr<_1b2e94ab2_scopeChecker> _6713_base = _1b2e8a080_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b2e9382a_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b2e93c9d_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1b2e9382a_scopeLabel> _1b2e8a756_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1b2e94ab2_scopeChecker> _7636_scope) {
	jule::Ptr<_1b2e9382a_scopeLabel> _7713_label = _1b2e98588_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1b2e98588_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1e3297c64:;
	}
	_iter_end_1e3297c64:;;
	return _7713_label;;
}



inline jule::Bool _1b2e8aadb_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1b2e8d050_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e329979e:;
			{
				jule::Ptr<_1b2e69b64_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e3299826:;
			{
				jule::Ptr<_1b3030a93_Data> _9813_d = _9021_Model.cast_ptr<_1b3030a93_Data>(&__jule_any_type23);;
				return _1b2e8aadb_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1e3299716:;
	};
	return false;;
}



inline jule::Bool _1b2e8ae2c_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1b2e8d050_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e329bbe1:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1b2e8d050_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e329bc68:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1b2e8dd97_InfIter>(&__jule_any_type36).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e329b9d2:;
			{
				jule::Ptr<_1b2e8ec00_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1b2e8ec00_RangeIter>(&__jule_any_type40);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1b2e8aadb_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e329ba59:;
			{
				jule::Ptr<_1b2e8e31a_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1b2e8e31a_WhileIter>(&__jule_any_type38);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1b2e8aadb_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1b2e8aadb_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1e329bad1:;
			{
				jule::Ptr<_1b2e91c9b_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1b2e91c9b_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e32a01bc:;
					if (it != expr_end) {
						jule::Ptr<_1b2e927e6_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e32a1102:;
								if (it != expr_end) {
									jule::Ptr<_1b3030a93_Data> *_12420_expr = it;
									{
										if (_1b2e8aadb_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1e32a1102:;
									++it;
									goto _iter_begin_1e32a1102;
								}
								_iter_end_1e32a1102:;
							};
						}
						_iter_next_1e32a01bc:;
						++it;
						goto _iter_begin_1e32a01bc;
					}
					_iter_end_1e32a01bc:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e3299c44:;
			{
				jule::Ptr<_1b2e8daab_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1b2e8daab_Conditional>(&__jule_any_type35);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e32a25a9:;
					if (it != expr_end) {
						jule::Ptr<_1b2e8d44b_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1b2e8aadb_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1e32a25a9:;
						++it;
						goto _iter_begin_1e32a25a9;
					}
					_iter_end_1e32a25a9:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e3299caa:;
			{
				jule::Ptr<_1b3030a93_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1b3030a93_Data>(&__jule_any_type23);;
				return _1b2e8aadb_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1e3299bcd:;
			{
				return false;;
			}
		}
		_match_end_1e3299b78:;
	};
}



inline jule::I32 _1b2e8b26d_countMatchType(jule::Ptr<_1b2e91c9b_Match>* _14720_m, jule::Ptr<_1b305ba25_TypeKind>* _14732_t) {
	jule::I32 _14813_n = 0LL;;
	jule::Str _1499_kind = _1b305be21_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e32a5535:;
		if (it != expr_end) {
			jule::Ptr<_1b2e927e6_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1e32a5535;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e32a637c:;
					if (it != expr_end) {
						jule::Ptr<_1b3030a93_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1e32a5535;
							};
							if ((_1499_kind == _1b305be21_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1b305ba25_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1e32a637c:;
						++it;
						goto _iter_begin_1e32a637c;
					}
					_iter_end_1e32a637c:;
				};
			}
			_iter_next_1e32a5535:;
			++it;
			goto _iter_begin_1e32a5535;
		}
		_iter_end_1e32a5535:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1b3030a93_Data>> _1b2e8b515_getDatasFromTupleData(jule::Ptr<_1b3030a93_Data>* _17131_d) {
	if ((_1b3060a4b_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1e32a9e30:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1b2e6b88b_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1e32a7a76:;
				{
					jule::Ptr<_1b30664e1_Tuple> _17721_t = _1b3060a4b_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1b3030a93_Data>> _17821_r = jule::Slice<jule::Ptr<_1b3030a93_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e32a89bc:;
						if (it != expr_end) {
							jule::Ptr<_1b305ba25_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1e32a89bc:;
							++it;
							goto _iter_begin_1e32a89bc;
						}
						_iter_end_1e32a89bc:;
					};
					return _17821_r;;
				}
			}
			_match_end_1e32a79cc:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1b3030a93_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1b2e8bd51_checkMut(jule::Ptr<_1b2eb48a1_Sema>* _20618_s, jule::Ptr<_1b3030a93_Data>* _20629_left, jule::Ptr<_1b3030a93_Data> _20646_right, jule::Ptr<_1cb188a5c_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1e32ad0cb:;
			{
				_1b2eb7563_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1b305d197_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1e32ac916:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_1b306030e_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1b2eb7563_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e32ac8a0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e32ac7e5:;
	};
}



inline jule::Bool _1b2e8c2d5_checkAssign(jule::Ptr<_1b2eb48a1_Sema>* _22521_s, jule::Ptr<_1b3030a93_Data>* _22536_left, jule::Ptr<_1b3030a93_Data> _22553_right, jule::Ptr<_1cb188a5c_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2e71132_FnIns> _2269_f = _1b306009a_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1b2eb7563_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1b3031456_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1e32b2ac5:;
			{
				_1b2eb7563_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1b2eb7882_pushSugggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1e32b2443:;
			{
				_1b2eb7563_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1b2e8bd51_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1e32b24a9:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e32b23cc:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e32b22ab:;
	};
}



inline jule::Bool _1b2e8c57c_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1e32ae93a:;
			{
				return (!((*(_24731_n)).cast_ptr<_1b2e5a21a_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1e32b47db:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e32b4665:;
			{
				return false;;
			}
		}
		_match_end_1e32b2553:;
	};
}



inline jule::Bool _1b2e8c824_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1e32b5820:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e32b5886:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1b3030a93_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1e32b61d3:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1e32b658a:;
						{
							return false;;
						}
					}
					_match_end_1e32b62d2:;
				};
			}
		}
		else {
			_case_begin_1e32b4ac7:;
			{
				return false;;
			}
		}
		_match_end_1e32b4a72:;
	};
}



inline jule::Bool _1b2e8cabb_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e32b6bb7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e32b6799:;
			{
				return false;;
			}
		}
		_match_end_1e32b66ab:;
	};
}



inline jule::Ptr<_1b2ed8034_Var> _1b2ea8e6c_findVarInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6461bb3:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1b2ed8034_Var> _4817_v = _1b302b94b_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1b6461bb3:;
			++it;
			goto _iter_begin_1b6461bb3;
		}
		_iter_end_1b6461bb3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b2ea939b_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b646316a:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1b305ad32_TypeAlias> _6017_ta = _1b302bd03_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1b646316a:;
			++it;
			goto _iter_begin_1b646316a;
		}
		_iter_end_1b646316a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b2ea9786_findStructInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6464611:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1b2e683e3_Struct> _7217_s = _1b302c1aa_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1b6464611:;
			++it;
			goto _iter_begin_1b6464611;
		}
		_iter_end_1b6464611:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e6e85b_Fn> _1b2ea9be8_findFnInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6465aa7:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1b2e6e85b_Fn> _8417_f = _1b302c562_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1b6465aa7:;
			++it;
			goto _iter_begin_1b6465aa7;
		}
		_iter_end_1b6465aa7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e8033e_Trait> _1b2eaa006_findTraitInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b646613a:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1b2e8033e_Trait> _9617_t = _1b302c870_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1b646613a:;
			++it;
			goto _iter_begin_1b646613a;
		}
		_iter_end_1b646613a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e82484_Enum> _1b2eaa347_findEnumInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b646812b:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1b2e82484_Enum> _10817_e = _1b302cb7d_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1b646812b:;
			++it;
			goto _iter_begin_1b646812b;
		}
		_iter_end_1b646812b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2e83a7e_TypeEnum> _1b2eaa688_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64693d5:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1b2e83a7e_TypeEnum> _12017_e = _1b302ce8b_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1b64693d5:;
			++it;
			goto _iter_begin_1b64693d5;
		}
		_iter_end_1b64693d5:;
	};
	return nullptr;;
}



inline jule::Any _1b2eaab83_defByIdentPackage(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b646a89d:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1b302dd16_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1b646a89d:;
			++it;
			goto _iter_begin_1b646a89d;
		}
		_iter_end_1b646a89d:;
	};
	return nullptr;;
}



inline jule::Bool _1b2eb1c88_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _1cab6e6db_HasPrefix(_36117_f, _1cab78b57_Join(jule::Slice<jule::Str>::make({_1cac17344_PathStdlib,_36125_p})));;
}



inline jule::Bool _1b2eb29e2_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b647b590:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b647b606:;
			{
				jule::Ptr<_1b2e6adeb_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1b2eb29e2_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b647b3a3:;
			{
				jule::Ptr<_1b2e6a9cd_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1b2e6a9cd_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1b2eb29e2_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b647b419:;
			{
				jule::Ptr<_1b2e691c4_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1b2e691c4_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_1b305e385_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1b305e121_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1b2eb29e2_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1b647a979:;
			{
				return false;;
			}
		}
		_match_end_1b647a924:;
	};
}



inline _1cac0bec6_Log _1b2eb2e87_compilerErr(jule::Ptr<_1cb188a5c_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1cac0bec6_Log _4213_log = _1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_1cac0c416_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_1cb1900c4_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1b2eb32c8_impIsLookupable(jule::Ptr<_1b2eab755_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1b2eae12b_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1b2eb35c5_appendRetVars(jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _6723_dest, jule::Ptr<_1b2e71132_FnIns>* _6742_f) {
	if ((_1b2e1e102_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b305ba25_TypeKind>> _7213_types = _1b2e72254_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6489328:;
		if (it != expr_end) {
			jule::I32 _7310_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _7317_ident = *it;
			{
				if ((_1cb18b301_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1cb18b598_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1b6489328;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_1b2ed8034_Var>(_1b2ed8034_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Data=jule::new_ptr<_1b3030a93_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1b6489328:;
			++it;
			_7310_i++;
			goto _iter_begin_1b6489328;
		}
		_iter_end_1b6489328:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1b2eb387d_appendParamVars(jule::Slice<jule::Ptr<_1b2ed8034_Var>>* _9725_dest, jule::Ptr<_1b2e71132_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b648d030:;
		if (it != expr_end) {
			jule::Ptr<_1b2e70263_ParamIns> _10217_p = *it;
			{
				if ((_1cb18b301_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _1cb18b598_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1b648d030;
				};
				jule::Ptr<_1b2ed8034_Var> _10717_v = jule::new_ptr<_1b2ed8034_Var>(_1b2ed8034_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(), ._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Data=jule::new_ptr<_1b3030a93_Data>()}), });;
				{
					
					if (_1b2e2cc8c_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1b6490917:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1b305b5e6_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1b2e2e60c_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1b2e2e60c_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065006_Sptr>(_1b3065006_Sptr{._field_Elem=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1b649064d:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065963_Slc>(_1b3065963_Slc{._field_Elem=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1b648d6c3:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1b649052c:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1b648d030:;
			++it;
			goto _iter_begin_1b648d030;
		}
		_iter_end_1b648d030:;
	};
}



inline void _1b2eb3b58_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b305ad32_TypeAlias>>* _15734_dest, jule::Ptr<_1b2e71132_FnIns>* _15759_f) {
	jule::I32 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6495b2b:;
		if (it != expr_end) {
			jule::I32 _16710_i = it - expr->begin();
			jule::Ptr<_1b305a2e8_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1b2e58a76_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1b305ad32_TypeAlias>(_1b305ad32_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1b6495b2b:;
			++it;
			_16710_i++;
			goto _iter_begin_1b6495b2b;
		}
		_iter_end_1b6495b2b:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1b2e687bc_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6497248:;
			if (it != expr_end) {
				jule::I32 _18114_i = it - expr->begin();
				jule::Ptr<_1b305a2e8_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1b2e58a76_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1b305ad32_TypeAlias>(_1b305ad32_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1b6497248:;
				++it;
				_18114_i++;
				goto _iter_begin_1b6497248;
			}
			_iter_end_1b6497248:;
		};
	};
}



inline jule::Ptr<_1b302ac69_SymbolTable> _1b2eb3eaa_findFile(jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>* _19518_files, jule::Ptr<_1cb18dde7_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b649924a:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1b649924a:;
			++it;
			goto _iter_begin_1b649924a;
		}
		_iter_end_1b649924a:;
	};
	return nullptr;;
}



inline void _1b2eb441c_pushSugggestion(_1cac0bec6_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_1cac0c416_Logf(_20442_fmt, _20455_args);
}



inline jule::Bool _1b3001998_traitHasReferenceReceiver(jule::Ptr<_1b2e8033e_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6766319:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1b6766319;
				};
				jule::Ptr<_1b2e6e66e_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1b2e2e60c_IsRef(_3313_p.ptr()) && _1b2e2cc8c_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b6766319:;
			++it;
			goto _iter_begin_1b6766319;
		}
		_iter_end_1b6766319:;
	};
	return false;;
}



inline jule::Bool _1b3001aca_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1b3030a93_Data>* _4132_d) {
	jule::Str _429_value = _20b97ed8e_FmtFloat(static_cast<jule::F64>(_1b18e20c1_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1b18d3128_CheckBitFloat(_429_value, static_cast<jule::I32>(_1b18d1c1a_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1b30184a4_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1b3030a93_Data>* _4630_d) {
	jule::F64 _479_min = _1b18d82b5_Min(_4618_kind);;
	jule::F64 _489_max = _1b18d855c_Max(_4618_kind);;
	{
		
		if (_1b18e3c2c_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b676c320:;
			{
				jule::F64 _5113_x = _1b18e1884_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b189333b_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1b18e34e0_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b676c9a2:;
			{
				jule::F64 _5813_x = _1b18e20c1_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1b18e327b_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b676ca29:;
			{
				jule::F64 _6313_x = _1b18e20c1_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1b676c881:;
	};
	return false;;
}



inline jule::Bool _1b30185d6_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1b3030a93_Data>* _6932_d) {
	jule::F64 _709_max = _1b18d855c_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1b300157a_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1b18e0dd3_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1b18e3c2c_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b6772754:;
			{
				jule::F64 _7713_x = _1b18e1884_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b189333b_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1b18e34e0_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b67727ba:;
			{
				jule::F64 _8713_x = _1b18e20c1_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1b18e327b_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b6772842:;
			{
				jule::F64 _9213_x = _1b18e20c1_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1b67720d3:;
	};
	return false;;
}



inline jule::Bool _1b3019681_intAssignable(jule::Str _9818_kind, jule::Ptr<_1b3030a93_Data>* _9830_d) {
	{
		
		if (_1b18dd485_IsSigInt(_9818_kind)) {
			_case_begin_1b6776e73:;
			{
				return _1b30184a4_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1b18dd771_IsUnsigInt(_9818_kind)) {
			_case_begin_1b6776824:;
			{
				return _1b30185d6_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1b6773018:;
			{
				return false;;
			}
		}
		_match_end_1b6772e4c:;
	};
}



inline jule::Ptr<_1b305ba25_TypeKind> _1b3029ce0_lenKind(void) {
	return jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_1b2e184d6_Directive> _1b30561c3_findDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _414223_directives, jule::Str _414254_d) {
	{
		auto expr = _414223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b687ac36:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _414317_dr = *it;
			{
				if ((_414317_dr.get()._field_Tag.get()._field_Kind == _414254_d)) {
					return _414317_dr;;
				};
			}
			_iter_next_1b687ac36:;
			++it;
			goto _iter_begin_1b687ac36;
		}
		_iter_end_1b687ac36:;
	};
	return nullptr;;
}



inline jule::Any _1b3056558_findBuiltinsImport(jule::Str _415123_ident, jule::Ptr<_1b2eab755_ImportInfo> _415135_imp) {
	return _1b30827d7_findPackageBuiltinDef(_415135_imp.get()._field_LinkPath, _415123_ident);;
}



inline void _1b3056767_fitBitsize(jule::Ptr<_1b3030a93_Data>* _415820_d) {
	jule::Ptr<_1b3061772_Prim> _415913_prim = _1b305ddac_Prim((*(_415820_d)).get()._field_Kind.ptr());;
	jule::I32 _41609_z = _1b18d1c1a_BitsizeOf(_1b3061ad5_Str(_415913_prim.ptr()));;
	if ((_41609_z == 64LLU)) {
		return;;
	};
	jule::I32 _416513_k = 0LL;;
	{
		
		if (_1b18e327b_IsI64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_1b687d80a:;
			{
				_416513_k=static_cast<jule::I32>(_1b18d3667_BitsizeOfInt(static_cast<jule::I64>(_1b18e0dd3_ReadI64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_1b18d2039_IntFromBits(_416513_k);
				};
			}
		}
		else if (_1b18e34e0_IsU64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_1b687d882:;
			{
				_416513_k=static_cast<jule::I32>(_1b18d390e_BitsizeOfUint(static_cast<jule::U64>(_1b18e1147_ReadU64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_1b18d22d1_UintFromBits(_416513_k);
				};
			}
		}
		else if (_1b18e3c2c_IsF64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_1b687d909:;
			{
				_416513_k=static_cast<jule::I32>(_1b18d33c0_BitsizeOfFloat(static_cast<jule::F64>(_1b18e1884_ReadF64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_1b18d2578_FloatFromBits(_416513_k);
				};
			}
		}
		_match_end_1b687d73e:;
	};
}



inline void _1b3056a64_makeStructLitAlloc(jule::Ptr<_1b3030a93_Data>* _418528_d, jule::Ptr<_1b2e6959d_StructLitExprModel>* _418543_lit) {
	(*(_418528_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065006_Sptr>(_1b3065006_Sptr{._field_Elem=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>((*(_418543_lit)).get()._field_Strct, 0)})}), 7)});
	(*(_418528_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6978a_AllocStructLitExprModel>(_1b2e6978a_AllocStructLitExprModel{._field_Lit=(*(_418543_lit))}), &__jule_any_type118);
}



inline jule::Ptr<_1b2ed8034_Var> _1b3056da5_buildErrorVar(jule::Ptr<_1b2e8d050_Scope>* _419623_s, jule::Ptr<_1b2e54c81_FnCallExpr>* _419639_fc) {
	return jule::new_ptr<_1b2ed8034_Var>(_1b2ed8034_Var{._field_Scope=(*(_419623_s)), ._field_Token=(*(_419639_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1b3031b1b_Value>(_1b3031b1b_Value{._field_Data=jule::new_ptr<_1b3030a93_Data>()}), });;
}



inline jule::Any _1b30571e6_findBuiltinsSema(jule::Str _421521_ident, jule::Ptr<_1b2eb48a1_Sema> _421537_s) {
	{
		auto expr = &(_421537_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b688315b:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _421617_imp = *it;
			{
				if ((_421617_imp.get()._field_ImportAll || _1b2eae12b_existIdent(_421617_imp.ptr(), _421521_ident))) {
					jule::Any _421821_def = _1b3056558_findBuiltinsImport(_421521_ident, _421617_imp);;
					if ((_421821_def != nullptr)) {
						return _421821_def;;
					};
				};
			}
			_iter_next_1b688315b:;
			++it;
			goto _iter_begin_1b688315b;
		}
		_iter_end_1b688315b:;
	};
	jule::Str _422613_ppath = _1cb18e7dd_Dir(_421537_s.get()._field_file.get()._field_File.ptr());;
	if (_1cab6e6db_HasPrefix(_422613_ppath, _1cac17344_PathStdlib)) {
		(_422613_ppath).mut_slice(_1cac17344_PathStdlib.len());;
		_422613_ppath=(jule::Str("std", 3) + _1cab750d7_Replace(_422613_ppath, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL));
		return _1b30827d7_findPackageBuiltinDef(_422613_ppath, _421521_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1b305748d_isOkForShifting(jule::Ptr<_1b3030a93_Data>* _424025_d) {
	if (_1b3031456_IsConst((*(_424025_d)).ptr())) {
		{
			
			if (_1b18e327b_IsI64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_1b6887a89:;
				{
					return (_1b18e0dd3_ReadI64((*(_424025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1b18e34e0_IsU64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_1b68873b3:;
				{
					return true;;
				}
			}
			else if (_1b18e3c2c_IsF64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_1b6887429:;
				{
					return (_1b18e1884_ReadF64((*(_424025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1b688734c:;
				{
					return false;;
				}
			}
			_match_end_1b6887281:;
		};
	};
	jule::Ptr<_1b3061772_Prim> _42539_prim = _1b305ddac_Prim((*(_424025_d)).get()._field_Kind.ptr());;
	return ((_42539_prim != nullptr) && _1b18dda18_IsInt(_1b3061ad5_Str(_42539_prim.ptr())));;
}



inline jule::Bool _1b3057845_isInstancedStruct(jule::Ptr<_1b2e687bc_StructIns> _425722_s) {
	return (_425722_s.get()._field_Decl.get()._field_Generics.len() == _425722_s.get()._field_Generics.len());;
}



inline jule::Bool _1b3057ba8_isPtrArithmeticCompatible(jule::Ptr<_1b3030a93_Data>* _426135_l, jule::Ptr<_1b3030a93_Data>* _426150_r) {
	jule::Ptr<_1b306856a_Ptr> _42629_ptr = _1b305e385_Ptr((*(_426150_r)).get()._field_Kind.ptr());;
	if ((_42629_ptr != nullptr)) {
		return _1b305c22e_Equal(_1b305e385_Ptr((*(_426135_l)).get()._field_Kind.ptr()).get()._field_Elem, _42629_ptr.get()._field_Elem);;
	};
	if (_1b3031456_IsConst((*(_426150_r)).ptr())) {
		return _1b3019681_intAssignable(jule::Str("int", 3), _426150_r);;
	};
	_1b301985c_typeCompatibilityChecker _426913_tcc = _1b301985c_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=(*(_426150_r)).get()._field_Kind, };;
	return _1b301ae46_check(&_426913_tcc);;
}



inline void _1b3057dea_applyCastKindModel(jule::Ptr<_1b3030a93_Data>* _427828_d, jule::Ptr<_1b305ba25_TypeKind>* _427843_t) {
	(*(_427828_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e69977_CastingExprModel>(_1b2e69977_CastingExprModel{._field_Expr=(*(_427828_d)).get()._field_Model, ._field_Kind=(*(_427843_t)), ._field_ExprKind=(*(_427828_d)).get()._field_Kind}), &__jule_any_type100);
}



inline void _1b30581a3_applyCastKind(jule::Ptr<_1b3030a93_Data>* _428623_d, jule::Ptr<_1b305ba25_TypeKind>* _428638_t) {
	_1b3057dea_applyCastKindModel(_428623_d, _428638_t);
	(*(_428623_d)).get()._field_Kind=(*(_428638_t));
}



inline jule::Ptr<_1b3030a93_Data> _1b30583a1_buildVoidData(void) {
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1b305866a_checkDataForIntegerIndexing(jule::Ptr<_1b3030a93_Data>* _429937_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_429937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1b305ddac_Prim((*(_429937_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b688ead5:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1b18dda18_IsInt(_1b3061ad5_Str(_1b305ddac_Prim((*(_429937_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b688eb4b:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1b3031456_IsConst((*(_429937_d)).ptr())) {
			_case_begin_1b688ebb2:;
			{
				if ((_1b18e20c1_AsF64((*(_429937_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1b305ddac_Prim((*(_429937_d)).get()._field_Kind.ptr()) == nullptr) || _1b3031456_IsConst((*(_429937_d)).ptr()) || (_1b18d1973_RealKindOf(_1b3061ad5_Str(_1b305ddac_Prim((*(_429937_d)).get()._field_Kind.ptr()).ptr())) != _1b18d1973_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1b688ec28:;
			{
				jule::Ptr<_1b305ba25_TypeKind> _431617_t = jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)});;
				_1b30581a3_applyCastKind(_429937_d, &(_431617_t));
			}
		}
		_match_end_1b688e71c:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1b3058934_applyCastModelByEnum(jule::Ptr<_1b3030a93_Data>* _432530_d, jule::Ptr<_1b2e82484_Enum> _432544_e) {
	if ((_432544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1b3061772_Prim> _43299_p = _1b305ddac_Prim(_432544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1b30649a6_IsStr(_43299_p.ptr())) {
		return;;
	};
	_1b3057dea_applyCastKindModel(_432530_d, &(_432544_e.get()._field_Kind.get()._field_Kind));
}



inline void _1b3058bdc_castConstByType(jule::Str* _433621_t, jule::Ptr<_1b3030a93_Data>* _433634_d) {
	{
		
		if (_1b18dd485_IsSigInt((*(_433621_t)))) {
			_case_begin_1b6894d1b:;
			{
				{
					auto _match_expr{ _1b18d1c1a_BitsizeOf(_1b18d1973_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b6895965:;
						{
							_1b18e2346_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1b18e1ae8_AsI64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b68959dc:;
						{
							_1b18e2346_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1b18e1ae8_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b6895a53:;
						{
							_1b18e2346_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1b18e1ae8_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b6895ab9:;
						{
							_1b18e2346_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1b18e1ae8_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b68950a2:;
				};
			}
		}
		else if (_1b18dd771_IsUnsigInt((*(_433621_t)))) {
			_case_begin_1b6894d93:;
			{
				{
					auto _match_expr{ _1b18d1c1a_BitsizeOf(_1b18d1973_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b6898e30:;
						{
							_1b18e25bb_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b6898eb8:;
						{
							_1b18e25bb_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1b18e1d5c_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b689902e:;
						{
							_1b18e25bb_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1b18e1d5c_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b6899095:;
						{
							_1b18e25bb_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1b18e1d5c_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b689528e:;
				};
			}
		}
		else if (_1b18ddd37_IsFloat((*(_433621_t)))) {
			_case_begin_1b6894e1a:;
			{
				{
					auto _match_expr{ _1b18d1c1a_BitsizeOf(_1b18d1973_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b689c40b:;
						{
							_1b18e2d3b_SetF64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1b18e20c1_AsF64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b689c494:;
						{
							_1b18e2d3b_SetF64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1b18e20c1_AsF64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b689aad0:;
				};
			}
		}
		_match_end_1b6894bea:;
	};
}



inline void _1b30591e8_updateModelToGenericIns(jule::Any* _437033_m, jule::Ptr<_1b2e71132_FnIns>* _437052_f) {
	{
		auto &_match_expr{ (*(_437033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b689d583:;
			{
				(*(_437033_m))=jule::Any((*(_437052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b689d5e9:;
			{
				(*(_437033_m)).cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_437052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b689d660:;
			{
				(*(_437033_m)).cast_ptr<_1b2e6b0d8_StructStaticIdentExprModel>(&__jule_any_type103).get()._field_Method=(*(_437052_f));
			}
		}
		_match_end_1b6895547:;
	};
}



inline jule::Bool _1b305943a_pushSubIdentFromExpr(jule::Any _438129_expr, jule::Ptr<_1b2e4c493_SubIdentTypeDecl>* _438150_t) {
	{
		auto &_match_expr{ _438129_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b68a59ec:;
			{
				jule::Ptr<_1b2e52960_IdentExpr> _438417_e = _438129_expr.cast_ptr<_1b2e52960_IdentExpr>(&__jule_any_type86);;
				(*(_438150_t)).get()._field_Idents = jule::alloc_for_append((*(_438150_t)).get()._field_Idents,1);(*(_438150_t)).get()._field_Idents.__push(jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_438417_e.get()._field_Token, ._field_Ident=_438417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b68a5a63:;
			{
				jule::Ptr<_1b2e54203_SubIdentExpr> _439017_e = _438129_expr.cast_ptr<_1b2e54203_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_1b305943a_pushSubIdentFromExpr(_439017_e.get()._field_Expr.get()._field_Kind, _438150_t)))) {
					return false;;
				};
				(*(_438150_t)).get()._field_Idents = jule::alloc_for_append((*(_438150_t)).get()._field_Idents,1);(*(_438150_t)).get()._field_Idents.__push(jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_439017_e.get()._field_Ident, ._field_Ident=_439017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1b68a5469:;
			{
				return false;;
			}
		}
		_match_end_1b68a5414:;
	};
	return true;;
}



inline jule::Bool _1b307372e_kindUsesGenerics(jule::Ptr<_1b305ba25_TypeKind>* _158226_k, jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>* _158241_generics) {
	{
		auto expr = _158241_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6bb0a2c:;
		if (it != expr_end) {
			jule::Ptr<_1b2e58a76_GenericDecl> *_158312_g = it;
			{
				if (static__1b3073333_exist(&((*(_158312_g)).get()._field_Ident), _158226_k)) {
					return true;;
				};
			}
			_iter_next_1b6bb0a2c:;
			++it;
			goto _iter_begin_1b6bb0a2c;
		}
		_iter_end_1b6bb0a2c:;
	};
	return false;;
}



inline jule::Bool _1b3073ab4_hasDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _159222_directives, jule::Str _159253_tag) {
	{
		auto expr = _159222_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6bb1159:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _159317_dr = *it;
			{
				if ((_159317_dr.get()._field_Tag.get()._field_Kind == _159253_tag)) {
					return true;;
				};
			}
			_iter_next_1b6bb1159:;
			++it;
			goto _iter_begin_1b6bb1159;
		}
		_iter_end_1b6bb1159:;
	};
	return false;;
}



inline jule::Bool _1b3073d5b_canGetPtr(jule::Ptr<_1b3030a93_Data>* _160119_d) {
	if (((!((*(_160119_d)).get()._field_Lvalue)) || _1b3031456_IsConst((*(_160119_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1b306009a_Fn((*(_160119_d)).get()._field_Kind.ptr()) != nullptr) || (_1b305e5e9_Enum((*(_160119_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1b6bb359b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b6bb2de7:;
			{
				return true;;
			}
		}
		_match_end_1b6bb2d92:;
	};
}



inline jule::Bool _1b307417a_isValidForSptrType(jule::Ptr<_1b305ba25_TypeKind>* _161428_t) {
	jule::Ptr<_1b2e687bc_StructIns> _161513_s = _1b306030e_Struct((*(_161428_t)).ptr());;
	if ((((_161513_s != nullptr) && (_161513_s.get()._field_Decl != nullptr)) && _161513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1b3074422_isValidForRef(jule::Ptr<_1b305ba25_TypeKind>* _162323_t) {
	return (_1b306009a_Fn((*(_162323_t)).ptr()) == nullptr);;
}



inline jule::Bool _1b30746db_isBuiltinStrConvertable(jule::Ptr<_1b305ba25_TypeKind>* _162633_t) {
	return (((!(_1b305cbbe_Void((*(_162633_t)).ptr()))) && (_1b306009a_Fn((*(_162633_t)).ptr()) == nullptr)) && (_1b3060a4b_Tup((*(_162633_t)).ptr()) == nullptr));;
}



inline jule::Str _1b3074961_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _163027_tokens) {
	jule::Str _163113_s = (*(_163027_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_163027_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b6bb7193:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_163212_token = it;
			{
				(_163113_s).append("::", 2);
				_163113_s+=(*(_163212_token)).get()._field_Kind;
			}
			_iter_next_1b6bb7193:;
			++it;
			goto _iter_begin_1b6bb7193;
		}
		_iter_end_1b6bb7193:;
	};
	return _163113_s;;
}



inline jule::Ptr<_1b3061772_Prim> _1b3074d18_buildPrimType(jule::Str _163918_kind) {
	return jule::new_ptr<_1b3061772_Prim>(_1b3061772_Prim{._field_Kind=_163918_kind});;
}



inline jule::Ptr<_1b2e683e3_Struct> _1b30750b0_getStructFromKind(jule::Ptr<_1b305ba25_TypeKind> _164526_k) {
	{
		
		if ((_164526_k == nullptr)) {
			_case_begin_1b6bb8392:;
			{
				return nullptr;;
			}
		}
		else if ((_1b306030e_Struct(_164526_k.ptr()) != nullptr)) {
			_case_begin_1b6bb8408:;
			{
				return _1b306030e_Struct(_164526_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1b305e121_Sptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1b6bb846e:;
			{
				return _1b30750b0_getStructFromKind(_1b305e121_Sptr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1b305ed36_Slc(_164526_k.ptr()) != nullptr)) {
			_case_begin_1b6bb84d5:;
			{
				return _1b30750b0_getStructFromKind(_1b305ed36_Slc(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1b305eac2_Arr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1b6bb876b:;
			{
				return _1b30750b0_getStructFromKind(_1b305eac2_Arr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1b305e385_Ptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1b6bb87d2:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1b6bb832b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6bb789c:;
	};
}



inline jule::Bool _1b3075357_isPrim(jule::Str _166811_kind) {
	return (((((((((((((((_166811_kind.equal("i8", 2) || _166811_kind.equal("i16", 3)) || _166811_kind.equal("i32", 3)) || _166811_kind.equal("i64", 3)) || _166811_kind.equal("u8", 2)) || _166811_kind.equal("u16", 3)) || _166811_kind.equal("u32", 3)) || _166811_kind.equal("u64", 3)) || _166811_kind.equal("f32", 3)) || _166811_kind.equal("f64", 3)) || _166811_kind.equal("int", 3)) || _166811_kind.equal("uint", 4)) || _166811_kind.equal("uintptr", 7)) || _166811_kind.equal("bool", 4)) || _166811_kind.equal("str", 3)) || _166811_kind.equal("any", 3));;
}



inline void _1b3075610_applyImplicitCast(jule::Ptr<_1b305ba25_TypeKind>* _168727_dest, jule::Ptr<_1b3030a93_Data>* _168749_d) {
	if (_1b305c95a_IsNil((*(_168749_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1b3061772_Prim> _16919_destPrim = _1b305ddac_Prim((*(_168727_dest)).ptr());;
	jule::Ptr<_1b3061772_Prim> _16929_prim = _1b305ddac_Prim((*(_168749_d)).get()._field_Kind.ptr());;
	if ((_16919_destPrim != nullptr)) {
		if (_1b3064c1a_IsAny(_16919_destPrim.ptr())) {
			if (((_16929_prim == nullptr) || (!(_1b3064c1a_IsAny(_16929_prim.ptr()))))) {
				_1b30581a3_applyCastKind(_168749_d, _168727_dest);
			};
			return;;
		};
		if (((((((!(_1b305c6e6_CppLinked((*(_168749_d)).get()._field_Kind.ptr()))) && (!((*(_168749_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_168749_d)).get()._field_Lvalue))) && (!(_1b3031456_IsConst((*(_168749_d)).ptr())))) && (_16929_prim != nullptr)) && _1b18de0ce_IsNum(_16929_prim.get()._field_Kind))) {
			_1b30581a3_applyCastKind(_168749_d, _168727_dest);
		};
		return;;
	};
	if (((_1b3060573_Trait((*(_168727_dest)).ptr()) != nullptr) && (_1b3060573_Trait((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1b3057dea_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
	if (((_1b305e85d_TypeEnum((*(_168727_dest)).ptr()) != nullptr) && (_1b305e85d_TypeEnum((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1b3057dea_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
}



inline __jule_tuple_x_1b302ac69_SymbolTable__jule_tuple_s_1cac0bec6_Log _1b3078679_buildSymbols(jule::Ptr<_1b2e172e8_Ast>* _1622_ast, jule::Trait<_1b2ea8ad7_Importer>* _1638_importer, jule::Ptr<_1b2e79866_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1b302ac69_SymbolTable__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	jule::Ptr<_1b2e79866_symbolBuilder> _1713_sb = jule::new_ptr<_1b2e79866_symbolBuilder>(_1b2e79866_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1b2e7e816_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log _1b3078aa8_analyzePackage(jule::Slice<jule::Ptr<_1b2e172e8_Ast>>* _3024_files, jule::Trait<_1b2ea8ad7_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1b302ac69_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6cd08c7:;
		if (it != expr_end) {
			jule::Ptr<_1b2e172e8_Ast> _3317_f = *it;
			{
				jule::Ptr<_1b302ac69_SymbolTable> _3418_table;;
				jule::Slice<_1cac0bec6_Log> _3429_errors;;
				({
					__jule_tuple_x_1b302ac69_SymbolTable__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b3078679_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1b6cd08c7:;
			++it;
			goto _iter_begin_1b6cd08c7;
		}
		_iter_end_1b6cd08c7:;
	};
	jule::Ptr<_1b2eb48a1_Sema> _4113_sema = jule::new_ptr<_1b2eb48a1_Sema>(_1b2eb48a1_Sema{._field_flags=(*(_3065_flags))});;
	_1b2ed4e87_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2eae6ae_Package> _4913_pkg = jule::new_ptr<_1b2eae6ae_Package>(_1b2eae6ae_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log _1b3078e93_AnalyzePackage(jule::Slice<jule::Ptr<_1b2e172e8_Ast>> _7323_files, jule::Trait<_1b2ea8ad7_Importer> _7342_importer, jule::I32 _7362_flags) {
	__jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2eae6ae_Package> _7714_package;;
	jule::Slice<_1cac0bec6_Log> _7727_logs;;
	({
		__jule_tuple_x_1b2eae6ae_Package__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b3078aa8_analyzePackage(&(_7323_files), &(_7342_importer), &(_7362_flags));
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e71132_FnIns> _1b3085059_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b6cd9309:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _2620_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b3118a49_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b6cd99be:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _2920_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b3118e34_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b6cd9aac:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _3220_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311931e_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b6cd9b23:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _3520_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b3119709_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b6cd9606:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _3820_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b3119d25_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b6cd966c:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _4120_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311a210_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b6cd96e4:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _4420_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311b013_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b6cd976b:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _4720_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311c212_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b6cd9b9a:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _5020_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311cc7e_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1b6cd9c22:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _5320_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311d5ed_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b6cd9c99:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _5620_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311d9d8_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b6cd9d21:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _5920_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311e09e_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1b6cd9491:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6cd93e7:;
	};
}



inline jule::Ptr<_1b305ad32_TypeAlias> _1b3086b93_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1b6ce22ce:;
			{
				static jule::Ptr<_1b305ad32_TypeAlias> _6920_t = jule::new_ptr<_1b305ad32_TypeAlias>(_1b305ad32_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1b6ce2345:;
			{
				static jule::Ptr<_1b305ad32_TypeAlias> _7920_t = jule::new_ptr<_1b305ad32_TypeAlias>(_1b305ad32_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1b3060e03_TypeSymbol>(_1b3060e03_TypeSymbol{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1b6ce1c18:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ce1740:;
	};
}



inline jule::Any _1b30823db_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1b2e71132_FnIns> _9413_f = _1b3085059_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_1b305ad32_TypeAlias> _9813_ta = _1b3086b93_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1b308b56b_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1b6ce527c:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _10820_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b31209da_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1b6ce5986:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _11120_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b3120dc5_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b6ce504b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ce5458:;
	};
}



inline jule::Any _1b308a724_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1b6ce7317:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _12120_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311e412_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1b6ce737d:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _12420_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311e830_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1b6ce713b:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _12720_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b311ec4d_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b6ce559b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ce637c:;
	};
}



inline jule::Any _1b308a856_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1b6ce95d3:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _13720_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b312017c_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1b6ce9649:;
			{
				static jule::Ptr<_1b2e71132_FnIns> _14020_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_Decl=jule::new_ptr<_1b2e6e85b_Fn>(_1b2e6e85b_Fn{._field_Generics=jule::Slice<jule::Ptr<_1b2e58a76_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b312059a_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b6ce73e4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ce8648:;
	};
}



inline jule::Any _1b30827d7_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b6ceb54c:;
			{
				return _1b308b56b_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b6ceb5b3:;
			{
				return _1b308a724_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b6ceb371:;
			{
				return _1b308a856_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1b6ceae64:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6cea02e:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b3117b7a_builtinCallerCommonPlain(jule::Ptr<_1b3032611_Eval>* _16534_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _16549_fc, jule::Ptr<_1b3030a93_Data>* _16571_d) {
	jule::Ptr<_1b2e71132_FnIns> _16613_f = _1b306009a_Fn((*(_16571_d)).get()._field_Kind.ptr());;
	_1b3022832_fnCallArgChecker _16813_fcac = _1b3022832_fnCallArgChecker{._field_e=(*(_16534_e)), ._field_args=(*(_16549_fc)).get()._field_Args, ._field_errorToken=(*(_16549_fc)).get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1b3024bec_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1b2e69b64_FnCallExprModel> _17913_model = jule::new_ptr<_1b2e69b64_FnCallExprModel>(_1b2e69b64_FnCallExprModel{._field_Token=(*(_16549_fc)).get()._field_Token, ._field_Func=_16613_f, ._field_Expr=(*(_16571_d)).get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		(*(_16571_d))=_1b30583a1_buildVoidData();
	} else {
		(*(_16571_d))=jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	(*(_16571_d)).get()._field_Model=jule::Any(_17913_model, &__jule_any_type34);
	return (*(_16571_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b3117e33_builtinCallerCommon(jule::Ptr<_1b3032611_Eval>* _19829_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _19844_fc, jule::Ptr<_1b3030a93_Data>* _19866_d) {
	return _1b3117b7a_builtinCallerCommonPlain(_19829_e, _19844_fc, _19866_d);;
}



inline jule::Ptr<_1b3030a93_Data> _1b311831d_builtinCallerCommonMut(jule::Ptr<_1b3032611_Eval>* _20232_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _20247_fc, jule::Ptr<_1b3030a93_Data>* _20269_d) {
	if ((!((*(_20269_d)).get()._field_Mutable))) {
		_1b3032b1c_pushErr((*(_20232_e)).ptr(), (*(_20247_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1b3117e33_builtinCallerCommon(_20232_e, _20247_fc, _20269_d);;
}



inline jule::Ptr<_1b3030a93_Data> _1b311865e_builtinCallerError(jule::Ptr<_1b3032611_Eval>* _20928_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _20943_fc) {
	if (((*(_20943_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_20943_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _21713_expr = _1b304d033_evalExpr((*(_20928_e)), (*(_20943_fc)).get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1b3030e7d_IsNil(_21713_expr.ptr())) {
		_1b3032b1c_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b3030a93_Data> _22613_d = _1b30583a1_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6d618_BuiltinErrorCallExprModel>(_1b2e6d618_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type22);
	return _22613_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3118a49_builtinCallerOut(jule::Ptr<_1b3032611_Eval>* _23126_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _23141_fc, jule::Ptr<_1b3030a93_Data>* ) {
	if (((*(_23141_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_23141_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _24013_expr = _1b304d033_evalExpr((*(_23126_e)), (*(_23141_fc)).get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b30746db_isBuiltinStrConvertable(&(_24013_expr.get()._field_Kind))))) {
		_1b3032b1c_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _25013_d = _1b30583a1_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6ba78_BuiltinOutCallExprModel>(_1b2e6ba78_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type27);
	return _25013_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3118e34_builtinCallerOutln(jule::Ptr<_1b3032611_Eval>* _25528_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _25543_fc, jule::Ptr<_1b3030a93_Data>* _25565_d) {
	(*(_25565_d))=_1b3118a49_builtinCallerOut(_25528_e, _25543_fc, _25565_d);
	if (((*(_25565_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_25565_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>(_1b2e6bc65_BuiltinOutlnCallExprModel{._field_Expr=(*(_25565_d)).get()._field_Model.cast_ptr<_1b2e6ba78_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Expr, }), &__jule_any_type28);
	return (*(_25565_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311931e_builtinCallerNew(jule::Ptr<_1b3032611_Eval>* _26726_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _26741_fc, jule::Ptr<_1b3030a93_Data>* _26763_d) {
	if (((*(_26741_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_26741_fc)).get()._field_Args.len() > 2LL)) {
		_1b3032b1c_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _27613_t = _1b304c917_evalExprKind((*(_26726_e)), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1b3032b1c_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1b307417a_isValidForSptrType(&(_27613_t.get()._field_Kind))))) {
		jule::Ptr<_1b2e687bc_StructIns> _28717_s = _1b306030e_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1b3032b1c_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_26763_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(jule::new_ptr<_1b3065006_Sptr>(_1b3065006_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if (((*(_26741_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1b305ba25_TypeKind> _30117_old = (*(_26726_e)).get()._field_prefix;;
		(*(_26726_e)).get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1b3030a93_Data> _30417_init = _1b304d033_evalExpr((*(_26726_e)), (*(_26741_fc)).get()._field_Args[1LL]);;
		(*(_26726_e)).get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_1cb188a5c_Token> _30921_token = (*(_26741_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1b2ec71bb_checkValidityForInitExpr((*(_26726_e)).get()._field_s, (!((*(_26726_e)).get()._field_immutable)), false, &(_27613_t.get()._field_Kind), &(_30417_init), &(_30921_token));
			_1b2ebe449_checkAssignType((*(_26726_e)).get()._field_s, false, &(_27613_t.get()._field_Kind), &(_30417_init), _30921_token);
			(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6c13e_BuiltinNewCallExprModel>(_1b2e6c13e_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type119);
		};
	} else {
		(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6c13e_BuiltinNewCallExprModel>(_1b2e6c13e_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type119);
	};
	return (*(_26763_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b3119709_builtinCallerPanic(jule::Ptr<_1b3032611_Eval>* _32928_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _32943_fc, jule::Ptr<_1b3030a93_Data>* ) {
	if (((*(_32943_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_32943_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _33813_expr = _1b304d033_evalExpr((*(_32928_e)), (*(_32943_fc)).get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b305ddac_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1b30649a6_IsStr(_1b305ddac_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1b3032b1c_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b3030a93_Data> _34713_d = _1b30583a1_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6c32b_BuiltinPanicCallExprModel>(_1b2e6c32b_BuiltinPanicCallExprModel{._field_Token=(*(_32943_fc)).get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type29);
	return _34713_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b3119d25_builtinCallerMake(jule::Ptr<_1b3032611_Eval>* _35527_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _35542_fc, jule::Ptr<_1b3030a93_Data>* _35564_d) {
	if (((*(_35542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_35542_fc)).get()._field_Args.len() == 1LL)) {
			_1b3032b1c_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1b3032b1c_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _36513_t = _1b304c917_evalExprKind((*(_35527_e)), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1b3032b1c_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_35542_fc)).get()._field_Args.len() > 3LL)) {
		_1b3032b1c_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_35564_d)).get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1b3030a93_Data> _38113_lenExpr = _1b304d033_evalExpr(_1b2ebdb41_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1b303b20d_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_38113_lenExpr), (*(_35542_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1b2e6c705_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1b2e6c705_BuiltinMakeCallExprModel>(_1b2e6c705_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	(*(_35564_d)).get()._field_Model=jule::Any(_38813_model, &__jule_any_type120);
	if (((*(_35542_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1b3030a93_Data> _39417_capExpr = _1b304d033_evalExpr(_1b2ebdb41_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return (*(_35564_d));;
		};
		_1b303b20d_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_39417_capExpr), (*(_35542_fc)).get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return (*(_35564_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311a210_builtinCallerAppend(jule::Ptr<_1b3032611_Eval>* _40429_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _40444_fc, jule::Ptr<_1b3030a93_Data>* _40466_d) {
	if (((*(_40444_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_40444_fc)).get()._field_Args.len() == 1LL)) {
			_1b3032b1c_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1b3032b1c_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _41413_t = _1b304d033_evalExpr((*(_40429_e)), (*(_40444_fc)).get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1b305ed36_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1b3032b1c_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2e71132_FnIns> _42413_f = jule::new_ptr<_1b2e71132_FnIns>(_1b2e71132_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b2e70263_ParamIns>>::make({jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1b2e70263_ParamIns>(_1b2e70263_ParamIns{._field_Decl=jule::new_ptr<_1b2e6e66e_Param>(_1b2e6e66e_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1b305ed36_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1b3030a93_Data>(jule::Ptr<_1b3032611_Eval>*,jule::Ptr<_1b2e54c81_FnCallExpr>*,jule::Ptr<_1b3030a93_Data>*)>(_1b3117b7a_builtinCallerCommonPlain), });;
	(*(_40466_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_42413_f, 1)});
	(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6b4b2_CommonIdentExprModel>(_1b2e6b4b2_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_40466_d))=_1b3117b7a_builtinCallerCommonPlain(_40429_e, _40444_fc, _40466_d);
	if (((*(_40466_d)) != nullptr)) {
		jule::Ptr<_1b2e69b64_FnCallExprModel> _45217_model = (*(_40466_d)).get()._field_Model.cast_ptr<_1b2e69b64_FnCallExprModel>(&__jule_any_type34);;
		(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6c8e2_BuiltinAppendCallExprModel>(_1b2e6c8e2_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type25);
	};
	return (*(_40466_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311a694_callerCopySlice(jule::Ptr<_1b3030a93_Data>* _46125_dest, jule::Ptr<_1b3032611_Eval>* _46143_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _46158_fc, jule::Ptr<_1b3030a93_Data>* _46180_d) {
	if ((!((*(_46125_dest)).get()._field_Mutable))) {
		_1b3032b1c_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b3030a93_Data> _46613_src = _1b304d033_evalExpr((*(_46143_e)), (*(_46158_fc)).get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b3065963_Slc> _47013_slc = _1b305ed36_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1b305d197_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1b3032b1c_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1b305c22e_Equal((*(_46125_dest)).get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1b3032b1c_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1b3061772_Prim> _48013_destPrim = _1b305ddac_Prim(_1b305ed36_Slc((*(_46125_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1b3061772_Prim> _48113_prim = _1b305ddac_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1b30649a6_IsStr(_48113_prim.ptr())))) || (!(_1b306307b_IsU8(_48013_destPrim.ptr()))))) {
			_1b3032b1c_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_46180_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_46180_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6d42b_BuiltinCopyCallExprModel>(_1b2e6d42b_BuiltinCopyCallExprModel{._field_Dest=(*(_46125_dest)), ._field_Src=_46613_src}), &__jule_any_type31);
	return (*(_46180_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311ab28_callerCopyStr(jule::Ptr<_1b3030a93_Data>* _49523_dest, jule::Ptr<_1b3032611_Eval>* _49541_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _49556_fc, jule::Ptr<_1b3030a93_Data>* _49578_d) {
	if ((!((*(_49523_dest)).get()._field_Mutable))) {
		_1b3032b1c_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b3030a93_Data> _50013_src = _1b304d033_evalExpr((*(_49541_e)), (*(_49556_fc)).get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1b305ddac_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d399b9:;
			{
				if (_1b30649a6_IsStr(_1b305ddac_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1b305ed36_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d39a30:;
			{
				jule::Ptr<_1b3065963_Slc> _51017_slc = _1b305ed36_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1b305ddac_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1b306307b_IsU8(_1b305ddac_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1b6d39799:;
	};
	_1b3032b1c_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str((*(_49523_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b305be21_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_49578_d)).get()._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_49578_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6d42b_BuiltinCopyCallExprModel>(_1b2e6d42b_BuiltinCopyCallExprModel{._field_Dest=(*(_49523_dest)), ._field_Src=_50013_src}), &__jule_any_type31);
	return (*(_49578_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311b013_builtinCallerCopy(jule::Ptr<_1b3032611_Eval>* _52527_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _52542_fc, jule::Ptr<_1b3030a93_Data>* _52564_d) {
	if (((*(_52542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_52542_fc)).get()._field_Args.len() == 1LL)) {
			_1b3032b1c_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1b3032b1c_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_52542_fc)).get()._field_Args.len() > 2LL)) {
		_1b3032b1c_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _53813_dest = _1b304d033_evalExpr((*(_52527_e)), (*(_52542_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1b6d44b8e:;
			{
				return nullptr;;
			}
		}
		else if ((_1b305ed36_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d44c05:;
			{
				return _1b311a694_callerCopySlice(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else if (((_1b305ddac_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1b30649a6_IsStr(_1b305ddac_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b6d449e6:;
			{
				return _1b311ab28_callerCopyStr(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else {
			_case_begin_1b6d43c48:;
			{
				_1b3032b1c_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b6d43bd2:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b311b354_callerLenSlice(jule::Ptr<_1b3030a93_Data>* _55224_expr, jule::Ptr<_1b3030a93_Data>* _55242_d) {
	(*(_55242_d)).get()._field_Kind=_1b3029ce0_lenKind();
	(*(_55242_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6cace_BuiltinLenCallExprModel>(_1b2e6cace_BuiltinLenCallExprModel{._field_Expr=(*(_55224_expr))}), &__jule_any_type121);
	return (*(_55242_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311b695_callerLenMap(jule::Ptr<_1b3030a93_Data>* _56022_expr, jule::Ptr<_1b3030a93_Data>* _56040_d) {
	(*(_56040_d)).get()._field_Kind=_1b3029ce0_lenKind();
	(*(_56040_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6cace_BuiltinLenCallExprModel>(_1b2e6cace_BuiltinLenCallExprModel{._field_Expr=(*(_56022_expr))}), &__jule_any_type121);
	return (*(_56040_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311b9d6_callerLenArr(jule::Ptr<_1b3030a93_Data>* _56822_expr, jule::Ptr<_1b3030a93_Data>* _56840_d) {
	(*(_56840_d)).get()._field_Kind=_1b3029ce0_lenKind();
	(*(_56840_d)).get()._field_Constant=static__1b18dea5d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1b305eac2_Arr((*(_56822_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_56840_d)).get()._field_Model=jule::Any((*(_56840_d)).get()._field_Constant, &__jule_any_type47);
	return (*(_56840_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311bd27_callerLenStr(jule::Ptr<_1b3030a93_Data>* _57522_expr, jule::Ptr<_1b3030a93_Data>* _57540_d) {
	(*(_57540_d)).get()._field_Kind=_1b3029ce0_lenKind();
	if (_1b3031456_IsConst((*(_57522_expr)).ptr())) {
		(*(_57540_d)).get()._field_Constant=static__1b18dea5d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1b18e1620_ReadStr((*(_57522_expr)).get()._field_Constant.ptr()).len())));
		(*(_57540_d)).get()._field_Model=jule::Any((*(_57540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_57540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6cace_BuiltinLenCallExprModel>(_1b2e6cace_BuiltinLenCallExprModel{._field_Expr=(*(_57522_expr))}), &__jule_any_type121);
	};
	return (*(_57540_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311c212_builtinCallerLen(jule::Ptr<_1b3032611_Eval>* _58826_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _58841_fc, jule::Ptr<_1b3030a93_Data>* _58863_d) {
	if (((*(_58841_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_58841_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _59613_dest = _1b304d033_evalExpr((*(_58826_e)), (*(_58841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1b6d4e913:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1b6d4e979:;
			{
				_1b3032b1c_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b305ed36_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d4e76a:;
			{
				return _1b311b354_callerLenSlice(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1b305eac2_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d4e7e2:;
			{
				return _1b311b9d6_callerLenArr(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1b30607d7_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d4da33:;
			{
				return _1b311b695_callerLenMap(&(_59613_dest), _58863_d);;
			}
		}
		else if (((_1b305ddac_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1b30649a6_IsStr(_1b305ddac_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b6d4da99:;
			{
				return _1b311bd27_callerLenStr(&(_59613_dest), _58863_d);;
			}
		}
		else {
			_case_begin_1b6d4d9bc:;
			{
				_1b3032b1c_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b6d4d956:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b311c553_callerCapSlice(jule::Ptr<_1b3030a93_Data>* _61724_expr, jule::Ptr<_1b3030a93_Data>* _61742_d) {
	(*(_61742_d)).get()._field_Kind=_1b3029ce0_lenKind();
	(*(_61742_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6ccbb_BuiltinCapCallExprModel>(_1b2e6ccbb_BuiltinCapCallExprModel{._field_Expr=(*(_61724_expr))}), &__jule_any_type122);
	return (*(_61742_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311c894_callerCapStr(jule::Ptr<_1b3030a93_Data>* _62522_expr, jule::Ptr<_1b3030a93_Data>* _62540_d) {
	(*(_62540_d)).get()._field_Kind=_1b3029ce0_lenKind();
	if (_1b3031456_IsConst((*(_62522_expr)).ptr())) {
		(*(_62540_d)).get()._field_Constant=static__1b18dea5d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1b18e1620_ReadStr((*(_62522_expr)).get()._field_Constant.ptr()).cap())));
		(*(_62540_d)).get()._field_Model=jule::Any((*(_62540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_62540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b2e6ccbb_BuiltinCapCallExprModel>(_1b2e6ccbb_BuiltinCapCallExprModel{._field_Expr=(*(_62522_expr))}), &__jule_any_type122);
	};
	return (*(_62540_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311cc7e_builtinCallerCap(jule::Ptr<_1b3032611_Eval>* _63826_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _63841_fc, jule::Ptr<_1b3030a93_Data>* _63863_d) {
	if (((*(_63841_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63841_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _64613_dest = _1b304d033_evalExpr((*(_63826_e)), (*(_63841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1b6d59555:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1b6d595bb:;
			{
				_1b3032b1c_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b305ed36_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d593ac:;
			{
				return _1b311c553_callerCapSlice(&(_64613_dest), _63863_d);;
			}
		}
		else if (((_1b305ddac_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1b30649a6_IsStr(_1b305ddac_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b6d59423:;
			{
				return _1b311c894_callerCapStr(&(_64613_dest), _63863_d);;
			}
		}
		else {
			_case_begin_1b6d5860e:;
			{
				_1b3032b1c_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b6d58598:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b311d213_callerDeleteMap(jule::Ptr<_1b3032611_Eval>* _66325_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _66340_fc, jule::Ptr<_1b3030a93_Data>* _66362_expr, jule::Ptr<_1b3030a93_Data>* _66380_d) {
	if ((!((*(_66362_expr)).get()._field_Mutable))) {
		_1b3032b1c_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_66380_d))=_1b30583a1_buildVoidData();
	jule::Ptr<_1b2e6abba_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1b2e6abba_BuiltinDeleteCallExprModel>(_1b2e6abba_BuiltinDeleteCallExprModel{._field_Dest=(*(_66362_expr)), });;
	if (((*(_66340_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1b3030a93_Data> _67217_key = _1b304d033_evalExpr((*(_66325_e)), (*(_66340_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1b6d60a78:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1b6d5e3d4:;
				{
					_1b3032b1c_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b6d5e36d:;
				{
					;
					jule::Ptr<_1b305ba25_TypeKind> _68121_keyType = _1b30607d7_Map((*(_66362_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1b2ebe449_checkAssignType((*(_66325_e)).get()._field_s, false, &(_68121_keyType), &(_67217_key), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b6d5e307:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	(*(_66380_d)).get()._field_Model=jule::Any(_66813_model, &__jule_any_type32);
	return (*(_66380_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b311d5ed_builtinCallerDelete(jule::Ptr<_1b3032611_Eval>* _69229_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _69244_fc, jule::Ptr<_1b3030a93_Data>* _69266_d) {
	if (((*(_69244_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69244_fc)).get()._field_Args.len() > 2LL)) {
		_1b3032b1c_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _70013_dest = _1b304d033_evalExpr((*(_69229_e)), (*(_69244_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1b6d66166:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1b6d661cc:;
			{
				_1b3032b1c_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b30607d7_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d65ebd:;
			{
				return _1b311d213_callerDeleteMap(_69229_e, _69244_fc, &(_70013_dest), _69266_d);;
			}
		}
		else {
			_case_begin_1b6d65220:;
			{
				_1b3032b1c_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b6d651a9:;
	};
}



inline jule::Ptr<_1b3030a93_Data> _1b311d9d8_builtinCallerClone(jule::Ptr<_1b3032611_Eval>* _71528_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _71543_fc, jule::Ptr<_1b3030a93_Data>* ) {
	if (((*(_71543_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_71543_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _72413_d = _1b304c917_evalExprKind((*(_71528_e)), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b305d8d4_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1b305ed36_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1b30607d7_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1b305eac2_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1b305e121_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b6d6b424:;
				{
					{
						_1b3032b1c_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1b306030e_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b6d6ac81:;
				{
					{
						_1b3032b1c_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			else {
				_case_begin_1b6d6ac1a:;
				{
					{
						_1b3032b1c_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1b305be21_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			_match_end_1b6d6a852:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6be52_BuiltinCloneCallExprModel>(_1b2e6be52_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type26);
	return _72413_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b311e09e_builtinCallerAssert(jule::Ptr<_1b3032611_Eval>* _75729_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _75744_fc, jule::Ptr<_1b3030a93_Data>* ) {
	if (((*(_75744_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_75744_fc)).get()._field_Args.len() > 2LL)) {
		_1b3032b1c_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _76613_expr = _1b304d033_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b305ddac_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1b3064742_IsBool(_1b305ddac_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1b3032b1c_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2e6c518_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1b2e6c518_BuiltinAssertCallExprModel>(_1b2e6c518_BuiltinAssertCallExprModel{._field_Token=(*(_75744_fc)).get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_75744_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1b3030a93_Data> _78317_log = _1b304d033_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1b3031456_IsConst(_78317_log.ptr()))) || (_1b305ddac_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1b30649a6_IsStr(_1b305ddac_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1b3032b1c_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1b305be21_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1b18e1620_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1b3030a93_Data> _79613_d = _1b30583a1_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type30);
	return _79613_d;;
}



inline jule::Ptr<_1b3030a93_Data> _1b311e412_builtinCallerStdMemSizeOf(jule::Ptr<_1b3032611_Eval>* _80135_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _80150_fc, jule::Ptr<_1b3030a93_Data>* ) {
	jule::Ptr<_1b3030a93_Data> _80213_result = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_80150_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _80213_result;;
	};
	if (((*(_80150_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _81413_d = _1b304c917_evalExprKind((*(_80135_e)), (*(_80150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6d805_SizeofExprModel>(_1b2e6d805_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type123);
	return _80213_result;;
}



inline jule::Ptr<_1b3030a93_Data> _1b311e830_builtinCallerStdMemAlignOf(jule::Ptr<_1b3032611_Eval>* _82336_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _82351_fc, jule::Ptr<_1b3030a93_Data>* ) {
	jule::Ptr<_1b3030a93_Data> _82413_result = jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_82351_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _82413_result;;
	};
	if (((*(_82351_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _83613_d = _1b304c917_evalExprKind((*(_82336_e)), (*(_82351_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6d9e2_AlignofExprModel>(_1b2e6d9e2_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type124);
	return _82413_result;;
}



inline jule::Ptr<_1b3030a93_Data> _1b311ec4d_builtinCallerStdMemFree(jule::Ptr<_1b3032611_Eval>* _84533_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _84548_fc, jule::Ptr<_1b3030a93_Data>* ) {
	if (((*(_84548_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_84548_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _85413_d = _1b304c917_evalExprKind((*(_84533_e)), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b305d670_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1b3032b1c_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b3030a93_Data> _86313_result = _1b30583a1_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1b2e6e295_FreeExprModel>(_1b2e6e295_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type33);
	return _86313_result;;
}



inline jule::Ptr<_1b3030a93_Data> _1b312017c_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1b3032611_Eval>* _86845_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _86860_fc, jule::Ptr<_1b3030a93_Data>* ) {
	if (((*(_86860_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86860_fc)).get()._field_Args.len() > 1LL)) {
		_1b3032b1c_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b3030a93_Data> _87713_d = _1b304c917_evalExprKind((*(_86845_e)), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b30746db_isBuiltinStrConvertable(&(_87713_d.get()._field_Kind))))) {
		_1b3032b1c_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b3030a93_Data>(_1b3030a93_Data{._field_Kind=jule::new_ptr<_1b305ba25_TypeKind>(_1b305ba25_TypeKind{._field_Kind=jule::Trait<_1b305b5e6_Kind>(_1b3074d18_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1b2e6ddbb_IntegratedToStrExprModel>(_1b2e6ddbb_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type125), });;
}



inline jule::Ptr<_1b3030a93_Data> _1b312059a_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1b3032611_Eval>* _89544_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _89559_fc, jule::Ptr<_1b3030a93_Data>* _89581_d) {
	if ((!(_1b3033557_isUnsafe((*(_89544_e)).ptr())))) {
		_1b3032b1c_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_89559_fc)).get()._field_Args.len() < 1LL)) {
		_1b3032b1c_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _90513_argd = _1b304d033_evalExpr((*(_89544_e)), (*(_89559_fc)).get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1b305ddac_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1b30649a6_IsStr(_1b305ddac_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1b3032b1c_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1b305be21_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1b3031456_IsConst(_90513_argd.ptr()))) || (!(_1b18e39b8_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1b3032b1c_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b3030a93_Data> _92013_r = _1b30583a1_buildVoidData();;
	jule::Ptr<_1b2e71132_FnIns> _92213_f = _1b306009a_Fn((*(_89581_d)).get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1b2e6e0a8_BackendEmitExprModel> _92713_model = jule::new_ptr<_1b2e6e0a8_BackendEmitExprModel>(_1b2e6e0a8_BackendEmitExprModel{._field_Code=_1b18e1620_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if (((*(_89559_fc)).get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_89559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_89559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b6d94a35:;
			if (it != expr_end) {
				jule::Ptr<_1b2e50c9e_Expr> _93321_arg = *it;
				{
					_90513_argd=_1b304c917_evalExprKind((*(_89544_e)), _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1b6d94a35:;
				++it;
				goto _iter_begin_1b6d94a35;
			}
			_iter_end_1b6d94a35:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type24);
	return _92013_r;;
}



inline jule::Ptr<_1b3030a93_Data> _1b31209da_builtinCallerStdDebugOut(jule::Ptr<_1b3032611_Eval>* _94634_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _94649_fc, jule::Ptr<_1b3030a93_Data>* _94671_d) {
	(*(_94671_d))=_1b3118a49_builtinCallerOut(_94634_e, _94649_fc, _94671_d);
	if (((*(_94671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_94671_d)).get()._field_Model.cast_ptr<_1b2e6ba78_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Debug=true;
	return (*(_94671_d));;
}



inline jule::Ptr<_1b3030a93_Data> _1b3120dc5_builtinCallerStdDebugOutln(jule::Ptr<_1b3032611_Eval>* _95536_e, jule::Ptr<_1b2e54c81_FnCallExpr>* _95551_fc, jule::Ptr<_1b3030a93_Data>* _95573_d) {
	(*(_95573_d))=_1b3118e34_builtinCallerOutln(_95536_e, _95551_fc, _95573_d);
	if (((*(_95573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_95573_d)).get()._field_Model.cast_ptr<_1b2e6bc65_BuiltinOutlnCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_95573_d));;
}



inline jule::Bool _1b31e92ab_FindModuleFile(jule::Slice<jule::Ptr<_20bad439a_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d99b28:;
		if (it != expr_end) {
			jule::Ptr<_20bad439a_DirEntry> *_1312_d = it;
			{
				if (((!(_20ba66a47_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b6d99b28:;
			++it;
			goto _iter_begin_1b6d99b28;
		}
		_iter_end_1b6d99b28:;
	};
	return false;;
}



inline jule::Str _1b31e93dd_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_20bad439a_DirEntry>> _2617_dirents = ({
				auto except = static__1cab7a263_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b6d99d59;
				} jule::Slice<jule::Ptr<_20bad439a_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1b31e92ab_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I32 _3513_n = _2427_path.len();;
			_2427_path=_1cab797b2_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1b6d99d59;
			};
		}
	_iter_next_1b6d99d59:;
	}
	_iter_end_1b6d99d59:;;
	return jule::Str();;
}



inline jule::Slice<_1cac0bec6_Log> _1b31e961e_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__20bb0b867_Read(_1cab78b57_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1cac0bec6_Log>::make({_1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1cab76acd_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1cac0bec6_Log>::make({_1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1b38356c7_FileInfo> _1b38382ce_ParseFile(jule::Ptr<_1cb18dde7_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b38356c7_FileInfo> _2713_finf = jule::new_ptr<_1b38356c7_FileInfo>();;
	({
		__jule_tuple_x_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log __jule_assign_result = _1b387ec2c_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log _1b387ec2c_parseFileset(jule::Ptr<_1cb18dde7_File> _5521_f) {
	__jule_tuple_x_1b2e172e8_Ast__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	jule::Ptr<_1b389d6c9_parser> _5613_p = jule::new_ptr<_1b389d6c9_parser>();;
	_1b38ad09b_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2e5b716_ScopeTree> _1b3880656_newScope(void) {
	return jule::new_ptr<_1b2e5b716_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b3880942_isSt(jule::Ptr<_1cb188a5c_Token> _499_current, jule::Ptr<_1cb188a5c_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U32>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U32>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b3880c83_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U32>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1cb188a5c_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U32>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U32>(7LLU)) && _1cb189552_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b3881118_nextStPos(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _7015_tokens, jule::I32 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _7113_braceN = 0LL;;
	jule::I32 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_1cb188a5c_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(3LLU)) {
					_case_begin_1b6e2a11a:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1b6e32386:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1b3880c83_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b3880942_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1b6e2a901:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b3880942_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1b6e2a736:;
						};
						goto _iter_next_1b6e28822;
					}
				}
				_match_end_1b6e2a0a4:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1b6e28822;
			};
			if ((_7213_i > _7033_start)) {
				if (_1b3880c83_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1b6e28822;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b3880942_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b3880942_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1b6e28822;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b6e28822:;
	}
	_iter_end_1b6e28822:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool _1b3881459_skipSt(jule::I32* _13216_i, jule::Slice<jule::Ptr<_1cb188a5c_Token>> _13228_tokens) {
	__jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b3881118_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1cb188a5c_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool __jule_assign_result = _1b3881459_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1b3881756_stmt>> _1b3881aec_splitStmts(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1b3881756_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1b3881756_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1cb188a5c_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_1cb188a5c_Token__jule_tuple_bool __jule_assign_result = _1b3881459_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1b3881756_stmt>(_1b3881756_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1b6e39ed7:;
	}
	_iter_end_1b6e39ed7:;;
	return _15513_stmts;;
}



inline jule::Bool _1b38982d9_isTypeOp(jule::Str* _88814_kind) {
	return (((*(_88814_kind)).equal("&", 1) || (*(_88814_kind)).equal("&&", 2)) || (*(_88814_kind)).equal("*", 1));;
}



inline jule::Bool _1b38985c5_isTypeRange(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto expr = _89521_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ee3a0d:;
		if (it != expr_end) {
			jule::I32 _8979_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					if (_89712_token.get()._field_Kind.equal("[", 1)) {
						if (_89613_op) {
							return true;;
						};
						jule::I32 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1cb188a5c_Token>> _90425_lTokens = (*(_89521_tokens)).slice(_8979_i);;
						{
							auto expr = &(_90425_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b6ee4d83:;
							if (it != expr_end) {
								jule::Ptr<_1cb188a5c_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U32>(3LLU)) {
											_case_begin_1b6ee6516:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1b6ee6d52:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1b6ee4d83;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1b6ee6dc9:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1b6ee4d83;
														}
													}
													_match_end_1b6ee6b87:;
												};
											}
										}
										_match_end_1b6ee62c4:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1b38982d9_isTypeOp(&(_90524_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1b6ee4d83:;
								++it;
								goto _iter_begin_1b6ee4d83;
							}
							_iter_end_1b6ee4d83:;
						};
						return true;;
					};
				};
				if ((!(_1b38982d9_isTypeOp(&(_89712_token.get()._field_Kind))))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1b6ee3a0d:;
			++it;
			_8979_i++;
			goto _iter_begin_1b6ee3a0d;
		}
		_iter_end_1b6ee3a0d:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1cb188a5c_Token>> _1b389886c_getBlockExpr(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _93322_tokens) {
	jule::I32 _93413_braceN = 0LL;;
	jule::I32 _93513_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ee85d4:;
		if (it != expr_end) {
			jule::I32 _9369_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(16LLU) || _match_expr == static_cast<jule::U32>(17LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
						_case_begin_1b6ee93a4:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1b6ee942b:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b6eea1b8:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1b6eea2ea;
										};
										return (*(_93322_tokens)).slice(0LL, _9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b6eea839:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1b6eea361:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1b6eea2ea:;
							};
						}
					}
					_match_end_1b6ee930a:;
				};
			}
			_iter_next_1b6ee85d4:;
			++it;
			_9369_i++;
			goto _iter_begin_1b6ee85d4;
		}
		_iter_end_1b6ee85d4:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token _1b3898c02_splitDelim(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _96420_tokens, jule::U32 _96438_delim) {
	__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_func_result;
	jule::I32 _96513_rangeN = 0LL;;
	{
		auto expr = _96420_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ee8ded:;
		if (it != expr_end) {
			jule::I32 _9669_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1b6eeca17:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b6eed7e8:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1b6ee8ded;
									}
								}
								else {
									_case_begin_1b6eed40d:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1b6eed243:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1b6eeca8e:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1cb188a5c_Token>> _98025_l = (*(_96420_tokens)).slice(0LL, _9669_i);;
								jule::Slice<jule::Ptr<_1cb188a5c_Token>> _98125_r = (*(_96420_tokens)).slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1b6eec7e7:;
				};
			}
			_iter_next_1b6ee8ded:;
			++it;
			_9669_i++;
			goto _iter_begin_1b6ee8ded;
		}
		_iter_end_1b6ee8ded:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1b3898e99_findLowestPrecOp(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I32 _99713_precPos = -1LL;;
	jule::I32 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto expr = _99122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7001103:;
		if (it != expr_end) {
			jule::I32 _10019_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> *_100112_token = it;
			{
				{
					
					if (((*(_100112_token)).get()._field_Id == static_cast<jule::U32>(3LLU))) {
						_case_begin_1b7001d3a:;
						{
							{
								auto &_match_expr{ (*(_100112_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b7002984:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1b700319e;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1b700319e:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1b7002c1a:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1b7002a50:;
							};
							goto _iter_next_1b7001103;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1b7001db2:;
						{
							goto _iter_next_1b7001103;
						}
					}
					else if (((*(_100112_token)).get()._field_Id == static_cast<jule::U32>(16LLU))) {
						_case_begin_1b7001e39:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1b7001103;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1b7001eb1:;
						{
							goto _iter_next_1b7001103;
						}
					}
					else if (((*(_100112_token)).get()._field_Id != static_cast<jule::U32>(7LLU))) {
						_case_begin_1b7002038:;
						{
							goto _iter_next_1b7001103;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1b70020b0:;
						{
							goto _iter_next_1b7001103;
						}
					}
					_match_end_1b7001bd6:;
				};
				jule::Ptr<_1cb188a5c_Token> _102813_left = (*(_99122_tokens))[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U32>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U32>(11LLU)))) {
					goto _iter_next_1b7001103;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U32>(3LLU))) && _102813_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_1cb188a5c_Token> _103617_lleft = (*(_99122_tokens))[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U32>(3LLU)) && _103617_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100112_token)).get()._field_Kind.equal("&", 1) || (*(_100112_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_1b7001103;
						};
					};
				};
				jule::U8 _104513_p = _1cb188e14_Prec((*(_100112_token)).ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1b7001103:;
			++it;
			_10019_i++;
			goto _iter_begin_1b7001103;
		}
		_iter_end_1b7001103:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_1b2e52960_IdentExpr> _1b3899241_buildIdentExpr(jule::Ptr<_1cb188a5c_Token>* _105424_token) {
	return jule::new_ptr<_1b2e52960_IdentExpr>(_1b2e52960_IdentExpr{._field_Token=(*(_105424_token)), ._field_Ident=(*(_105424_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_int _1b38994d8_getRangeExprTokens(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _106228_tokens) {
	__jule_tuple_sx_1cb188a5c_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _106313_rangeN = 0LL;;
	jule::I32 _106413_i = ((*(_106228_tokens)).len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_1cb188a5c_Token> _106613_tok = (*(_106228_tokens))[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b700b54d:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1b700b152:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1b700ae43:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106228_tokens)).slice(0LL, _106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b700a12e:;
	}
	_iter_end_1b700a12e:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1b389a242_checkAssignTokens(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1cb18d105_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I32 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b709e8aa:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b70a0b31:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1b70a0735:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1b70a0526:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1b709e8aa;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(7LLU)) && _1cb18d644_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1b709e8aa:;
			++it;
			goto _iter_begin_1b709e8aa;
		}
		_iter_end_1b709e8aa:;
	};
	return false;;
}



inline _1cac0bec6_Log _1b389b463_makeErr(jule::I32 _5212_row, jule::I32 _5222_col, jule::Ptr<_1cb18dde7_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_1cac0c416_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_1cb188a5c_Token>> _1b389b93b_range(jule::I32* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1cb188a5c_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U32>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I32 _8013_rangeN = 1LL;;
	jule::I32 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_1cb188a5c_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1b70a640b:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1b70a6483:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1b70a61db:;
				};
			};
		}
	_iter_next_1b70a541b:;
	}
	_iter_end_1b70a541b:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token _1b389bbd3_rangeLast(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _10319_tokens) {
	__jule_tuple_sx_1cb188a5c_Token__jule_tuple_sx_1cb188a5c_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U32>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _10913_braceN = 0LL;;
	jule::I32 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1cb188a5c_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b70aa6eb:;
						{
							(_10913_braceN)++;
							goto _iter_next_1b70a7451;
						}
					}
					else {
						_case_begin_1b70aa300:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1b70aa0e1:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b70a7451:;
	}
	_iter_end_1b70a7451:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log _1b389c0bd_partsKind(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _13713_parts = nullptr;;
	jule::Slice<_1cac0bec6_Log> _13813_errors = nullptr;;
	jule::I32 _14013_rangeN = 0LL;;
	jule::I32 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70ad402:;
		if (it != expr_end) {
			jule::I32 _1429_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b70aea74:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1b70ad402;
							}
						}
						else {
							_case_begin_1b70ae678:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1b70ae469:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1b70ad402;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_1cac0bec6_Log _16121_err = _1b389b463_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I32>((_1429_i + 1LL));
				};
			}
			_iter_next_1b70ad402:;
			++it;
			_1429_i++;
			goto _iter_begin_1b70ad402;
		}
		_iter_end_1b70ad402:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_1cb188a5c_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log _1b389c4a8_parts(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _18415_tokens, jule::U32 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_1cb188a5c_Token__jule_tuple_s_1cac0bec6_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cb188a5c_Token>>> _18913_parts = nullptr;;
	jule::Slice<_1cac0bec6_Log> _19013_errors = nullptr;;
	jule::I32 _19213_rangeN = 0LL;;
	jule::I32 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70b4a79:;
		if (it != expr_end) {
			jule::I32 _1949_i = it - expr->begin();
			jule::Ptr<_1cb188a5c_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b70b61eb:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1b70b4a79;
							}
						}
						else {
							_case_begin_1b70b5d00:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1b70b5ae1:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1b70b4a79;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_1cac0bec6_Log _21321_err = _1b389b463_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I32>((_1949_i + 1LL));
				};
			}
			_iter_next_1b70b4a79:;
			++it;
			_1949_i++;
			goto _iter_begin_1b70b4a79;
		}
		_iter_end_1b70b4a79:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_1cb188a5c_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1b389c750_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1b70b9694:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1b70b970a:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1b70b9485:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1b70b5360:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b70b8dd0:;
	};
}



inline _1cac0bec6_Log _1b389cb3a_compilerErr(jule::Ptr<_1cb188a5c_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_1cac0c416_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_1cb1900c4_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1b389d069_pushSuggestion(_1cac0bec6_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_1cac0c416_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1b389d311_tokstoa(jule::Slice<jule::Ptr<_1cb188a5c_Token>>* _25813_tokens) {
	jule::I32 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70bc2bd:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1b70bc2bd:;
			++it;
			goto _iter_begin_1b70bc2bd;
		}
		_iter_end_1b70bc2bd:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70bc972:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1b70bc972:;
			++it;
			goto _iter_begin_1b70bc972;
		}
		_iter_end_1b70bc972:;
	};
	return _26313_s;;
}



inline jule::Bool _1b38ad376_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _20c95b50c_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1cab6a473_IsUpper(_203810_r);;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38adc17_buildVoidType(void) {
	return jule::new_ptr<_1b2e4b77d_TypeDecl>();;
}



inline jule::Ptr<_1b2e4b77d_TypeDecl> _1b38ade59_buildPrimType(jule::Ptr<_1cb188a5c_Token> _2322_t) {
	return jule::new_ptr<_1b2e4b77d_TypeDecl>(_1b2e4b77d_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1b2e4bd44_IdentTypeDecl>(_1b2e4bd44_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type19)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1b31c33b7_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b72683c0:;
			{
				__jule_func_result.__jule_result_arg0=_1cac102d7_IsWindows(_1cac5aed1_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b7267cc6:;
			{
				__jule_func_result.__jule_result_arg0=_1cac10590_IsDarwin(_1cac5aed1_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b7267d3c:;
			{
				__jule_func_result.__jule_result_arg0=_1cac10837_IsLinux(_1cac5aed1_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b7267da3:;
			{
				__jule_func_result.__jule_result_arg0=_1cac1143c_IsUnix(_1cac5aed1_Os);
			}
		}
		else {
			_case_begin_1b7267578:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b7267996:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b31d485c_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b726a26d:;
			{
				__jule_func_result.__jule_result_arg0=_1cac10b56_IsI386(_1cac5c466_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b726a2d4:;
			{
				__jule_func_result.__jule_result_arg0=_1cac10ded_IsAmd64(_1cac5c466_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b726a34a:;
			{
				__jule_func_result.__jule_result_arg0=_1cac11195_IsArm64(_1cac5c466_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b726a3b1:;
			{
				__jule_func_result.__jule_result_arg0=_1cac11a58_Is64Bit(_1cac5c466_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b726a427:;
			{
				__jule_func_result.__jule_result_arg0=_1cac117b1_Is32Bit(_1cac5c466_Arch);
			}
		}
		else {
			_case_begin_1b7269a20:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b7269e3d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b31bd5e3_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1cab7943d_Base(_5029_p);
	jule::I32 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1cab78dee_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I32 _6413_i = _1cab724ad_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31c33b7_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31d485c_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I32>(_1cab724ad_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31c33b7_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31d485c_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31d485c_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31c33b7_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b31c33b7_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1b31d8201_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_1cac5aed1_Os);;
	if (_1cac1143c_IsUnix(_1cac5aed1_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _1b31d8454_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_1cac5c466_Arch);;
	if (_1cac11a58_Is64Bit(_1cac5c466_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_1cac117b1_Is32Bit(_1cac5c466_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _1b31d870c_initVars(jule::Slice<jule::Str>* _5518_vars, _1b31d7de3_CompileInfo* _5532_info) {
	_1b31d8201_setOsVars(_5518_vars);
	_1b31d8454_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b7276466:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b72764cc:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1b7276411:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b7276950:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b72769b6:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b7276a2c:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1b7276884:;
	};
}



inline jule::Slice<jule::U8> _1b320331a_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__20bb0b867_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1cac9eb6d_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1cac0bec6_Log _1b32c9347_flatCompilerErr(jule::Str _4120_text) {
	return _1cac0bec6_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1b31c5452_pushPasses(jule::Ptr<_1b2eae6ae_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72a7d6b:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72a87d9:;
					if (it != expr_end) {
						_1b2e753bc_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1b72a87d9;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b72a9774:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b72a87d9;
										};
									}
									_iter_next_1b72a9774:;
									++it;
									goto _iter_begin_1b72a9774;
								}
								_iter_end_1b72a9774:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_1b72a87d9:;
						++it;
						goto _iter_begin_1b72a87d9;
					}
					_iter_end_1b72a87d9:;
				};
			}
			_iter_next_1b72a7d6b:;
			++it;
			goto _iter_begin_1b72a7d6b;
		}
		_iter_end_1b72a7d6b:;
	};
}



inline jule::Slice<jule::Str> _1b34a1244_getAllUniquePasses(jule::Ptr<_1b2eae6ae_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1b2eab755_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1b31c5452_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72aacc5:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1b31c5452_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1b72aacc5:;
			++it;
			goto _iter_begin_1b72aacc5;
		}
		_iter_end_1b72aacc5:;
	};
	return _12913_passes;;
}



inline _1b31d7de3_CompileInfo _1b34b270b_buildCompileInfo(void) {
	_1b31d7de3_CompileInfo _14213_info = _1b31d7de3_CompileInfo{._field_Prod=_20b9476d6_Production, ._field_Test=_20b946c79_Test, };;
	{
		auto &_match_expr{ _20b94500d_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b72ac0e5:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b72ac16c:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1b72ac06d:;
	};
	{
		auto &_match_expr{ _20b94653c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b72ab9a7:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b72ac513:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b72ac579:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1b72ac920:;
	};
	return _14213_info;;
}



inline void _1b39b22e3_EliminateDefines(jule::Ptr<_1b345d553_IR>* _28526_ir) {
	jule::Ptr<_1b397cd80_ObjectDeadCode> _28613_ocd = static__1b397d2d1_new(_28526_ir);;
	_1b39b2029_elimanate(_28613_ocd);
}



inline jule::Ptr<_1b2e184d6_Directive> _1b39b2678_findDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e6e54:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1b72e6e54:;
			++it;
			goto _iter_begin_1b72e6e54;
		}
		_iter_end_1b72e6e54:;
	};
	return nullptr;;
}



inline jule::Bool _1b39b29b9_hasDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1b39b2678_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1b39b6616_eliminateDeadCodeOfScope(jule::Ptr<_1b2e8d050_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1b2e9078e_Label>> _2429_labels = jule::Slice<jule::Ptr<_1b2e9078e_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1b2e90a7a_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1b2e90a7a_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1b39b3712_scopeDeadCode> _24413_sdc = jule::new_ptr<_1b39b3712_scopeDeadCode>(_1b39b3712_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1b2e9078e_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1b2e90a7a_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1b39b632a_optimizeStmts(_24413_sdc);
	};
}



inline void _1b39b689c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b2e6e85b_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7336218:;
		if (it != expr_end) {
			jule::Ptr<_1b2e6e85b_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73382c5:;
					if (it != expr_end) {
						jule::Ptr<_1b2e71132_FnIns> _25621_ins = *it;
						{
							_1b39b6616_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1b73382c5:;
						++it;
						goto _iter_begin_1b73382c5;
					}
					_iter_end_1b73382c5:;
				};
			}
			_iter_next_1b7336218:;
			++it;
			goto _iter_begin_1b7336218;
		}
		_iter_end_1b7336218:;
	};
}



inline void _1b39b6ade_eliminateFunctionsScopePackage(jule::Ptr<_1b2eae6ae_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7338748:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _26317_f = *it;
			{
				_1b39b689c_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1b7338748:;
			++it;
			goto _iter_begin_1b7338748;
		}
		_iter_end_1b7338748:;
	};
}



inline void _1b39b6d86_eliminateScopePackage(jule::Ptr<_1b2eae6ae_Package>* _26831_pkg) {
	_1b39b6ade_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1b39b7095_EliminateScopes(jule::Ptr<_1b345d553_IR>* _27325_ir) {
	jule::I32 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1b2eab755_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1b39b6d86_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1b7339da9:;
	}
	_iter_end_1b7339da9:;;
	_1b39b6d86_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1cb125a1b_isStdPackage(jule::Str _43817_f, jule::Str _43825_p) {
	return _1cab6e6db_HasPrefix(_43817_f, _1cab78b57_Join(jule::Slice<jule::Str>::make({_1cac17344_PathStdlib,_43825_p})));;
}



inline jule::Bool _1cb145761_isConstantValidConditionalCase(jule::Ptr<_1b2e8d44b_If>* _44236_i) {
	{
		auto &_match_expr{ (*(_44236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b73b476e:;
			{
				jule::Ptr<_1b18de5da_Const> _44513_c = (*(_44236_i)).get()._field_Expr.cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
				return (_1b18e3754_IsBool(_44513_c.ptr()) && _1b18e13ab_ReadBool(_44513_c.ptr()));;
			}
		}
		_match_end_1b73b4609:;
	};
	return false;;
}



inline jule::Bool _1b2c66c2a_isUnreachableExpr(jule::Any* _45123_expr) {
	{
		auto &_match_expr{ (*(_45123_expr)) };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b73b5187:;
			{
				jule::Ptr<_1b18de5da_Const> _45413_c = (*(_45123_expr)).cast_ptr<_1b18de5da_Const>(&__jule_any_type47);;
				return (_1b18e3754_IsBool(_45413_c.ptr()) && (!(_1b18e13ab_ReadBool(_45413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b73b520e:;
			{
				jule::Ptr<_1b2e68ed7_BinopExprModel> _45713_m = (*(_45123_expr)).cast_ptr<_1b2e68ed7_BinopExprModel>(&__jule_any_type117);;
				if (_45713_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_1b2c66c2a_isUnreachableExpr(&(_45713_m.get()._field_Left.get()._field_Model)) || _1b2c66c2a_isUnreachableExpr(&(_45713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1b73b483a:;
	};
	return false;;
}



inline jule::Bool _1cb08e424_isConstantValidMatchCase(jule::Ptr<_1b2e927e6_Case>* _46630_case) {
	{
		auto expr = &((*(_46630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73b650c:;
		if (it != expr_end) {
			jule::Ptr<_1b3030a93_Data> *_46712_expr = it;
			{
				if (((_1b3031456_IsConst((*(_46712_expr)).ptr()) && _1b18e3754_IsBool((*(_46712_expr)).get()._field_Constant.ptr())) && _1b18e13ab_ReadBool((*(_46712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b73b650c:;
			++it;
			goto _iter_begin_1b73b650c;
		}
		_iter_end_1b73b650c:;
	};
	return false;;
}



inline jule::Bool _1cb0c72c5_isUnreachableConditionalCase(jule::Ptr<_1b2e8d44b_If>* _47534_i) {
	return _1b2c66c2a_isUnreachableExpr(&((*(_47534_i)).get()._field_Expr));;
}



inline jule::Bool _1cb0d106a_isUnreachableMatchCase(jule::Ptr<_1b2e927e6_Case>* _47928_case) {
	{
		auto expr = &((*(_47928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73b9e17:;
		if (it != expr_end) {
			jule::Ptr<_1b3030a93_Data> *_48012_expr = it;
			{
				if ((!(_1b2c66c2a_isUnreachableExpr(&((*(_48012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b73b9e17:;
			++it;
			goto _iter_begin_1b73b9e17;
		}
		_iter_end_1b73b9e17:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1b312214b_checkForBitShiftOpt(jule::Ptr<_1b2e68cea_OperandExprModel>* _46625_l, jule::Ptr<_1b2e68cea_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b18dda18_IsInt(_1b305be21_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_1b18dda18_IsInt(_1b305be21_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b740722e:;
			{
				goto _match_end_1b7407bd0;
			}
		}
		else {
			_case_begin_1b7407d23:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1b7407bd0:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1b18e1d5c_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_1b18de5da_Const>(&__jule_any_type47).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _1b189377b_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline void _1b312269b_PushOptLevel(jule::I32 _3417_level) {
	_1cb08e0b1_Copy=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0aa3b8_Deadcode=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0ab3db_Append=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0ac40e_Math=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0ad432_Access=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0ae455_Inline=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0b15bc_Ptr=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0b25e0_Cond=(_3417_level >= static_cast<jule::I32>(1LL));
	_1cb0b3613_Str=(_3417_level >= static_cast<jule::I32>(1LL));
}



inline void _1b3944462_detectEnabled(void) {
	_1b38b6093_exprEnabled=(((_1cb0b15bc_Ptr || _1cb0ac40e_Math) || _1cb0ad432_Access) || _1cb0b25e0_Cond);
	_1b38b6c0e_scopeEnabled=(((_1cb0b25e0_Cond || _1cb0ab3db_Append) || _1cb08e0b1_Copy) || _1cb0b3613_Str);
}



inline void _1b39c3d60_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1cac9eb6d_Exit(1LL);
}



inline jule::U64 _1b421c663_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1b421c971_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1b421cd06_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1b748c737:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b748c8be:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b748c935:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b748c99b:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b748ca12:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b748ca78:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1b748cade:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1b748cb55:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b748cbbb:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1b748cc32:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b748cca9:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1b748c6d2:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1b416ab66_isCopyOptimizable(jule::Ptr<_1b3030a93_Data>* _81323_expr) {
	if ((!((*(_81323_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81323_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b7541e29:;
			{
				return false;;
			}
		}
		_match_end_1b7541dc4:;
	};
	return true;;
}



inline jule::Bool _1b416aeeb_isIterCopyOptimizable(jule::Ptr<_1b3030a93_Data>* _82427_expr, jule::Ptr<_1b2ed8034_Var>* _82441_v) {
	if (((!((*(_82427_expr)).get()._field_Lvalue)) && (!(_1b305d197_Mutable((*(_82427_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82441_v)).get()._field_Mutable)) && (!((*(_82427_expr)).get()._field_Mutable)));;
}



inline jule::Str _1b417a37e_decomposeCommonEsq(jule::U8 _145723_b) {
	{
		auto &_match_expr{ _145723_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b760157c:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b7601b10:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b7601b76:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b7601bdc:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b7601813:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b7601879:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b76018e0:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b7601956:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b7601e2e:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b7601e95:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1b76016c0:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b7601615:;
	};
}



inline jule::Str _1b417a66a_sbtoa(jule::U8 _148410_b) {
	if ((_148410_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_148410_b < 128LLU)) {
		jule::Str _148913_seq = _1b417a37e_decomposeCommonEsq(_148410_b);;
		if ((!(_148913_seq.empty()))) {
			return _148913_seq;;
		};
		if (((32LL <= _148410_b) && (_148410_b <= 126LLU))) {
			return static_cast<jule::Str>(_148410_b);;
		};
	};
	jule::Str _14979_seq = _1b18ce344_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_148410_b)), 8LL);;
	if ((_14979_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _14979_seq);;
	};
	return (jule::Str("\\", 1) + _14979_seq);;
}



inline jule::Str _1b417a912_cstrBytes(jule::Slice<jule::U8> _150414_bytes) {
	jule::Str _150513_lit = jule::Str::alloc(0LL, _150414_bytes.len());;
	{
		auto expr = &(_150414_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7607a06:;
		if (it != expr_end) {
			jule::U8 *_150612_b = it;
			{
				_150513_lit+=_1b417a66a_sbtoa((*(_150612_b)));
			}
			_iter_next_1b7607a06:;
			++it;
			goto _iter_begin_1b7607a06;
		}
		_iter_end_1b7607a06:;
	};
	return _150513_lit;;
}



inline jule::Str _1b417ac31_cstrLit(jule::Slice<jule::U8> _151212_bytes) {
	return ((jule::Str("\"", 1) + _1b417a912_cstrBytes(_151212_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1b417b03e_ftoa(jule::F64 _15169_f, jule::I32 _151617_bitsize) {
	if ((_151617_bitsize != 32LL)) {
		if ((_15169_f == static_cast<jule::F64>(static_cast<jule::I64>(_15169_f)))) {
			return _1b417b2d6_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15169_f)));;
		};
		if ((_15169_f == static_cast<jule::F64>(static_cast<jule::U64>(_15169_f)))) {
			return _1b417b57d_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15169_f)));;
		};
	};
	jule::Str _152513_m = _20b97ed8e_FmtFloat(_15169_f, 'f', -1LL, _151617_bitsize);;
	if ((!(_1cab73d3e_Contains(_152513_m, jule::Str(".", 1))))) {
		(_152513_m).append(".0", 2);
	};
	return _152513_m;;
}



inline jule::Str _1b417b2d6_itoa(jule::I64 _15329_x) {
	{
		
		if ((_15329_x == jule::MAX_I64)) {
			_case_begin_1b760b0d1:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15329_x == jule::MIN_I64)) {
			_case_begin_1b760b147:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1b760ae8d:;
	};
	jule::Str _15409_fmt = _1b18ce6c9_FmtInt(_15329_x, 10LL);;
	if (_1cac11a58_Is64Bit(jule::Str("i386", 4))) {
		return (_15409_fmt + jule::Str("LL", 2));;
	};
	return (_15409_fmt + jule::Str("L", 1));;
}



inline jule::Str _1b417b57d_utoa(jule::U64 _15479_x) {
	{
		
		if ((_15479_x == jule::MAX_U64)) {
			_case_begin_1b760cca3:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1b760cba4:;
	};
	jule::Str _15539_fmt = _1b18ce344_FmtUint(_15479_x, 10LL);;
	if (_1cac11a58_Is64Bit(jule::Str("i386", 4))) {
		return (_15539_fmt + jule::Str("LLU", 3));;
	};
	return (_15539_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1b417b935_isForwarded(jule::Ptr<_1b2e8d050_Scope>* _156017_s) {
	jule::Any _15619_last = (*(_156017_s)).get()._field_Stmts[((*(_156017_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15619_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b760e579:;
			{
				{
					auto &_match_expr{ _15619_last.cast_ptr<_1b3030a93_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b7610602:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b76109ba:;
						{
							return false;;
						}
					}
					_match_end_1b7610701:;
				};
			}
		}
		else {
			_case_begin_1b760ed3d:;
			{
				return true;;
			}
		}
		_match_end_1b760ec61:;
	};
}



inline jule::Bool _1b417bbee_isBuiltinCallHasDebuginf(jule::Ptr<_1b2e69b64_FnCallExprModel>* _157530_m) {
	if ((!(_1b2e724b8_IsBuiltin((*(_157530_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_157530_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b7610c62:;
			{
				jule::Ptr<_1b2e6b69e_CommonSubIdentExprModel> _158113_csie = (*(_157530_m)).get()._field_Expr.cast_ptr<_1b2e6b69e_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _158113_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1b7610080:;
			{
				return false;;
			}
		}
		_match_end_1b761002a:;
	};
}



inline jule::Bool _1b417be30_isExprComesFromBind(jule::Ptr<_1b3030a93_Data>* _158825_d) {
	{
		auto &_match_expr{ (*(_158825_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7612ed9:;
			{
				return (*(_158825_d)).get()._field_Model.cast_ptr<_1b2ed8034_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b7613050:;
			{
				return (*(_158825_d)).get()._field_Model.cast_ptr<_1b2e6adeb_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1b7612659:;
			{
				return false;;
			}
		}
		_match_end_1b7612604:;
	};
}



inline jule::Bool _1b417c1c7_isAny(jule::Ptr<_1b305ba25_TypeKind>* _160015_t) {
	if ((_1b305e85d_TypeEnum((*(_160015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1b3061772_Prim> _16049_prim = _1b305ddac_Prim((*(_160015_t)).ptr());;
	return ((_16049_prim != nullptr) && _1b3064c1a_IsAny(_16049_prim.ptr()));;
}



inline void _1b42270a7_iterFiles(jule::Ptr<_1b2eae6ae_Package>* _124119_pkg, jule::Fn<void(jule::Ptr<_1b302ac69_SymbolTable>*)> _124134_f) {
	{
		auto expr = &((*(_124119_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b779a072:;
		if (it != expr_end) {
			jule::Ptr<_1b302ac69_SymbolTable> _124217_file = *it;
			{
				_124134_f(&(_124217_file));
			}
			_iter_next_1b779a072:;
			++it;
			goto _iter_begin_1b779a072;
		}
		_iter_end_1b779a072:;
	};
}



inline jule::Str _1b4227393_concatAllParts(jule::Slice<jule::Ptr<_1cb188a5c_Token>> _124819_parts) {
	jule::I32 _124913_n = 0LL;;
	{
		auto expr = &(_124819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b779b33c:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_125012_part = it;
			{
				_124913_n+=(*(_125012_part)).get()._field_Kind.len();
			}
			_iter_next_1b779b33c:;
			++it;
			goto _iter_begin_1b779b33c;
		}
		_iter_end_1b779b33c:;
	};
	if ((_124913_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _125613_s = jule::Str::alloc(0LL, _124913_n);;
	{
		auto expr = &(_124819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b779a715:;
		if (it != expr_end) {
			jule::Ptr<_1cb188a5c_Token> *_125712_p = it;
			{
				_125613_s+=(*(_125712_p)).get()._field_Kind;
			}
			_iter_next_1b779a715:;
			++it;
			goto _iter_begin_1b779a715;
		}
		_iter_end_1b779a715:;
	};
	return _125613_s;;
}



inline jule::Ptr<_1b2e184d6_Directive> _1b42352c4_findDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _46523_directives, jule::Str _46554_tag) {
	{
		auto expr = _46523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64aa4e2:;
		if (it != expr_end) {
			jule::Ptr<_1b2e184d6_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_1b64aa4e2:;
			++it;
			goto _iter_begin_1b64aa4e2;
		}
		_iter_end_1b64aa4e2:;
	};
	return nullptr;;
}



inline jule::Bool _1b4235659_hasDirective(jule::Slice<jule::Ptr<_1b2e184d6_Directive>>* _47518_directives, jule::Str _47549_tag) {
	return (_1b42352c4_findDirective(_47518_directives, _47549_tag) != nullptr);;
}



inline jule::Bool _1b4235901_shouldInitialized(jule::Ptr<_1b305ba25_TypeKind>* _48227_t) {
	jule::Ptr<_1b3061772_Prim> _4839_prim = _1b305ddac_Prim((*(_48227_t)).ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_1b3064c1a_IsAny(_4839_prim.ptr()))) && (!(_1b30649a6_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_1b305e121_Sptr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64aca99:;
			{
				return false;;
			}
		}
		else if ((_1b30607d7_Map((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64ac4c2:;
			{
				return false;;
			}
		}
		else if ((_1b305ed36_Slc((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64ac549:;
			{
				return false;;
			}
		}
		else if ((_1b3060573_Trait((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64ac5c1:;
			{
				return false;;
			}
		}
		else if ((_1b306009a_Fn((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64ac77a:;
			{
				return false;;
			}
		}
		else if ((_1b305eac2_Arr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64ac7e1:;
			{
				jule::Ptr<_1b3067b0d_Arr> _49917_arr = _1b305eac2_Arr((*(_48227_t)).ptr());;
				return _1b4235901_shouldInitialized(&(_49917_arr.get()._field_Elem));;
			}
		}
		else if ((_1b306030e_Struct((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1b64ac857:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b64abc0d:;
			{
				return true;;
			}
		}
		_match_end_1b64abea5:;
	};
}



inline void _1cabde23e_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1cabd2dae_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1cabde23e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _4113_max = _1cabdd9be_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1cabdd9be_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b654d882:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1b654d882:;
			++it;
			goto _iter_begin_1b654d882;
		}
		_iter_end_1b654d882:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_1cabdd9be_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6550246:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_1caad032d_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1b6550246:;
			++it;
			_519_i++;
			goto _iter_begin_1b6550246;
		}
		_iter_end_1b6550246:;
	};
	jule::outln(_4913_s);
}



inline void _1cabd2ee1_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1cabde23e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.13 @master", 18));
}



inline void _1cabe0b03_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1cabe0c35_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1cabeb9dd_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1cabde23e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b65571d7:;
			{
				_1cabe0b03_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b6556deb:;
			{
				_1cabe0c35_toolDistarch();
			}
		}
		else {
			_case_begin_1b6555779:;
			{
				_1cabde23e_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1b6556c0e:;
	};
}



inline void _1cabebb20_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1cabde23e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.13 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _20b94500d_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _20b94653c_CppStd));
}



inline void _1cabee98b_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1cabde23e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b655b5c6:;
			{
				({
					auto except = static__20b9d8766_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1cabde23e_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b6559ea9:;
			{
				_1cabde23e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b655b1ec:;
	};
}



inline jule::Bool _1cabcac97_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b655cc04:;
			{
				_1cabd2dae_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b655d133:;
			{
				_1cabd2ee1_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b655d199:;
			{
				_1cabeb9dd_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b655d287:;
			{
				_1cabebb20_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b655d2ed:;
			{
				_1cabee98b_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b655c7b4:;
			{
				return false;;
			}
		}
		_match_end_1b655c6e8:;
	};
	return true;;
}



inline void _1cabcadc9_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _20ca07de4_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1cabcadc9_showInfo();
		return;;
	};
	if (_1cabcac97_processCommand(&(_18913_args))) {
		return;;
	};
	_1b42611ce_compileCommand(&(_18913_args));
}



inline void _1caca0443_enableVtp(void) {
	jule::Uintptr _199_hOut = _20c7eb0d3_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _2413_dwMode = 0LL;;
	if ((!(_20c7ed448_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_20c7eda0e_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _1caca0575_init(void) {
	_1caca0443_enableVtp();
}



inline void _1b424435a_init(void) {
	_20b94500d_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_20c81243a_File> _1b411a6a4_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1cab797b2_Dir((*(_4316_path)));;
	({
		auto except = static__1cab7b011_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1cab7a395_Create(_449_dir);
				if (!except.ok()) {
					_1b39c3d60_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20badd0b8_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1b39c3d60_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1b40a74dc_clearObjects(void) {
	({
		auto except = static__20c926818_Remove(_1b42536cc_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1cab7a593_Remove(_1b401546c_OutDir);
}



inline void _1b3c69de7_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1cac7b584_Cmd> _7313_cmd = static__1cac7b9d5_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1cab739ed_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1cac7bbb1_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type133) == _match_expr) {
					_case_begin_1b65665c0:;
					{
						static__1b39c1775_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type133) == _match_expr) {
					_case_begin_1b6565da5:;
					{
						static__1b39c1775_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b6565ed7:;
					{
						static__1b39c1775_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b6565e3d:;
			};
			_1b39c3d60_Throw(jule::Str());
		}
	});
	jule::I32 _869_status = ({
		auto except = _1cac7c101_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _20b94500d_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1b39c1775_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1b39c3d60_Throw(jule::Str());
	};
	_1b40a74dc_clearObjects();
}



inline jule::Bool _1b423eac5_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1009_offset = _1cab724ad_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1cac001c8_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1b412d5da_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _20b94653c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b6564d1b:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b656a31b:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b656a382:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1b656a0eb:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_20b9476d6_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1b3dac6aa_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _20b94653c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b656a7b1:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b656cab0:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b656cb26:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1b656c890:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_20b9476d6_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1b424e5da_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1b345d553_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_20b94631c_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _20b94500d_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b656e96e:;
			{
				_1b3dac6aa_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b6570a19:;
			{
				_1b412d5da_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1b65708d7:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b65713bb:;
		if (it != expr_end) {
			jule::Str *_17112_pass = it;
			{
				_16113_cmd+=(*(_17112_pass));
				(_16113_cmd).append(" ", 1);
			}
			_iter_next_1b65713bb:;
			++it;
			goto _iter_begin_1b65713bb;
		}
		_iter_end_1b65713bb:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6570a91:;
		if (it != expr_end) {
			jule::Ptr<_1b2eab755_ImportInfo> *_17712_u = it;
			{
				if (((*(_17712_u)).get()._field_CppLinked && _1b423eac5_isCppSourceFile((*(_17712_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17712_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1b6570a91:;
			++it;
			goto _iter_begin_1b6570a91;
		}
		_iter_end_1b6570a91:;
	};
	if ((!(_1b4251bb4_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1b4251bb4_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1b42536cc_getCompilePath(void) {
	return _1cab78b57_Join(jule::Slice<jule::Str>::make({_1b401546c_OutDir,_1b423da4c_OutName}));;
}



inline void _1b3ebee82_applyTargetIndependentOptimizations(jule::Ptr<_1b345d553_IR>* _20045_ir) {
	jule::Ptr<_1b38b46ce_Optimizer> _20113_opt = static__1b38d3dd5_New(_20045_ir);;
	_1b3924255_Optimize(_20113_opt.ptr());
}



inline void _1b423a8e5_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _20b94500d_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b6572323:;
			{
				_1b39c3d60_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b657459a:;
			{
				if (_20b94631c_CompilerPath.empty()) {
					_20b94631c_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b6574611:;
			{
				if (_20b94631c_CompilerPath.empty()) {
					_20b94631c_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b6574534:;
			{
				_1b39c3d60_Throw((jule::Str("invalid option value for --compiler: ", 37) + _20b94500d_Compiler));
			}
		}
		_match_end_1b6574127:;
	};
}



inline void _1b3a5bba6_checkTargetArch(jule::Str _22220_arch) {
	if ((((!_22220_arch.equal("amd64", 5)) && (!_22220_arch.equal("arm64", 5))) && (!_22220_arch.equal("i386", 4)))) {
		_1b39c3d60_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22220_arch));
	};
}



inline void _1b3a5bcd8_checkTargetOs(jule::Str _23018_os) {
	if ((((!_23018_os.equal("windows", 7)) && (!_23018_os.equal("linux", 5))) && (!_23018_os.equal("darwin", 6)))) {
		_1b39c3d60_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23018_os));
	};
}



inline void _1b4260761_checkTargetFlag(jule::Str* _23821_target) {
	if ((*(_23821_target)).empty()) {
		_1b39c3d60_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2439_parts = _1cab739ed_Split((*(_23821_target)), jule::Str("-", 1), -1LL);;
	if ((_2439_parts.len() != 2LL)) {
		_1b39c3d60_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_23821_target))));
	};
	jule::Str _24810_os;;
	jule::Str _24814_arch;;
	({
		jule::Str ___jule_assign_arg = _2439_parts[0LL];
		jule::Str _1___jule_assign_arg = _2439_parts[1LL];
		_24810_os = ___jule_assign_arg;
		_24814_arch = _1___jule_assign_arg;
	});
	if ((!_24810_os.equal("native", 6))) {
		_1b3a5bcd8_checkTargetOs(_24810_os);
		_1cac5aed1_Os=_24810_os;
	};
	if ((!_24814_arch.equal("native", 6))) {
		_1b3a5bba6_checkTargetArch(_24814_arch);
		_1cac5c466_Arch=_24814_arch;
	};
	_1b18d3a74_UpdateTarget();
}



inline void _1b4260893_checkOptFlag(jule::Str* _26118_opt) {
	if ((*(_26118_opt)).empty()) {
		_1b39c3d60_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26118_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b657c152:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b657c65d:;
			{
				_1b312269b_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1b657be87:;
			{
				_1b39c3d60_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26118_opt))));
			}
		}
		_match_end_1b657be32:;
	};
}



inline void _1b4260c06_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _20b94653c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b657c6c4:;
			{
				goto _match_end_1b657d52c;
			}
		}
		else {
			_case_begin_1b657d0cb:;
			{
				_1b39c3d60_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _20b94653c_CppStd));
			}
		}
		_match_end_1b657d52c:;
	};
}



inline jule::Slice<jule::Str> _1b4260d38_checkFlags(jule::Slice<jule::Str>* _28616_args) {
	jule::Str _28713_opt = jule::Str("L0", 2);;
	jule::Str _28813_target = jule::Str("native-native", 13);;
	jule::Ptr<_1b425b97c_FlagSet> _29013_fs = static__1b425bc68_New();;
	_1b6580919_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28713_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1b6580919_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28813_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1b6580919_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1b4251bb4_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20b94675c_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20b9469b0_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1b6580919_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20b94500d_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1b6580919_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20b94631c_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20b9476d6_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20b947043_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20b94741c_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1b6580919_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20b94653c_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb08e0b1_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0aa3b8_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0ab3db_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0ac40e_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0ad432_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0ae455_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0b15bc_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0b25e0_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1b6589291_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cb0b3613_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31313_content = ({
		auto except = _1b425ca7c_Parse(_29013_fs.ptr(), (*(_28616_args)));
		(except.ok()) ? (except.result) : ({
			_1b39c3d60_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1b423a8e5_checkCompilerFlag();
	_1b4260c06_checkCppStdFlag();
	_1b4260761_checkTargetFlag(&(_28813_target));
	_1b4260893_checkOptFlag(&(_28713_opt));
	return _31313_content;;
}



inline void _1b4260e6a_setupSemaFlags(jule::I32* _32624_flags) {
	if (_20b94675c_Shadowing) {
		(*(_32624_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1b345d553_IR> _1b426109c_buildIr(jule::Slice<jule::Str>* _33213_args) {
	jule::Slice<jule::Str> _3339_content = _1b4260d38_checkFlags(_33213_args);;
	jule::I32 _33513_semaFlags = static_cast<jule::I32>(0LL);;
	_1b4260e6a_setupSemaFlags(&(_33513_semaFlags));
	if ((_3339_content.len() == 0LL)) {
		_1b39c3d60_Throw(_1cac0c416_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3339_content.len() > 1LL)) {
		_1b39c3d60_Throw((jule::Str("undefined content: ", 19) + _3339_content[1LL]));
	};
	jule::Str _34314_path;;
	jule::Bool _34320_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1cab79196_Abs(_3339_content[0LL]);
		_34314_path = __jule_assign_result.__jule_result_arg0;
		_34320_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34320_ok))) {
		_1b39c3d60_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20c812858_Status> _3499_inf = ({
		auto except = static__1cab7b011_Of(_1cac17344_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1b39c3d60_Throw(_1cac0c416_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_20c812858_Status>(nullptr);});
	});;
	if ((!(_20ba66a47_IsDir(_3499_inf.ptr())))) {
		_1b39c3d60_Throw(_1cac0c416_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1b345d553_IR> _35714_ir;;
	jule::Slice<_1cac0bec6_Log> _35718_logs;;
	({
		__jule_tuple_x_1b345d553_IR__jule_tuple_s_1cac0bec6_Log __jule_assign_result = static__1b3192b4a_Build(_34314_path, _33513_semaFlags);
		_35714_ir = __jule_assign_result.__jule_result_arg0;
		_35718_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_35714_ir == nullptr) && (_35718_logs == nullptr))) {
		_1b39c3d60_Throw(_1cac0c416_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34314_path, &__jule_any_type5)})));
	};
	if ((_35718_logs != nullptr)) {
		static__1b39c3436_PrintLogs(&(_35718_logs));
		_1b39c3d60_Throw(jule::Str());
	};
	return _35714_ir;;
}



inline void _1b42611ce_compileCommand(jule::Slice<jule::Str>* _37224_args) {
	(*(_37224_args))=(*(_37224_args)).slice(1LL);
	if ((*(_37224_args))[0LL].equal("test", 4)) {
		_20b946c79_Test=true;
		(*(_37224_args))=(*(_37224_args)).slice(1LL);
	};
	jule::Ptr<_1b345d553_IR> _37813_ir = _1b426109c_buildIr(_37224_args);;
	;
	if ((!(_20b946c79_Test))) {
		jule::Ptr<_1b2e6e85b_Fn> _38317_main = _1b2eb0e63_FindFn(_37813_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38317_main == nullptr)) {
			_1b39c3d60_Throw(_1cac0c416_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1b3ebee82_applyTargetIndependentOptimizations(&(_37813_ir));
	_1b31c3d13_Order(_37813_ir.ptr());
	jule::Str _39410_compiler;;
	jule::Str _39420_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1b424e5da_genCompileCmd(_1b42536cc_getCompilePath(), &(_37813_ir));
		_39410_compiler = __jule_assign_result.__jule_result_arg0;
		_39420_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1b42224e2_ObjectCoder> _39613_oc = static__1b4188a96_New(&(_37813_ir), _1b41b4099_SerializationInfo{._field_Compiler=_39410_compiler, ._field_CompilerCommand=_39420_compilerCmd});;
	if (_20b946c79_Test) {
		jule::Ptr<_1b417e1a7_TestCoder> _40117_tc = static__1b417e62a_New(&(_39613_oc));;
		_1b418085c_Serialize(_40117_tc);
	} else {
		_1b4226c44_Serialize(_39613_oc);
	};
	jule::Str _4079_path = _1b42536cc_getCompilePath();;
	jule::Ptr<_20c81243a_File> _40813_file = _1b411a6a4_openOutput(&(_4079_path));;
	({
		auto except = _20ba64539_WriteStr(_40813_file.ptr(), &(_39613_oc.get()._field_Obj));
		if (!except.ok()) {
			_1b39c3d60_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _20ba663b5_Close(_40813_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:412:5"));
	});
	if ((!(_20b9469b0_Transpilation))) {
		_1b3c69de7_compileIr(_39410_compiler, _39420_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1cac1892d_init();
	_1b18d3bd9_init();
	_1caca0575_init();
	_1b424435a_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}