// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 20/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <fcntl.h>
#include <io.h>
#include <windows.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1ee88470c_acceptRange;
struct _1ee8d7045_LittleEndian;
struct _1ee901c63_u128;
struct _216c63189_group;
struct _216cae537_group;
struct _216c60d8a__Map;
struct _216cac447__Map;
struct _216c6c5c2_mapIterator;
struct _216cb6990_mapIterator;
struct _1eeabb290_Builder;
struct _200e2e091_foldPair;
struct _200e2e58b_CaseRange;
struct _200e2ea42_Range16;
struct _200e30070_Range32;
struct _200e304e3_RangeTable;
struct _200e3d644_lazyBuff;
struct _1eecb3443_cmdAttrs;
struct _1eecb8305_File;
struct _1eecba8ac_Stat;
struct _1eeaca425_Log;
struct _2019ed313_floatInfo;
struct _2019ede5c_decimalSlice;
struct _201a10ed5_leftCheat;
struct _201a119ec_decimal;
struct _200e74a43_AnsiEscape;
struct _201a175d5_Logger;
struct _204a14216_Token;
struct _204a19cbb_Fileset;
struct _204a1c0dc_kindPair;
struct _204a2307c_lex;
struct _204a27c52_AST;
struct _204a28b10_Node;
struct _204a2902d_Directive;
struct _204a29b11_TypeDecl;
struct _204a2a21b_IdentTypeDecl;
struct _204a2a4d5_SubIdentTypeDecl;
struct _204a2a8ae_NamespaceTypeDecl;
struct _204a2abab_SptrTypeDecl;
struct _204a2b041_SlcTypeDecl;
struct _204a2b33d_TupleTypeDecl;
struct _204a2b63a_PtrTypeDecl;
struct _204a2bdcc_ArrTypeDecl;
struct _204a2c62a_MapTypeDecl;
struct _204a2ca04_RetTypeDecl;
struct _204a2de45_Expr;
struct _204a2e20e_RangeExpr;
struct _204a2e819_UseExpr;
struct _204a2ea39_TupleExpr;
struct _204a2edd0_LitExpr;
struct _204a302a9_UnsafeExpr;
struct _204a30760_IdentExpr;
struct _204a31002_UnaryExpr;
struct _204a313cb_VariadicExpr;
struct _204a317a5_CastExpr;
struct _204a31b7e_NamespaceExpr;
struct _204a32058_SubIdentExpr;
struct _204a3250e_BinaryExpr;
struct _204a32b6e_FnCallExpr;
struct _204a33664_FieldExprPair;
struct _204a33e8e_StructLit;
struct _204a34445_BraceLit;
struct _204a34c70_KeyValPair;
struct _204a3549b_SliceExpr;
struct _204a35e08_IndexingExpr;
struct _204a36568_SlicingExpr;
struct _204a36865_Constraint;
struct _204a36d1b_GenericDecl;
struct _204a371e5_LabelSt;
struct _204a375be_GotoSt;
struct _204a378bb_FallSt;
struct _204a3802b_AssignLeft;
struct _204a385ae_AssignSt;
struct _204a3959e_Stmt;
struct _204a39c0e_ScopeTree;
struct _204a3a44b_ParamDecl;
struct _204a3b89d_FnDecl;
struct _204a3ca58_VarDecl;
struct _204a3ce32_RetSt;
struct _204a3d6a2_Iter;
struct _204a3decc_WhileKind;
struct _204a3e8d4_RangeKind;
struct _204a3ecad_BreakSt;
struct _204a40187_ContSt;
struct _204a4063d_If;
struct _204a40a17_Else;
struct _204a40ebd_Conditional;
struct _204a4170a_TypeAliasDecl;
struct _204a41bb1_Case;
struct _204a424ca_MatchCase;
struct _204a42a5d_UseDecl;
struct _204a43014_EnumItemDecl;
struct _204a43ac5_EnumDecl;
struct _204a44400_TypeEnumItemDecl;
struct _204a44a60_TypeEnumDecl;
struct _204a44d29_FieldDecl;
struct _204a45720_StructDecl;
struct _204a45e5c_TraitDecl;
struct _204a465bc_Impl;
struct _204a9d338_Const;
struct _204a47579_Field;
struct _204a49559_Operators;
struct _204a4a46c_Struct;
struct _204a4c727_FieldIns;
struct _204a4d2c7_StructIns;
struct _204b10dd4_OperandExprModel;
struct _204b113ce_BinaryExprModel;
struct _204b117a8_UnaryExprModel;
struct _204b11cd6_StructArgExprModel;
struct _204b1217c_StructLitExprModel;
struct _204b12479_AllocStructLitExprModel;
struct _204b12a0c_CastingExprModel;
struct _204b133ae_FnCallExprModel;
struct _204b13788_SliceExprModel;
struct _204b13c3e_IndexingExprModel;
struct _204b141e5_AnonFnExprModel;
struct _204b145be_KeyValPairExprModel;
struct _204b14998_MapExprModel;
struct _204b1502b_SlicingExprModel;
struct _204b155ae_TraitSubIdentExprModel;
struct _204b15e50_StructSubIdentExprModel;
struct _204b162e6_StructStaticIdentExprModel;
struct _204b166c0_ArrayExprModel;
struct _204b169bc_TupleExprModel;
struct _204b16cb9_BuiltinPrintCallExprModel;
struct _204b170b6_BuiltinPrintlnCallExprModel;
struct _204b17490_BuiltinNewCallExprModel;
struct _204b17869_BuiltinPanicCallExprModel;
struct _204b17d20_BuiltinMakeCallExprModel;
struct _204b181e9_BuiltinAppendCallExprModel;
struct _204b184e6_BuiltinLenCallExprModel;
struct _204b187e3_BuiltinCapCallExprModel;
struct _204b18bbc_BuiltinDeleteCallExprModel;
struct _204b19096_BuiltinCopyCallExprModel;
struct _204b19470_BuiltinErrorCallExprModel;
struct _204b1976c_SizeofExprModel;
struct _204b19e21_AlignofExprModel;
struct _204b1a10d_RuneExprModel;
struct _204b1a482_BackendEmitExprModel;
struct _204b1a77e_FreeExprModel;
struct _204b1b51b_RetType;
struct _204b1bad2_Param;
struct _204b1d5a6_Fn;
struct _204b2050e_ParamIns;
struct _204b21664_FnIns;
struct _204b248a9_SymTab;
struct _204b28cba_Trait;
struct _204b2a915_EnumItem;
struct _204b2b471_Enum;
struct _204b2c5a4_TypeEnumItem;
struct _204b2cb7b_TypeEnum;
struct _204ba37e5_comptimeRange;
struct _204ba4351_comptimeStructField;
struct _204ba5ae4_comptimeStructFields;
struct _204ba7574_comptimeStatic;
struct _204ba8d28_comptimeStatics;
struct _204baa797_comptimeEnumField;
struct _204babaa6_comptimeEnumFields;
struct _204bad5ad_comptimeParam;
struct _204bb0417_comptimeParams;
struct _204bb1c76_comptimeTypeInfos;
struct _204bb36e5_comptimeTypeInfo;
struct _204bb97ea_comptimeValue;
struct _204bbc556_comptimeFiles;
struct _204bbdec5_comptimeFile;
struct _204bc0aed_comptimeDecls;
struct _204bc2ddb_comptimeDecl;
struct _204bc97c7_constraintChecker;
struct _204bcbac6_Impl;
struct _204bd11d5_Scope;
struct _204bd1603_If;
struct _204bd1900_Else;
struct _204bd1d1d_Conditional;
struct _204bd211a_InfIter;
struct _204bd25c1_WhileIter;
struct _204bd301c_RangeIter;
struct _204bd33a2_ContSt;
struct _204bd377b_BreakSt;
struct _204bd3c32_Label;
struct _204bd4392_GotoSt;
struct _204bd476b_Postfix;
struct _204bd4c22_Assign;
struct _204bd52a5_MultiAssign;
struct _204bd59e2_Match;
struct _204bd651a_Case;
struct _204bd6c13_FallSt;
struct _204bd70a9_RetSt;
struct _204bd7560_scopeLabel;
struct _204bd7939_result;
struct _204bd8929_scopeChecker;
struct _204bec7a6_directiveChecker;
struct _204c000b1_ReferenceStack;
struct _204c01612_Pass;
struct _204c060b7_symBuilder;
struct _204c12139_ImportInfo;
struct _204c148ab_Package;
struct _204c2d85e_commonSemaMeta;
struct _204c2e486_sema;
struct _204c4e6b5_missingRetChecker;
struct _204c5319c_Var;
struct _204c54027_FuncPattern;
struct _204c8deb8_typeCompatibilityChecker;
struct _204c90d44_assignTypeChecker;
struct _204c92719_dynamicTypeAnnotation;
struct _204c97576_fnCallArgChecker;
struct _204c9a4ad_structLitChecker;
struct _204c9c290_rangeChecker;
struct _204c9eacd_retTypeChecker;
struct _204ca2b7a_Data;
struct _204ca3d02_Value;
struct _204ca41cb_target;
struct _204ca4b49_eval;
struct _204cc8c28_unaryEval;
struct _204ccabb4_binaryEval;
struct _204cd909b_InsGeneric;
struct _204cd9b90_TypeAlias;
struct _204cda982_Type;
struct _204ce3193_TypeSym;
struct _204ce3a9a_Prim;
struct _204ce75c6_Sptr;
struct _204ce8099_Slc;
struct _204ce8b8d_Tuple;
struct _204ce973d_Map;
struct _204cea3ba_Arr;
struct _204cead8d_Ptr;
struct _204cebd8e_referencer;
struct _204cecd7e_typeChecker;
struct _204d05e42_identTypeLookup;
struct _20561c4a0_FileInfo;
struct _20566c236_stmt;
struct _20566cac7_scopeParser;
struct _20567a4ec_exprBuilder;
struct _205687ae2_assignInfo;
struct _20568acd2_parser;
struct _20569be8b_typeBuilder;
struct _204e14380_CompileInfo;
struct _204e15abd_directiveEval;
struct _2056a108e_Importer;
struct _204d6c21c_anyData;
struct _2056a71a5_ExprInspector;
struct _2056ae8d8_MetaStrBuilder;
struct _2056b05a9_MetaRuntime;
struct _2056b107c_MetaMathCmplx;
struct _2056b1687_Meta;
struct _2056b2b61_OrderedDefines;
struct _20682acc8_liveTable;
struct _20682b0d6_ObjectDeadCode;
struct _20683020b_scopeDeadCode;
struct _206834793_exprDeadCode;
struct _2064e2693_ExceptionalForwardingExprModel;
struct _2065039c3_FnCallIgnoreExceptionalExprModel;
struct _206503bb0_StrConcatExprModel;
struct _206503e79_SwapExprModel;
struct _206504353_EmptyCompareExprModel;
struct _206504650_RefExprModel;
struct _206504b06_StrCompExprModel;
struct _206505222_MutSlicingExprModel;
struct _20650551e_UnsafeBinaryExprModel;
struct _20650581b_UnsafeIndexingExprModel;
struct _206505be5_PushToSliceExprModel;
struct _2065060be_AppendToSliceExprModel;
struct _206506498_StrRuneIter;
struct _206506795_UnsafeDerefExprModel;
struct _206506a92_UnsafeCastingExprModel;
struct _20650782e_nilVar;
struct _206507b70_nils;
struct _206700bd1_scopeOptimizer;
struct _2067084e1_exprOptimizer;
struct _206710806_dynamicVar;
struct _206710b47_dynamic;
struct _206713276_dataCheckpoint;
struct _206713771_data;
struct _2067156da_boundaryVar;
struct _206715a2b_boundary;
struct _2068358b5_Optimizer;
struct _206908218_AbsTime;
struct _2069088de_Time;
struct _206839897_scopeCoder;
struct _206845d8c_exprCoder;
struct _2068586c9_TestCoder;
struct _20685b325_identCoder;
struct _206913520_SerializationInfo;
struct _20691393d_traitCast;
struct _206913d17_anonHash;
struct _206914235_traitHash;
struct _206914532_metadata;
struct _206915cc5_ObjectCoder;
struct _206925103_customType;
struct _206925c2a_typeCoder;
struct _20692d815_resultCoder;
struct _1d5272224_Flag;
struct _1d5275aa7_Flag;
struct _1d52792b4_Flag;
struct _1d527ca15_Flag;
struct _1d5281222_Flag;
struct _206993913_FlagSet;
struct _2069963c7_argParser;
struct _1eec71478_Dir;
struct _1eec72017_Cmd;
struct _2056a39dc_IR;
struct _1ee88470c_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1ee88470c_acceptRange_eq(_1ee88470c_acceptRange *_self_, _1ee88470c_acceptRange _other_);


struct _1ee8d7045_LittleEndian {
};
inline jule::Bool _1ee8d7045_LittleEndian_eq(_1ee8d7045_LittleEndian *_self_, _1ee8d7045_LittleEndian _other_);


struct _1ee901c63_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1ee901c63_u128_eq(_1ee901c63_u128 *_self_, _1ee901c63_u128 _other_);


struct _216c63189_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _216c63189_group_eq(_216c63189_group *_self_, _216c63189_group _other_);

struct _216cae537_group {
	jule::Array<jule::Ptr<_204b21664_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _216c60d8a__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_216c63189_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};struct _216cac447__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_216cae537_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};
struct _216c6c5c2_mapIterator {
	jule::Ptr<_216c60d8a__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_216c63189_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};struct _216cb6990_mapIterator {
	jule::Ptr<_216cac447__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_216cae537_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};
struct _1eeabb290_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _200e2e091_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _200e2e091_foldPair_eq(_200e2e091_foldPair *_self_, _200e2e091_foldPair _other_);


struct _200e2e58b_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _200e2e58b_CaseRange_eq(_200e2e58b_CaseRange *_self_, _200e2e58b_CaseRange _other_);


struct _200e2ea42_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _200e2ea42_Range16_eq(_200e2ea42_Range16 *_self_, _200e2ea42_Range16 _other_);


struct _200e30070_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _200e30070_Range32_eq(_200e30070_Range32 *_self_, _200e30070_Range32 _other_);


struct _200e304e3_RangeTable {
	jule::Slice<_200e2ea42_Range16> _field_R16;
	jule::Slice<_200e30070_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
};
struct _200e3d644_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
};
struct _1eecb3443_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
};
inline jule::Bool _1eecb3443_cmdAttrs_eq(_1eecb3443_cmdAttrs *_self_, _1eecb3443_cmdAttrs _other_);


struct _1eecb8305_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1eecb8305_File_eq(_1eecb8305_File *_self_, _1eecb8305_File _other_);


struct _1eecba8ac_Stat {
	jule::I32 _field_mode;
	jule::U32 _field_size;
};
inline jule::Bool _1eecba8ac_Stat_eq(_1eecba8ac_Stat *_self_, _1eecba8ac_Stat _other_);


struct _1eeaca425_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1eeaca425_Log_eq(_1eeaca425_Log *_self_, _1eeaca425_Log _other_);


struct _2019ed313_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
};
inline jule::Bool _2019ed313_floatInfo_eq(_2019ed313_floatInfo *_self_, _2019ed313_floatInfo _other_);


struct _2019ede5c_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
};
struct _201a10ed5_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _201a10ed5_leftCheat_eq(_201a10ed5_leftCheat *_self_, _201a10ed5_leftCheat _other_);


struct _201a119ec_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _201a119ec_decimal_eq(_201a119ec_decimal *_self_, _201a119ec_decimal _other_);


struct _200e74a43_AnsiEscape {
};
inline jule::Bool _200e74a43_AnsiEscape_eq(_200e74a43_AnsiEscape *_self_, _200e74a43_AnsiEscape _other_);


struct _201a175d5_Logger {
};
inline jule::Bool _201a175d5_Logger_eq(_201a175d5_Logger *_self_, _201a175d5_Logger _other_);


struct _204a14216_Token {
	jule::Ptr<_204a19cbb_Fileset> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
};
inline jule::Bool _204a14216_Token_eq(_204a14216_Token *_self_, _204a14216_Token _other_);


struct _204a19cbb_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_Tokens;
};
struct _204a1c0dc_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
};
inline jule::Bool _204a1c0dc_kindPair_eq(_204a1c0dc_kindPair *_self_, _204a1c0dc_kindPair _other_);


struct _204a2307c_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_tokens;
	jule::Ptr<_204a19cbb_Fileset> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1eeaca425_Log> _field_errors;
};
struct _204a27c52_AST {
	jule::Ptr<_204a19cbb_Fileset> _field_File;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_204a42a5d_UseDecl>> _field_UseDecls;
	jule::Slice<_204a28b10_Node> _field_Nodes;
};
struct _204a28b10_Node {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _204a28b10_Node_eq(_204a28b10_Node *_self_, _204a28b10_Node _other_);


struct _204a2902d_Directive {
	jule::Ptr<_204a14216_Token> _field_Tag;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_Args;
};
struct _204a29b11_TypeDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _204a29b11_TypeDecl_eq(_204a29b11_TypeDecl *_self_, _204a29b11_TypeDecl _other_);


struct _204a2a21b_IdentTypeDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _field_Generics;
};
struct _204a2a4d5_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>> _field_Idents;
};
struct _204a2a8ae_NamespaceTypeDecl {
	jule::Ptr<_204a14216_Token> _field_Namespace;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
};
inline jule::Bool _204a2a8ae_NamespaceTypeDecl_eq(_204a2a8ae_NamespaceTypeDecl *_self_, _204a2a8ae_NamespaceTypeDecl _other_);


struct _204a2abab_SptrTypeDecl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Elem;
};
inline jule::Bool _204a2abab_SptrTypeDecl_eq(_204a2abab_SptrTypeDecl *_self_, _204a2abab_SptrTypeDecl _other_);


struct _204a2b041_SlcTypeDecl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Elem;
};
inline jule::Bool _204a2b041_SlcTypeDecl_eq(_204a2b041_SlcTypeDecl *_self_, _204a2b041_SlcTypeDecl _other_);


struct _204a2b33d_TupleTypeDecl {
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _field_Types;
};
struct _204a2b63a_PtrTypeDecl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Elem;
};
inline jule::Bool _204a2b63a_PtrTypeDecl_eq(_204a2b63a_PtrTypeDecl *_self_, _204a2b63a_PtrTypeDecl _other_);


struct _204a2bdcc_ArrTypeDecl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Elem;
	jule::Ptr<_204a2de45_Expr> _field_Size;
};
inline jule::Bool _204a2bdcc_ArrTypeDecl_eq(_204a2bdcc_ArrTypeDecl *_self_, _204a2bdcc_ArrTypeDecl _other_);


struct _204a2c62a_MapTypeDecl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Key;
	jule::Ptr<_204a29b11_TypeDecl> _field_Val;
};
inline jule::Bool _204a2c62a_MapTypeDecl_eq(_204a2c62a_MapTypeDecl *_self_, _204a2c62a_MapTypeDecl _other_);


struct _204a2ca04_RetTypeDecl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_Idents;
};
struct _204a2de45_Expr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _204a2de45_Expr_eq(_204a2de45_Expr *_self_, _204a2de45_Expr _other_);


struct _204a2e20e_RangeExpr {
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a2e20e_RangeExpr_eq(_204a2e20e_RangeExpr *_self_, _204a2e20e_RangeExpr _other_);


struct _204a2e819_UseExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a2e819_UseExpr_eq(_204a2e819_UseExpr *_self_, _204a2e819_UseExpr _other_);


struct _204a2ea39_TupleExpr {
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_Expr;
};
struct _204a2edd0_LitExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _204a2edd0_LitExpr_eq(_204a2edd0_LitExpr *_self_, _204a2edd0_LitExpr _other_);


struct _204a302a9_UnsafeExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a302a9_UnsafeExpr_eq(_204a302a9_UnsafeExpr *_self_, _204a302a9_UnsafeExpr _other_);


struct _204a30760_IdentExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _204a30760_IdentExpr_eq(_204a30760_IdentExpr *_self_, _204a30760_IdentExpr _other_);


struct _204a31002_UnaryExpr {
	jule::Ptr<_204a14216_Token> _field_Op;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a31002_UnaryExpr_eq(_204a31002_UnaryExpr *_self_, _204a31002_UnaryExpr _other_);


struct _204a313cb_VariadicExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a313cb_VariadicExpr_eq(_204a313cb_VariadicExpr *_self_, _204a313cb_VariadicExpr _other_);


struct _204a317a5_CastExpr {
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a317a5_CastExpr_eq(_204a317a5_CastExpr *_self_, _204a317a5_CastExpr _other_);


struct _204a31b7e_NamespaceExpr {
	jule::Ptr<_204a14216_Token> _field_Namespace;
	jule::Ptr<_204a14216_Token> _field_Ident;
};
inline jule::Bool _204a31b7e_NamespaceExpr_eq(_204a31b7e_NamespaceExpr *_self_, _204a31b7e_NamespaceExpr _other_);


struct _204a32058_SubIdentExpr {
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Ptr<_204a14216_Token> _field_Ident;
};
inline jule::Bool _204a32058_SubIdentExpr_eq(_204a32058_SubIdentExpr *_self_, _204a32058_SubIdentExpr _other_);


struct _204a3250e_BinaryExpr {
	jule::Ptr<_204a2de45_Expr> _field_Left;
	jule::Ptr<_204a2de45_Expr> _field_Right;
	jule::Ptr<_204a14216_Token> _field_Op;
};
inline jule::Bool _204a3250e_BinaryExpr_eq(_204a3250e_BinaryExpr *_self_, _204a3250e_BinaryExpr _other_);


struct _204a32b6e_FnCallExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_Args;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _204a33664_FieldExprPair {
	jule::Ptr<_204a14216_Token> _field_Field;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a33664_FieldExprPair_eq(_204a33664_FieldExprPair *_self_, _204a33664_FieldExprPair _other_);


struct _204a33e8e_StructLit {
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_Exprs;
};
struct _204a34445_BraceLit {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_Exprs;
};
struct _204a34c70_KeyValPair {
	jule::Ptr<_204a2de45_Expr> _field_Key;
	jule::Ptr<_204a2de45_Expr> _field_Val;
	jule::Ptr<_204a14216_Token> _field_Colon;
};
inline jule::Bool _204a34c70_KeyValPair_eq(_204a34c70_KeyValPair *_self_, _204a34c70_KeyValPair _other_);


struct _204a3549b_SliceExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_Exprs;
};
struct _204a35e08_IndexingExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Ptr<_204a2de45_Expr> _field_Index;
};
inline jule::Bool _204a35e08_IndexingExpr_eq(_204a35e08_IndexingExpr *_self_, _204a35e08_IndexingExpr _other_);


struct _204a36568_SlicingExpr {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Ptr<_204a2de45_Expr> _field_Start;
	jule::Ptr<_204a2de45_Expr> _field_To;
};
inline jule::Bool _204a36568_SlicingExpr_eq(_204a36568_SlicingExpr *_self_, _204a36568_SlicingExpr _other_);


struct _204a36865_Constraint {
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _field_Mask;
};
struct _204a36d1b_GenericDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204a36865_Constraint> _field_Constraint;
};
inline jule::Bool _204a36d1b_GenericDecl_eq(_204a36d1b_GenericDecl *_self_, _204a36d1b_GenericDecl _other_);


struct _204a371e5_LabelSt {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _204a371e5_LabelSt_eq(_204a371e5_LabelSt *_self_, _204a371e5_LabelSt _other_);


struct _204a375be_GotoSt {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_Label;
};
inline jule::Bool _204a375be_GotoSt_eq(_204a375be_GotoSt *_self_, _204a375be_GotoSt _other_);


struct _204a378bb_FallSt {
	jule::Ptr<_204a14216_Token> _field_Token;
};
inline jule::Bool _204a378bb_FallSt_eq(_204a378bb_FallSt *_self_, _204a378bb_FallSt _other_);


struct _204a3802b_AssignLeft {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a3802b_AssignLeft_eq(_204a3802b_AssignLeft *_self_, _204a3802b_AssignLeft _other_);


struct _204a385ae_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_204a14216_Token> _field_Setter;
	jule::Slice<jule::Ptr<_204a3802b_AssignLeft>> _field_Left;
	jule::Ptr<_204a2de45_Expr> _field_Right;
};
struct _204a3959e_Stmt {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _204a3959e_Stmt_eq(_204a3959e_Stmt *_self_, _204a3959e_Stmt _other_);


struct _204a39c0e_ScopeTree {
	jule::Ptr<_204a39c0e_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_204a3959e_Stmt> _field_Stmts;
	jule::Ptr<_204a14216_Token> _field_End;
};
struct _204a3a44b_ParamDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _204a3a44b_ParamDecl_eq(_204a3a44b_ParamDecl *_self_, _204a3a44b_ParamDecl _other_);


struct _204a3b89d_FnDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_Directives;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _field_Generics;
	jule::Ptr<_204a2ca04_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>> _field_Params;
};
struct _204a3ca58_VarDecl {
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_Directives;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
struct _204a3ce32_RetSt {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a3ce32_RetSt_eq(_204a3ce32_RetSt *_self_, _204a3ce32_RetSt _other_);


struct _204a3d6a2_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
};
inline jule::Bool _204a3d6a2_Iter_eq(_204a3d6a2_Iter *_self_, _204a3d6a2_Iter _other_);


struct _204a3decc_WhileKind {
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_204a14216_Token> _field_NextToken;
};
inline jule::Bool _204a3decc_WhileKind_eq(_204a3decc_WhileKind *_self_, _204a3decc_WhileKind _other_);


struct _204a3e8d4_RangeKind {
	jule::Ptr<_204a14216_Token> _field_InToken;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Ptr<_204a3ca58_VarDecl> _field_KeyA;
	jule::Ptr<_204a3ca58_VarDecl> _field_KeyB;
};
inline jule::Bool _204a3e8d4_RangeKind_eq(_204a3e8d4_RangeKind *_self_, _204a3e8d4_RangeKind _other_);


struct _204a3ecad_BreakSt {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_Label;
};
inline jule::Bool _204a3ecad_BreakSt_eq(_204a3ecad_BreakSt *_self_, _204a3ecad_BreakSt _other_);


struct _204a40187_ContSt {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_Label;
};
inline jule::Bool _204a40187_ContSt_eq(_204a40187_ContSt *_self_, _204a40187_ContSt _other_);


struct _204a4063d_If {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
};
inline jule::Bool _204a4063d_If_eq(_204a4063d_If *_self_, _204a4063d_If _other_);


struct _204a40a17_Else {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
};
inline jule::Bool _204a40a17_Else_eq(_204a40a17_Else *_self_, _204a40a17_Else _other_);


struct _204a40ebd_Conditional {
	jule::Ptr<_204a4063d_If> _field_Head;
	jule::Slice<jule::Ptr<_204a4063d_If>> _field_Tail;
	jule::Ptr<_204a40a17_Else> _field_Default;
};
struct _204a4170a_TypeAliasDecl {
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
};
inline jule::Bool _204a4170a_TypeAliasDecl_eq(_204a4170a_TypeAliasDecl *_self_, _204a4170a_TypeAliasDecl _other_);


struct _204a41bb1_Case {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_Exprs;
};
struct _204a424ca_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_204a41bb1_Case>> _field_Cases;
	jule::Ptr<_204a40a17_Else> _field_Default;
};
struct _204a42a5d_UseDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_Path;
	jule::Ptr<_204a14216_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _204a42a5d_UseDecl_eq(_204a42a5d_UseDecl *_self_, _204a42a5d_UseDecl _other_);


struct _204a43014_EnumItemDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204a2de45_Expr> _field_Expr;
};
inline jule::Bool _204a43014_EnumItemDecl_eq(_204a43014_EnumItemDecl *_self_, _204a43014_EnumItemDecl _other_);


struct _204a43ac5_EnumDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>> _field_Items;
	jule::Ptr<_204a14216_Token> _field_End;
};
struct _204a44400_TypeEnumItemDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
};
inline jule::Bool _204a44400_TypeEnumItemDecl_eq(_204a44400_TypeEnumItemDecl *_self_, _204a44400_TypeEnumItemDecl _other_);


struct _204a44a60_TypeEnumDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_204a14216_Token> _field_End;
};
struct _204a44d29_FieldDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_204a29b11_TypeDecl> _field_Kind;
	jule::Ptr<_204a2de45_Expr> _field_Default;
};
inline jule::Bool _204a44d29_FieldDecl_eq(_204a44d29_FieldDecl *_self_, _204a44d29_FieldDecl _other_);


struct _204a45720_StructDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_204a44d29_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _field_Generics;
};
struct _204a45e5c_TraitDecl {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_204a3b89d_FnDecl>> _field_Methods;
};
struct _204a465bc_Impl {
	jule::Ptr<_204a14216_Token> _field_End;
	jule::Ptr<_204a29b11_TypeDecl> _field_Base;
	jule::Ptr<_204a29b11_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_204a3b89d_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _field_Statics;
};
inline jule::Bool _204b0a62b_Eq(_204a9d338_Const* _self_, _204a9d338_Const _25814_x);
inline jule::Bool _204b0a96c_Lt(_204a9d338_Const* _self_, _204a9d338_Const _28514_x);
inline jule::Bool _204b0acad_LtEq(_204a9d338_Const* _self_, _204a9d338_Const _30816_x);
inline jule::Bool _204b0b0ee_Gt(_204a9d338_Const* _self_, _204a9d338_Const _33114_x);
inline jule::Bool _204b0b440_GtEq(_204a9d338_Const* _self_, _204a9d338_Const _35416_x);
struct _204a9d338_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
struct _204a47579_Field {
	jule::Ptr<_204a4a46c_Struct> _field_Owner;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
	jule::Ptr<_204a2de45_Expr> _field_Default;
};
inline jule::Bool _204a47579_Field_eq(_204a47579_Field *_self_, _204a47579_Field _other_);


struct _204a49559_Operators {
	jule::Ptr<_204b21664_FnIns> _field_Eq;
	jule::Ptr<_204b21664_FnIns> _field_Gt;
	jule::Ptr<_204b21664_FnIns> _field_GtEq;
	jule::Ptr<_204b21664_FnIns> _field_Lt;
	jule::Ptr<_204b21664_FnIns> _field_LtEq;
	jule::Ptr<_204b21664_FnIns> _field_Shl;
	jule::Ptr<_204b21664_FnIns> _field_Shr;
	jule::Ptr<_204b21664_FnIns> _field_Add;
	jule::Ptr<_204b21664_FnIns> _field_Sub;
	jule::Ptr<_204b21664_FnIns> _field_Div;
	jule::Ptr<_204b21664_FnIns> _field_Mul;
	jule::Ptr<_204b21664_FnIns> _field_Mod;
	jule::Ptr<_204b21664_FnIns> _field_BitAnd;
	jule::Ptr<_204b21664_FnIns> _field_BitOr;
	jule::Ptr<_204b21664_FnIns> _field_BitXor;
	jule::Ptr<_204b21664_FnIns> _field_Neg;
	jule::Ptr<_204b21664_FnIns> _field_Pos;
	jule::Ptr<_204b21664_FnIns> _field_BitNot;
	jule::Ptr<_204b21664_FnIns> _field_AddAssign;
	jule::Ptr<_204b21664_FnIns> _field_SubAssign;
	jule::Ptr<_204b21664_FnIns> _field_DivAssign;
	jule::Ptr<_204b21664_FnIns> _field_MulAssign;
	jule::Ptr<_204b21664_FnIns> _field_ModAssign;
	jule::Ptr<_204b21664_FnIns> _field_ShlAssign;
	jule::Ptr<_204b21664_FnIns> _field_ShrAssign;
	jule::Ptr<_204b21664_FnIns> _field_BitOrAssign;
	jule::Ptr<_204b21664_FnIns> _field_BitAndAssign;
	jule::Ptr<_204b21664_FnIns> _field_BitXorAssign;
};
inline jule::Bool _204a49559_Operators_eq(_204a49559_Operators *_self_, _204a49559_Operators _other_);


struct _204a4a46c_Struct {
	jule::Ptr<_204c2e486_sema> _field_sema;
	jule::Slice<jule::Ptr<_204a4a46c_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_204a4a46c_Struct>> _field_Uses;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_204a47579_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_204b28cba_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_204a4d2c7_StructIns>> _field_Instances;
};
struct _204a4c727_FieldIns {
	jule::Ptr<_204a4d2c7_StructIns> _field_Owner;
	jule::Ptr<_204a47579_Field> _field_Decl;
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Ptr<_204ca2b7a_Data> _field_Default;
};
inline jule::Bool _204a4c727_FieldIns_eq(_204a4c727_FieldIns *_self_, _204a4c727_FieldIns _other_);


struct _204a4d2c7_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_204a4a46c_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_204cd909b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_204a4c727_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_204c000b1_ReferenceStack> _field_Refers;
	_204a49559_Operators _field_Operators;
};
struct _204b10dd4_OperandExprModel {
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _204b10dd4_OperandExprModel_eq(_204b10dd4_OperandExprModel *_self_, _204b10dd4_OperandExprModel _other_);


struct _204b113ce_BinaryExprModel {
	jule::Ptr<_204b10dd4_OperandExprModel> _field_Left;
	jule::Ptr<_204b10dd4_OperandExprModel> _field_Right;
	jule::Ptr<_204a14216_Token> _field_Op;
};
inline jule::Bool _204b113ce_BinaryExprModel_eq(_204b113ce_BinaryExprModel *_self_, _204b113ce_BinaryExprModel _other_);


struct _204b117a8_UnaryExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Ptr<_204a14216_Token> _field_Op;
};
inline jule::Bool _204b117a8_UnaryExprModel_eq(_204b117a8_UnaryExprModel *_self_, _204b117a8_UnaryExprModel _other_);


struct _204b11cd6_StructArgExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204a4c727_FieldIns> _field_Field;
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
};
inline jule::Bool _204b11cd6_StructArgExprModel_eq(_204b11cd6_StructArgExprModel *_self_, _204b11cd6_StructArgExprModel _other_);


struct _204b1217c_StructLitExprModel {
	jule::Ptr<_204a4d2c7_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_204b11cd6_StructArgExprModel>> _field_Args;
};
struct _204b12479_AllocStructLitExprModel {
	jule::Ptr<_204b1217c_StructLitExprModel> _field_Lit;
};
inline jule::Bool _204b12479_AllocStructLitExprModel_eq(_204b12479_AllocStructLitExprModel *_self_, _204b12479_AllocStructLitExprModel _other_);


struct _204b12a0c_CastingExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Ptr<_204cda982_Type> _field_ExprType;
};
inline jule::Bool _204b12a0c_CastingExprModel_eq(_204b12a0c_CastingExprModel *_self_, _204b12a0c_CastingExprModel _other_);


struct _204b133ae_FnCallExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204b21664_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_204bd11d5_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _204b13788_SliceExprModel {
	jule::Ptr<_204cda982_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _204b13c3e_IndexingExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Ptr<_204ca2b7a_Data> _field_Index;
};
inline jule::Bool _204b13c3e_IndexingExprModel_eq(_204b13c3e_IndexingExprModel *_self_, _204b13c3e_IndexingExprModel _other_);


struct _204b141e5_AnonFnExprModel {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Captured;
	jule::Ptr<_204b21664_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _204b145be_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _204b145be_KeyValPairExprModel_eq(_204b145be_KeyValPairExprModel *_self_, _204b145be_KeyValPairExprModel _other_);


struct _204b14998_MapExprModel {
	jule::Ptr<_204ce973d_Map> _field_Kind;
	jule::Slice<jule::Ptr<_204b145be_KeyValPairExprModel>> _field_Entries;
};
struct _204b1502b_SlicingExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _204b1502b_SlicingExprModel_eq(_204b1502b_SlicingExprModel *_self_, _204b1502b_SlicingExprModel _other_);


struct _204b155ae_TraitSubIdentExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_204b1d5a6_Fn> _field_Method;
	jule::Ptr<_204b28cba_Trait> _field_Trt;
};
inline jule::Bool _204b155ae_TraitSubIdentExprModel_eq(_204b155ae_TraitSubIdentExprModel *_self_, _204b155ae_TraitSubIdentExprModel _other_);


struct _204b15e50_StructSubIdentExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Ptr<_204b21664_FnIns> _field_Method;
	jule::Ptr<_204a4c727_FieldIns> _field_Field;
	jule::Ptr<_204a4d2c7_StructIns> _field_Owner;
};
inline jule::Bool _204b15e50_StructSubIdentExprModel_eq(_204b15e50_StructSubIdentExprModel *_self_, _204b15e50_StructSubIdentExprModel _other_);


struct _204b162e6_StructStaticIdentExprModel {
	jule::Ptr<_204a4d2c7_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_204b21664_FnIns> _field_Method;
};
inline jule::Bool _204b162e6_StructStaticIdentExprModel_eq(_204b162e6_StructStaticIdentExprModel *_self_, _204b162e6_StructStaticIdentExprModel _other_);


struct _204b166c0_ArrayExprModel {
	jule::Ptr<_204cea3ba_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _204b169bc_TupleExprModel {
	jule::Slice<jule::Ptr<_204ca2b7a_Data>> _field_Datas;
};
struct _204b16cb9_BuiltinPrintCallExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
};
inline jule::Bool _204b16cb9_BuiltinPrintCallExprModel_eq(_204b16cb9_BuiltinPrintCallExprModel *_self_, _204b16cb9_BuiltinPrintCallExprModel _other_);


struct _204b170b6_BuiltinPrintlnCallExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
};
inline jule::Bool _204b170b6_BuiltinPrintlnCallExprModel_eq(_204b170b6_BuiltinPrintlnCallExprModel *_self_, _204b170b6_BuiltinPrintlnCallExprModel _other_);


struct _204b17490_BuiltinNewCallExprModel {
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _204b17490_BuiltinNewCallExprModel_eq(_204b17490_BuiltinNewCallExprModel *_self_, _204b17490_BuiltinNewCallExprModel _other_);


struct _204b17869_BuiltinPanicCallExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _204b17869_BuiltinPanicCallExprModel_eq(_204b17869_BuiltinPanicCallExprModel *_self_, _204b17869_BuiltinPanicCallExprModel _other_);


struct _204b17d20_BuiltinMakeCallExprModel {
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _204b17d20_BuiltinMakeCallExprModel_eq(_204b17d20_BuiltinMakeCallExprModel *_self_, _204b17d20_BuiltinMakeCallExprModel _other_);


struct _204b181e9_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _204b181e9_BuiltinAppendCallExprModel_eq(_204b181e9_BuiltinAppendCallExprModel *_self_, _204b181e9_BuiltinAppendCallExprModel _other_);


struct _204b184e6_BuiltinLenCallExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
};
inline jule::Bool _204b184e6_BuiltinLenCallExprModel_eq(_204b184e6_BuiltinLenCallExprModel *_self_, _204b184e6_BuiltinLenCallExprModel _other_);


struct _204b187e3_BuiltinCapCallExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
};
inline jule::Bool _204b187e3_BuiltinCapCallExprModel_eq(_204b187e3_BuiltinCapCallExprModel *_self_, _204b187e3_BuiltinCapCallExprModel _other_);


struct _204b18bbc_BuiltinDeleteCallExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Dest;
	jule::Ptr<_204ca2b7a_Data> _field_Key;
};
inline jule::Bool _204b18bbc_BuiltinDeleteCallExprModel_eq(_204b18bbc_BuiltinDeleteCallExprModel *_self_, _204b18bbc_BuiltinDeleteCallExprModel _other_);


struct _204b19096_BuiltinCopyCallExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Dest;
	jule::Ptr<_204ca2b7a_Data> _field_Src;
};
inline jule::Bool _204b19096_BuiltinCopyCallExprModel_eq(_204b19096_BuiltinCopyCallExprModel *_self_, _204b19096_BuiltinCopyCallExprModel _other_);


struct _204b19470_BuiltinErrorCallExprModel {
	jule::Ptr<_204b21664_FnIns> _field_Func;
	jule::Ptr<_204ca2b7a_Data> _field_Err;
};
inline jule::Bool _204b19470_BuiltinErrorCallExprModel_eq(_204b19470_BuiltinErrorCallExprModel *_self_, _204b19470_BuiltinErrorCallExprModel _other_);


struct _204b1976c_SizeofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _204b1976c_SizeofExprModel_eq(_204b1976c_SizeofExprModel *_self_, _204b1976c_SizeofExprModel _other_);


struct _204b19e21_AlignofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _204b19e21_AlignofExprModel_eq(_204b19e21_AlignofExprModel *_self_, _204b19e21_AlignofExprModel _other_);


struct _204b1a10d_RuneExprModel {
	jule::I32 _field_Code;
};
inline jule::Bool _204b1a10d_RuneExprModel_eq(_204b1a10d_RuneExprModel *_self_, _204b1a10d_RuneExprModel _other_);


struct _204b1a482_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _204b1a77e_FreeExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _204b1a77e_FreeExprModel_eq(_204b1a77e_FreeExprModel *_self_, _204b1a77e_FreeExprModel _other_);


struct _204b1b51b_RetType {
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_Idents;
};
struct _204b1bad2_Param {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _204b1bad2_Param_eq(_204b1bad2_Param *_self_, _204b1bad2_Param _other_);


struct _204b1d5a6_Fn {
	jule::Ptr<_204c2e486_sema> _field_sema;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_Directives;
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _field_Generics;
	jule::Ptr<_204b1b51b_RetType> _field_Result;
	jule::Slice<jule::Ptr<_204b1bad2_Param>> _field_Params;
	jule::Ptr<_204a4a46c_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_204b21664_FnIns>> _field_Instances;
};
struct _204b2050e_ParamIns {
	jule::Ptr<_204b1bad2_Param> _field_Decl;
	jule::Ptr<_204cda982_Type> _field_Type;
};
inline jule::Bool _204b2050e_ParamIns_eq(_204b2050e_ParamIns *_self_, _204b2050e_ParamIns _other_);


struct _204b21664_FnIns {
	jule::Ptr<_204a4d2c7_StructIns> _field_Owner;
	jule::Ptr<_204b1d5a6_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_204cd909b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _field_Params;
	jule::Ptr<_204cda982_Type> _field_Result;
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::Ptr<_204c000b1_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _204b248a9_SymTab {
	jule::Ptr<_204a19cbb_Fileset> _field_File;
	jule::Slice<_204c01612_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_204a4a46c_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_204b28cba_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_204b2b471_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_204b2cb7b_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_204bcbac6_Impl>> _field_Impls;
};
struct _204b28cba_Trait {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_204ce3193_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_204a4a46c_Struct>> _field_Implemented;
};
struct _204b2a915_EnumItem {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204ca3d02_Value> _field_Value;
};
inline jule::Bool _204b2a915_EnumItem_eq(_204b2a915_EnumItem *_self_, _204b2a915_EnumItem _other_);


struct _204b2b471_Enum {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _field_Items;
};
struct _204b2c5a4_TypeEnumItem {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
};
inline jule::Bool _204b2c5a4_TypeEnumItem_eq(_204b2c5a4_TypeEnumItem *_self_, _204b2c5a4_TypeEnumItem _other_);


struct _204b2cb7b_TypeEnum {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> _field_Items;
};
struct _204ba37e5_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _204ba37e5_comptimeRange_eq(_204ba37e5_comptimeRange *_self_, _204ba37e5_comptimeRange _other_);


struct _204ba4351_comptimeStructField {
	jule::Ptr<_204a4c727_FieldIns> _field_field;
};
inline jule::Bool _204ba4351_comptimeStructField_eq(_204ba4351_comptimeStructField *_self_, _204ba4351_comptimeStructField _other_);


struct _204ba5ae4_comptimeStructFields {
	jule::Slice<jule::Ptr<_204a4c727_FieldIns>> _field_fields;
};
struct _204ba7574_comptimeStatic {
	jule::Ptr<_204c5319c_Var> _field_field;
};
inline jule::Bool _204ba7574_comptimeStatic_eq(_204ba7574_comptimeStatic *_self_, _204ba7574_comptimeStatic _other_);


struct _204ba8d28_comptimeStatics {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_fields;
};
struct _204baa797_comptimeEnumField {
	jule::Ptr<_204b2a915_EnumItem> _field_field;
};
inline jule::Bool _204baa797_comptimeEnumField_eq(_204baa797_comptimeEnumField *_self_, _204baa797_comptimeEnumField _other_);


struct _204babaa6_comptimeEnumFields {
	jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _field_fields;
};
struct _204bad5ad_comptimeParam {
	jule::Ptr<_204b2050e_ParamIns> _field_param;
};
inline jule::Bool _204bad5ad_comptimeParam_eq(_204bad5ad_comptimeParam *_self_, _204bad5ad_comptimeParam _other_);


struct _204bb0417_comptimeParams {
	jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _field_params;
};
struct _204bb1c76_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_204bb36e5_comptimeTypeInfo>> _field_types;
};
struct _204bb36e5_comptimeTypeInfo {
	jule::Ptr<_204cda982_Type> _field_base;
};
inline jule::Bool _204bb36e5_comptimeTypeInfo_eq(_204bb36e5_comptimeTypeInfo *_self_, _204bb36e5_comptimeTypeInfo _other_);


struct _204bb97ea_comptimeValue {
	jule::Ptr<_204ca2b7a_Data> _field_data;
};
inline jule::Bool _204bb97ea_comptimeValue_eq(_204bb97ea_comptimeValue *_self_, _204bb97ea_comptimeValue _other_);


struct _204bbc556_comptimeFiles {
	jule::Slice<jule::Ptr<_204b248a9_SymTab>> _field_files;
};
struct _204bbdec5_comptimeFile {
	jule::Ptr<_204b248a9_SymTab> _field_file;
};
inline jule::Bool _204bbdec5_comptimeFile_eq(_204bbdec5_comptimeFile *_self_, _204bbdec5_comptimeFile _other_);


struct _204bc0aed_comptimeDecls {
	jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>> _field_decls;
};
struct _204bc2ddb_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _204bc2ddb_comptimeDecl_eq(_204bc2ddb_comptimeDecl *_self_, _204bc2ddb_comptimeDecl _other_);


struct _204bc97c7_constraintChecker {
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_204cd909b_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _field_genericsA;
	jule::Ptr<_204b21664_FnIns> _field_fi;
	jule::Ptr<_204a4d2c7_StructIns> _field_si;
	jule::Ptr<_204a14216_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _204bcbac6_Impl {
	jule::Ptr<_204a29b11_TypeDecl> _field_Base;
	jule::Ptr<_204a29b11_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Statics;
};
struct _204bd11d5_Scope {
	jule::Ptr<_204bd11d5_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I32 _field_ChildIndex;
	jule::I32 _field_StmtIndex;
};
struct _204bd1603_If {
	jule::Any _field_Expr;
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
};
inline jule::Bool _204bd1603_If_eq(_204bd1603_If *_self_, _204bd1603_If _other_);


struct _204bd1900_Else {
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
};
inline jule::Bool _204bd1900_Else_eq(_204bd1900_Else *_self_, _204bd1900_Else _other_);


struct _204bd1d1d_Conditional {
	jule::Slice<jule::Ptr<_204bd1603_If>> _field_Elifs;
	jule::Ptr<_204bd1900_Else> _field_Default;
};
struct _204bd211a_InfIter {
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
};
inline jule::Bool _204bd211a_InfIter_eq(_204bd211a_InfIter *_self_, _204bd211a_InfIter _other_);


struct _204bd25c1_WhileIter {
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _204bd25c1_WhileIter_eq(_204bd25c1_WhileIter *_self_, _204bd25c1_WhileIter _other_);


struct _204bd301c_RangeIter {
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Ptr<_204c5319c_Var> _field_KeyA;
	jule::Ptr<_204c5319c_Var> _field_KeyB;
};
inline jule::Bool _204bd301c_RangeIter_eq(_204bd301c_RangeIter *_self_, _204bd301c_RangeIter _other_);


struct _204bd33a2_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _204bd33a2_ContSt_eq(_204bd33a2_ContSt *_self_, _204bd33a2_ContSt _other_);


struct _204bd377b_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _204bd377b_BreakSt_eq(_204bd377b_BreakSt *_self_, _204bd377b_BreakSt _other_);


struct _204bd3c32_Label {
	jule::Str _field_Ident;
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _204bd3c32_Label_eq(_204bd3c32_Label *_self_, _204bd3c32_Label _other_);


struct _204bd4392_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Ptr<_204bd3c32_Label> _field_Label;
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _204bd4392_GotoSt_eq(_204bd4392_GotoSt *_self_, _204bd4392_GotoSt _other_);


struct _204bd476b_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _204bd476b_Postfix_eq(_204bd476b_Postfix *_self_, _204bd476b_Postfix _other_);


struct _204bd4c22_Assign {
	jule::Ptr<_204b10dd4_OperandExprModel> _field_Left;
	jule::Ptr<_204b10dd4_OperandExprModel> _field_Right;
	jule::Ptr<_204a14216_Token> _field_Op;
};
inline jule::Bool _204bd4c22_Assign_eq(_204bd4c22_Assign *_self_, _204bd4c22_Assign _other_);


struct _204bd52a5_MultiAssign {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_204ca2b7a_Data>> _field_Left;
	jule::Any _field_Right;
	jule::Ptr<_204a14216_Token> _field_Op;
};
struct _204bd59e2_Match {
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_204bd651a_Case>> _field_Cases;
	jule::Ptr<_204bd651a_Case> _field_Default;
};
struct _204bd651a_Case {
	jule::Ptr<_204bd59e2_Match> _field_Owner;
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_204ca2b7a_Data>> _field_Exprs;
	jule::Ptr<_204bd651a_Case> _field_Next;
};
struct _204bd6c13_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _204bd6c13_FallSt_eq(_204bd6c13_FallSt *_self_, _204bd6c13_FallSt _other_);


struct _204bd70a9_RetSt {
	jule::Ptr<_204b21664_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _204bd70a9_RetSt_eq(_204bd70a9_RetSt *_self_, _204bd70a9_RetSt _other_);


struct _204bd7560_scopeLabel {
	jule::Ptr<_204a14216_Token> _field_token;
	jule::Ptr<_204bd3c32_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _204bd7560_scopeLabel_eq(_204bd7560_scopeLabel *_self_, _204bd7560_scopeLabel _other_);


struct _204bd7939_result {
	jule::Ptr<_204b21664_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _204bd7939_result_eq(_204bd7939_result *_self_, _204bd7939_result _other_);


struct _204bd8929_scopeChecker {
	jule::Ptr<_204a14216_Token> _field_calledFrom;
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Ptr<_204b21664_FnIns> _field_owner;
	jule::Ptr<_204bd8929_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_204b248a9_SymTab> _field_table;
	jule::Ptr<_204bd11d5_Scope> _field_scope;
	jule::Ptr<_204a39c0e_ScopeTree> _field_tree;
	jule::Ptr<_204bd7939_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_204c5319c_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_204bd7560_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_204bd4392_GotoSt>>> _field_gotos;
	jule::I32 _field_i;
};
inline jule::Bool _204bd8929_scopeChecker_eq(_204bd8929_scopeChecker *_self_, _204bd8929_scopeChecker _other_);


struct _204bec7a6_directiveChecker {
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_204a2902d_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _204bec7a6_directiveChecker_eq(_204bec7a6_directiveChecker *_self_, _204bec7a6_directiveChecker _other_);


struct _204c000b1_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _204c01612_Pass {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _204c01612_Pass_eq(_204c01612_Pass *_self_, _204c01612_Pass _other_);


struct _204c060b7_symBuilder {
	jule::Ptr<_204c060b7_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1eeaca425_Log> _field_errors;
	jule::Ptr<_204a27c52_AST> _field_ast;
	jule::Ptr<_204b248a9_SymTab> _field_table;
};
struct _204c12139_ImportInfo {
	jule::Ptr<_204a42a5d_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_204c148ab_Package> _field_Package;
	jule::I32 _field_ModId;
};
inline jule::Bool _204c12139_ImportInfo_eq(_204c12139_ImportInfo *_self_, _204c12139_ImportInfo _other_);


struct _204c148ab_Package {
	jule::Slice<jule::Ptr<_204b248a9_SymTab>> _field_Files;
};
struct _204c2d85e_commonSemaMeta {
	jule::Slice<jule::Ptr<_204bb36e5_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_204c12139_ImportInfo> _field_runtime;
};
struct _204c2e486_sema {
	jule::Slice<_1eeaca425_Log> _field_errors;
	jule::Slice<jule::Ptr<_204b248a9_SymTab>> _field_files;
	jule::Ptr<_204b248a9_SymTab> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_204c2d85e_commonSemaMeta> _field_meta;
};
struct _204c4e6b5_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _204c5319c_Var {
	jule::Ptr<_204bd11d5_Scope> _field_Scope;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
	jule::Ptr<_204ca3d02_Value> _field_Value;
	jule::Ptr<_204c000b1_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Depends;
};
struct _204c54027_FuncPattern {
};
struct _204c8deb8_typeCompatibilityChecker {
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Ptr<_204cda982_Type> _field_dest;
	jule::Ptr<_204cda982_Type> _field_src;
	jule::Ptr<_204a14216_Token> _field_errorToken;
};
inline jule::Bool _204c8deb8_typeCompatibilityChecker_eq(_204c8deb8_typeCompatibilityChecker *_self_, _204c8deb8_typeCompatibilityChecker _other_);


struct _204c90d44_assignTypeChecker {
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Ptr<_204cda982_Type> _field_dest;
	jule::Ptr<_204ca2b7a_Data> _field_d;
	jule::Ptr<_204a14216_Token> _field_errorToken;
	jule::Ptr<_204c000b1_ReferenceStack> _field_refers;
};
inline jule::Bool _204c90d44_assignTypeChecker_eq(_204c90d44_assignTypeChecker *_self_, _204c90d44_assignTypeChecker _other_);


struct _204c92719_dynamicTypeAnnotation {
	jule::Ptr<_204ca4b49_eval> _field_e;
	jule::Ptr<_204b21664_FnIns> _field_f;
	jule::Ptr<_204b2050e_ParamIns> _field_p;
	jule::Ptr<_204ca2b7a_Data> _field_a;
	jule::Ptr<_204a14216_Token> _field_errorToken;
	jule::Ptr<_204cda982_Type>* _field_k;
	jule::Ptr<_204a29b11_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_ignored;
};
struct _204c97576_fnCallArgChecker {
	jule::Ptr<_204ca4b49_eval> _field_e;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_args;
	jule::Ptr<_204a14216_Token> _field_errorToken;
	jule::Ptr<_204b21664_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_ignored;
};
struct _204c9a4ad_structLitChecker {
	jule::Ptr<_204ca4b49_eval> _field_e;
	jule::Ptr<_204a14216_Token> _field_errorToken;
	jule::Ptr<_204a4d2c7_StructIns> _field_s;
	jule::Slice<jule::Ptr<_204b11cd6_StructArgExprModel>> _field_args;
};
struct _204c9c290_rangeChecker {
	jule::Ptr<_204bd8929_scopeChecker> _field_sc;
	jule::Ptr<_204a3e8d4_RangeKind> _field_rang;
	jule::Ptr<_204bd301c_RangeIter> _field_Kind;
	jule::Ptr<_204ca2b7a_Data> _field_d;
};
inline jule::Bool _204c9c290_rangeChecker_eq(_204c9c290_rangeChecker *_self_, _204c9c290_rangeChecker _other_);


struct _204c9eacd_retTypeChecker {
	jule::Ptr<_204bd8929_scopeChecker> _field_sc;
	jule::Ptr<_204b21664_FnIns> _field_f;
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_types;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _field_exprs;
	jule::Ptr<_204a14216_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _204ca2b7a_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_204a9d338_Const> _field_Constant;
};
inline jule::Bool _204ca2b7a_Data_eq(_204ca2b7a_Data *_self_, _204ca2b7a_Data _other_);


struct _204ca3d02_Value {
	jule::Ptr<_204a2de45_Expr> _field_Expr;
	jule::Ptr<_204ca2b7a_Data> _field_Data;
};
inline jule::Bool _204ca3d02_Value_eq(_204ca3d02_Value *_self_, _204ca3d02_Value _other_);


struct _204ca41cb_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _204ca41cb_target_eq(_204ca41cb_target *_self_, _204ca41cb_target _other_);


struct _204ca4b49_eval {
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_204cda982_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_204c5319c_Var> _field_owner;
	jule::Ptr<_204a4c727_FieldIns> _field_field;
	_204ca41cb_target _field_target;
};
inline jule::Bool _204ca4b49_eval_eq(_204ca4b49_eval *_self_, _204ca4b49_eval _other_);


struct _204cc8c28_unaryEval {
	jule::Ptr<_204ca4b49_eval> _field_e;
	jule::Ptr<_204ca2b7a_Data> _field_d;
	jule::Ptr<_204a31002_UnaryExpr> _field_u;
};
inline jule::Bool _204cc8c28_unaryEval_eq(_204cc8c28_unaryEval *_self_, _204cc8c28_unaryEval _other_);


struct _204ccabb4_binaryEval {
	jule::Ptr<_204ca4b49_eval> _field_e;
	jule::Ptr<_204ca2b7a_Data> _field_l;
	jule::Ptr<_204ca2b7a_Data> _field_r;
	jule::Ptr<_204a14216_Token> _field_op;
};
inline jule::Bool _204ccabb4_binaryEval_eq(_204ccabb4_binaryEval *_self_, _204ccabb4_binaryEval _other_);


struct _204cd909b_InsGeneric {
	jule::Ptr<_204cda982_Type> _field_Type;
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_Constraint;
};
struct _204cd9b90_TypeAlias {
	jule::Ptr<_204a39c0e_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_204ce3193_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _field_Generics;
};
struct _204cda982_Type {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _204cda982_Type_eq(_204cda982_Type *_self_, _204cda982_Type _other_);


struct _204ce3193_TypeSym {
	jule::Ptr<_204a29b11_TypeDecl> _field_Decl;
	jule::Ptr<_204cda982_Type> _field_Type;
};
inline jule::Bool _204ce3193_TypeSym_eq(_204ce3193_TypeSym *_self_, _204ce3193_TypeSym _other_);


struct _204ce3a9a_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _204ce3a9a_Prim_eq(_204ce3a9a_Prim *_self_, _204ce3a9a_Prim _other_);


struct _204ce75c6_Sptr {
	jule::Ptr<_204cda982_Type> _field_Elem;
};
inline jule::Bool _204ce75c6_Sptr_eq(_204ce75c6_Sptr *_self_, _204ce75c6_Sptr _other_);


struct _204ce8099_Slc {
	jule::Ptr<_204cda982_Type> _field_Elem;
};
inline jule::Bool _204ce8099_Slc_eq(_204ce8099_Slc *_self_, _204ce8099_Slc _other_);


struct _204ce8b8d_Tuple {
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_Types;
};
struct _204ce973d_Map {
	jule::Ptr<_204cda982_Type> _field_Key;
	jule::Ptr<_204cda982_Type> _field_Val;
};
inline jule::Bool _204ce973d_Map_eq(_204ce973d_Map *_self_, _204ce973d_Map _other_);


struct _204cea3ba_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_204cda982_Type> _field_Elem;
};
inline jule::Bool _204cea3ba_Arr_eq(_204cea3ba_Arr *_self_, _204cea3ba_Arr _other_);


struct _204cead8d_Ptr {
	jule::Ptr<_204cda982_Type> _field_Elem;
};
inline jule::Bool _204cead8d_Ptr_eq(_204cead8d_Ptr *_self_, _204cead8d_Ptr _other_);


struct _204cebd8e_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _204cebd8e_referencer_eq(_204cebd8e_referencer *_self_, _204cebd8e_referencer _other_);


struct _204cecd7e_typeChecker {
	jule::Ptr<_204c2e486_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_204cebd8e_referencer> _field_referencer;
	jule::Ptr<_204c000b1_ReferenceStack> _field_refers;
	jule::Ptr<_204a14216_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_204cda982_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_204cd9b90_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _204d05e42_identTypeLookup {
};
inline jule::Bool _204d05e42_identTypeLookup_eq(_204d05e42_identTypeLookup *_self_, _204d05e42_identTypeLookup _other_);


struct _20561c4a0_FileInfo {
	jule::Ptr<_204a27c52_AST> _field_Ast;
	jule::Slice<_1eeaca425_Log> _field_Errors;
};
struct _20566c236_stmt {
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _20566cac7_scopeParser {
	jule::Ptr<_20568acd2_parser> _field_p;
	jule::Ptr<_204a39c0e_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_20566c236_stmt>> _field_stmts;
	jule::I32 _field_pos;
};
struct _20567a4ec_exprBuilder {
	jule::Ptr<_20568acd2_parser> _field_p;
};
inline jule::Bool _20567a4ec_exprBuilder_eq(_20567a4ec_exprBuilder *_self_, _20567a4ec_exprBuilder _other_);


struct _205687ae2_assignInfo {
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_l;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_r;
	jule::Ptr<_204a14216_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _20568acd2_parser {
	jule::Ptr<_204a27c52_AST> _field_ast;
	jule::Slice<jule::Ptr<_204a2902d_Directive>> _field_directives;
	jule::Slice<_1eeaca425_Log> _field_errors;
	jule::Ptr<_20567a4ec_exprBuilder> _field_ep;
};
struct _20569be8b_typeBuilder {
	jule::Ptr<_20568acd2_parser> _field_p;
	jule::Slice<jule::Ptr<_204a14216_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
};
struct _204e14380_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _204e14380_CompileInfo_eq(_204e14380_CompileInfo *_self_, _204e14380_CompileInfo _other_);


struct _204e15abd_directiveEval {
	jule::Slice<_1eeaca425_Log> _field_logs;
	jule::Ptr<_204a2902d_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _2056a108e_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _204d6c21c_anyData {
	jule::Ptr<jule::U32> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _204d6c21c_anyData_eq(_204d6c21c_anyData *_self_, _204d6c21c_anyData _other_);


struct _2056a71a5_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _2056ae8d8_MetaStrBuilder {
	jule::Ptr<_204b21664_FnIns> _field_Write;
	jule::Ptr<_204b21664_FnIns> _field_WriteByte;
	jule::Ptr<_204b21664_FnIns> _field_WriteRune;
	jule::Ptr<_204b21664_FnIns> _field_WriteStr;
};
inline jule::Bool _2056ae8d8_MetaStrBuilder_eq(_2056ae8d8_MetaStrBuilder *_self_, _2056ae8d8_MetaStrBuilder _other_);


struct _2056b05a9_MetaRuntime {
	jule::Ptr<_204b1d5a6_Fn> _field_ToStr;
	jule::Ptr<_204b1d5a6_Fn> _field_ArrayCmp;
	jule::Ptr<_204b21664_FnIns> _field_RCAdd;
	jule::Ptr<_204b21664_FnIns> _field_RCLoad;
	jule::Ptr<_204b21664_FnIns> _field_RCDrop;
	jule::Ptr<_204b21664_FnIns> _field_RCAddAtomic;
	jule::Ptr<_204b21664_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_204b21664_FnIns> _field_RCDropAtomic;
	jule::Ptr<_204b21664_FnIns> _field_RuneCount;
	jule::Ptr<_204a4a46c_Struct> _field_Map;
	jule::Ptr<_204a4a46c_Struct> _field_MapIterator;
};
inline jule::Bool _2056b05a9_MetaRuntime_eq(_2056b05a9_MetaRuntime *_self_, _2056b05a9_MetaRuntime _other_);


struct _2056b107c_MetaMathCmplx {
	jule::Ptr<_204a4d2c7_StructIns> _field_Cmplx;
	jule::Ptr<_204b21664_FnIns> _field_CmplxAdd;
	jule::Ptr<_204b21664_FnIns> _field_CmplxSub;
	jule::Ptr<_204b21664_FnIns> _field_CmplxMul;
	jule::Ptr<_204b21664_FnIns> _field_CmplxDiv;
	jule::Ptr<_204b21664_FnIns> _field_CmplxAddZ;
	jule::Ptr<_204b21664_FnIns> _field_CmplxSubZ;
	jule::Ptr<_204b21664_FnIns> _field_CmplxMulZ;
	jule::Ptr<_204b21664_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _2056b107c_MetaMathCmplx_eq(_2056b107c_MetaMathCmplx *_self_, _2056b107c_MetaMathCmplx _other_);


struct _2056b1687_Meta {
	jule::Ptr<_2056b05a9_MetaRuntime> _field_Runtime;
	jule::Ptr<_2056ae8d8_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_2056b107c_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_204b1d5a6_Fn> _field_EntryPoint;
};
inline jule::Bool _2056b1687_Meta_eq(_2056b1687_Meta *_self_, _2056b1687_Meta _other_);


struct _2056b2b61_OrderedDefines {
	jule::Slice<jule::Ptr<_204a4a46c_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_Globals;
};
struct _20682acc8_liveTable {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _field_vars;
	jule::Slice<jule::Ptr<_204b21664_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_204a4d2c7_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_204b28cba_Trait>> _field_traits;
};
struct _20682b0d6_ObjectDeadCode {
	_20682acc8_liveTable _field_live;
	jule::Ptr<_2056a39dc_IR> _field_ir;
};
struct _20683020b_scopeDeadCode {
	jule::Ptr<_20683020b_scopeDeadCode> _field_parent;
	jule::Ptr<_204bd11d5_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_204bd3c32_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_204bd4392_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _20683020b_scopeDeadCode_eq(_20683020b_scopeDeadCode *_self_, _20683020b_scopeDeadCode _other_);


struct _206834793_exprDeadCode {
	jule::Ptr<_20683020b_scopeDeadCode> _field_s;
};
inline jule::Bool _206834793_exprDeadCode_eq(_206834793_exprDeadCode *_self_, _206834793_exprDeadCode _other_);


struct _2064e2693_ExceptionalForwardingExprModel {
	jule::Ptr<_204b133ae_FnCallExprModel> _field_Expr;
};
inline jule::Bool _2064e2693_ExceptionalForwardingExprModel_eq(_2064e2693_ExceptionalForwardingExprModel *_self_, _2064e2693_ExceptionalForwardingExprModel _other_);


struct _2065039c3_FnCallIgnoreExceptionalExprModel {
	jule::Ptr<_204b133ae_FnCallExprModel> _field_Base;
};
inline jule::Bool _2065039c3_FnCallIgnoreExceptionalExprModel_eq(_2065039c3_FnCallIgnoreExceptionalExprModel *_self_, _2065039c3_FnCallIgnoreExceptionalExprModel _other_);


struct _206503bb0_StrConcatExprModel {
	jule::Slice<jule::Any> _field_Parts;
};
struct _206503e79_SwapExprModel {
	jule::Ptr<_204ca2b7a_Data> _field_Left;
	jule::Ptr<_204ca2b7a_Data> _field_Right;
};
inline jule::Bool _206503e79_SwapExprModel_eq(_206503e79_SwapExprModel *_self_, _206503e79_SwapExprModel _other_);


struct _206504353_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _206504353_EmptyCompareExprModel_eq(_206504353_EmptyCompareExprModel *_self_, _206504353_EmptyCompareExprModel _other_);


struct _206504650_RefExprModel {
	jule::Ptr<_204c5319c_Var> _field_Var;
};
inline jule::Bool _206504650_RefExprModel_eq(_206504650_RefExprModel *_self_, _206504650_RefExprModel _other_);


struct _206504b06_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_204a9d338_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _206504b06_StrCompExprModel_eq(_206504b06_StrCompExprModel *_self_, _206504b06_StrCompExprModel _other_);


struct _206505222_MutSlicingExprModel {
	jule::Ptr<_204a14216_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _206505222_MutSlicingExprModel_eq(_206505222_MutSlicingExprModel *_self_, _206505222_MutSlicingExprModel _other_);


struct _20650551e_UnsafeBinaryExprModel {
	jule::Ptr<_204b113ce_BinaryExprModel> _field_Node;
};
inline jule::Bool _20650551e_UnsafeBinaryExprModel_eq(_20650551e_UnsafeBinaryExprModel *_self_, _20650551e_UnsafeBinaryExprModel _other_);


struct _20650581b_UnsafeIndexingExprModel {
	jule::Ptr<_204b13c3e_IndexingExprModel> _field_Node;
};
inline jule::Bool _20650581b_UnsafeIndexingExprModel_eq(_20650581b_UnsafeIndexingExprModel *_self_, _20650581b_UnsafeIndexingExprModel _other_);


struct _206505be5_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_204b13788_SliceExprModel> _field_Elems;
};
inline jule::Bool _206505be5_PushToSliceExprModel_eq(_206505be5_PushToSliceExprModel *_self_, _206505be5_PushToSliceExprModel _other_);


struct _2065060be_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _2065060be_AppendToSliceExprModel_eq(_2065060be_AppendToSliceExprModel *_self_, _2065060be_AppendToSliceExprModel _other_);


struct _206506498_StrRuneIter {
	jule::Ptr<_204ca2b7a_Data> _field_Expr;
	jule::Ptr<_204bd301c_RangeIter> _field_Base;
};
inline jule::Bool _206506498_StrRuneIter_eq(_206506498_StrRuneIter *_self_, _206506498_StrRuneIter _other_);


struct _206506795_UnsafeDerefExprModel {
	jule::Ptr<_204b117a8_UnaryExprModel> _field_Base;
};
inline jule::Bool _206506795_UnsafeDerefExprModel_eq(_206506795_UnsafeDerefExprModel *_self_, _206506795_UnsafeDerefExprModel _other_);


struct _206506a92_UnsafeCastingExprModel {
	jule::Ptr<_204b12a0c_CastingExprModel> _field_Base;
};
inline jule::Bool _206506a92_UnsafeCastingExprModel_eq(_206506a92_UnsafeCastingExprModel *_self_, _206506a92_UnsafeCastingExprModel _other_);


struct _20650782e_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _20650782e_nilVar_eq(_20650782e_nilVar *_self_, _20650782e_nilVar _other_);


struct _206507b70_nils {
	jule::Slice<_20650782e_nilVar> _field_vars;
};
struct _206700bd1_scopeOptimizer {
	jule::Ptr<_206700bd1_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_204bd11d5_Scope> _field_scope;
	jule::Ptr<_206713771_data> _field_data;
};
inline jule::Bool _206700bd1_scopeOptimizer_eq(_206700bd1_scopeOptimizer *_self_, _206700bd1_scopeOptimizer _other_);


struct _2067084e1_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_206713771_data> _field_data;
	jule::Ptr<_2056a71a5_ExprInspector> _field_inspector;
	jule::Ptr<_206700bd1_scopeOptimizer> _field_scopeOpt;
};
inline jule::Bool _2067084e1_exprOptimizer_eq(_2067084e1_exprOptimizer *_self_, _2067084e1_exprOptimizer _other_);


struct _206710806_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_204cda982_Type> _field_kind;
};
inline jule::Bool _206710806_dynamicVar_eq(_206710806_dynamicVar *_self_, _206710806_dynamicVar _other_);


struct _206710b47_dynamic {
	jule::Slice<_206710806_dynamicVar> _field_vars;
};
struct _206713276_dataCheckpoint {
	jule::Ptr<_206715a2b_boundary> _field_boundary;
	jule::Ptr<_206507b70_nils> _field_nils;
	jule::Ptr<_206710b47_dynamic> _field_dynamic;
};
inline jule::Bool _206713276_dataCheckpoint_eq(_206713276_dataCheckpoint *_self_, _206713276_dataCheckpoint _other_);


struct _206713771_data {
	jule::Ptr<_206715a2b_boundary> _field_boundary;
	jule::Ptr<_206507b70_nils> _field_nils;
	jule::Ptr<_206710b47_dynamic> _field_dynamic;
};
inline jule::Bool _206713771_data_eq(_206713771_data *_self_, _206713771_data _other_);


struct _2067156da_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _206715a2b_boundary {
	jule::Slice<_2067156da_boundaryVar> _field_vars;
};
struct _2068358b5_Optimizer {
	jule::Ptr<_2056a39dc_IR> _field_ir;
};
inline jule::Bool _2068358b5_Optimizer_eq(_2068358b5_Optimizer *_self_, _2068358b5_Optimizer _other_);


struct _206908218_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _206908218_AbsTime_eq(_206908218_AbsTime *_self_, _206908218_AbsTime _other_);


struct _2069088de_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _2069088de_Time_eq(_2069088de_Time *_self_, _2069088de_Time _other_);


struct _206839897_scopeCoder {
	jule::Ptr<_206915cc5_ObjectCoder> _field_oc;
};
inline jule::Bool _206839897_scopeCoder_eq(_206839897_scopeCoder *_self_, _206839897_scopeCoder _other_);


struct _206845d8c_exprCoder {
	jule::Ptr<_206915cc5_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_204c5319c_Var>>> _field_varPrefixes;
};
struct _2068586c9_TestCoder {
	jule::Ptr<_204a4d2c7_StructIns> _field_t;
	jule::Ptr<_204b1d5a6_Fn> _field_tmReset;
	jule::Ptr<_204b1d5a6_Fn> _field_tmFailed;
	jule::Ptr<_204b1d5a6_Fn> _field_tmSkipped;
	jule::Ptr<_206915cc5_ObjectCoder> _field_oc;
};
inline jule::Bool _2068586c9_TestCoder_eq(_2068586c9_TestCoder *_self_, _2068586c9_TestCoder _other_);


struct _20685b325_identCoder {
};
inline jule::Bool _20685b325_identCoder_eq(_20685b325_identCoder *_self_, _20685b325_identCoder _other_);


struct _206913520_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _206913520_SerializationInfo_eq(_206913520_SerializationInfo *_self_, _206913520_SerializationInfo _other_);


struct _20691393d_traitCast {
	jule::Ptr<_204b28cba_Trait> _field_t1;
	jule::Ptr<_204b28cba_Trait> _field_t2;
};
inline jule::Bool _20691393d_traitCast_eq(_20691393d_traitCast *_self_, _20691393d_traitCast _other_);


struct _206913d17_anonHash {
	jule::Ptr<_204b141e5_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _206913d17_anonHash_eq(_206913d17_anonHash *_self_, _206913d17_anonHash _other_);


struct _206914235_traitHash {
	jule::Ptr<_204b28cba_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _field_methods;
};
struct _206914532_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _206914532_metadata_eq(_206914532_metadata *_self_, _206914532_metadata _other_);


struct _206915cc5_ObjectCoder {
	_1eeabb290_Builder _field_Buf;
	_1eeabb290_Builder _field_resultDecls;
	_1eeabb290_Builder _field_anyObj;
	_1eeabb290_Builder _field_anonObj;
	_1eeabb290_Builder _field_deallocObj;
	_1eeabb290_Builder _field_coSpawnObj;
	jule::Ptr<_2056a39dc_IR> _field_ir;
	_206913520_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_206913d17_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_216c60d8a__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_204cda982_Type>> _field_anyTypeMap;
	jule::Slice<_20691393d_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_204b21664_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_206914235_traitHash>> _field_traitMap;
	jule::Ptr<_216cac447__Map> _field_traitMetMap;
	jule::Ptr<_206845d8c_exprCoder> _field_ec;
	jule::Ptr<_206839897_scopeCoder> _field_sc;
	jule::Ptr<_206925c2a_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	_206914532_metadata _field_meta;
};
struct _206925103_customType {
	jule::Str _field_kind;
};
inline jule::Bool _206925103_customType_eq(_206925103_customType *_self_, _206925103_customType _other_);


struct _206925c2a_typeCoder {
	jule::Ptr<_206915cc5_ObjectCoder> _field_oc;
	jule::Ptr<_20692d815_resultCoder> _field_rc;
};
inline jule::Bool _206925c2a_typeCoder_eq(_206925c2a_typeCoder *_self_, _206925c2a_typeCoder _other_);


struct _20692d815_resultCoder {
	jule::Ptr<_206925c2a_typeCoder> _field_tc;
};
inline jule::Bool _20692d815_resultCoder_eq(_20692d815_resultCoder *_self_, _20692d815_resultCoder _other_);


struct _1d5272224_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1d5272224_Flag_eq(_1d5272224_Flag *_self_, _1d5272224_Flag _other_);

struct _1d5275aa7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1d5275aa7_Flag_eq(_1d5275aa7_Flag *_self_, _1d5275aa7_Flag _other_);

struct _1d52792b4_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1d52792b4_Flag_eq(_1d52792b4_Flag *_self_, _1d52792b4_Flag _other_);

struct _1d527ca15_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1d527ca15_Flag_eq(_1d527ca15_Flag *_self_, _1d527ca15_Flag _other_);

struct _1d5281222_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1d5281222_Flag_eq(_1d5281222_Flag *_self_, _1d5281222_Flag _other_);


struct _206993913_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _2069963c7_argParser {
	_206993913_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
};
struct _1eec71478_Dir {
	jule::Str _field_Name;
	_1eecba8ac_Stat _field_Stat;
};
inline jule::Bool _1eec71478_Dir_eq(_1eec71478_Dir *_self_, _1eec71478_Dir _other_);


struct _1eec72017_Cmd {
	_1eecb3443_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct _2056a39dc_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_204c148ab_Package> _field_Main;
	jule::Ptr<_204c12139_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _field_Used;
	_2056b2b61_OrderedDefines _field_Ordered;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_204b21664_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_204b21664_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_204ca2b7a_Data__jule_tuple_x_204ca2b7a_Data {
	jule::Ptr<_204ca2b7a_Data> __jule_result_arg0;
	jule::Ptr<_204ca2b7a_Data> __jule_result_arg1;
};
struct __jule_tuple_x_204ca2b7a_Data__jule_tuple_bool {
	jule::Ptr<_204ca2b7a_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_204a2de45_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_204a2de45_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_204a41bb1_Case__jule_tuple_bool {
	jule::Ptr<_204a41bb1_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_204a41bb1_Case__jule_tuple_x_204a40a17_Else {
	jule::Slice<jule::Ptr<_204a41bb1_Case>> __jule_result_arg0;
	jule::Ptr<_204a40a17_Else> __jule_result_arg1;
};
struct __jule_tuple__204a3926e_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_204a385ae_AssignSt__jule_tuple_bool {
	jule::Ptr<_204a385ae_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool {
	jule::Ptr<_204a29b11_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_204a2ca04_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log {
	jule::Slice<jule::Ptr<_204a27c52_AST>> __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1eeaca425_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_x_204b21664_FnIns__jule_tuple_bool {
	jule::Ptr<_204b21664_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2056a39dc_IR__jule_tuple_s_1eeaca425_Log {
	jule::Ptr<_2056a39dc_IR> __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__201415ed4_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__201415ed4_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__201415ed4_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_204b248a9_SymTab__jule_tuple_s_1eeaca425_Log {
	jule::Ptr<_204b248a9_SymTab> __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log {
	jule::Ptr<_204c148ab_Package> __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_x_204a27c52_AST__jule_tuple_s_1eeaca425_Log {
	jule::Ptr<_204a27c52_AST> __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_204a14216_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_204a14216_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token {
	jule::Slice<jule::Ptr<_204a14216_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_204a14216_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_204a14216_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_204a14216_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> __jule_result_arg0;
	jule::Slice<_1eeaca425_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1ee8ecc09_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1ee8ed633_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_216c60d8a__Map> static__216c61451_make(void);
inline void _216c615a5_initData(_216c60d8a__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _216c61709_hash(_216c60d8a__Map* _self_, jule::Str _14616_k);
inline void _216c6185d_rehash(_216c60d8a__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _216c619b2_nextSize(_216c60d8a__Map* _self_);
inline void _216c61b16_lookup(jule::Ptr<_216c60d8a__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _216c61c6a_get(jule::Ptr<_216c60d8a__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _216c61dbe_set(_216c60d8a__Map* _self_, jule::Str _24123_k);
inline jule::Bool _216c62023_del(jule::Ptr<_216c60d8a__Map> _self_, jule::Str _27624_k);
inline void _216c62177_clear(jule::Ptr<_216c60d8a__Map> _self_);
inline jule::I32 _216c622cb_len(jule::Ptr<_216c60d8a__Map> _self_);
inline jule::I32 _216c62430_cap(_216c60d8a__Map* _self_);
inline _216c6c5c2_mapIterator _216c62584_iterator(jule::Ptr<_216c60d8a__Map> _self_);
inline jule::Ptr<_216cac447__Map> static__216cac964_make(void);
inline void _216cacab8_initData(_216cac447__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _216cacc1c_hash(_216cac447__Map* _self_, jule::Ptr<_204b21664_FnIns> _14616_k);
inline void _216cacd71_rehash(_216cac447__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _216cacec5_nextSize(_216cac447__Map* _self_);
inline void _216cad129_lookup(jule::Ptr<_216cac447__Map> _self_, jule::Ptr<_204b21664_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _216cad27d_get(jule::Ptr<_216cac447__Map> _self_, jule::Ptr<_204b21664_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _216cad3d2_set(_216cac447__Map* _self_, jule::Ptr<_204b21664_FnIns> _24123_k);
inline jule::Bool _216cad536_del(jule::Ptr<_216cac447__Map> _self_, jule::Ptr<_204b21664_FnIns> _27624_k);
inline void _216cad68a_clear(jule::Ptr<_216cac447__Map> _self_);
inline jule::I32 _216cad7de_len(jule::Ptr<_216cac447__Map> _self_);
inline jule::I32 _216cad943_cap(_216cac447__Map* _self_);
inline _216cb6990_mapIterator _216cada97_iterator(jule::Ptr<_216cac447__Map> _self_);
inline void _216c6cb55_init(_216c6c5c2_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _216c6cca9_next(_216c6c5c2_mapIterator* _self_);
inline void _216cb7023_init(_216cb6990_mapIterator* _self_);
inline __jule_tuple_px_204b21664_FnIns__jule_tuple_psuintptr _216cb7177_next(_216cb6990_mapIterator* _self_);
inline _1eeabb290_Builder static__1eeabbadc_New(jule::I32 _2316_cap);
inline jule::Exceptional<jule::I32> _1eeabbe2d_Write(_1eeabb290_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I32> _1eeabc26e_WriteStr(_1eeabb290_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1eeabc527_WriteByte(_1eeabb290_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I32> _1eeabc868_WriteRune(_1eeabb290_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1eeabcaee_Str(_1eeabb290_Builder* _self_);
inline void _1eeabccec_Clear(_1eeabb290_Builder* _self_);
inline jule::I32 _1eeabd083_Len(_1eeabb290_Builder* _self_);
inline jule::Slice<jule::U8> _1eeabd5a0_Buf(_1eeabb290_Builder* _self_);
inline void _1eeabd858_SetBuf(_1eeabb290_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _200e3dac8_index(_200e3d644_lazyBuff* _self_, jule::I32 _5521_i);
inline void _200e3dd81_append(_200e3d644_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _200e3e117_string(_200e3d644_lazyBuff* _self_);
inline jule::Ptr<_1eecb8305_File> static__1eecb8cd9_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1eecb8305_File>> static__1eecb90a3_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1eecb936c_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__1eecb9713_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm);
inline jule::VoidExceptional _1eecba01b_Close(_1eecb8305_File* _self_);
inline jule::Exceptional<jule::Ptr<_1eecb8305_File>> static__1eecbc10b_Open(jule::Str _1717_path, jule::I32 _1728_flag, jule::I32 _1741_mode);
inline jule::VoidExceptional static__1eecbc33c_Remove(jule::Str _2719_path);
inline jule::Exceptional<jule::I32> _1eecbc7c1_Write(_1eecb8305_File* _self_, jule::Slice<jule::U8> _4021_buf);
inline jule::Exceptional<jule::I32> _1eecbcb12_Read(_1eecb8305_File* _self_, jule::Slice<jule::U8> _6824_buf);
inline jule::Bool _1eecbacb9_IsDir(_1eecba8ac_Stat* _self_);
inline jule::Bool _1eecbb050_IsReg(_1eecba8ac_Stat* _self_);
inline jule::U32 _1eecbb2d6_Size(_1eecba8ac_Stat* _self_);
inline jule::Exceptional<_1eecba8ac_Stat> static__200e470a9_Of(jule::Str _1015_path);
inline jule::Bool _201a084b6_set(_201a119ec_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _201a08807_floatBits(_201a119ec_decimal* _self_, _2019ed313_floatInfo* _33226_flt);
inline void _201a11dd7_assign(_201a119ec_decimal* _self_, jule::U64 _15126_v);
inline void _201a12190_shift(_201a119ec_decimal* _self_, jule::I32 _17625_k);
inline void _201a12448_roundDown(_201a119ec_decimal* _self_, jule::I32 _19625_nd);
inline void _201a12701_roundUp(_201a119ec_decimal* _self_, jule::I32 _20523_nd);
inline void _201a129a9_round(_201a119ec_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _201a12c40_roundedInteger(_201a119ec_decimal* _self_);
inline void static__200e533a1_Reset(void);
inline void static__200e74c30_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__201a178d2_LogFlat(_1eeaca425_Log* _1421_l);
inline void static__201a17ae1_LogError(_1eeaca425_Log* _1922_l);
inline void static__201a17d22_Log(_1eeaca425_Log* _6417_l);
inline void static__201a18053_PrintLogs(jule::Slice<_1eeaca425_Log>* _7423_logs);
inline jule::U8 _204a145bd_Prec(_204a14216_Token* _self_);
inline jule::Ptr<_204a19cbb_Fileset> static__204a1a151_New(jule::Str _2016_path);
inline void _204a1a6b2_FillMut(_204a19cbb_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _204a1a948_Dir(_204a19cbb_Fileset* _self_);
inline jule::Str _204a1abce_Name(_204a19cbb_Fileset* _self_);
inline jule::Str _204a1b2a6_GetRow(_204a19cbb_Fileset* _self_, jule::I32 _5718_row);
inline void _204a23643_pushErr(_204a2307c_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _204a23ba4_lex(_204a2307c_lex* _self_);
inline jule::Str _204a23ee5_id(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _204a2427b_resume(_204a2307c_lex* _self_);
inline void _204a24534_lexLineComment(_204a2307c_lex* _self_, jule::Ptr<_204a14216_Token>* _52235_token);
inline void _204a247dc_lexRangeComment(_204a2307c_lex* _self_, jule::Ptr<_204a14216_Token>* _53736_token);
inline jule::Str _204a24b2d_num(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _204a24e6e_escapeSeq(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _204a2536a_getRune(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _204a256ab_lexRune(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _204a25942_lexStr(_204a2307c_lex* _self_);
inline void _204a25dc6_newLine(_204a2307c_lex* _self_);
inline jule::Bool _204a26437_isOp(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_204a14216_Token>* _70858_t);
inline jule::Bool _204a26833_lexBasicOps(_204a2307c_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_204a14216_Token>* _71845_tok);
inline jule::Bool _204a26c2e_lexId(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_204a14216_Token>* _72740_t);
inline jule::Bool _204a2712a_lexNum(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_204a14216_Token>* _73741_t);
inline jule::Ptr<_204a14216_Token> _204a273b1_token(_204a2307c_lex* _self_);
inline jule::Bool _204a2b9d1_IsUnsafe(_204a2b63a_PtrTypeDecl* _self_);
inline jule::Bool _204a2c273_AutoSized(_204a2bdcc_ArrTypeDecl* _self_);
inline jule::Bool _204a33026_Unhandled(_204a32b6e_FnCallExpr* _self_);
inline jule::Bool _204a332ac_Ignored(_204a32b6e_FnCallExpr* _self_);
inline jule::Bool _204a3a803_IsSelf(_204a3a44b_ParamDecl* _self_);
inline jule::Bool _204a3bc44_IsAnon(_204a3b89d_FnDecl* _self_);
inline jule::Bool _204a3da48_IsInf(_204a3d6a2_Iter* _self_);
inline jule::Bool _204a3e373_IsWhileNext(_204a3decc_WhileKind* _self_);
inline jule::Ptr<_204a9d338_Const> static__204b0500a_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_204a9d338_Const> static__204b05280_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_204a9d338_Const> static__204b05549_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_204a9d338_Const> static__204b05813_NewStr(jule::Str _2319_x);
inline jule::Ptr<_204a9d338_Const> static__204b05acc_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_204a9d338_Const> static__204b05cdb_NewNil(void);
inline jule::I64 _204b0644b_ReadI64(_204a9d338_Const* _self_);
inline jule::U64 _204b066d2_ReadU64(_204a9d338_Const* _self_);
inline jule::Bool _204b06968_ReadBool(_204a9d338_Const* _self_);
inline jule::Str _204b06bee_ReadStr(_204a9d338_Const* _self_);
inline jule::F64 _204b06e85_ReadF64(_204a9d338_Const* _self_);
inline jule::I64 _204b0721b_AsI64(_204a9d338_Const* _self_);
inline jule::U64 _204b074a2_AsU64(_204a9d338_Const* _self_);
inline jule::F64 _204b07738_AsF64(_204a9d338_Const* _self_);
inline void _204b079e1_SetI64(_204a9d338_Const* _self_, jule::I64 _13622_x);
inline void _204b07c99_SetU64(_204a9d338_Const* _self_, jule::U64 _13922_x);
inline void _204b08052_SetBool(_204a9d338_Const* _self_, jule::Bool _14223_x);
inline void _204b0830a_SetStr(_204a9d338_Const* _self_, jule::Str _14522_x);
inline void _204b085b3_SetF64(_204a9d338_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _204b08a47_IsI64(_204a9d338_Const* _self_);
inline jule::Bool _204b08ccd_IsU64(_204a9d338_Const* _self_);
inline jule::Bool _204b09064_IsBool(_204a9d338_Const* _self_);
inline jule::Bool _204b092ea_IsStr(_204a9d338_Const* _self_);
inline jule::Bool _204b09581_IsF64(_204a9d338_Const* _self_);
inline jule::Bool _204b09817_IsNil(_204a9d338_Const* _self_);
inline jule::Bool _204b09e99_And(_204a9d338_Const* _self_, _204a9d338_Const _23615_x);
inline jule::Bool _204b0a2da_Or(_204a9d338_Const* _self_, _204a9d338_Const _24714_x);
inline jule::Bool _204b0b781_Add(_204a9d338_Const* _self_, _204a9d338_Const _37519_x);
inline jule::Bool _204b0bac2_Sub(_204a9d338_Const* _self_, _204a9d338_Const _40419_x);
inline jule::Bool _204b0be13_Mul(_204a9d338_Const* _self_, _204a9d338_Const _42819_x);
inline jule::Bool _204b0c254_Div(_204a9d338_Const* _self_, _204a9d338_Const _45619_x);
inline jule::Bool _204b0c595_Mod(_204a9d338_Const* _self_, _204a9d338_Const _48519_x);
inline jule::Bool _204b0c8d6_BitwiseAnd(_204a9d338_Const* _self_, _204a9d338_Const _50726_x);
inline jule::Bool _204b0cc27_BitwiseOr(_204a9d338_Const* _self_, _204a9d338_Const _52125_x);
inline jule::Bool _204b0d068_Xor(_204a9d338_Const* _self_, _204a9d338_Const _53519_x);
inline jule::Bool _204b0d3a9_Lshift(_204a9d338_Const* _self_, _204a9d338_Const _54922_x);
inline jule::Bool _204b0d6ea_Rshift(_204a9d338_Const* _self_, _204a9d338_Const _56922_x);
inline jule::Ptr<_204a4c727_FieldIns> _204a47931_instance(jule::Ptr<_204a47579_Field> _self_);
inline jule::Ptr<_204a4d2c7_StructIns> _204a4a912_instance(jule::Ptr<_204a4a46c_Struct> _self_);
inline jule::Ptr<_204a4d2c7_StructIns> _204a4ac20_appendInstance(_204a4a46c_Struct* _self_, jule::Ptr<_204a4d2c7_StructIns>* _13535_ins);
inline jule::Ptr<_204b1d5a6_Fn> _204a4b11b_FindMethod(_204a4a46c_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_204c5319c_Var> _204a4b45c_FindStatic(_204a4a46c_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_204a47579_Field> _204a4b79d_FindField(_204a4a46c_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _204a4bade_IsImplements(_204a4a46c_Struct* _self_, jule::Ptr<_204b28cba_Trait> _18524_t);
inline jule::Bool _204a4be30_IsUses(_204a4a46c_Struct* _self_, jule::Ptr<_204a4a46c_Struct> _19518_s);
inline jule::Str _204a4d67e_Str(_204a4d2c7_StructIns* _self_);
inline jule::Bool _204a4d9c0_Equal(jule::Ptr<_204a4d2c7_StructIns> _self_, jule::Ptr<_204cda982_Type> _25718_other);
inline jule::Bool _204a4de76_Same(_204a4d2c7_StructIns* _self_, jule::Ptr<_204a4d2c7_StructIns> _28516_s);
inline jule::Ptr<_204b1d5a6_Fn> _204a4e372_FindMethod(_204a4d2c7_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_204a4c727_FieldIns> _204a4e6b3_FindField(_204a4d2c7_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_204c5319c_Var> _204a4ea04_FindStatic(_204a4d2c7_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_204b2050e_ParamIns> _204b1be9a_instance(jule::Ptr<_204b1bad2_Param> _self_);
inline jule::Bool _204b1c231_IsSelf(_204b1bad2_Param* _self_);
inline jule::Bool _204b1c4b7_IsRef(_204b1bad2_Param* _self_);
inline jule::Bool _204b1da5c_IsVoid(_204b1d5a6_Fn* _self_);
inline jule::Bool _204b1dce3_IsMethod(_204b1d5a6_Fn* _self_);
inline jule::Bool _204b1e079_IsEntryPoint(_204b1d5a6_Fn* _self_);
inline jule::Bool _204b1e310_IsInit(_204b1d5a6_Fn* _self_);
inline jule::Bool _204b1e596_IsAnon(_204b1d5a6_Fn* _self_);
inline jule::Bool _204b1e82c_AnyVar(_204b1d5a6_Fn* _self_);
inline jule::Ptr<_204b21664_FnIns> _204b1eab3_instanceForce(jule::Ptr<_204b1d5a6_Fn> _self_);
inline jule::Ptr<_204b21664_FnIns> _204b1ed49_instance(jule::Ptr<_204b1d5a6_Fn> _self_);
inline jule::Ptr<_204b21664_FnIns> _204b20157_appendInstance(_204b1d5a6_Fn* _self_, jule::Ptr<_204b21664_FnIns>* _13835_ins);
inline jule::Str _204b208a5_Str(_204b2050e_ParamIns* _self_);
inline jule::Str _204b219d8_Str(_204b21664_FnIns* _self_);
inline jule::Bool _204b21d29_Equal(jule::Ptr<_204b21664_FnIns> _self_, jule::Ptr<_204cda982_Type> _22918_other);
inline jule::Bool _204b222be_EqualFn(jule::Ptr<_204b21664_FnIns> _self_, jule::Ptr<_204b21664_FnIns>* _24021_f);
inline jule::Bool _204b22610_equalTrait(jule::Ptr<_204b21664_FnIns> _self_, jule::Ptr<_204b21664_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_204cda982_Type>> _204b22896_Types(_204b21664_FnIns* _self_);
inline jule::Bool _204b22b2c_IsBuiltin(_204b21664_FnIns* _self_);
inline jule::Bool _204b22db3_IsAnon(_204b21664_FnIns* _self_);
inline jule::Bool _204b23204_Same(_204b21664_FnIns* _self_, jule::Ptr<_204b21664_FnIns> _34216_f);
inline jule::Str _204b23545_GetKindStr(_204b21664_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_204c12139_ImportInfo> _204b24dc6_SelectPackage(_204b248a9_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _2729_selector);
inline jule::Ptr<_204c5319c_Var> _204b252c2_FindVar(_204b248a9_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_204cd9b90_TypeAlias> _204b256bd_FindTypeAlias(_204b248a9_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_204a4a46c_Struct> _204b25ab9_FindStruct(_204b248a9_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_204b1d5a6_Fn> _204b25eb5_FindFn(_204b248a9_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_204b28cba_Trait> _204b26306_FindTrait(_204b248a9_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_204b2b471_Enum> _204b26647_FindEnum(_204b248a9_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204b26988_FindTypeEnum(_204b248a9_SymTab* _self_, jule::Str _9728_ident);
inline jule::I32 _204b26e50_findVar1(_204b248a9_SymTab* _self_, jule::Ptr<_204c5319c_Var>* _10825_v);
inline jule::Ptr<_204c5319c_Var> _204b27406_findVar(_204b248a9_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_204cd9b90_TypeAlias> _204b278ac_findTypeAlias(_204b248a9_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _204b27ca8_defByIdent(_204b248a9_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _204b2825e_isDuplicatedIdent(_204b248a9_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _204b291b6_Str(_204b28cba_Trait* _self_);
inline jule::Bool _204b29507_Equal(jule::Ptr<_204b28cba_Trait> _self_, jule::Ptr<_204cda982_Type> _2518_other);
inline jule::Ptr<_204b1d5a6_Fn> _204b2999c_FindMethod(_204b28cba_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_204b1d5a6_Fn> _204b2a12e_findMethodInherit(_204b28cba_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _204b2acde_AutoExpr(_204b2a915_EnumItem* _self_);
inline jule::Str _204b2b828_Str(_204b2b471_Enum* _self_);
inline jule::Bool _204b2bb69_Equal(jule::Ptr<_204b2b471_Enum> _self_, jule::Ptr<_204cda982_Type> _3818_other);
inline jule::Ptr<_204b2a915_EnumItem> _204b2c098_FindItem(_204b2b471_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _204b2d000_Str(_204b2cb7b_TypeEnum* _self_);
inline jule::Bool _204b2d341_Equal(jule::Ptr<_204b2cb7b_TypeEnum> _self_, jule::Ptr<_204cda982_Type> _8018_other);
inline jule::Ptr<_204b2c5a4_TypeEnumItem> _204b2d770_FindItem(_204b2cb7b_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _204ba3be1_Str(_204ba37e5_comptimeRange* _self_);
inline jule::Bool _204ba4032_Equal(jule::Ptr<_204ba37e5_comptimeRange> _self_, jule::Ptr<_204cda982_Type> _2718_other);
inline jule::Str _204ba4708_Str(_204ba4351_comptimeStructField* _self_);
inline jule::Bool _204ba4a49_Equal(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Ptr<_204cda982_Type> _3718_other);
inline jule::Ptr<_204ca2b7a_Data> _204ba5055__Decl(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Ptr<_204ca4b49_eval>* _4127_e, jule::Ptr<_204a32b6e_FnCallExpr>* _4142_fc);
inline jule::Ptr<_204ca2b7a_Data> _204ba5451__Type(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Ptr<_204ca4b49_eval>* _5327_e, jule::Ptr<_204a32b6e_FnCallExpr>* _5342_fc);
inline jule::Ptr<_204ca2b7a_Data> _204ba5792_subIdent(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _204ba5eac_Str(_204ba5ae4_comptimeStructFields* _self_);
inline jule::Bool _204ba62ed_Equal(jule::Ptr<_204ba5ae4_comptimeStructFields> _self_, jule::Ptr<_204cda982_Type> _9018_other);
inline void _204ba6782_ready(_204ba5ae4_comptimeStructFields* _self_, jule::Ptr<_204c5319c_Var>* _9426_keyA, jule::Ptr<_204c5319c_Var>* _9443_keyB);
inline void _204ba6ae5_index(_204ba5ae4_comptimeStructFields* _self_, jule::Ptr<_204ca2b7a_Data>* _11526_d, jule::I32 _11536_i);
inline void _204ba7013_step(_204ba5ae4_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_204c5319c_Var>* _12633_keyA, jule::Ptr<_204c5319c_Var>* _12650_keyB);
inline jule::I32 _204ba7299_len(_204ba5ae4_comptimeStructFields* _self_);
inline jule::Str _204ba792b_Str(_204ba7574_comptimeStatic* _self_);
inline jule::Bool _204ba7c6c_Equal(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Ptr<_204cda982_Type> _15018_other);
inline jule::Ptr<_204ca2b7a_Data> _204ba8278__Decl(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Ptr<_204ca4b49_eval>* _15427_e, jule::Ptr<_204a32b6e_FnCallExpr>* _15442_fc);
inline jule::Ptr<_204ca2b7a_Data> _204ba8674__Type(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Ptr<_204ca4b49_eval>* _16627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _16642_fc);
inline jule::Ptr<_204ca2b7a_Data> _204ba89b5_subIdent(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _204ba91d0_Str(_204ba8d28_comptimeStatics* _self_);
inline jule::Bool _204ba9521_Equal(jule::Ptr<_204ba8d28_comptimeStatics> _self_, jule::Ptr<_204cda982_Type> _20318_other);
inline void _204ba99a5_ready(_204ba8d28_comptimeStatics* _self_, jule::Ptr<_204c5319c_Var>* _20726_keyA, jule::Ptr<_204c5319c_Var>* _20743_keyB);
inline void _204ba9d18_index(_204ba8d28_comptimeStatics* _self_, jule::Ptr<_204ca2b7a_Data>* _22826_d, jule::I32 _22836_i);
inline void _204baa236_step(_204ba8d28_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_204c5319c_Var>* _23933_keyA, jule::Ptr<_204c5319c_Var>* _23950_keyB);
inline jule::I32 _204baa4bc_len(_204ba8d28_comptimeStatics* _self_);
inline jule::Str _204baab4e_Str(_204baa797_comptimeEnumField* _self_);
inline jule::Bool _204baae90_Equal(jule::Ptr<_204baa797_comptimeEnumField> _self_, jule::Ptr<_204cda982_Type> _26318_other);
inline jule::Ptr<_204ca2b7a_Data> _204bab48a__Decl(jule::Ptr<_204baa797_comptimeEnumField> _self_, jule::Ptr<_204ca4b49_eval>* _26727_e, jule::Ptr<_204a32b6e_FnCallExpr>* _26742_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bab7cb_subIdent(jule::Ptr<_204baa797_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _204bac06d_Str(_204babaa6_comptimeEnumFields* _self_);
inline jule::Bool _204bac3ae_Equal(jule::Ptr<_204babaa6_comptimeEnumFields> _self_, jule::Ptr<_204cda982_Type> _30118_other);
inline void _204bac7bb_ready(_204babaa6_comptimeEnumFields* _self_, jule::Ptr<_204c5319c_Var>* _30526_keyA, jule::Ptr<_204c5319c_Var>* _30543_keyB);
inline void _204bacb2e_index(_204babaa6_comptimeEnumFields* _self_, jule::Ptr<_204ca2b7a_Data>* _32626_d, jule::I32 _32636_i);
inline void _204bad04c_step(_204babaa6_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_204c5319c_Var>* _33733_keyA, jule::Ptr<_204c5319c_Var>* _33750_keyB);
inline jule::I32 _204bad2d3_len(_204babaa6_comptimeEnumFields* _self_);
inline jule::Str _204bad965_Str(_204bad5ad_comptimeParam* _self_);
inline jule::Bool _204badca6_Equal(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204cda982_Type> _36118_other);
inline jule::Ptr<_204ca2b7a_Data> _204bae2c3__Decl(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204ca4b49_eval>* _36527_e, jule::Ptr<_204a32b6e_FnCallExpr>* _36542_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bae6be__Type(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204ca4b49_eval>* _37727_e, jule::Ptr<_204a32b6e_FnCallExpr>* _37742_fc);
inline jule::Ptr<_204ca2b7a_Data> _204baeaba__Recv(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204ca4b49_eval>* _38527_e, jule::Ptr<_204a32b6e_FnCallExpr>* _38542_fc);
inline jule::Ptr<_204ca2b7a_Data> _204baee0b_subIdent(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _204bb06ae_Str(_204bb0417_comptimeParams* _self_);
inline jule::Bool _204bb0a00_Equal(jule::Ptr<_204bb0417_comptimeParams> _self_, jule::Ptr<_204cda982_Type> _43418_other);
inline void _204bb0e84_ready(_204bb0417_comptimeParams* _self_, jule::Ptr<_204c5319c_Var>* _43826_keyA, jule::Ptr<_204c5319c_Var>* _43843_keyB);
inline void _204bb12e7_index(_204bb0417_comptimeParams* _self_, jule::Ptr<_204ca2b7a_Data>* _45926_d, jule::I32 _45936_i);
inline void _204bb1715_step(_204bb0417_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_204c5319c_Var>* _47033_keyA, jule::Ptr<_204c5319c_Var>* _47050_keyB);
inline jule::I32 _204bb199b_len(_204bb0417_comptimeParams* _self_);
inline jule::Str _204bb212d_Str(_204bb1c76_comptimeTypeInfos* _self_);
inline jule::Bool _204bb246e_Equal(jule::Ptr<_204bb1c76_comptimeTypeInfos> _self_, jule::Ptr<_204cda982_Type> _49418_other);
inline void _204bb2903_ready(_204bb1c76_comptimeTypeInfos* _self_, jule::Ptr<_204c5319c_Var>* _49826_keyA, jule::Ptr<_204c5319c_Var>* _49843_keyB);
inline void _204bb2c66_index(_204bb1c76_comptimeTypeInfos* _self_, jule::Ptr<_204ca2b7a_Data>* _51926_d, jule::I32 _51936_i);
inline void _204bb3184_step(_204bb1c76_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_204c5319c_Var>* _52833_keyA, jule::Ptr<_204c5319c_Var>* _52850_keyB);
inline jule::I32 _204bb341a_len(_204bb1c76_comptimeTypeInfos* _self_);
inline jule::Str _204bb3a9c_Str(_204bb36e5_comptimeTypeInfo* _self_);
inline jule::Bool _204bb3ddd_Equal(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204cda982_Type> _55218_other);
inline jule::Ptr<_204ca2b7a_Data> _204bb452b__Decl(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _55627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _55642_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb4927__Str(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _59322_e, jule::Ptr<_204a32b6e_FnCallExpr>* _59337_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb4d23__Kind(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _60627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _60642_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb521e__Bits(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _68627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _68642_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb561a__Elem(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _71027_e, jule::Ptr<_204a32b6e_FnCallExpr>* _71042_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb5a16__Size(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _74327_e, jule::Ptr<_204a32b6e_FnCallExpr>* _74342_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb5e12__Key(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _76226_e, jule::Ptr<_204a32b6e_FnCallExpr>* _76241_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb630d__Value(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _77528_e, jule::Ptr<_204a32b6e_FnCallExpr>* _77543_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb6709__Fields(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _78829_e, jule::Ptr<_204a32b6e_FnCallExpr>* _78844_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb6b05__Statics(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _81730_e, jule::Ptr<_204a32b6e_FnCallExpr>* _81745_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb7001__Binded(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _83629_e, jule::Ptr<_204a32b6e_FnCallExpr>* _83644_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb73ec__Ordered(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _84926_e, jule::Ptr<_204a32b6e_FnCallExpr>* _84941_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb77e8__Comparable(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _86229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _86244_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb7be4__Mutable(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _87526_e, jule::Ptr<_204a32b6e_FnCallExpr>* _87541_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb80e0__Types(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _88828_e, jule::Ptr<_204a32b6e_FnCallExpr>* _88843_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb84db__CanNil(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _91129_e, jule::Ptr<_204a32b6e_FnCallExpr>* _91144_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb88d7__GC(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _92425_e, jule::Ptr<_204a32b6e_FnCallExpr>* _92440_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb8cd3__Result(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _93729_e, jule::Ptr<_204a32b6e_FnCallExpr>* _93744_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb91ce__Params(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _95329_e, jule::Ptr<_204a32b6e_FnCallExpr>* _95344_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bb9520_subIdent(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _204bb9ba2_Str(_204bb97ea_comptimeValue* _self_);
inline jule::Bool _204bb9ee3_Equal(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204cda982_Type> _111818_other);
inline jule::Ptr<_204ca2b7a_Data> _204bba554__Unwrap(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _112229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _112244_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bba950__Type(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _113027_e, jule::Ptr<_204a32b6e_FnCallExpr>* _113042_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bbad4b__Lvalue(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _113829_e, jule::Ptr<_204a32b6e_FnCallExpr>* _113844_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bbb247__Mutable(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _115130_e, jule::Ptr<_204a32b6e_FnCallExpr>* _115145_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bbb643__Const(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _116428_e, jule::Ptr<_204a32b6e_FnCallExpr>* _116443_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bbba3e__Field(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _117728_e, jule::Ptr<_204a32b6e_FnCallExpr>* _117743_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bbbe3a__Method(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _121229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _121244_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bbc27b_subIdent(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _204bbc90d_Str(_204bbc556_comptimeFiles* _self_);
inline jule::Bool _204bbcc4e_Equal(jule::Ptr<_204bbc556_comptimeFiles> _self_, jule::Ptr<_204cda982_Type> _132218_other);
inline void _204bbd1d3_ready(_204bbc556_comptimeFiles* _self_, jule::Ptr<_204c5319c_Var>* _132626_keyA, jule::Ptr<_204c5319c_Var>* _132643_keyB);
inline void _204bbd546_index(_204bbc556_comptimeFiles* _self_, jule::Ptr<_204ca2b7a_Data>* _134726_d, jule::I32 _134736_i);
inline void _204bbd964_step(_204bbc556_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_204c5319c_Var>* _135833_keyA, jule::Ptr<_204c5319c_Var>* _135850_keyB);
inline jule::I32 _204bbdbea_len(_204bbc556_comptimeFiles* _self_);
inline jule::Str _204bbe37c_Str(_204bbdec5_comptimeFile* _self_);
inline jule::Bool _204bbe6bd_Equal(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204cda982_Type> _138218_other);
inline jule::Ptr<_204ca2b7a_Data> _204bbebda__Path(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204ca4b49_eval>* _138627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _138642_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc00d6__Name(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204ca4b49_eval>* _139927_e, jule::Ptr<_204a32b6e_FnCallExpr>* _139942_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc04d2__Dir(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204ca4b49_eval>* _141226_e, jule::Ptr<_204a32b6e_FnCallExpr>* _141241_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc0823_subIdent(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _204bc11d6_Str(_204bc0aed_comptimeDecls* _self_);
inline jule::Bool _204bc1527_Equal(jule::Ptr<_204bc0aed_comptimeDecls> _self_, jule::Ptr<_204cda982_Type> _146118_other);
inline void _204bc189b_ready(_204bc0aed_comptimeDecls* _self_, jule::Ptr<_204c5319c_Var>* _146526_keyA, jule::Ptr<_204c5319c_Var>* _146543_keyB);
inline void _204bc1c0e_index(_204bc0aed_comptimeDecls* _self_, jule::Ptr<_204ca2b7a_Data>* _148626_d, jule::I32 _148636_i);
inline void _204bc212c_step(_204bc0aed_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_204c5319c_Var>* _149533_keyA, jule::Ptr<_204c5319c_Var>* _149550_keyB);
inline jule::I32 _204bc23b3_len(_204bc0aed_comptimeDecls* _self_);
inline jule::Str _204bc3293_Str(_204bc2ddb_comptimeDecl* _self_);
inline jule::Bool _204bc35d4_Equal(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204cda982_Type> _153418_other);
inline jule::Str _204bc3a35_declAsStr(_204bc2ddb_comptimeDecl* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204bc3e31__Name(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _156527_e, jule::Ptr<_204a32b6e_FnCallExpr>* _156542_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc432c__Public(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _160329_e, jule::Ptr<_204a32b6e_FnCallExpr>* _160344_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc4728__Binded(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _164129_e, jule::Ptr<_204a32b6e_FnCallExpr>* _164144_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc4b24__Exceptional(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _167534_e, jule::Ptr<_204a32b6e_FnCallExpr>* _167549_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc5020__Mutable(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _169630_e, jule::Ptr<_204a32b6e_FnCallExpr>* _169645_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc541b__Variadic(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _172931_e, jule::Ptr<_204a32b6e_FnCallExpr>* _172946_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc5817__Reference(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _176032_e, jule::Ptr<_204a32b6e_FnCallExpr>* _176047_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc5c13__Params(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _179229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _179244_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc610e__Fields(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _182729_e, jule::Ptr<_204a32b6e_FnCallExpr>* _182744_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc650a__Statics(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _186830_e, jule::Ptr<_204a32b6e_FnCallExpr>* _186845_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc6906__Methods(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _190430_e, jule::Ptr<_204a32b6e_FnCallExpr>* _190445_fc);
inline jule::Ptr<_204ca2b7a_Data> _204bc6c47_subIdent(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*> _204bc9c06_readyFn(jule::Ptr<_204bc97c7_constraintChecker> _self_);
inline jule::Bool _204bc9e8c_readyFi(jule::Ptr<_204bc97c7_constraintChecker> _self_);
inline jule::Bool _204bca223_readySi(jule::Ptr<_204bc97c7_constraintChecker> _self_);
inline jule::Bool _204bca4a9_ready(jule::Ptr<_204bc97c7_constraintChecker> _self_);
inline jule::Bool _204bca740_check(jule::Ptr<_204bc97c7_constraintChecker> _self_);
inline jule::Bool _204bcbec2_IsTraitImpl(_204bcbac6_Impl* _self_);
inline jule::Bool _204bcc258_IsStructImpl(_204bcbac6_Impl* _self_);
inline jule::Bool _204bd2967_IsWhileNext(_204bd25c1_WhileIter* _self_);
inline jule::Ptr<_204c12139_ImportInfo> _204bd8e02_SelectPackage(_204bd8929_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _35529_selector);
inline jule::Ptr<_204c5319c_Var> _204bd92ed_FindVar(_204bd8929_scopeChecker* _self_, jule::Str _36623_ident, jule::Bool _36635_binded);
inline jule::Ptr<_204cd9b90_TypeAlias> _204bd96e9_FindTypeAlias(_204bd8929_scopeChecker* _self_, jule::Str _38329_ident, jule::Bool _38341_binded);
inline jule::Ptr<_204a4a46c_Struct> _204bd9ae5_FindStruct(_204bd8929_scopeChecker* _self_, jule::Str _40826_ident, jule::Bool _40838_binded);
inline jule::Ptr<_204b1d5a6_Fn> _204bd9ee1_FindFn(_204bd8929_scopeChecker* _self_, jule::Str _41722_ident, jule::Bool _41734_binded);
inline jule::Ptr<_204b28cba_Trait> _204bda332_FindTrait(_204bd8929_scopeChecker* _self_, jule::Str _42625_ident);
inline jule::Ptr<_204b2b471_Enum> _204bda673_FindEnum(_204bd8929_scopeChecker* _self_, jule::Str _43524_ident);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204bda9b4_FindTypeEnum(_204bd8929_scopeChecker* _self_, jule::Str _44428_ident);
inline jule::Bool _204bdad16_isUnsafe(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline jule::Bool _204bdb09c_isRoot(_204bd8929_scopeChecker* _self_);
inline void _204bdb29a_stop(_204bd8929_scopeChecker* _self_);
inline jule::Bool _204bdb531_stopped(_204bd8929_scopeChecker* _self_);
inline jule::Bool _204bdb7b7_isDeferred(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline void _204bdba70_pushCaptured(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204c5319c_Var>* _50634_v);
inline jule::Ptr<_204bd8929_scopeChecker> _204bdbd06_getRoot(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline jule::Ptr<_204bd8929_scopeChecker> _204bdc08c_getHardRoot(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline jule::Ptr<_204c000b1_ReferenceStack> _204bdc323_getOwnerRefers(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline jule::Ptr<_204c5319c_Var> _204bdc664_findVar(_204bd8929_scopeChecker* _self_, jule::Str _55323_ident);
inline jule::Ptr<_204bd3c32_Label> _204bdc9a5_findLabel(_204bd8929_scopeChecker* _self_, jule::Str* _57426_ident);
inline jule::Ptr<_204bd7560_scopeLabel> _204bdcce6_findLabelScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Str* _59032_ident);
inline jule::Ptr<_204bd7560_scopeLabel> _204bdd137_findLabelAll(_204bd8929_scopeChecker* _self_, jule::Str* _60129_ident);
inline jule::Bool _204bdd533_isDuplicatedIdent(_204bd8929_scopeChecker* _self_, jule::Uintptr _61333_itself, jule::Str* _61351_ident);
inline void _204bdd7db_checkVarDecl(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ca58_VarDecl> _63333_decl);
inline void _204bdda94_checkTypeAlias(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _66436_ta);
inline void _204bddd4c_checkTypeAliasDecl(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a4170a_TypeAliasDecl> _68039_decl);
inline jule::Ptr<_204bd11d5_Scope> _204bde0d3_getChild(_204bd8929_scopeChecker* _self_);
inline void _204bde501_checkChildSsc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _69135_tree, jule::Ptr<_204bd11d5_Scope>* _69163_s, jule::Ptr<_204bd8929_scopeChecker>* _69179_ssc);
inline jule::Ptr<_204bd11d5_Scope> _204bde8ec_checkChildSc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _69834_tree, jule::Ptr<_204bd8929_scopeChecker>* _69862_ssc);
inline jule::Ptr<_204bd11d5_Scope> _204bdec3d_checkChild(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _70432_tree);
inline void _204bdeee6_checkAnonScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree> _70935_tree);
inline void _204be0359_processErrorCall(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204b19470_BuiltinErrorCallExprModel>* _71438_m, jule::Ptr<_204a14216_Token> _71469_err);
inline void _204be0612_checkExpr(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a2de45_Expr> _72730_expr);
inline jule::Ptr<_204bd1603_If> _204be0953_checkIf(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a4063d_If> _75728_i);
inline jule::Ptr<_204bd1900_Else> _204be0c94_checkElse(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40a17_Else> _77730_e);
inline void _204be104c_checkConditional(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40ebd_Conditional> _78337_conditional);
inline void _204be1525_checkIterScopeSsc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _79934_it, jule::Ptr<_204a39c0e_ScopeTree> _79951_tree, jule::Ptr<_204bd11d5_Scope>* _79979_s, jule::Ptr<_204bd8929_scopeChecker> _79994_ssc);
inline jule::Ptr<_204bd11d5_Scope> _204be19cb_checkIterScopeSc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _80433_it, jule::Ptr<_204a39c0e_ScopeTree> _80450_tree, jule::Ptr<_204bd8929_scopeChecker> _80477_ssc);
inline jule::Ptr<_204bd11d5_Scope> _204be1dc7_checkIterScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _81031_it, jule::Ptr<_204a39c0e_ScopeTree>* _81049_tree);
inline void _204be2180_checkInfIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _81534_it);
inline void _204be2438_checkWhileIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _82136_it);
inline void _204be2856_checkComptimeRangeIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _87144_it, jule::Ptr<_204bd301c_RangeIter>* _87165_kind, jule::Ptr<_204ca2b7a_Data>* _87188_d);
inline void _204be2b0e_checkRangeIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _92836_it);
inline void _204be2db7_checkIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter> _99530_it);
inline jule::Bool _204be3208_checkValidContLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _101936_it);
inline jule::Bool _204be3549_checkValidBreakLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _103537_ptr);
inline jule::Ptr<_204bd33a2_ContSt> _204be388a_checkContValidScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40187_ContSt> _105836_c);
inline void _204be3b43_checkCont(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40187_ContSt> _108226_c);
inline void _204be3deb_checkLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a371e5_LabelSt> _112931_l);
inline void _204be41a4_pushGoto(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a375be_GotoSt> _114829_gt);
inline void _204be445c_checkPostfix(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt> _115933_a);
inline jule::Bool _204be479d_isNewAssignIdent(_204bd8929_scopeChecker* _self_, jule::Str _119532_ident);
inline void _204be4a56_removeInteriorMutRisk(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204ca2b7a_Data>* _120843_d);
inline jule::Bool _204be500c_checkStructureAssignOp(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a4d2c7_StructIns>* _122244_s, jule::Ptr<_204a385ae_AssignSt>* _122264_a, jule::Ptr<_204ca2b7a_Data>* _122288_r);
inline void _204be52b5_checkSingleAssign(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt>* _126139_a);
inline void _204be5903_processEndPartOfMultiAssign(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _134649_st, jule::Ptr<_204a385ae_AssignSt>* _134672_a, jule::Ptr<_204a3802b_AssignLeft>* _13478_lexpr, jule::Ptr<_204ca2b7a_Data>* _134738_l, jule::Ptr<_204ca2b7a_Data>* _134753_r, jule::Bool _134763_strict);
inline void _204be5bab_checkMultiAssign(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt>* _142238_a);
inline void _204be5e64_checkAssignSt(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt> _149434_a);
inline jule::Ptr<_204bd11d5_Scope> _204be6360_checkCaseScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd651a_Case>* _150532_c, jule::Ptr<_204a39c0e_ScopeTree>* _150547_tree);
inline jule::Ptr<_204bd651a_Case> _204be68c1_checkCase(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd59e2_Match> _151130_m, jule::I32 _151141_i, jule::Ptr<_204a41bb1_Case> _151153_c, jule::Ptr<_204ca2b7a_Data> _151172_expr);
inline void _204be6cde_checkCases(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase>* _158832_m, jule::Ptr<_204bd59e2_Match> _158856_rm, jule::Ptr<_204ca2b7a_Data> _158872_expr);
inline jule::Ptr<_204bd651a_Case> _204be71da_checkDefault(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd59e2_Match> _160933_m, jule::Ptr<_204a40a17_Else> _160948_d);
inline void _204be754d_checkComptimePanic(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a14216_Token> _161739_callToken, jule::Ptr<_204bd11d5_Scope>* _161766_s);
inline void _204be78b1_processConstMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd59e2_Match>* _164939_tm, jule::Ptr<_204a424ca_MatchCase>* _164956_m);
inline void _204be7b69_checkTypeMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase>* _167836_m);
inline void _204be7e22_checkCommonMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase>* _172138_m);
inline void _204be81ca_checkMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase> _177231_m);
inline void _204be8483_checkFall(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a378bb_FallSt> _178026_f);
inline jule::Ptr<_204bd377b_BreakSt> _204be87c4_checkBreakWithLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ecad_BreakSt> _180336_b);
inline jule::Ptr<_204bd377b_BreakSt> _204be8b15_checkPlainBreak(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ecad_BreakSt> _186132_b);
inline void _204be8dbd_checkBreak(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ecad_BreakSt> _188327_b);
inline void _204be9176_checkRet(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ce32_RetSt> _189429_r);
inline void _204be942e_checkUseExpr(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a2e819_UseExpr> _192029_ue);
inline void _204be96d7_checkNode(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Any* _193631_node);
inline void _204be98d5_checkResult(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline void _204be9ad3_checkTree(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline void _204be9e46_checkGoto(_204bd8929_scopeChecker* _self_, jule::Ptr<_204bd4392_GotoSt>* _203930_gt, jule::Ptr<_204bd7560_scopeLabel>* _203948_label);
inline void _204bea144_checkGotos(_204bd8929_scopeChecker* _self_);
inline void _204bea342_checkLabels(_204bd8929_scopeChecker* _self_);
inline void _204bea540_checkVars(_204bd8929_scopeChecker* _self_);
inline void _204bea73d_checkAliases(_204bd8929_scopeChecker* _self_);
inline void _204beaaa1_check(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _213427_tree, jule::Ptr<_204bd11d5_Scope>* _213455_s);
inline jule::Ptr<_204bd8929_scopeChecker> _204bead37_newChildChecker(jule::Ptr<_204bd8929_scopeChecker> _self_);
inline void _204becc07_checkCdef(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _1626_d);
inline void _204beceb0_checkTypedef(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _3229_d);
inline void _204bed268_checkNamespace(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _4835_d);
inline void _204bed521_checkDeprecated(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _10036_d);
inline void _204bed7c9_checkTest(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _14126_d);
inline void _204beda82_checkExport(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _16232_d);
inline void _204bedd3a_checkDirective(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _20035_d);
inline void _204bee038_check(_204bec7a6_directiveChecker* _self_);
inline jule::Ptr<_204c000b1_ReferenceStack> static__204c00424_new(void);
inline jule::I32 _204c00820_Len(_204c000b1_ReferenceStack* _self_);
inline jule::Any _204c00b61_At(_204c000b1_ReferenceStack* _self_, jule::I32 _4318_i);
inline void _204c00e19_Push(_204c000b1_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _209081ecc_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204a4d2c7_StructIns> _5320_t);
inline jule::Bool _20908d0a4_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204b21664_FnIns> _5320_t);
inline jule::Bool _2090a46d6_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204c5319c_Var> _5320_t);
inline jule::Bool _209529d48_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204b28cba_Trait> _5320_t);
inline void _204c06abd_pushErr(_204c060b7_symBuilder* _self_, jule::Ptr<_204a14216_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args);
inline void _204c0734e_pushSuggestion(_204c060b7_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args);
inline jule::Bool _204c0774a_checkCppUseDeclPath(_204c060b7_symBuilder* _self_, jule::Ptr<_204a42a5d_UseDecl>* _32036_decl, jule::Str* _32058_path);
inline jule::Ptr<_204c12139_ImportInfo> _204c07a58_buildCppHeaderImport(_204c060b7_symBuilder* _self_, jule::Ptr<_204a42a5d_UseDecl>* _34041_decl);
inline jule::Str _204c07e54_checkAbsPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_204a42a5d_UseDecl>* _37053_decl);
inline jule::Str _204c08350_checkStdAbsPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_204a42a5d_UseDecl>* _39956_decl);
inline __jule_tuple_bool__jule_tuple_str _204c08691_checkImpPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204a42a5d_UseDecl>* _42234_decl);
inline void _204c08949_assignAlias(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c12139_ImportInfo>* _45233_imp);
inline jule::Ptr<_204c12139_ImportInfo> _204c08c8a_buildImport(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204a42a5d_UseDecl>* _45933_decl);
inline jule::Ptr<_204c12139_ImportInfo> _204c090cb_findUseDecl(_204c060b7_symBuilder* _self_, jule::Ptr<_204c12139_ImportInfo>* _48628_pkg);
inline jule::Bool _204c0941c_checkDuplicateUseDecl(_204c060b7_symBuilder* _self_, jule::Ptr<_204c12139_ImportInfo>* _49442_pkg);
inline jule::Str _204c0975d_getAsLinkPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Str _50434_path);
inline void _204c09b7b_pushCycleError(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c060b7_symBuilder>* _52532_sb, jule::Str _52549_path, _1eeabb290_Builder* _52565_message);
inline void _204c0a099_pushCrossCycleError(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c060b7_symBuilder>* _53837_target, jule::Ptr<_204c12139_ImportInfo>* _53859_imp, jule::Ptr<_204a14216_Token>* _53878_errorToken);
inline jule::Bool _204c0a495_checkImportCycles(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c12139_ImportInfo> _56134_imp, jule::Ptr<_204a42a5d_UseDecl>* _56153_decl);
inline void _204c0a8b3_checkPackageAccessibility(_204c060b7_symBuilder* _self_, jule::Ptr<_204a42a5d_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path);
inline jule::Bool _204c0acae_importPackage(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c12139_ImportInfo>* _62235_imp, jule::Ptr<_204a42a5d_UseDecl>* _62258_decl);
inline jule::Ptr<_204c12139_ImportInfo> _204c0b100_importUseDecl(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204a42a5d_UseDecl>* _66835_decl);
inline void _204c0b2ed_importUseDecls(jule::Ptr<_204c060b7_symBuilder> _self_);
inline void _204c0b5a6_appendNode(_204c060b7_symBuilder* _self_, _204a28b10_Node* _69731_node);
inline void _204c0b7a4_appendNodes(_204c060b7_symBuilder* _self_);
inline void _204c0ba5c_pushDirectivePass(_204c060b7_symBuilder* _self_, jule::Ptr<_204a2902d_Directive>* _73338_d);
inline void _204c0bc5a_appendTopDirectives(_204c060b7_symBuilder* _self_);
inline void _204c0be58_build(jule::Ptr<_204c060b7_symBuilder> _self_);
inline jule::Ptr<_204c12139_ImportInfo> _204c12656_SelectPackage(_204c12139_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> );
inline jule::Ptr<_204c5319c_Var> _204c12a52_FindVar(_204c12139_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_204cd9b90_TypeAlias> _204c12e4d_FindTypeAlias(_204c12139_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_204a4a46c_Struct> _204c13349_FindStruct(_204c12139_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_204b1d5a6_Fn> _204c13745_FindFn(_204c12139_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_204b28cba_Trait> _204c13a86_FindTrait(_204c12139_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_204b2b471_Enum> _204c13dc7_FindEnum(_204c12139_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204c14218_FindTypeEnum(_204c12139_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _204c145d1_isLookupable(_204c12139_ImportInfo* _self_);
inline jule::Ptr<_204c12139_ImportInfo> _204c14d84_SelectPackage(_204c148ab_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> );
inline jule::Ptr<_204c5319c_Var> _204c15280_FindVar(_204c148ab_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_204cd9b90_TypeAlias> _204c1567b_FindTypeAlias(_204c148ab_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_204a4a46c_Struct> _204c15a77_FindStruct(_204c148ab_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_204b1d5a6_Fn> _204c15e73_FindFn(_204c148ab_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_204b28cba_Trait> _204c162b4_FindTrait(_204c148ab_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_204b2b471_Enum> _204c16605_FindEnum(_204c148ab_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204c16946_FindTypeEnum(_204c148ab_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_204bb36e5_comptimeTypeInfo> _204c2dd04_pushComptimeTypeInfo(_204c2d85e_commonSemaMeta* _self_, jule::Ptr<_204cda982_Type>* _21341_t);
inline jule::Ptr<_204c12139_ImportInfo> _204c2e95e_SelectPackage(_204c2e486_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _24229_selector);
inline jule::Ptr<_204c5319c_Var> _204c2ed5a_FindVar(_204c2e486_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded);
inline jule::Ptr<_204cd9b90_TypeAlias> _204c30256_FindTypeAlias(_204c2e486_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded);
inline jule::Ptr<_204a4a46c_Struct> _204c30652_FindStruct(_204c2e486_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded);
inline jule::Ptr<_204b1d5a6_Fn> _204c30a4d_FindFn(_204c2e486_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded);
inline jule::Ptr<_204b28cba_Trait> _204c30d8e_FindTrait(_204c2e486_sema* _self_, jule::Str _31225_ident);
inline jule::Ptr<_204b2b471_Enum> _204c311d0_FindEnum(_204c2e486_sema* _self_, jule::Str _32724_ident);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204c31521_FindTypeEnum(_204c2e486_sema* _self_, jule::Str _34228_ident);
inline jule::Bool _204c3192d_isFlag(_204c2e486_sema* _self_, jule::I32 _35418_flags);
inline jule::Ptr<_204b248a9_SymTab> _204c31bb4_getCurrentFile(_204c2e486_sema* _self_);
inline void _204c31e6c_setCurrentFile(_204c2e486_sema* _self_, jule::Ptr<_204b248a9_SymTab> _35734_f);
inline void _204c3238a_pushErr(_204c2e486_sema* _self_, jule::Ptr<_204a14216_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args);
inline void _204c326ed_pushSuggestion(_204c2e486_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args);
inline jule::Bool _204c32ae9_isAccessibleDefine(_204c2e486_sema* _self_, jule::Bool _37030_public, jule::Ptr<_204a14216_Token> _37044_token);
inline jule::Bool _204c330a0_isDuplicatedIdent(_204c2e486_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded);
inline void _204c33413_checkDirectives(jule::Ptr<_204c2e486_sema> _self_, jule::Slice<jule::Ptr<_204a2902d_Directive>>* _40237_d, jule::Any _40263_o);
inline jule::Bool _204c338b9_checkGenericQuantity(_204c2e486_sema* _self_, jule::I32 _41136_required, jule::I32 _41151_given, jule::Ptr<_204a14216_Token> _41163_token);
inline jule::Bool _204c348ed_isUseAliasDuplication(_204c2e486_sema* _self_, jule::Ptr<_204c12139_ImportInfo>* _46938_imp);
inline jule::Bool _204c34c3e_checkAutoAlias(_204c2e486_sema* _self_, jule::Ptr<_204c12139_ImportInfo>* _48135_imp);
inline jule::Bool _204c35080_checkImport(_204c2e486_sema* _self_, jule::Ptr<_204c12139_ImportInfo>* _49932_imp);
inline void _204c3527d_checkImports(_204c2e486_sema* _self_);
inline void _204c3547b_implFileImpls(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c35679_implImpls(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c35877_checkEnums(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c35a75_checkFileInherits(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c35c73_checkInherits(jule::Ptr<_204c2e486_sema> _self_);
inline _204cecd7e_typeChecker _204c36229_typeChecker(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _59247_generics, jule::Ptr<_204cebd8e_referencer> _5937_referencer);
inline jule::Ptr<_204cda982_Type> _204c3678a_buildTypeWithRefers(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _6207_generics, jule::Ptr<_204cebd8e_referencer> _62035_referencer);
inline jule::Bool _204c36ceb_checkTypeSymWithRefers(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3193_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _6277_generics, jule::Ptr<_204cebd8e_referencer> _62735_referencer);
inline jule::Ptr<_204bc97c7_constraintChecker> _204c37082_constraintChecker(jule::Ptr<_204c2e486_sema> _self_);
inline jule::Bool _204c3747d_checkTypeSym(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3193_TypeSym>* _64134_t, jule::Trait _64151_l);
inline jule::Ptr<_204cda982_Type> _204c37934_checkTypeSymRefers(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_204c000b1_ReferenceStack> _64678_refers);
inline jule::Ptr<_204cda982_Type> _204c37dda_buildTypeWithGenerics(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _6597_generics, jule::Ptr<_204c000b1_ReferenceStack> _65935_refers);
inline jule::Ptr<_204cda982_Type> _204c3856c_selectType(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _67632_t);
inline jule::Ptr<_204ca4b49_eval> _204c38a23_evalpd(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _68827_l, jule::Ptr<_204cda982_Type> _68842_p, jule::Ptr<_204c5319c_Var> _68856_owner);
inline jule::Ptr<_204ca4b49_eval> _204c38e1e_evalp(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _70326_l, jule::Ptr<_204cda982_Type> _70341_p);
inline jule::Ptr<_204ca4b49_eval> _204c39260_eval(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _70825_l);
inline jule::Bool _204c3987b_checkAssignType(jule::Ptr<_204c2e486_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_204cda982_Type>* _71254_dest, jule::Ptr<_204ca2b7a_Data>* _7138_d, jule::Ptr<_204a14216_Token> _71322_errorToken, jule::Ptr<_204c000b1_ReferenceStack> _71353_refers);
inline jule::Bool _204c39d32__checkTypeCompatibility(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cda982_Type>* _75545_dest, jule::Ptr<_204cda982_Type>* _75563_src, jule::Ptr<_204a14216_Token> _7567_errorToken);
inline jule::Bool _204c3a2d8_checkTypeCompatibility(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cda982_Type>* _77344_dest, jule::Ptr<_204cda982_Type>* _7748_src, jule::Ptr<_204a14216_Token>* _77425_errorToken);
inline void _204c3a706_pushCompatiblityError(_204c2e486_sema* _self_, jule::Ptr<_204cda982_Type>* _78242_dest, jule::Ptr<_204ca2b7a_Data>* _78260_src, jule::Ptr<_204a14216_Token>* _7838_errorToken);
inline jule::Bool _204c3abac_checkTypeCompatibility1(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cda982_Type>* _80045_dest, jule::Ptr<_204ca2b7a_Data>* _80063_src, jule::Ptr<_204a14216_Token>* _8018_errorToken);
inline jule::Ptr<_204cda982_Type> _204c3b163_buildNonGenericType(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_204cda982_Type>>* _81644_ignored);
inline jule::Bool _204c3b55e_buildFnNonGenericTypes(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns> _82743_f, jule::Slice<jule::Ptr<_204cda982_Type>>* _82759_ignored);
inline jule::Ptr<_204b21664_FnIns> _204c3b8a0_getTraitCheckFnKind(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _85041_f);
inline jule::Bool _204c3bd56_checkConstraintsFn(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _87940_f, jule::Ptr<_204a14216_Token>* _87956_et, jule::Ptr<_204b21664_FnIns> _87979_exist);
inline jule::Bool _204c3c30c_checkConstraintsStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _89344_s, jule::Ptr<_204a14216_Token>* _89364_et, jule::Ptr<_204a4d2c7_StructIns> _89387_exist);
inline jule::Bool _204c3c708_basicFnEnvironment(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*> _91051_algo);
inline jule::Bool _204c3cb04_fnEnvironment(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*> _93046_algo);
inline void _204c3cdac_checkFnParamKind(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2050e_ParamIns>* _94238_p);
inline jule::Bool _204c3d1ed_reloadFnInsTypes(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns> _94637_f);
inline jule::Bool _204c3d6a4_checkRefValidityForInitExpr(jule::Ptr<_204c2e486_sema> _self_, jule::Bool _98644_leftMut, jule::Ptr<_204ca2b7a_Data>* _98664_d, jule::Ptr<_204a14216_Token>* _98679_errorToken);
inline jule::Bool _204c3d9e5_isMutRiskyStruct(_204c2e486_sema* _self_, jule::Ptr<_204a4d2c7_StructIns>* _100329_s);
inline jule::Bool _204c3e111_checkValidityForInitExpr(jule::Ptr<_204c2e486_sema> _self_, jule::Bool _103041_leftMut, jule::Bool _103056_leftRef, jule::Ptr<_204cda982_Type>* _10314_leftKind, jule::Ptr<_204ca2b7a_Data>* _103126_d, jule::Ptr<_204a14216_Token>* _103141_errorToken);
inline jule::Bool _204c3e50c_checkTypeAliasDeclKind(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _105844_ta, jule::Trait _105864_l);
inline void _204c3e870_checkTypeAliasDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _108140_ta, jule::Trait _108160_l);
inline void _204c3eb28_checkTypeAliasDeclDup(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _108943_ta);
inline jule::Bool _204c3edae_checkTypeAliasDecls(jule::Ptr<_204c2e486_sema> _self_);
inline void _208be34ac_checkEnumItemsDup(_204c2e486_sema* _self_, jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _111336_items);
inline void _208c014ed_checkEnumItemsDup(_204c2e486_sema* _self_, jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> _111336_items);
inline void _204c40420_checkEnumItemsStr(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2b471_Enum>* _113339_e);
inline void _208bc248b_checkEnumItemInt(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ca4b49_eval>* _116043_eval, jule::Ptr<_204b2b471_Enum>* _116061_e, jule::Ptr<_204ce3a9a_Prim>* _116072_prim, jule::Ptr<_204b2a915_EnumItem>* _116090_item, jule::U64* _1160112_n);
inline void _208bd2ee6_checkEnumItemInt(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ca4b49_eval>* _116043_eval, jule::Ptr<_204b2b471_Enum>* _116061_e, jule::Ptr<_204ce3a9a_Prim>* _116072_prim, jule::Ptr<_204b2a915_EnumItem>* _116090_item, jule::I64* _1160112_n);
inline void _208bbd61e_checkEnumItemsInt1(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3a9a_Prim>* _119641_prim, jule::Ptr<_204b2b471_Enum>* _119659_e);
inline void _208bbd8e9_checkEnumItemsInt1(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3a9a_Prim>* _119641_prim, jule::Ptr<_204b2b471_Enum>* _119659_e);
inline void _204c410be_checkEnumItemsInt(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2b471_Enum>* _123139_e);
inline void _204c41377_checkEnumDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2b471_Enum>* _124135_e);
inline void _204c41630_checkTypeEnumDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2cb7b_TypeEnum>* _128239_e);
inline jule::Bool _204c418b6_checkEnumDecls(jule::Ptr<_204c2e486_sema> _self_);
inline jule::Bool _204c41b4c_checkTypeEnumDecls(jule::Ptr<_204c2e486_sema> _self_);
inline jule::Bool _204c41e8d_checkDeclGenerics(_204c2e486_sema* _self_, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _134534_generics);
inline jule::Bool _204c422ce_checkFnDeclParamsDup(_204c2e486_sema* _self_, jule::Ptr<_204b1d5a6_Fn>* _137237_f);
inline jule::Bool _204c42620_checkFnDeclResultDup(_204c2e486_sema* _self_, jule::Ptr<_204b1d5a6_Fn>* _140937_f);
inline jule::Bool _204c42961_checkFnVariadicParam(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _145442_f);
inline void _204c42c19_checkFnDeclPrototype(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _146742_f);
inline jule::Bool _204c431c0_catchTraitInheritCycle(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait> _148939_t1, jule::Ptr<_204b28cba_Trait> _148955_t2, _1eeabb290_Builder* _148972_message);
inline jule::Bool _204c43511__checkTraitDeclInherits(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _150845_t);
inline void _204c437b9_checkTraitDeclInherits(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _154944_t);
inline void _204c43a72_checkTraitDeclMethod(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _157442_f);
inline void _204c43d2a_checkTraitDeclMethods(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _158843_t);
inline void _204c440d3_checkTraitDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _162436_t);
inline jule::Bool _204c44369_checkTraitDecls(jule::Ptr<_204c2e486_sema> _self_);
inline jule::Bool _204c44765_checkTraitImplMethods(_204c2e486_sema* _self_, jule::Ptr<_204b28cba_Trait>* _164842_base, jule::Ptr<_204bcbac6_Impl>* _164857_ipl);
inline jule::Bool _204c44b61_implToStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _165934_dest, jule::Ptr<_204bcbac6_Impl>* _165954_ipl);
inline void _204c44e19_implTrait(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204bcbac6_Impl>* _170131_decl);
inline void _204c451c2_implStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204bcbac6_Impl>* _174432_decl);
inline void _204c4547a_implImpl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204bcbac6_Impl>* _176830_decl);
inline void _204c457dd_checkVarDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _177934_decl, jule::Trait _177950_l);
inline void _204c45a96_checkGlobalVarDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _182540_decl);
inline jule::Bool _204c45d2c_checkGlobalDecls(jule::Ptr<_204c2e486_sema> _self_);
inline jule::Bool _204c46228_checkStructTraitImpl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _185342_strct, jule::Ptr<_204b28cba_Trait>* _185363_trt);
inline jule::Bool _204c46569_checkStructImpls(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _187938_s);
inline jule::Bool _204c468aa_checkStructFields(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _188739_st);
inline void _204c46b63_checkStructDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _190437_s);
inline jule::Bool _204c46de9_checkStructDecls(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c471a2_checkAnonFuncDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _193439_f);
inline void _204c4745a_checkFuncDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _193935_f);
inline jule::Bool _204c4779b_checkFuncDeclsBy(jule::Ptr<_204c2e486_sema> _self_, jule::Slice<jule::Ptr<_204b1d5a6_Fn>>* _196138_funcs);
inline jule::Bool _204c47a32_checkFuncDecls(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c47e50_pushCycleError(_204c2e486_sema* _self_, jule::Str* _197727_st1, jule::Str* _197738_st2, _1eeabb290_Builder* _197753_message);
inline void _204c48604_checkPackageDecls(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c48967_checkDataForTypeInference(_204c2e486_sema* _self_, jule::Ptr<_204ca2b7a_Data>* _203742_d, jule::Ptr<_204a14216_Token>* _203753_errToken);
inline void _204c48c20_checkVarValue(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _204935_v);
inline void _204c49083_evalVarValue(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _209834_decl, jule::Trait _209850_l);
inline void _204c493e6_checkVar(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _211530_decl, jule::Trait _211546_l);
inline void _204c495e4_checkGlobals(jule::Ptr<_204c2e486_sema> _self_);
inline jule::Ptr<_204b21664_FnIns> _204c499e0_readyToCheckFn(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _213836_s, jule::Ptr<_204b1d5a6_Fn>* _213856_f);
inline __jule_tuple_bool__jule_tuple_bool _204c49ddb_checkGenericFn(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _215436_f, jule::Ptr<_204a14216_Token>* _215452_et);
inline void _204c4a24e_checkTypeMethod(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _217737_s, jule::Ptr<_204b1d5a6_Fn>* _217757_f);
inline jule::Ptr<_204b21664_FnIns> _204c4a705_checkStructInsOp(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _219038_s, jule::Ptr<_204b1d5a6_Fn>* _219058_f, jule::Fn<jule::Bool,jule::Ptr<_204b1d5a6_Fn>> _219066_p);
inline jule::Bool _204c4ab01_checkStructEnv(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _220036_s, jule::Ptr<_204a14216_Token> _220055_errorToken);
inline jule::Bool _204c4aeec_precheckStructIns(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _229839_s, jule::Ptr<_204a14216_Token> _229858_errorToken);
inline void _204c4b2a5_checkStructIns(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _233536_s);
inline void _204c4b55d_checkTypeStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _234137_s);
inline void _204c4b75b_checkStructTypes(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4ba14_checkStructInsOperators(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns> _236544_s);
inline void _204c4bcbc_precheckStructType(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _242940_s);
inline void _204c4beba_precheckStructTypes(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4c273_checkRets(_204c2e486_sema* _self_, jule::Ptr<_204b21664_FnIns>* _245830_f);
inline void _204c4c5d6_checkFnInsSc(_204c2e486_sema* _self_, jule::Ptr<_204b21664_FnIns>* _246933_f, jule::Ptr<_204bd8929_scopeChecker>* _246949_sc);
inline void _204c4c949_checkFnInsCaller(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _248238_f, jule::Ptr<_204a14216_Token> _248253_caller);
inline void _204c4cc02_checkFnIns(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _250432_f);
inline void _204c4ceaa_checkFunc(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _250831_f);
inline void _204c4d263_checkTestFn(_204c2e486_sema* _self_, jule::Ptr<_204b21664_FnIns>* _252332_f);
inline void _204c4d51b_precheckFunc(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _255634_f);
inline void _204c4d719_precheckFuncs(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4d917_checkFuncs(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4db15_checkPackageTypes(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4dd13_setFileSemaFields(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4e011_setSemaFields(jule::Ptr<_204c2e486_sema> _self_);
inline void _204c4e2b9_check(jule::Ptr<_204c2e486_sema> _self_, jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _263427_files);
inline _204c4e6b5_missingRetChecker static__204c4eab1_new(void);
inline jule::Bool _204c4edbe_checkConditional(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd1d1d_Conditional> _268232_c);
inline jule::Bool _204c50210_checkMatch(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd59e2_Match> _269426_m);
inline jule::Bool _204c5060b_checkInfIter(_204c4e6b5_missingRetChecker* _self_, jule::Uintptr _272024_it, jule::Ptr<_204bd11d5_Scope>* _272042_s);
inline jule::Bool _204c5094c_checkScope(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd11d5_Scope> _273826_s);
inline jule::Bool _204c50c8d_check(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd11d5_Scope> _279321_s);
inline jule::Bool _204c535a9_IsInitialized(_204c5319c_Var* _self_);
inline jule::Bool _204c53840_IsTypeInferred(_204c5319c_Var* _self_);
inline jule::Bool _204c53ac6_untypedConstant(_204c5319c_Var* _self_);
inline jule::Bool static__204c54665_Str(jule::Ptr<_204b1d5a6_Fn> _1016_f);
inline jule::Bool static__204c549d9_logical(jule::Ptr<_204b1d5a6_Fn>* _3221_f, jule::Str _3229_ident);
inline jule::Bool static__204c54ca3_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _5815_f);
inline jule::Bool static__204c5506c_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _6315_f);
inline jule::Bool static__204c55336_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _6817_f);
inline jule::Bool static__204c55600_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _7315_f);
inline jule::Bool static__204c558b9_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _7817_f);
inline jule::Bool static__204c55c3d_result(jule::Ptr<_204b1d5a6_Fn>* _8220_f, jule::Str _8228_ident);
inline jule::Bool static__204c56007_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _10416_f);
inline jule::Bool static__204c562c1_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _10916_f);
inline jule::Bool static__204c5658a_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _11416_f);
inline jule::Bool static__204c56854_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _11916_f);
inline jule::Bool static__204c56b1d_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _12416_f);
inline jule::Bool static__204c56dd7_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _12916_f);
inline jule::Bool static__204c571a1_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _13416_f);
inline jule::Bool static__204c5746a_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _13919_f);
inline jule::Bool static__204c57734_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _14418_f);
inline jule::Bool static__204c579ed_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _14919_f);
inline jule::Bool static__204c57d72_unary(jule::Ptr<_204b1d5a6_Fn>* _15319_f, jule::Str _15327_ident);
inline jule::Bool static__204c5813b_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _17316_f);
inline jule::Bool static__204c58405_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _17816_f);
inline jule::Bool static__204c586be_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _18319_f);
inline jule::Bool static__204c58a43_assign(jule::Ptr<_204b1d5a6_Fn>* _18720_f, jule::Str _18728_ident);
inline jule::Bool static__204c58d0c_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _20722_f);
inline jule::Bool static__204c590c6_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _21222_f);
inline jule::Bool static__204c59390_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _21722_f);
inline jule::Bool static__204c59659_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _22222_f);
inline jule::Bool static__204c59923_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _22722_f);
inline jule::Bool static__204c59bdc_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _23222_f);
inline jule::Bool static__204c59ea6_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _23722_f);
inline jule::Bool static__204c5a270_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _24224_f);
inline jule::Bool static__204c5a539_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _24725_f);
inline jule::Bool static__204c5a803_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _25225_f);
inline void _204c8e4e6_pushErr(_204c8deb8_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _204c8e77c_checkTrait(_204c8deb8_typeCompatibilityChecker* _self_);
inline jule::Bool _204c8ea13_checkPtr(_204c8deb8_typeCompatibilityChecker* _self_);
inline jule::Bool _204c8ec99_checkPrim(_204c8deb8_typeCompatibilityChecker* _self_);
inline jule::Bool _204c90195_typeEnum(_204c8deb8_typeCompatibilityChecker* _self_, jule::Ptr<_204b2cb7b_TypeEnum>* _18725_e, jule::Ptr<_204cda982_Type>* _18744_t2);
inline jule::Bool _204c9042b_checkTypeEnum(_204c8deb8_typeCompatibilityChecker* _self_);
inline jule::Bool _204c906b2_check(_204c8deb8_typeCompatibilityChecker* _self_);
inline void _204c9130b_pushErr(_204c90d44_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _204c91592_checkValidity(_204c90d44_assignTypeChecker* _self_);
inline jule::Bool _204c91828_checkConst(_204c90d44_assignTypeChecker* _self_);
inline jule::Bool _204c91aae_checkCompatibility(_204c90d44_assignTypeChecker* _self_);
inline jule::Bool _204c91d45_check(_204c90d44_assignTypeChecker* _self_);
inline jule::Bool _208ddb694_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k);
inline jule::Bool _208ddb93b_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k);
inline jule::Bool _208de3833_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k);
inline jule::Bool _208deddd2_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k);
inline jule::Bool _204c93143_annotateConstraintMap(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _36642_k);
inline jule::Bool _204c93484_annotateConstraintTup(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _38142_k);
inline jule::Bool _204c937c5_annotateConstraintFn(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _39841_k);
inline jule::Bool _204c93b16_annotateConstraintIdent(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _41944_k);
inline jule::Bool _204c93e57_annotateConstraint(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _44839_k);
inline void _204c942ba_pushGeneric(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _47332_k, jule::I32 _47342_i);
inline jule::Bool _204c9460b_annotatePrim(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _48840_k);
inline jule::Bool _204c9494c_annotateArr(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _49239_k);
inline jule::Bool _204c94c8d_annotateSlc(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _50239_k);
inline jule::Bool _204c95189_checkMapKey(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _51238_k, jule::Ptr<_204cda982_Type>* _51254_ck);
inline jule::Bool _204c954ca_annotateMap(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _52039_k);
inline jule::Bool _204c9581b_annotateFn(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _53038_k);
inline jule::Bool _204c95b5c_annotatePtr(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _55939_k);
inline jule::Bool _204c95e9d_annotateSptr(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _56940_k);
inline jule::Bool _204c962de_annotateStruct(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _57942_k);
inline jule::Bool _204c96630_annotateAny(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _60139_k);
inline jule::Bool _204c96971_annotateKind(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _62240_k);
inline jule::Bool _204c96c07_annotate(_204c92719_dynamicTypeAnnotation* _self_);
inline void _204c97b1a_pushErrToken(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204a14216_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _204c97e7d_pushErr(_204c97576_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _204c98214_getParams(_204c97576_fnCallArgChecker* _self_);
inline jule::Bool _204c98555_checkCounts(_204c97576_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_204b2050e_ParamIns>>* _68428_params);
inline jule::Bool _204c98a0b_checkArg(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204b2050e_ParamIns>* _71629_p, jule::Ptr<_204ca2b7a_Data>* _71648_arg, jule::Ptr<_204a14216_Token>* _71665_errorToken);
inline jule::Bool _204c98e07_push(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204b2050e_ParamIns>* _74525_p, jule::Ptr<_204a2de45_Expr> _74543_arg);
inline jule::Bool _204c99303_pushVariadic(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204b2050e_ParamIns>* _76933_p, jule::I32 _76951_i);
inline jule::Bool _204c99644_checkArgs(_204c97576_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_204b2050e_ParamIns>>* _85430_params);
inline jule::Bool _204c998ca_checkDynamicTypeAnnotation(_204c97576_fnCallArgChecker* _self_);
inline jule::Bool _204c99b61_check(_204c97576_fnCallArgChecker* _self_);
inline void _204c9aa41_pushErr(_204c9a4ad_structLitChecker* _self_, jule::Ptr<_204a14216_Token> _93423_token, jule::Str _93445_fmt, jule::Slice<jule::Any> _93465_args);
inline void _204c9ada4_pushSuggestion(_204c9a4ad_structLitChecker* _self_, jule::Str _93930_fmt, jule::Slice<jule::Any> _93950_args);
inline void _204c9b2c2_pushMatch(_204c9a4ad_structLitChecker* _self_, jule::Ptr<_204a4c727_FieldIns>* _94330_f, jule::Ptr<_204ca2b7a_Data>* _94349_d, jule::Ptr<_204a14216_Token>* _94364_errorToken);
inline void _204c9b635_checkPair(_204c9a4ad_structLitChecker* _self_, jule::Ptr<_204a33664_FieldExprPair>* _96230_pair, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _96262_exprs);
inline jule::Bool _204c9b976_readyExprs(_204c9a4ad_structLitChecker* _self_, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _100131_exprs);
inline void _204c9bc2e_check(_204c9a4ad_structLitChecker* _self_, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _102526_exprs);
inline jule::Ptr<_204c5319c_Var> _204c9c7ac_buildVar(_204c9c290_rangeChecker* _self_, jule::Ptr<_204a3ca58_VarDecl>* _110125_decl);
inline void _204c9c9aa_setSizeKey(_204c9c290_rangeChecker* _self_);
inline void _204c9cdc8_checkRangeExprValidity(_204c9c290_rangeChecker* _self_, jule::Ptr<_204ca2b7a_Data>* _112043_d, jule::Ptr<_204c5319c_Var>* _112054_key, jule::Ptr<_204cda982_Type>* _112070_k);
inline void _204c9d0c6_checkSlice(_204c9c290_rangeChecker* _self_);
inline void _204c9d2c4_checkArray(_204c9c290_rangeChecker* _self_);
inline void _204c9d4c2_checkMapKeyA(_204c9c290_rangeChecker* _self_);
inline void _204c9d6c0_checkMapKeyB(_204c9c290_rangeChecker* _self_);
inline void _204c9d8bd_checkMap(_204c9c290_rangeChecker* _self_);
inline void _204c9dabb_checkStr(_204c9c290_rangeChecker* _self_);
inline void _204c9dcb9_checkComptime(_204c9c290_rangeChecker* _self_);
inline jule::Bool _204c9e050_checkComptimeRange(_204c9c290_rangeChecker* _self_);
inline jule::Bool _204c9e2d6_check(_204c9c290_rangeChecker* _self_);
inline void _204ca0040_prepareTypes(_204c9eacd_retTypeChecker* _self_);
inline void _204ca02e8_prepareExprs(_204c9eacd_retTypeChecker* _self_, jule::Ptr<_204a2de45_Expr>* _128033_e);
inline void _204ca04e6_checkExprs(_204c9eacd_retTypeChecker* _self_);
inline jule::Bool _204ca077c_tryFuncMultiRetForward(_204c9eacd_retTypeChecker* _self_);
inline jule::Bool _204ca0abd_check(_204c9eacd_retTypeChecker* _self_, jule::Ptr<_204a2de45_Expr>* _138326_e);
inline jule::Bool _204ca3098_IsNil(_204ca2b7a_Data* _self_);
inline jule::Bool _204ca332e_IsVoid(_204ca2b7a_Data* _self_);
inline jule::Bool _204ca35b5_IsConst(_204ca2b7a_Data* _self_);
inline jule::Bool _204ca3906_GoodOperand(_204ca2b7a_Data* _self_, jule::Ptr<_204ca2b7a_Data>* _6228_other);
inline void _204ca5122_pushErr(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _204ca5485_pushSuggestion(_204ca4b49_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _204ca5683_allowBuiltin(_204ca4b49_eval* _self_);
inline void _204ca5881_disallowBuiltin(_204ca4b49_eval* _self_);
inline jule::Bool _204ca5b17_isUnsafe(_204ca4b49_eval* _self_);
inline jule::Bool _204ca5d9d_isGlobal(_204ca4b49_eval* _self_);
inline jule::Bool _204ca61de_applyNumericPrefix(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _12939_d);
inline jule::Ptr<_204ca2b7a_Data> _204ca6530_litStr(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _16419_l);
inline jule::Ptr<_204ca2b7a_Data> _204ca6871_litRune(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _18120_l);
inline jule::Ptr<_204ca2b7a_Data> _204ca6bb2_litFloat(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _20021_l);
inline jule::Ptr<_204ca2b7a_Data> _204ca7003_litInt(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _21223_l);
inline jule::Ptr<_204ca2b7a_Data> _204ca7344_litNum(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _26723_l);
inline jule::Ptr<_204ca2b7a_Data> _204ca7685_evalLit(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr> _27623_lit);
inline jule::Any _204ca79c6_findBuiltins(_204ca4b49_eval* _self_, jule::Str* _28929_ident);
inline jule::Any _204ca7dc2_getDef(_204ca4b49_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded);
inline jule::Ptr<_204c000b1_ReferenceStack> _204ca8158_getOwnerRefers(_204ca4b49_eval* _self_);
inline void _20907ebcd_pushReference(_204ca4b49_eval* _self_, jule::Ptr<_204a4d2c7_StructIns>* _37437_ref);
inline void _20908ab51_pushReference(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns>* _37437_ref);
inline void _2090a234e_pushReference(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _37437_ref);
inline jule::Ptr<_204ca2b7a_Data> _204ca8752__evalEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2b471_Enum> _38125_enm);
inline jule::Ptr<_204ca2b7a_Data> _204ca8b4d_evalEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2b471_Enum> _39028_enm, jule::Ptr<_204a14216_Token> _39040_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204ca8e8e__evalTypeEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2cb7b_TypeEnum> _39929_enm);
inline jule::Ptr<_204ca2b7a_Data> _204ca938a_evalTypeEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2cb7b_TypeEnum> _40832_enm, jule::Ptr<_204a14216_Token> _40848_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204ca96cb__evalStruct(_204ca4b49_eval* _self_, jule::Ptr<_204a4d2c7_StructIns> _41727_s);
inline jule::Ptr<_204ca2b7a_Data> _204ca9ac7_evalStruct(_204ca4b49_eval* _self_, jule::Ptr<_204a4a46c_Struct> _43130_s, jule::Ptr<_204a14216_Token> _43146_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204ca9e18_evalFnIns(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns> _46125_f);
inline void _204caa27b_checkDeprecated(_204ca4b49_eval* _self_, jule::Slice<jule::Ptr<_204a2902d_Directive>>* _47036_directives, jule::Ptr<_204a14216_Token> _47067_tok);
inline jule::Ptr<_204ca2b7a_Data> _204caa677_evalFn(_204ca4b49_eval* _self_, jule::Ptr<_204b1d5a6_Fn> _48626_f, jule::Ptr<_204a14216_Token> _48634_errorToken);
inline void _204caaa95_pushIllegalCycleError(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _51138_v1, jule::Ptr<_204c5319c_Var>* _51149_v2, _1eeabb290_Builder* _51164_message);
inline jule::Bool _204caae91_checkCrossCycle(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _52132_v, _1eeabb290_Builder* _52146_message);
inline jule::Bool _204cab38c_checkIllegalCycles(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _53839_v, jule::Ptr<_204a14216_Token> _53848_declToken);
inline jule::Ptr<_204ca2b7a_Data> _204cab788_evalVar(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var> _56627_v, jule::Ptr<_204a14216_Token> _56636_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204cabb84_evalTypeAlias(_204ca4b49_eval* _self_, jule::Ptr<_204cd9b90_TypeAlias> _66633_ta, jule::Ptr<_204a14216_Token> _66649_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204cac080_evalDef(_204ca4b49_eval* _self_, jule::Any* _70528_def, jule::Ptr<_204a14216_Token> _70542_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cac3c1_evalIdent(_204ca4b49_eval* _self_, jule::Ptr<_204a30760_IdentExpr> _72929_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cac712_evalUnary(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a31002_UnaryExpr> _73430_u);
inline jule::Ptr<_204ca2b7a_Data> _204caca53_evalVariadic(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a313cb_VariadicExpr> _73933_v);
inline jule::Ptr<_204ca2b7a_Data> _204cacd94_evalUnsafe(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a302a9_UnsafeExpr> _76131_u);
inline jule::Ptr<_204ca2b7a_Data> _204cad1d5_evalArr(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3549b_SliceExpr> _76928_s);
inline jule::Ptr<_204ca2b7a_Data> _204cad68b_evalExpSlc(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3549b_SliceExpr> _84631_s, jule::Ptr<_204cda982_Type> _84655_t, jule::Any _84669_first);
inline jule::Ptr<_204ca2b7a_Data> _204cad9cc_evalSliceExpr(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3549b_SliceExpr> _88434_s);
inline jule::Bool _204caddc8_checkIntegerIndexingByData(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _92047_d, jule::Ptr<_204a14216_Token> _92061_token);
inline void _204cae2e6_indexingPtr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _93332_d, jule::Ptr<_204ca2b7a_Data>* _93347_index, jule::Ptr<_204a35e08_IndexingExpr>* _93366_i);
inline void _204cae714_indexingArr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _94932_d, jule::Ptr<_204ca2b7a_Data>* _94947_index, jule::Ptr<_204a35e08_IndexingExpr>* _94966_i);
inline void _204caeb32_indexingSlc(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _95932_d, jule::Ptr<_204ca2b7a_Data>* _95947_index, jule::Ptr<_204a35e08_IndexingExpr>* _95966_i);
inline void _204cb0050_indexingMap(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _98232_d, jule::Ptr<_204ca2b7a_Data>* _98247_index, jule::Ptr<_204a35e08_IndexingExpr>* _98266_i);
inline void _204cb52ca_indexingStr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _99932_d, jule::Ptr<_204ca2b7a_Data>* _99947_index, jule::Ptr<_204a35e08_IndexingExpr>* _99966_i);
inline void _204cb56e8_comptimeRange(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _102734_d, jule::Ptr<_204ca2b7a_Data>* _102749_index, jule::Ptr<_204a35e08_IndexingExpr>* _102768_i);
inline void _204cb5b16_toIndexing(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _105231_d, jule::Ptr<_204ca2b7a_Data>* _105246_index, jule::Ptr<_204a35e08_IndexingExpr>* _105265_i);
inline jule::Bool _204cb60bc_pushGenericsFromExprSubIdent(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32058_SubIdentExpr>* _108050_sexpr, jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>* _10818_generics, jule::Ptr<_204a2de45_Expr>* _108141_expr);
inline jule::Bool _204cb64b8_pushGenericsFromData(jule::Ptr<_204ca4b49_eval> _self_, jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>* _109142_generics, jule::Ptr<_204a2de45_Expr>* _109175_expr);
inline void _204cb682b_evalIdentDeclFromIndexing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204ca2b7a_Data>* _116147_d, jule::Ptr<_204a35e08_IndexingExpr>* _116162_i);
inline __jule_tuple_bool__jule_tuple_bool _204cb6cd2_checkGenericFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204b21664_FnIns>* _120436_f, jule::Ptr<_204a14216_Token>* _120452_et, jule::Any* _120476_model);
inline void _204cb7145_evalFnGenericFromIndexing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204ca2b7a_Data>* _122047_d, jule::Ptr<_204a35e08_IndexingExpr>* _122062_i);
inline jule::Ptr<_204ca2b7a_Data> _204cb7486_evalIndexing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a35e08_IndexingExpr> _126033_i);
inline __jule_tuple_x_204ca2b7a_Data__jule_tuple_x_204ca2b7a_Data _204cb77c7_evalSlicingExprs(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a36568_SlicingExpr>* _132038_s);
inline void _204cb7a80_slicingArr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _135627_d);
inline void _204cb7e9d_slicingStr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _137127_d, jule::Ptr<_204ca2b7a_Data>* _137138_l, jule::Ptr<_204ca2b7a_Data>* _137149_r);
inline void _204cb8476_checkSlicing(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _140933_d, jule::Ptr<_204ca2b7a_Data>* _140944_l, jule::Ptr<_204ca2b7a_Data>* _140955_r, jule::Ptr<_204a36568_SlicingExpr>* _140966_s);
inline jule::Ptr<_204ca2b7a_Data> _204cb87b7_evalSlicing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a36568_SlicingExpr> _142832_s);
inline void _204cb8bd5_castPtr(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _146527_t, jule::Ptr<_204ca2b7a_Data> _146541_d, jule::Ptr<_204a14216_Token> _146551_errorToken);
inline void _204cb9103_castStruct(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _148730_t, jule::Ptr<_204ca2b7a_Data> _148744_d, jule::Ptr<_204a14216_Token> _148754_errorToken);
inline void _204cb9521_castRef(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _150427_t, jule::Ptr<_204ca2b7a_Data> _150441_d, jule::Ptr<_204a14216_Token> _150451_errorToken);
inline void _204cb993e_castSlc(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _152727_t, jule::Ptr<_204ca2b7a_Data> _152741_d, jule::Ptr<_204a14216_Token> _152751_errorToken);
inline void _204cb9ca2_castStr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _158227_d, jule::Ptr<_204a14216_Token> _158237_errorToken);
inline void _204cba1c0_castInt(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _162927_t, jule::Ptr<_204ca2b7a_Data> _162941_d, jule::Ptr<_204a14216_Token> _162951_errorToken);
inline void _204cba5dd_castNum(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _167527_t, jule::Ptr<_204ca2b7a_Data> _167541_d, jule::Ptr<_204a14216_Token> _167551_errorToken);
inline void _204cbaa0b_castPrim(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _170628_t, jule::Ptr<_204ca2b7a_Data> _170642_d, jule::Ptr<_204a14216_Token> _170652_errorToken);
inline void _204cbad6e_castConstant(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type>* _172233_t, jule::Ptr<_204ca2b7a_Data>* _172248_d);
inline void _204cbb28c_castTypeEnum(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type>* _173133_t, jule::Ptr<_204ca2b7a_Data>* _173148_d, jule::Ptr<_204a14216_Token>* _173163_errorToken);
inline void _204cbb6aa_castTypeEnumT(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type>* _174134_t, jule::Ptr<_204ca2b7a_Data>* _174149_d, jule::Ptr<_204a14216_Token>* _174164_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204cbbb61_evalCastByTypeNData(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _175139_t, jule::Ptr<_204ca2b7a_Data> _175153_d, jule::Ptr<_204a14216_Token> _175167_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204cbc117_evalCastT(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204cda982_Type>* _183631_t, jule::Ptr<_204a2de45_Expr>* _183646_e, jule::Ptr<_204a14216_Token>* _183666_et);
inline jule::Ptr<_204ca2b7a_Data> _204cbc458_evalCast(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a317a5_CastExpr> _185329_c);
inline jule::Ptr<_204ca2b7a_Data> _204cbc799_evalNamespace(_204ca4b49_eval* _self_, jule::Ptr<_204a31b7e_NamespaceExpr> _186233_s);
inline jule::Ptr<_204ca2b7a_Data> _204cbcc50_evalStructLitExplicit(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a4d2c7_StructIns> _188142_s, jule::Slice<jule::Ptr<_204a2de45_Expr>> _18827_exprs, jule::Ptr<_204a14216_Token> _188232_errorToken);
inline jule::Ptr<_204ca2b7a_Data> _204cbd091_evalStructLit(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a33e8e_StructLit> _191934_lit);
inline _204cecd7e_typeChecker _204cbd327_typeChecker(_204ca4b49_eval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204cbd668_evalType(_204ca4b49_eval* _self_, jule::Ptr<_204a29b11_TypeDecl> _195128_t);
inline void _204cbd9cb_callTypeFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr>* _196432_fc, jule::Ptr<_204ca2b7a_Data>* _196459_d);
inline void _204cbdd3e_callBuiltinFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr>* _199035_fc, jule::Ptr<_204ca2b7a_Data>* _199062_d);
inline void _204cbe1a2_checkFnOfConcurrentCall(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns>* _200240_f, jule::Ptr<_204a14216_Token> _200251_errorToken);
inline void _204cbe5c0_processExceptionalHandler(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns>* _202146_f, jule::Ptr<_204a32b6e_FnCallExpr>* _202162_fc, jule::Ptr<_204ca2b7a_Data>* _202189_d);
inline void _204cbe933_callFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr>* _204828_fc, jule::Ptr<_204ca2b7a_Data>* _204855_d);
inline jule::Ptr<_204ca2b7a_Data> _204cbec74_evalFnCall(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr> _219731_fc);
inline jule::Ptr<_204ca2b7a_Data> _204cc0170_evalEnumStatic(_204ca4b49_eval* _self_, jule::Ptr<_204b2b471_Enum> _223034_enm, jule::Ptr<_204a14216_Token> _223050_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc056b_evalTypeEnumStatic(_204ca4b49_eval* _self_, jule::Ptr<_204b2cb7b_TypeEnum> _223838_enm, jule::Ptr<_204a14216_Token> _223854_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc0967_evalStructStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a4d2c7_StructIns> _226136_s, jule::Ptr<_204a14216_Token> _226151_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc0e1d_evalTraitSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _229637_d, jule::Ptr<_204b28cba_Trait> _229651_trt, jule::Ptr<_204a14216_Token> _229668_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc147e_evalStructSubIdentField(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _231844_d, jule::Ptr<_204a4d2c7_StructIns>* _231859_s, jule::Ptr<_204a14216_Token>* _231879_tok, jule::Ptr<_204a4c727_FieldIns>* _2318104_f);
inline jule::Ptr<_204ca2b7a_Data> _204cc1a9a_evalStructSubIdentMethod(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _234345_d, jule::Ptr<_204a4d2c7_StructIns>* _234360_s, jule::Ptr<_204a14216_Token>* _234380_tok, jule::Ptr<_204b1d5a6_Fn>* _2343105_m, jule::Bool _2343113_ref);
inline jule::Ptr<_204ca2b7a_Data> _204cc210b_evalStructSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _236438_d, jule::Ptr<_204a4d2c7_StructIns> _236452_s, jule::Ptr<_204a32058_SubIdentExpr> _236471_si, jule::Bool _236495_ref);
inline jule::Ptr<_204ca2b7a_Data> _204cc244c_evalIntTypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _238833_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc278d_evalUintTypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _241534_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc2ace_evalI8TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _243332_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc2e20_evalI16TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _246233_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc3261_evalI32TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _249133_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc35a2_evalI64TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _252033_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc38e3_evalU8TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _254932_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc3c34_evalU16TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _256833_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc4075_evalU32TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _258733_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc43b6_evalU64TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _260633_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc4707_evalF32TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _262533_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc4a48_evalF64TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _266433_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc4e44_evalPrimStatic(_204ca4b49_eval* _self_, jule::Str _270330_kind, jule::Ptr<_204a14216_Token> _270341_ident);
inline jule::Ptr<_204ca2b7a_Data> _204cc5340_evalTypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _273534_d, jule::Ptr<_204a32058_SubIdentExpr> _273548_si);
inline jule::Ptr<_204ca2b7a_Data> _2092c0aab_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bb36e5_comptimeTypeInfo>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092c5374_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ba4351_comptimeStructField>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092c9ae8_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204baa797_comptimeEnumField>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092ce3b1_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bad5ad_comptimeParam>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092d3c78_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ba7574_comptimeStatic>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092d84ec_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bb97ea_comptimeValue>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092dcc71_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bbdec5_comptimeFile>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline jule::Ptr<_204ca2b7a_Data> _2092e257d_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bc2ddb_comptimeDecl>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si);
inline __jule_tuple_x_204ca2b7a_Data__jule_tuple_bool _204cc5be2_tryComptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _275943_d, jule::Ptr<_204a32058_SubIdentExpr> _275957_si);
inline jule::Ptr<_204ca2b7a_Data> _204cc60dd_evalObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _279035_d, jule::Ptr<_204a32058_SubIdentExpr> _279049_si);
inline jule::Ptr<_204ca2b7a_Data> _204cc642e_evalSubIdent(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32058_SubIdentExpr> _283233_si);
inline jule::Ptr<_204ca2b7a_Data> _204cc6770_evalTuple(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2ea39_TupleExpr> _284630_tup);
inline jule::Ptr<_204ca2b7a_Data> _204cc6b6b_evalMap(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204ce973d_Map> _287528_m, jule::Ptr<_204a34445_BraceLit> _287541_lit);
inline jule::Ptr<_204ca2b7a_Data> _204cc6eac_evalBraceLit(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a34445_BraceLit> _292333_lit);
inline jule::Ptr<_204ca2b7a_Data> _204cc72ed_evalAnonFunc(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3b89d_FnDecl> _293833_decl);
inline jule::Ptr<_204ca2b7a_Data> _204cc763e_evalBinary(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3250e_BinaryExpr> _297631_op);
inline jule::Ptr<_204ca2b7a_Data> _204cc7980_evalExprKind(jule::Ptr<_204ca4b49_eval> _self_, jule::Any _299133_kind);
inline jule::Ptr<_204ca2b7a_Data> _204cc7cc1_eval1(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _303926_expr);
inline jule::Ptr<_204ca2b7a_Data> _204cc8112_eval(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _308425_expr);
inline jule::Ptr<_204ca2b7a_Data> _204cc8453_evalExpr1(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _309930_expr);
inline jule::Ptr<_204ca2b7a_Data> _204cc8794_evalExpr(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _311529_expr);
inline _204cc8c28_unaryEval static__204cc919b_new(jule::Ptr<_204ca4b49_eval> _313620_e);
inline void _204cc9399_minus(_204cc8c28_unaryEval* _self_);
inline void _204cc9597_plus(_204cc8c28_unaryEval* _self_);
inline void _204cc9795_caret(_204cc8c28_unaryEval* _self_);
inline void _204cc9993_excl(_204cc8c28_unaryEval* _self_);
inline void _204cc9b91_star(_204cc8c28_unaryEval* _self_);
inline void _204cc9d8e_amper(_204cc8c28_unaryEval* _self_);
inline void _204cca08c_typeDecl(_204cc8c28_unaryEval* _self_);
inline void _204cca28a_evalData(_204cc8c28_unaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204cca5cb_eval(_204cc8c28_unaryEval* _self_, jule::Ptr<_204a31002_UnaryExpr> _342324_u);
inline _204ccabb4_binaryEval static__204ccb29c_newPlain(jule::Ptr<_204ca4b49_eval> _347125_e);
inline _204ccabb4_binaryEval static__204ccb621_new(jule::Ptr<_204ca4b49_eval> _347720_e, jule::Ptr<_204a14216_Token> _347734_op);
inline jule::Bool _204ccb8a7_checkTypeCompatibility(_204ccabb4_binaryEval* _self_);
inline jule::Bool _204ccbb3d_checkStructCommonOperatorCompatibility(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccbdc4_evalComptimeTypeInfo(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccc15a_evalNil(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccc3e1_evalEnum(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccc677_evalTypeEnum(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccc90d_evalSptr(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204cccb94_evalPtr(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccce2a_evalArr(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccd1b1_evalStruct(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccd447_evalTrait(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccd6cd_evalAny(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccd964_evalBool(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccdbea_evalStr(_204ccabb4_binaryEval* _self_);
inline void _204ccdde8_setTypeToGreater(_204ccabb4_binaryEval* _self_);
inline void _204cce1a1_checkModData(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _387633_d);
inline void _204cce39e_mod(_204ccabb4_binaryEval* _self_);
inline jule::Bool _204cce79a_numbersAreCompatibile(_204ccabb4_binaryEval* _self_, jule::Str* _389834_lk, jule::Str* _389844_rk);
inline jule::Ptr<_204ca2b7a_Data> _204ccea31_shift(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204ccecb7_evalFloat(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204cd004d_evalInt(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204cd02d4_evalPrim(_204ccabb4_binaryEval* _self_);
inline jule::Bool _204cd056a_checkSpecialCases(_204ccabb4_binaryEval* _self_);
inline jule::Ptr<_204ca2b7a_Data> _204cd0801_evalOp(_204ccabb4_binaryEval* _self_);
inline void _204cd0aa9_evalConst(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _418830_d);
inline void _204cd0d62_checkData(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _426630_d);
inline void _204cd1060_checkDatas(_204ccabb4_binaryEval* _self_);
inline void _204cd1318_setModel(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _427829_d);
inline void _204cd15c1_postEval(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _430729_d);
inline jule::Ptr<_204ca2b7a_Data> _204cd19bc_solveExplicit(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _431234_l, jule::Ptr<_204ca2b7a_Data>* _431249_r);
inline jule::Ptr<_204ca2b7a_Data> _204cd1d0d_eval(_204ccabb4_binaryEval* _self_, jule::Ptr<_204a3250e_BinaryExpr>* _433225_op);
inline jule::Str _204cdad7d_Str(_204cda982_Type* _self_);
inline jule::Bool _204cdb1be_Equal(jule::Ptr<_204cda982_Type> _self_, jule::Ptr<_204cda982_Type> _7218_other);
inline jule::Bool _204cdb82e_Binded(_204cda982_Type* _self_);
inline jule::Bool _204cdbab5_IsNil(_204cda982_Type* _self_);
inline jule::Bool _204cdbd4b_Void(_204cda982_Type* _self_);
inline jule::Bool _204cdc0d2_Comparable(_204cda982_Type* _self_);
inline jule::Bool _204cdc368_Mutable(_204cda982_Type* _self_);
inline jule::Bool _204cdc5ee_Ordered(_204cda982_Type* _self_);
inline jule::Bool _204cdc885_NilCompatible(_204cda982_Type* _self_);
inline jule::Bool _204cdcb1b_GC(_204cda982_Type* _self_);
inline jule::Bool _204cdcda2_Variadicable(_204cda982_Type* _self_);
inline jule::Ptr<_204ce3a9a_Prim> _204cdd138_Prim(_204cda982_Type* _self_);
inline jule::Ptr<_204ce75c6_Sptr> _204cdd3be_Sptr(_204cda982_Type* _self_);
inline jule::Ptr<_204cead8d_Ptr> _204cdd655_Ptr(_204cda982_Type* _self_);
inline jule::Ptr<_204b2b471_Enum> _204cdd8db_Enum(_204cda982_Type* _self_);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204cddb72_TypeEnum(_204cda982_Type* _self_);
inline jule::Ptr<_204cea3ba_Arr> _204cdde08_Arr(_204cda982_Type* _self_);
inline jule::Ptr<_204ce8099_Slc> _204cde18e_Slc(_204cda982_Type* _self_);
inline jule::Ptr<_204b21664_FnIns> _204cde425_Fn(_204cda982_Type* _self_);
inline jule::Ptr<_204a4d2c7_StructIns> _204cde6ab_Struct(_204cda982_Type* _self_);
inline jule::Ptr<_204b28cba_Trait> _204cde942_Trait(_204cda982_Type* _self_);
inline jule::Ptr<_204ce973d_Map> _204cdebc8_Map(_204cda982_Type* _self_);
inline jule::Ptr<_204ce8b8d_Tuple> _204cdee5e_Tup(_204cda982_Type* _self_);
inline jule::Bool _204ce01e5_comptime(_204cda982_Type* _self_);
inline jule::Ptr<_204ba5ae4_comptimeStructFields> _204ce047b_comptimeStructFields(_204cda982_Type* _self_);
inline jule::Ptr<_204ba4351_comptimeStructField> _204ce0712_comptimeStructField(_204cda982_Type* _self_);
inline jule::Ptr<_204babaa6_comptimeEnumFields> _204ce0998_comptimeEnumFields(_204cda982_Type* _self_);
inline jule::Ptr<_204baa797_comptimeEnumField> _204ce0c2e_comptimeEnumField(_204cda982_Type* _self_);
inline jule::Ptr<_204bb0417_comptimeParams> _204ce0eb5_comptimeParams(_204cda982_Type* _self_);
inline jule::Ptr<_204bad5ad_comptimeParam> _204ce124b_comptimeParam(_204cda982_Type* _self_);
inline jule::Ptr<_204ba37e5_comptimeRange> _204ce14d2_comptimeRange(_204cda982_Type* _self_);
inline jule::Ptr<_204bb1c76_comptimeTypeInfos> _204ce1768_comptimeTypeInfos(_204cda982_Type* _self_);
inline jule::Ptr<_204bb36e5_comptimeTypeInfo> _204ce19ee_comptimeTypeInfo(_204cda982_Type* _self_);
inline jule::Ptr<_204ba8d28_comptimeStatics> _204ce1c85_comptimeStatics(_204cda982_Type* _self_);
inline jule::Ptr<_204ba7574_comptimeStatic> _204ce201b_comptimeStatic(_204cda982_Type* _self_);
inline jule::Ptr<_204bb97ea_comptimeValue> _204ce22a2_comptimeValue(_204cda982_Type* _self_);
inline jule::Ptr<_204bc2ddb_comptimeDecl> _204ce2538_comptimeDecl(_204cda982_Type* _self_);
inline jule::Ptr<_204bc0aed_comptimeDecls> _204ce27be_comptimeDecls(_204cda982_Type* _self_);
inline jule::Ptr<_204bbdec5_comptimeFile> _204ce2a55_comptimeFile(_204cda982_Type* _self_);
inline jule::Ptr<_204bbc556_comptimeFiles> _204ce2cdb_comptimeFiles(_204cda982_Type* _self_);
inline jule::Bool _204ce354a_checked(_204ce3193_TypeSym* _self_);
inline jule::Str _204ce3e1e_Str(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce4260_Equal(jule::Ptr<_204ce3a9a_Prim> _self_, jule::Ptr<_204cda982_Type> _51418_other);
inline jule::Bool _204ce4705_IsConstraint(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce498b_IsI8(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce4c22_IsI16(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce4ea8_IsI32(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce523e_IsI64(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce54c5_IsU8(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce575b_IsU16(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce59e2_IsU32(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce5c78_IsU64(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce600e_IsF32(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce6295_IsF64(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce652b_IsInt(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce67b2_IsUint(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce6a48_IsUintptr(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce6cce_IsBool(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce7065_IsStr(_204ce3a9a_Prim* _self_);
inline jule::Bool _204ce72eb_IsAny(_204ce3a9a_Prim* _self_);
inline jule::Str _204ce797d_Str(_204ce75c6_Sptr* _self_);
inline jule::Bool _204ce7cbe_Equal(jule::Ptr<_204ce75c6_Sptr> _self_, jule::Ptr<_204cda982_Type> _59118_other);
inline jule::Str _204ce8561_Str(_204ce8099_Slc* _self_);
inline jule::Bool _204ce88a2_Equal(jule::Ptr<_204ce8099_Slc> _self_, jule::Ptr<_204cda982_Type> _61018_other);
inline jule::Str _204ce9045_Str(_204ce8b8d_Tuple* _self_);
inline jule::Bool _204ce9386_Equal(jule::Ptr<_204ce8b8d_Tuple> _self_, jule::Ptr<_204cda982_Type> _63918_other);
inline jule::Str _204ce9ae5_Str(_204ce973d_Map* _self_);
inline jule::Bool _204ce9e36_Equal(jule::Ptr<_204ce973d_Map> _self_, jule::Ptr<_204cda982_Type> _67618_other);
inline jule::Str _204cea772_Str(_204cea3ba_Arr* _self_);
inline jule::Bool _204ceaab3_Equal(jule::Ptr<_204cea3ba_Arr> _self_, jule::Ptr<_204cda982_Type> _70418_other);
inline jule::Str _204ceb245_Str(_204cead8d_Ptr* _self_);
inline jule::Bool _204ceb586_Equal(jule::Ptr<_204cead8d_Ptr> _self_, jule::Ptr<_204cda982_Type> _72818_other);
inline jule::Bool _204ceb90a_IsUnsafe(_204cead8d_Ptr* _self_);
inline void _204ced610_pushErr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a14216_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _204ced80d_allowBuiltin(_204cecd7e_typeChecker* _self_);
inline void _204ceda0b_disallowBuiltin(_204cecd7e_typeChecker* _self_);
inline void _20952566d_pushReference(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4d2c7_StructIns>* _83237_t);
inline void _209528143_pushReference(_204cecd7e_typeChecker* _self_, jule::Ptr<_204b28cba_Trait>* _83237_t);
inline void _204cee06c_pushReferenceByKind(_204cecd7e_typeChecker* _self_, jule::Ptr<_204cda982_Type>* _84240_k);
inline void _204cee48a_pushCycleError(_204cecd7e_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1eeabb290_Builder* _85353_message);
inline jule::Bool _204cee886_checkCrossCycle(_204cecd7e_typeChecker* _self_, jule::Any _87527_decl, _1eeabb290_Builder* _87543_message);
inline jule::Bool _204ceec82_checkIllegalCycles(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _204d0017d_fromTypeAlias(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _95930_decl, jule::Ptr<_204cd9b90_TypeAlias>* _95962_ta);
inline jule::Ptr<_204b2b471_Enum> _204d00579_fromEnum(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _103625_decl, jule::Ptr<_204b2b471_Enum>* _103657_e);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204d00975_fromTypeEnum(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _104829_decl, jule::Ptr<_204b2cb7b_TypeEnum>* _104861_e);
inline jule::Ptr<_204b28cba_Trait> _204d00d71_fromTrait(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _106026_decl, jule::Ptr<_204b28cba_Trait>* _106058_t);
inline jule::Bool _204d0126c_checkStructIns(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4d2c7_StructIns>* _107335_ins, jule::Ptr<_204a14216_Token>* _107357_errorToken);
inline void _204d01525_appendUsedStructReference(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4a46c_Struct>* _109446_s);
inline jule::Ptr<_204a4d2c7_StructIns> _204d01921_buildStructInstance(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _110740_decl, jule::Ptr<_204a4a46c_Struct>* _110772_s);
inline jule::Ptr<_204a4d2c7_StructIns> _204d01d1c_fromStructIns(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4d2c7_StructIns>* _115534_ins, jule::Ptr<_204a14216_Token> _115555_token);
inline jule::Ptr<_204a4d2c7_StructIns> _204d02218_fromStruct(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _117331_decl, jule::Ptr<_204a4a46c_Struct>* _117363_s);
inline jule::Trait _204d02559_getDef(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _121727_decl);
inline jule::Trait _204d0289a_buildIdent(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl> _127830_decl);
inline jule::Trait _204d02bdb_buildSubIdent(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a4d5_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_204ce75c6_Sptr> _204d0302c_buildSptrFromType(_204cecd7e_typeChecker* _self_, jule::Ptr<_204cda982_Type>* _131638_elem);
inline jule::Ptr<_204ce75c6_Sptr> _204d0336d_buildSptr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2abab_SptrTypeDecl> _133029_decl);
inline jule::Ptr<_204cead8d_Ptr> _204d036ae_buildPtrFromType(_204cecd7e_typeChecker* _self_, jule::Ptr<_204cda982_Type>* _133937_elem);
inline jule::Ptr<_204cead8d_Ptr> _204d03a00_buildPtr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2b63a_PtrTypeDecl> _135428_decl);
inline jule::Ptr<_204ce8099_Slc> _204d03d41_buildSlc(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2b041_SlcTypeDecl> _137128_decl);
inline jule::Ptr<_204cea3ba_Arr> _204d04182_buildArr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2bdcc_ArrTypeDecl> _139228_decl);
inline jule::Ptr<_204ce973d_Map> _204d044c3_buildMap(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2c62a_MapTypeDecl> _144128_decl);
inline jule::Ptr<_204ce8b8d_Tuple> _204d04814_buildTuple(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2b33d_TupleTypeDecl> _147330_decl);
inline jule::Bool _204d04b55_checkFuncTypes(_204cecd7e_typeChecker* _self_, jule::Ptr<_204b21664_FnIns>* _148635_f);
inline jule::Ptr<_204b21664_FnIns> _204d04e96_buildFunc(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a3b89d_FnDecl> _150429_decl);
inline jule::Trait _204d052d7_buildNamespace(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a8ae_NamespaceTypeDecl> _153434_ns);
inline jule::Ptr<_204cda982_Type> _204d05628_build(_204cecd7e_typeChecker* _self_, jule::Any* _155026_declKind);
inline jule::Ptr<_204cda982_Type> _204d05969_checkDecl(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a29b11_TypeDecl>* _163830_decl);
inline jule::Bool static__204d063b5_prim(jule::Str* _166518_ident, jule::Ptr<_204ce3a9a_Prim> _166530_t);
inline jule::Bool static__204d06739_exist(jule::Str* _166919_ident, jule::Ptr<_204cda982_Type>* _166936_k);
inline void _20566d27b_stop(_20566cac7_scopeParser* _self_);
inline jule::Bool _20566d512_stopped(_20566cac7_scopeParser* _self_);
inline jule::Bool _20566d798_finished(_20566cac7_scopeParser* _self_);
inline jule::Bool _20566da2e_isLastSt(_20566cac7_scopeParser* _self_);
inline void _20566dd92_pushErr(_20566cac7_scopeParser* _self_, jule::Ptr<_204a14216_Token> _15423_token, jule::Str _15445_fmt);
inline void _20566e205_pushSuggestion(_20566cac7_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _20566e4ad_insertAsNext(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _16333_tokens);
inline jule::Ptr<_20566c236_stmt> _20566e744_next(_20566cac7_scopeParser* _self_);
inline jule::Ptr<_204a39c0e_ScopeTree> _20566eb40_buildScope(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _17331_tokens, jule::Ptr<_204a14216_Token> _17360_end);
inline jule::Ptr<_204a3ca58_VarDecl> _20566ee81_buildVarSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _18431_tokens);
inline jule::Ptr<_204a3ce32_RetSt> _2056702c2_buildRetSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _19230_tokens);
inline jule::Ptr<_204a3d6a2_Iter> _205670613_buildWhileNextIter(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _20339_s);
inline jule::Ptr<_204a3decc_WhileKind> _205670954_buildWhileIterKind(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _205670c95_getRangeKindKeysTokens(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _25443_toks);
inline jule::Ptr<_204a3ca58_VarDecl> _2056710d6_buildRangeKindKey(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _205671427_buildRangeKindKeys(_20566cac7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _28639_parts);
inline void _20567178a_setupRangeKindKeysPlain(_20566cac7_scopeParser* _self_, jule::Ptr<_204a3e8d4_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_204a14216_Token>>* _29471_tokens);
inline void _205671aed_setupRangeKindKeysExplicit(_20566cac7_scopeParser* _self_, jule::Ptr<_204a3e8d4_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_204a14216_Token>>* _30974_tokens);
inline void _205671e61_setupRangeKindKeys(_20566cac7_scopeParser* _self_, jule::Ptr<_204a3e8d4_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_204a14216_Token>>* _31866_tokens);
inline jule::Ptr<_204a3e8d4_RangeKind> _205672417_buildRangeIterKind(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_204a14216_Token>>* _3278_exprTokens, jule::Ptr<_204a14216_Token>* _32742_inToken);
inline jule::Any _205672813_buildCommonIterKind(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _34240_tokens, jule::Ptr<_204a14216_Token>* _34266_errTok);
inline jule::Ptr<_204a3d6a2_Iter> _205672b54_buildCommonIter(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _36935_tokens);
inline jule::Ptr<_204a3d6a2_Iter> _205672e95_buildIterSt(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _39932_st);
inline jule::Ptr<_204a3ecad_BreakSt> _2056732d6_buildBreakSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _40633_tokens);
inline jule::Ptr<_204a40187_ContSt> _205673627_buildContSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _42432_tokens);
inline jule::Ptr<_204a4063d_If> _205673968_buildIf(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _44228_tokens);
inline jule::Ptr<_204a40a17_Else> _205673ca9_buildElse(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _47530_tokens);
inline jule::Ptr<_204a40ebd_Conditional> _2056740ea_buildIfElseChain(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _49936_tokens);
inline jule::Ptr<_204a2de45_Expr> _20567443b_buildCoCallSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _52233_tokens);
inline jule::Ptr<_204a375be_GotoSt> _20567477c_buildGotoSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _53832_tokens);
inline jule::Ptr<_204a378bb_FallSt> _205674abd_buildFallSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _55832_tokens);
inline jule::Ptr<_204a4170a_TypeAliasDecl> _205674e0e_buildTypeAliasSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _56837_tokens);
inline void _2056753d7_pushCaseExpr(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _57432_tokens, jule::Ptr<_204a14216_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _57525_exprs);
inline __jule_tuple_sx_204a2de45_Expr__jule_tuple_bool _20567588d_buildCaseExprs(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _59735_tokens, jule::Ptr<_204a14216_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_204a39c0e_ScopeTree> _205675bce_buildCaseScope(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _63935_tokens);
inline __jule_tuple_x_204a41bb1_Case__jule_tuple_bool _2056760ca_buildCase(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_204a41bb1_Case__jule_tuple_x_204a40a17_Else _2056764c6_buildCases(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_204a424ca_MatchCase> _205676817_buildMatchCase(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _71934_tokens);
inline jule::Ptr<_204a39c0e_ScopeTree> _205676b58_buildScopeSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _75232_tokens);
inline jule::Ptr<_204a371e5_LabelSt> _205676e99_buildLabelSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _79533_tokens);
inline __jule_tuple__204a3926e_StmtData__jule_tuple_bool _2056772da_buildIdSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _81030_tokens);
inline jule::Ptr<_205687ae2_assignInfo> _20567762b_buildAssignInfo(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _82436_tokens);
inline jule::Ptr<_204a3802b_AssignLeft> _20567796c_buildAssignL(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_204a3802b_AssignLeft>> _205677cad_buildAssignLs(_20566cac7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _88034_parts);
inline __jule_tuple__204a3926e_StmtData__jule_tuple_bool _2056780ee_buildPlainAssign(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _88937_tokens);
inline jule::Bool _2056784ea_buildDeclAssign1(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _94337_lefts, jule::Ptr<_204a385ae_AssignSt>* _94366_assign);
inline __jule_tuple_x_204a385ae_AssignSt__jule_tuple_bool _20567883b_buildDeclAssign(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _99135_tokens);
inline __jule_tuple__204a3926e_StmtData__jule_tuple_bool _205678b7c_buildAssignSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _102534_tokens);
inline jule::Ptr<_204a2e819_UseExpr> _205678ebd_buildUseExpr(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _103833_tokens);
inline jule::Any _20567930e_buildConstSt(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _105133_st);
inline jule::Any _205679650_buildSt(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _107628_st);
inline void _2056799b3_build(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _114026_tokens, jule::Ptr<_204a39c0e_ScopeTree>* _114056_s);
inline void _20567ac06_pushErr(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _20567b069_pushSuggestion(_20567a4ec_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_204a2ea39_TupleExpr> _20567b3aa_buildTuple(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _2331_parts);
inline jule::Ptr<_204a2edd0_LitExpr> _20567b6eb_buildLit(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token> _3324_token);
inline jule::Any _20567bd7d_buildSingle(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token> _4431_token);
inline jule::Ptr<_204a30760_IdentExpr> _20567c1be_buildBindIdent(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _6135_tokens);
inline jule::Ptr<_204a31002_UnaryExpr> _20567c510_buildUnary(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _8030_tokens);
inline jule::Ptr<_204a32058_SubIdentExpr> _20567c851_buildObjSubIdent(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _10136_tokens);
inline jule::Ptr<_204a31b7e_NamespaceExpr> _20567cb92_buildNamespace(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _11635_tokens);
inline jule::Ptr<_204a29b11_TypeDecl> _20567ced3_buildType(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _15030_tokens);
inline jule::Any _20567d324_buildSubIdent(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _16434_tokens);
inline jule::Ptr<_204a313cb_VariadicExpr> _20567d665_buildVariadic(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _18633_tokens);
inline jule::Ptr<_204a2e20e_RangeExpr> _20567d9a6_buildBetweenParentheses(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _19543_tokens);
inline jule::Ptr<_204a317a5_CastExpr> _20567dce7_tryBuildCast(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _20733_tokens);
inline void _20567e215_pushArg(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _28128_args, jule::Slice<jule::Ptr<_204a14216_Token>> _28152_tokens, jule::Ptr<_204a14216_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_204a2de45_Expr>> _20567e556_buildArgs(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _29029_tokens);
inline jule::Ptr<_204a32b6e_FnCallExpr> _20567ed4d_buildFnCall(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token>* _35632_token, jule::Slice<jule::Ptr<_204a14216_Token>>* _35659_expr, jule::Slice<jule::Ptr<_204a14216_Token>>* _35687_args);
inline jule::Any _20568018e_buildParenthesesRange(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _36442_tokens);
inline jule::Ptr<_204a302a9_UnsafeExpr> _2056804d0_buildUnsafeExpr(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _38635_tokens);
inline jule::Ptr<_204a3b89d_FnDecl> _205680821_buildAnonFn(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _40132_tokens);
inline jule::Any _205680b62_buildUnsafe(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _41032_tokens);
inline void _205681080_pushRangeLitPart(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _42036_part, jule::Ptr<_204a14216_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _2056813c1_getBraceRangeLitExprParts(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _43145_tokens);
inline jule::Ptr<_204a33664_FieldExprPair> _205681712_buildFieldExprPair(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _47338_tokens);
inline jule::Ptr<_204a2de45_Expr> _205681a53_buildStructLitExpr(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_204a2de45_Expr>> _205681d94_buildStructLitExprs(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _50140_tokens);
inline jule::Ptr<_204a33e8e_StructLit> _2056821d5_buildTypedStructLiteral(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _51443_tokens);
inline jule::Ptr<_204a2de45_Expr> _205682526_buildBraceLitPart(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _53838_tokens);
inline jule::Ptr<_204a34445_BraceLit> _205682867_buildBraceLit(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _55534_tokens);
inline jule::Any _205682ba8_buildBraceRange(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _205682ee9_getEnumerableParts(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _62638_tokens);
inline jule::Ptr<_204a3549b_SliceExpr> _20568333a_buildSlice(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _63330_tokens);
inline jule::Ptr<_204a35e08_IndexingExpr> _2056837e1_buildIndexing(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_204a14216_Token>> _6567_tokens, jule::Ptr<_204a14216_Token> _65636_errorToken);
inline jule::Ptr<_204a36568_SlicingExpr> _205683e0c_buildSlicing(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_204a14216_Token>>* _67967_start, jule::Slice<jule::Ptr<_204a14216_Token>>* _6808_to, jule::Ptr<_204a14216_Token>* _68034_errorToken, jule::Ptr<_204a14216_Token> _68065_end);
inline jule::Any _20568424d_buildBracketRange(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _69537_tokens);
inline jule::Any _20568458e_buildExclRight(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _72035_tokens);
inline jule::Any _2056848d0_buildData(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _73830_tokens);
inline jule::Any _205684ccb_buildBinary(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _80732_tokens, jule::I32 _80757_i);
inline jule::Any _20568511c_build(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _83226_tokens);
inline jule::Any _20568545d_buildKind(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _84330_tokens);
inline jule::Ptr<_204a2de45_Expr> _20568579e_buildFromTokens(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _85435_tokens);
inline void _20568b112_stop(_20568acd2_parser* _self_);
inline jule::Bool _20568b398_stopped(_20568acd2_parser* _self_);
inline void _20568b7b6_pushErr(_20568acd2_parser* _self_, jule::Ptr<_204a14216_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _20568bb29_pushSuggestion(_20568acd2_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_204a2de45_Expr> _20568be6a_buildExpr(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _17831_tokens);
inline jule::Ptr<_204a2902d_Directive> _20568c2ab_buildDirective(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _18234_tokens);
inline void _20568c564_pushDirective(_20568acd2_parser* _self_, jule::Ptr<_204a2902d_Directive> _19733_d);
inline jule::Ptr<_204a39c0e_ScopeTree> _20568c960_buildScope(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _21032_tokens, jule::Ptr<_204a14216_Token> _21061_end);
inline __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool _20568ce16__buildType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool _20568d3bc_buildType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_204a4170a_TypeAliasDecl> _20568d70d_buildTypeAliasDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _24240_tokens);
inline void _20568da71_buildVarTypeAndExpr(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3ca58_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_204a14216_Token>>* _28264_tokens);
inline void _20568ddd4_buildVarCommon(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3ca58_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_204a14216_Token>> _31558_tokens);
inline void _20568e247_buildVarBegin(_20568acd2_parser* _self_, jule::Ptr<_204a3ca58_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_204a14216_Token>>* _33157_tokens);
inline jule::Ptr<_204a3ca58_VarDecl> _20568e588_buildVar(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _35929_tokens);
inline jule::Ptr<_204a36d1b_GenericDecl> _20568e8c9_buildGeneric(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _20568ecc5_buildGenerics(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _41535_tokens, jule::Ptr<_204a14216_Token>* _41561_errorToken);
inline jule::Ptr<_204a3a44b_ParamDecl> _205690116_buildSelfParam(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _43534_tokens);
inline void _205690534_paramTypeBegin(_20568acd2_parser* _self_, jule::Ptr<_204a3a44b_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_204a14216_Token>>* _47573_tokens);
inline void _205690897_buildParamType(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3a44b_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_204a14216_Token>>* _49065_tokens);
inline void _205690c0a_buildParamBody(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3a44b_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_204a14216_Token>> _50364_tokens);
inline jule::Ptr<_204a3a44b_ParamDecl> _20569104b_buildParam(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _52331_tokens);
inline void _205691304_checkParams(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>> _205691700_buildParams(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool _205691aeb_buildMultiRetType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _61639_tokens, jule::I32* _61669_i);
inline __jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool _205691ee7_buildRetType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _68734_tokens, jule::I32* _68764_i);
inline jule::Ptr<_204a3b89d_FnDecl> _20569249d_buildFnPrototype(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_204a3b89d_FnDecl> _205692954_buildFn(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _205692cb7_buildBindUseDecl(_20568acd2_parser* _self_, jule::Ptr<_204a42a5d_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_204a14216_Token>>* _83763_tokens);
inline void _20569312a_parseUseDecl(_20568acd2_parser* _self_, jule::Ptr<_204a42a5d_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_204a14216_Token>> _85058_tokens);
inline jule::Ptr<_204a42a5d_UseDecl> _205693526_buildUseDecl(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _88032_tokens, jule::Bool _88057_binded);
inline jule::Ptr<_204a29b11_TypeDecl> _205693922_buildTypeEnumItemKind(jule::Ptr<_20568acd2_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_204a14216_Token>>* _89456_tokens);
inline jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>> _205693c63_buildTypeEnumItems(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _93140_tokens);
inline jule::Ptr<_204a44a60_TypeEnumDecl> _2056940a4_buildTypeEnumDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _95539_tokens);
inline jule::Ptr<_204a2de45_Expr> _2056944a0_buildEnumItemExpr(jule::Ptr<_20568acd2_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_204a14216_Token>>* _98252_tokens);
inline jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>> _2056947e1_buildEnumItems(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _101436_tokens);
inline jule::Ptr<_204a43ac5_EnumDecl> _205694b32_buildEnumDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _105135_tokens);
inline jule::Any _205694e73_buildNodeEnumDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _109639_tokens);
inline jule::Ptr<_204a44d29_FieldDecl> _2056952b4_buildField(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _110531_tokens);
inline jule::Slice<jule::Ptr<_204a44d29_FieldDecl>> _205695605_buildStructDeclFields(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _115442_tokens);
inline jule::Ptr<_204a45720_StructDecl> _205695946_buildStructDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _116537_tokens);
inline void _205695bee_checkMethodReceiver(_20568acd2_parser* _self_, jule::Ptr<_204a3b89d_FnDecl>* _121336_f);
inline void _205696062_buildTraitBody(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a45e5c_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_204a14216_Token>> _123260_tokens);
inline jule::Ptr<_204a45e5c_TraitDecl> _2056963a3_buildTraitDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _126436_tokens);
inline jule::Ptr<_204a3b89d_FnDecl> _2056966e4_buildBindFn(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _129432_tokens);
inline jule::Ptr<_204a3ca58_VarDecl> _205696a35_buildBindVar(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _130433_tokens);
inline jule::Ptr<_204a45720_StructDecl> _205696d76_buildBindStruct(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _131736_tokens);
inline jule::Ptr<_204a4170a_TypeAliasDecl> _2056971b7_buildBindTypeAlias(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _133139_tokens);
inline jule::Ptr<_204a42a5d_UseDecl> _205697508_buildBindUse(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _134133_tokens);
inline jule::Any _205697849_buildBind(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _135231_tokens);
inline jule::Ptr<_204a3b89d_FnDecl> _205697b8a_getMethod(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _137631_tokens);
inline void _205697eed_parseImplBody(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a465bc_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_204a14216_Token>>* _140557_tokens);
inline jule::Ptr<_204a465bc_Impl> _20569833e_buildImpl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _143830_tokens);
inline jule::Any _205698680_buildNodeData(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _150935_tokens);
inline void _205698938_applyFnMeta(_20568acd2_parser* _self_, jule::Ptr<_204a3b89d_FnDecl>* _154232_f);
inline void _205698be1_applyMeta(_20568acd2_parser* _self_, _204a28b10_Node* _154730_node);
inline void _205698e99_pushUseDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a42a5d_UseDecl>* _157233_decl);
inline jule::Bool _2056992da_pushMetaNodes(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _158035_tokens);
inline _204a28b10_Node _20569962b_parseNode(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _160031_st);
inline void _2056998d4_appendNode(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _162432_st);
inline void _205699dac_removeRange(_20568acd2_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_204a14216_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges);
inline void _20569a2ca_pushWrongOrderCloseErr(_20568acd2_parser* _self_, jule::Ptr<_204a14216_Token>* _164639_t, jule::Slice<jule::Ptr<_204a14216_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges);
inline void _20569a7a3_pushRangeClose(_20568acd2_parser* _self_, jule::Ptr<_204a14216_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_204a14216_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges);
inline void _20569aa5b_checkRanges(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _167528_tokens);
inline void _20569ad14_parse(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a19cbb_Fileset>* _170627_f);
inline void _20569c563_pushErr(_20569be8b_typeBuilder* _self_, jule::Ptr<_204a14216_Token> _3123_token, jule::Str _3145_fmt);
inline void _20569c8c6_pushSuggestion(_20569be8b_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_204a29b11_TypeDecl> _20569cb5c_buildNamespace(_20569be8b_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _20569cde3_buildGenerics(_20569be8b_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _20569d179_identGenerics(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569d410_buildIdent(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569d696_buildCppLink(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569d92c_buildFn(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569dbb3_buildPtr(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569de49_buildSptr(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569e1d0_buildSlc(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569e466_buildArr(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569e6ec_buildMap(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569e983_buildEnumerable(_20569be8b_typeBuilder* _self_);
inline jule::Ptr<_204a29b11_TypeDecl> _20569ec19_step(_20569be8b_typeBuilder* _self_);
inline __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool _20569eea0_build(_20569be8b_typeBuilder* _self_);
inline void _204e16151_pushErr(_204e15abd_directiveEval* _self_, jule::Ptr<_204a14216_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _204e1654c_splitOperans(_204e15abd_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_204a14216_Token>>* _3348_tokens);
inline jule::Bool _204e1688d_evalDirectiveIdent(_204e15abd_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _204e16bce_evalDirectivePart(_204e15abd_directiveEval* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _7037_part);
inline jule::Bool _204e16e65_eval(_204e15abd_directiveEval* _self_);
inline jule::Bool _204e13406_isPassFileAnnotation(_2056a108e_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_2056a108e_Importer> static__2056a14bd_New(_204e14380_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _2056a1754_AllPackages(_2056a108e_Importer* _self_);
inline void _2056a1b94_SetModPath(_2056a108e_Importer* _self_, jule::Str _6226_path);
inline jule::Str _2056a1e2a_GetModPath(_2056a108e_Importer* _self_);
inline jule::Str _2056a226b_ModById(_2056a108e_Importer* _self_, jule::I32 _7019_id);
inline jule::Ptr<_204c12139_ImportInfo> _2056a25ac_GetImport(_2056a108e_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log _2056a29a8_ImportPackage(_2056a108e_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _2056a2c61_Imported(_2056a108e_Importer* _self_, jule::Ptr<_204c12139_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_1eeaca425_Log _2056a3190_isPassBuildDirectives(_2056a108e_Importer* _self_, jule::Ptr<_204a27c52_AST>* _16842_file);
inline jule::Ptr<_2056a71a5_ExprInspector> static__2056a74e6_New(void);
inline void _2056a779e_args(_2056a71a5_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _2056a7a57_InspectStep(_2056a71a5_ExprInspector* _self_, jule::Any* _3339_m);
inline void _2056a7d10_inspect(_2056a71a5_ExprInspector* _self_, jule::Any* _3728_m);
inline void _2056a8173_Inspect(_2056a71a5_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16148_f);
inline jule::Ptr<_2056b1687_Meta> static__2056b1a61_Collect(jule::Ptr<_2056a39dc_IR> _7124_ir);
inline jule::Ptr<_2056b05a9_MetaRuntime> static__2056b1d2a_CollectRuntime(jule::Ptr<_2056a39dc_IR>* _8032_ir);
inline jule::Ptr<_2056ae8d8_MetaStrBuilder> static__2056b20e4_CollectStrBuilder(jule::Ptr<_2056a39dc_IR>* _10635_ir);
inline jule::Ptr<_2056b107c_MetaMathCmplx> static__2056b23ad_CollectMathCmplx(jule::Ptr<_2056a39dc_IR>* _12334_ir);
inline jule::Ptr<_20682b0d6_ObjectDeadCode> static__20682b5c0_new(jule::Ptr<_2056a39dc_IR>* _2621_ir);
inline jule::Bool _2168ebecc_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204a4d2c7_StructIns>* _3227_t);
inline jule::Bool _216903c2b_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b21664_FnIns>* _3227_t);
inline jule::Bool _21692d76c_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b28cba_Trait>* _3227_t);
inline jule::Bool _216938997_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c5319c_Var>* _3227_t);
inline void _2168ec95b_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204a4d2c7_StructIns> _5232_t);
inline void _216904e19_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b21664_FnIns> _5232_t);
inline void _21692e1eb_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b28cba_Trait> _5232_t);
inline void _21693be95_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c5319c_Var> _5232_t);
inline void _20682be72_pushStructAsLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204a4d2c7_StructIns>* _6538_s);
inline void _20682c22a_setReferencesAsLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c000b1_ReferenceStack>* _12141_rs);
inline void _20682c4d3_inits(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c148ab_Package>* _17127_pkg);
inline void _20682c78b_collectLivePackage(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c148ab_Package>* _18540_pkg);
inline void _20682c989_collectLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_);
inline void _20682cc42_removeDeadGlobals(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204c5319c_Var>>* _26139_vars);
inline void _20682ceea_removeDeadFns(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204b1d5a6_Fn>>* _27335_funcs);
inline void _20682d2a3_removeDeadStructs(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204a4a46c_Struct>>* _29439_structs);
inline void _20682d55b_removeDeadTraits(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204b28cba_Trait>>* _31638_traits);
inline void _20682d814_removeDeadsFile(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b248a9_SymTab>* _33737_file);
inline void _20682dabc_removeDeadsPackage(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c148ab_Package>* _34440_pkg);
inline void _20682dcba_removeDeads(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_);
inline void _20682deb8_elimanate(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_);
inline void _206830728_optimizeChild(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd11d5_Scope>* _1935_s);
inline void _2068309d1_optimizeBodyChildExceptional(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd11d5_Scope>* _2950_s);
inline void _206830c89_optimizeBodyChild(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd11d5_Scope>* _3939_s);
inline void _206831042_optimizeExprModel(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _206831240_eliminateFollowed(_20683020b_scopeDeadCode* _self_);
inline void _2068314e8_pushGoto(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd4392_GotoSt> _6929_gt);
inline void _2068317a1_pushLabel(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd3c32_Label> _7930_l);
inline void _206831a59_optimizeRangeIter(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd301c_RangeIter> _9238_it);
inline void _206831d12_optimizeWhileIter(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd25c1_WhileIter> _9738_it);
inline void _2068320ba_optimizeInfIter(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd211a_InfIter> _10536_it);
inline void _206832373_optimizeConditional(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd1d1d_Conditional> _10940_c);
inline void _20683262b_optimizeMatch(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd59e2_Match> _12734_m);
inline void _2068328d4_optimizeAssign(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd4c22_Assign> _14535_assign);
inline void _206832b8c_optimizeMultiAssign(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd52a5_MultiAssign> _15040_assign);
inline void _206832e45_optimizeStmt(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _206833143_optimizeStmts(jule::Ptr<_20683020b_scopeDeadCode> _self_);
inline _206834793_exprDeadCode static__206834bb1_new(jule::Ptr<_20683020b_scopeDeadCode>* _1421_s);
inline void _206834e69_optimize(_206834793_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _206508115_pushVar(_206507b70_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _206508456_removeVar(_206507b70_nils* _self_, jule::Uintptr _4825_var);
inline jule::Bool _206508797_isSafe(_206507b70_nils* _self_, jule::Uintptr _6322_var);
inline jule::Ptr<_206700bd1_scopeOptimizer> static__2067012b9_new(jule::Ptr<_204bd11d5_Scope> _2420_scope);
inline void _206701572_setCurrentStmt(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Any _3635_stmt);
inline void _206701770_removeCurrent(jule::Ptr<_206700bd1_scopeOptimizer> _self_);
inline jule::Bool _206701a06_isLastStmt(jule::Ptr<_206700bd1_scopeOptimizer> _self_);
inline jule::Bool _206701c8c_isIter(jule::Ptr<_206700bd1_scopeOptimizer> _self_);
inline void _206702045_optimizeData(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204ca2b7a_Data> _6833_d);
inline void _2067022ed_optimizeVar(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204c5319c_Var> _8732_v);
inline void _2067025a6_optimizeConditional(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd1d1d_Conditional> _10840_c);
inline void _2067029c4_buildDefaultConstantTrueCase(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd651a_Case> _19149_case, jule::I32* _19173_i, jule::Ptr<_204bd59e2_Match>* _19186_m);
inline void _206702c7c_optimizeMatch(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd59e2_Match> _21734_m);
inline void _206703035_optimizeRangeIter(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd301c_RangeIter> _30938_it);
inline void _2067032dd_optimizeWhileIter(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd25c1_WhileIter> _36638_it);
inline jule::Bool _20670362e_substr(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _37227_a);
inline jule::Bool _206703970_strAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _39230_a);
inline jule::Bool _206703cb1_sliceAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _40332_a);
inline void _206704069_optimizePostfix(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd476b_Postfix> _41136_postfix);
inline jule::Bool _2067043aa_cmplxAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign>* _41833_assign);
inline void _206704663_optimizeAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _46035_assign);
inline void _2067049c6_normalizeAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _59437_assign, jule::Ptr<_204b169bc_TupleExprModel>* _59470_tup);
inline jule::Bool _206704dc2_tryOptimizeSwap(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _64237_assign, jule::Ptr<_204b169bc_TupleExprModel>* _64270_tup);
inline void _206705235_splitAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _66433_assign, jule::Ptr<_204b169bc_TupleExprModel>* _66466_tup);
inline void _2067054dd_optimizeMultiAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign> _74540_assign);
inline void _206705796_optimizeRet(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd70a9_RetSt> _85632_r);
inline void _206705a4e_optimizeStmt(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Any _88033_stmt);
inline void _206705d07_optimizeChild(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd11d5_Scope> _91034_child);
inline void _2067060b0_optimizeChildHard(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd11d5_Scope> _94638_child);
inline void _2067062ad_optimize(jule::Ptr<_206700bd1_scopeOptimizer> _self_);
inline void static__206708a1e_optimize(jule::Any* _2326_model);
inline jule::Ptr<_2067084e1_exprOptimizer> static__206708e4d_new(jule::Any* _2721_model, jule::Ptr<_206713771_data>* _2750_d, jule::Ptr<_206700bd1_scopeOptimizer> _2764_s);
inline void static__2067092e4_optimizeData(jule::Any* _3630_model, jule::Ptr<_206713771_data>* _3659_d, jule::Ptr<_206700bd1_scopeOptimizer> _3673_s);
inline void static__20670968a_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_206713771_data>* _4770_d, jule::Ptr<_206700bd1_scopeOptimizer> _4784_s);
inline jule::Bool _2067099cb_selfCmpCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _10128_m);
inline jule::Bool _206709d1c_boolCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _13025_m);
inline jule::Bool _20670a15d_arrayCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel> _18325_m);
inline jule::Bool _20670a49e_strCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _19524_m);
inline jule::Bool _20670a7e0_strConcat(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _25326_m);
inline jule::Bool _20670ac96_tryNeutralElement1(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _31135_m, jule::Ptr<_204a9d338_Const> _31166_c, jule::Ptr<_204b10dd4_OperandExprModel>* _31192_nc);
inline jule::Bool _20670b0d7_tryNeutralElement(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _36134_m);
inline void _20670b390_checkBinaryForBoundary(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _37639_m);
inline void _20670b648_checkBinaryForNil(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _42834_m);
inline void _20670b901_shift(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel> _46221_m);
inline jule::Bool _20670bc42_binaryMath(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _48227_m);
inline void _20670beea_binary(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel> _58822_m);
inline void _20670c2a3_unary(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b117a8_UnaryExprModel> _66421_m);
inline void _20670c55b_structureLit(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b1217c_StructLitExprModel> _70328_m);
inline void _20670c814_casting(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b12a0c_CastingExprModel> _71923_m);
inline void _20670cb77_args(_2067084e1_exprOptimizer* _self_, jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _73320_params, jule::Slice<jule::Any>* _73352_args);
inline void _20670ceda_scope(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204bd11d5_Scope>* _75822_s, jule::Bool _75839_child);
inline void _20670d293_optimizeStrBuilderCall(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _77439_m);
inline void _20670d54b_lenCall(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _78923_m);
inline void _20670d804_funcCall(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b133ae_FnCallExprModel> _83224_m);
inline void _20670daac_indexing(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b13c3e_IndexingExprModel> _84624_m);
inline void _20670dd65_anonFunc(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b141e5_AnonFnExprModel> _87024_m);
inline void _20670e11d_inspectStep(_2067084e1_exprOptimizer* _self_, jule::Any* _87928_m);
inline void _20670e31b_do(_2067084e1_exprOptimizer* _self_);
inline void _2067110dc_pushVar(jule::Ptr<_206710b47_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_204cda982_Type> _2442_kind);
inline jule::Bool _20671142d_removeVar(_206710b47_dynamic* _self_, jule::Uintptr _4925_var);
inline jule::Bool _206711829_isFits(_206710b47_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_204cda982_Type> _6436_kind);
inline void _206714057_removeDeads(_206713771_data* _self_, jule::Ptr<_206713771_data>* _4228_other);
inline _206713276_dataCheckpoint _2067142dd_getCheckpoint(_206713771_data* _self_);
inline _206713276_dataCheckpoint _206714574_getMutCheckpoint(_206713771_data* _self_);
inline void _20671482c_loadCheckpoint(_206713771_data* _self_, _206713276_dataCheckpoint _8534_c);
inline void _206715ec1_pushVar(_206715a2b_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize);
inline jule::Bool _206716312_removeVar(_206715a2b_boundary* _self_, jule::Uintptr _5825_var);
inline jule::Bool _20671670d_fitsMaxSize(_206715a2b_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr);
inline jule::Ptr<_2068358b5_Optimizer> static__206835d7c_New(jule::Ptr<_2056a39dc_IR>* _2121_ir);
inline void _206836135_optimizeExpr(_2068358b5_Optimizer* _self_, jule::Any* _2733_model);
inline void _2068363dd_optimizeGlobal(_2068358b5_Optimizer* _self_, jule::Ptr<_204c5319c_Var>* _3135_v);
inline void _206836696_optimizeFunction(_2068358b5_Optimizer* _self_, jule::Ptr<_204b1d5a6_Fn>* _3737_func);
inline void _20683694e_optimizeStruct(_2068358b5_Optimizer* _self_, jule::Ptr<_204a4a46c_Struct>* _4735_s);
inline void _206836c07_optimizeGlobals(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _6336_p);
inline void _206836eb0_optimizeFunctions(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _7138_p);
inline void _206837268_optimizeStructs(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _7936_p);
inline void _206837521_optimizePackage(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _8736_p);
inline void _20683771e_Optimize(_2068358b5_Optimizer* _self_);
inline _2069088de_Time static__206908cc9_Unix(jule::U64 _9117_sec);
inline _2069088de_Time static__206908ed8_Now(void);
inline _206908218_AbsTime _20690a6c1_Abs(_2069088de_Time* _self_);
inline jule::Ptr<_206839897_scopeCoder> static__20683a090_new(jule::Ptr<_206915cc5_ObjectCoder>* _3721_oc);
inline void _1d4b8a874_iterHead(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _20683a766_rangeIndexIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter>* _9336_it);
inline void _20683aa1e_rangeHashmapIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter>* _16038_it);
inline void _20683acc7_strRuneIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_206506498_StrRuneIter> _24132_it);
inline void _20683b080_ifCase(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd1603_If> _35327_i);
inline void _20683b338_conditional(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd1d1d_Conditional> _36232_c);
inline void _20683b5e1_infIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd211a_InfIter> _38228_it);
inline void _20683b899_whileIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd25c1_WhileIter> _39930_it);
inline void _20683bb52_rangeIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter> _43830_it);
inline void _20683be0a_cont(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd33a2_ContSt> _45121_c);
inline void _20683c1b3_label(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd3c32_Label> _45622_l);
inline void _20683c46b_gotoSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4392_GotoSt> _46123_gt);
inline void _20683c724_postfix(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd476b_Postfix> _46628_p);
inline void _20683c9cc_assignLeft(jule::Ptr<_206839897_scopeCoder> _self_, jule::Any* _47332_model);
inline void _20683cc85_shl(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _50424_a);
inline void _20683d03d_shr(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _51024_a);
inline void _20683d2e6_divByZeroAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _51636_a);
inline void _20683d7be_operatorOverloadingAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _52247_s, jule::Ptr<_204b10dd4_OperandExprModel>* _52273_l, jule::Ptr<_204b10dd4_OperandExprModel>* _5238_r, jule::U32 _52336_op);
inline void _20683da77_assign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _53727_a);
inline void _20683dd30_mapLookupAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _57037_a);
inline void _20683e0d8_multiAssignTup(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _60236_a);
inline void _20683e391_multiAssignFn(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _67235_a);
inline void _20683e649_multiAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign> _73132_a);
inline jule::Fn<void> _20683e98a_matchExpr(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd59e2_Match> _75730_m);
inline void _20683eced_case(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd59e2_Match> _76725_m, jule::Ptr<_204bd651a_Case> _76746_c);
inline void _2068400a6_matchSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd59e2_Match> _83728_m);
inline void _20684035e_fallSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd6c13_FallSt> _89223_f);
inline void _206840617_breakSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd377b_BreakSt> _89724_b);
inline void _2068408c0_setResult(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd70a9_RetSt> _90630_r);
inline void _206840b78_retSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd70a9_RetSt> _93426_r);
inline void _206840e31_var(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204c5319c_Var> _97024_v);
inline void _2068411d9_mutSlicing(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_206505222_MutSlicingExprModel> _97631_m);
inline void _206841492_swap(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_206503e79_SwapExprModel> _99325_m);
inline void _20684174a_exceptionalForwarding(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_2064e2693_ExceptionalForwardingExprModel> _100142_m);
inline void _206841a03_st(jule::Ptr<_206839897_scopeCoder> _self_, jule::Any _100723_st);
inline void _206841cab_scopeStmts(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd11d5_Scope>* _106332_s);
inline void _206842064_scope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd11d5_Scope> _107226_s);
inline void _20684231c_commonFuncScope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204b21664_FnIns>* _108737_f);
inline void _206842680_anonFuncScope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel> _112734_m, jule::Str _112761_ident);
inline void _206842938_funcScope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204b21664_FnIns> _115930_f);
inline jule::Ptr<_206845d8c_exprCoder> static__206846288_new(jule::Ptr<_206915cc5_ObjectCoder>* _4921_oc);
inline void _206846541_string(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const>* _5524_c);
inline void _2068467e9_boolean(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Bool _7024_b);
inline void _2068469e7_nilLit(jule::Ptr<_206845d8c_exprCoder> _self_);
inline jule::Bool _206846d38_ftoaSpecialCases(jule::Ptr<_206845d8c_exprCoder> _self_, jule::F64* _8234_x);
inline void _2068470e1_float32(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const>* _9625_c);
inline void _206847399_float64(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const>* _11525_c);
inline void _206847652_constant(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const> _13329_c);
inline void _206847a70_operatorOverloadingUnary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _15746_s, jule::U32 _15767_op, jule::Any _15786_e);
inline void _206847e8d_divByZeroBinary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a14216_Token>* _16933_op, jule::Ptr<_204b10dd4_OperandExprModel>* _16957_l, jule::Ptr<_204b10dd4_OperandExprModel>* _16990_r);
inline void _206848686__unsafeBinary(jule::Ptr<_206845d8c_exprCoder> _self_, _1eeabb290_Builder* _20835_buf, jule::Str* _20859_l, jule::Str* _20868_r, jule::Ptr<_204cda982_Type>* _2098_lk, jule::Ptr<_204cda982_Type>* _20930_rk, jule::U32 _20947_op, jule::Str _20962_kind);
inline void _20684893e_unsafeBinary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b113ce_BinaryExprModel> _27833_m);
inline void _206848ca2_shl(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b10dd4_OperandExprModel>* _29025_l, jule::Ptr<_204b10dd4_OperandExprModel>* _29058_r);
inline void _206849115_shr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b10dd4_OperandExprModel>* _31825_l, jule::Ptr<_204b10dd4_OperandExprModel>* _31858_r);
inline void _2068493bd_binary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b113ce_BinaryExprModel> _34627_m);
inline void _206849676_var(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204c5319c_Var> _37024_m);
inline void _20684992e_structureIns(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4d2c7_StructIns> _38633_m);
inline void _206849bd7_unary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b117a8_UnaryExprModel> _39026_m);
inline void _206849e90_structureLit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1217c_StructLitExprModel> _42133_m);
inline void _20684a248_allocStructure(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b12479_AllocStructLitExprModel> _46435_m);
inline void _20684a501_possibleRefExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _47232_expr);
inline void _20684a91e_castTraitFromTrait(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b12a0c_CastingExprModel>* _48640_m, jule::Ptr<_204b28cba_Trait> _48672_t1, jule::Ptr<_204b28cba_Trait> _48694_t2);
inline void _20684abc7_casting(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b12a0c_CastingExprModel> _49928_m);
inline void _20684ae80_args(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _64626_m);
inline void _20684b238_modelForCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _67733_expr);
inline void _20684b4e1_pushCallInf(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _69229_m);
inline jule::Bool _20684b832_isWrapped(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _71531_m);
inline jule::Bool _20684bb73_writeReceiver(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _73934_m);
inline void _20684be2b_pureFuncCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _75234_m);
inline void _20684c1d4_coFuncCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _84232_m);
inline void _20684c547_writeUseExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b21664_FnIns>* _92034_f, jule::Ptr<_204ca2b7a_Data> _92055_d);
inline void _20684c8aa_funcCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional);
inline void _20684cb63_slice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b13788_SliceExprModel> _102426_m);
inline void _20684ce1b_indexing(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b13c3e_IndexingExprModel> _105329_m);
inline void _20684d1c4_unsafeIndexing(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_20650581b_UnsafeIndexingExprModel> _110435_m);
inline void _20684d47c_anonFunc(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel> _112129_m);
inline void _20684d735_mapExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b14998_MapExprModel> _115228_m);
inline void _20684d9dd_slicing(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1502b_SlicingExprModel> _118728_m);
inline void _20684dc96_traitSub(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b155ae_TraitSubIdentExprModel> _120329_m);
inline void _20684e04e_structureSub(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b15e50_StructSubIdentExprModel> _121933_m);
inline void _20684e307_array(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b166c0_ArrayExprModel> _122826_m);
inline void _20684e5b0_funcInsCommon(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b21664_FnIns> _127834_m);
inline void _20684e868_funcIns(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b21664_FnIns> _128528_m);
inline void _20684eb21_tuple(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b169bc_TupleExprModel> _129626_m);
inline void _20684edc9_newCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17490_BuiltinNewCallExprModel> _130728_m);
inline void _206850182_printCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b16cb9_BuiltinPrintCallExprModel> _131930_m);
inline void _20685043a_printlnCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b170b6_BuiltinPrintlnCallExprModel> _132832_m);
inline void _2068506e3_panicCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17869_BuiltinPanicCallExprModel> _133730_m);
inline void _20685099b_errorCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _134530_m);
inline void _206850c54_copyCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b19096_BuiltinCopyCallExprModel> _137729_m);
inline void _20685100c_lenCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _138528_m);
inline void _2068512b5_capCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b187e3_BuiltinCapCallExprModel> _140128_m);
inline void _20685156d_deleteCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> _140631_m);
inline void _206851826_makeCallSlice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17d20_BuiltinMakeCallExprModel>* _143035_m);
inline void _206851ace_makeCallStr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17d20_BuiltinMakeCallExprModel>* _145433_m);
inline void _206851d87_makeCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> _146529_m);
inline void _206852140_pushToSlice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206505be5_PushToSliceExprModel> _147332_m);
inline void _2068523e8_appendToSlice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_2065060be_AppendToSliceExprModel> _153334_m);
inline void _2068526a1_appendCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> _154131_m);
inline void _206852959_sizeof(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1976c_SizeofExprModel> _154927_m);
inline void _206852c12_alignof(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b19e21_AlignofExprModel> _155528_m);
inline void _206852eba_runeLit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1a10d_RuneExprModel> _156124_m);
inline void _206853273_structureStatic(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b162e6_StructStaticIdentExprModel> _157536_m);
inline void _20685352b_backendEmit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1a482_BackendEmitExprModel> _157932_m);
inline void _2068537d4_free(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1a77e_FreeExprModel> _159525_m);
inline void _206853a8c_strComp(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206504b06_StrCompExprModel> _160428_m);
inline void _206853d45_emptyCompare(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206504353_EmptyCompareExprModel> _162033_m);
inline void _2068540ed_unsafeDeref(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206506795_UnsafeDerefExprModel> _162932_m);
inline void _2068543a6_unsafeCasting(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206506a92_UnsafeCastingExprModel> _164034_m);
inline void _20685465e_strConcat(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206503bb0_StrConcatExprModel> _165730_m);
inline void _206854917_model(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _167926_m);
inline jule::Bool _206854c58_handleFieldByDefault(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4c727_FieldIns>* _178342_f);
inline void _206855011_initStructLit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _180435_s);
inline void _2068552b9_fillCollectionByDefault(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cda982_Type>* _182645_elem);
inline void _206855572_initCollection(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cda982_Type>* _184136_elem);
inline void _20685582a_initArray(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cea3ba_Arr>* _185531_arr);
inline void _206855ad3_initExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cda982_Type> _186929_t);
inline jule::Ptr<_2068586c9_TestCoder> static__206858b80_New(jule::Ptr<_206915cc5_ObjectCoder>* _2021_oc);
inline jule::Ptr<_204c12139_ImportInfo> _206858e16_findTestingPackage(jule::Ptr<_2068586c9_TestCoder> _self_);
inline void _2068591be_appendTest(jule::Ptr<_2068586c9_TestCoder> _self_, jule::Ptr<_204b21664_FnIns> _3531_f);
inline void _206859477_appendPackageTests(jule::Ptr<_2068586c9_TestCoder> _self_, jule::Ptr<_204c148ab_Package>* _5040_p);
inline jule::Bool _20685970d_readyTestingPackage(jule::Ptr<_2068586c9_TestCoder> _self_);
inline void _20685990b_callTmReset(jule::Ptr<_2068586c9_TestCoder> _self_);
inline void _206859b09_callTmFailed(jule::Ptr<_2068586c9_TestCoder> _self_);
inline void _206859d07_callTmSkipped(jule::Ptr<_2068586c9_TestCoder> _self_);
inline void _20685a005_Serialize(jule::Ptr<_2068586c9_TestCoder> _self_);
inline void static__20685b864_writeIdentTo(_1eeabb290_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__20685bc0a_toOut(_1eeabb290_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__20685c15b_toLocal(_1eeabb290_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident);
inline void static__20685c447_func(_1eeabb290_Builder* _7722_buf, jule::Ptr<_204b1d5a6_Fn>* _7750_f);
inline void static__20685c733_funcIns(_1eeabb290_Builder* _9525_buf, jule::Ptr<_204b21664_FnIns>* _9553_f);
inline void static__20685ca1e_traitDecl(_1eeabb290_Builder* _11027_buf, jule::Ptr<_204b28cba_Trait> _11050_t);
inline void static__20685cd0a_param(_1eeabb290_Builder* _11423_buf, jule::Ptr<_204b1bad2_Param>* _11447_p);
inline void static__20685d0e6_structure(_1eeabb290_Builder* _12927_buf, jule::Ptr<_204a4a46c_Struct>* _12951_s);
inline void static__20685d3d2_structureIns(_1eeabb290_Builder* _14030_buf, jule::Ptr<_204a4d2c7_StructIns>* _14054_s);
inline void static__20685d6bd_field(_1eeabb290_Builder* _14823_buf, jule::Ptr<_204a47579_Field>* _14847_f);
inline void static__20685d9a9_var(_1eeabb290_Builder* _15821_buf, jule::Ptr<_204c5319c_Var> _15848_v);
inline void static__20685dc95_iterBegin(_1eeabb290_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__20685e081_iterEnd(_1eeabb290_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__20685e36c_iterNext(_1eeabb290_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__20685e658_label(_1eeabb290_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__20685e944_matchEnd(_1eeabb290_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__20685ec30_caseBegin(_1eeabb290_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_206915cc5_ObjectCoder> static__206916237_New(jule::Ptr<_2056a39dc_IR>* _12021_ir, _206913520_SerializationInfo _12035_info);
inline void _2069164e0_write(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Str _13322_s);
inline void _206916798_writeBytes(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b);
inline void _206916996_addIndent(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206916b94_doneIndent(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206916d92_indent(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline jule::I32 _2069171d3_findAnyType(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204cda982_Type>* _15633_t);
inline jule::I32 _206917524_pushCoSpawn(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns> _16532_f);
inline jule::I32 _206917865_pushDealloc(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204cda982_Type> _26832_t);
inline jule::Str _206917ba6_pushAnonFn(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel>* _28432_m);
inline jule::I32 _206917ee7_pushAnyType(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204cda982_Type> _32632_t);
inline void _2069182a0_pushResultIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns>* _42635_f);
inline void _206918558_pushResult(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _44732_f);
inline void _2069188bb_pushAndWriteMaskMapper(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b28cba_Trait> _46043_t1, jule::Ptr<_204b28cba_Trait> _46065_t2);
inline void _206918b74_locInfo(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a14216_Token>* _51125_t);
inline void _206918d72_head(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _20691912a_links(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Bool _57822_std);
inline void _2069193d3_prepareStructure(_206915cc5_ObjectCoder* _self_, jule::Ptr<_204a4a46c_Struct>* _60137_s);
inline void _2069195d1_prepareStructures(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206919889_structurePlainDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4a46c_Struct>* _63240_s);
inline void _206919a87_structurePlainDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206919d40_fieldDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4c727_FieldIns>* _64831_f);
inline void _20691a25d_structureOperatorEq(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_204a4d2c7_StructIns>* _65553_s, jule::Bool _65574_decl);
inline void _20691a5c1_structureOperators(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _72340_s, jule::Bool _72361_decl);
inline void _20691a879_structureInsDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _73238_s);
inline void _20691ab32_structureDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4a46c_Struct>* _75835_s);
inline void _20691ad30_structureDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _20691b02d_structureMethodDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _20691b506_funcHead(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _79230_buf, jule::Ptr<_204b21664_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident);
inline void _20691b869_funcDeclIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns>* _81133_f, jule::Bool _81150_ptr);
inline void _20691bbcc_funcDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _81930_f, jule::Bool _81944_ptr);
inline void _20691be85_funcDeclTrait(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _82535_f);
inline void _20691c183_funcDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _20691c43b_traitDataTypeMethods(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_206914235_traitHash>* _84742_hash);
inline void _20691c639_traitDataTypes(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _20691c99c_paramIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _87530_buf, jule::Ptr<_204b2050e_ParamIns>* _87558_p);
inline void _20691cd10_paramsIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _88131_buf, jule::Ptr<_204b21664_FnIns>* _88159_f);
inline void _20691d173_varInitExpr(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204c5319c_Var>* _90233_v, jule::Fn<void> _90248_init);
inline void _20691d42b_var(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204c5319c_Var> _92024_v);
inline void _20691d78e_anonFuncInsDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel>* _95137_m, jule::Str _95164_ident);
inline void _20691db02_anonFuncIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel>* _95733_m, jule::Str _95760_ident);
inline void _20691de65_funcIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns> _96728_f, jule::Str _96745_ident);
inline void _20691e21d_func(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _97726_f);
inline void _20691e581_funcTrait(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _98327_s, jule::Ptr<_204b21664_FnIns>* _98353_f);
inline __jule_tuple_x_204b21664_FnIns__jule_tuple_bool _20691e8c2_findTraitMetMap(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _99837_m);
inline void _20691ec35_traitWrapper(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b28cba_Trait>* _101034_t, jule::Ptr<_204b1d5a6_Fn>* _101056_m);
inline void _20691ee33_traitWrappers(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206920296_traitDataMethods(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_206914235_traitHash>* _107438_hash, jule::Ptr<_204a4d2c7_StructIns> _107456_s);
inline void _2069206b4_traitData(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_206914235_traitHash>* _109231_hash, jule::I32 _109249_i, jule::Ptr<_204a4d2c7_StructIns>* _109262_s);
inline void _2069208b2_traitDatas(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206920ab0_globalDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206920cad_decls(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206921066_structureMethods(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _115238_s);
inline void _20692131e_structureIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _115934_s);
inline void _2069215c7_structure(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4a46c_Struct>* _116531_s);
inline void _2069217c5_structures(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _2069219c3_funcs(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206921c7b_pushInit(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204c148ab_Package>* _120430_pkg);
inline void _206921e79_anonHashes(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206922177_initGlobals(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206922375_initCaller(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206922573_end(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _20692282b_buildTraitHash(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b28cba_Trait>* _127636_t);
inline void _206922a29_buildTraitHashes(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206922d8c_insertBuf(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _130631_buf, jule::I32 _130654_pos);
inline void _20692308a_implementRC(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206923288_serializeHead(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline void _206923486_Serialize(jule::Ptr<_206915cc5_ObjectCoder> _self_);
inline jule::Str _2069254dd_Str(_206925103_customType* _self_);
inline jule::Bool _20692582e_Equal(jule::Ptr<_206925103_customType> _self_, jule::Ptr<_204cda982_Type> _2518_k);
inline jule::Ptr<_206925c2a_typeCoder> static__20692627a_new(jule::Ptr<_206915cc5_ObjectCoder>* _5021_oc);
inline void _2069265dd_toType(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _5727_buf, jule::Str _5754_id);
inline void _206926951_prim(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _7125_buf, jule::Ptr<_204ce3a9a_Prim> _7148_p);
inline void _206926cb4_tuple(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _7626_buf, jule::Ptr<_204ce8b8d_Tuple> _7653_t);
inline void _206927127_asSptr(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _20692748a_sptr(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _9525_buf, jule::Ptr<_204ce75c6_Sptr> _9552_sptr);
inline void _2069277ed_ptr(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _10224_buf, jule::Ptr<_204cead8d_Ptr> _10251_p);
inline void _206927b61_enumDecl(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _11329_buf, jule::Ptr<_204b2b471_Enum> _11356_e);
inline void _206927ec4_typeEnumDecl(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _11833_buf, jule::Ptr<_204b2cb7b_TypeEnum> _11860_e);
inline void _206928337_asSlice(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _12228_buf, jule::Ptr<_204cda982_Type> _12255_elem);
inline void _20692869a_slice(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _12926_buf, jule::Ptr<_204ce8099_Slc> _12953_s);
inline void _206928a0d_mapType(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _13428_buf, jule::Ptr<_204ce973d_Map> _13455_m);
inline void _2069291d4_structureIns(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _14733_buf, jule::Ptr<_204a4d2c7_StructIns> _14760_s);
inline void _206929547_array(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _17126_buf, jule::Ptr<_204cea3ba_Arr> _17153_a);
inline void _206929c1d_paramIns(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _19429_buf, jule::Ptr<_204b2050e_ParamIns>* _19457_p);
inline void _20692a3e4_funcInsResult(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _22634_s, jule::Ptr<_204b21664_FnIns>* _22660_f);
inline void _20692a757_anonFunc(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _24429_buf, jule::Ptr<_204b21664_FnIns> _24456_f);
inline void _20692aaba_func(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _26525_buf, jule::Ptr<_204b21664_FnIns> _26552_f);
inline void _20692ae2d_kind(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _27225_buf, jule::Ptr<_204cda982_Type> _27252_k);
inline jule::Ptr<_20692d815_resultCoder> static__20692dd21_new(jule::Ptr<_206925c2a_typeCoder>* _34021_tc);
inline void _20692e184_ptr(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _34424_s, jule::Ptr<_204cead8d_Ptr> _34449_p);
inline void _20692e4e7_sptr(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _34925_s, jule::Ptr<_204ce75c6_Sptr> _34950_p);
inline void _20692e85a_mapType(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _35428_s, jule::Ptr<_204ce973d_Map> _35453_p);
inline void _20692ebbd_slice(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _36026_s, jule::Ptr<_204ce8099_Slc> _36051_slc);
inline void _206930031_arr(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _36524_s, jule::Ptr<_204cea3ba_Arr> _36549_arr);
inline void _206930394_func(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _37125_s, jule::Ptr<_204b21664_FnIns> _37150_f);
inline void _206930707_tup(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _38424_s, jule::Ptr<_204ce8b8d_Tuple> _38449_tup);
inline void _206930a6a_codeMut(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _39128_s, jule::Ptr<_204cda982_Type>* _39154_t);
inline void _206930dcd_codeMut1(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _43829_s, jule::Ptr<_204cda982_Type>* _43855_t);
inline jule::Slice<jule::U8> _2069311db_code(_20692d815_resultCoder* _self_, jule::Ptr<_204cda982_Type>* _44725_t);
inline jule::Str _1d5272510_Name(_1d5272224_Flag* _self_);
inline jule::Str _1d5272653_What(_1d5272224_Flag* _self_);
inline void _1d5272796_Reset(_1d5272224_Flag* _self_);
inline jule::I32 _1d52728d9_Short(_1d5272224_Flag* _self_);
inline jule::Str _1d5275733_Name(_1d5275aa7_Flag* _self_);
inline jule::Str _1d5275d93_What(_1d5275aa7_Flag* _self_);
inline void _1d5275ed6_Reset(_1d5275aa7_Flag* _self_);
inline jule::I32 _1d5276129_Short(_1d5275aa7_Flag* _self_);
inline jule::Str _1d5278e40_Name(_1d52792b4_Flag* _self_);
inline jule::Str _1d52795a0_What(_1d52792b4_Flag* _self_);
inline void _1d52796e3_Reset(_1d52792b4_Flag* _self_);
inline jule::I32 _1d5279836_Short(_1d52792b4_Flag* _self_);
inline jule::Str _1d527c691_Name(_1d527ca15_Flag* _self_);
inline jule::Str _1d527cd01_What(_1d527ca15_Flag* _self_);
inline void _1d527ce44_Reset(_1d527ca15_Flag* _self_);
inline jule::I32 _1d527d087_Short(_1d527ca15_Flag* _self_);
inline jule::Str _1d5280d9d_Name(_1d5281222_Flag* _self_);
inline jule::Str _1d528150d_What(_1d5281222_Flag* _self_);
inline void _1d5281651_Reset(_1d5281222_Flag* _self_);
inline jule::I32 _1d5281794_Short(_1d5281222_Flag* _self_);
inline jule::Ptr<_206993913_FlagSet> static__206993c32_New(void);
inline jule::Trait _2069941d8_FindFlag(_206993913_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _206994529_FindFlagShort(_206993913_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _206994b01_Parse(_206993913_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1d5281222_Flag> _1d5310180_addFlagCommon(_206993913_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1d527ca15_Flag> _1d531e0b2_addFlagCommon(_206993913_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1d530c952_AddVar(_206993913_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1d5316a6b_AddVar(_206993913_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1d5293ee3_parseInteger(_2069963c7_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1d529bb33_parseInteger(_2069963c7_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _206996c24_getData(_2069963c7_argParser* _self_);
inline jule::VoidExceptional _206996e99_processFlag(_2069963c7_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _206997252_singleDash(_2069963c7_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _20699750a_doubleDash(_2069963c7_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _206997708_tryArg(_2069963c7_argParser* _self_);
inline jule::VoidExceptional _206997906_parse(_2069963c7_argParser* _self_);
inline jule::Exceptional<jule::Slice<_1eec71478_Dir>> static__200e411c4_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__200e413d3_Create(jule::Str _3319_path);
inline jule::VoidExceptional static__200e41614_Remove(jule::Str _4519_path);
inline jule::Ptr<_1eec72017_Cmd> static__1eec72468_New(jule::Str _3516_path);
inline jule::VoidExceptional _1eec72666_Spawn(_1eec72017_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1eec72aea_Wait(_1eec72017_Cmd* _self_);
inline jule::VoidExceptional _1eecb37ea_spawn(_1eec72017_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1eecb3c7e_wait(_1eec72017_Cmd* _self_);
inline __jule_tuple_x_2056a39dc_IR__jule_tuple_s_1eeaca425_Log static__2056a3eb5_Build(jule::Str _3018_path, jule::I32 _3029_flags);
inline void _2056a449e_appendStructs(_2056a39dc_IR* _self_, jule::Ptr<_204c148ab_Package>* _6830_p, jule::Slice<jule::Ptr<_204a4a46c_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_204a4a46c_Struct>> _2056a4735_GetAllStructures(_2056a39dc_IR* _self_);
inline void _2056a4a98_appendGlobals(_2056a39dc_IR* _self_, jule::Ptr<_204c148ab_Package>* _9130_p, jule::Slice<jule::Ptr<_204c5319c_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_204c5319c_Var>> _2056a4d2e_GetAllGlobals(_2056a39dc_IR* _self_);
inline void _2056a502c_Order(_2056a39dc_IR* _self_);
inline jule::I32 _1ee7259cc_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _1ee725c96_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _1ee7260d7_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _1ee72636d_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _1ee7266e2_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _1ee726978_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _1ee726c86_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _1ee727050_U16PtrToStr(jule::U16* _4623_s);
inline jule::I32 _1ee693d46_GetLastErrno(void);
inline jule::Uintptr _1ee74e594_GetStdHandle(jule::Uintptr _6517_stdh);
inline jule::Bool _1ee74e85d_CloseHandle(jule::Uintptr _6623_stdh);
inline jule::I32 _1ee74ebd2_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat);
inline jule::I32 _1ee750111_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode);
inline jule::U32 _1ee750320_GetLastError(void);
inline jule::U32 _1ee750694_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff);
inline jule::Bool _1ee750c27_DeleteFile(jule::U16* _9422_path);
inline jule::Bool _1ee750ee1_CreateDirectory(jule::U16* _9927_path);
inline jule::Bool _1ee7512aa_RemoveDirectory(jule::U16* _10427_path);
inline jule::U32 _1ee751794_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname);
inline jule::Bool _1ee751b18_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode);
inline jule::Bool _1ee752223_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode);
inline jule::Bool _1ee752773_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved);
inline jule::Bool _1ee752c5c_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed);
inline jule::Uintptr _1ee7532e0_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data);
inline jule::I32 _1ee753664_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data);
inline jule::I32 _1ee75392d_FindClose(jule::Uintptr _15514_h);
inline jule::I32 _1ee763ae7_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1ee763ec1_Close(jule::I32 _2510_handle);
inline jule::I32 _1ee764378_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1ee7645a9_Exit(jule::I32 _339_code);
inline jule::Str _1ee774cd4_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _206a37a1d_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1ee78ae1b_StrBytes(jule::Str _4013_s);
inline jule::Str _1ee78b1a2_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1ee78b46b_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1ee8853de_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1ee885730_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1ee885c80_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I32 _1ee886049_RuneLen(jule::I32 _35212_r);
inline jule::I32 _1ee8864cd_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _1ee8867ca_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1ee886b4e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1ee8871d2_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1ee88749b_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1ee9d719a_LeadingZeros64(jule::U64 _5919_x);
inline jule::I32 _1ee9d80e1_TrailingZeros(jule::U32 _8118_x);
inline jule::I32 _1ee9d89c6_TrailingZeros32(jule::U32 _10320_x);
inline jule::I32 _1ee9d8c90_TrailingZeros64(jule::U64 _11220_x);
inline jule::I32 _1ee9de768_Len32(jule::U32 _35014_x);
inline jule::I32 _1ee9dea32_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1ee9e07be_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1ee9e20c8_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1ed58a03a_f64bits(jule::F64 _612_f);
inline jule::I32 _1ee3ac4aa_randInt(jule::U64 _716_seed, jule::I32 _727_max);
inline jule::Bool _206c43c3a_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _206c92371_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _207d0d5a6_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _216c638c6_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n);
inline void _1ee8881a0__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I32 _1ee888546_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I32 _1ee8888ba_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf);
inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf);
inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf);
inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf);
inline jule::U32 _206b7ee40_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo);
inline jule::U32 _206b8010a_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo);
inline jule::Slice<jule::Str> _1ee890075_args(void);
inline jule::Str _1ee89052b_executable(void);
inline jule::U32* __jule_RCNew(void);
inline jule::U32 __jule_RCLoad(jule::U32* _4019_p);
inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p);
inline void __jule_RCAdd(jule::U32* _5722_p);
inline void __jule_RCAddAtomic(jule::U32* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U32* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p);
inline void __jule_RCFree(jule::U32* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I32 _1ee89aa86_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1d52cce0b_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1d52c2c14_structToStr(_1eeabb290_Builder _17519_x);
inline jule::Str _206bebbd2_toStr(jule::Any _21613_x);
inline jule::Str _206beddb0_toStr(jule::Str _21613_x);
inline jule::Str _206bee60d_toStr(jule::I32 _21613_x);
inline jule::Str _206c0436b_toStr(jule::I8 _21613_x);
inline jule::Str _206c020a0_toStr(jule::I16 _21613_x);
inline jule::Str _206c0977d_toStr(jule::I32 _21613_x);
inline jule::Str _206c0c264_toStr(jule::I64 _21613_x);
inline jule::Str _206c0ecb1_toStr(jule::U32 _21613_x);
inline jule::Str _206c0c7c5_toStr(jule::Uintptr _21613_x);
inline jule::Str _206c12995_toStr(jule::U8 _21613_x);
inline jule::Str _206c14dd7_toStr(jule::U16 _21613_x);
inline jule::Str _206c17329_toStr(jule::U32 _21613_x);
inline jule::Str _206c1976b_toStr(jule::U64 _21613_x);
inline jule::Str _206c1cb48_toStr(jule::F32 _21613_x);
inline jule::Str _206c1cebc_toStr(jule::F64 _21613_x);
inline jule::Str _206c09b57_toStr(jule::Bool _21613_x);
inline jule::Str _207a01b90_toStr(jule::I32 _21613_x);
inline jule::Str _207a0cccd_toStr(jule::I32 _21613_x);
inline jule::Str _207a450e0_toStr(jule::I32 _21613_x);
inline jule::Str _207da287b_toStr(jule::I32 _21613_x);
inline jule::Str _208520c96_toStr(jule::Ptr<_204c5319c_Var> _21613_x);
inline jule::Str _20852333c_toStr(jule::Ptr<_204cd9b90_TypeAlias> _21613_x);
inline jule::Str _208526cd0_toStr(jule::Ptr<_204a4a46c_Struct> _21613_x);
inline jule::Str _20852a597_toStr(jule::Ptr<_204b1d5a6_Fn> _21613_x);
inline jule::Str _20852e15b_toStr(jule::Ptr<_204b28cba_Trait> _21613_x);
inline jule::Str _2085375b5_toStr(jule::Ptr<_204b2b471_Enum> _21613_x);
inline jule::Str _208537bae_toStr(jule::Ptr<_204b2cb7b_TypeEnum> _21613_x);
inline jule::Str _208559164_toStr(jule::Ptr<_204a47579_Field> _21613_x);
inline jule::Str _20856b253_toStr(jule::Ptr<_204a9d338_Const> _21613_x);
inline jule::Str _208585459_toStr(jule::Ptr<_204b2a915_EnumItem> _21613_x);
inline jule::Str _208596a53_toStr(jule::Ptr<_204b1bad2_Param> _21613_x);
inline jule::Str _20867b6a4_toStr(jule::Str _21613_x);
inline jule::Str _208758253_toStr(jule::Ptr<_204a2a21b_IdentTypeDecl> _21613_x);
inline jule::Str _208770336_toStr(jule::Ptr<_204b169bc_TupleExprModel> _21613_x);
inline jule::Str _208772ba7_toStr(jule::Ptr<_204a2ea39_TupleExpr> _21613_x);
inline jule::Str _208782645_toStr(jule::Ptr<_204a385ae_AssignSt> _21613_x);
inline jule::Str _2087856c0_toStr(jule::Ptr<_204a2de45_Expr> _21613_x);
inline jule::Str _208784c52_toStr(jule::Ptr<_204bd476b_Postfix> _21613_x);
inline jule::Str _208787dba_toStr(jule::Ptr<_204bd4c22_Assign> _21613_x);
inline jule::Str _208787ea8_toStr(jule::Ptr<_204bd52a5_MultiAssign> _21613_x);
inline jule::Str _20878e531_toStr(jule::Ptr<_204ca2b7a_Data> _21613_x);
inline jule::Str _20879448c_toStr(jule::Ptr<_204b133ae_FnCallExprModel> _21613_x);
inline jule::Str _2087c5e4c_toStr(jule::Ptr<_204bd3c32_Label> _21613_x);
inline jule::Str _2087e4685_toStr(jule::Ptr<_204bd11d5_Scope> _21613_x);
inline jule::Str _208803a5c_toStr(jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _21613_x);
inline jule::Str _20880819e_toStr(jule::Ptr<_204b1a482_BackendEmitExprModel> _21613_x);
inline jule::Str _208809a63_toStr(jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> _21613_x);
inline jule::Str _20880aba7_toStr(jule::Ptr<_204b16cb9_BuiltinPrintCallExprModel> _21613_x);
inline jule::Str _20880dc32_toStr(jule::Ptr<_204b170b6_BuiltinPrintlnCallExprModel> _21613_x);
inline jule::Str _208814551_toStr(jule::Ptr<_204b17869_BuiltinPanicCallExprModel> _21613_x);
inline jule::Str _208814298_toStr(jule::Ptr<_204b19096_BuiltinCopyCallExprModel> _21613_x);
inline jule::Str _2088198ec_toStr(jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> _21613_x);
inline jule::Str _20881c49e_toStr(jule::Ptr<_204b1a77e_FreeExprModel> _21613_x);
inline jule::Str _20882694d_toStr(jule::Ptr<_204bd1d1d_Conditional> _21613_x);
inline jule::Str _20883232c_toStr(jule::Ptr<_204bd211a_InfIter> _21613_x);
inline jule::Str _208838168_toStr(jule::Ptr<_204bd25c1_WhileIter> _21613_x);
inline jule::Str _2088600e6_toStr(jule::Ptr<_204bd301c_RangeIter> _21613_x);
inline jule::Str _20886ec0a_toStr(jule::Ptr<_204a3decc_WhileKind> _21613_x);
inline jule::Str _208872878_toStr(jule::Ptr<_204a3e8d4_RangeKind> _21613_x);
inline jule::Str _20888dde4_toStr(jule::Ptr<_204bd33a2_ContSt> _21613_x);
inline jule::Str _208897c55_toStr(jule::Ptr<_204bd4392_GotoSt> _21613_x);
inline jule::Str _2088cecc0_toStr(jule::Ptr<_204a30760_IdentExpr> _21613_x);
inline jule::Str _2088e4b70_toStr(jule::Ptr<_204b13c3e_IndexingExprModel> _21613_x);
inline jule::Str _20893c426_toStr(jule::Ptr<_204bd59e2_Match> _21613_x);
inline jule::Str _208951490_toStr(jule::Ptr<_204bd6c13_FallSt> _21613_x);
inline jule::Str _20897236d_toStr(jule::Ptr<_204bd377b_BreakSt> _21613_x);
inline jule::Str _2089789e5_toStr(jule::Ptr<_204bd70a9_RetSt> _21613_x);
inline jule::Str _208983538_toStr(jule::Ptr<_204a39c0e_ScopeTree> _21613_x);
inline jule::Str _2089837e1_toStr(jule::Ptr<_204a3ca58_VarDecl> _21613_x);
inline jule::Str _2089857e3_toStr(jule::Ptr<_204a4170a_TypeAliasDecl> _21613_x);
inline jule::Str _20898c256_toStr(jule::Ptr<_204a40ebd_Conditional> _21613_x);
inline jule::Str _20898c443_toStr(jule::Ptr<_204a3d6a2_Iter> _21613_x);
inline jule::Str _208990721_toStr(jule::Ptr<_204a40187_ContSt> _21613_x);
inline jule::Str _20899456b_toStr(jule::Ptr<_204a371e5_LabelSt> _21613_x);
inline jule::Str _208996aac_toStr(jule::Ptr<_204a375be_GotoSt> _21613_x);
inline jule::Str _20899d168_toStr(jule::Ptr<_204a424ca_MatchCase> _21613_x);
inline jule::Str _2089a1633_toStr(jule::Ptr<_204a378bb_FallSt> _21613_x);
inline jule::Str _2089a544a_toStr(jule::Ptr<_204a3ecad_BreakSt> _21613_x);
inline jule::Str _2089a8618_toStr(jule::Ptr<_204a3ce32_RetSt> _21613_x);
inline jule::Str _2089ab7d6_toStr(jule::Ptr<_204a2e819_UseExpr> _21613_x);
inline jule::Str _208a94061_toStr(jule::Ptr<_204a465bc_Impl> _21613_x);
inline jule::Str _208a98b26_toStr(jule::Ptr<_204a45720_StructDecl> _21613_x);
inline jule::Str _208a9b585_toStr(jule::Ptr<_204a3b89d_FnDecl> _21613_x);
inline jule::Str _208aa017c_toStr(jule::Ptr<_204a45e5c_TraitDecl> _21613_x);
inline jule::Str _208aa620a_toStr(jule::Ptr<_204a43ac5_EnumDecl> _21613_x);
inline jule::Str _208aa87b2_toStr(jule::Ptr<_204a44a60_TypeEnumDecl> _21613_x);
inline jule::Str _208ad66e1_toStr(jule::Ptr<_204b15e50_StructSubIdentExprModel> _21613_x);
inline jule::Str _208ad6c0d_toStr(jule::Ptr<_204b117a8_UnaryExprModel> _21613_x);
inline jule::Str _208b19d40_toStr(jule::Ptr<_204b21664_FnIns> _21613_x);
inline jule::Str _208dc45a0_toStr(jule::Ptr<_204a2c62a_MapTypeDecl> _21613_x);
inline jule::Str _208dc9e13_toStr(jule::Ptr<_204a2b33d_TupleTypeDecl> _21613_x);
inline jule::Str _208ddd289_toStr(jule::Ptr<_204a2bdcc_ArrTypeDecl> _21613_x);
inline jule::Str _208de4779_toStr(jule::Ptr<_204a2b041_SlcTypeDecl> _21613_x);
inline jule::Str _208deac69_toStr(jule::Ptr<_204a2b63a_PtrTypeDecl> _21613_x);
inline jule::Str _208e01e3a_toStr(jule::Ptr<_204a2abab_SptrTypeDecl> _21613_x);
inline jule::Str _208e4d607_toStr(jule::Ptr<_204a313cb_VariadicExpr> _21613_x);
inline jule::Str _208e54344_toStr(jule::Ptr<_204b13788_SliceExprModel> _21613_x);
inline jule::Str _208e6e815_toStr(jule::Ptr<_204a33664_FieldExprPair> _21613_x);
inline jule::Str _208e781d1_toStr(jule::Ptr<_204a34c70_KeyValPair> _21613_x);
inline jule::Str _208ece930_toStr(jule::Ptr<_204a32b6e_FnCallExpr> _21613_x);
inline jule::Str _208ee732c_toStr(jule::Ptr<_204b12479_AllocStructLitExprModel> _21613_x);
inline jule::Str _20900a31d_toStr(jule::Ptr<_204b12a0c_CastingExprModel> _21613_x);
inline jule::Str _2090223e0_toStr(jule::Ptr<_204b162e6_StructStaticIdentExprModel> _21613_x);
inline jule::Str _2090250c4_toStr(jule::Ptr<_204a32058_SubIdentExpr> _21613_x);
inline jule::Str _209031cd4_toStr(jule::Ptr<_204b1217c_StructLitExprModel> _21613_x);
inline jule::Str _209053982_toStr(jule::Ptr<_204b1a10d_RuneExprModel> _21613_x);
inline jule::Str _20907671e_toStr(jule::Ptr<_204a4d2c7_StructIns> _21613_x);
inline jule::Str _2090b67e7_toStr(jule::Ptr<_204cda982_Type> _21613_x);
inline jule::Str _2090d886e_toStr(jule::Ptr<_204b166c0_ArrayExprModel> _21613_x);
inline jule::Str _20912291e_toStr(jule::Ptr<_204a2a4d5_SubIdentTypeDecl> _21613_x);
inline jule::Str _20912702d_toStr(jule::Ptr<_204a31002_UnaryExpr> _21613_x);
inline jule::Str _209131301_toStr(jule::Ptr<_204a29b11_TypeDecl> _21613_x);
inline jule::Str _20912b7d5_toStr(jule::Ptr<_204a31b7e_NamespaceExpr> _21613_x);
inline jule::Str _209142455_toStr(jule::Ptr<_204a2a8ae_NamespaceTypeDecl> _21613_x);
inline jule::Str _20917cbee_toStr(jule::Ptr<_204b1502b_SlicingExprModel> _21613_x);
inline jule::Str _2091e7eab_toStr(jule::Ptr<_204a3549b_SliceExpr> _21613_x);
inline jule::Str _209264005_toStr(jule::Ptr<_204b155ae_TraitSubIdentExprModel> _21613_x);
inline jule::Str _209313390_toStr(jule::Ptr<_204b14998_MapExprModel> _21613_x);
inline jule::Str _209323724_toStr(jule::Ptr<_204b141e5_AnonFnExprModel> _21613_x);
inline jule::Str _20932a7b4_toStr(jule::Ptr<_204a2e20e_RangeExpr> _21613_x);
inline jule::Str _20932d91b_toStr(jule::Ptr<_204a2edd0_LitExpr> _21613_x);
inline jule::Str _20932d586_toStr(jule::Ptr<_204a302a9_UnsafeExpr> _21613_x);
inline jule::Str _209336d0e_toStr(jule::Ptr<_204a35e08_IndexingExpr> _21613_x);
inline jule::Str _209339729_toStr(jule::Ptr<_204a36568_SlicingExpr> _21613_x);
inline jule::Str _2093398b1_toStr(jule::Ptr<_204a317a5_CastExpr> _21613_x);
inline jule::Str _20933c7a4_toStr(jule::Ptr<_204a33e8e_StructLit> _21613_x);
inline jule::Str _209346d96_toStr(jule::Ptr<_204a34445_BraceLit> _21613_x);
inline jule::Str _2093496d4_toStr(jule::Ptr<_204a3250e_BinaryExpr> _21613_x);
inline jule::Str _20949b9bd_toStr(jule::Ptr<_204b113ce_BinaryExprModel> _21613_x);
inline jule::Str _209634b12_toStr(jule::Ptr<_204b17490_BuiltinNewCallExprModel> _21613_x);
inline jule::Str _20964a4da_toStr(jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> _21613_x);
inline jule::Str _209680003_toStr(jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _21613_x);
inline jule::Str _209699b77_toStr(jule::Ptr<_204b187e3_BuiltinCapCallExprModel> _21613_x);
inline jule::Str _2096e60ad_toStr(jule::Ptr<_204b1976c_SizeofExprModel> _21613_x);
inline jule::Str _20970002e_toStr(jule::Ptr<_204b19e21_AlignofExprModel> _21613_x);
inline jule::Str _216a046cd_toStr(jule::Ptr<_2064e2693_ExceptionalForwardingExprModel> _21613_x);
inline jule::Str _216a3d140_toStr(jule::Ptr<_206506498_StrRuneIter> _21613_x);
inline jule::Str _216a484ad_toStr(jule::Ptr<_206505222_MutSlicingExprModel> _21613_x);
inline jule::Str _216a8396b_toStr(jule::Ptr<_2065060be_AppendToSliceExprModel> _21613_x);
inline jule::Str _216a86298_toStr(jule::Ptr<_206505be5_PushToSliceExprModel> _21613_x);
inline jule::Str _216aa5471_toStr(jule::Ptr<_206503e79_SwapExprModel> _21613_x);
inline jule::Str _216b11367_toStr(jule::Ptr<_206504353_EmptyCompareExprModel> _21613_x);
inline jule::Str _216b140e5_toStr(jule::Ptr<_206504b06_StrCompExprModel> _21613_x);
inline jule::Str _216b2206a_toStr(jule::Ptr<_206503bb0_StrConcatExprModel> _21613_x);
inline jule::Str _216b4905e_toStr(jule::Ptr<_20650551e_UnsafeBinaryExprModel> _21613_x);
inline jule::Str _216b70e43_toStr(jule::Ptr<_206506795_UnsafeDerefExprModel> _21613_x);
inline jule::Str _216b77851_toStr(jule::Ptr<_206504650_RefExprModel> _21613_x);
inline jule::Str _216b7be82_toStr(jule::Ptr<_204b11cd6_StructArgExprModel> _21613_x);
inline jule::Str _216b836b4_toStr(jule::Ptr<_206506a92_UnsafeCastingExprModel> _21613_x);
inline jule::Str _216b92bce_toStr(jule::Ptr<_2065039c3_FnCallIgnoreExceptionalExprModel> _21613_x);
inline jule::Str _216ba5395_toStr(jule::Ptr<_20650581b_UnsafeIndexingExprModel> _21613_x);
inline jule::Str _1d50359cc_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1d52bcc42_toStr(_1eeabb290_Builder _21613_x);
inline jule::Str _1d52c9633_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1d52cbe60_toStr(jule::Str _21613_x);
inline jule::Str _1d52d1706_toStr(jule::Str _21613_x);
inline void _1ee89bc30_rev(jule::Slice<jule::U8> _26912_b);
inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen);
inline jule::I32 __jule_runeCount(jule::Str _10514_s);
inline void _1ee89e518_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Bool _1ee8a04b4__coSpawn(void* _1020_func, void* _1035_args);
inline jule::U64 _1ee90211a_hash128to64(_1ee901c63_u128 _4316_sum);
inline jule::U64 _1ee902428_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1ee9026e2_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1ee902a33_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1ee902d74_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1ee9031e8_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1ee903627_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1ee903aab_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n);
inline _1ee901c63_u128 _1ee903e63_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1ee901c63_u128 _10342_seed);
inline _1ee901c63_u128 _1ee9045b2_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1ee901c63_u128 _1ee9049e1_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1ee901c63_u128 _1ee904e20_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1ee901c63_u128 _16048_seed);
inline jule::U64 _1ee9051d9_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1ee9e674d_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1ee9e6a5b_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1ee9e6d25_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1ee9e7166_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1ee9e73ec_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I32 _1ee9e76b6_numGroups(jule::I32 _7914_n);
inline jule::Array<jule::I8,8> _1ee9e78c5_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1ee9e7c9e_splitHash(jule::U64 _9414_h);
inline jule::U32 _1ee9e809b_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups);
inline jule::U32 _1ee9e8420_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I32 _1eecae939_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _1eecb00dd_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _1eecb0462_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1eecc7cc6_Getwd(void);
inline jule::Bool _200dbabba_IsLetter(jule::I32 _7613_r);
inline jule::Bool _200e317d0_is16(jule::Slice<_200e2ea42_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _200e31b54_is32(jule::Slice<_200e30070_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _200e3245c_isExcludingLatin(jule::Ptr<_200e304e3_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _200e3269e_IsUpper(jule::I32 _29512_r);
inline jule::I32 _200e32d97_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_200e2e58b_CaseRange> _31336_cr);
inline jule::Ptr<_200e2e58b_CaseRange> _200e3321b_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_200e2e58b_CaseRange> _33329_caseRange);
inline jule::I32 _200e334d5_SimpleFold(jule::I32 _37015_r);
inline jule::Str _200e338ae_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _200e33c22_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _200e34096_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _200e3454c_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _200e3488d_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _200e34cbc_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _200e35141_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _200e36928_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _200e36c9c_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _200e376c6_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _200e37d69_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Slice<jule::Str> _200e381dd_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _200e38562_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _200e390ce_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I32 _200e39453_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _200e3993c_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n);
inline jule::Str _200e39d6b_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _200e3aae7_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _200e3ae6b_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _200e3b576_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Bool _200e3ced4_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Bool _1eed698e5_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _1eed69c03_isSlash(jule::U8 _5312_c);
inline jule::U8 _1eed69ebc_toUpper(jule::U8 _5512_c);
inline jule::I32 _1eed6a594_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1eed6a85d_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _1eed6ab27_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _1eed6b001_abs(jule::Str _14612_path);
inline jule::Str _1eed6b243_join(jule::Slice<jule::Str> _1609_elem);
inline jule::Str _200e3e49c_Clean(jule::Str _10914_path);
inline jule::Str _200e3ea74_FromSlash(jule::Str _21214_path);
inline jule::Str _200e3edb5_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _200e4014b_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _200e40415_Abs(jule::Str _2468_path);
inline jule::Str _200e406ce_Base(jule::Str _25213_path);
inline jule::Str _200e40aa8_Dir(jule::Str _2838_path);
inline jule::Str _200e40cea_VolumeName(jule::Str _30115_path);
inline void _1eecb4103_appendEscapeArg(_1eeabb290_Builder* _10225_s, jule::Str _10246_arg);
inline jule::Str _1eecb43bc_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _1eecb4796_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I32 _1eecb49d8_cmdErrorFromCode(jule::I32 _20221_code);
inline jule::I32 _1eecb4be7_getLastCmdError(void);
inline jule::I32 _1eecb51ae_getLastFsErrorWindows(void);
inline jule::I32 _1eecb5742_getLastOsError(void);
inline jule::Bool _1eecbce53_isConsoleHandle(jule::Uintptr _9020_handle);
inline void _1eeccb02c_Exit(jule::I32 _119_code);
inline jule::Str _1eeccb291_Executable(void);
inline jule::Slice<jule::Str> _1eeccb45b_Args(void);
inline jule::Exceptional<jule::Str> _1eeccb8bd_Getwd(void);
inline jule::I32 _200e467e5_getLastFsError(void);
inline jule::Bool _1eea805a6_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1eea80881_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1eea80b4a_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1eeaca887_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args);
inline jule::Str _1eeacab95_argToStr(jule::Any _32613_arg);
inline jule::I32 _1eeacae5e_findNextFmt(jule::Str _33916_fmt);
inline jule::Str _1eeacb327_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args);
inline jule::Bool _1eeacc229_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1eeacd648_IsWindows(jule::Str _3714_os);
inline jule::Bool _1eeacd956_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1eeacdc20_IsLinux(jule::Str _4312_os);
inline jule::Bool _1eeace061_IsI386(jule::Str _4611_arch);
inline jule::Bool _1eeace2e7_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1eeace5b1_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1eeace87a_IsUnix(jule::Str _5511_os);
inline jule::Bool _1eeacec54_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1eeacee96_Is64Bit(jule::Str _6112_arch);
inline void _200e4851c_init(void);
inline jule::U32 _2019b2074_F32Bits(jule::F32 _4112_f);
inline jule::F32 _2019b2382_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _2019b264b_F64Bits(jule::F64 _5212_f);
inline jule::F64 _2019b298c_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _2019b5000_Frexp(jule::F64 _4714_f);
inline jule::F64 _2019ba467_NaN(void);
inline jule::Bool _2019ba775_IsNaN(jule::F64 _5210_f);
inline jule::F64 _2019baa3e_Inf(jule::I32 _618_sign);
inline jule::Bool _2019bae07_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _2019bb1c1_normalize(jule::F64 _8214_x);
inline jule::F64 _2019bcb95_Log(jule::F64 _1118_x);
inline jule::F64 _2019bd57a_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _2019c50ed_Modf(jule::F64 _449_f);
inline jule::F64 _2019c5906_Log2(jule::F64 _449_x);
inline jule::Str _2019ee4e0_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _2019eeac8_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _201a002d2_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _2019ed313_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _201a009a8_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _2019ede5c_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _201a00dc6_roundShortest(_201a119ec_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _2019ed313_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _201a0146a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _2019ede5c_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _201a01954_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _2019ede5c_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _201a02108_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _2019ed313_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _201a0278a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _2019ed313_floatInfo* _51232_flt);
inline jule::I32 _201a02b0e_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _201a02e83_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _201a03b21_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__201415ed4_ConvError _201a04094_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _201a044c3_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _201a04979_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _201a05617_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _201a05a02_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _201a07729_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _201a07a37_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _201a07d01_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _201a0984c_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _201a09c7b_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__201415ed4_ConvError _201a0a320_atofHex(_2019ed313_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__201415ed4_ConvError _201a0a6e9_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError _201a0a93b_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError _201a0acb0_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _201a0b134_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _201a0b95e_ryuFtoaFixed32(_2019ede5c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _201a0be04_ryuFtoaFixed64(_2019ede5c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _201a0c740_formatDecimal(_2019ede5c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _201a0cc18_ryuFtoaShortest(_2019ede5c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _2019ed313_floatInfo* _26168_flt);
inline jule::I32 _201a0ce9e_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _201a0d268_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _201a0d697_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _2019ed313_floatInfo* _3963_flt);
inline void _201a0dce6_ryuDigits(_2019ede5c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _201a0e467_ryuDigits32(_2019ede5c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _201a0e896_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _201a0ecc5_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _201a10149_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _201a10413_divmod1e9(jule::U64 _60214_x);
inline void _201a1334a_trim(_201a119ec_decimal* _27414_a);
inline void _201a13636_rightShift(_201a119ec_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _201a13adc_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _201a13d95_leftShift(_201a119ec_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _201a14219_shouldRoundUp(_201a119ec_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _201a158e1_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _201a15ca9_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _201a16073_Itoa(jule::I32 _819_i);
inline jule::Str _201a163b4_small(jule::I32 _8610_i);
inline jule::Bool _201a1664a_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _201a16bde_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _201a18a26_Throw(jule::Str _910_msg);
inline jule::Bool _204a14953_IsUnaryOp(jule::U32 _33314_id);
inline jule::Bool _204a14c61_IsBinOp(jule::U32 _34312_id);
inline jule::Bool _204a1536b_IsStr(jule::Str _36310_k);
inline jule::Bool _204a15602_IsRawStr(jule::Str _36613_k);
inline jule::Bool _204a158bb_IsRune(jule::Str _37011_k);
inline jule::Bool _204a162a1_IsFloat(jule::Str _37912_k);
inline jule::Bool _204a1656a_IsNum(jule::Str _38710_k);
inline jule::Bool _204a16aed_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _204a16db7_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _204a1744a_IsSpace(jule::I32 _41812_r);
inline jule::Bool _204a17945_IsLetter(jule::I32 _42813_r);
inline jule::Bool _204a17db8_IsKeyword(jule::Str _44814_s);
inline jule::Bool _204a18182_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _204a1844b_IsBinary(jule::I32 _46113_r);
inline jule::Bool _204a18715_IsOctal(jule::I32 _46412_r);
inline jule::Bool _204a189ce_IsHex(jule::I32 _46710_r);
inline jule::Bool _204a18c98_IsAssign(jule::U32 _48213_id);
inline jule::Bool _204a19062_IsPostfixOp(jule::U32 _49416_id);
inline jule::Bool _204a1932b_IsAssignOp(jule::U32 _50415_id);
inline _1eeaca425_Log _204a1cd46_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_204a19cbb_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _204a1d20e_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _204a1d583_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i);
inline jule::Str _204a1d94b_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i);
inline jule::Str _204a1dcc0_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i);
inline jule::Str _204a1e144_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i);
inline jule::Str _204a1e4b8_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i);
inline jule::Str _204a1e94c_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i);
inline jule::Str _204a1eb8e_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _204a1ee58_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _204a202cc_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i);
inline jule::Bool _204a20651_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i);
inline jule::Bool _204a209c5_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i);
inline jule::Bool _204a20d49_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i);
inline jule::Bool _204a211bd_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i);
inline jule::Str _204a216b8_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _204a21894_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _204a21be6_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n);
inline jule::Str _204a21eb0_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _204a22279_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _204a22543_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _204a2280c_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1eeaca425_Log> _204a27801_Lex(jule::Ptr<_204a19cbb_Fileset> _80712_f, jule::I32 _80725_mode);
inline void _204b0da5d_lshiftUnsig(_204a9d338_Const* _58821_c, _204a9d338_Const* _58832_x);
inline void _204b0dd8d_rshiftUnsig(_204a9d338_Const* _59421_c, _204a9d338_Const* _59432_x);
inline jule::Str _204b98961_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _204b98c2a_BitSizeOf(jule::Str _5914_k);
inline jule::Str _204b9906b_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _204b99302_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _204b995bb_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _204b9a1c1_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _204b9a48a_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _204b9a754_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I32 _204b9aa1d_BitSizeOfUint(jule::U64 _19718_x);
inline void _204b9abb6_UpdateTarget(void);
inline void _204b9ad3c_init(void);
inline jule::I64 _204b9e901_MinI(jule::Str _6113_k);
inline jule::I64 _204b9ec0e_MaxI(jule::Str _7913_k);
inline jule::U64 _204b9eec8_MaxU(jule::Str _9713_k);
inline jule::F64 _204ba0319_Min(jule::Str _11512_k);
inline jule::F64 _204ba05a0_Max(jule::Str _13312_k);
inline jule::Bool _204ba16c2_IsSigInt(jule::Str _2717_k);
inline jule::Bool _204ba19d0_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _204ba1c99_IsInt(jule::Str _4610_k);
inline jule::Bool _204ba20da_IsFloat(jule::Str _5112_k);
inline jule::Bool _204ba2371_IsNum(jule::Str _5610_k);
inline jule::Bool _204ba263a_IsSigNum(jule::Str _6113_k);
inline jule::Bool _204c2a84a_FindModuleFile(jule::Slice<_1eec71478_Dir>* _1420_dirents);
inline jule::Str _204c2ab25_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_1eeaca425_Log> _204c2adde_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _204c2b681_IsPub(jule::Str _910_ident);
inline jule::Bool _204c896de_IsAscii(jule::I32 _1112_r);
inline jule::I32 _204c71176_ToRune(jule::Str _2015_lit);
inline jule::Str _204c8b614_ToRawStr(jule::Str _3613_lit);
inline jule::Str _204c8b955_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _204c8bbdb_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _204c8c060_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _204c8c406_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _204d52752_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i);
inline jule::Slice<jule::U8> _204d592e7_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _204d595d3_FmtByDefault(_1eeabb290_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _204d59a01_applyFmtByDefault(_1eeabb290_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _204d59e1e_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1eeabb290_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _204d5a293_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _204d5c43d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_204b1d5a6_Fn> _2046da3c6_runtimeFindFn(jule::Ptr<_204c12139_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_204a4a46c_Struct> _2046da926_runtimeFindStruct(jule::Ptr<_204c12139_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _204b23941_parameterUsesGenerics(jule::Ptr<_204b2050e_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _39546_generics);
inline jule::Ptr<_204ca2b7a_Data> _204bc73c9_buildAsComptimeMethodData(jule::Ptr<_204b21664_FnIns>* _203035_f);
inline jule::Ptr<_204c12139_ImportInfo> _204bc75d8_findComptimePackage(jule::Ptr<_204c2e486_sema>* _203829_s);
inline jule::Ptr<_204ca2b7a_Data> _204bc795c_buildComptimeTypeInfoData(jule::Ptr<_204c2e486_sema>* _204435_s, jule::Ptr<_204cda982_Type>* _204450_t);
inline jule::Ptr<_204ca2b7a_Data> _204bc7c9d_buildComptimeValue(jule::Ptr<_204ca2b7a_Data>* _205228_d);
inline jule::Str _204bcaac5_toStrConstraints(jule::Ptr<_204cd909b_InsGeneric> _14321_g);
inline jule::Bool _204bcae8d_matchConstraint(jule::Str* _15421_c, jule::Ptr<_204cda982_Type>* _15434_g);
inline jule::Bool _204bcb257_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_204bd8929_scopeChecker> _204bcdb3e_newScopeCheckerBase(jule::Ptr<_204c2e486_sema>* _3229_s, jule::Ptr<_204b21664_FnIns> _3243_owner);
inline jule::Ptr<_204bd8929_scopeChecker> _204bce007_newScopeChecker(jule::Ptr<_204c2e486_sema>* _4025_s, jule::Ptr<_204b21664_FnIns> _4039_owner);
inline jule::Ptr<_204bd7560_scopeLabel> _204bce37b_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_204bd8929_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_204ca2b7a_Data>> _204bce6bc_getDatasFromTupleData(jule::Ptr<_204ca2b7a_Data>* _6231_d);
inline jule::Bool _204bcee3c_checkMut(jule::Ptr<_204c2e486_sema>* _9718_s, jule::Ptr<_204ca2b7a_Data>* _9729_left, jule::Ptr<_204ca2b7a_Data> _9746_right, jule::Ptr<_204a14216_Token> _9760_op);
inline jule::Bool _204bd0426_checkAssign(jule::Ptr<_204c2e486_sema>* _11621_s, jule::Ptr<_204ca2b7a_Data>* _11636_left, jule::Ptr<_204ca2b7a_Data> _11653_right, jule::Ptr<_204a14216_Token> _11667_op);
inline jule::Bool _204bd0800_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _204bd0a42_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U32 _204beb178_removeEqFromOp(jule::U32 _216719_op);
inline void _204beb3a9_makeComptimeRange(jule::Ptr<_204ca2b7a_Data>* _219627_d);
inline jule::Bool _204beb673_canComptimeMatch(jule::Ptr<_204ca2b7a_Data>* _221926_d);
inline jule::Bool _204beb93c_stmtIsDef(jule::Any* _222715_stmt);
inline jule::I32 _204bebcb1_countMatchType(jule::Ptr<_204bd59e2_Match>* _223920_m, jule::Ptr<_204cda982_Type>* _223932_t);
inline jule::Ptr<_204ce3193_TypeSym> _204c01975_buildType(jule::Ptr<_204a29b11_TypeDecl> _6918_t);
inline jule::Ptr<_204ca3d02_Value> _204c01c83_buildExpr(jule::Ptr<_204a2de45_Expr> _7818_expr);
inline jule::Ptr<_204cd9b90_TypeAlias> _204c0204c_buildTypeAlias(jule::Ptr<_204a4170a_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_204a47579_Field> _204c0238d_buildField(jule::Ptr<_204a44d29_FieldDecl> _9819_decl);
inline jule::Slice<jule::Ptr<_204a47579_Field>> _204c02624_buildFields(jule::Slice<jule::Ptr<_204a44d29_FieldDecl>>* _10921_decls);
inline jule::Ptr<_204a4a46c_Struct> _204c028dd_buildStruct(jule::Ptr<_204a45720_StructDecl> _11720_decl);
inline jule::Ptr<_204b1bad2_Param> _204c02ba7_buildParam(jule::Ptr<_204a3a44b_ParamDecl> _12919_decl);
inline jule::Slice<jule::Ptr<_204b1bad2_Param>> _204c03081_buildParams(jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>>* _14021_decls);
inline jule::Ptr<_204b1b51b_RetType> _204c032c3_buildRetType(jule::Ptr<_204a2ca04_RetTypeDecl> _14821_decl);
inline jule::Ptr<_204b1d5a6_Fn> _204c0358c_buildFunc(jule::Ptr<_204a3b89d_FnDecl> _15818_decl);
inline jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _204c03856_buildMethods(jule::Slice<jule::Ptr<_204a3b89d_FnDecl>>* _17622_decls);
inline jule::Slice<jule::Ptr<_204ce3193_TypeSym>> _204c03b20_buildTraitInherits(jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>* _18428_inherits);
inline jule::Ptr<_204b28cba_Trait> _204c03dd9_buildTrait(jule::Ptr<_204a45e5c_TraitDecl> _19219_decl);
inline jule::Ptr<_204b2a915_EnumItem> _204c041a3_buildEnumItem(jule::Ptr<_204a43014_EnumItemDecl> _20222_decl);
inline jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _204c0446c_buildEnumItems(jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>>* _21024_decls);
inline jule::Ptr<_204b2b471_Enum> _204c04967_buildEnum(jule::Ptr<_204a43ac5_EnumDecl> _21818_decl);
inline jule::Ptr<_204b2c5a4_TypeEnumItem> _204c04b43_buildTypeEnumItem(jule::Ptr<_204a44400_TypeEnumItemDecl> _22826_decl);
inline jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> _204c04dda_buildTypeEnumItems(jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>>* _23628_decls);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204c051a4_buildTypeEnum(jule::Ptr<_204a44a60_TypeEnumDecl> _24422_decl);
inline jule::Ptr<_204c5319c_Var> _204c0546d_buildVar(jule::Ptr<_204a3ca58_VarDecl> _25317_decl);
inline jule::Slice<jule::Ptr<_204c5319c_Var>> _204c05737_buildVars(jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _27018_decls);
inline jule::Ptr<_204bcbac6_Impl> _204c05a01_buildImpl(jule::Ptr<_204a465bc_Impl> _27818_decl);
inline jule::Bool _204c0c321_isImplicitImport(jule::Ptr<_204c12139_ImportInfo> _79121_imp);
inline jule::Ptr<_204b248a9_SymTab> _204c0e477_findVarFileInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _4430_files, jule::Ptr<_204c5319c_Var>* _4449_v);
inline jule::Ptr<_204c5319c_Var> _204c0e8ea_findVarInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_204cd9b90_TypeAlias> _204c0ed29_findTypeAliasInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_204a4a46c_Struct> _204c102d0_findStructInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_204b1d5a6_Fn> _204c106cb_findFnInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_204b28cba_Trait> _204c10a50_findTraitInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_204b2b471_Enum> _204c10dc4_findEnumInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_204b2cb7b_TypeEnum> _204c11358_findTypeEnumInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _204c16d86_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _204c2bd46_isValidModelForRef(jule::Any* _1528_m);
inline _1eeaca425_Log _204c2c374_compilerErr(jule::Ptr<_204a14216_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _204c2c660_appendRetVars(jule::Slice<jule::Ptr<_204c5319c_Var>>* _6323_dest, jule::Ptr<_204b21664_FnIns>* _6342_f);
inline void _204c2c990_appendParamVars(jule::Slice<jule::Ptr<_204c5319c_Var>>* _9325_dest, jule::Ptr<_204b21664_FnIns>* _9344_f);
inline void _204c2cc7b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>* _15334_dest, jule::Ptr<_204b21664_FnIns>* _15359_f);
inline jule::Ptr<_204b248a9_SymTab> _204c2d100_findFile(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _19418_files, jule::Ptr<_204a19cbb_Fileset>* _19437_handler);
inline void _204c2d496_pushSuggestion(_1eeaca425_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args);
inline void _204c51101_pushImplemented(jule::Ptr<_204b28cba_Trait> _279824_t, jule::Ptr<_204a4a46c_Struct>* _279840_d);
inline void _204c513dc_pushImplements(jule::Ptr<_204a4a46c_Struct>* _281624_s, jule::Ptr<_204b28cba_Trait> _281640_t);
inline void _204c5183d_pushRuntimeToStr(jule::Ptr<_204c2e486_sema>* _283426_s, jule::Ptr<_204cda982_Type>* _283441_t, jule::Ptr<_204a14216_Token>* _283456_token, jule::Ptr<_204c000b1_ReferenceStack> _28356_refers);
inline jule::Bool _204c51b07_isValidImpAlias(jule::Str _285224_alias);
inline jule::Bool _204c8ca55_traitHasReferenceReceiver(jule::Ptr<_204b28cba_Trait>* _1631_t);
inline jule::Bool _204c8ce1d_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_204ca2b7a_Data>* _3133_d);
inline jule::Bool _204c8d292_sigAssignable(jule::Str _3618_kind, jule::Ptr<_204ca2b7a_Data>* _3630_d);
inline jule::Bool _204c8d65a_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_204ca2b7a_Data>* _5932_d);
inline jule::Bool _204c8d9ce_intAssignable(jule::Str _8818_kind, jule::Ptr<_204ca2b7a_Data>* _8830_d);
inline void _204c99ec4_checkMutRiskOfStructLit(jule::Ptr<_204c2e486_sema>* _91333_s, jule::Ptr<_204b1217c_StructLitExprModel>* _91344_m);
inline jule::Ptr<_204cda982_Type> _204ca0ddc_lenKind(void);
inline jule::Bool _204ca123e_isGoodValueToInfer(jule::Ptr<_204ca2b7a_Data>* _141824_d);
inline jule::Ptr<_204a2902d_Directive> _204cd2209_findDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _436623_directives, jule::Str _436654_d);
inline jule::Any _204cd25c2_findBuiltinsImport(jule::Str* _437524_ident, jule::Ptr<_204c12139_ImportInfo> _437536_imp);
inline void _204cd2803_fitBitsize(jule::Ptr<_204ca2b7a_Data>* _438420_d);
inline void _204cd2b33_makeStructLitAlloc(jule::Ptr<_204ca2b7a_Data>* _441328_d, jule::Ptr<_204b1217c_StructLitExprModel>* _441343_lit);
inline jule::Ptr<_204c5319c_Var> _204cd2ea7_buildErrorVar(jule::Ptr<_204bd11d5_Scope>* _442423_s, jule::Ptr<_204a32b6e_FnCallExpr>* _442439_fc);
inline jule::Any _204cd332b_findBuiltinsSema(jule::Str* _443922_ident, jule::Ptr<_204c2e486_sema> _443938_s);
inline jule::Bool _204cd35e5_isOkForShifting(jule::Ptr<_204ca2b7a_Data>* _445425_d);
inline jule::Bool _204cd39be_isInstancedStruct(jule::Ptr<_204a4d2c7_StructIns> _447122_s);
inline jule::Bool _204cd3cbb_isPtrArithmeticCompatible(jule::Ptr<_204ca2b7a_Data>* _447535_l, jule::Ptr<_204ca2b7a_Data>* _447550_r);
inline void _204cd42c7_applyRuntimeToStr(jule::Ptr<_204c2e486_sema>* _449627_s, jule::Ptr<_204cda982_Type>* _449642_from, jule::Ptr<_204cda982_Type>* _449660_to, jule::Ptr<_204a14216_Token>* _44977_token, jule::Ptr<_204c000b1_ReferenceStack> _449733_refers);
inline void _204cd47d3_applyCastKindModel(jule::Ptr<_204c2e486_sema>* _451128_s, jule::Ptr<_204ca2b7a_Data>* _451143_d, jule::Ptr<_204cda982_Type>* _451158_t, jule::Ptr<_204a14216_Token>* _45127_token, jule::Ptr<_204c000b1_ReferenceStack> _451233_refers);
inline void _204cd4cde_applyCastKind(jule::Ptr<_204c2e486_sema>* _452223_s, jule::Ptr<_204ca2b7a_Data>* _452238_d, jule::Ptr<_204cda982_Type>* _452253_t, jule::Ptr<_204a14216_Token>* _45237_token, jule::Ptr<_204c000b1_ReferenceStack> _452333_refers);
inline jule::Ptr<_204ca2b7a_Data> _204cd4eed_buildVoidData(void);
inline jule::Str _204cd54d7_checkDataForIntegerIndexing(jule::Ptr<_204c2e486_sema>* _453437_s, jule::Ptr<_204ca2b7a_Data>* _453452_d, jule::Ptr<_204a14216_Token>* _45357_token, jule::Ptr<_204c000b1_ReferenceStack> _453533_refers);
inline void _204cd59e3_applyCastModelByEnum(jule::Ptr<_204c2e486_sema>* _456030_s, jule::Ptr<_204ca2b7a_Data>* _456045_d, jule::Ptr<_204b2b471_Enum> _456059_e, jule::Ptr<_204a14216_Token>* _45617_token, jule::Ptr<_204c000b1_ReferenceStack> _456133_refers);
inline void _204cd6010_castConstByType(jule::Str* _456821_t, jule::Ptr<_204ca2b7a_Data>* _456834_d);
inline void _204cd61db_updateModelToGenericIns(jule::Any* _460233_m, jule::Ptr<_204b21664_FnIns>* _460252_f);
inline jule::Bool _204cd6560_pushSubIdentFromExpr(jule::Any _461329_expr, jule::Ptr<_204a2a4d5_SubIdentTypeDecl>* _461355_t);
inline jule::Str _204cd6829_constoa(jule::Ptr<_204a9d338_Const>* _463613_c);
inline jule::Ptr<_204ca2b7a_Data> _204cd6dbd_evalEnumStatic(jule::Ptr<_204c2e486_sema>* _464724_s, jule::Ptr<_204b2b471_Enum>* _464739_enm, jule::Ptr<_204b2a915_EnumItem>* _464756_item, jule::Ptr<_204a14216_Token>* _46487_token, jule::Ptr<_204c000b1_ReferenceStack> _464833_refers);
inline jule::Ptr<_204b1217c_StructLitExprModel> _204cd7187_isLitBased(jule::Any* _466520_m);
inline void _204cd7473_makeImplicitDeref(jule::Ptr<_204ca2b7a_Data>* _468227_d, jule::Ptr<_204a14216_Token> _468241_baseToken);
inline void _2091507e8_updateRefer(jule::Ptr<_204c000b1_ReferenceStack> _469323_ref, jule::Ptr<_204b21664_FnIns>* _469346_old, jule::Ptr<_204b21664_FnIns>* _469359_new);
inline void _204cd7b05_makeVariadic(jule::Ptr<_204ca2b7a_Data>* _470122_d, jule::Ptr<_204cda982_Type> _470136_elem);
inline jule::Bool _204cd8034_isVarCaptured(jule::Ptr<_204bd8929_scopeChecker> _471518_r, jule::Ptr<_204bd8929_scopeChecker> _471540_s, jule::Ptr<_204c5319c_Var> _471558_v);
inline jule::Ptr<_204c12139_ImportInfo> _204cd83a8_findNamespace(jule::Trait _473222_lookup, jule::Str _473238_namespace);
inline jule::Bool _204d06b35_kindUsesGenerics(jule::Ptr<_204cda982_Type>* _172526_k, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _172537_generics);
inline jule::Bool _204d06eed_hasDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _173522_directives, jule::Str _173553_tag);
inline jule::Bool _204d072b7_canGetPtr(jule::Ptr<_204ca2b7a_Data>* _174419_d);
inline jule::Bool _204d07608_isBuiltinStrConvertable(jule::Ptr<_204cda982_Type>* _174733_t);
inline jule::Ptr<_204ce3a9a_Prim> _204d0788e_buildPrimType(jule::Str _175118_kind);
inline void _204d08164_applyImplicitCast(jule::Ptr<_204c2e486_sema>* _177927_s, jule::Ptr<_204cda982_Type>* _177942_dest, jule::Ptr<_204ca2b7a_Data>* _177960_d, jule::Ptr<_204a14216_Token>* _17807_token, jule::Ptr<_204c000b1_ReferenceStack> _178033_refers);
inline jule::Bool _204d0853d_validTypeForXof(jule::Ptr<_204cda982_Type>* _180925_t);
inline __jule_tuple_x_204b248a9_SymTab__jule_tuple_s_1eeaca425_Log _204d0b4b9_buildSymbols(jule::Ptr<_204a27c52_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_204c060b7_symBuilder> _1667_owner);
inline void _204d0b7e9_collectImplicitImports(jule::Ptr<_204c2e486_sema>* _3132_s, jule::Ptr<_204b248a9_SymTab>* _3147_file);
inline __jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log _204d0bc28_analyzePackage(jule::Slice<jule::Ptr<_204a27c52_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags);
inline __jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log _204d0c1ce_AnalyzePackage(jule::Slice<jule::Ptr<_204a27c52_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags);
inline jule::Ptr<_204b21664_FnIns> _204d5cd9a_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_204cd9b90_TypeAlias> _204d5d186_primTypeAlias(jule::Ptr<_204cda982_Type>* _5723_k);
inline jule::Ptr<_204c5319c_Var> _204d61a3b_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_204cd9b90_TypeAlias> _204d61d7c_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _204d62113_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _204d623cc_findBuiltinDefStdMem(jule::Str* _20426_ident);
inline jule::Any _204d62696_findBuiltinDefStdComptime(jule::Str* _22031_ident);
inline jule::Any _204d62a70_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident);
inline jule::Any _204d62d6c_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident);
inline jule::Ptr<_204ca2b7a_Data> _204d631e1_builtinCallerError(jule::Ptr<_204ca4b49_eval>* _27328_e, jule::Ptr<_204a32b6e_FnCallExpr>* _27343_fc);
inline jule::Ptr<_204ca2b7a_Data> _204d63620_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _30428_e, jule::Ptr<_204a32b6e_FnCallExpr>* _30443_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d63a4e_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _33130_e, jule::Ptr<_204a32b6e_FnCallExpr>* _33145_fc, jule::Ptr<_204ca2b7a_Data>* _33172_d);
inline jule::Ptr<_204ca2b7a_Data> _204d63e7d_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _34326_e, jule::Ptr<_204a32b6e_FnCallExpr>* _34341_fc, jule::Ptr<_204ca2b7a_Data>* _34368_d);
inline jule::Ptr<_204ca2b7a_Data> _204d643ac_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _39728_e, jule::Ptr<_204a32b6e_FnCallExpr>* _39743_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d647db_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _42327_e, jule::Ptr<_204a32b6e_FnCallExpr>* _42342_fc, jule::Ptr<_204ca2b7a_Data>* _42369_d);
inline jule::Ptr<_204ca2b7a_Data> _204d64e4b_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _47429_e, jule::Ptr<_204a32b6e_FnCallExpr>* _47444_fc, jule::Ptr<_204ca2b7a_Data>* _47471_d);
inline jule::Ptr<_204ca2b7a_Data> _204d65325_callerCopySlice(jule::Ptr<_204ca2b7a_Data>* _59425_dest, jule::Ptr<_204ca4b49_eval>* _59443_e, jule::Ptr<_204a32b6e_FnCallExpr>* _59458_fc, jule::Ptr<_204ca2b7a_Data>* _59485_d);
inline jule::Ptr<_204ca2b7a_Data> _204d65754_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _62827_e, jule::Ptr<_204a32b6e_FnCallExpr>* _62842_fc, jule::Ptr<_204ca2b7a_Data>* _62869_d);
inline jule::Ptr<_204ca2b7a_Data> _204d65ac8_callerLenSlice(jule::Ptr<_204ca2b7a_Data>* _65324_expr, jule::Ptr<_204ca2b7a_Data>* _65342_d);
inline jule::Ptr<_204ca2b7a_Data> _204d65e4c_callerLenMap(jule::Ptr<_204ca2b7a_Data>* _66122_expr, jule::Ptr<_204ca2b7a_Data>* _66140_d);
inline jule::Ptr<_204ca2b7a_Data> _204d662c1_callerLenArr(jule::Ptr<_204ca2b7a_Data>* _66922_expr, jule::Ptr<_204ca2b7a_Data>* _66940_d);
inline jule::Ptr<_204ca2b7a_Data> _204d66645_callerLenStr(jule::Ptr<_204ca2b7a_Data>* _67622_expr, jule::Ptr<_204ca2b7a_Data>* _67640_d);
inline jule::Ptr<_204ca2b7a_Data> _204d669b9_callerLenComptime(jule::Ptr<_204ca2b7a_Data>* _68927_d, jule::I32 _68937_n);
inline jule::Ptr<_204ca2b7a_Data> _204d66de8_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _69626_e, jule::Ptr<_204a32b6e_FnCallExpr>* _69641_fc, jule::Ptr<_204ca2b7a_Data>* _69668_d);
inline jule::Ptr<_204ca2b7a_Data> _204d6726c_callerCapSlice(jule::Ptr<_204ca2b7a_Data>* _73624_expr, jule::Ptr<_204ca2b7a_Data>* _73642_d);
inline jule::Ptr<_204ca2b7a_Data> _204d6769b_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _74426_e, jule::Ptr<_204a32b6e_FnCallExpr>* _74441_fc, jule::Ptr<_204ca2b7a_Data>* _74468_d);
inline jule::Ptr<_204ca2b7a_Data> _204d67b85_callerDeleteMap(jule::Ptr<_204ca4b49_eval>* _76725_e, jule::Ptr<_204a32b6e_FnCallExpr>* _76740_fc, jule::Ptr<_204ca2b7a_Data>* _76767_expr, jule::Ptr<_204ca2b7a_Data>* _76785_d);
inline jule::Ptr<_204ca2b7a_Data> _204d680b4_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _79629_e, jule::Ptr<_204a32b6e_FnCallExpr>* _79644_fc, jule::Ptr<_204ca2b7a_Data>* _79671_d);
inline jule::Ptr<_204ca2b7a_Data> _204d684e3_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _81940_e, jule::Ptr<_204a32b6e_FnCallExpr>* _81955_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d68922_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _85541_e, jule::Ptr<_204a32b6e_FnCallExpr>* _85556_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d68d51_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _87538_e, jule::Ptr<_204a32b6e_FnCallExpr>* _87553_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d694c2_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _88738_e, jule::Ptr<_204a32b6e_FnCallExpr>* _88753_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d69901_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _90039_e, jule::Ptr<_204a32b6e_FnCallExpr>* _90054_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d69d30_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _91343_e, jule::Ptr<_204a32b6e_FnCallExpr>* _91358_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d6a25e_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _97335_e, jule::Ptr<_204a32b6e_FnCallExpr>* _97350_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d6a68d_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _99836_e, jule::Ptr<_204a32b6e_FnCallExpr>* _99851_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d6aabc_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _102333_e, jule::Ptr<_204a32b6e_FnCallExpr>* _102348_fc, jule::Ptr<_204ca2b7a_Data>* );
inline jule::Ptr<_204ca2b7a_Data> _204d6aeeb_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _104644_e, jule::Ptr<_204a32b6e_FnCallExpr>* _104659_fc, jule::Ptr<_204ca2b7a_Data>* _104686_d);
inline jule::Ptr<_20561c4a0_FileInfo> _2056202b6_ParseFile(jule::Ptr<_204a19cbb_Fileset> _2318_f);
inline __jule_tuple_x_204a27c52_AST__jule_tuple_s_1eeaca425_Log _20566a630_parseFileset(jule::Ptr<_204a19cbb_Fileset> _5521_f);
inline jule::Ptr<_204a39c0e_ScopeTree> _20566aeb0_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _20566b345_isSt(jule::Ptr<_204a14216_Token> _149_current, jule::Ptr<_204a14216_Token> _1433_prev);
inline jule::Bool _20566b6b9_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_204a14216_Token>>* _2026_tokens, jule::I32* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _20566ba82_nextStPos(jule::Slice<jule::Ptr<_204a14216_Token>>* _3415_tokens, jule::I32 _3440_start);
inline __jule_tuple_sx_204a14216_Token__jule_tuple_bool _20566be06_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_204a14216_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_20566c236_stmt>> _20566c5dd_splitStmts(jule::Slice<jule::Ptr<_204a14216_Token>>* _11720_tokens);
inline jule::Bool _205685b34_isTypeOp(jule::U32* _87114_id);
inline jule::Bool _205685e42_isTypeRange(jule::Slice<jule::Ptr<_204a14216_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_204a14216_Token>> _20568620b_getBlockExpr(jule::Slice<jule::Ptr<_204a14216_Token>>* _91122_tokens);
inline __jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token _2056865c4_splitDelim(jule::Slice<jule::Ptr<_204a14216_Token>>* _94320_tokens, jule::U32 _94345_delim);
inline jule::I32 _20568688d_findLowestPrecOp(jule::Slice<jule::Ptr<_204a14216_Token>>* _98222_tokens);
inline jule::Ptr<_204a30760_IdentExpr> _205686b57_buildIdentExpr(jule::Ptr<_204a14216_Token>* _104724_token);
inline __jule_tuple_sx_204a14216_Token__jule_tuple_int _205686e21_getRangeExprTokens(jule::Slice<jule::Ptr<_204a14216_Token>>* _105528_tokens);
inline jule::Bool _2056872ea_isAnonFnHead(jule::Slice<jule::Ptr<_204a14216_Token>>* _107818_tokens);
inline jule::Bool _205687e99_checkAssignTokens(jule::Slice<jule::Ptr<_204a14216_Token>>* _1623_tokens);
inline _1eeaca425_Log _205688e56_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_204a19cbb_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_204a14216_Token>> _205689484_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_204a14216_Token>>* _3063_tokens);
inline __jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token _20568974d_rangeLast(jule::Slice<jule::Ptr<_204a14216_Token>>* _6019_tokens);
inline __jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log _205689c04_parts(jule::Slice<jule::Ptr<_204a14216_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust);
inline jule::U32 _205689e8a_getCloseOfBrace(jule::U32 _12820_left);
inline _1eeaca425_Log _20568a3b9_compilerErr(jule::Ptr<_204a14216_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _20568a760_pushSuggestion(_1eeaca425_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_204a29b11_TypeDecl> _20569b6c7_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _204decdc4_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _204de8232_checkArch(jule::Str _2814_arg);
inline void _204e1469e_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _204e14924_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _204e14c10_initVars(jule::Slice<jule::Str>* _5518_vars, _204e14380_CompileInfo* _5532_info);
inline jule::I32 _204e150c8_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _2056a0797_readBuff(jule::Str _1713_path);
inline _1eeaca425_Log _2056a0aa5_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_204b1d5a6_Fn> _204d6b31a_RuntimeFindFn(jule::Ptr<_204c12139_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_204a4a46c_Struct> _204d6b6d3_RuntimeFindStruct(jule::Ptr<_204c12139_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline jule::Uintptr _204d6c409_TypeData(jule::Any* _1414_m);
inline jule::Bool _204d6c7c2_equalConst(jule::Ptr<_204a9d338_Const> _1815_l, jule::Ptr<_204a9d338_Const> _1836_r);
inline jule::Bool _204d6cb46_equalCasting(jule::Ptr<_204b12a0c_CastingExprModel> _3717_l, jule::Ptr<_204b12a0c_CastingExprModel> _3745_r);
inline jule::Bool _204d6d00e_equalUnary(jule::Ptr<_204b117a8_UnaryExprModel> _4415_l, jule::Ptr<_204b117a8_UnaryExprModel> _4441_r);
inline jule::Bool _204d6d383_equalIndexing(jule::Ptr<_204b13c3e_IndexingExprModel> _5118_l, jule::Ptr<_204b13c3e_IndexingExprModel> _5147_r);
inline jule::Bool _204d6d707_equalBinary(jule::Ptr<_204b113ce_BinaryExprModel> _5616_l, jule::Ptr<_204b113ce_BinaryExprModel> _5643_r);
inline jule::Bool _204d6da7b_EqualModels(jule::Any _6716_l, jule::Any _6736_r);
inline void _2056a5390_pushPasses(jule::Ptr<_204c148ab_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _2056a5758_getAllUniquePasses(jule::Ptr<_204c148ab_Package>* _14028_pkg, jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _14053_uses);
inline _204e14380_CompileInfo _2056a5967_buildCompileInfo(void);
inline void _2056a5c20_pushRuntimeToAST(jule::Ptr<_204a27c52_AST>* _17926_f);
inline void _2056a643a_IterPackages(jule::Ptr<_2056a39dc_IR>* _722_ir, jule::Fn<void,jule::Ptr<_204c148ab_Package>*> _731_f);
inline void _2056a668d_IterFiles(jule::Ptr<_204c148ab_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_204b248a9_SymTab>*> _1640_f);
inline void _2056a6979_IterTraitMethods(jule::Ptr<_204b28cba_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_204b1d5a6_Fn>*> _2443_f);
inline jule::Bool _2056a8dee_IsForwarded(jule::Ptr<_204bd11d5_Scope>* _1217_s);
inline jule::Bool _2056a90ca_IsExprComesFromBind(jule::Ptr<_204ca2b7a_Data>* _2825_d);
inline jule::Bool _2056a9394_IsAny(jule::Ptr<_204cda982_Type>* _4015_t);
inline jule::Bool _2056a96d5_IsClosure(jule::Ptr<_204b141e5_AnonFnExprModel>* _4915_m);
inline jule::Bool _2056a996b_IsOpMethod(jule::Ptr<_204b1d5a6_Fn>* _5216_m);
inline jule::Bool _2056a9ce0_IsTraitMethod(jule::Ptr<_204a4d2c7_StructIns>* _6823_owner, jule::Ptr<_204b21664_FnIns>* _6849_f);
inline jule::Bool _2056aa164_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_204a2902d_Directive> _2056ab000_FindDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _2056ab3b8_HasDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::I32 _2056abe02_FindTraitTypeOffsetS(jule::Ptr<_204b28cba_Trait> _3925_t, jule::Ptr<_204a4d2c7_StructIns> _3946_s);
inline jule::I32 _2056ac276_FindTraitTypeOffset(jule::Ptr<_204b28cba_Trait> _6224_t, jule::Ptr<_204cda982_Type> _6245_k);
inline jule::Ptr<_204b21664_FnIns> _2056ac6a5_FindOperator(jule::Ptr<_204a4d2c7_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_204b21664_FnIns> _2056aca29_FindFnGenericInstance(jule::Ptr<_204b1d5a6_Fn>* _14731_f, jule::Slice<jule::Ptr<_204cda982_Type>> _14745_generics);
inline jule::Ptr<_204a4d2c7_StructIns> _2056acead_FindStructGenericInstance(jule::Ptr<_204a4a46c_Struct>* _16335_s, jule::Slice<jule::Ptr<_204cda982_Type>> _16353_generics);
inline jule::Ptr<_204c12139_ImportInfo> _2056ad2aa_SelectImport(jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _17821_imports, jule::Str _17851_linkpath);
inline jule::Bool _21685b865_isOrdered(jule::Ptr<_204c5319c_Var>* _1418_t, jule::Slice<jule::Ptr<_204c5319c_Var>> _1425_s);
inline jule::Bool _2168625e6_isOrdered(jule::Ptr<_204a4a46c_Struct>* _1418_t, jule::Slice<jule::Ptr<_204a4a46c_Struct>> _1425_s);
inline void _216858a4e_order(jule::Slice<jule::Ptr<_204c5319c_Var>> _3717_s);
inline void _216859632_order(jule::Slice<jule::Ptr<_204a4a46c_Struct>> _3717_s);
inline void _216a986d9_Reverse(jule::Slice<jule::Any> _7327_s);
inline void _1d5212637_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _216a972ed_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I32 _4230_r);
inline void _1d5211290_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r);
inline void _216a93706_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I32 _4831_r);
inline void _1d520c6ed_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r);
inline jule::Bool _216a91d97_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b);
inline jule::Bool _1d520adc2_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::Any> _216a8c59b_Insert(jule::Slice<jule::Any> _7226_s, jule::I32 _7232_i, jule::Slice<jule::Any> _7244_v);
inline jule::Slice<jule::U8> _1d5206a6b_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7244_v);
inline void _20682e2b5_EliminateDefines(jule::Ptr<_2056a39dc_IR>* _36526_ir);
inline jule::Bool _20682e5c3_isAllMethodsLive(jule::Ptr<_204a4a46c_Struct> _37121_s);
inline void _206833440_eliminateDeadCodeOfScope(jule::Ptr<_204bd11d5_Scope> _21833_s);
inline void _2068336b5_eliminateScopeFunctions(jule::Slice<jule::Ptr<_204b1d5a6_Fn>>* _23033_funcs);
inline void _2068338e6_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_204a4a46c_Struct>>* _23937_structs);
inline void _206833b9e_eliminateFunctionsScopePackage(jule::Ptr<_204c148ab_Package>* _24740_pkg);
inline void _206833d9c_eliminateScopePackage(jule::Ptr<_204c148ab_Package>* _25431_pkg);
inline void _2068340cd_EliminateScopes(jule::Ptr<_2056a39dc_IR>* _25925_ir);
inline void _206508b4e_possibleNilRemove(jule::Ptr<_206507b70_nils>* _7527_n, jule::Any _7537_m);
inline jule::Bool _206509017_isGuaranteedNonNilExpr(jule::Ptr<_206507b70_nils>* _8132_n, jule::Any _8142_m);
inline jule::Bool _2065092d1_isNilValidType(jule::Ptr<_204cda982_Type> _8923_t);
inline jule::Uintptr _206509622_getNilVar(jule::Any _9114_m);
inline jule::Bool _206706643_isConstantValidConditionalCase(jule::Ptr<_204bd1603_If>* _97036_i);
inline jule::Bool _206706951_isUnreachableExpr(jule::Any* _97923_expr);
inline jule::Bool _206706c1a_isConstantValidMatchCase(jule::Ptr<_204bd651a_Case>* _99430_case);
inline jule::Bool _20670705b_isUnreachableConditionalCase(jule::Ptr<_204bd1603_If>* _100334_i);
inline jule::Bool _2067072e2_isUnreachableMatchCase(jule::Ptr<_204bd651a_Case>* _100728_case);
inline __jule_tuple_bool__jule_tuple_u64 _20670e75b_checkForBitShiftOpt(jule::Ptr<_204b10dd4_OperandExprModel>* _91825_l, jule::Ptr<_204b10dd4_OperandExprModel>* _91854_r);
inline jule::Bool _20670eb24_areSameLvalueExprModel(jule::Any* _93528_l, jule::Any* _93549_r);
inline void _206711bd1_possibleDynamicRemove(jule::Ptr<_206710b47_dynamic>* _7631_d, jule::Any _7644_m);
inline jule::Bool _206711ede_isDynamicValidType(jule::Ptr<_204cda982_Type> _8227_t);
inline jule::Ptr<_204cda982_Type> _20671241d_isTypeGuaranteedDynamicData(jule::Ptr<_206710b47_dynamic>* _8437_dy, jule::Ptr<_204cda982_Type> _8455_t, jule::Any _8475_m);
inline jule::Uintptr _20671275e_getDynamicVar(jule::Any _11218_m);
inline void _216bcb663__removeDeads(jule::Ptr<_206715a2b_boundary>* _2340_alive, jule::Ptr<_206715a2b_boundary>* _2366_other, jule::Uintptr _2391_invalid);
inline void _216bcd500__removeDeads(jule::Ptr<_206507b70_nils>* _2340_alive, jule::Ptr<_206507b70_nils>* _2366_other, jule::Uintptr _2391_invalid);
inline void _216bd1ab9__removeDeads(jule::Ptr<_206710b47_dynamic>* _2340_alive, jule::Ptr<_206710b47_dynamic>* _2366_other, jule::Uintptr _2391_invalid);
inline jule::Bool _206716a93_isValidBoundaryInfo(jule::Any _8524_m);
inline jule::I32 _206716e5b_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9040_expr);
inline jule::Bool _2067172d0_fitsSize(jule::Any _9913_e1, jule::Any _9934_e2);
inline void _206717610_possibleBoundaryRemove(jule::Ptr<_206715a2b_boundary>* _12532_b, jule::Any _12546_model);
inline jule::Bool _2067178c9_isBoundaryRiskyType(jule::Ptr<_204cda982_Type> _13728_t);
inline jule::Bool _206717b93_isBoundaryValidType(jule::Ptr<_204cda982_Type> _14228_t);
inline jule::Uintptr _206717e5c_getBoundaryVar(jule::Any _14419_m);
inline void _20671bcc9_PushOptLevel(jule::I32 _4117_level);
inline void _206837983_detectEnabled(void);
inline jule::U64 _20690a9ce_unix(void);
inline jule::Bool _206842cbd_isCopyOptimizable(jule::Ptr<_204ca2b7a_Data>* _117223_expr);
inline jule::Bool _206843186_isIterCopyOptimizable(jule::Ptr<_204ca2b7a_Data>* _118327_expr, jule::Ptr<_204c5319c_Var>* _118347_v);
inline jule::Bool _2068435b5_captureVarHandling(jule::Ptr<_206915cc5_ObjectCoder>* _119028_oc, jule::Ptr<_204b141e5_AnonFnExprModel>* _119051_m, jule::Ptr<_204c5319c_Var>* _119083_v);
inline jule::Str _206855e68_decomposeCommonEsq(jule::U8 _193423_b);
inline jule::Str _206856276_sbtoa(jule::U8 _196110_b);
inline void _206856562_cstrBytes(_1eeabb290_Builder* _198119_s, jule::Str _198140_ctx);
inline void _206856892_cstrLit(_1eeabb290_Builder* _198717_s, jule::Str _198738_ctx);
inline void _206856c38_ftoa(_1eeabb290_Builder* _199314_s, jule::F64 _199335_f, jule::I32 _199343_bitsize);
inline void _206857024_itoa(_1eeabb290_Builder* _201114_s, jule::I64 _201135_x);
inline void _206857310_utoa(_1eeabb290_Builder* _202814_s, jule::U64 _202835_x);
inline void _20685795e_operatorOverloadingBinary(_1eeabb290_Builder* _204235_buf, jule::Ptr<_204a4d2c7_StructIns>* _204263_s, jule::Str* _204285_l, jule::Str* _20433_r, jule::U32 _204311_op, jule::Str _204326_kind);
inline jule::Slice<jule::U8> _20692381b_concatAllParts(jule::Slice<jule::Ptr<_204a14216_Token>> _137519_parts);
inline jule::Bool _206923b29_isHeadDecl(jule::Ptr<_204b1d5a6_Fn>* _139120_m);
inline jule::Bool _206923de3_defaultEq(jule::Ptr<_204a4d2c7_StructIns>* _139915_s);
inline jule::Bool _206932cd1_ableToInit(jule::Ptr<_204cda982_Type>* _45520_t);
inline jule::Bool _2069330ab_shouldInitialized(jule::Ptr<_204cda982_Type>* _46227_t);
inline void _200e50931_printErrorMessage(jule::Str _3022_msg);
inline void _200e50ba6_help(jule::Slice<jule::Str>* _3510_args);
inline void _200e50dd7_version(jule::Slice<jule::Str>* _6313_args);
inline void _200e510e6_toolDistos(void);
inline void _200e5125b_toolDistarch(void);
inline void _200e51459_tool(jule::Slice<jule::Str>* _9410_args);
inline void _200e5168a_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _200e519cb_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _200e51c1d_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _200e51db6_showInfo(void);
void _200e5203c_main(void);
inline void _200e527e0_enableVtp(void);
inline void _200e529aa_init(void);
inline void _206998d25_init(void);
inline jule::Ptr<_1eecb8305_File> _2069990de_openOutput(jule::Str* _3016_path);
inline void _206999287_clearObjects(void);
inline void _206999595_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _20699985e_isCppSourceFile(jule::Str _8620_path);
inline void _206999a90_pushCompCmdClang(_1eeabb290_Builder* _9426_cmd);
inline void _206999cc1_pushCompCmdGcc(_1eeabb290_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _20699a255_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_2056a39dc_IR>* _14636_ir);
inline jule::Str _20699a3dc_getCompilePath(void);
inline void _20699a61d_applyTargetIndependentOptimizations(jule::Ptr<_2056a39dc_IR>* _19245_ir);
inline void _20699a7b6_checkCompilerFlag(void);
inline void _20699a9c5_checkTargetArch(jule::Str _21420_arch);
inline void _20699ac06_checkTargetOs(jule::Str _22218_os);
inline void _20699ae37_checkTargetFlag(jule::Str* _23021_target);
inline void _20699b168_checkOptFlag(jule::Str* _25318_opt);
inline void _20699b531_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _20699b6eb_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _20699b90a_setupSemaFlags(jule::I32* _33024_flags);
inline jule::Ptr<_2056a39dc_IR> _20699bbc4_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _20699be05_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _204ba35c5_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_204ba2959_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i);
	void(*_204ba2cbc_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB);
	void(*_204ba31da_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB);
	jule::I32(*_204ba3471_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _204c0e136_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_204c0ceae_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_204c0d19b_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_204c0d4dc_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_204c12139_ImportInfo>(*_204c0d82d_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log(*_204c0dc29_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_204c0ded2_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c12139_ImportInfo> _4128__0);
};

struct _204cda4cb_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_204cda036_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_204cda377_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other);
};

struct _204d0a7d7_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_204c12139_ImportInfo>(*_204d08ac1_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _929_selector);
	jule::Ptr<_204c5319c_Var>(*_204d08ebc_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_204cd9b90_TypeAlias>(*_204d093b8_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_204a4a46c_Struct>(*_204d097b4_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_204b1d5a6_Fn>(*_204d09bb0_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_204b28cba_Trait>(*_204d0a001_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_204b2b471_Enum>(*_204d0a342_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_204b2cb7b_TypeEnum>(*_204d0a683_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _206991d40_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_206960209_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_20696034c_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_206960528_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_206991bec_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ba5ae4_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ba8d28_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204babaa6_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bb0417_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bb1c76_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bbc556_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bc0aed_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2056a108e_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a4d2c7_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b21664_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b28cba_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b2b471_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b2cb7b_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ba37e5_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ba4351_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ba7574_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204baa797_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bad5ad_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bb36e5_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bb97ea_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bbdec5_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bc2ddb_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204cda982_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ce3a9a_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ce75c6_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ce8099_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ce8b8d_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ce973d_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204cea3ba_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204cead8d_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206925103_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b248a9_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd8929_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204c12139_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204c148ab_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204c2e486_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d5272224_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d5275aa7_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d52792b4_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d527ca15_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d5281222_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204c5319c_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204cd9b90_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a4a46c_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1d5a6_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a47579_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a9d338_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b2a915_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1bad2_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd3c32_Label>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd11d5_Scope>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b19470_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204ca2b7a_Data>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1a482_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b181e9_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b16cb9_BuiltinPrintCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b170b6_BuiltinPrintlnCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b17869_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b19096_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b18bbc_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1a77e_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b133ae_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd1d1d_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd211a_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3decc_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd25c1_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3e8d4_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd301c_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd33a2_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd4392_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd476b_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd4c22_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a30760_IdentExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b13c3e_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd52a5_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd59e2_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd6c13_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd377b_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204bd70a9_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a39c0e_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3ca58_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a4170a_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2de45_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a40ebd_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3d6a2_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a40187_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a371e5_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a375be_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a385ae_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a424ca_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a378bb_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3ecad_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3ce32_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2e819_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a465bc_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a45720_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3b89d_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a45e5c_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a43ac5_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a44a60_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2bdcc_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2b041_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2b63a_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2abab_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2c62a_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2b33d_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2a21b_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a313cb_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b13788_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a33664_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a34c70_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2ea39_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b169bc_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a32b6e_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1a10d_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b166c0_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a32058_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2a4d5_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a31002_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a29b11_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a31b7e_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2a8ae_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1502b_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b12a0c_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3549b_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1217c_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b162e6_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b155ae_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b15e50_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b14998_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b141e5_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2e20e_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a2edd0_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a302a9_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a35e08_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a36568_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a317a5_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a33e8e_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a34445_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204a3250e_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b117a8_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b113ce_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b12479_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b17490_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b17d20_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b184e6_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b187e3_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b1976c_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b19e21_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2064e2693_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206506498_StrRuneIter>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206505222_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206505be5_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2065060be_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206503e79_SwapExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206504353_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206504b06_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206503bb0_StrConcatExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20650551e_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206506795_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206504650_RefExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_204b11cd6_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_206506a92_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2065039c3_FnCallIgnoreExceptionalExprModel>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20650581b_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator181(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_2083ee89a_208393344(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204ba6ae5_index(_self_.as<_204ba5ae4_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083ee89a_2083abca8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204ba9d18_index(_self_.as<_204ba8d28_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083ee89a_20839967a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204bacb2e_index(_self_.as<_204babaa6_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083ee89a_2083a0186(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204bb12e7_index(_self_.as<_204bb0417_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083ee89a_2083a84d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204bb2c66_index(_self_.as<_204bb1c76_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083ee89a_2083cd9ab(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204bbd546_index(_self_.as<_204bbc556_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083ee89a_2083c1edd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204ca2b7a_Data>* _1426_d, jule::I32 _1436_i) {
	_204bc1c0e_index(_self_.as<_204bc0aed_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_2083eee3e_208393344(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204ba6782_ready(_self_.as<_204ba5ae4_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_2083eee3e_2083abca8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204ba99a5_ready(_self_.as<_204ba8d28_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_2083eee3e_20839967a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204bac7bb_ready(_self_.as<_204babaa6_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_2083eee3e_2083a0186(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204bb0e84_ready(_self_.as<_204bb0417_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_2083eee3e_2083a84d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204bb2903_ready(_self_.as<_204bb1c76_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_2083eee3e_2083cd9ab(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204bbd1d3_ready(_self_.as<_204bbc556_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_2083eee3e_2083c1edd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c5319c_Var>* _1526_keyA, jule::Ptr<_204c5319c_Var>* _1543_keyB) {
	_204bc189b_ready(_self_.as<_204bc0aed_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_208400615_208393344(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204ba7013_step(_self_.as<_204ba5ae4_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_208400615_2083abca8(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204baa236_step(_self_.as<_204ba8d28_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_208400615_20839967a(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204bad04c_step(_self_.as<_204babaa6_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_208400615_2083a0186(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204bb1715_step(_self_.as<_204bb0417_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_208400615_2083a84d0(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204bb3184_step(_self_.as<_204bb1c76_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_208400615_2083cd9ab(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204bbd964_step(_self_.as<_204bbc556_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_208400615_2083c1edd(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_204c5319c_Var>* _1633_keyA, jule::Ptr<_204c5319c_Var>* _1650_keyB) {
	_204bc212c_step(_self_.as<_204bc0aed_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I32 __jule_trait_method_208400cec_208393344(jule::Ptr<jule::Uintptr> _self_) {
	return _204ba7299_len(_self_.as<_204ba5ae4_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_208400cec_2083abca8(jule::Ptr<jule::Uintptr> _self_) {
	return _204baa4bc_len(_self_.as<_204ba8d28_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_208400cec_20839967a(jule::Ptr<jule::Uintptr> _self_) {
	return _204bad2d3_len(_self_.as<_204babaa6_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_208400cec_2083a0186(jule::Ptr<jule::Uintptr> _self_) {
	return _204bb199b_len(_self_.as<_204bb0417_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_208400cec_2083a84d0(jule::Ptr<jule::Uintptr> _self_) {
	return _204bb341a_len(_self_.as<_204bb1c76_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_208400cec_2083cd9ab(jule::Ptr<jule::Uintptr> _self_) {
	return _204bbdbea_len(_self_.as<_204bbc556_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_208400cec_2083c1edd(jule::Ptr<jule::Uintptr> _self_) {
	return _204bc23b3_len(_self_.as<_204bc0aed_comptimeDecls>().alloc);
}
inline void __jule_trait_method_20840113d_2167b9b8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_2056a1b94_SetModPath(_self_.as<_2056a108e_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_20840158e_2167b9b8b(jule::Ptr<jule::Uintptr> _self_) {
	return _2056a1e2a_GetModPath(_self_.as<_2056a108e_Importer>().alloc);
}
inline jule::Str __jule_trait_method_20840199b_2167b9b8b(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _2056a226b_ModById(_self_.as<_2056a108e_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_204c12139_ImportInfo> __jule_trait_method_208401e63_2167b9b8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _2056a25ac_GetImport(_self_.as<_2056a108e_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log __jule_trait_method_20840254b_2167b9b8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _2056a29a8_ImportPackage(_self_.as<_2056a108e_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_208402e0e_2167b9b8b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204c12139_ImportInfo> _4128__0) {
	_2056a2c61_Imported(_self_.as<_2056a108e_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_2084033e8_208274ea1(jule::Ptr<jule::Uintptr> _self_) {
	return _204a4d67e_Str(_self_.as<_204a4d2c7_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208274324(jule::Ptr<jule::Uintptr> _self_) {
	return _204b219d8_Str(_self_.as<_204b21664_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20828c53a(jule::Ptr<jule::Uintptr> _self_) {
	return _204b291b6_Str(_self_.as<_204b28cba_Trait>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208261465(jule::Ptr<jule::Uintptr> _self_) {
	return _204b2b828_Str(_self_.as<_204b2b471_Enum>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20826858d(jule::Ptr<jule::Uintptr> _self_) {
	return _204b2d000_Str(_self_.as<_204b2cb7b_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083a6ce7(jule::Ptr<jule::Uintptr> _self_) {
	return _204ba3be1_Str(_self_.as<_204ba37e5_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208396611(jule::Ptr<jule::Uintptr> _self_) {
	return _204ba4708_Str(_self_.as<_204ba4351_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208393344(jule::Ptr<jule::Uintptr> _self_) {
	return _204ba5eac_Str(_self_.as<_204ba5ae4_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083b0075(jule::Ptr<jule::Uintptr> _self_) {
	return _204ba792b_Str(_self_.as<_204ba7574_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083abca8(jule::Ptr<jule::Uintptr> _self_) {
	return _204ba91d0_Str(_self_.as<_204ba8d28_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20839c947(jule::Ptr<jule::Uintptr> _self_) {
	return _204baab4e_Str(_self_.as<_204baa797_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20839967a(jule::Ptr<jule::Uintptr> _self_) {
	return _204bac06d_Str(_self_.as<_204babaa6_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083a3453(jule::Ptr<jule::Uintptr> _self_) {
	return _204bad965_Str(_self_.as<_204bad5ad_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083a0186(jule::Ptr<jule::Uintptr> _self_) {
	return _204bb06ae_Str(_self_.as<_204bb0417_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083a84d0(jule::Ptr<jule::Uintptr> _self_) {
	return _204bb212d_Str(_self_.as<_204bb1c76_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20829e162(jule::Ptr<jule::Uintptr> _self_) {
	return _204bb3a9c_Str(_self_.as<_204bb36e5_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083b30de(jule::Ptr<jule::Uintptr> _self_) {
	return _204bb9ba2_Str(_self_.as<_204bb97ea_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083cd9ab(jule::Ptr<jule::Uintptr> _self_) {
	return _204bbc90d_Str(_self_.as<_204bbc556_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083c52aa(jule::Ptr<jule::Uintptr> _self_) {
	return _204bbe37c_Str(_self_.as<_204bbdec5_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083c1edd(jule::Ptr<jule::Uintptr> _self_) {
	return _204bc11d6_Str(_self_.as<_204bc0aed_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2083b8c3d(jule::Ptr<jule::Uintptr> _self_) {
	return _204bc3293_Str(_self_.as<_204bc2ddb_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20825229c(jule::Ptr<jule::Uintptr> _self_) {
	return _204cdad7d_Str(_self_.as<_204cda982_Type>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208256614(jule::Ptr<jule::Uintptr> _self_) {
	return _204ce3e1e_Str(_self_.as<_204ce3a9a_Prim>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20825ce23(jule::Ptr<jule::Uintptr> _self_) {
	return _204ce797d_Str(_self_.as<_204ce75c6_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208272993(jule::Ptr<jule::Uintptr> _self_) {
	return _204ce8561_Str(_self_.as<_204ce8099_Slc>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2082da159(jule::Ptr<jule::Uintptr> _self_) {
	return _204ce9045_Str(_self_.as<_204ce8b8d_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_2082d85db(jule::Ptr<jule::Uintptr> _self_) {
	return _204ce9ae5_Str(_self_.as<_204ce973d_Map>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_208271046(jule::Ptr<jule::Uintptr> _self_) {
	return _204cea772_Str(_self_.as<_204cea3ba_Arr>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_20825e6d8(jule::Ptr<jule::Uintptr> _self_) {
	return _204ceb245_Str(_self_.as<_204cead8d_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_2084033e8_1d4b82937(jule::Ptr<jule::Uintptr> _self_) {
	return _2069254dd_Str(_self_.as<_206925103_customType>().alloc);
}
inline jule::Bool __jule_trait_method_20840376c_208274ea1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204a4d9c0_Equal(_self_.as<_204a4d2c7_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208274324(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204b21d29_Equal(_self_.as<_204b21664_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20828c53a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204b29507_Equal(_self_.as<_204b28cba_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208261465(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204b2bb69_Equal(_self_.as<_204b2b471_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20826858d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204b2d341_Equal(_self_.as<_204b2cb7b_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083a6ce7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ba4032_Equal(_self_.as<_204ba37e5_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208396611(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ba4a49_Equal(_self_.as<_204ba4351_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208393344(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ba62ed_Equal(_self_.as<_204ba5ae4_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083b0075(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ba7c6c_Equal(_self_.as<_204ba7574_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083abca8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ba9521_Equal(_self_.as<_204ba8d28_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20839c947(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204baae90_Equal(_self_.as<_204baa797_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20839967a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bac3ae_Equal(_self_.as<_204babaa6_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083a3453(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204badca6_Equal(_self_.as<_204bad5ad_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083a0186(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bb0a00_Equal(_self_.as<_204bb0417_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083a84d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bb246e_Equal(_self_.as<_204bb1c76_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20829e162(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bb3ddd_Equal(_self_.as<_204bb36e5_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083b30de(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bb9ee3_Equal(_self_.as<_204bb97ea_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083cd9ab(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bbcc4e_Equal(_self_.as<_204bbc556_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083c52aa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bbe6bd_Equal(_self_.as<_204bbdec5_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083c1edd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bc1527_Equal(_self_.as<_204bc0aed_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2083b8c3d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204bc35d4_Equal(_self_.as<_204bc2ddb_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20825229c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204cdb1be_Equal(_self_.as<_204cda982_Type>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208256614(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ce4260_Equal(_self_.as<_204ce3a9a_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20825ce23(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ce7cbe_Equal(_self_.as<_204ce75c6_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208272993(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ce88a2_Equal(_self_.as<_204ce8099_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2082da159(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ce9386_Equal(_self_.as<_204ce8b8d_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_2082d85db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ce9e36_Equal(_self_.as<_204ce973d_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_208271046(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ceaab3_Equal(_self_.as<_204cea3ba_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_20825e6d8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _204ceb586_Equal(_self_.as<_204cead8d_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_20840376c_1d4b82937(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	return _20692582e_Equal(_self_.as<_206925103_customType>(), _3818_other);
}
inline jule::Ptr<_204c12139_ImportInfo> __jule_trait_method_208403cde_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _929_selector) {
	return _204b24dc6_SelectPackage(_self_.as<_204b248a9_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_204c12139_ImportInfo> __jule_trait_method_208403cde_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _929_selector) {
	return _204bd8e02_SelectPackage(_self_.as<_204bd8929_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_204c12139_ImportInfo> __jule_trait_method_208403cde_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _929_selector) {
	return _204c12656_SelectPackage(_self_.as<_204c12139_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_204c12139_ImportInfo> __jule_trait_method_208403cde_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _929_selector) {
	return _204c14d84_SelectPackage(_self_.as<_204c148ab_Package>().alloc, _929_selector);
}
inline jule::Ptr<_204c12139_ImportInfo> __jule_trait_method_208403cde_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _929_selector) {
	return _204c2e95e_SelectPackage(_self_.as<_204c2e486_sema>().alloc, _929_selector);
}
inline jule::Ptr<_204c5319c_Var> __jule_trait_method_208404b69_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _204b252c2_FindVar(_self_.as<_204b248a9_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_204c5319c_Var> __jule_trait_method_208404b69_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _204bd92ed_FindVar(_self_.as<_204bd8929_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_204c5319c_Var> __jule_trait_method_208404b69_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _204c12a52_FindVar(_self_.as<_204c12139_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_204c5319c_Var> __jule_trait_method_208404b69_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _204c15280_FindVar(_self_.as<_204c148ab_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_204c5319c_Var> __jule_trait_method_208404b69_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _204c2ed5a_FindVar(_self_.as<_204c2e486_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_204cd9b90_TypeAlias> __jule_trait_method_208405241_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _204b256bd_FindTypeAlias(_self_.as<_204b248a9_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_204cd9b90_TypeAlias> __jule_trait_method_208405241_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _204bd96e9_FindTypeAlias(_self_.as<_204bd8929_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_204cd9b90_TypeAlias> __jule_trait_method_208405241_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _204c12e4d_FindTypeAlias(_self_.as<_204c12139_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_204cd9b90_TypeAlias> __jule_trait_method_208405241_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _204c1567b_FindTypeAlias(_self_.as<_204c148ab_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_204cd9b90_TypeAlias> __jule_trait_method_208405241_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _204c30256_FindTypeAlias(_self_.as<_204c2e486_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_204a4a46c_Struct> __jule_trait_method_20840584b_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _204b25ab9_FindStruct(_self_.as<_204b248a9_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_204a4a46c_Struct> __jule_trait_method_20840584b_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _204bd9ae5_FindStruct(_self_.as<_204bd8929_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_204a4a46c_Struct> __jule_trait_method_20840584b_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _204c13349_FindStruct(_self_.as<_204c12139_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_204a4a46c_Struct> __jule_trait_method_20840584b_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _204c15a77_FindStruct(_self_.as<_204c148ab_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_204a4a46c_Struct> __jule_trait_method_20840584b_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _204c30652_FindStruct(_self_.as<_204c2e486_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_204b1d5a6_Fn> __jule_trait_method_208405e56_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _204b25eb5_FindFn(_self_.as<_204b248a9_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_204b1d5a6_Fn> __jule_trait_method_208405e56_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _204bd9ee1_FindFn(_self_.as<_204bd8929_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_204b1d5a6_Fn> __jule_trait_method_208405e56_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _204c13745_FindFn(_self_.as<_204c12139_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_204b1d5a6_Fn> __jule_trait_method_208405e56_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _204c15e73_FindFn(_self_.as<_204c148ab_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_204b1d5a6_Fn> __jule_trait_method_208405e56_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _204c30a4d_FindFn(_self_.as<_204c2e486_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_204b28cba_Trait> __jule_trait_method_208406561_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _204b26306_FindTrait(_self_.as<_204b248a9_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_204b28cba_Trait> __jule_trait_method_208406561_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _204bda332_FindTrait(_self_.as<_204bd8929_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_204b28cba_Trait> __jule_trait_method_208406561_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _204c13a86_FindTrait(_self_.as<_204c12139_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_204b28cba_Trait> __jule_trait_method_208406561_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _204c162b4_FindTrait(_self_.as<_204c148ab_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_204b28cba_Trait> __jule_trait_method_208406561_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _204c30d8e_FindTrait(_self_.as<_204c2e486_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_204b2b471_Enum> __jule_trait_method_208406ab1_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _204b26647_FindEnum(_self_.as<_204b248a9_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_204b2b471_Enum> __jule_trait_method_208406ab1_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _204bda673_FindEnum(_self_.as<_204bd8929_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_204b2b471_Enum> __jule_trait_method_208406ab1_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _204c13dc7_FindEnum(_self_.as<_204c12139_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_204b2b471_Enum> __jule_trait_method_208406ab1_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _204c16605_FindEnum(_self_.as<_204c148ab_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_204b2b471_Enum> __jule_trait_method_208406ab1_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _204c311d0_FindEnum(_self_.as<_204c2e486_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_204b2cb7b_TypeEnum> __jule_trait_method_208407111_2082772b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _204b26988_FindTypeEnum(_self_.as<_204b248a9_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_204b2cb7b_TypeEnum> __jule_trait_method_208407111_20834be79(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _204bda9b4_FindTypeEnum(_self_.as<_204bd8929_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_204b2cb7b_TypeEnum> __jule_trait_method_208407111_2082788de(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _204c14218_FindTypeEnum(_self_.as<_204c12139_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_204b2cb7b_TypeEnum> __jule_trait_method_208407111_208279714(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _204c16946_FindTypeEnum(_self_.as<_204c148ab_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_204b2cb7b_TypeEnum> __jule_trait_method_208407111_2082767bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _204c31521_FindTypeEnum(_self_.as<_204c2e486_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1d5283246_1d5272224(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5272510_Name(_self_.as<_1d5272224_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5283246_1d5275aa7(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5275733_Name(_self_.as<_1d5275aa7_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5283246_1d52792b4(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5278e40_Name(_self_.as<_1d52792b4_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5283246_1d527ca15(jule::Ptr<jule::Uintptr> _self_) {
	return _1d527c691_Name(_self_.as<_1d527ca15_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5283246_1d5281222(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5280d9d_Name(_self_.as<_1d5281222_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d5283334_1d5272224(jule::Ptr<jule::Uintptr> _self_) {
	return _1d52728d9_Short(_self_.as<_1d5272224_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d5283334_1d5275aa7(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5276129_Short(_self_.as<_1d5275aa7_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d5283334_1d52792b4(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5279836_Short(_self_.as<_1d52792b4_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d5283334_1d527ca15(jule::Ptr<jule::Uintptr> _self_) {
	return _1d527d087_Short(_self_.as<_1d527ca15_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d5283334_1d5281222(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5281794_Short(_self_.as<_1d5281222_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5284c09_1d5272224(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5272653_What(_self_.as<_1d5272224_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5284c09_1d5275aa7(jule::Ptr<jule::Uintptr> _self_) {
	return _1d5275d93_What(_self_.as<_1d5275aa7_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5284c09_1d52792b4(jule::Ptr<jule::Uintptr> _self_) {
	return _1d52795a0_What(_self_.as<_1d52792b4_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5284c09_1d527ca15(jule::Ptr<jule::Uintptr> _self_) {
	return _1d527cd01_What(_self_.as<_1d527ca15_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d5284c09_1d5281222(jule::Ptr<jule::Uintptr> _self_) {
	return _1d528150d_What(_self_.as<_1d5281222_Flag>().alloc);
}
inline void __jule_trait_method_1d5285116_1d5272224(jule::Ptr<jule::Uintptr> _self_) {
	_1d5272796_Reset(_self_.as<_1d5272224_Flag>().alloc);
}
inline void __jule_trait_method_1d5285116_1d5275aa7(jule::Ptr<jule::Uintptr> _self_) {
	_1d5275ed6_Reset(_self_.as<_1d5275aa7_Flag>().alloc);
}
inline void __jule_trait_method_1d5285116_1d52792b4(jule::Ptr<jule::Uintptr> _self_) {
	_1d52796e3_Reset(_self_.as<_1d52792b4_Flag>().alloc);
}
inline void __jule_trait_method_1d5285116_1d527ca15(jule::Ptr<jule::Uintptr> _self_) {
	_1d527ce44_Reset(_self_.as<_1d527ca15_Flag>().alloc);
}
inline void __jule_trait_method_1d5285116_1d5281222(jule::Ptr<jule::Uintptr> _self_) {
	_1d5281651_Reset(_self_.as<_1d5281222_Flag>().alloc);
}


static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._204ba2959_index=__jule_trait_method_2083ee89a_208393344,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_208393344,
	._204ba31da_step=__jule_trait_method_208400615_208393344,
	._204ba3471_len=__jule_trait_method_208400cec_208393344,
};
static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._204ba2959_index=__jule_trait_method_2083ee89a_2083abca8,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_2083abca8,
	._204ba31da_step=__jule_trait_method_208400615_2083abca8,
	._204ba3471_len=__jule_trait_method_208400cec_2083abca8,
};
static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._204ba2959_index=__jule_trait_method_2083ee89a_20839967a,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_20839967a,
	._204ba31da_step=__jule_trait_method_208400615_20839967a,
	._204ba3471_len=__jule_trait_method_208400cec_20839967a,
};
static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._204ba2959_index=__jule_trait_method_2083ee89a_2083a0186,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_2083a0186,
	._204ba31da_step=__jule_trait_method_208400615_2083a0186,
	._204ba3471_len=__jule_trait_method_208400cec_2083a0186,
};
static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._204ba2959_index=__jule_trait_method_2083ee89a_2083a84d0,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_2083a84d0,
	._204ba31da_step=__jule_trait_method_208400615_2083a84d0,
	._204ba3471_len=__jule_trait_method_208400cec_2083a84d0,
};
static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._204ba2959_index=__jule_trait_method_2083ee89a_2083cd9ab,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_2083cd9ab,
	._204ba31da_step=__jule_trait_method_208400615_2083cd9ab,
	._204ba3471_len=__jule_trait_method_208400cec_2083cd9ab,
};
static _204ba35c5_comptimeRangeKindMptrData _204ba35c5_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._204ba2959_index=__jule_trait_method_2083ee89a_2083c1edd,
	._204ba2cbc_ready=__jule_trait_method_2083eee3e_2083c1edd,
	._204ba31da_step=__jule_trait_method_208400615_2083c1edd,
	._204ba3471_len=__jule_trait_method_208400cec_2083c1edd,
};
static _204c0e136_ImporterMptrData _204c0e136_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._204c0ceae_SetModPath=__jule_trait_method_20840113d_2167b9b8b,
	._204c0d19b_GetModPath=__jule_trait_method_20840158e_2167b9b8b,
	._204c0d4dc_ModById=__jule_trait_method_20840199b_2167b9b8b,
	._204c0d82d_GetImport=__jule_trait_method_208401e63_2167b9b8b,
	._204c0dc29_ImportPackage=__jule_trait_method_20840254b_2167b9b8b,
	._204c0ded2_Imported=__jule_trait_method_208402e0e_2167b9b8b,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._204cda036_Str=__jule_trait_method_2084033e8_208274ea1,
	._204cda377_Equal=__jule_trait_method_20840376c_208274ea1,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._204cda036_Str=__jule_trait_method_2084033e8_208274324,
	._204cda377_Equal=__jule_trait_method_20840376c_208274324,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._204cda036_Str=__jule_trait_method_2084033e8_20828c53a,
	._204cda377_Equal=__jule_trait_method_20840376c_20828c53a,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._204cda036_Str=__jule_trait_method_2084033e8_208261465,
	._204cda377_Equal=__jule_trait_method_20840376c_208261465,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._204cda036_Str=__jule_trait_method_2084033e8_20826858d,
	._204cda377_Equal=__jule_trait_method_20840376c_20826858d,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._204cda036_Str=__jule_trait_method_2084033e8_2083a6ce7,
	._204cda377_Equal=__jule_trait_method_20840376c_2083a6ce7,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._204cda036_Str=__jule_trait_method_2084033e8_208396611,
	._204cda377_Equal=__jule_trait_method_20840376c_208396611,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._204cda036_Str=__jule_trait_method_2084033e8_208393344,
	._204cda377_Equal=__jule_trait_method_20840376c_208393344,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._204cda036_Str=__jule_trait_method_2084033e8_2083b0075,
	._204cda377_Equal=__jule_trait_method_20840376c_2083b0075,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._204cda036_Str=__jule_trait_method_2084033e8_2083abca8,
	._204cda377_Equal=__jule_trait_method_20840376c_2083abca8,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._204cda036_Str=__jule_trait_method_2084033e8_20839c947,
	._204cda377_Equal=__jule_trait_method_20840376c_20839c947,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._204cda036_Str=__jule_trait_method_2084033e8_20839967a,
	._204cda377_Equal=__jule_trait_method_20840376c_20839967a,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._204cda036_Str=__jule_trait_method_2084033e8_2083a3453,
	._204cda377_Equal=__jule_trait_method_20840376c_2083a3453,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._204cda036_Str=__jule_trait_method_2084033e8_2083a0186,
	._204cda377_Equal=__jule_trait_method_20840376c_2083a0186,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._204cda036_Str=__jule_trait_method_2084033e8_2083a84d0,
	._204cda377_Equal=__jule_trait_method_20840376c_2083a84d0,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._204cda036_Str=__jule_trait_method_2084033e8_20829e162,
	._204cda377_Equal=__jule_trait_method_20840376c_20829e162,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._204cda036_Str=__jule_trait_method_2084033e8_2083b30de,
	._204cda377_Equal=__jule_trait_method_20840376c_2083b30de,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._204cda036_Str=__jule_trait_method_2084033e8_2083cd9ab,
	._204cda377_Equal=__jule_trait_method_20840376c_2083cd9ab,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._204cda036_Str=__jule_trait_method_2084033e8_2083c52aa,
	._204cda377_Equal=__jule_trait_method_20840376c_2083c52aa,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._204cda036_Str=__jule_trait_method_2084033e8_2083c1edd,
	._204cda377_Equal=__jule_trait_method_20840376c_2083c1edd,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._204cda036_Str=__jule_trait_method_2084033e8_2083b8c3d,
	._204cda377_Equal=__jule_trait_method_20840376c_2083b8c3d,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._204cda036_Str=__jule_trait_method_2084033e8_20825229c,
	._204cda377_Equal=__jule_trait_method_20840376c_20825229c,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._204cda036_Str=__jule_trait_method_2084033e8_208256614,
	._204cda377_Equal=__jule_trait_method_20840376c_208256614,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._204cda036_Str=__jule_trait_method_2084033e8_20825ce23,
	._204cda377_Equal=__jule_trait_method_20840376c_20825ce23,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._204cda036_Str=__jule_trait_method_2084033e8_208272993,
	._204cda377_Equal=__jule_trait_method_20840376c_208272993,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._204cda036_Str=__jule_trait_method_2084033e8_2082da159,
	._204cda377_Equal=__jule_trait_method_20840376c_2082da159,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._204cda036_Str=__jule_trait_method_2084033e8_2082d85db,
	._204cda377_Equal=__jule_trait_method_20840376c_2082d85db,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._204cda036_Str=__jule_trait_method_2084033e8_208271046,
	._204cda377_Equal=__jule_trait_method_20840376c_208271046,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._204cda036_Str=__jule_trait_method_2084033e8_20825e6d8,
	._204cda377_Equal=__jule_trait_method_20840376c_20825e6d8,
};
static _204cda4cb_KindMptrData _204cda4cb_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._204cda036_Str=__jule_trait_method_2084033e8_1d4b82937,
	._204cda377_Equal=__jule_trait_method_20840376c_1d4b82937,
};
static _204d0a7d7_LookupMptrData _204d0a7d7_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._204d08ac1_SelectPackage=__jule_trait_method_208403cde_2082772b1,
	._204d08ebc_FindVar=__jule_trait_method_208404b69_2082772b1,
	._204d093b8_FindTypeAlias=__jule_trait_method_208405241_2082772b1,
	._204d097b4_FindStruct=__jule_trait_method_20840584b_2082772b1,
	._204d09bb0_FindFn=__jule_trait_method_208405e56_2082772b1,
	._204d0a001_FindTrait=__jule_trait_method_208406561_2082772b1,
	._204d0a342_FindEnum=__jule_trait_method_208406ab1_2082772b1,
	._204d0a683_FindTypeEnum=__jule_trait_method_208407111_2082772b1,
};
static _204d0a7d7_LookupMptrData _204d0a7d7_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._204d08ac1_SelectPackage=__jule_trait_method_208403cde_20834be79,
	._204d08ebc_FindVar=__jule_trait_method_208404b69_20834be79,
	._204d093b8_FindTypeAlias=__jule_trait_method_208405241_20834be79,
	._204d097b4_FindStruct=__jule_trait_method_20840584b_20834be79,
	._204d09bb0_FindFn=__jule_trait_method_208405e56_20834be79,
	._204d0a001_FindTrait=__jule_trait_method_208406561_20834be79,
	._204d0a342_FindEnum=__jule_trait_method_208406ab1_20834be79,
	._204d0a683_FindTypeEnum=__jule_trait_method_208407111_20834be79,
};
static _204d0a7d7_LookupMptrData _204d0a7d7_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._204d08ac1_SelectPackage=__jule_trait_method_208403cde_2082788de,
	._204d08ebc_FindVar=__jule_trait_method_208404b69_2082788de,
	._204d093b8_FindTypeAlias=__jule_trait_method_208405241_2082788de,
	._204d097b4_FindStruct=__jule_trait_method_20840584b_2082788de,
	._204d09bb0_FindFn=__jule_trait_method_208405e56_2082788de,
	._204d0a001_FindTrait=__jule_trait_method_208406561_2082788de,
	._204d0a342_FindEnum=__jule_trait_method_208406ab1_2082788de,
	._204d0a683_FindTypeEnum=__jule_trait_method_208407111_2082788de,
};
static _204d0a7d7_LookupMptrData _204d0a7d7_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._204d08ac1_SelectPackage=__jule_trait_method_208403cde_208279714,
	._204d08ebc_FindVar=__jule_trait_method_208404b69_208279714,
	._204d093b8_FindTypeAlias=__jule_trait_method_208405241_208279714,
	._204d097b4_FindStruct=__jule_trait_method_20840584b_208279714,
	._204d09bb0_FindFn=__jule_trait_method_208405e56_208279714,
	._204d0a001_FindTrait=__jule_trait_method_208406561_208279714,
	._204d0a342_FindEnum=__jule_trait_method_208406ab1_208279714,
	._204d0a683_FindTypeEnum=__jule_trait_method_208407111_208279714,
};
static _204d0a7d7_LookupMptrData _204d0a7d7_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._204d08ac1_SelectPackage=__jule_trait_method_208403cde_2082767bb,
	._204d08ebc_FindVar=__jule_trait_method_208404b69_2082767bb,
	._204d093b8_FindTypeAlias=__jule_trait_method_208405241_2082767bb,
	._204d097b4_FindStruct=__jule_trait_method_20840584b_2082767bb,
	._204d09bb0_FindFn=__jule_trait_method_208405e56_2082767bb,
	._204d0a001_FindTrait=__jule_trait_method_208406561_2082767bb,
	._204d0a342_FindEnum=__jule_trait_method_208406ab1_2082767bb,
	._204d0a683_FindTypeEnum=__jule_trait_method_208407111_2082767bb,
};
static _206991d40_CommonFlagMptrData _206991d40_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._206960209_Name=__jule_trait_method_1d5283246_1d5272224,
	._20696034c_Short=__jule_trait_method_1d5283334_1d5272224,
	._206960528_What=__jule_trait_method_1d5284c09_1d5272224,
	._206991bec_Reset=__jule_trait_method_1d5285116_1d5272224,
};
static _206991d40_CommonFlagMptrData _206991d40_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._206960209_Name=__jule_trait_method_1d5283246_1d5275aa7,
	._20696034c_Short=__jule_trait_method_1d5283334_1d5275aa7,
	._206960528_What=__jule_trait_method_1d5284c09_1d5275aa7,
	._206991bec_Reset=__jule_trait_method_1d5285116_1d5275aa7,
};
static _206991d40_CommonFlagMptrData _206991d40_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._206960209_Name=__jule_trait_method_1d5283246_1d52792b4,
	._20696034c_Short=__jule_trait_method_1d5283334_1d52792b4,
	._206960528_What=__jule_trait_method_1d5284c09_1d52792b4,
	._206991bec_Reset=__jule_trait_method_1d5285116_1d52792b4,
};
static _206991d40_CommonFlagMptrData _206991d40_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._206960209_Name=__jule_trait_method_1d5283246_1d527ca15,
	._20696034c_Short=__jule_trait_method_1d5283334_1d527ca15,
	._206960528_What=__jule_trait_method_1d5284c09_1d527ca15,
	._206991bec_Reset=__jule_trait_method_1d5285116_1d527ca15,
};
static _206991d40_CommonFlagMptrData _206991d40_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._206960209_Name=__jule_trait_method_1d5283246_1d5281222,
	._20696034c_Short=__jule_trait_method_1d5283334_1d5281222,
	._206960528_What=__jule_trait_method_1d5284c09_1d5281222,
	._206991bec_Reset=__jule_trait_method_1d5285116_1d5281222,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _207a01b90_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _206c0977d_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _206c0c264_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _206c1976b_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _206c09b57_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _206beddb0_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _206c1cebc_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_204c5319c_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_204cd9b90_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_204a4a46c_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_204b1d5a6_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_204b28cba_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_204b2b471_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_204b2cb7b_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_204a47579_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_204a9d338_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_204b2a915_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_204b1bad2_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type18_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type18_to_str(void *alloc) noexcept { return _20867b6a4_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_any_type18_eq, .to_str=__jule_any_type18_to_str};
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_204bd3c32_Label> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_204bd11d5_Scope> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_204b19470_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_204ca2b7a_Data> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_204b1a482_BackendEmitExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_204b16cb9_BuiltinPrintCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_204b170b6_BuiltinPrintlnCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_204b17869_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_204b19096_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_204b1a77e_FreeExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_204b133ae_FnCallExprModel> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_204bd1d1d_Conditional> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_204bd211a_InfIter> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_204a3decc_WhileKind> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_204bd25c1_WhileIter> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_204a3e8d4_RangeKind> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_204bd301c_RangeIter> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_204bd33a2_ContSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_204bd4392_GotoSt> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_204bd476b_Postfix> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_204bd4c22_Assign> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_204a30760_IdentExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_204b13c3e_IndexingExprModel> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_204bd52a5_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_204bd59e2_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_204bd6c13_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_204bd377b_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_204bd70a9_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_204a39c0e_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_204a3ca58_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_204a4170a_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_204a2de45_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_204a40ebd_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_204a3d6a2_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_204a40187_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_204a371e5_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_204a375be_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_204a385ae_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_204a424ca_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_204a378bb_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_204a3ecad_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_204a3ce32_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_204a2e819_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_204a4d2c7_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_204b21664_FnIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_204a465bc_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_204a45720_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_204a3b89d_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_204a45e5c_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_204a43ac5_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_204a44a60_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_204a2bdcc_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_204a2b041_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_204a2b63a_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_204a2abab_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_204a2c62a_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_204a2b33d_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_204a2a21b_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_204a313cb_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_204b13788_SliceExprModel> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_204a33664_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_204a34c70_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_204a2ea39_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_204b169bc_TupleExprModel> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_204a32b6e_FnCallExpr> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_204b1a10d_RuneExprModel> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_204cda982_Type> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_204b166c0_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_204a32058_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_204a2a4d5_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_204a31002_UnaryExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_204a29b11_TypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_204a31b7e_NamespaceExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_204a2a8ae_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_204b1502b_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_204b12a0c_CastingExprModel> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_204a3549b_SliceExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_204b1217c_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_204b162e6_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_204b155ae_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_204b15e50_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_204b14998_MapExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_204b141e5_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_204a2e20e_RangeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_204a2edd0_LitExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_204a302a9_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_204a35e08_IndexingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_204a36568_SlicingExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_204a317a5_CastExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_204a33e8e_StructLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_204a34445_BraceLit> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_204a3250e_BinaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_204b117a8_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_204b113ce_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_204b12479_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_204b17490_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_204b184e6_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_204b187e3_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_204b1976c_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_204b19e21_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_2064e2693_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_206506498_StrRuneIter> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_206505222_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_206505be5_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_2065060be_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_206503e79_SwapExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_206504353_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_206504b06_StrCompExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_206503bb0_StrConcatExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_20650551e_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_206506795_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_206504650_RefExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_204b11cd6_StructArgExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_206506a92_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_2065039c3_FnCallIgnoreExceptionalExprModel> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator172, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<_20650581b_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type138 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _207a0cccd_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _207a450e0_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _206c12995_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _207da287b_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _206c1cb48_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _206c0436b_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _206c020a0_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _206c14dd7_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
jule::Bool __jule_any_type147_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type147_to_str(void *alloc) noexcept { return _206c17329_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type147{.dealloc=__jule_type_deallocator181, .eq=__jule_any_type147_eq, .to_str=__jule_any_type147_to_str};
inline jule::Bool __jule_anon2084e5122(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b2050e_ParamIns> _25021_p1, jule::Ptr<_204b2050e_ParamIns> _25036_p2);
struct __jule_anon_2085609b7_ctx{
	jule::Ptr<_204ba4351_comptimeStructField> _self_;
};
static void __jule_anon_2085609b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2085609b7_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085609b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _6521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _6536_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208562942_ctx{
	jule::Ptr<_204ba4351_comptimeStructField> _self_;
};
static void __jule_anon_208562942_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208562942_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208562942(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _7221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _7236_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2085764a0_ctx{
	jule::Ptr<_204ba7574_comptimeStatic> _self_;
};
static void __jule_anon_2085764a0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2085764a0_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085764a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _17821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _17836_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20857842a_ctx{
	jule::Ptr<_204ba7574_comptimeStatic> _self_;
};
static void __jule_anon_20857842a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20857842a_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20857842a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _18521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _18536_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20858988c_ctx{
	jule::Ptr<_204baa797_comptimeEnumField> _self_;
};
static void __jule_anon_20858988c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20858988c_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20858988c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _28321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _28336_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2085a1651_ctx{
	jule::Ptr<_204bad5ad_comptimeParam> _self_;
};
static void __jule_anon_2085a1651_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2085a1651_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085a1651(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _40221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _40236_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2085a35cb_ctx{
	jule::Ptr<_204bad5ad_comptimeParam> _self_;
};
static void __jule_anon_2085a35cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2085a35cb_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085a35cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _40921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _40936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2085a5556_ctx{
	jule::Ptr<_204bad5ad_comptimeParam> _self_;
};
static void __jule_anon_2085a5556_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2085a5556_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085a5556(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _41621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _41636_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208640019_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208640019_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208640019_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208640019(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _97421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _97436_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208641e94_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208641e94_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208641e94_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208641e94(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _98121_e, jule::Ptr<_204a32b6e_FnCallExpr>* _98136_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208643e1e_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208643e1e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208643e1e_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208643e1e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _98821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _98836_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208645d99_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208645d99_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208645d99_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208645d99(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _99521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _99536_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208647d24_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208647d24_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208647d24_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208647d24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _100221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _100236_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208649c9e_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208649c9e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208649c9e_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208649c9e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _100921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _100936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20864bc29_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_20864bc29_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20864bc29_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20864bc29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _101621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _101636_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20864dba4_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_20864dba4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20864dba4_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20864dba4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _102321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _102336_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208650c72_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208650c72_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208650c72_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208650c72(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _103021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _103036_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208652bec_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208652bec_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208652bec_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208652bec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _103721_e, jule::Ptr<_204a32b6e_FnCallExpr>* _103736_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208654b77_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208654b77_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208654b77_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208654b77(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _104421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _104436_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208656b02_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208656b02_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208656b02_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208656b02(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _105121_e, jule::Ptr<_204a32b6e_FnCallExpr>* _105136_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208658a7c_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208658a7c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208658a7c_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208658a7c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _105821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _105836_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20865aa07_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_20865aa07_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20865aa07_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20865aa07(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _106521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _106536_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20865c982_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_20865c982_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20865c982_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20865c982(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _107221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _107236_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20865e90c_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_20865e90c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20865e90c_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20865e90c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _107921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _107936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208661887_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208661887_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208661887_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208661887(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _108621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _108636_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208663812_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_208663812_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208663812_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208663812(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _109321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _109336_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20866578c_ctx{
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_;
};
static void __jule_anon_20866578c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20866578c_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20866578c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _110021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _110036_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2086968cd_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_2086968cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2086968cd_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086968cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _126221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _126236_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208698858_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_208698858_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208698858_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208698858(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _126921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _126936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20869a7d3_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_20869a7d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20869a7d3_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20869a7d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _127621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _127636_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20869c75d_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_20869c75d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20869c75d_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20869c75d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _128321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _128336_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20869e6d8_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_20869e6d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20869e6d8_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20869e6d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _129021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _129036_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2086a1663_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_2086a1663_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2086a1663_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086a1663(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _129721_e, jule::Ptr<_204a32b6e_FnCallExpr>* _129736_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2086a35dd_ctx{
	jule::Ptr<_204bb97ea_comptimeValue> _self_;
};
static void __jule_anon_2086a35dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2086a35dd_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086a35dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _130421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _130436_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2086b8306_ctx{
	jule::Ptr<_204bbdec5_comptimeFile> _self_;
};
static void __jule_anon_2086b8306_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2086b8306_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086b8306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _142921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _142936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2086ba281_ctx{
	jule::Ptr<_204bbdec5_comptimeFile> _self_;
};
static void __jule_anon_2086ba281_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2086ba281_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086ba281(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _143621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _143636_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2086bc20b_ctx{
	jule::Ptr<_204bbdec5_comptimeFile> _self_;
};
static void __jule_anon_2086bc20b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2086bc20b_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086bc20b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _144321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _144336_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_2087310e9_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_2087310e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_2087310e9_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2087310e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _194921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _194936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208733074_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208733074_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208733074_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208733074(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _195621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _195636_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208734eee_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208734eee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208734eee_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208734eee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _196321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _196336_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208736e79_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208736e79_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208736e79_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208736e79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _197021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _197036_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208738e04_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208738e04_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208738e04_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208738e04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _197721_e, jule::Ptr<_204a32b6e_FnCallExpr>* _197736_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20873ad7e_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_20873ad7e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20873ad7e_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20873ad7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _198421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _198436_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20873cd09_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_20873cd09_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20873cd09_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20873cd09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _199121_e, jule::Ptr<_204a32b6e_FnCallExpr>* _199136_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20873ec84_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_20873ec84_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20873ec84_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20873ec84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _199821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _199836_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208741d52_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208741d52_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208741d52_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208741d52(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _200521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _200536_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208743ccc_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208743ccc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208743ccc_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208743ccc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _201221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _201236_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_208745c57_ctx{
	jule::Ptr<_204bc2ddb_comptimeDecl> _self_;
};
static void __jule_anon_208745c57_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208745c57_ctx>().dealloc(); }
inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208745c57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _201921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _201936_fc, jule::Ptr<_204ca2b7a_Data>* );
struct __jule_anon_20875202c_ctx{
	jule::Ptr<_204bc97c7_constraintChecker> _self_;
};
static void __jule_anon_20875202c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20875202c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_20875202c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _6415_sema, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>* _6433_generics);
struct __jule_anon_208a68ca0_ctx{
	jule::Ptr<_204c12139_ImportInfo> *_48628_pkg;
};
static void __jule_anon_208a68ca0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208a68ca0_ctx>().dealloc(); }
inline jule::Bool __jule_anon_208a68ca0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c12139_ImportInfo> _48735_spkg);
struct __jule_anon_208b7a103_ctx{
	jule::Ptr<_204b21664_FnIns> _82743_f;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _82811_generics;
	jule::Slice<jule::Ptr<_204cda982_Type>> *_82759_ignored;
};
static void __jule_anon_208b7a103_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208b7a103_ctx>().dealloc(); }
inline jule::Bool __jule_anon_208b7a103(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _83442_sema);
struct __jule_anon_208b930c7_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*> _93046_algo;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _9357_generics;
};
static void __jule_anon_208b930c7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208b930c7_ctx>().dealloc(); }
inline jule::Bool __jule_anon_208b930c7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _93742_sema);
struct __jule_anon_208b95a69_ctx{
	jule::Ptr<_204b21664_FnIns> _94637_f;
	jule::Ptr<_204c2e486_sema> _self_;
};
static void __jule_anon_208b95a69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_208b95a69_ctx>().dealloc(); }
inline jule::Bool __jule_anon_208b95a69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _95037_sema, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>* _95055_generics);
inline jule::Str __jule_anon20952c213(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_216942ce2_ctx{
	jule::Ptr<_20682b0d6_ObjectDeadCode> _self_;
};
static void __jule_anon_216942ce2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_216942ce2_ctx>().dealloc(); }
inline void __jule_anon_216942ce2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _19031_file);
struct __jule_anon_216999200_ctx{
	_206834793_exprDeadCode *_self_;
};
static void __jule_anon_216999200_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_216999200_ctx>().dealloc(); }
inline void __jule_anon_216999200(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_216ae777c_ctx{
	jule::Ptr<jule::Bool> _687__check;
	jule::Ptr<_2067084e1_exprOptimizer> _527_exop;
};
static void __jule_anon_216ae777c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_216ae777c_ctx>().dealloc(); }
inline void __jule_anon_216ae777c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m);
struct __jule_anon_216b206ea_ctx{
	jule::Ptr<_206503bb0_StrConcatExprModel> _2777_model;
	jule::Fn<void,jule::Any> *_2814__step;
};
static void __jule_anon_216b206ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_216b206ea_ctx>().dealloc(); }
inline void __jule_anon_216b206ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _28213_m);
struct __jule_anon_216bb33b4_ctx{
	_2067084e1_exprOptimizer *_self_;
};
static void __jule_anon_216bb33b4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_216bb33b4_ctx>().dealloc(); }
inline void __jule_anon_216bb33b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _90247_m);
struct __jule_anon_1d4b9b38a_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1d4b9b38a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4b9b38a_ctx>().dealloc(); }
inline void __jule_anon_1d4b9b38a(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4b9ed94_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
	jule::Ptr<_204bd301c_RangeIter> *_9336_it;
};
static void __jule_anon_1d4b9ed94_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4b9ed94_ctx>().dealloc(); }
inline void __jule_anon_1d4b9ed94(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4bbe3d0_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
};
static void __jule_anon_1d4bbe3d0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4bbe3d0_ctx>().dealloc(); }
inline void __jule_anon_1d4bbe3d0(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4bc18bb_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
};
static void __jule_anon_1d4bc18bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4bc18bb_ctx>().dealloc(); }
inline void __jule_anon_1d4bc18bb(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4bda61b_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
};
static void __jule_anon_1d4bda61b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4bda61b_ctx>().dealloc(); }
inline void __jule_anon_1d4bda61b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4c747d7_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
};
static void __jule_anon_1d4c747d7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4c747d7_ctx>().dealloc(); }
inline void __jule_anon_1d4c747d7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4c75b18_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
	jule::Ptr<_204bd59e2_Match> _75730_m;
};
static void __jule_anon_1d4c75b18_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4c75b18_ctx>().dealloc(); }
inline void __jule_anon_1d4c75b18(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d4ceb0cd_ctx{
	jule::Ptr<_206839897_scopeCoder> _self_;
	jule::Ptr<_204b141e5_AnonFnExprModel> _112734_m;
};
static void __jule_anon_1d4ceb0cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d4ceb0cd_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d4ceb0cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c5319c_Var> _113367_v);
struct __jule_anon_1d51837c8_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d51837c8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51837c8_ctx>().dealloc(); }
inline void __jule_anon_1d51837c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _83538_pkg);
struct __jule_anon_1d51985ac_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
	jule::Ptr<_204c5319c_Var> _92024_v;
};
static void __jule_anon_1d51985ac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51985ac_ctx>().dealloc(); }
inline void __jule_anon_1d51985ac(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d519a69c_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
	jule::Ptr<_204c5319c_Var> _92024_v;
};
static void __jule_anon_1d519a69c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d519a69c_ctx>().dealloc(); }
inline void __jule_anon_1d519a69c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d519cda8_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d519cda8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d519cda8_ctx>().dealloc(); }
inline void __jule_anon_1d519cda8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d519e052_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
	jule::Ptr<_204c5319c_Var> _92024_v;
};
static void __jule_anon_1d519e052_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d519e052_ctx>().dealloc(); }
inline void __jule_anon_1d519e052(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d51dd217_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d51dd217_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51dd217_ctx>().dealloc(); }
inline void __jule_anon_1d51dd217(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _118238_pkg);
struct __jule_anon_1d51de647_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d51de647_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51de647_ctx>().dealloc(); }
inline void __jule_anon_1d51de647(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _120531_file);
struct __jule_anon_1d51eaa82_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d51eaa82_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51eaa82_ctx>().dealloc(); }
inline void __jule_anon_1d51eaa82(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _124438_pkg);
struct __jule_anon_1d5200c63_ctx{
	jule::Ptr<_206914235_traitHash> _12777_hash;
};
static void __jule_anon_1d5200c63_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d5200c63_ctx>().dealloc(); }
inline void __jule_anon_1d5200c63(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn>* _128136_m);
struct __jule_anon_1d520333c_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d520333c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d520333c_ctx>().dealloc(); }
inline void __jule_anon_1d520333c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _129538_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1d5297a41(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1d52a0719(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon208554329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c12139_ImportInfo> _203925_pkg);
struct __jule_anon_20903ca7b_ctx{
	jule::Str _473238_namespace;
};
static void __jule_anon_20903ca7b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_20903ca7b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_20903ca7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c12139_ImportInfo> _473330_imp);
struct __jule_anon_1d51846db_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d51846db_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51846db_ctx>().dealloc(); }
inline void __jule_anon_1d51846db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _83632_file);
struct __jule_anon_1d51de12a_ctx{
	jule::Ptr<_204c148ab_Package> *_118238_pkg;
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d51de12a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d51de12a_ctx>().dealloc(); }
inline void __jule_anon_1d51de12a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _118332_file);
struct __jule_anon_1d5204250_ctx{
	jule::Ptr<_206915cc5_ObjectCoder> _self_;
};
static void __jule_anon_1d5204250_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d5204250_ctx>().dealloc(); }
inline void __jule_anon_1d5204250(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _129632_file);
jule::Array<jule::Array<jule::Str,2>,5> _200e50755_HelpMap;
jule::Str _2069985b6_OutDir;
jule::Str _20699895c_OutName;
jule::Str _206998b6b_Out;
jule::Uintptr _1ee74dc8b_STDIN;
jule::Uintptr _1ee74e033_STDOUT;
jule::Uintptr _1ee74e330_STDERR;
jule::Array<jule::U8,256> _1ee884157_first;
jule::Array<_1ee88470c_acceptRange,16> _1ee884aa3_acceptRanges;
jule::Array<jule::U8,32> _1ee9d7794__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1ee9d7d7c__DE_BRUIJN64_TAB;
jule::I32 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_200e304e3_RangeTable> _200dbcc99__L;
jule::Ptr<_200e304e3_RangeTable> _200dbdbac__LU;
jule::Ptr<_200e304e3_RangeTable> _200dc4b91_Letter;
jule::Ptr<_200e304e3_RangeTable> _200dcae61_Upper;
jule::Slice<_200e2e58b_CaseRange> _200e28651__CaseRanges;
jule::Array<jule::U8,256> _200e2893c__PROPERTIES;
jule::Array<jule::U16,128> _200e2a71e_asciiFold;
jule::Slice<_200e2e091_foldPair> _200e2aa0a_caseOrbit;
jule::Array<jule::Str,4> _1eea0202d_CppHeaderExts;
jule::Array<jule::Str,3> _1eea0211b_CppExts;
jule::Array<jule::Str,1> _1eea803ec_ObjectiveCppExts;
jule::Str _200e47560_PathStdlib;
jule::Str _200e477b3_PathExec;
jule::Str _200e47a6b_PathWd;
jule::Str _200e47d68_PathApi;
jule::Str _200e48121_OS;
jule::Str _200e483c9_Arch;
jule::Str _200e4bcb2_Compiler;
jule::Str _200e4d1ae_CompilerPath;
jule::Str _200e4d3bd_CppStd;
jule::Bool _200e4d665_Shadowing;
jule::Bool _200e4d91d_Transpilation;
jule::Bool _200e4dbc6_Test;
jule::Bool _200e4de7e_RC;
jule::Bool _200e4e347_Safety;
jule::Bool _200e4e589_Production;
_2019ed313_floatInfo _2019ed6cb_f32info;
_2019ed313_floatInfo _2019ed9c8_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _201a063e8_detailedPowsOfTen;
jule::Slice<jule::I32> _201a08153_powtab;
jule::Slice<jule::F64> _201a08c14_f64pow10;
jule::Slice<jule::F32> _201a09044_f32pow10;
jule::Array<jule::U64,20> _201a0c245_u64pow10;
jule::Slice<_201a10ed5_leftCheat> _201a11414_leftCheats;
jule::Array<jule::I32,5> _2049612b7_Spaces;
jule::Array<jule::U32,6> _2049614c6_UnaryOps;
jule::Array<jule::U32,18> _2049617a1_BinOps;
jule::Array<jule::U32,2> _204a0d6e9_PostfixOps;
jule::Array<jule::U32,11> _204a0d9d5_AssignOps;
jule::Array<_204a1c0dc_kindPair,28> _204a1c4c7_keywords;
jule::Array<_204a1c0dc_kindPair,46> _204a1c807_basicOps;
jule::I32 _204b97c18_BitSize;
jule::Str _204b97e7c_SysInt;
jule::Str _204b98235_SysUint;
jule::Slice<jule::Str> _204bc8e8b_builtinConstraints;
jule::Ptr<_204cda982_Type> _204d5d494_primNil;
jule::Ptr<_204cda982_Type> _204d5d791_primVoid;
jule::Ptr<_204cda982_Type> _204d5da49_primAny;
jule::Ptr<_204cda982_Type> _204d5dd46_primStr;
jule::Ptr<_204cda982_Type> _204d5e0ee_primBool;
jule::Ptr<_204cda982_Type> _204d5e3a7_primUintptr;
jule::Ptr<_204cda982_Type> _204d5e660_primUint;
jule::Ptr<_204cda982_Type> _204d5ea28_primInt;
jule::Ptr<_204cda982_Type> _204d5ec6a_primI8;
jule::Ptr<_204cda982_Type> _204d60012_primI16;
jule::Ptr<_204cda982_Type> _204d602ba_primI32;
jule::Ptr<_204cda982_Type> _204d60573_primI64;
jule::Ptr<_204cda982_Type> _204d6082b_primU8;
jule::Ptr<_204cda982_Type> _204d60ad4_primU16;
jule::Ptr<_204cda982_Type> _204d60d8c_primU32;
jule::Ptr<_204cda982_Type> _204d61376_primU64;
jule::Ptr<_204cda982_Type> _204d615b8_primF32;
jule::Ptr<_204cda982_Type> _204d617c7_primF64;
jule::Ptr<_2056b1687_Meta> _2056ae454_ProgramMeta;
jule::Ptr<_206713771_data> _206712e13_emptyData;
jule::Bool _2067187ba_Copy;
jule::Bool _206718ab7_Deadcode;
jule::Bool _206718d70_Append;
jule::Bool _20671916c_Math;
jule::Bool _206719425_Access;
jule::Bool _2067196cd_Inline;
jule::Bool _206719986_Ptr;
jule::Bool _206719d4e_Cond;
jule::Bool _20671a091_Str;
jule::Bool _20671a338_Slice;
jule::Bool _20671a5e1_Assign;
jule::Bool _20671a899_Exceptional;
jule::Bool _20671ab52_Iter;
jule::Bool _20671ae0a_Dynamic;
jule::Bool _20671b1b3_Array;
jule::Bool _20671b69c_Len;
jule::Bool _20671b8de_StdStrings;
jule::Bool _20671baed_StdMathCmplx;
jule::Bool _20683551e_exprEnabled;
jule::Bool _20683572d_scopeEnabled;
jule::Array<jule::U64,12> _206907679_mdays;
jule::Str _206839138_assignArgName;
jule::Ptr<_204cda982_Type> _206913245_generalGCPtr;
jule::Slice<_200e2e58b_CaseRange> _200e28365_CaseRanges;


inline jule::Bool _1ee88470c_acceptRange_eq(_1ee88470c_acceptRange *_self_, _1ee88470c_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1ee8d7045_LittleEndian_eq(_1ee8d7045_LittleEndian *_self_, _1ee8d7045_LittleEndian _other_) { return true; }

inline jule::U32 static__1ee8ecc09_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1ee8ed633_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1ee901c63_u128_eq(_1ee901c63_u128 *_self_, _1ee901c63_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _216c63189_group_eq(_216c63189_group *_self_, _216c63189_group _other_) {
	return 
		_206c43c3a_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_216c638c6_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_216c60d8a__Map> static__216c61451_make(void) {
	return jule::new_ptr<_216c60d8a__Map>(_216c60d8a__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_216c63189_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _216c615a5_initData(_216c60d8a__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1ee9e76b6_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_216c63189_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _216c63189_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c806c3:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1ee9e78c5_newEmptyMetadata();
			}
			_iter_next_216c806c3:;
			++it;
			_1407_i++;
			goto _iter_begin_216c806c3;
		}
		_iter_end_216c806c3:;
	};
}



inline jule::U64 _216c61709_hash(_216c60d8a__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _206beddb0_toStr(_14616_k);;
	return _1ee9051d9_hash(_1ee78ae1b_StrBytes(_1473_bytes));;
}



inline void _216c6185d_rehash(_216c60d8a__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_216c615a5_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_216c63189_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_216c63189_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_216c63189_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _216c63189_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c83cc0:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1ee9e78c5_newEmptyMetadata();
			}
			_iter_next_216c83cc0:;
			++it;
			_1617_i++;
			goto _iter_begin_216c83cc0;
		}
		_iter_end_216c83cc0:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c83929:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216c8584e:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_216c8584e;
							};
							{
								(*(_216c61dbe_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_216c8584e:;
						++it;
						_1678_s++;
						goto _iter_begin_216c8584e;
					}
					_iter_end_216c8584e:;
				};
			}
			_iter_next_216c83929:;
			++it;
			_1667_g++;
			goto _iter_begin_216c83929;
		}
		_iter_end_216c83929:;
	};
}



inline jule::I32 _216c619b2_nextSize(_216c60d8a__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _216c61b16_lookup(jule::Ptr<_216c60d8a__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1ee9e7c9e_splitHash(_216c61709_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1ee9e809b_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1ee9e674d_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1ee9e6d25_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_216c8beb5:;
			}
			_iter_end_216c8beb5:;;
			_2018_matches=_1ee9e6a5b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_216c88ba4:;
	}
	_iter_end_216c88ba4:;;
}



inline jule::Bool _216c61c6a_get(jule::Ptr<_216c60d8a__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_216c61b16_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _216c61dbe_set(_216c60d8a__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_216c6185d_rehash(_self_, _216c619b2_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1ee9e7c9e_splitHash(_216c61709_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1ee9e809b_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1ee9e674d_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1ee9e6d25_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_216c94d14:;
			}
			_iter_end_216c94d14:;;
			_2488_matches=_1ee9e6a5b_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1ee9e6d25_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_216c93263:;
	}
	_iter_end_216c93263:;;
}



inline jule::Bool _216c62023_del(jule::Ptr<_216c60d8a__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1ee9e7c9e_splitHash(_216c61709_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1ee9e809b_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1ee9e674d_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1ee9e6d25_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1ee9e6a5b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_216c9ca0e:;
			}
			_iter_end_216c9ca0e:;;
			_2838_matches=_1ee9e6a5b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_216c9b7ee:;
	}
	_iter_end_216c9b7ee:;;
}



inline void _216c62177_clear(jule::Ptr<_216c60d8a__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216ca42a7:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216ca4cad:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_216ca4cad:;
						++it;
						_3298_j++;
						goto _iter_begin_216ca4cad;
					}
					_iter_end_216ca4cad:;
				};
			}
			_iter_next_216ca42a7:;
			++it;
			_3287_i++;
			goto _iter_begin_216ca42a7;
		}
		_iter_end_216ca42a7:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216ca4142:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_216c63189_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_216ca740e:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_216ca740e:;
							++it;
							_3389_j++;
							goto _iter_begin_216ca740e;
						}
						_iter_end_216ca740e:;
					};
				};
			}
			_iter_next_216ca4142:;
			++it;
			_3357_i++;
			goto _iter_begin_216ca4142;
		}
		_iter_end_216ca4142:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I32 _216c622cb_len(jule::Ptr<_216c60d8a__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _216c62430_cap(_216c60d8a__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _216c6c5c2_mapIterator _216c62584_iterator(jule::Ptr<_216c60d8a__Map> _self_) {
	_216c6c5c2_mapIterator _3607_iterator = _216c6c5c2_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_216c63189_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_216c6cb55_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_216cac447__Map> static__216cac964_make(void) {
	return jule::new_ptr<_216cac447__Map>(_216cac447__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_216cae537_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _216cacab8_initData(_216cac447__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1ee9e76b6_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_216cae537_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _216cae537_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_204b21664_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b21664_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216cc9ad5:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1ee9e78c5_newEmptyMetadata();
			}
			_iter_next_216cc9ad5:;
			++it;
			_1407_i++;
			goto _iter_begin_216cc9ad5;
		}
		_iter_end_216cc9ad5:;
	};
}



inline jule::U64 _216cacc1c_hash(_216cac447__Map* _self_, jule::Ptr<_204b21664_FnIns> _14616_k) {
	jule::Str _1473_bytes = _208b19d40_toStr(_14616_k);;
	return _1ee9051d9_hash(_1ee78ae1b_StrBytes(_1473_bytes));;
}



inline void _216cacd71_rehash(_216cac447__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_216cacab8_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_216cae537_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_216cae537_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_216cae537_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _216cae537_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_204b21664_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b21664_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216ccd1d2:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1ee9e78c5_newEmptyMetadata();
			}
			_iter_next_216ccd1d2:;
			++it;
			_1617_i++;
			goto _iter_begin_216ccd1d2;
		}
		_iter_end_216ccd1d2:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216cccd3b:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216ccec61:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_216ccec61;
							};
							{
								(*(_216cad3d2_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_216ccec61:;
						++it;
						_1678_s++;
						goto _iter_begin_216ccec61;
					}
					_iter_end_216ccec61:;
				};
			}
			_iter_next_216cccd3b:;
			++it;
			_1667_g++;
			goto _iter_begin_216cccd3b;
		}
		_iter_end_216cccd3b:;
	};
}



inline jule::I32 _216cacec5_nextSize(_216cac447__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _216cad129_lookup(jule::Ptr<_216cac447__Map> _self_, jule::Ptr<_204b21664_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1ee9e7c9e_splitHash(_216cacc1c_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1ee9e809b_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1ee9e674d_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1ee9e6d25_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_216cd63c7:;
			}
			_iter_end_216cd63c7:;;
			_2018_matches=_1ee9e6a5b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_216cd30b6:;
	}
	_iter_end_216cd30b6:;;
}



inline jule::Slice<jule::Uintptr> _216cad27d_get(jule::Ptr<_216cac447__Map> _self_, jule::Ptr<_204b21664_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_216cad129_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _216cad3d2_set(_216cac447__Map* _self_, jule::Ptr<_204b21664_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_216cacd71_rehash(_self_, _216cacec5_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1ee9e7c9e_splitHash(_216cacc1c_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1ee9e809b_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1ee9e674d_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1ee9e6d25_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_216cde226:;
			}
			_iter_end_216cde226:;;
			_2488_matches=_1ee9e6a5b_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1ee9e6d25_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_216cdc675:;
	}
	_iter_end_216cdc675:;;
}



inline jule::Bool _216cad536_del(jule::Ptr<_216cac447__Map> _self_, jule::Ptr<_204b21664_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1ee9e7c9e_splitHash(_216cacc1c_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1ee9e809b_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1ee9e674d_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1ee9e6d25_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1ee9e6a5b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Ptr<_204b21664_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_216ce6e21:;
			}
			_iter_end_216ce6e21:;;
			_2838_matches=_1ee9e6a5b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_216ce5c11:;
	}
	_iter_end_216ce5c11:;;
}



inline void _216cad68a_clear(jule::Ptr<_216cac447__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216ced6b9:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216cee1c0:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_216cee1c0:;
						++it;
						_3298_j++;
						goto _iter_begin_216cee1c0;
					}
					_iter_end_216cee1c0:;
				};
			}
			_iter_next_216ced6b9:;
			++it;
			_3287_i++;
			goto _iter_begin_216ced6b9;
		}
		_iter_end_216ced6b9:;
	};
	jule::Ptr<_204b21664_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216ced554:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_216cae537_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_216d01821:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_216d01821:;
							++it;
							_3389_j++;
							goto _iter_begin_216d01821;
						}
						_iter_end_216d01821:;
					};
				};
			}
			_iter_next_216ced554:;
			++it;
			_3357_i++;
			goto _iter_begin_216ced554;
		}
		_iter_end_216ced554:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I32 _216cad7de_len(jule::Ptr<_216cac447__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _216cad943_cap(_216cac447__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _216cb6990_mapIterator _216cada97_iterator(jule::Ptr<_216cac447__Map> _self_) {
	_216cb6990_mapIterator _3607_iterator = _216cb6990_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_216cae537_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_216cb7023_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _216c6cb55_init(_216c6c5c2_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_216c63189_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_216c622cb_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1ee3ac4aa_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _216c6cca9_next(_216c6c5c2_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_216c7570c;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_216c7570c:;
			}
			_iter_end_216c7570c:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_216c74992:;
	}
	_iter_end_216c74992:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _216cb7023_init(_216cb6990_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_216cae537_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_216cad7de_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1ee3ac4aa_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_204b21664_FnIns__jule_tuple_psuintptr _216cb7177_next(_216cb6990_mapIterator* _self_) {
	__jule_tuple_px_204b21664_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_216cbeb1e;
					};
					jule::Ptr<_204b21664_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_216cbeb1e:;
			}
			_iter_end_216cbeb1e:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_216cbdda4:;
	}
	_iter_end_216cbdda4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _1eeabb290_Builder static__1eeabbadc_New(jule::I32 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1eeabb290_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I32> _1eeabbe2d_Write(_1eeabb290_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1eeabc26e_WriteStr(_1eeabb290_Builder* _self_, jule::Str _4124_s) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1eeabc527_WriteByte(_1eeabb290_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1eeabc868_WriteRune(_1eeabb290_Builder* _self_, jule::I32 _5525_r) {
	jule::I32 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1ee8867ca_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Str _1eeabcaee_Str(_1eeabb290_Builder* _self_) {
	jule::Str _687_s = _1ee78b46b_StrFromBytes((*(_self_))._field_buf);;
	_1eeabccec_Clear(_self_);
	return _687_s;;
}



inline void _1eeabccec_Clear(_1eeabb290_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1eeabd083_Len(_1eeabb290_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1eeabd5a0_Buf(_1eeabb290_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1eeabd858_SetBuf(_1eeabb290_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _200e2e091_foldPair_eq(_200e2e091_foldPair *_self_, _200e2e091_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _200e2e58b_CaseRange_eq(_200e2e58b_CaseRange *_self_, _200e2e58b_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_206c92371_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _200e2ea42_Range16_eq(_200e2ea42_Range16 *_self_, _200e2ea42_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _200e30070_Range32_eq(_200e30070_Range32 *_self_, _200e30070_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _200e3dac8_index(_200e3d644_lazyBuff* _self_, jule::I32 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _200e3dd81_append(_200e3d644_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _200e3e117_string(_200e3d644_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1ee78b1a2_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1eecb3443_cmdAttrs_eq(_1eecb3443_cmdAttrs *_self_, _1eecb3443_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _1eecb8305_File_eq(_1eecb8305_File *_self_, _1eecb8305_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_1eecb8305_File> static__1eecb8cd9_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1eecb8305_File>(_1eecb8305_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1eecb8305_File>> static__1eecb90a3_Create(jule::Str _7819_path) {
	return static__1eecbc10b_Open(_7819_path, static_cast<jule::I32>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1eecb936c_Read(jule::Str _8517_path) {
	_1eecba8ac_Stat _863_s = ({
		auto except = static__200e470a9_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1eecbb050_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _917_sz = static_cast<jule::I32>(_1eecbb2d6_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I32>(_1eecbb2d6_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_1eecb8305_File> _1047_f = ({
		auto except = static__1eecbc10b_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1eecb8305_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I32 _1084_rn = ({
				auto except = _1eecbcb12_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_207a2bed9;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_207a2bed9:;
	}
	_iter_end_207a2bed9:;;
	({
		auto except = _1eecba01b_Close(_1047_f.ptr());
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__1eecb9713_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm) {
	jule::Ptr<_1eecb8305_File> _1257_f = ({
		auto except = static__1eecbc10b_Open(_12418_path, static_cast<jule::I32>(769LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1eecb8305_File>(nullptr);});
	});;
	jule::I32 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _1eecbc7c1_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_207a32187:;
	}
	_iter_end_207a32187:;;
	return _1eecba01b_Close(_1257_f.ptr());
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1eecba01b_Close(_1eecb8305_File* _self_) {
	if ((_1ee763ec1_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_1eecb8305_File>> static__1eecbc10b_Open(jule::Str _1717_path, jule::I32 _1728_flag, jule::I32 _1741_mode) {
	jule::Slice<jule::U16> _183_utf16Path = _1ee726978_UTF16FromStr(_1717_path);;
	jule::I32 _193_handle = _1ee750111_Wopen((&(_183_utf16Path[0LL])), _1728_flag, _1741_mode);;
	if ((_193_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1eecb8305_File>>{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1eecb8305_File>>{.result=static__1eecb8cd9_New(static_cast<jule::Uintptr>(_193_handle))};;
}



inline jule::VoidExceptional static__1eecbc33c_Remove(jule::Str _2719_path) {
	jule::Slice<jule::U16> _283_utf16Path = _1ee726978_UTF16FromStr(_2719_path);;
	if ((!(_1ee750c27_DeleteFile((&(_283_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1eecb51ae_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1eecbc7c1_Write(_1eecb8305_File* _self_, jule::Slice<jule::U8> _4021_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_4021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1ee89e518_handleRW(&(_4021_buf));
	if (_1eecbce53_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1ee888546_writeConsole((*(_self_))._field_handle, _4021_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1ee764378_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_4021_buf[0LL])), static_cast<jule::U32>(_4021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1eecbcb12_Read(_1eecb8305_File* _self_, jule::Slice<jule::U8> _6824_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_6824_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1ee89e518_handleRW(&(_6824_buf));
	if (_1eecbce53_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1ee8888ba_readConsole((*(_self_))._field_handle, _6824_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1ee763ae7_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_6824_buf[0LL])), static_cast<jule::U32>(_6824_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}








inline jule::Bool _1eecba8ac_Stat_eq(_1eecba8ac_Stat *_self_, _1eecba8ac_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _1eecbacb9_IsDir(_1eecba8ac_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1eecbb050_IsReg(_1eecba8ac_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1eecbb2d6_Size(_1eecba8ac_Stat* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<_1eecba8ac_Stat> static__200e470a9_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_1eecba8ac_Stat>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _143_utf16Path = _1ee726978_UTF16FromStr(_1015_path);;
	struct _stat _157_handle = (struct _stat){};;
	jule::I32 _163_code = _1ee74ebd2_Wstat((&(_143_utf16Path[0LL])), (&(_157_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_1eecba8ac_Stat>{.error=jule::Any(_200e467e5_getLastFsError(), &__jule_any_type0)};
	};
	_1eecba8ac_Stat _207_stat = _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U32>(_157_handle.st_size);
	if (((_157_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_157_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<_1eecba8ac_Stat>{.result=_207_stat};;
}








inline jule::Bool _1eeaca425_Log_eq(_1eeaca425_Log *_self_, _1eeaca425_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _2019ed313_floatInfo_eq(_2019ed313_floatInfo *_self_, _2019ed313_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _201a10ed5_leftCheat_eq(_201a10ed5_leftCheat *_self_, _201a10ed5_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _201a119ec_decimal_eq(_201a119ec_decimal *_self_, _201a119ec_decimal _other_) {
	return 
		_207d0d5a6_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _201a084b6_set(_201a119ec_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_208003a87:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_208003c1e:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_208003a21:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_20800566b:;
					{
						goto _iter_next_208004deb;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_208005715:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_208004deb;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_20800577b:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_208004deb;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_208004deb;
					}
				}
				_match_end_208005539:;
			};
			goto _iter_end_208004deb;
		}
	_iter_next_208004deb:;
	}
	_iter_end_208004deb:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_201a03b21_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_20800b595;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_20800b595:;
		}
		_iter_end_20800b595:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _201a08807_floatBits(_201a119ec_decimal* _self_, _2019ed313_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_20801a0dc;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_208019141;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_20801a0dc;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _201a08153_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_201a08153_powtab[(*(_self_))._field_dp];
			};
			_201a12190_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_208011952:;
	}
	_iter_end_208011952:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _201a08153_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_201a08153_powtab[(-((*(_self_))._field_dp))];
			};
			_201a12190_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_20800eea0:;
	}
	_iter_end_20800eea0:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_201a12190_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_208019141;
	};
	_201a12190_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_201a12c40_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_208019141;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_20801a0dc;
	_julec_label_208019141:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(({ jule::U32 __jule_x = static_cast<jule::U32>(1LLU); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_20801a0dc:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _201a11dd7_assign(_201a119ec_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_20801c85e:;
	}
	_iter_end_20801c85e:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_20801cb5b:;
	}
	_iter_end_20801cb5b:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_201a1334a_trim(_self_);
}



inline void _201a12190_shift(_201a119ec_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_208020257:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_208020301:;
			{
				while ((_17625_k > 28LL)) {
					{
						_201a13d95_leftShift(_self_, 28LLU);
						_17625_k-=28LL;
					}
				_iter_next_208020e06:;
				}
				_iter_end_208020e06:;;
				_201a13d95_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_208020367:;
			{
				while ((_17625_k < -28LL)) {
					{
						_201a13636_rightShift(_self_, 28LLU);
						_17625_k+=28LL;
					}
				_iter_next_208020d29:;
				}
				_iter_end_208020d29:;;
				_201a13636_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_2080200e2:;
	};
}



inline void _201a12448_roundDown(_201a119ec_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_201a1334a_trim(_self_);
}



inline void _201a12701_roundUp(_201a119ec_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_2080242b1:;
	}
	_iter_end_2080242b1:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _201a129a9_round(_201a119ec_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_201a14219_shouldRoundUp(_self_, _23221_nd)) {
		_201a12701_roundUp(_self_, _23221_nd);
	} else {
		_201a12448_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _201a12c40_roundedInteger(_201a119ec_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_20802721a:;
	}
	_iter_end_20802721a:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_208028b9a:;
	}
	_iter_end_208028b9a:;;
	if (_201a14219_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _200e74a43_AnsiEscape_eq(_200e74a43_AnsiEscape *_self_, _200e74a43_AnsiEscape _other_) { return true; }

inline void static__200e533a1_Reset(void) {
	jule::print(_206beddb0_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__200e74c30_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_206beddb0_toStr(_1918_escape));
	jule::print(_206beddb0_toStr(_1931_text));
	static__200e533a1_Reset();
}








inline jule::Bool _201a175d5_Logger_eq(_201a175d5_Logger *_self_, _201a175d5_Logger _other_) { return true; }

inline void static__201a178d2_LogFlat(_1eeaca425_Log* _1421_l) {
	jule::println(_206beddb0_toStr((*(_1421_l))._field_Text));
}



inline void static__201a17ae1_LogError(_1eeaca425_Log* _1922_l) {
	jule::print(_206beddb0_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_206beddb0_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_206beddb0_toStr((*(_1922_l))._field_Text));
	static__200e533a1_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_206beddb0_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_206beddb0_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_206beddb0_toStr(jule::Str::lit(":", 1)));
		jule::print(_206beddb0_toStr(_201a16073_Itoa((*(_1922_l))._field_Row)));
		jule::print(_206beddb0_toStr(jule::Str::lit(":", 1)));
		jule::print(_206beddb0_toStr(_201a16073_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _200e3b576_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_200e39d6b_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_206beddb0_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _201a16073_Itoa((*(_1922_l))._field_Row);;
		jule::print(_206beddb0_toStr(_434_row));
		jule::print(_206beddb0_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_206beddb0_toStr(_388_line));
		jule::print(_206beddb0_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_206beddb0_toStr(_200e338ae_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_206beddb0_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_206beddb0_toStr(_200e338ae_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_206beddb0_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_206beddb0_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_206beddb0_toStr(_200e338ae_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_206beddb0_toStr(jule::Str::lit(" | ", 3)));
			static__200e74c30_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_206beddb0_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_206beddb0_toStr(jule::Str::lit("\n", 1)));
}



inline void static__201a17d22_Log(_1eeaca425_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_20804bddd:;
			{
				static__201a178d2_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_20804c196:;
			{
				static__201a17ae1_LogError(_6417_l);
			}
		}
		_match_end_20804c097:;
	};
}



inline void static__201a18053_PrintLogs(jule::Slice<_1eeaca425_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20804cb69:;
		if (it != expr_end) {
			_1eeaca425_Log *_7510_l = it;
			{
				static__201a17d22_Log(_7510_l);
			}
			_iter_next_20804cb69:;
			++it;
			goto _iter_begin_20804cb69;
		}
		_iter_end_20804cb69:;
	};
	jule::print(_206beddb0_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_206beddb0_toStr(_201a16073_Itoa((*(_7423_logs)).len())));
	jule::println(_206beddb0_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _204a14216_Token_eq(_204a14216_Token *_self_, _204a14216_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _204a145bd_Prec(_204a14216_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2080ad955:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_2080ae47d:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_2080ae505:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_2080ad9cc:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_2080ada54:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_2080ae24c:;
			{
				return 0LLU;;
			}
		}
		_match_end_2080ad889:;
	};
}







inline jule::Ptr<_204a19cbb_Fileset> static__204a1a151_New(jule::Str _2016_path) {
	return jule::new_ptr<_204a19cbb_Fileset>(_204a19cbb_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr)});;
}



inline void _204a1a6b2_FillMut(_204a19cbb_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _204a1a948_Dir(_204a19cbb_Fileset* _self_) {
	return _200e40aa8_Dir((*(_self_))._field_Path);;
}



inline jule::Str _204a1abce_Name(_204a19cbb_Fileset* _self_) {
	return _200e406ce_Base((*(_self_))._field_Path);;
}



inline jule::Str _204a1b2a6_GetRow(_204a19cbb_Fileset* _self_, jule::I32 _5718_row) {
	jule::I32 _587_n = 0LL;;
	jule::I32 _597_lineStart = 0LL;;
	jule::I32 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_2080b5583;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _1ee78b46b_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_2080b5583:;
	}
	_iter_end_2080b5583:;;
	return jule::Str();;
}








inline jule::Bool _204a1c0dc_kindPair_eq(_204a1c0dc_kindPair *_self_, _204a1c0dc_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _204a23643_pushErr(_204a2307c_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1eeaca425_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_204a1cd46_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _204a23ba4_lex(_204a2307c_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_204a25dc6_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_204a14216_Token> _4638_token = _204a273b1_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_204a14216_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_2080e4293:;
	}
	_iter_end_2080e4293:;;
}



inline jule::Str _204a23ee5_id(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I32 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_204a17945_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I32 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_204a18182_IsDecimal(_4824_pr)))) && (!(_204a17945_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1ee78b46b_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_2080e751b:;
	}
	_iter_end_2080e751b:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1ee78b46b_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _204a2427b_resume(_204a2307c_lex* _self_) {
	jule::I32 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_data[_4977_i]);;
			if (_204a1744a_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_2080eb553:;
						{
							_204a25dc6_newLine(_self_);
						}
					}
					else {
						_case_begin_2080eae15:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_2080eb19b:;
				};
				goto _iter_next_2080e9c6b;
			};
			jule::I32 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_2080ea9c5;
					};
				}
			_iter_next_2080ea9c5:;
			}
			_iter_end_2080ea9c5:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_2080e9c6b:;
	}
	_iter_end_2080e9c6b:;;
	return nullptr;;
}



inline void _204a24534_lexLineComment(_204a2307c_lex* _self_, jule::Ptr<_204a14216_Token>* _52235_token) {
	jule::I32 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_2080edae9;
			};
		}
	_iter_next_2080edae9:;
	}
	_iter_end_2080edae9:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1ee78b46b_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _204a247dc_lexRangeComment(_204a2307c_lex* _self_, jule::Ptr<_204a14216_Token>* _53736_token) {
	jule::I32 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_20810225c;
			};
			if ((_5414_r == '\n')) {
				_204a25dc6_newLine(_self_);
				goto _iter_next_20810225c;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1ee78b46b_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_20810225c:;
	}
	_iter_end_20810225c:;;
	_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _204a24b2d_num(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_204a21894_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_208109011;
	};
	__jule_func_result=_204a216b8_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_208109011;
	};
	__jule_func_result=_204a1ee58_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_208109011;
	};
	__jule_func_result=_204a1eb8e_commonNum(_56520_txt);
	_julec_label_208109011:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _204a24e6e_escapeSeq(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_20810ccc3;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_20810abb1:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1ee78b46b_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_20810aa6d:;
			{
				_5887_seq=_204a21eb0_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_20810aad4:;
			{
				_5887_seq=_204a22279_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_20810a74e:;
			{
				_5887_seq=_204a22543_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_20810a023:;
			{
				_5887_seq=_204a2280c_byteEscape(_58726_txt);
			}
		}
		_match_end_20810a5c8:;
	};
	_julec_label_20810ccc3:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _204a2536a_getRune(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _204a24e6e_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I32 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _204a256ab_lexRune(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1eeabb290_Builder _6277_run = static__1eeabbadc_New(8LL);;
	({
		auto except = _1eeabc527_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I32 _6307_n = 0LL;;
	jule::I32 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_208116947;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_204a25dc6_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _204a2536a_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1eeabc26e_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1ee8871d2_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_208116947;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_208116947:;
	}
	_iter_end_208116947:;;
	if ((_6307_n == 0LL)) {
		_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1eeabcaee_Str(&_6277_run);;
}



inline jule::Str _204a25942_lexStr(_204a2307c_lex* _self_) {
	_1eeabb290_Builder _6677_s = static__1eeabbadc_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1eeabc527_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_20811c475;
			};
			if ((_6754_ch == '\n')) {
				_204a25dc6_newLine(_self_);
				if ((!(_6703_raw))) {
					_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _204a2536a_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1eeabc26e_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1ee8871d2_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_20811c475;
			};
		}
	_iter_next_20811c475:;
	}
	_iter_end_20811c475:;;
	return _1eeabcaee_Str(&_6677_s);;
}



inline void _204a25dc6_newLine(_204a2307c_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _204a26437_isOp(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_204a14216_Token>* _70858_t) {
	if ((!(_204a1d20e_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _204a26833_lexBasicOps(_204a2307c_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_204a14216_Token>* _71845_tok) {
	{
		auto expr = &(_204a1c807_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208123e3d:;
		if (it != expr_end) {
			_204a1c0dc_kindPair *_71910_pair = it;
			{
				if (_204a26437_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_208123e3d:;
			++it;
			goto _iter_begin_208123e3d;
		}
		_iter_end_208123e3d:;
	};
	return false;;
}



inline jule::Bool _204a26c2e_lexId(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_204a14216_Token>* _72740_t) {
	jule::Str _7283_lex = _204a23ee5_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _204a2712a_lexNum(_204a2307c_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_204a14216_Token>* _73741_t) {
	jule::Str _7383_lex = _204a24b2d_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_204a14216_Token> _204a273b1_token(_204a2307c_lex* _self_) {
	jule::Ptr<_204a14216_Token> _7497_t = jule::new_ptr<_204a14216_Token>(_204a14216_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _204a2427b_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_204a2712a_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_208129e88:;
			{
				goto _match_end_20812988e;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_208129c02:;
			{
				(*_7497_t.alloc)._field_Kind=_204a256ab_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_208129c68:;
			{
				(*_7497_t.alloc)._field_Kind=_204a25942_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (_204a1d20e_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_208129cce:;
			{
				_204a24534_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_204a1d20e_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_208129d45:;
			{
				_204a247dc_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_204a26833_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_208129dab:;
			{
				goto _match_end_20812988e;
			}
		}
		else if (_204a26c2e_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_20812b2b9:;
			{
				{
					auto expr = &(_204a1c4c7_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208130136:;
					if (it != expr_end) {
						_204a1c0dc_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_208130136;
							};
						}
						_iter_next_208130136:;
						++it;
						goto _iter_begin_208130136;
					}
					_iter_end_208130136:;
				};
			}
		}
		else {
			_case_begin_208129b03:;
			{
				jule::I32 _7934_r;
				jule::I32 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_204a23643_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_20812988e:;
	};
	(*(_self_))._field_column+=_1ee8871d2_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _204a28b10_Node_eq(_204a28b10_Node *_self_, _204a28b10_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _204a29b11_TypeDecl_eq(_204a29b11_TypeDecl *_self_, _204a29b11_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _204a2a8ae_NamespaceTypeDecl_eq(_204a2a8ae_NamespaceTypeDecl *_self_, _204a2a8ae_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _204a2abab_SptrTypeDecl_eq(_204a2abab_SptrTypeDecl *_self_, _204a2abab_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _204a2b041_SlcTypeDecl_eq(_204a2b041_SlcTypeDecl *_self_, _204a2b041_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _204a2b63a_PtrTypeDecl_eq(_204a2b63a_PtrTypeDecl *_self_, _204a2b63a_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _204a2b9d1_IsUnsafe(_204a2b63a_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _204a2bdcc_ArrTypeDecl_eq(_204a2bdcc_ArrTypeDecl *_self_, _204a2bdcc_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _204a2c273_AutoSized(_204a2bdcc_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _204a2c62a_MapTypeDecl_eq(_204a2c62a_MapTypeDecl *_self_, _204a2c62a_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _204a2de45_Expr_eq(_204a2de45_Expr *_self_, _204a2de45_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _204a2e20e_RangeExpr_eq(_204a2e20e_RangeExpr *_self_, _204a2e20e_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204a2e819_UseExpr_eq(_204a2e819_UseExpr *_self_, _204a2e819_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _204a2edd0_LitExpr_eq(_204a2edd0_LitExpr *_self_, _204a2edd0_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _204a302a9_UnsafeExpr_eq(_204a302a9_UnsafeExpr *_self_, _204a302a9_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204a30760_IdentExpr_eq(_204a30760_IdentExpr *_self_, _204a30760_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _204a31002_UnaryExpr_eq(_204a31002_UnaryExpr *_self_, _204a31002_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204a313cb_VariadicExpr_eq(_204a313cb_VariadicExpr *_self_, _204a313cb_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204a317a5_CastExpr_eq(_204a317a5_CastExpr *_self_, _204a317a5_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204a31b7e_NamespaceExpr_eq(_204a31b7e_NamespaceExpr *_self_, _204a31b7e_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _204a32058_SubIdentExpr_eq(_204a32058_SubIdentExpr *_self_, _204a32058_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _204a3250e_BinaryExpr_eq(_204a3250e_BinaryExpr *_self_, _204a3250e_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _204a33026_Unhandled(_204a32b6e_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _204a332ac_Ignored(_204a32b6e_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}








inline jule::Bool _204a33664_FieldExprPair_eq(_204a33664_FieldExprPair *_self_, _204a33664_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _204a34c70_KeyValPair_eq(_204a34c70_KeyValPair *_self_, _204a34c70_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _204a35e08_IndexingExpr_eq(_204a35e08_IndexingExpr *_self_, _204a35e08_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _204a36568_SlicingExpr_eq(_204a36568_SlicingExpr *_self_, _204a36568_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _204a36d1b_GenericDecl_eq(_204a36d1b_GenericDecl *_self_, _204a36d1b_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _204a371e5_LabelSt_eq(_204a371e5_LabelSt *_self_, _204a371e5_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _204a375be_GotoSt_eq(_204a375be_GotoSt *_self_, _204a375be_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _204a378bb_FallSt_eq(_204a378bb_FallSt *_self_, _204a378bb_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _204a3802b_AssignLeft_eq(_204a3802b_AssignLeft *_self_, _204a3802b_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _204a3959e_Stmt_eq(_204a3959e_Stmt *_self_, _204a3959e_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _204a3a44b_ParamDecl_eq(_204a3a44b_ParamDecl *_self_, _204a3a44b_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _204a3a803_IsSelf(_204a3a44b_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _204a3bc44_IsAnon(_204a3b89d_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _204a3ce32_RetSt_eq(_204a3ce32_RetSt *_self_, _204a3ce32_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204a3d6a2_Iter_eq(_204a3d6a2_Iter *_self_, _204a3d6a2_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _204a3da48_IsInf(_204a3d6a2_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _204a3decc_WhileKind_eq(_204a3decc_WhileKind *_self_, _204a3decc_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _204a3e373_IsWhileNext(_204a3decc_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _204a3e8d4_RangeKind_eq(_204a3e8d4_RangeKind *_self_, _204a3e8d4_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _204a3ecad_BreakSt_eq(_204a3ecad_BreakSt *_self_, _204a3ecad_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _204a40187_ContSt_eq(_204a40187_ContSt *_self_, _204a40187_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _204a4063d_If_eq(_204a4063d_If *_self_, _204a4063d_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _204a40a17_Else_eq(_204a40a17_Else *_self_, _204a40a17_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _204a4170a_TypeAliasDecl_eq(_204a4170a_TypeAliasDecl *_self_, _204a4170a_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _204a42a5d_UseDecl_eq(_204a42a5d_UseDecl *_self_, _204a42a5d_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _204a43014_EnumItemDecl_eq(_204a43014_EnumItemDecl *_self_, _204a43014_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _204a44400_TypeEnumItemDecl_eq(_204a44400_TypeEnumItemDecl *_self_, _204a44400_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _204a44d29_FieldDecl_eq(_204a44d29_FieldDecl *_self_, _204a44d29_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_204a9d338_Const> static__204b0500a_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_204a9d338_Const>(_204a9d338_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_204a9d338_Const> static__204b05280_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_204a9d338_Const>(_204a9d338_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_204a9d338_Const> static__204b05549_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_204a9d338_Const>(_204a9d338_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_204a9d338_Const> static__204b05813_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_204a9d338_Const>(_204a9d338_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_204a9d338_Const> static__204b05acc_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_204a9d338_Const>(_204a9d338_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_204a9d338_Const> static__204b05cdb_NewNil(void) {
	return jule::new_ptr<_204a9d338_Const>(_204a9d338_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _204b0644b_ReadI64(_204a9d338_Const* _self_) {
	if ((!(_204b08a47_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _204b066d2_ReadU64(_204a9d338_Const* _self_) {
	if ((!(_204b08ccd_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _204b06968_ReadBool(_204a9d338_Const* _self_) {
	if ((!(_204b09064_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _204b06bee_ReadStr(_204a9d338_Const* _self_) {
	if ((!(_204b092ea_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _204b06e85_ReadF64(_204a9d338_Const* _self_) {
	if ((!(_204b09581_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _204b0721b_AsI64(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_20818a48d:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20818add9:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20818ae50:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_20818a944:;
			{
				return 0LL;;
			}
		}
		_match_end_20818a79b:;
	};
}



inline jule::U64 _204b074a2_AsU64(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20818ba33:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_20818c759:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20818c7c0:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_20818c00b:;
			{
				return 0LLU;;
			}
		}
		_match_end_20818be95:;
	};
}



inline jule::F64 _204b07738_AsF64(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20818e2b6:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_20818d392:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20818e0a7:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_20818d859:;
			{
				return 0LL;;
			}
		}
		_match_end_20818d7e3:;
	};
}



inline void _204b079e1_SetI64(_204a9d338_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _204b07c99_SetU64(_204a9d338_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _204b08052_SetBool(_204a9d338_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _204b0830a_SetStr(_204a9d338_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _204b085b3_SetF64(_204a9d338_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _204b08a47_IsI64(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_208192bb0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_208192de1:;
			{
				return false;;
			}
		}
		_match_end_208192d7a:;
	};
}



inline jule::Bool _204b08ccd_IsU64(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20819374e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_208193023:;
			{
				return false;;
			}
		}
		_match_end_208192eac:;
	};
}



inline jule::Bool _204b09064_IsBool(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_208193b8e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_208194178:;
			{
				return false;;
			}
		}
		_match_end_208194112:;
	};
}



inline jule::Bool _204b092ea_IsStr(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_20819461d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_208194b07:;
			{
				return false;;
			}
		}
		_match_end_208194a91:;
	};
}



inline jule::Bool _204b09581_IsF64(_204a9d338_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20819509c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_208195586:;
			{
				return false;;
			}
		}
		_match_end_208195520:;
	};
}



inline jule::Bool _204b09817_IsNil(_204a9d338_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _204b09e99_And(_204a9d338_Const* _self_, _204a9d338_Const _23615_x) {
	{
		
		if ((_204b09064_IsBool(_self_) && _204b09064_IsBool(&_23615_x))) {
			_case_begin_208199a30:;
			{
				return (_204b06968_ReadBool(_self_) && _204b06968_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_2081999b9:;
			{
				return false;;
			}
		}
		_match_end_208199579:;
	};
}



inline jule::Bool _204b0a2da_Or(_204a9d338_Const* _self_, _204a9d338_Const _24714_x) {
	{
		
		if ((_204b09064_IsBool(_self_) && _204b09064_IsBool(&_24714_x))) {
			_case_begin_20819ad2d:;
			{
				return (_204b06968_ReadBool(_self_) || _204b06968_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_20819a514:;
			{
				return false;;
			}
		}
		_match_end_20819a426:;
	};
}



inline jule::Bool _204b0a62b_Eq(_204a9d338_Const* _self_, _204a9d338_Const _25814_x) {
	{
		
		if (_204b09817_IsNil(_self_)) {
			_case_begin_20819c192:;
			{
				return _204b09817_IsNil(&_25814_x);;
			}
		}
		else if (_204b09064_IsBool(_self_)) {
			_case_begin_20819c208:;
			{
				return (_204b09064_IsBool(&_25814_x) && (_204b06968_ReadBool(_self_) == _204b06968_ReadBool(&_25814_x)));;
			}
		}
		else if (_204b092ea_IsStr(_self_)) {
			_case_begin_20819c26e:;
			{
				return (_204b092ea_IsStr(&_25814_x) && (_204b06bee_ReadStr(_self_) == _204b06bee_ReadStr(&_25814_x)));;
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_20819c2e6:;
			{
				return (_204b0644b_ReadI64(_self_) == _204b0721b_AsI64(&_25814_x));;
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_20819c36d:;
			{
				return (_204b066d2_ReadU64(_self_) == _204b074a2_AsU64(&_25814_x));;
			}
		}
		else if (_204b09581_IsF64(_self_)) {
			_case_begin_20819c516:;
			{
				return (_204b06e85_ReadF64(_self_) == _204b07738_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_20819b801:;
			{
				return false;;
			}
		}
		_match_end_20819b713:;
	};
}



inline jule::Bool _204b0a96c_Lt(_204a9d338_Const* _self_, _204a9d338_Const _28514_x) {
	{
		
		if (_204b092ea_IsStr(_self_)) {
			_case_begin_2081a0dbb:;
			{
				return (_204b092ea_IsStr(&_28514_x) && (_204b06bee_ReadStr(_self_) < _204b06bee_ReadStr(&_28514_x)));;
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081a0e32:;
			{
				return (_204b0644b_ReadI64(_self_) < _204b0721b_AsI64(&_28514_x));;
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081a0e98:;
			{
				return (_204b066d2_ReadU64(_self_) < _204b074a2_AsU64(&_28514_x));;
			}
		}
		else if (_204b09581_IsF64(_self_)) {
			_case_begin_2081a1020:;
			{
				return (_204b06e85_ReadF64(_self_) < _204b07738_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_20819cb54:;
			{
				return false;;
			}
		}
		_match_end_20819ca77:;
	};
}



inline jule::Bool _204b0acad_LtEq(_204a9d338_Const* _self_, _204a9d338_Const _30816_x) {
	{
		
		if (_204b092ea_IsStr(_self_)) {
			_case_begin_2081a3ac2:;
			{
				return (_204b092ea_IsStr(&_30816_x) && (_204b06bee_ReadStr(_self_) <= _204b06bee_ReadStr(&_30816_x)));;
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081a3b38:;
			{
				return (_204b0644b_ReadI64(_self_) <= _204b0721b_AsI64(&_30816_x));;
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081a3b9e:;
			{
				return (_204b066d2_ReadU64(_self_) <= _204b074a2_AsU64(&_30816_x));;
			}
		}
		else if (_204b09581_IsF64(_self_)) {
			_case_begin_2081a3c26:;
			{
				return (_204b06e85_ReadF64(_self_) <= _204b07738_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_2081a177e:;
			{
				return false;;
			}
		}
		_match_end_2081a16a2:;
	};
}



inline jule::Bool _204b0b0ee_Gt(_204a9d338_Const* _self_, _204a9d338_Const _33114_x) {
	{
		
		if (_204b092ea_IsStr(_self_)) {
			_case_begin_2081a67c8:;
			{
				return (_204b092ea_IsStr(&_33114_x) && (_204b06bee_ReadStr(_self_) > _204b06bee_ReadStr(&_33114_x)));;
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081a683e:;
			{
				return (_204b0644b_ReadI64(_self_) > _204b0721b_AsI64(&_33114_x));;
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081a68a5:;
			{
				return (_204b066d2_ReadU64(_self_) > _204b074a2_AsU64(&_33114_x));;
			}
		}
		else if (_204b09581_IsF64(_self_)) {
			_case_begin_2081a692c:;
			{
				return (_204b06e85_ReadF64(_self_) > _204b07738_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_2081a4485:;
			{
				return false;;
			}
		}
		_match_end_2081a43a8:;
	};
}



inline jule::Bool _204b0b440_GtEq(_204a9d338_Const* _self_, _204a9d338_Const _35416_x) {
	{
		
		if (_204b092ea_IsStr(_self_)) {
			_case_begin_2081a94ce:;
			{
				return (_204b092ea_IsStr(&_35416_x) && (_204b06bee_ReadStr(_self_) >= _204b06bee_ReadStr(&_35416_x)));;
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081a9545:;
			{
				return (_204b0644b_ReadI64(_self_) >= _204b0721b_AsI64(&_35416_x));;
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081a95ab:;
			{
				return (_204b066d2_ReadU64(_self_) >= _204b074a2_AsU64(&_35416_x));;
			}
		}
		else if (_204b09581_IsF64(_self_)) {
			_case_begin_2081a9633:;
			{
				return (_204b06e85_ReadF64(_self_) >= _204b07738_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_2081a718b:;
			{
				return false;;
			}
		}
		_match_end_2081a70ae:;
	};
}



inline jule::Bool _204b0b781_Add(_204a9d338_Const* _self_, _204a9d338_Const _37519_x) {
	{
		
		if (_204b092ea_IsStr(_self_)) {
			_case_begin_2081ac1d5:;
			{
				if ((!(_204b092ea_IsStr(&_37519_x)))) {
					return false;;
				};
				_204b0830a_SetStr(_self_, (_204b06bee_ReadStr(_self_) + _204b06bee_ReadStr(&_37519_x)));
			}
		}
		else if (_204b09581_IsF64(_self_)) {
			_case_begin_2081ac24b:;
			{
				_204b085b3_SetF64(_self_, (_204b06e85_ReadF64(_self_) + _204b07738_AsF64(&_37519_x)));
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081ac2b2:;
			{
				if (_204b09581_IsF64(&_37519_x)) {
					_204b085b3_SetF64(_self_, (_204b07738_AsF64(_self_) + _204b06e85_ReadF64(&_37519_x)));
				} else {
					_204b079e1_SetI64(_self_, (_204b0644b_ReadI64(_self_) + _204b0721b_AsI64(&_37519_x)));
				};
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081ac339:;
			{
				if (_204b09581_IsF64(&_37519_x)) {
					_204b085b3_SetF64(_self_, (_204b07738_AsF64(_self_) + _204b06e85_ReadF64(&_37519_x)));
				} else {
					_204b07c99_SetU64(_self_, (jule::U64)(_204b066d2_ReadU64(_self_) + _204b074a2_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_2081a9d92:;
			{
				return false;;
			}
		}
		_match_end_2081a9cb5:;
	};
	return true;;
}



inline jule::Bool _204b0bac2_Sub(_204a9d338_Const* _self_, _204a9d338_Const _40419_x) {
	{
		
		if (_204b09581_IsF64(_self_)) {
			_case_begin_2081b200e:;
			{
				_204b085b3_SetF64(_self_, (_204b06e85_ReadF64(_self_) - _204b07738_AsF64(&_40419_x)));
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081b2075:;
			{
				if (_204b09581_IsF64(&_40419_x)) {
					_204b085b3_SetF64(_self_, (_204b07738_AsF64(_self_) - _204b06e85_ReadF64(&_40419_x)));
				} else {
					_204b079e1_SetI64(_self_, (_204b0644b_ReadI64(_self_) - _204b0721b_AsI64(&_40419_x)));
				};
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081b20db:;
			{
				if (_204b09581_IsF64(&_40419_x)) {
					_204b085b3_SetF64(_self_, (_204b07738_AsF64(_self_) - _204b06e85_ReadF64(&_40419_x)));
				} else {
					_204b07c99_SetU64(_self_, (jule::U64)(_204b066d2_ReadU64(_self_) - _204b074a2_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_2081b174a:;
			{
				return false;;
			}
		}
		_match_end_2081b164b:;
	};
	return true;;
}



inline jule::Bool _204b0be13_Mul(_204a9d338_Const* _self_, _204a9d338_Const _42819_x) {
	{
		
		if (_204b09581_IsF64(_self_)) {
			_case_begin_2081b5e25:;
			{
				_204b085b3_SetF64(_self_, (_204b06e85_ReadF64(_self_) * _204b07738_AsF64(&_42819_x)));
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081b5e8b:;
			{
				if (_204b09581_IsF64(&_42819_x)) {
					_204b085b3_SetF64(_self_, (_204b07738_AsF64(_self_) * _204b06e85_ReadF64(&_42819_x)));
				} else {
					_204b079e1_SetI64(_self_, (_204b0644b_ReadI64(_self_) * _204b0721b_AsI64(&_42819_x)));
				};
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081b6002:;
			{
				if (_204b09581_IsF64(&_42819_x)) {
					_204b085b3_SetF64(_self_, (_204b07738_AsF64(_self_) * _204b06e85_ReadF64(&_42819_x)));
				} else {
					_204b07c99_SetU64(_self_, (jule::U64)(_204b066d2_ReadU64(_self_) * _204b074a2_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_2081b54eb:;
			{
				return false;;
			}
		}
		_match_end_2081b540d:;
	};
	return true;;
}



inline jule::Bool _204b0c254_Div(_204a9d338_Const* _self_, _204a9d338_Const _45619_x) {
	{
		
		if (_204b09581_IsF64(_self_)) {
			_case_begin_2081b9d2a:;
			{
				jule::F64 _4594_l = _204b07738_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_204b085b3_SetF64(_self_, ({ jule::F64 __jule_x = _204b06e85_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081b9d91:;
			{
				jule::F64 _4654_l = _204b07738_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_204b085b3_SetF64(_self_, ({ jule::F64 __jule_x = _204b07738_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081b9e07:;
			{
				jule::F64 _4714_l = _204b07738_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_204b085b3_SetF64(_self_, ({ jule::F64 __jule_x = _204b07738_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_2081b9401:;
			{
				return false;;
			}
		}
		_match_end_2081b9313:;
	};
	return true;;
}



inline jule::Bool _204b0c595_Mod(_204a9d338_Const* _self_, _204a9d338_Const _48519_x) {
	{
		
		if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081bdc0d:;
			{
				jule::I64 _4884_l = _204b0721b_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_204b079e1_SetI64(_self_, ({ jule::I64 __jule_x = _204b0644b_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081be11a:;
			{
				jule::U64 _4944_l = _204b074a2_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_204b07c99_SetU64(_self_, ({ jule::U64 __jule_x = _204b066d2_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_2081bdb86:;
			{
				return false;;
			}
		}
		_match_end_2081bda76:;
	};
	return true;;
}



inline jule::Bool _204b0c8d6_BitwiseAnd(_204a9d338_Const* _self_, _204a9d338_Const _50726_x) {
	{
		
		if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081c1a79:;
			{
				_204b079e1_SetI64(_self_, (_204b0644b_ReadI64(_self_) & _204b0721b_AsI64(&_50726_x)));
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081c1e86:;
			{
				_204b07c99_SetU64(_self_, (_204b066d2_ReadU64(_self_) & _204b074a2_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_2081c1a02:;
			{
				return false;;
			}
		}
		_match_end_2081c18e2:;
	};
	return true;;
}



inline jule::Bool _204b0cc27_BitwiseOr(_204a9d338_Const* _self_, _204a9d338_Const _52125_x) {
	{
		
		if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081c384a:;
			{
				_204b079e1_SetI64(_self_, (_204b0644b_ReadI64(_self_) | _204b0721b_AsI64(&_52125_x)));
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081c3c57:;
			{
				_204b07c99_SetU64(_self_, (_204b066d2_ReadU64(_self_) | _204b074a2_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_2081c37c3:;
			{
				return false;;
			}
		}
		_match_end_2081c36b3:;
	};
	return true;;
}



inline jule::Bool _204b0d068_Xor(_204a9d338_Const* _self_, _204a9d338_Const _53519_x) {
	{
		
		if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081c561b:;
			{
				_204b079e1_SetI64(_self_, (_204b0644b_ReadI64(_self_) ^ _204b0721b_AsI64(&_53519_x)));
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081c5a28:;
			{
				_204b07c99_SetU64(_self_, (_204b066d2_ReadU64(_self_) ^ _204b074a2_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_2081c5594:;
			{
				return false;;
			}
		}
		_match_end_2081c5484:;
	};
	return true;;
}



inline jule::Bool _204b0d3a9_Lshift(_204a9d338_Const* _self_, _204a9d338_Const _54922_x) {
	{
		
		if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081c73dc:;
			{
				jule::I64 _5524_l = _204b0721b_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _204b074a2_AsU64(&_54922_x);;
					_204b079e1_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_204b0da5d_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081c77e9:;
			{
				_204b0da5d_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_2081c7365:;
			{
				return false;;
			}
		}
		_match_end_2081c7255:;
	};
	return true;;
}



inline jule::Bool _204b0d6ea_Rshift(_204a9d338_Const* _self_, _204a9d338_Const _56922_x) {
	{
		
		if (_204b08a47_IsI64(_self_)) {
			_case_begin_2081c9972:;
			{
				jule::I64 _5724_l = _204b0721b_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _204b074a2_AsU64(&_56922_x);;
					_204b079e1_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_204b0dd8d_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_204b08ccd_IsU64(_self_)) {
			_case_begin_2081c9d7e:;
			{
				_204b0dd8d_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_2081c98ea:;
			{
				return false;;
			}
		}
		_match_end_2081c97eb:;
	};
	return true;;
}








inline jule::Bool _204a47579_Field_eq(_204a47579_Field *_self_, _204a47579_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_204a4c727_FieldIns> _204a47931_instance(jule::Ptr<_204a47579_Field> _self_) {
	return jule::new_ptr<_204a4c727_FieldIns>(_204a4c727_FieldIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Default=jule::Ptr<_204ca2b7a_Data>(nullptr)});;
}








inline jule::Bool _204a49559_Operators_eq(_204a49559_Operators *_self_, _204a49559_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_204a4d2c7_StructIns> _204a4a912_instance(jule::Ptr<_204a4a46c_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_204a4d2c7_StructIns> _997_ins = jule::new_ptr<_204a4d2c7_StructIns>(_204a4d2c7_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4c727_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a4c727_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204c5319c_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_204b1d5a6_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__204c00424_new(), ._field_Operators=_204a49559_Operators{._field_Eq=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Gt=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Lt=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Shl=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Shr=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Add=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Sub=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Div=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Mul=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Mod=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Neg=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Pos=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_204b21664_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084ad6d4:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204c5319c_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_2084ad6d4:;
			++it;
			goto _iter_begin_2084ad6d4;
		}
		_iter_end_2084ad6d4:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084ae5b4:;
		if (it != expr_end) {
			jule::Ptr<_204a47579_Field> _11015_f = *it;
			{
				jule::Ptr<_204a4c727_FieldIns> _1118_f2 = _204a47931_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*(_997_ins))._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4c727_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _204cdc368_Mutable((*((*(_11015_f))._field_TypeSym))._field_Type))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_2084ae5b4:;
			++it;
			goto _iter_begin_2084ae5b4;
		}
		_iter_end_2084ae5b4:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*(_997_ins))._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*(_997_ins))._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1d5a6_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b1d5a6_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2084b38d7:;
			if (it != expr_end) {
				jule::Ptr<_204b1d5a6_Fn> _12316_f = *it;
				{
					jule::Ptr<_204b1d5a6_Fn> _1249_fins = jule::new_ptr<_204b1d5a6_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1d5a6_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_2084b38d7:;
				++it;
				goto _iter_begin_2084b38d7;
			}
			_iter_end_2084b38d7:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_204a4d2c7_StructIns> _204a4ac20_appendInstance(_204a4a46c_Struct* _self_, jule::Ptr<_204a4d2c7_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084b5c5d:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _14115_ains = *it;
			{
				if (_204a4de76_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_2084b5c5d:;
			++it;
			goto _iter_begin_2084b5c5d;
		}
		_iter_end_2084b5c5d:;
	};
	{ jule::Slice<jule::Ptr<_204a4d2c7_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_204b1d5a6_Fn> _204a4b11b_FindMethod(_204a4a46c_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084b72d1:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_2084b72d1:;
			++it;
			goto _iter_begin_2084b72d1;
		}
		_iter_end_2084b72d1:;
	};
	return nullptr;;
}



inline jule::Ptr<_204c5319c_Var> _204a4b45c_FindStatic(_204a4a46c_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084b8623:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_2084b8623:;
			++it;
			goto _iter_begin_2084b8623;
		}
		_iter_end_2084b8623:;
	};
	return nullptr;;
}



inline jule::Ptr<_204a47579_Field> _204a4b79d_FindField(_204a4a46c_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084b9602:;
		if (it != expr_end) {
			jule::Ptr<_204a47579_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_2084b9602:;
			++it;
			goto _iter_begin_2084b9602;
		}
		_iter_end_2084b9602:;
	};
	return nullptr;;
}



inline jule::Bool _204a4bade_IsImplements(_204a4a46c_Struct* _self_, jule::Ptr<_204b28cba_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084ba5e2:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_2084ba5e2:;
			++it;
			goto _iter_begin_2084ba5e2;
		}
		_iter_end_2084ba5e2:;
	};
	return false;;
}



inline jule::Bool _204a4be30_IsUses(_204a4a46c_Struct* _self_, jule::Ptr<_204a4a46c_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084bb093:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_2084bbb43:;
				}
				_iter_end_2084bbb43:;;
			}
			_iter_next_2084bb093:;
			++it;
			goto _iter_begin_2084bb093;
		}
		_iter_end_2084bb093:;
	};
	return false;;
}








inline jule::Bool _204a4c727_FieldIns_eq(_204a4c727_FieldIns *_self_, _204a4c727_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _204a4d67e_Str(_204a4d2c7_StructIns* _self_) {
	_1eeabb290_Builder _2417_kind = static__1eeabbadc_New(32LL);;
	({
		auto except = _1eeabc26e_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:242:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1eeabc527_WriteByte(&_2417_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:244:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2084be805:;
			if (it != expr_end) {
				jule::I32 _2458_i = it - expr->begin();
				jule::Ptr<_204cd909b_InsGeneric> *_24511_g = it;
				{
					({
						auto except = _1eeabc26e_WriteStr(&_2417_kind, _204cdad7d_Str((*((*(_24511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:246:5"));
						(except.result);
					});
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1eeabc527_WriteByte(&_2417_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:248:6"));
						});
					};
				}
				_iter_next_2084be805:;
				++it;
				_2458_i++;
				goto _iter_begin_2084be805;
			}
			_iter_end_2084be805:;
		};
		({
			auto except = _1eeabc527_WriteByte(&_2417_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:251:4"));
		});
	};
	return _1eeabcaee_Str(&_2417_kind);;
}



inline jule::Bool _204a4d9c0_Equal(jule::Ptr<_204a4d2c7_StructIns> _self_, jule::Ptr<_204cda982_Type> _25718_other) {
	jule::Ptr<_204a4d2c7_StructIns> _2583_s = _204cde6ab_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _2717_i = 0LL;;
	for (; (_2717_i < (*(_self_))._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_204cdb1be_Equal((*((*_self_.alloc)._field_Generics[_2717_i]))._field_Type, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_2084c3b6c:;
	}
	_iter_end_2084c3b6c:;;
	return true;;
}



inline jule::Bool _204a4de76_Same(_204a4d2c7_StructIns* _self_, jule::Ptr<_204a4d2c7_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*(_28516_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084c6642:;
		if (it != expr_end) {
			jule::I32 _2897_i = it - expr->begin();
			jule::Ptr<_204cd909b_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_204cd909b_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Type))._field_BindIdent != (*(*(_2904_g2))._field_Type.alloc)._field_BindIdent) || (!(_204cdb1be_Equal((*((*(_28910_g))))._field_Type, (*(_2904_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_2084c6642:;
			++it;
			_2897_i++;
			goto _iter_begin_2084c6642;
		}
		_iter_end_2084c6642:;
	};
	return true;;
}



inline jule::Ptr<_204b1d5a6_Fn> _204a4e372_FindMethod(_204a4d2c7_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084c915b:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_2084c915b:;
			++it;
			goto _iter_begin_2084c915b;
		}
		_iter_end_2084c915b:;
	};
	return nullptr;;
}



inline jule::Ptr<_204a4c727_FieldIns> _204a4e6b3_FindField(_204a4d2c7_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084ca49d:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_2084ca49d:;
			++it;
			goto _iter_begin_2084ca49d;
		}
		_iter_end_2084ca49d:;
	};
	return nullptr;;
}



inline jule::Ptr<_204c5319c_Var> _204a4ea04_FindStatic(_204a4d2c7_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084cb68b:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_2084cb68b:;
			++it;
			goto _iter_begin_2084cb68b;
		}
		_iter_end_2084cb68b:;
	};
	return nullptr;;
}








inline jule::Bool _204b10dd4_OperandExprModel_eq(_204b10dd4_OperandExprModel *_self_, _204b10dd4_OperandExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _204b113ce_BinaryExprModel_eq(_204b113ce_BinaryExprModel *_self_, _204b113ce_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _204b117a8_UnaryExprModel_eq(_204b117a8_UnaryExprModel *_self_, _204b117a8_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _204b11cd6_StructArgExprModel_eq(_204b11cd6_StructArgExprModel *_self_, _204b11cd6_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _204b12479_AllocStructLitExprModel_eq(_204b12479_AllocStructLitExprModel *_self_, _204b12479_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _204b12a0c_CastingExprModel_eq(_204b12a0c_CastingExprModel *_self_, _204b12a0c_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _204b13c3e_IndexingExprModel_eq(_204b13c3e_IndexingExprModel *_self_, _204b13c3e_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _204b145be_KeyValPairExprModel_eq(_204b145be_KeyValPairExprModel *_self_, _204b145be_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _204b1502b_SlicingExprModel_eq(_204b1502b_SlicingExprModel *_self_, _204b1502b_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _204b155ae_TraitSubIdentExprModel_eq(_204b155ae_TraitSubIdentExprModel *_self_, _204b155ae_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _204b15e50_StructSubIdentExprModel_eq(_204b15e50_StructSubIdentExprModel *_self_, _204b15e50_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _204b162e6_StructStaticIdentExprModel_eq(_204b162e6_StructStaticIdentExprModel *_self_, _204b162e6_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _204b16cb9_BuiltinPrintCallExprModel_eq(_204b16cb9_BuiltinPrintCallExprModel *_self_, _204b16cb9_BuiltinPrintCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204b170b6_BuiltinPrintlnCallExprModel_eq(_204b170b6_BuiltinPrintlnCallExprModel *_self_, _204b170b6_BuiltinPrintlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204b17490_BuiltinNewCallExprModel_eq(_204b17490_BuiltinNewCallExprModel *_self_, _204b17490_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _204b17869_BuiltinPanicCallExprModel_eq(_204b17869_BuiltinPanicCallExprModel *_self_, _204b17869_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204b17d20_BuiltinMakeCallExprModel_eq(_204b17d20_BuiltinMakeCallExprModel *_self_, _204b17d20_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _204b181e9_BuiltinAppendCallExprModel_eq(_204b181e9_BuiltinAppendCallExprModel *_self_, _204b181e9_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _204b184e6_BuiltinLenCallExprModel_eq(_204b184e6_BuiltinLenCallExprModel *_self_, _204b184e6_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204b187e3_BuiltinCapCallExprModel_eq(_204b187e3_BuiltinCapCallExprModel *_self_, _204b187e3_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204b18bbc_BuiltinDeleteCallExprModel_eq(_204b18bbc_BuiltinDeleteCallExprModel *_self_, _204b18bbc_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _204b19096_BuiltinCopyCallExprModel_eq(_204b19096_BuiltinCopyCallExprModel *_self_, _204b19096_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _204b19470_BuiltinErrorCallExprModel_eq(_204b19470_BuiltinErrorCallExprModel *_self_, _204b19470_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _204b1976c_SizeofExprModel_eq(_204b1976c_SizeofExprModel *_self_, _204b1976c_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204b19e21_AlignofExprModel_eq(_204b19e21_AlignofExprModel *_self_, _204b19e21_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _204b1a10d_RuneExprModel_eq(_204b1a10d_RuneExprModel *_self_, _204b1a10d_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _204b1a77e_FreeExprModel_eq(_204b1a77e_FreeExprModel *_self_, _204b1a77e_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _204b1bad2_Param_eq(_204b1bad2_Param *_self_, _204b1bad2_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_204b2050e_ParamIns> _204b1be9a_instance(jule::Ptr<_204b1bad2_Param> _self_) {
	return jule::new_ptr<_204b2050e_ParamIns>(_204b2050e_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr)});;
}



inline jule::Bool _204b1c231_IsSelf(_204b1bad2_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _204b1c4b7_IsRef(_204b1bad2_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _204b1da5c_IsVoid(_204b1d5a6_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _204b1dce3_IsMethod(_204b1d5a6_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_204b1bad2_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_204b1c231_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _204b1e079_IsEntryPoint(_204b1d5a6_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _204b1e310_IsInit(_204b1d5a6_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _204b1e596_IsAnon(_204b1d5a6_Fn* _self_) {
	return _204a16db7_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _204b1e82c_AnyVar(_204b1d5a6_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_204b21664_FnIns> _204b1eab3_instanceForce(jule::Ptr<_204b1d5a6_Fn> _self_) {
	jule::Ptr<_204b21664_FnIns> _1107_ins = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::new_ptr<_204bd11d5_Scope>(_204bd11d5_Scope{._field_Parent=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__204c00424_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_204b2050e_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b2050e_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084d4a18:;
		if (it != expr_end) {
			jule::Ptr<_204b1bad2_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b2050e_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204b1be9a_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_2084d4a18:;
			++it;
			goto _iter_begin_2084d4a18;
		}
		_iter_end_2084d4a18:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1107_ins;;
}



inline jule::Ptr<_204b21664_FnIns> _204b1ed49_instance(jule::Ptr<_204b1d5a6_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _204b1eab3_instanceForce(_self_);;
}



inline jule::Ptr<_204b21664_FnIns> _204b20157_appendInstance(_204b1d5a6_Fn* _self_, jule::Ptr<_204b21664_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_204b21664_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_204b21664_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2084da2d2:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _15415_ains = *it;
			{
				if (_204b23204_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_2084da2d2:;
			++it;
			goto _iter_begin_2084da2d2;
		}
		_iter_end_2084da2d2:;
	};
	{ jule::Slice<jule::Ptr<_204b21664_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _204b2050e_ParamIns_eq(_204b2050e_ParamIns *_self_, _204b2050e_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _204b208a5_Str(_204b2050e_ParamIns* _self_) {
	_1eeabb290_Builder _1767_s = static__1eeabbadc_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1eeabc26e_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:178:4"));
			(except.result);
		});
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		({
			auto except = _1eeabc26e_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:182:4"));
			(except.result);
		});
	};
	if (_204b1c231_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_204b1c4b7_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1eeabc527_WriteByte(&_1767_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:187:5"));
			});
		};
		({
			auto except = _1eeabc26e_WriteStr(&_1767_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
		return _1eeabcaee_Str(&_1767_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		({
			auto except = _1eeabc26e_WriteStr(&_1767_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1eeabc26e_WriteStr(&_1767_s, _204cdad7d_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:197:4"));
			(except.result);
		});
	};
	return _1eeabcaee_Str(&_1767_s);;
}







inline jule::Str _204b219d8_Str(_204b21664_FnIns* _self_) {
	;
	return _204b23545_GetKindStr(_self_, false);;
}



inline jule::Bool _204b21d29_Equal(jule::Ptr<_204b21664_FnIns> _self_, jule::Ptr<_204cda982_Type> _22918_other) {
	jule::Ptr<_204b21664_FnIns> _2303_f = _204cde425_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _204b222be_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _204b222be_EqualFn(jule::Ptr<_204b21664_FnIns> _self_, jule::Ptr<_204b21664_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_204b1da5c_IsVoid((*(_self_))._field_Decl.ptr()) != _204b1da5c_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_204b2050e_ParamIns>,jule::Ptr<_204b2050e_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_204b2050e_ParamIns>,jule::Ptr<_204b2050e_ParamIns>>((void*)__jule_anon2084e5122, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I32 _2827_i = 0LL;;
	for (; (_2827_i < (*(_self_))._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*_self_.alloc)._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_2084eae80:;
	}
	_iter_end_2084eae80:;;
	if ((!(_204b1da5c_IsVoid((*_self_.alloc)._field_Decl.ptr())))) {
		if ((!(_204cdb1be_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _204b22610_equalTrait(jule::Ptr<_204b21664_FnIns> _self_, jule::Ptr<_204b21664_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_204b222be_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_204cda982_Type>> _204b22896_Types(_204b21664_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_208501b23:;
			{
				return nullptr;;
			}
		}
		else if ((_204cdee5e_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_208501b89:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_2085016a0:;
			{
				return (*(_204cdee5e_Tup((*(_self_))._field_Result)))._field_Types;;
			}
		}
		_match_end_208501590:;
	};
}



inline jule::Bool _204b22b2c_IsBuiltin(_204b21664_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _204b22db3_IsAnon(_204b21664_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _204b1e596_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _204b23204_Same(_204b21664_FnIns* _self_, jule::Ptr<_204b21664_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*(_34216_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085050dd:;
		if (it != expr_end) {
			jule::I32 _3477_i = it - expr->begin();
			jule::Ptr<_204cd909b_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_204cd909b_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Type))._field_BindIdent != (*(*(_3484_g2))._field_Type.alloc)._field_BindIdent) || (!(_204cdb1be_Equal((*((*(_34710_g))))._field_Type, (*(_3484_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_2085050dd:;
			++it;
			_3477_i++;
			goto _iter_begin_2085050dd;
		}
		_iter_end_2085050dd:;
	};
	return true;;
}



inline jule::Str _204b23545_GetKindStr(_204b21664_FnIns* _self_, jule::Bool _35922_ident) {
	_1eeabb290_Builder _3607_s = static__1eeabbadc_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1eeabc26e_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:363:4"));
			(except.result);
		});
	};
	({
		auto except = _1eeabc26e_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:366:3"));
		(except.result);
	});
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1eeabc527_WriteByte(&_3607_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:369:4"));
		});
		({
			auto except = _1eeabc26e_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1eeabc527_WriteByte(&_3607_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
	});
	jule::I32 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20850a753:;
			if (it != expr_end) {
				jule::I32 _3768_i = it - expr->begin();
				jule::Ptr<_204b2050e_ParamIns> *_37611_p = it;
				{
					({
						auto except = _1eeabc26e_WriteStr(&_3607_s, _204b208a5_Str((*(_37611_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:5"));
						(except.result);
					});
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1eeabc527_WriteByte(&_3607_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:379:6"));
						});
					};
				}
				_iter_next_20850a753:;
				++it;
				_3768_i++;
				goto _iter_begin_20850a753;
			}
			_iter_end_20850a753:;
		};
	};
	({
		auto except = _1eeabc527_WriteByte(&_3607_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:383:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1eeabc527_WriteByte(&_3607_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:385:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_204b1da5c_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1eeabc527_WriteByte(&_3607_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:388:4"));
		});
		({
			auto except = _1eeabc26e_WriteStr(&_3607_s, _204cdad7d_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:389:4"));
			(except.result);
		});
	};
	return _1eeabcaee_Str(&_3607_s);;
}







inline jule::Ptr<_204c12139_ImportInfo> _204b24dc6_SelectPackage(_204b248a9_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20850e504:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_20850e504:;
			++it;
			goto _iter_begin_20850e504;
		}
		_iter_end_20850e504:;
	};
	return nullptr;;
}



inline jule::Ptr<_204c5319c_Var> _204b252c2_FindVar(_204b248a9_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _204b27406_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204b256bd_FindTypeAlias(_204b248a9_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _204b278ac_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_204a4a46c_Struct> _204b25ab9_FindStruct(_204b248a9_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208511935:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_208511935:;
			++it;
			goto _iter_begin_208511935;
		}
		_iter_end_208511935:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b1d5a6_Fn> _204b25eb5_FindFn(_204b248a9_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208512e97:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_208512e97:;
			++it;
			goto _iter_begin_208512e97;
		}
		_iter_end_208512e97:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b28cba_Trait> _204b26306_FindTrait(_204b248a9_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085142ea:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_2085142ea:;
			++it;
			goto _iter_begin_2085142ea;
		}
		_iter_end_2085142ea:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b2b471_Enum> _204b26647_FindEnum(_204b248a9_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085152b8:;
		if (it != expr_end) {
			jule::Ptr<_204b2b471_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_2085152b8:;
			++it;
			goto _iter_begin_2085152b8;
		}
		_iter_end_2085152b8:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204b26988_FindTypeEnum(_204b248a9_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085162a8:;
		if (it != expr_end) {
			jule::Ptr<_204b2cb7b_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_2085162a8:;
			++it;
			goto _iter_begin_2085162a8;
		}
		_iter_end_2085162a8:;
	};
	return nullptr;;
}



inline jule::I32 _204b26e50_findVar1(_204b248a9_SymTab* _self_, jule::Ptr<_204c5319c_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208517298:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_208517298:;
			++it;
			_1097_i++;
			goto _iter_begin_208517298;
		}
		_iter_end_208517298:;
	};
	return -1LL;;
}



inline jule::Ptr<_204c5319c_Var> _204b27406_findVar(_204b248a9_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_204c5319c_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_208519124:;
		}
		_iter_end_208519124:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20851a5a9:;
			if (it != expr_end) {
				jule::Ptr<_204c5319c_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_20851a5a9:;
				++it;
				goto _iter_begin_20851a5a9;
			}
			_iter_end_20851a5a9:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204b278ac_findTypeAlias(_204b248a9_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_204cd9b90_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_20851c468:;
		}
		_iter_end_20851c468:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20851d8ed:;
			if (it != expr_end) {
				jule::Ptr<_204cd9b90_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_20851d8ed:;
				++it;
				goto _iter_begin_20851d8ed;
			}
			_iter_end_20851d8ed:;
		};
	};
	return nullptr;;
}



inline jule::Any _204b27ca8_defByIdent(_204b248a9_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20851eb41:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_20851eb41:;
			++it;
			goto _iter_begin_20851eb41;
		}
		_iter_end_20851eb41:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208520933:;
		if (it != expr_end) {
			jule::Ptr<_204cd9b90_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_208520933:;
			++it;
			goto _iter_begin_208520933;
		}
		_iter_end_208520933:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208523cbb:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_208523cbb:;
			++it;
			goto _iter_begin_208523cbb;
		}
		_iter_end_208523cbb:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085235b2:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_2085235b2:;
			++it;
			goto _iter_begin_2085235b2;
		}
		_iter_end_2085235b2:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208527550:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_208527550:;
			++it;
			goto _iter_begin_208527550;
		}
		_iter_end_208527550:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085275e9:;
		if (it != expr_end) {
			jule::Ptr<_204b2b471_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_2085275e9:;
			++it;
			goto _iter_begin_2085275e9;
		}
		_iter_end_2085275e9:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20852aa5e:;
		if (it != expr_end) {
			jule::Ptr<_204b2cb7b_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_20852aa5e:;
			++it;
			goto _iter_begin_20852aa5e;
		}
		_iter_end_20852aa5e:;
	};
	return nullptr;;
}



inline jule::Bool _204b2825e_isDuplicatedIdent(_204b248a9_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20852dc71:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_20852dc71:;
			++it;
			goto _iter_begin_20852dc71;
		}
		_iter_end_20852dc71:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20852dce8:;
		if (it != expr_end) {
			jule::Ptr<_204cd9b90_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_20852dce8:;
			++it;
			goto _iter_begin_20852dce8;
		}
		_iter_end_20852dce8:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085410d5:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_2085410d5:;
			++it;
			goto _iter_begin_2085410d5;
		}
		_iter_end_2085410d5:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20854237d:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_20854237d:;
			++it;
			goto _iter_begin_20854237d;
		}
		_iter_end_20854237d:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085434b1:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_2085434b1:;
			++it;
			goto _iter_begin_2085434b1;
		}
		_iter_end_2085434b1:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20854488b:;
		if (it != expr_end) {
			jule::Ptr<_204b2b471_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_20854488b:;
			++it;
			goto _iter_begin_20854488b;
		}
		_iter_end_20854488b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208545c44:;
		if (it != expr_end) {
			jule::Ptr<_204b2cb7b_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_208545c44:;
			++it;
			goto _iter_begin_208545c44;
		}
		_iter_end_208545c44:;
	};
	return false;;
}







inline jule::Str _204b291b6_Str(_204b28cba_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _204b29507_Equal(jule::Ptr<_204b28cba_Trait> _self_, jule::Ptr<_204cda982_Type> _2518_other) {
	jule::Ptr<_204b28cba_Trait> _263_trt = _204cde942_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_204b1d5a6_Fn> _204b2999c_FindMethod(_204b28cba_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2085487b3:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_2085487b3:;
			++it;
			goto _iter_begin_2085487b3;
		}
		_iter_end_2085487b3:;
	};
	return _204b2a12e_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_204b1d5a6_Fn> _204b2a12e_findMethodInherit(_204b28cba_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20854b453:;
		if (it != expr_end) {
			jule::Ptr<_204ce3193_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_20854b453;
				};
				jule::Ptr<_204b28cba_Trait> _608_t = _204cde942_Trait((*(_5615_i))._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_204b1d5a6_Fn> _629_f2 = _204b2999c_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_20854b453:;
			++it;
			goto _iter_begin_20854b453;
		}
		_iter_end_20854b453:;
	};
	return nullptr;;
}








inline jule::Bool _204b2a915_EnumItem_eq(_204b2a915_EnumItem *_self_, _204b2a915_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _204b2acde_AutoExpr(_204b2a915_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _204b2b828_Str(_204b2b471_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _204b2bb69_Equal(jule::Ptr<_204b2b471_Enum> _self_, jule::Ptr<_204cda982_Type> _3818_other) {
	jule::Ptr<_204b2b471_Enum> _393_enm = _204cdd8db_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_204b2a915_EnumItem> _204b2c098_FindItem(_204b2b471_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20855028c:;
		if (it != expr_end) {
			jule::Ptr<_204b2a915_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_20855028c:;
			++it;
			goto _iter_begin_20855028c;
		}
		_iter_end_20855028c:;
	};
	return nullptr;;
}








inline jule::Bool _204b2c5a4_TypeEnumItem_eq(_204b2c5a4_TypeEnumItem *_self_, _204b2c5a4_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _204b2d000_Str(_204b2cb7b_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _204b2d341_Equal(jule::Ptr<_204b2cb7b_TypeEnum> _self_, jule::Ptr<_204cda982_Type> _8018_other) {
	jule::Ptr<_204b2cb7b_TypeEnum> _813_tenm = _204cddb72_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_204b2c5a4_TypeEnumItem> _204b2d770_FindItem(_204b2cb7b_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208552536:;
		if (it != expr_end) {
			jule::Ptr<_204b2c5a4_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_208552536:;
			++it;
			goto _iter_begin_208552536;
		}
		_iter_end_208552536:;
	};
	return nullptr;;
}








inline jule::Bool _204ba37e5_comptimeRange_eq(_204ba37e5_comptimeRange *_self_, _204ba37e5_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _204ba3be1_Str(_204ba37e5_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _204ba4032_Equal(jule::Ptr<_204ba37e5_comptimeRange> _self_, jule::Ptr<_204cda982_Type> _2718_other) {
	return false;;
}








inline jule::Bool _204ba4351_comptimeStructField_eq(_204ba4351_comptimeStructField *_self_, _204ba4351_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _204ba4708_Str(_204ba4351_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _204ba4a49_Equal(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Ptr<_204cda982_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ba5055__Decl(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Ptr<_204ca4b49_eval>* _4127_e, jule::Ptr<_204a32b6e_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204ba5451__Type(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Ptr<_204ca4b49_eval>* _5327_e, jule::Ptr<_204a32b6e_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_204ca2b7a_Data> _204ba5792_subIdent(jule::Ptr<_204ba4351_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_20855e741:;
			{
				jule::Ptr<_204b21664_FnIns> _648_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2085609b7, jule::Ptr<__jule_anon_2085609b7_ctx>::make(__jule_anon_2085609b7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2085609b7_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_20855e7c9:;
			{
				jule::Ptr<_204b21664_FnIns> _718_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208562942, jule::Ptr<__jule_anon_208562942_ctx>::make(__jule_anon_208562942_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208562942_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_20855e576:;
			{
				return nullptr;;
			}
		}
		_match_end_20855e686:;
	};
}







inline jule::Str _204ba5eac_Str(_204ba5ae4_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _204ba62ed_Equal(jule::Ptr<_204ba5ae4_comptimeStructFields> _self_, jule::Ptr<_204cda982_Type> _9018_other) {
	return false;;
}



inline void _204ba6782_ready(_204ba5ae4_comptimeStructFields* _self_, jule::Ptr<_204c5319c_Var>* _9426_keyA, jule::Ptr<_204c5319c_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba4351_comptimeStructField>(_204ba4351_comptimeStructField{._field_field=jule::Ptr<_204a4c727_FieldIns>(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data6)})});
	};
}



inline void _204ba6ae5_index(_204ba5ae4_comptimeStructFields* _self_, jule::Ptr<_204ca2b7a_Data>* _11526_d, jule::I32 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba4351_comptimeStructField>(_204ba4351_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data6)});
}



inline void _204ba7013_step(_204ba5ae4_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_204c5319c_Var>* _12633_keyA, jule::Ptr<_204c5319c_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_204ce0712_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I32 _204ba7299_len(_204ba5ae4_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _204ba7574_comptimeStatic_eq(_204ba7574_comptimeStatic *_self_, _204ba7574_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _204ba792b_Str(_204ba7574_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _204ba7c6c_Equal(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Ptr<_204cda982_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ba8278__Decl(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Ptr<_204ca4b49_eval>* _15427_e, jule::Ptr<_204a32b6e_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204ba8674__Type(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Ptr<_204ca4b49_eval>* _16627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_204ca2b7a_Data> _204ba89b5_subIdent(jule::Ptr<_204ba7574_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_208575229:;
			{
				jule::Ptr<_204b21664_FnIns> _1778_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2085764a0, jule::Ptr<__jule_anon_2085764a0_ctx>::make(__jule_anon_2085764a0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2085764a0_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_2085752b2:;
			{
				jule::Ptr<_204b21664_FnIns> _1848_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20857842a, jule::Ptr<__jule_anon_20857842a_ctx>::make(__jule_anon_20857842a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20857842a_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_20857505e:;
			{
				return nullptr;;
			}
		}
		_match_end_20857516e:;
	};
}







inline jule::Str _204ba91d0_Str(_204ba8d28_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _204ba9521_Equal(jule::Ptr<_204ba8d28_comptimeStatics> _self_, jule::Ptr<_204cda982_Type> _20318_other) {
	return false;;
}



inline void _204ba99a5_ready(_204ba8d28_comptimeStatics* _self_, jule::Ptr<_204c5319c_Var>* _20726_keyA, jule::Ptr<_204c5319c_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba7574_comptimeStatic>(_204ba7574_comptimeStatic{._field_field=jule::Ptr<_204c5319c_Var>(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data8)})});
	};
}



inline void _204ba9d18_index(_204ba8d28_comptimeStatics* _self_, jule::Ptr<_204ca2b7a_Data>* _22826_d, jule::I32 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba7574_comptimeStatic>(_204ba7574_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data8)});
}



inline void _204baa236_step(_204ba8d28_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_204c5319c_Var>* _23933_keyA, jule::Ptr<_204c5319c_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_204ce201b_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I32 _204baa4bc_len(_204ba8d28_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _204baa797_comptimeEnumField_eq(_204baa797_comptimeEnumField *_self_, _204baa797_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _204baab4e_Str(_204baa797_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _204baae90_Equal(jule::Ptr<_204baa797_comptimeEnumField> _self_, jule::Ptr<_204cda982_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bab48a__Decl(jule::Ptr<_204baa797_comptimeEnumField> _self_, jule::Ptr<_204ca4b49_eval>* _26727_e, jule::Ptr<_204a32b6e_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bab7cb_subIdent(jule::Ptr<_204baa797_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_208585734:;
			{
				jule::Ptr<_204b21664_FnIns> _2828_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20858988c, jule::Ptr<__jule_anon_20858988c_ctx>::make(__jule_anon_20858988c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20858988c_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_208585cea:;
			{
				return nullptr;;
			}
		}
		_match_end_208584c61:;
	};
}







inline jule::Str _204bac06d_Str(_204babaa6_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _204bac3ae_Equal(jule::Ptr<_204babaa6_comptimeEnumFields> _self_, jule::Ptr<_204cda982_Type> _30118_other) {
	return false;;
}



inline void _204bac7bb_ready(_204babaa6_comptimeEnumFields* _self_, jule::Ptr<_204c5319c_Var>* _30526_keyA, jule::Ptr<_204c5319c_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204baa797_comptimeEnumField>(_204baa797_comptimeEnumField{._field_field=jule::Ptr<_204b2a915_EnumItem>(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data10)})});
	};
}



inline void _204bacb2e_index(_204babaa6_comptimeEnumFields* _self_, jule::Ptr<_204ca2b7a_Data>* _32626_d, jule::I32 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204baa797_comptimeEnumField>(_204baa797_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data10)});
}



inline void _204bad04c_step(_204babaa6_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_204c5319c_Var>* _33733_keyA, jule::Ptr<_204c5319c_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_204ce0c2e_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I32 _204bad2d3_len(_204babaa6_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _204bad5ad_comptimeParam_eq(_204bad5ad_comptimeParam *_self_, _204bad5ad_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _204bad965_Str(_204bad5ad_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _204badca6_Equal(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204cda982_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bae2c3__Decl(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204ca4b49_eval>* _36527_e, jule::Ptr<_204a32b6e_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bae6be__Type(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204ca4b49_eval>* _37727_e, jule::Ptr<_204a32b6e_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_204ca2b7a_Data> _204baeaba__Recv(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Ptr<_204ca4b49_eval>* _38527_e, jule::Ptr<_204a32b6e_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _3907_constant = static__204b05549_NewBool(_204b1c231_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204baee0b_subIdent(jule::Ptr<_204bad5ad_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_2085a0331:;
			{
				jule::Ptr<_204b21664_FnIns> _4018_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2085a1651, jule::Ptr<__jule_anon_2085a1651_ctx>::make(__jule_anon_2085a1651_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2085a1651_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_2085a03ca:;
			{
				jule::Ptr<_204b21664_FnIns> _4088_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2085a35cb, jule::Ptr<__jule_anon_2085a35cb_ctx>::make(__jule_anon_2085a35cb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2085a35cb_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_2085a0452:;
			{
				jule::Ptr<_204b21664_FnIns> _4158_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2085a5556, jule::Ptr<__jule_anon_2085a5556_ctx>::make(__jule_anon_2085a5556_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2085a5556_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_2085a0023:;
			{
				return nullptr;;
			}
		}
		_match_end_2085a0243:;
	};
}







inline jule::Str _204bb06ae_Str(_204bb0417_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _204bb0a00_Equal(jule::Ptr<_204bb0417_comptimeParams> _self_, jule::Ptr<_204cda982_Type> _43418_other) {
	return false;;
}



inline void _204bb0e84_ready(_204bb0417_comptimeParams* _self_, jule::Ptr<_204c5319c_Var>* _43826_keyA, jule::Ptr<_204c5319c_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bad5ad_comptimeParam>(_204bad5ad_comptimeParam{._field_param=jule::Ptr<_204b2050e_ParamIns>(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data12)})});
	};
}



inline void _204bb12e7_index(_204bb0417_comptimeParams* _self_, jule::Ptr<_204ca2b7a_Data>* _45926_d, jule::I32 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bad5ad_comptimeParam>(_204bad5ad_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data12)});
}



inline void _204bb1715_step(_204bb0417_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_204c5319c_Var>* _47033_keyA, jule::Ptr<_204c5319c_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_204ce124b_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I32 _204bb199b_len(_204bb0417_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _204bb212d_Str(_204bb1c76_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _204bb246e_Equal(jule::Ptr<_204bb1c76_comptimeTypeInfos> _self_, jule::Ptr<_204cda982_Type> _49418_other) {
	return false;;
}



inline void _204bb2903_ready(_204bb1c76_comptimeTypeInfos* _self_, jule::Ptr<_204c5319c_Var>* _49826_keyA, jule::Ptr<_204c5319c_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bb36e5_comptimeTypeInfo>(_204bb36e5_comptimeTypeInfo{._field_base=jule::Ptr<_204cda982_Type>(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data15)})});
	};
}



inline void _204bb2c66_index(_204bb1c76_comptimeTypeInfos* _self_, jule::Ptr<_204ca2b7a_Data>* _51926_d, jule::I32 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data15)});
}



inline void _204bb3184_step(_204bb1c76_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_204c5319c_Var>* _52833_keyA, jule::Ptr<_204c5319c_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data15);
	};
}



inline jule::I32 _204bb341a_len(_204bb1c76_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _204bb36e5_comptimeTypeInfo_eq(_204bb36e5_comptimeTypeInfo *_self_, _204bb36e5_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _204bb3a9c_Str(_204bb36e5_comptimeTypeInfo* _self_) {
	return ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("comptimeTypeInfo[", 17)); size += part0.len(); jule::Str part1 = std::move(_204cdad7d_Str((*(_self_))._field_base.ptr())); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit("]", 1)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
}



inline jule::Bool _204bb3ddd_Equal(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204cda982_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb452b__Decl(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _55627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_204cde6ab_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2085bc55c:;
			{
				_5617_decl=jule::Any((*(_204cde6ab_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_204cde942_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2085bc5c3:;
			{
				_5617_decl=jule::Any(_204cde942_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_204cdd8db_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085bb094:;
			{
				_5617_decl=jule::Any(_204cdd8db_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_204cddb72_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085bb10a:;
			{
				_5617_decl=jule::Any(_204cddb72_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_204cde425_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085bb171:;
			{
				jule::Ptr<_204b21664_FnIns> _5728_f = _204cde425_Fn((*(_self_))._field_base);;
				{
					
					if (_204b22b2c_IsBuiltin(_5728_f.ptr())) {
						_case_begin_2085c25ea:;
						{
							_204ca5122_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_204b22db3_IsAnon(_5728_f.ptr())) {
						_case_begin_2085c2694:;
						{
							_204ca5122_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_2085c2562:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_2085bb02d:;
			{
				_204ca5122_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2085bae0c:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb4927__Str(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _59322_e, jule::Ptr<_204a32b6e_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _5987_constant = static__204b05813_NewStr(_204cdad7d_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5dd46_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb4d23__Kind(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _60627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204b2b471_Enum> _6117_enm = _204c13dc7_FindEnum(_204bc75d8_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_204b2a915_EnumItem> _61211_item = nullptr;;
	{
		
		if (_204cdbd4b_Void((*(_self_))._field_base.ptr())) {
			_case_begin_2085cb516:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_204cde6ab_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2085cb428:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_204cde942_Trait((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cb1c5:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Trait", 5));
			}
		}
		else if ((_204cdd655_Ptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cb23b:;
			{
				if (_204ceb90a_IsUnsafe(_204cdd655_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_204cdd3be_Sptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cb2a2:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_204cdd8db_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cb318:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Enum", 4));
			}
		}
		else if ((_204cddb72_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cbc75:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_204cdebc8_Map((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cbcdb:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Map", 3));
			}
		}
		else if ((_204cde18e_Slc((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cbd52:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Slice", 5));
			}
		}
		else if ((_204cdde08_Arr((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cbdb8:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Array", 5));
			}
		}
		else if ((_204cde425_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cbe40:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Func", 4));
			}
		}
		else if ((_204cdee5e_Tup((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cbeb7:;
			{
				_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_204cdd138_Prim((*(_self_))._field_base) != nullptr)) {
			_case_begin_2085cc03e:;
			{
				jule::Ptr<_204ce3a9a_Prim> _6434_prim = _204cdd138_Prim((*(_self_))._field_base);;
				{
					
					if (_204ce72eb_IsAny(_6434_prim.ptr())) {
						_case_begin_2085d8996:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Any", 3));
						}
					}
					else if (_204ce6cce_IsBool(_6434_prim.ptr())) {
						_case_begin_2085d88a8:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Bool", 4));
						}
					}
					else if (_204ce7065_IsStr(_6434_prim)) {
						_case_begin_2085d8688:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Str", 3));
						}
					}
					else if (_204ce600e_IsF32(_6434_prim)) {
						_case_begin_2085d86ee:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("F32", 3));
						}
					}
					else if (_204ce6295_IsF64(_6434_prim)) {
						_case_begin_2085d8765:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("F64", 3));
						}
					}
					else if (_204ce498b_IsI8(_6434_prim)) {
						_case_begin_2085d87cb:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("I8", 2));
						}
					}
					else if (_204ce4c22_IsI16(_6434_prim)) {
						_case_begin_2085d9205:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("I16", 3));
						}
					}
					else if (_204ce4ea8_IsI32(_6434_prim)) {
						_case_begin_2085d927c:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("I32", 3));
						}
					}
					else if (_204ce523e_IsI64(_6434_prim)) {
						_case_begin_2085d9304:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("I64", 3));
						}
					}
					else if (_204ce54c5_IsU8(_6434_prim)) {
						_case_begin_2085d937b:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("U8", 2));
						}
					}
					else if (_204ce575b_IsU16(_6434_prim)) {
						_case_begin_2085d9403:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("U16", 3));
						}
					}
					else if (_204ce59e2_IsU32(_6434_prim)) {
						_case_begin_2085d947a:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("U32", 3));
						}
					}
					else if (_204ce5c78_IsU64(_6434_prim)) {
						_case_begin_2085d9502:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("U64", 3));
						}
					}
					else if (_204ce652b_IsInt(_6434_prim)) {
						_case_begin_2085d9579:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Int", 3));
						}
					}
					else if (_204ce67b2_IsUint(_6434_prim)) {
						_case_begin_2085d9601:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Uint", 4));
						}
					}
					else if (_204ce6a48_IsUintptr(_6434_prim)) {
						_case_begin_2085d9678:;
						{
							_61211_item=_204b2c098_FindItem(_6117_enm, jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_2085d84e0:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _204cdad7d_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_2085d8468:;
				};
			}
		}
		else {
			_case_begin_2085cb060:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _204cdad7d_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_2085caea5:;
	};
	return _204cd6dbd_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _204ca8158_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb521e__Bits(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _68627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ce3a9a_Prim> _6913_prim = _204cdd138_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_204ca5122_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6963_n = _204b98c2a_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_204ca5122_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _7017_constant = static__204b0500a_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5ea28_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb561a__Elem(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _71027_e, jule::Ptr<_204a32b6e_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204cead8d_Ptr> _7157_ptr = _204cdd655_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_204ceb90a_IsUnsafe(_7157_ptr)) {
			_204ca5122_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _204bc795c_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_204ce75c6_Sptr> _7237_sptr = _204cdd3be_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _204bc795c_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_204ce8099_Slc> _7277_slice = _204cde18e_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _204bc795c_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_204cea3ba_Arr> _7317_array = _204cdde08_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _204bc795c_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_204b2b471_Enum> _7357_enm = _204cdd8db_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _204bc795c_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_204ca5122_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb5a16__Size(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _74327_e, jule::Ptr<_204a32b6e_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204cea3ba_Arr> _7487_arr = _204cdde08_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_204ca5122_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _7537_constant = static__204b0500a_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5ea28_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb5e12__Key(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _76226_e, jule::Ptr<_204a32b6e_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ce973d_Map> _7677_m = _204cdebc8_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_204ca5122_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb630d__Value(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _77528_e, jule::Ptr<_204a32b6e_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ce973d_Map> _7807_m = _204cdebc8_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_204ca5122_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb6709__Fields(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _78829_e, jule::Ptr<_204a32b6e_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _7937_s = _204cde6ab_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba5ae4_comptimeStructFields>(_204ba5ae4_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	};
	jule::Ptr<_204b2b471_Enum> _8037_enm = _204cdd8db_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204babaa6_comptimeEnumFields>(_204babaa6_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	};
	_204ca5122_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb6b05__Statics(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _81730_e, jule::Ptr<_204a32b6e_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _8227_s = _204cde6ab_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_204ca5122_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba8d28_comptimeStatics>(_204ba8d28_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb7001__Binded(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _83629_e, jule::Ptr<_204a32b6e_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _8417_constant = static__204b05549_NewBool(_204cdb82e_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb73ec__Ordered(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _84926_e, jule::Ptr<_204a32b6e_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _8547_constant = static__204b05549_NewBool(_204cdc5ee_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb77e8__Comparable(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _86229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _8677_constant = static__204b05549_NewBool(_204cdc0d2_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb7be4__Mutable(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _87526_e, jule::Ptr<_204a32b6e_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _8807_constant = static__204b05549_NewBool(_204cdc368_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb80e0__Types(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _88828_e, jule::Ptr<_204a32b6e_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ce8b8d_Tuple> _8937_tup = _204cdee5e_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_204ca5122_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204bb1c76_comptimeTypeInfos> _8987_infos = jule::new_ptr<_204bb1c76_comptimeTypeInfos>(_204bb1c76_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bb36e5_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bb36e5_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*_8937_tup.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20862c29d:;
		if (it != expr_end) {
			jule::Ptr<_204cda982_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_204bb36e5_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204c2dd04_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_20862c29d:;
			++it;
			goto _iter_begin_20862c29d;
		}
		_iter_end_20862c29d:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb84db__CanNil(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _91129_e, jule::Ptr<_204a32b6e_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _9167_constant = static__204b05549_NewBool(_204cdc885_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb88d7__GC(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _92425_e, jule::Ptr<_204a32b6e_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _9297_constant = static__204b05549_NewBool(_204cdcb1b_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb8cd3__Result(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _93729_e, jule::Ptr<_204a32b6e_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204b21664_FnIns> _9427_f = _204cde425_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_204ca5122_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _204bc795c_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_204d5d791_primVoid));;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb91ce__Params(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Ptr<_204ca4b49_eval>* _95329_e, jule::Ptr<_204a32b6e_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204b21664_FnIns> _9587_f = _204cde425_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_204ca5122_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bb0417_comptimeParams>(_204bb0417_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bb9520_subIdent(jule::Ptr<_204bb36e5_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_20863d457:;
			{
				jule::Ptr<_204b21664_FnIns> _9738_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208640019, jule::Ptr<__jule_anon_208640019_ctx>::make(__jule_anon_208640019_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208640019_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_20863d4bd:;
			{
				jule::Ptr<_204b21664_FnIns> _9808_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208641e94, jule::Ptr<__jule_anon_208641e94_ctx>::make(__jule_anon_208641e94_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208641e94_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_20863d534:;
			{
				jule::Ptr<_204b21664_FnIns> _9878_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208643e1e, jule::Ptr<__jule_anon_208643e1e_ctx>::make(__jule_anon_208643e1e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208643e1e_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_20863d6bb:;
			{
				jule::Ptr<_204b21664_FnIns> _9948_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208645d99, jule::Ptr<__jule_anon_208645d99_ctx>::make(__jule_anon_208645d99_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208645d99_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_20863d743:;
			{
				jule::Ptr<_204b21664_FnIns> _10018_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208647d24, jule::Ptr<__jule_anon_208647d24_ctx>::make(__jule_anon_208647d24_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208647d24_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_20863d7ba:;
			{
				jule::Ptr<_204b21664_FnIns> _10088_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208649c9e, jule::Ptr<__jule_anon_208649c9e_ctx>::make(__jule_anon_208649c9e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208649c9e_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_20863d842:;
			{
				jule::Ptr<_204b21664_FnIns> _10158_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20864bc29, jule::Ptr<__jule_anon_20864bc29_ctx>::make(__jule_anon_20864bc29_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20864bc29_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_20863d952:;
			{
				jule::Ptr<_204b21664_FnIns> _10228_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20864dba4, jule::Ptr<__jule_anon_20864dba4_ctx>::make(__jule_anon_20864dba4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20864dba4_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_20863d9b8:;
			{
				jule::Ptr<_204b21664_FnIns> _10298_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208650c72, jule::Ptr<__jule_anon_208650c72_ctx>::make(__jule_anon_208650c72_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208650c72_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_20863da2e:;
			{
				jule::Ptr<_204b21664_FnIns> _10368_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208652bec, jule::Ptr<__jule_anon_208652bec_ctx>::make(__jule_anon_208652bec_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208652bec_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_20863da95:;
			{
				jule::Ptr<_204b21664_FnIns> _10438_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208654b77, jule::Ptr<__jule_anon_208654b77_ctx>::make(__jule_anon_208654b77_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208654b77_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_20863db1c:;
			{
				jule::Ptr<_204b21664_FnIns> _10508_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208656b02, jule::Ptr<__jule_anon_208656b02_ctx>::make(__jule_anon_208656b02_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208656b02_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_20863db94:;
			{
				jule::Ptr<_204b21664_FnIns> _10578_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208658a7c, jule::Ptr<__jule_anon_208658a7c_ctx>::make(__jule_anon_208658a7c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208658a7c_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_20863dc1b:;
			{
				jule::Ptr<_204b21664_FnIns> _10648_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20865aa07, jule::Ptr<__jule_anon_20865aa07_ctx>::make(__jule_anon_20865aa07_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20865aa07_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_20863dc93:;
			{
				jule::Ptr<_204b21664_FnIns> _10718_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20865c982, jule::Ptr<__jule_anon_20865c982_ctx>::make(__jule_anon_20865c982_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20865c982_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_20863dd1a:;
			{
				jule::Ptr<_204b21664_FnIns> _10788_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20865e90c, jule::Ptr<__jule_anon_20865e90c_ctx>::make(__jule_anon_20865e90c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20865e90c_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_20863dd92:;
			{
				jule::Ptr<_204b21664_FnIns> _10858_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208661887, jule::Ptr<__jule_anon_208661887_ctx>::make(__jule_anon_208661887_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208661887_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_20863de19:;
			{
				jule::Ptr<_204b21664_FnIns> _10928_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208663812, jule::Ptr<__jule_anon_208663812_ctx>::make(__jule_anon_208663812_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208663812_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_20863de91:;
			{
				jule::Ptr<_204b21664_FnIns> _10998_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20866578c, jule::Ptr<__jule_anon_20866578c_ctx>::make(__jule_anon_20866578c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20866578c_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_20863ae16:;
			{
				return nullptr;;
			}
		}
		_match_end_20863d237:;
	};
}








inline jule::Bool _204bb97ea_comptimeValue_eq(_204bb97ea_comptimeValue *_self_, _204bb97ea_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _204bb9ba2_Str(_204bb97ea_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _204bb9ee3_Equal(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204cda982_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bba554__Unwrap(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _112229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bba950__Type(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _113027_e, jule::Ptr<_204a32b6e_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbad4b__Lvalue(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _113829_e, jule::Ptr<_204a32b6e_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _11437_constant = static__204b05549_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbb247__Mutable(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _115130_e, jule::Ptr<_204a32b6e_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _11567_constant = static__204b05549_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbb643__Const(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _116428_e, jule::Ptr<_204a32b6e_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _11697_constant = static__204b05549_NewBool(_204ca35b5_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbba3e__Field(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _117728_e, jule::Ptr<_204a32b6e_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _11827_s = _204cde6ab_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_204ca5122_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a2de45_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_204ca2b7a_Data> _11887_d = _204cc8794_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_204ca35b5_IsConst(_11887_d.ptr())))) {
		_204ca5122_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204ce3a9a_Prim> _11963_prim = _204cdd138_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_204ce7065_IsStr(_11963_prim.ptr()))))) {
		_204ca5122_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_204cdad7d_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _204b06bee_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_204a4c727_FieldIns> _12027_f = _204a4e6b3_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_204ca5122_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_11827_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_204cc147e_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*(_11877_arg))._field_Token), &(_12027_f));
	return _204bc7c9d_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbbe3a__Method(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Ptr<_204ca4b49_eval>* _121229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_204a4d2c7_StructIns> _12187_s = static_cast<jule::Ptr<_204a4d2c7_StructIns>>(nullptr);;
	if ((_204cdd3be_Sptr((*((*(_self_))._field_data))._field_Type.ptr()) != nullptr)) {
		_12187_s=_204cde6ab_Struct((*(_204cdd3be_Sptr((*((*(_self_))._field_data))._field_Type)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_204cde6ab_Struct((*((*(_self_))._field_data))._field_Type.ptr());
	};
	if ((_12187_s == nullptr)) {
		_204ca5122_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a2de45_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_204ca2b7a_Data> _12307_d = _204cc8794_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_204ca35b5_IsConst(_12307_d.ptr())))) {
		_204ca5122_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204ce3a9a_Prim> _12383_prim = _204cdd138_Prim((*(_12307_d))._field_Type.ptr());;
	if (((_12383_prim == nullptr) || (!(_204ce7065_IsStr(_12383_prim.ptr()))))) {
		_204ca5122_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_204cdad7d_Str((*(_12307_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _204b06bee_ReadStr((*_12307_d.alloc)._field_Constant.ptr());;
	;
	jule::Ptr<_204b1d5a6_Fn> _12457_m = _204a4e372_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_204ca5122_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_12187_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_204ca2b7a_Data>((*((*(_self_))._field_data)));
	if (_12177_ref) {
		_204cd7473_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_204cc1a9a_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*(_12297_arg))._field_Token), &(_12457_m), _12177_ref);
	return _204bc7c9d_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbc27b_subIdent(jule::Ptr<_204bb97ea_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_208695415:;
			{
				jule::Ptr<_204b21664_FnIns> _12618_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2086968cd, jule::Ptr<__jule_anon_2086968cd_ctx>::make(__jule_anon_2086968cd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2086968cd_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_20869547b:;
			{
				jule::Ptr<_204b21664_FnIns> _12688_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208698858, jule::Ptr<__jule_anon_208698858_ctx>::make(__jule_anon_208698858_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208698858_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_2086954e2:;
			{
				jule::Ptr<_204b21664_FnIns> _12758_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20869a7d3, jule::Ptr<__jule_anon_20869a7d3_ctx>::make(__jule_anon_20869a7d3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20869a7d3_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_208695569:;
			{
				jule::Ptr<_204b21664_FnIns> _12828_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20869c75d, jule::Ptr<__jule_anon_20869c75d_ctx>::make(__jule_anon_20869c75d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20869c75d_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_208695756:;
			{
				jule::Ptr<_204b21664_FnIns> _12898_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20869e6d8, jule::Ptr<__jule_anon_20869e6d8_ctx>::make(__jule_anon_20869e6d8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20869e6d8_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_2086957bc:;
			{
				jule::Ptr<_204b21664_FnIns> _12968_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2086a1663, jule::Ptr<__jule_anon_2086a1663_ctx>::make(__jule_anon_2086a1663_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2086a1663_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_208695833:;
			{
				jule::Ptr<_204b21664_FnIns> _13038_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2086a35dd, jule::Ptr<__jule_anon_2086a35dd_ctx>::make(__jule_anon_2086a35dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2086a35dd_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_208694dd7:;
			{
				return nullptr;;
			}
		}
		_match_end_2086952c2:;
	};
}







inline jule::Str _204bbc90d_Str(_204bbc556_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _204bbcc4e_Equal(jule::Ptr<_204bbc556_comptimeFiles> _self_, jule::Ptr<_204cda982_Type> _132218_other) {
	return false;;
}



inline void _204bbd1d3_ready(_204bbc556_comptimeFiles* _self_, jule::Ptr<_204c5319c_Var>* _132626_keyA, jule::Ptr<_204c5319c_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bbdec5_comptimeFile>(_204bbdec5_comptimeFile{._field_file=jule::Ptr<_204b248a9_SymTab>(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data18)})});
	};
}



inline void _204bbd546_index(_204bbc556_comptimeFiles* _self_, jule::Ptr<_204ca2b7a_Data>* _134726_d, jule::I32 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bbdec5_comptimeFile>(_204bbdec5_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data18)});
}



inline void _204bbd964_step(_204bbc556_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_204c5319c_Var>* _135833_keyA, jule::Ptr<_204c5319c_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_204bbdec5_comptimeFile>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I32 _204bbdbea_len(_204bbc556_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _204bbdec5_comptimeFile_eq(_204bbdec5_comptimeFile *_self_, _204bbdec5_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _204bbe37c_Str(_204bbdec5_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _204bbe6bd_Equal(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204cda982_Type> _138218_other) {
	return false;;
}



inline jule::Ptr<_204ca2b7a_Data> _204bbebda__Path(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204ca4b49_eval>* _138627_e, jule::Ptr<_204a32b6e_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _13917_constant = static__204b05813_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5dd46_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc00d6__Name(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204ca4b49_eval>* _139927_e, jule::Ptr<_204a32b6e_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _14047_constant = static__204b05813_NewStr(_204a1abce_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5dd46_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc04d2__Dir(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Ptr<_204ca4b49_eval>* _141226_e, jule::Ptr<_204a32b6e_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a9d338_Const> _14177_constant = static__204b05813_NewStr(_204a1a948_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5dd46_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc0823_subIdent(jule::Ptr<_204bbdec5_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_2086b6ed6:;
			{
				jule::Ptr<_204b21664_FnIns> _14288_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2086b8306, jule::Ptr<__jule_anon_2086b8306_ctx>::make(__jule_anon_2086b8306_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2086b8306_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_2086b7080:;
			{
				jule::Ptr<_204b21664_FnIns> _14358_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2086ba281, jule::Ptr<__jule_anon_2086ba281_ctx>::make(__jule_anon_2086ba281_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2086ba281_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_2086b7107:;
			{
				jule::Ptr<_204b21664_FnIns> _14428_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2086bc20b, jule::Ptr<__jule_anon_2086bc20b_ctx>::make(__jule_anon_2086bc20b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2086bc20b_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_2086b6bc8:;
			{
				return nullptr;;
			}
		}
		_match_end_2086b6de8:;
	};
}







inline jule::Str _204bc11d6_Str(_204bc0aed_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _204bc1527_Equal(jule::Ptr<_204bc0aed_comptimeDecls> _self_, jule::Ptr<_204cda982_Type> _146118_other) {
	return false;;
}



inline void _204bc189b_ready(_204bc0aed_comptimeDecls* _self_, jule::Ptr<_204c5319c_Var>* _146526_keyA, jule::Ptr<_204c5319c_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)})});
	};
}



inline void _204bc1c0e_index(_204bc0aed_comptimeDecls* _self_, jule::Ptr<_204ca2b7a_Data>* _148626_d, jule::I32 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)});
}



inline void _204bc212c_step(_204bc0aed_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_204c5319c_Var>* _149533_keyA, jule::Ptr<_204c5319c_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_204bc2ddb_comptimeDecl>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I32 _204bc23b3_len(_204bc0aed_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _204bc2ddb_comptimeDecl_eq(_204bc2ddb_comptimeDecl *_self_, _204bc2ddb_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _204bc3293_Str(_204bc2ddb_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _204bc35d4_Equal(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204cda982_Type> _153418_other) {
	return false;;
}



inline jule::Str _204bc3a35_declAsStr(_204bc2ddb_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2086c7304:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2086c6ca4:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2086c71b1:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_2086c7238:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_2086c74ad:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2086c7535:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2086c77aa:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2086c7821:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_2086c7887:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_2086c78ed:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_2086c714a:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_2086c6dd6:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204bc3e31__Name(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _156527_e, jule::Ptr<_204a32b6e_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2086cbeda:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2086cc392:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1d5a6_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2086cc408:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b2b471_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_2086cc480:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b2cb7b_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_2086cc507:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b28cba_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2086cc57e:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204a47579_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2086cc936:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204cd9b90_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2086cc99c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204c5319c_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_2086cca13:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b2a915_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_2086cca79:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1bad2_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_2086cc32b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_2086cc2b5:;
	};
	jule::Ptr<_204a9d338_Const> _15957_constant = static__204b05813_NewStr(_15707_name);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5dd46_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc432c__Public(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _160329_e, jule::Ptr<_204a32b6e_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_2086d63bd:;
			{
				_204ca5122_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2086d6764:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2086d67ca:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1d5a6_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2086d6841:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b2b471_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_2086d68b8:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b2cb7b_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_2086d6940:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b28cba_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2086d69b7:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204a47579_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2086d6d19:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204cd9b90_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2086d6d91:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204c5319c_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_2086d66ed:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_2086d6687:;
	};
	jule::Ptr<_204a9d338_Const> _16337_constant = static__204b05549_NewBool(_16087_public);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc4728__Binded(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _164129_e, jule::Ptr<_204a32b6e_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_2086e0d9a:;
			{
				_204ca5122_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2086e0a7b:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2086e0ae2:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1d5a6_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2086e0b58:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204cd9b90_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2086e0bbe:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204c5319c_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_2086e0a15:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_2086e099e:;
	};
	jule::Ptr<_204a9d338_Const> _16677_constant = static__204b05549_NewBool(_16467_binded);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc4b24__Exceptional(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _167534_e, jule::Ptr<_204a32b6e_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2086e6367:;
			{
				goto _match_end_2086e76ed;
			}
		}
		else {
			_case_begin_2086e7764:;
			{
				_204ca5122_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2086e76ed:;
	};
	jule::Ptr<_204b1d5a6_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_204b1d5a6_Fn>(&__jule_any_type10);;
	jule::Ptr<_204a9d338_Const> _16887_constant = static__204b05549_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc5020__Mutable(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _169630_e, jule::Ptr<_204a32b6e_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_2086ec758:;
			{
				_204ca5122_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_2086ec439:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1bad2_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2086ec4a0:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204a47579_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2086ec516:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204c5319c_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_2086ec3c3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_2086ec35c:;
	};
	jule::Ptr<_204a9d338_Const> _17217_constant = static__204b05549_NewBool(_17017_mutable);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc541b__Variadic(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _172931_e, jule::Ptr<_204a32b6e_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_20870409a:;
			{
				_204ca5122_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_208703c7b:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1bad2_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_208703c15:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_208703b9e:;
	};
	jule::Ptr<_204a9d338_Const> _17527_constant = static__204b05549_NewBool(_17347_variadic);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc5817__Reference(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _176032_e, jule::Ptr<_204a32b6e_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_2087097ed:;
			{
				_204ca5122_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2087094ce:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204c5319c_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_208709545:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_204b1bad2_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_208709468:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_208709402:;
	};
	jule::Ptr<_204a9d338_Const> _17847_constant = static__204b05549_NewBool(_17657_ref);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc5c13__Params(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _179229_e, jule::Ptr<_204a32b6e_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_20870dbcb:;
			{
				_204ca5122_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2087104c4:;
			{
				jule::Ptr<_204b1d5a6_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_204b1d5a6_Fn>();;
				jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bc2ddb_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208713a16:;
					if (it != expr_end) {
						jule::I32 _18129_i = it - expr->begin();
						jule::Ptr<_204b1bad2_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_208713a16:;
						++it;
						_18129_i++;
						goto _iter_begin_208713a16;
					}
					_iter_end_208713a16:;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc0aed_comptimeDecls>(_204bc0aed_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2087100c8:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_208710062:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204bc610e__Fields(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _182729_e, jule::Ptr<_204a32b6e_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_208717520:;
			{
				_204ca5122_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_208717201:;
			{
				jule::Ptr<_204b2b471_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_204b2b471_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bc2ddb_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20871a732:;
					if (it != expr_end) {
						jule::I32 _18479_i = it - expr->begin();
						jule::Ptr<_204b2a915_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_20871a732:;
						++it;
						_18479_i++;
						goto _iter_begin_20871a732;
					}
					_iter_end_20871a732:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_208717267:;
			{
				jule::Ptr<_204a4a46c_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_204a4a46c_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bc2ddb_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20871c646:;
					if (it != expr_end) {
						jule::I32 _18539_i = it - expr->begin();
						jule::Ptr<_204a47579_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_20871c646:;
						++it;
						_18539_i++;
						goto _iter_begin_20871c646;
					}
					_iter_end_20871c646:;
				};
			}
		}
		else {
			_case_begin_20871718a:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_208717124:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc0aed_comptimeDecls>(_204bc0aed_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc650a__Statics(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _186830_e, jule::Ptr<_204a32b6e_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_2087211b6:;
			{
				_204ca5122_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_208720d97:;
			{
				jule::Ptr<_204a4a46c_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_204a4a46c_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bc2ddb_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2087244b6:;
					if (it != expr_end) {
						jule::I32 _18899_i = it - expr->begin();
						jule::Ptr<_204c5319c_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_2087244b6:;
						++it;
						_18899_i++;
						goto _iter_begin_2087244b6;
					}
					_iter_end_2087244b6:;
				};
			}
		}
		else {
			_case_begin_208720d31:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_208720cba:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc0aed_comptimeDecls>(_204bc0aed_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc6906__Methods(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Ptr<_204ca4b49_eval>* _190430_e, jule::Ptr<_204a32b6e_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_208728036:;
			{
				_204ca5122_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204bc3a35_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_208727c17:;
			{
				jule::Ptr<_204b28cba_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_204b28cba_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bc2ddb_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20872b248:;
					if (it != expr_end) {
						jule::I32 _19249_i = it - expr->begin();
						jule::Ptr<_204b1d5a6_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_20872b248:;
						++it;
						_19249_i++;
						goto _iter_begin_20872b248;
					}
					_iter_end_20872b248:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_208727c7d:;
			{
				jule::Ptr<_204a4a46c_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_204a4a46c_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bc2ddb_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bc2ddb_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20872d15c:;
					if (it != expr_end) {
						jule::I32 _19309_i = it - expr->begin();
						jule::Ptr<_204b1d5a6_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_204bc2ddb_comptimeDecl>(_204bc2ddb_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_20872d15c:;
						++it;
						_19309_i++;
						goto _iter_begin_20872d15c;
					}
					_iter_end_20872d15c:;
				};
			}
		}
		else {
			_case_begin_208727ba1:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_208727b3a:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bc0aed_comptimeDecls>(_204bc0aed_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc6c47_subIdent(jule::Ptr<_204bc2ddb_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_20872e911:;
			{
				jule::Ptr<_204b21664_FnIns> _19488_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_2087310e9, jule::Ptr<__jule_anon_2087310e9_ctx>::make(__jule_anon_2087310e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_2087310e9_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_20872e977:;
			{
				jule::Ptr<_204b21664_FnIns> _19558_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208733074, jule::Ptr<__jule_anon_208733074_ctx>::make(__jule_anon_208733074_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208733074_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_20872e9ee:;
			{
				jule::Ptr<_204b21664_FnIns> _19628_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208734eee, jule::Ptr<__jule_anon_208734eee_ctx>::make(__jule_anon_208734eee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208734eee_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_20872ea76:;
			{
				jule::Ptr<_204b21664_FnIns> _19698_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208736e79, jule::Ptr<__jule_anon_208736e79_ctx>::make(__jule_anon_208736e79_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208736e79_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_20872ec30:;
			{
				jule::Ptr<_204b21664_FnIns> _19768_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208738e04, jule::Ptr<__jule_anon_208738e04_ctx>::make(__jule_anon_208738e04_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208738e04_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_20872ec96:;
			{
				jule::Ptr<_204b21664_FnIns> _19838_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20873ad7e, jule::Ptr<__jule_anon_20873ad7e_ctx>::make(__jule_anon_20873ad7e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20873ad7e_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_20872ed1d:;
			{
				jule::Ptr<_204b21664_FnIns> _19908_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20873cd09, jule::Ptr<__jule_anon_20873cd09_ctx>::make(__jule_anon_20873cd09_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20873cd09_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_20872ed95:;
			{
				jule::Ptr<_204b21664_FnIns> _19978_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_20873ec84, jule::Ptr<__jule_anon_20873ec84_ctx>::make(__jule_anon_20873ec84_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20873ec84_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_20872eeb6:;
			{
				jule::Ptr<_204b21664_FnIns> _20048_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208741d52, jule::Ptr<__jule_anon_208741d52_ctx>::make(__jule_anon_208741d52_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208741d52_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_20873002c:;
			{
				jule::Ptr<_204b21664_FnIns> _20118_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208743ccc, jule::Ptr<__jule_anon_208743ccc_ctx>::make(__jule_anon_208743ccc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208743ccc_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_208730093:;
			{
				jule::Ptr<_204b21664_FnIns> _20188_method = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>((void*)__jule_anon_208745c57, jule::Ptr<__jule_anon_208745c57_ctx>::make(__jule_anon_208745c57_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208745c57_ctx_handler), ._field_reloaded=false});;
				return _204bc73c9_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_20872a1c0:;
			{
				return nullptr;;
			}
		}
		_match_end_20872e768:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*> _204bc9c06_readyFn(jule::Ptr<_204bc97c7_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*>((void*)__jule_anon_20875202c, jule::Ptr<__jule_anon_20875202c_ctx>::make(__jule_anon_20875202c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_20875202c_ctx_handler);;
}



inline jule::Bool _204bc9e8c_readyFi(jule::Ptr<_204bc97c7_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _204c3cb04_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _204bc9c06_readyFn(_self_)));;
}



inline jule::Bool _204bca223_readySi(jule::Ptr<_204bc97c7_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _204bc9c06_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _204bca4a9_ready(jule::Ptr<_204bc97c7_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _204bc9e8c_readyFi(_self_);;
	};
	return _204bca223_readySi(_self_);;
}



inline jule::Bool _204bca740_check(jule::Ptr<_204bc97c7_constraintChecker> _self_) {
	if ((!(_204bca4a9_ready(_self_)))) {
		return false;;
	};
	_julec_label_208762b31:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2087630d7:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_204cd909b_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_2087630d7;
				};
				{
					auto expr = &((*(_12015_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208764380:;
					if (it != expr_end) {
						jule::Ptr<_204cda982_Type> _12416_c2 = *it;
						{
							jule::Ptr<_204ce3a9a_Prim> _1259_prim = _204cdd138_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _204ce4705_IsConstraint(_1259_prim))) {
								if (_204bcae8d_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*(_12015_g))._field_Type))) {
									goto _iter_next_2087630d7;
								};
								goto _iter_next_208764380;
							};
							if (_204cdb1be_Equal(_12416_c2, (*(_12015_g))._field_Type)) {
								goto _iter_next_2087630d7;
							};
						}
						_iter_next_208764380:;
						++it;
						goto _iter_begin_208764380;
					}
					_iter_end_208764380:;
				};
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_204bcaac5_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_2087630d7:;
			++it;
			_1208_i++;
			goto _iter_begin_2087630d7;
		}
		_iter_end_2087630d7:;
	};
	return true;;
}







inline jule::Bool _204bcbec2_IsTraitImpl(_204bcbac6_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _204bcc258_IsStructImpl(_204bcbac6_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _204bd1603_If_eq(_204bd1603_If *_self_, _204bd1603_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _204bd1900_Else_eq(_204bd1900_Else *_self_, _204bd1900_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _204bd211a_InfIter_eq(_204bd211a_InfIter *_self_, _204bd211a_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _204bd25c1_WhileIter_eq(_204bd25c1_WhileIter *_self_, _204bd25c1_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _204bd2967_IsWhileNext(_204bd25c1_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _204bd301c_RangeIter_eq(_204bd301c_RangeIter *_self_, _204bd301c_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _204bd33a2_ContSt_eq(_204bd33a2_ContSt *_self_, _204bd33a2_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _204bd377b_BreakSt_eq(_204bd377b_BreakSt *_self_, _204bd377b_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _204bd3c32_Label_eq(_204bd3c32_Label *_self_, _204bd3c32_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _204bd4392_GotoSt_eq(_204bd4392_GotoSt *_self_, _204bd4392_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _204bd476b_Postfix_eq(_204bd476b_Postfix *_self_, _204bd476b_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _204bd4c22_Assign_eq(_204bd4c22_Assign *_self_, _204bd4c22_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _204bd6c13_FallSt_eq(_204bd6c13_FallSt *_self_, _204bd6c13_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _204bd70a9_RetSt_eq(_204bd70a9_RetSt *_self_, _204bd70a9_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _204bd7560_scopeLabel_eq(_204bd7560_scopeLabel *_self_, _204bd7560_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _204bd7939_result_eq(_204bd7939_result *_self_, _204bd7939_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _204bd8929_scopeChecker_eq(_204bd8929_scopeChecker *_self_, _204bd8929_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_204c12139_ImportInfo> _204bd8e02_SelectPackage(_204bd8929_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _35529_selector) {
	return _204c2e95e_SelectPackage((*(_self_))._field_s.ptr(), _35529_selector);;
}



inline jule::Ptr<_204c5319c_Var> _204bd92ed_FindVar(_204bd8929_scopeChecker* _self_, jule::Str _36623_ident, jule::Bool _36635_binded) {
	if ((!(_36635_binded))) {
		jule::Ptr<_204c5319c_Var> _3688_v = _204bdc664_findVar(_self_, _36623_ident);;
		if ((_3688_v != nullptr)) {
			return _3688_v;;
		};
	};
	return _204c2ed5a_FindVar((*(_self_))._field_s.ptr(), _36623_ident, _36635_binded);;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204bd96e9_FindTypeAlias(_204bd8929_scopeChecker* _self_, jule::Str _38329_ident, jule::Bool _38341_binded) {
	;
	jule::Ptr<_204cd9b90_TypeAlias> _3867_ta = _204b278ac_findTypeAlias((*(_self_))._field_table.ptr(), &(_38329_ident), _38341_binded, true);;
	if ((_3867_ta != nullptr)) {
		return _3867_ta;;
	};
	jule::Ptr<_204bd8929_scopeChecker> _3917_parent = (*(_self_))._field_parent;;
	while ((_3917_parent != nullptr)) {
		{
			_3867_ta=_204b278ac_findTypeAlias((*(_3917_parent))._field_table, &(_38329_ident), _38341_binded, true);
			if ((_3867_ta != nullptr)) {
				return _3867_ta;;
			};
			_3917_parent=(*(_3917_parent))._field_parent;
		}
	_iter_next_2087b1d28:;
	}
	_iter_end_2087b1d28:;;
	return _204c30256_FindTypeAlias((*(_self_))._field_s.ptr(), _38329_ident, _38341_binded);;
}



inline jule::Ptr<_204a4a46c_Struct> _204bd9ae5_FindStruct(_204bd8929_scopeChecker* _self_, jule::Str _40826_ident, jule::Bool _40838_binded) {
	return _204c30652_FindStruct((*(_self_))._field_s.ptr(), _40826_ident, _40838_binded);;
}



inline jule::Ptr<_204b1d5a6_Fn> _204bd9ee1_FindFn(_204bd8929_scopeChecker* _self_, jule::Str _41722_ident, jule::Bool _41734_binded) {
	return _204c30a4d_FindFn((*(_self_))._field_s.ptr(), _41722_ident, _41734_binded);;
}



inline jule::Ptr<_204b28cba_Trait> _204bda332_FindTrait(_204bd8929_scopeChecker* _self_, jule::Str _42625_ident) {
	return _204c30d8e_FindTrait((*(_self_))._field_s.ptr(), _42625_ident);;
}



inline jule::Ptr<_204b2b471_Enum> _204bda673_FindEnum(_204bd8929_scopeChecker* _self_, jule::Str _43524_ident) {
	return _204c311d0_FindEnum((*(_self_))._field_s.ptr(), _43524_ident);;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204bda9b4_FindTypeEnum(_204bd8929_scopeChecker* _self_, jule::Str _44428_ident) {
	return _204c31521_FindTypeEnum((*(_self_))._field_s.ptr(), _44428_ident);;
}



inline jule::Bool _204bdad16_isUnsafe(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	jule::Ptr<_204bd8929_scopeChecker> _4527_scope = _self_;;
	_julec_label_2087b70e7:;
	if ((*((*(_4527_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_4527_scope))._field_parent != nullptr)) {
		_4527_scope=(*_4527_scope.alloc)._field_parent;
		goto _julec_label_2087b70e7;
	};
	return false;;
}



inline jule::Bool _204bdb09c_isRoot(_204bd8929_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _204bdb29a_stop(_204bd8929_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _204bdb531_stopped(_204bd8929_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _204bdb7b7_isDeferred(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	jule::Ptr<_204bd8929_scopeChecker> _4857_scope = _self_;;
	_julec_label_2087b9bbb:;
	if ((*((*(_4857_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_4857_scope))._field_parent != nullptr)) {
		_4857_scope=(*_4857_scope.alloc)._field_parent;
		goto _julec_label_2087b9bbb;
	};
	return false;;
}



inline void _204bdba70_pushCaptured(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204c5319c_Var>* _50634_v) {
	jule::Ptr<_204bd8929_scopeChecker> _5077_sc = _self_;;
	for (;;) {
		{
			if (((*(_5077_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5077_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2087bc2ea:;
					if (it != expr_end) {
						jule::Ptr<_204c5319c_Var> _51012_cv = *it;
						{
							if ((_51012_cv == (*(_50634_v)))) {
								goto _julec_label_2087bd241;
							};
						}
						_iter_next_2087bc2ea:;
						++it;
						goto _iter_begin_2087bc2ea;
					}
					_iter_end_2087bc2ea:;
				};
				(*(*(_5077_sc))._field_captured.alloc)=jule::append((*(*(_5077_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_50634_v)); __jule_collection; }));
				_julec_label_2087bd241:;
			};
			if (((*(_5077_sc))._field_parent == nullptr)) {
				goto _iter_end_2087bb591;
			};
			_5077_sc=(*(_5077_sc))._field_parent;
			if ((!(_204cd8034_isVarCaptured(_5077_sc, _5077_sc, (*(_50634_v)))))) {
				goto _iter_end_2087bb591;
			};
		}
	_iter_next_2087bb591:;
	}
	_iter_end_2087bb591:;;
}



inline jule::Ptr<_204bd8929_scopeChecker> _204bdbd06_getRoot(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	jule::Ptr<_204bd8929_scopeChecker> _5317_root = _self_;;
	while ((((*(_5317_root))._field_parent != nullptr) && ((*_5317_root.alloc)._field_owner == nullptr))) {
		{
			_5317_root=(*(_5317_root))._field_parent;
		}
	_iter_next_2087be31e:;
	}
	_iter_end_2087be31e:;;
	return _5317_root;;
}



inline jule::Ptr<_204bd8929_scopeChecker> _204bdc08c_getHardRoot(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	jule::Ptr<_204bd8929_scopeChecker> _5417_root = _self_;;
	while (((*(_5417_root))._field_parent != nullptr)) {
		{
			_5417_root=(*(_5417_root))._field_parent;
		}
	_iter_next_2087c05a6:;
	}
	_iter_end_2087c05a6:;;
	return _5417_root;;
}



inline jule::Ptr<_204c000b1_ReferenceStack> _204bdc323_getOwnerRefers(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	return (*((*(_204bdc08c_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_204c5319c_Var> _204bdc664_findVar(_204bd8929_scopeChecker* _self_, jule::Str _55323_ident) {
	;
	;
	jule::Ptr<_204c5319c_Var> _5567_v = _204b27406_findVar((*(_self_))._field_table.ptr(), &(_55323_ident), false, true);;
	if ((_5567_v != nullptr)) {
		return _5567_v;;
	};
	jule::Ptr<_204bd8929_scopeChecker> _5607_parent = (*(_self_))._field_parent;;
	while ((_5607_parent != nullptr)) {
		{
			_5567_v=_204b27406_findVar((*(_5607_parent))._field_table, &(_55323_ident), false, true);
			if ((_5567_v != nullptr)) {
				return _5567_v;;
			};
			_5607_parent=(*(_5607_parent))._field_parent;
		}
	_iter_next_2087c3136:;
	}
	_iter_end_2087c3136:;;
	return nullptr;;
}



inline jule::Ptr<_204bd3c32_Label> _204bdc9a5_findLabel(_204bd8929_scopeChecker* _self_, jule::Str* _57426_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2087c517c:;
		if (it != expr_end) {
			jule::Any _57515_st = *it;
			{
				{
					auto &_match_expr{ _57515_st };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_2087c59eb:;
						{
							jule::Ptr<_204bd3c32_Label> _5789_label = _57515_st.unsafe_cast_ptr<_204bd3c32_Label>();;
							if (((*(_5789_label))._field_Ident == (*(_57426_ident)))) {
								return _5789_label;;
							};
						}
					}
					_match_end_2087c5985:;
				};
			}
			_iter_next_2087c517c:;
			++it;
			goto _iter_begin_2087c517c;
		}
		_iter_end_2087c517c:;
	};
	return nullptr;;
}



inline jule::Ptr<_204bd7560_scopeLabel> _204bdcce6_findLabelScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Str* _59032_ident) {
	jule::Ptr<_204bd7560_scopeLabel> _5917_label = _204bdd137_findLabelAll(_self_.ptr(), _59032_ident);;
	if (((_5917_label != nullptr) && ((*((*_5917_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_204bd7560_scopeLabel> _204bdd137_findLabelAll(_204bd8929_scopeChecker* _self_, jule::Str* _60129_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2087cad75:;
		if (it != expr_end) {
			jule::Ptr<_204bd7560_scopeLabel> _60215_lbl = *it;
			{
				if (((*((*(_60215_lbl))._field_node))._field_Ident == (*(_60129_ident)))) {
					return _60215_lbl;;
				};
			}
			_iter_next_2087cad75:;
			++it;
			goto _iter_begin_2087cad75;
		}
		_iter_end_2087cad75:;
	};
	return nullptr;;
}



inline jule::Bool _204bdd533_isDuplicatedIdent(_204bd8929_scopeChecker* _self_, jule::Uintptr _61333_itself, jule::Str* _61351_ident) {
	jule::Ptr<_204c5319c_Var> _6143_v = _204bd92ed_FindVar(_self_, (*(_61351_ident)), false);;
	if (((_6143_v != nullptr) && (static_cast<jule::Uintptr>(_6143_v) != _61333_itself))) {
		if (((*_6143_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6143_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_204c3192d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_204cd9b90_TypeAlias> _6223_ta = _204bd96e9_FindTypeAlias(_self_, (*(_61351_ident)), false);;
	if (((_6223_ta != nullptr) && (static_cast<jule::Uintptr>(_6223_ta) != _61333_itself))) {
		if (((*_6223_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6223_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_204c3192d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _204bdd7db_checkVarDecl(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ca58_VarDecl> _63333_decl) {
	jule::Ptr<_204c5319c_Var> _6347_v = _204c0546d_buildVar(_63333_decl);;
	(*(_6347_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6347_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6347_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_204bdd533_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6347_v), &((*_6347_v.alloc)._field_Ident))) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_6347_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6347_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_204bdb29a_stop(_self_);
		return;;
	};
	_204c457dd_checkVarDecl((*_self_.alloc)._field_s, &(_6347_v), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));
	if (((!(_204c53840_IsTypeInferred(_6347_v))) && (((*_6347_v.alloc)._field_TypeSym == nullptr) || ((*((*_6347_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_204c49083_evalVarValue((*(_self_))._field_s, &(_6347_v), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));
	if (((!(_204c535a9_IsInitialized(_6347_v))) || ((*((*_6347_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_204be4a56_removeInteriorMutRisk(_self_, &((*((*_6347_v.alloc)._field_Value))._field_Data));
	_204c48c20_checkVarValue((*(_self_))._field_s, &(_6347_v));
}



inline void _204bdda94_checkTypeAlias(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _66436_ta) {
	if (_204bdd533_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_66436_ta))), &((*((*(_66436_ta))))._field_Ident))) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_66436_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_66436_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_204bdb29a_stop(_self_);
		return;;
	};
	_204c3e870_checkTypeAliasDecl((*(_self_))._field_s, _66436_ta, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_66436_ta)); __jule_collection; }));
	if (((*((*((*(_66436_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_204bdb29a_stop(_self_);
	};
}



inline void _204bddd4c_checkTypeAliasDecl(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a4170a_TypeAliasDecl> _68039_decl) {
	jule::Ptr<_204cd9b90_TypeAlias> _6817_ta = _204c0204c_buildTypeAlias(_68039_decl);;
	_204bdda94_checkTypeAlias(_self_, &(_6817_ta));
}



inline jule::Ptr<_204bd11d5_Scope> _204bde0d3_getChild(_204bd8929_scopeChecker* _self_) {
	return jule::new_ptr<_204bd11d5_Scope>(_204bd11d5_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _204bde501_checkChildSsc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _69135_tree, jule::Ptr<_204bd11d5_Scope>* _69163_s, jule::Ptr<_204bd8929_scopeChecker>* _69179_ssc) {
	(*((*(_69163_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_69163_s))))._field_ChildIndex=(*((*(_69179_ssc))))._field_childIndex;
	(*((*(_69179_ssc))))._field_parent=_self_;
	_204beaaa1_check((*(_69179_ssc)), _69135_tree, _69163_s);
}



inline jule::Ptr<_204bd11d5_Scope> _204bde8ec_checkChildSc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _69834_tree, jule::Ptr<_204bd8929_scopeChecker>* _69862_ssc) {
	jule::Ptr<_204bd11d5_Scope> _6997_s = _204bde0d3_getChild(_self_.ptr());;
	_204bde501_checkChildSsc(_self_, _69834_tree, &(_6997_s), _69862_ssc);
	return _6997_s;;
}



inline jule::Ptr<_204bd11d5_Scope> _204bdec3d_checkChild(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _70432_tree) {
	jule::Ptr<_204bd8929_scopeChecker> _7057_ssc = _204bead37_newChildChecker(_self_);;
	return _204bde8ec_checkChildSc(_self_, _70432_tree, &(_7057_ssc));;
}



inline void _204bdeee6_checkAnonScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree> _70935_tree) {
	jule::Ptr<_204bd11d5_Scope> _7107_s = _204bdec3d_checkChild(_self_, &(_70935_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7107_s, &__jule_any_type20); __jule_collection; }));
}



inline void _204be0359_processErrorCall(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204b19470_BuiltinErrorCallExprModel>* _71438_m, jule::Ptr<_204a14216_Token> _71469_err) {
	if (_204bdb7b7_isDeferred(_self_)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), _71469_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_204bd8929_scopeChecker> _7197_root = _204bdbd06_getRoot(_self_);;
	if ((!((*((*((*(_7197_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), _71469_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_71438_m))))._field_Func=(*(_7197_root))._field_owner;
}



inline void _204be0612_checkExpr(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a2de45_Expr> _72730_expr) {
	jule::Ptr<_204ca4b49_eval> _7287_eval = _204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	(*(_7287_eval))._field_target._field_ignored=true;
	jule::Ptr<_204ca2b7a_Data> _7307_d = _204cc8794_evalExpr(_7287_eval, _72730_expr);;
	if (((_7307_d == nullptr) || ((*(_7307_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7307_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_2088023a7:;
			{
				jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _7398_m = (*(_7307_d))._field_Model.unsafe_cast_ptr<_204b19470_BuiltinErrorCallExprModel>();;
				_204be0359_processErrorCall(_self_, &(_7398_m), (*(_72730_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7307_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31) {
			_case_begin_2088029c3:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7307_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else {
			_case_begin_20880295c:;
			{
				_204c3238a_pushErr((*(_self_))._field_s, (*(_72730_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_2088028e6:;
	};
}



inline jule::Ptr<_204bd1603_If> _204be0953_checkIf(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a4063d_If> _75728_i) {
	jule::Ptr<_204bd11d5_Scope> _7587_s = _204bdec3d_checkChild(_self_, &((*(_75728_i))._field_Scope));;
	jule::Ptr<_204ca2b7a_Data> _7607_d = _204cc8794_evalExpr(_204c39260_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)), (*_75728_i.alloc)._field_Expr);;
	if ((_7607_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204ce3a9a_Prim> _7657_prim = _204cdd138_Prim((*(_7607_d))._field_Type.ptr());;
	if (((_7657_prim == nullptr) || (!(_204ce6cce_IsBool(_7657_prim.ptr()))))) {
		_204c3238a_pushErr((*(_self_))._field_s, (*((*_75728_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_204bd1603_If>(_204bd1603_If{._field_Expr=(*_7607_d.alloc)._field_Model, ._field_Scope=_7587_s});;
}



inline jule::Ptr<_204bd1900_Else> _204be0c94_checkElse(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40a17_Else> _77730_e) {
	return jule::new_ptr<_204bd1900_Else>(_204bd1900_Else{._field_Scope=_204bdec3d_checkChild(_self_, &((*(_77730_e))._field_Scope))});;
}



inline void _204be104c_checkConditional(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40ebd_Conditional> _78337_conditional) {
	jule::Ptr<_204bd1d1d_Conditional> _7847_c = jule::new_ptr<_204bd1d1d_Conditional>(_204bd1d1d_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_204bd1603_If>>(nullptr), ._field_Default=jule::Ptr<_204bd1900_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7847_c, &__jule_any_type32); __jule_collection; }));
	(*_7847_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd1603_If>>::alloc(0LL, ((*(_78337_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bd1603_If>(nullptr); __jule_collection; });
	(*_7847_c.alloc)._field_Elifs=jule::append((*_7847_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd1603_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204be0953_checkIf(_self_, (*_78337_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_78337_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208828e06:;
		if (it != expr_end) {
			jule::Ptr<_204a4063d_If> _79015_elif = *it;
			{
				(*_7847_c.alloc)._field_Elifs=jule::append((*_7847_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd1603_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204be0953_checkIf(_self_, _79015_elif); __jule_collection; }));
			}
			_iter_next_208828e06:;
			++it;
			goto _iter_begin_208828e06;
		}
		_iter_end_208828e06:;
	};
	if (((*_78337_conditional.alloc)._field_Default != nullptr)) {
		(*_7847_c.alloc)._field_Default=_204be0c94_checkElse(_self_, (*_78337_conditional.alloc)._field_Default);
	};
}



inline void _204be1525_checkIterScopeSsc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _79934_it, jule::Ptr<_204a39c0e_ScopeTree> _79951_tree, jule::Ptr<_204bd11d5_Scope>* _79979_s, jule::Ptr<_204bd8929_scopeChecker> _79994_ssc) {
	(*(_79994_ssc))._field_it=_79934_it;
	_204bde501_checkChildSsc(_self_, &(_79951_tree), _79979_s, &(_79994_ssc));
}



inline jule::Ptr<_204bd11d5_Scope> _204be19cb_checkIterScopeSc(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _80433_it, jule::Ptr<_204a39c0e_ScopeTree> _80450_tree, jule::Ptr<_204bd8929_scopeChecker> _80477_ssc) {
	jule::Ptr<_204bd11d5_Scope> _8057_scope = _204bde0d3_getChild(_self_.ptr());;
	_204be1525_checkIterScopeSsc(_self_, _80433_it, _80450_tree, &(_8057_scope), _80477_ssc);
	return _8057_scope;;
}



inline jule::Ptr<_204bd11d5_Scope> _204be1dc7_checkIterScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _81031_it, jule::Ptr<_204a39c0e_ScopeTree>* _81049_tree) {
	jule::Ptr<_204bd8929_scopeChecker> _8117_ssc = _204bead37_newChildChecker(_self_);;
	return _204be19cb_checkIterScopeSc(_self_, _81031_it, (*(_81049_tree)), _8117_ssc);;
}



inline void _204be2180_checkInfIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _81534_it) {
	jule::Ptr<_204bd211a_InfIter> _8167_kind = jule::new_ptr<_204bd211a_InfIter>(_204bd211a_InfIter{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8167_kind, &__jule_any_type33); __jule_collection; }));
	(*_8167_kind.alloc)._field_Scope=_204be1dc7_checkIterScope(_self_, static_cast<jule::Uintptr>(_8167_kind), &((*((*(_81534_it))))._field_Scope));
}



inline void _204be2438_checkWhileIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _82136_it) {
	jule::Ptr<_204a3decc_WhileKind> _8227_wh = (*((*(_82136_it))))._field_Kind.cast_ptr<_204a3decc_WhileKind>(&__jule_any_type34);;
	if ((((*(_8227_wh))._field_Expr == nullptr) && ((*_8227_wh.alloc)._field_Next == nullptr))) {
		_204be2180_checkInfIter(_self_, _82136_it);
		return;;
	};
	jule::Ptr<_204bd25c1_WhileIter> _8287_kind = jule::new_ptr<_204bd25c1_WhileIter>(_204bd25c1_WhileIter{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8287_kind, &__jule_any_type35); __jule_collection; }));
	(*_8287_kind.alloc)._field_Scope=_204be1dc7_checkIterScope(_self_, static_cast<jule::Uintptr>(_8287_kind), &((*((*(_82136_it))))._field_Scope));
	if (((*(_8227_wh))._field_Expr != nullptr)) {
		jule::Ptr<_204ca2b7a_Data> _8338_d = _204cc8794_evalExpr(_204c39260_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)), (*_8227_wh.alloc)._field_Expr);;
		if ((_8338_d == nullptr)) {
			return;;
		};
		jule::Ptr<_204ce3a9a_Prim> _8384_prim = _204cdd138_Prim((*(_8338_d))._field_Type.ptr());;
		if ((_8384_prim == nullptr)) {
			_204c3238a_pushErr((*(_self_))._field_s, (*((*(_82136_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_204ce6cce_IsBool(_8384_prim.ptr())))) {
			_204c3238a_pushErr((*(_self_))._field_s, (*((*(_82136_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8287_kind.alloc)._field_Expr=(*_8338_d.alloc)._field_Model;
	};
	if (_204a3e373_IsWhileNext(_8227_wh.ptr())) {
		if ((!(_204bd0800_isValidAstStForNextSt(&((*_8227_wh.alloc)._field_Next))))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_8227_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _8584_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_204be96d7_checkNode(_self_, &((*_8227_wh.alloc)._field_Next));
		if ((_8584_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8619_st = (*((*(_self_))._field_scope))._field_Stmts[_8584_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8584_n);;
			if ((!(_204bd0a42_isValidStForNextSt(&(_8619_st))))) {
				_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_8227_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8287_kind.alloc)._field_Next=_8619_st;
		};
	};
}



inline void _204be2856_checkComptimeRangeIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _87144_it, jule::Ptr<_204bd301c_RangeIter>* _87165_kind, jule::Ptr<_204ca2b7a_Data>* _87188_d) {
	if (((*((*(_87165_kind))))._field_KeyA != nullptr)) {
		if (((!(_204c3192d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _204bdd533_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87165_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_204c3238a_pushErr((*(_self_))._field_s, (*(*((*(_87165_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87165_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_87165_kind))))._field_KeyB != nullptr)) {
		if (((!(_204c3192d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _204bdd533_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87165_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_204c3238a_pushErr((*(_self_))._field_s, (*(*((*(_87165_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87165_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_204a3e8d4_RangeKind> _8857_rang = (*((*(_87144_it))))._field_Kind.cast_ptr<_204a3e8d4_RangeKind>(&__jule_any_type36);;
	_204beb3a9_makeComptimeRange(_87188_d);
	if ((*((*(_87188_d))))._field_Decl) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_8857_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_87188_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_204c9c290_rangeChecker _8927_rc = _204c9c290_rangeChecker{._field_sc=_self_, ._field_rang=_8857_rang, ._field_Kind=(*(_87165_kind)), ._field_d=(*(_87188_d))};;
	jule::Bool _8983_ok = _204c9e2d6_check(&_8927_rc);;
	if ((!(_8983_ok))) {
		return;;
	};
	jule::Ptr<_204ba37e5_comptimeRange> _9037_comptime = _204ce14d2_comptimeRange((*((*(_87188_d))))._field_Type.ptr());;
	((_204ba35c5_comptimeRangeKindMptrData*)(*(_9037_comptime))._field_kind.safe_type())->_204ba2cbc_ready((*(_9037_comptime))._field_kind.data, &((*((*(_87165_kind))))._field_KeyA), &((*((*(_87165_kind))))._field_KeyB));
	jule::I32 _9057_i = 0LL;;
	jule::I32 _9063_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_9057_i < ((_204ba35c5_comptimeRangeKindMptrData*)(*_9037_comptime.alloc)._field_kind.safe_type())->_204ba3471_len((*_9037_comptime.alloc)._field_kind.data)); (_9057_i)++) {
		{
			jule::Ptr<_204bd8929_scopeChecker> _9088_ssc = _204bead37_newChildChecker(_self_);;
			jule::Ptr<_204bd11d5_Scope> _9098_scope = _204bde0d3_getChild(_self_);;
			if (((*((*(_87165_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_87165_kind))))._field_KeyA.alloc)._field_Scope=_9098_scope;
				(*((*(_9088_ssc))._field_table))._field_Vars=jule::append((*(*(_9088_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87165_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_87165_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_87165_kind))))._field_KeyB.alloc)._field_Scope=_9098_scope;
				(*((*(_9088_ssc))._field_table))._field_Vars=jule::append((*(*(_9088_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87165_kind))))._field_KeyB; __jule_collection; }));
			};
			((_204ba35c5_comptimeRangeKindMptrData*)(*_9037_comptime.alloc)._field_kind.safe_type())->_204ba31da_step((*_9037_comptime.alloc)._field_kind.data, _9057_i, &((*((*(_87165_kind))))._field_KeyA), &((*((*(_87165_kind))))._field_KeyB));
			_204bde501_checkChildSsc(_self_, &((*((*(_87144_it))))._field_Scope), &(_9098_scope), &(_9088_ssc));
			if ((_9063_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_208851989;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9098_scope, &__jule_any_type20); __jule_collection; }));
		}
	_iter_next_208851989:;
	}
	_iter_end_208851989:;;
}



inline void _204be2b0e_checkRangeIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter>* _92836_it) {
	jule::Ptr<_204a3e8d4_RangeKind> _9297_rang = (*((*(_92836_it))))._field_Kind.cast_ptr<_204a3e8d4_RangeKind>(&__jule_any_type36);;
	jule::Ptr<_204ca4b49_eval> _9357_eval = _204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	(*(_9357_eval))._field_target._field_mutable=true;
	jule::Ptr<_204ca2b7a_Data> _9387_d = _204cc8453_evalExpr1(_9357_eval, (*(_9297_rang))._field_Expr);;
	if ((_9387_d == nullptr)) {
		return;;
	};
	jule::Ptr<_204bd301c_RangeIter> _9437_kind = jule::new_ptr<_204bd301c_RangeIter>(_204bd301c_RangeIter{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Expr=_9387_d, ._field_KeyA=jule::Ptr<_204c5319c_Var>(nullptr), ._field_KeyB=jule::Ptr<_204c5319c_Var>(nullptr)});;
	if ((*((*(_92836_it))))._field_Comptime) {
		_204be2856_checkComptimeRangeIter(_self_, _92836_it, &(_9437_kind), &(_9387_d));
		return;;
	};
	if (_204ce01e5_comptime((*(_9387_d))._field_Type.ptr())) {
		_204c3238a_pushErr((*(_self_))._field_s, (*((*_9297_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_204c9c290_rangeChecker _9577_rc = _204c9c290_rangeChecker{._field_sc=_self_, ._field_rang=_9297_rang, ._field_Kind=_9437_kind, ._field_d=_9387_d};;
	jule::Bool _9633_ok = _204c9e2d6_check(&_9577_rc);;
	if ((!(_9633_ok))) {
		return;;
	};
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9437_kind, &__jule_any_type37); __jule_collection; }));
	jule::Ptr<_204bd8929_scopeChecker> _9707_ssc = _204bead37_newChildChecker(_self_);;
	jule::Ptr<_204bd11d5_Scope> _9717_scope = _204bde0d3_getChild(_self_);;
	if (((*(_9437_kind))._field_KeyA != nullptr)) {
		if (((!(_204c3192d_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _204bdd533_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9437_kind))._field_KeyA.alloc)._field_Ident)))) {
			_204c3238a_pushErr((*(_self_))._field_s, (*(*(_9437_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9437_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9437_kind))._field_KeyA.alloc)._field_Scope=_9717_scope;
		(*((*(_9707_ssc))._field_table))._field_Vars=jule::append((*(*(_9707_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9437_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*(_9437_kind))._field_KeyB != nullptr)) {
		if (((!(_204c3192d_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _204bdd533_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9437_kind))._field_KeyB.alloc)._field_Ident)))) {
			_204c3238a_pushErr((*(_self_))._field_s, (*(*(_9437_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9437_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9437_kind))._field_KeyB.alloc)._field_Scope=_9717_scope;
		(*((*(_9707_ssc))._field_table))._field_Vars=jule::append((*(*(_9707_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9437_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_204be1525_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9437_kind), (*((*(_92836_it))))._field_Scope, &(_9717_scope), _9707_ssc);
	(*(_9437_kind))._field_Scope=_9717_scope;
}



inline void _204be2db7_checkIter(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3d6a2_Iter> _99530_it) {
	if (_204a3da48_IsInf(_99530_it.ptr())) {
		if ((*_99530_it.alloc)._field_Comptime) {
			_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_99530_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_204be2180_checkInfIter(_self_, &(_99530_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_99530_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20886d2d0:;
			{
				if ((*(_99530_it))._field_Comptime) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_99530_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_204be2438_checkWhileIter(_self_, &(_99530_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_20886e49b:;
			{
				_204be2b0e_checkRangeIter(_self_, &(_99530_it));
			}
		}
		else {
			_case_begin_20886e435:;
			{
				jule::println(_206beddb0_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_20886e3be:;
	};
}



inline jule::Bool _204be3208_checkValidContLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _101936_it) {
	jule::Ptr<_204bd8929_scopeChecker> _10207_scope = _self_;;
	_julec_label_208876d44:;
	if (((*(_10207_scope))._field_it == _101936_it)) {
		return true;;
	};
	if (((*(_10207_scope))._field_parent != nullptr)) {
		_10207_scope=(*_10207_scope.alloc)._field_parent;
		goto _julec_label_208876d44;
	};
	return false;;
}



inline jule::Bool _204be3549_checkValidBreakLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Uintptr _103537_ptr) {
	jule::Ptr<_204bd8929_scopeChecker> _10367_scope = _self_;;
	_julec_label_20887895b:;
	if (((*(_10367_scope))._field_it == _103537_ptr)) {
		return true;;
	};
	if (((*(_10367_scope))._field_cse != 0LLU)) {
		jule::Uintptr _10444_mtch = static_cast<jule::Uintptr>((*(((_204bd651a_Case*)((*_10367_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10444_mtch == _103537_ptr)) {
			return true;;
		};
	};
	if (((*(_10367_scope))._field_parent != nullptr)) {
		_10367_scope=(*_10367_scope.alloc)._field_parent;
		goto _julec_label_20887895b;
	};
	return false;;
}



inline jule::Ptr<_204bd33a2_ContSt> _204be388a_checkContValidScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40187_ContSt> _105836_c) {
	if (_204bdb7b7_isDeferred(_self_)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_105836_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_105836_c))._field_Label != nullptr)) {
		return jule::new_ptr<_204bd33a2_ContSt>(_204bd33a2_ContSt{._field_It=0});;
	};
	jule::Ptr<_204bd8929_scopeChecker> _10687_scope = _self_;;
	_julec_label_20887b200:;
	{
		
		if (((((*(_10687_scope))._field_it == 0LLU) && ((*_10687_scope.alloc)._field_parent != nullptr)) && ((*_10687_scope.alloc)._field_owner == nullptr))) {
			_case_begin_20887cda0:;
			{
				_10687_scope=(*_10687_scope.alloc)._field_parent;
				goto _julec_label_20887b200;
			}
		}
		else if (((*(_10687_scope))._field_it != 0LLU)) {
			_case_begin_20887ce38:;
			{
				return jule::new_ptr<_204bd33a2_ContSt>(_204bd33a2_ContSt{._field_It=(*_10687_scope.alloc)._field_it});;
			}
		}
		_match_end_20887cce5:;
	};
	_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*(_105836_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _204be3b43_checkCont(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a40187_ContSt> _108226_c) {
	jule::Ptr<_204bd33a2_ContSt> _10837_cont = _204be388a_checkContValidScope(_self_, _108226_c);;
	if ((_10837_cont == nullptr)) {
		return;;
	};
	if (((*(_108226_c))._field_Label != nullptr)) {
		jule::Ptr<_204bd7560_scopeLabel> _10898_label = _204bce37b_findLabelParent(&((*(*(_108226_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10898_label == nullptr)) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_108226_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108226_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10898_label))._field_used=true;
		if ((((*((*_10898_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_10898_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_108226_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108226_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I32 _11024_i = ((*((*_10898_label.alloc)._field_node))._field_Index + 1LL);;
		if ((_11024_i >= (*((*(*(_10898_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_108226_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11069_st = (*((*(*(_10898_label))._field_node.alloc)._field_Scope))._field_Stmts[_11024_i];;
			{
				auto &_match_expr{ _11069_st };
				
				if (_match_expr.type == &__jule_any_type33) {
					_case_begin_208889ae3:;
					{
						(*(_10837_cont))._field_It=static_cast<jule::Uintptr>(_11069_st.unsafe_cast_ptr<_204bd211a_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_20888875c:;
					{
						(*(_10837_cont))._field_It=static_cast<jule::Uintptr>(_11069_st.unsafe_cast_ptr<_204bd301c_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type35) {
					_case_begin_208888949:;
					{
						(*_10837_cont.alloc)._field_It=static_cast<jule::Uintptr>(_11069_st.unsafe_cast_ptr<_204bd25c1_WhileIter>());
					}
				}
				else {
					_case_begin_2088888d3:;
					{
						_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_108226_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108226_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_20888886c:;
			};
		};
	};
	if (((*(_10837_cont))._field_It != 0LLU)) {
		if ((!(_204be3208_checkValidContLabel(_self_, (*_10837_cont.alloc)._field_It)))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_108226_c))._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_108226_c.alloc)._field_Label))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10837_cont, &__jule_any_type38); __jule_collection; }));
}



inline void _204be3deb_checkLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a371e5_LabelSt> _112931_l) {
	if ((_204bdc9a5_findLabel(_self_.ptr(), &((*(_112931_l))._field_Ident)) != nullptr)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_112931_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_112931_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_204bd3c32_Label> _11357_label = jule::new_ptr<_204bd3c32_Label>(_204bd3c32_Label{._field_Ident=(*(_112931_l))._field_Ident, ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11357_label, &__jule_any_type19); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd7560_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204bd7560_scopeLabel>(_204bd7560_scopeLabel{._field_token=(*_112931_l.alloc)._field_Token, ._field_node=_11357_label, ._field_used=false}); __jule_collection; }));
}



inline void _204be41a4_pushGoto(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a375be_GotoSt> _114829_gt) {
	jule::Ptr<_204bd4392_GotoSt> _11497_st = jule::new_ptr<_204bd4392_GotoSt>(_204bd4392_GotoSt{._field_Ident=(*((*_114829_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_114829_gt))._field_Label, ._field_Label=jule::Ptr<_204bd3c32_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11497_st, &__jule_any_type39); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd4392_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11497_st; __jule_collection; }));
}



inline void _204be445c_checkPostfix(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt> _115933_a) {
	if (((*(_115933_a))._field_Left.len() > 1LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_115933_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204ca4b49_eval> _11657_eval = _204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	(*(_11657_eval))._field_target._field_mutable=true;
	jule::Ptr<_204a2de45_Expr> _11687_expr = (*((*(_115933_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_204ca2b7a_Data> _11697_d = _204cc8794_evalExpr(_11657_eval, _11687_expr);;
	if ((_11697_d == nullptr)) {
		return;;
	};
	_204bd0426_checkAssign(&((*_self_.alloc)._field_s), &(_11697_d), nullptr, (*_115933_a.alloc)._field_Setter);
	if ((_204cdd655_Ptr((*(_11697_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204cead8d_Ptr> _11778_ptr = _204cdd655_Ptr((*(_11697_d))._field_Type);;
		if (_204ceb90a_IsUnsafe(_11778_ptr.ptr())) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_115933_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115933_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_11697_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_204cdd138_Prim((*(_11697_d))._field_Type.ptr()) == nullptr) || (!(_204ba2371_IsNum((*(_204cdd138_Prim((*(_11697_d))._field_Type.ptr())))._field_Kind))))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_115933_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115933_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_11697_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_204bd476b_Postfix>(_204bd476b_Postfix{._field_Expr=(*(_11697_d))._field_Model, ._field_Op=(*((*_115933_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type40); __jule_collection; }));
}



inline jule::Bool _204be479d_isNewAssignIdent(_204bd8929_scopeChecker* _self_, jule::Str _119532_ident) {
	if ((_204a16aed_IsIgnoreIdent(_119532_ident) || (_119532_ident).empty())) {
		return false;;
	};
	return (_204b27ca8_defByIdent((*(_self_))._field_table.ptr(), &(_119532_ident), false) == nullptr);;
}



inline void _204be4a56_removeInteriorMutRisk(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204ca2b7a_Data>* _120843_d) {
	jule::Ptr<_204a4d2c7_StructIns> _12093_s = _204cde6ab_Struct((*((*(_120843_d))))._field_Type.ptr());;
	if ((_12093_s == nullptr)) {
		return;;
	};
	jule::Ptr<_204bd8929_scopeChecker> _12133_root = _204bdc08c_getHardRoot(_self_);;
	if (((*((*(_12133_root))._field_owner))._field_Owner != _12093_s)) {
		return;;
	};
	(*((*(_120843_d))))._field_Mutable=true;
}



inline jule::Bool _204be500c_checkStructureAssignOp(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a4d2c7_StructIns>* _122244_s, jule::Ptr<_204a385ae_AssignSt>* _122264_a, jule::Ptr<_204ca2b7a_Data>* _122288_r) {
	jule::Ptr<_204b21664_FnIns> _122511_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122264_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_2088aad56:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_2088aaa04:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_2088aaa6a:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_2088aaad1:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_2088aab47:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_2088aabad:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_2088aac24:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_2088ac4c8:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_2088ac53e:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_2088ac5a5:;
			{
				_122511_overload=(*((*(_122244_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_2088aa30b:;
			{
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_122264_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122264_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204a4d67e_Str((*(_122244_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_2088aa97c:;
	};
	if ((_122511_overload == nullptr)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_122264_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122264_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204a4d67e_Str((*(_122244_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_204b2050e_ParamIns> _12577_p = (*(_122511_overload))._field_Params[1LL];;
	return _204c3987b_checkAssignType((*(_self_))._field_s, (*((*(_12577_p))._field_Decl))._field_Reference, &((*_12577_p.alloc)._field_Type), _122288_r, (*((*(_122264_a))))._field_Setter, _204bdc323_getOwnerRefers(_self_));;
}



inline void _204be52b5_checkSingleAssign(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt>* _126139_a) {
	jule::Ptr<_204ca2b7a_Data> _126211_l = nullptr;;
	if ((!(_204a16aed_IsIgnoreIdent((*((*((*(_126139_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_204a2de45_Expr> _12658_expr = (*((*((*(_126139_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_204ca4b49_eval> _12668_eval = _204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
		(*(_12668_eval))._field_target._field_mutable=true;
		_126211_l=_204cc8794_evalExpr(_12668_eval, _12658_expr);
		if ((_126211_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_204ca4b49_eval> _12747_eval = static_cast<jule::Ptr<_204ca4b49_eval>>(nullptr);;
	if ((_126211_l != nullptr)) {
		_12747_eval=_204c38e1e_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1), (*_126211_l.alloc)._field_Type);
	} else {
		_12747_eval=_204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));
	};
	(*(_12747_eval))._field_target._field_mutable=true;
	(*_12747_eval.alloc)._field_unsafety=_204bdad16_isUnsafe(_self_);
	jule::Ptr<_204ca2b7a_Data> _12827_r = _204cc8794_evalExpr(_12747_eval, (*((*(_126139_a))))._field_Right);;
	if ((_12827_r == nullptr)) {
		return;;
	};
	_204be4a56_removeInteriorMutRisk(_self_, &(_12827_r));
	if ((_126211_l == nullptr)) {
		if (_204cdbd4b_Void((*(_12827_r))._field_Type.ptr())) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*((*((*(_126139_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_126139_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_126139_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12827_r, &__jule_any_type22); __jule_collection; }));
		return;;
	};
	if ((!(_204bd0426_checkAssign(&((*_self_.alloc)._field_s), &(_126211_l), _12827_r, (*((*(_126139_a))))._field_Setter)))) {
		return;;
	};
	if ((_204cdee5e_Tup((*(_12827_r))._field_Type.ptr()) != nullptr)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_126139_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204b10dd4_OperandExprModel> _13097_lm = jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_126211_l))._field_Type, ._field_Model=(*_126211_l.alloc)._field_Model});;
	jule::Ptr<_204b10dd4_OperandExprModel> _13137_rm = jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_12827_r))._field_Type, ._field_Model=(*_12827_r.alloc)._field_Model});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_204bd4c22_Assign>(_204bd4c22_Assign{._field_Left=_13097_lm, ._field_Right=_13137_rm, ._field_Op=(*((*(_126139_a))))._field_Setter}), &__jule_any_type41); __jule_collection; }));
	if (((*((*((*(_126139_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_204c90d44_assignTypeChecker _13208_checker = _204c90d44_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_126211_l.alloc)._field_Type, ._field_d=_12827_r, ._field_errorToken=(*((*(_126139_a))))._field_Setter, ._field_refers=_204bdc323_getOwnerRefers(_self_)};;
		if (_204c91d45_check(&_13208_checker)) {
			(*(_13137_rm))._field_Model=(*(_12827_r))._field_Model;
			(*(_13097_lm))._field_Model=(*_126211_l.alloc)._field_Model;
		};
		return;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _13337_strct = _204cde6ab_Struct((*_126211_l.alloc)._field_Type.ptr());;
	if ((_13337_strct != nullptr)) {
		_204be500c_checkStructureAssignOp(_self_, &(_13337_strct), _126139_a, &(_12827_r));
		return;;
	};
	jule::U32 _13383_id = (*((*((*(_126139_a))))._field_Setter))._field_Id;;
	(*(*((*(_126139_a))))._field_Setter.alloc)._field_Id=_204beb178_removeEqFromOp((*(*((*(_126139_a))))._field_Setter.alloc)._field_Id);
	_204ccabb4_binaryEval _13407_solver = static__204ccb621_new(_12747_eval, (*((*(_126139_a))))._field_Setter);;
	({
		jule::Ptr<_204ca2b7a_Data> ___jule_assign_arg = _126211_l;
		jule::Ptr<_204ca2b7a_Data> _1___jule_assign_arg = _12827_r;
		_13407_solver._field_l = ___jule_assign_arg;
		_13407_solver._field_r = _1___jule_assign_arg;
	});
	_204cd0801_evalOp(&_13407_solver);
	(*(*((*(_126139_a))))._field_Setter.alloc)._field_Id=_13383_id;
}



inline void _204be5903_processEndPartOfMultiAssign(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _134649_st, jule::Ptr<_204a385ae_AssignSt>* _134672_a, jule::Ptr<_204a3802b_AssignLeft>* _13478_lexpr, jule::Ptr<_204ca2b7a_Data>* _134738_l, jule::Ptr<_204ca2b7a_Data>* _134753_r, jule::Bool _134763_strict) {
	if (((!((*((*(_13478_lexpr))))._field_Reference)) && _204a16aed_IsIgnoreIdent((*((*(_13478_lexpr))))._field_Ident))) {
		if (_204cdbd4b_Void((*((*(_134753_r))))._field_Type.ptr())) {
			_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_134672_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_204ca2b7a_Data>> &__jule_push_dest = (*((*(_134649_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_134672_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13478_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_2088cd560:;
				{
					if ((!(_204be479d_isNewAssignIdent(_self_.ptr(), (*((*(_13478_lexpr))))._field_Ident)))) {
						goto _julec_label_2088d8dd9;
					};
				}
			}
			else {
				_case_begin_2088cd4e9:;
				{
					if (((*((*(_13478_lexpr))))._field_Mutable || (*((*(_13478_lexpr))))._field_Reference)) {
						_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_13478_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_2088d8dd9;
				}
			}
			_match_end_2088cd483:;
		};
		if (_204bdd533_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_13478_lexpr))))._field_Ident))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_13478_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13478_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_204bdb29a_stop(_self_);
			return;;
		};
		if (_204a16aed_IsIgnoreIdent((*((*(_13478_lexpr))))._field_Ident)) {
			_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_13478_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_204c5319c_Var> _13798_v = jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_13478_lexpr))))._field_Token, ._field_Ident=(*((*(_13478_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13478_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13478_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_204ce3193_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=(*((*(_134672_a))))._field_Right, ._field_Data=(*(_134753_r))}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
		_204c48c20_checkVarValue((*_self_.alloc)._field_s, &(_13798_v));
		{ jule::Slice<jule::Ptr<_204ca2b7a_Data>> &__jule_push_dest = (*((*(_134649_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=(*((*_13798_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_13798_v.alloc)._field_Mutable, ._field_Reference=(*_13798_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13798_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13798_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_204c5319c_Var>> &__jule_push_dest = (*((*(_134649_st))))._field_Decls; __jule_push_dest.push(_13798_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13798_v; __jule_collection; }));
		return;;
	};
	_julec_label_2088d8dd9:;
	if (((*((*(_13478_lexpr))))._field_Mutable || (*((*(_13478_lexpr))))._field_Reference)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_13478_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13478_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_204bd0426_checkAssign(&((*(_self_))._field_s), _134738_l, (*(_134753_r)), (*((*(_13478_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14147_reference = false;;
	if (_204c3e111_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_134738_l))))._field_Mutable, _14147_reference, &((*((*(_134738_l))))._field_Type), _134753_r, &((*((*(_13478_lexpr))))._field_Token))) {
		_14147_reference=_134763_strict;
		_204c3987b_checkAssignType((*(_self_))._field_s, _14147_reference, &((*((*(_134738_l))))._field_Type), _134753_r, (*((*(_13478_lexpr))))._field_Token, _204bdc323_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_204ca2b7a_Data>> &__jule_push_dest = (*((*(_134649_st))))._field_Left; __jule_push_dest.push((*(_134738_l))); };
}



inline void _204be5bab_checkMultiAssign(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt>* _142238_a) {
	if ((((*((*((*(_142238_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU)) && ((*(*((*(_142238_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_142238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204ca4b49_eval> _14277_eval = _204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	jule::Ptr<_204ca2b7a_Data> _14287_rd = _204cc8794_evalExpr(_14277_eval, (*((*(_142238_a))))._field_Right);;
	if ((_14287_rd == nullptr)) {
		return;;
	};
	jule::Bool _14327_strict = false;;
	jule::Slice<jule::Ptr<_204ca2b7a_Data>> _14337_right = _204bce6bc_getDatasFromTupleData(&(_14287_rd));;
	if ((_14337_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14337_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_2088e471e:;
				{
					jule::Ptr<_204b13c3e_IndexingExprModel> _14379_iem = (*(_14337_right[0LL]))._field_Model.unsafe_cast_ptr<_204b13c3e_IndexingExprModel>();;
					if ((_204cdebc8_Map((*((*(_14379_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_14327_strict=true;
						_14337_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=(*(_204cdebc8_Map((*((*(_14379_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_14337_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)}); (*it++) = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_2088e4664:;
		};
	};
	{
		
		if (((*((*(_142238_a))))._field_Left.len() > _14337_right.len())) {
			_case_begin_2088e727c:;
			{
				_204c3238a_pushErr((*(_self_))._field_s, (*((*(_142238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142238_a))))._field_Left.len() < _14337_right.len())) {
			_case_begin_2088e72e3:;
			{
				_204c3238a_pushErr((*(_self_))._field_s, (*((*(_142238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_2088e47b8:;
	};
	(*_14277_eval.alloc)._field_target._field_mutable=true;
	jule::Ptr<_204bd52a5_MultiAssign> _14607_st = jule::new_ptr<_204bd52a5_MultiAssign>(_204bd52a5_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_204ca2b7a_Data>>(nullptr), ._field_Right=(*(_14287_rd))._field_Model, ._field_Op=(*((*(_142238_a))))._field_Setter});;
	{
		auto expr = &((*((*(_142238_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2088ec8d1:;
		if (it != expr_end) {
			jule::I32 _14647_i = it - expr->begin();
			{
				jule::Ptr<_204a3802b_AssignLeft> _14658_lexpr = (*((*(_142238_a))))._field_Left[_14647_i];;
				jule::Ptr<_204ca2b7a_Data> _146612_l = nullptr;;
				if ((!(_204a16aed_IsIgnoreIdent((*(_14658_lexpr))._field_Ident)))) {
					if ((!((*((*(_142238_a))))._field_Declarative))) {
						goto _julec_label_2088ee1eb;
					};
					if (((*_14658_lexpr.alloc)._field_Mutable && (*_14658_lexpr.alloc)._field_Reference)) {
						goto _julec_label_20890195c;
					};
					{
						auto &_match_expr{ (*((*(_14658_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type42) {
							_case_begin_20890040b:;
							{
								if (_204be479d_isNewAssignIdent(_self_, (*_14658_lexpr.alloc)._field_Ident)) {
									goto _julec_label_20890195c;
								};
							}
						}
						_match_end_208900384:;
					};
					_julec_label_2088ee1eb:;
					_146612_l=_204cc8794_evalExpr(_14277_eval, (*_14658_lexpr.alloc)._field_Expr);
					if ((_146612_l == nullptr)) {
						goto _iter_next_2088ec8d1;
					};
					_julec_label_20890195c:;
				};
				jule::Ptr<_204ca2b7a_Data> _14878_r = _14337_right[_14647_i];;
				_204be4a56_removeInteriorMutRisk(_self_, &(_14878_r));
				_204be5903_processEndPartOfMultiAssign(_self_, &(_14607_st), _142238_a, &(_14658_lexpr), &(_146612_l), &(_14878_r), _14327_strict);
			}
			_iter_next_2088ec8d1:;
			++it;
			_14647_i++;
			goto _iter_begin_2088ec8d1;
		}
		_iter_end_2088ec8d1:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14607_st, &__jule_any_type44); __jule_collection; }));
}



inline void _204be5e64_checkAssignSt(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a385ae_AssignSt> _149434_a) {
	{
		
		if (_204a19062_IsPostfixOp((*((*(_149434_a))._field_Setter))._field_Id)) {
			_case_begin_2089036d9:;
			{
				_204be445c_checkPostfix(_self_, _149434_a);
			}
		}
		else if (((*(_149434_a))._field_Left.len() == 1LL)) {
			_case_begin_208903387:;
			{
				_204be52b5_checkSingleAssign(_self_, &(_149434_a));
			}
		}
		else {
			_case_begin_208903321:;
			{
				_204be5bab_checkMultiAssign(_self_, &(_149434_a));
			}
		}
		_match_end_208903233:;
	};
}



inline jule::Ptr<_204bd11d5_Scope> _204be6360_checkCaseScope(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd651a_Case>* _150532_c, jule::Ptr<_204a39c0e_ScopeTree>* _150547_tree) {
	jule::Ptr<_204bd8929_scopeChecker> _15067_ssc = _204bead37_newChildChecker(_self_);;
	(*(_15067_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150532_c)));
	return _204bde8ec_checkChildSc(_self_, _150547_tree, &(_15067_ssc));;
}



inline jule::Ptr<_204bd651a_Case> _204be68c1_checkCase(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd59e2_Match> _151130_m, jule::I32 _151141_i, jule::Ptr<_204a41bb1_Case> _151153_c, jule::Ptr<_204ca2b7a_Data> _151172_expr) {
	jule::Ptr<_204bd651a_Case> _15127_case = (*(_151130_m))._field_Cases[_151141_i];;
	(*(_15127_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(0LL, (*(_151153_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204ca2b7a_Data>(nullptr); __jule_collection; });
	jule::Bool _15147_constMatched = false;;
	jule::Ptr<_204ca4b49_eval> _15157_eval = _204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	{
		auto expr = &((*_151153_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208908e92:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _151615_e = *it;
			{
				jule::Ptr<_204ca2b7a_Data> _15178_d = _204cc7980_evalExprKind(_15157_eval, (*(_151615_e))._field_Kind);;
				if ((_15178_d == nullptr)) {
					goto _iter_next_208908e92;
				};
				if ((*_151130_m.alloc)._field_TypeMatch) {
					(*_15127_case.alloc)._field_Exprs=jule::append((*_15127_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15178_d; __jule_collection; }));
					if ((_204bebcb1_countMatchType(&(_151130_m), &((*(_15178_d))._field_Type)) > 1LL)) {
						_204c3238a_pushErr((*(_self_))._field_s, (*_151615_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*_15178_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_151130_m.alloc)._field_Comptime) {
						_15147_constMatched=(_15147_constMatched || _204cdb1be_Equal((*(_151172_expr))._field_Type, (*(_15178_d))._field_Type));
					} else {
						if ((_204cddb72_TypeEnum((*(_151172_expr))._field_Type.ptr()) != nullptr)) {
							_204c3a2d8_checkTypeCompatibility((*(_self_))._field_s, &((*_151172_expr.alloc)._field_Type), &((*(_15178_d))._field_Type), &((*_151615_e.alloc)._field_Token));
						} else {
							jule::Ptr<_204b28cba_Trait> _15367_trt = _204cde942_Trait((*(_151172_expr))._field_Type.ptr());;
							if ((_15367_trt != nullptr)) {
								_204c3a2d8_checkTypeCompatibility((*(_self_))._field_s, &((*_151172_expr.alloc)._field_Type), &((*(_15178_d))._field_Type), &((*_151615_e.alloc)._field_Token));
							};
						};
					};
					_204cd42c7_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15178_d))._field_Type), &((*((*_151130_m.alloc)._field_Expr))._field_Type), &((*_151615_e.alloc)._field_Token), _204bdc323_getOwnerRefers(_self_));
					goto _iter_next_208908e92;
				};
				if ((*(_15178_d))._field_Decl) {
					_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_151615_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_208908e92;
				};
				if ((*_151130_m.alloc)._field_Comptime) {
					if (((!(_204ca35b5_IsConst(_15178_d.ptr()))) && (_204ce19ee_comptimeTypeInfo((*_15178_d.alloc)._field_Type.ptr()) == nullptr))) {
						_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_151615_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_208908e92;
					};
					if ((!(_15147_constMatched))) {
						if (_204ca35b5_IsConst(_15178_d.ptr())) {
							_15147_constMatched=(_204ca35b5_IsConst(_151172_expr.ptr()) && _204b0a62b_Eq((*_15178_d.alloc)._field_Constant.ptr(), (*(*(_151172_expr))._field_Constant.alloc)));
						} else {
							jule::Ptr<_204bb36e5_comptimeTypeInfo> _15627_exprCti = _204ce19ee_comptimeTypeInfo((*(_151172_expr))._field_Type.ptr());;
							_15147_constMatched=((_15627_exprCti != nullptr) && _204cdb1be_Equal((*(_204ce19ee_comptimeTypeInfo((*(_15178_d))._field_Type)))._field_base, (*(_15627_exprCti))._field_base));
						};
					};
				};
				(*_15127_case.alloc)._field_Exprs=jule::append((*_15127_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15178_d; __jule_collection; }));
				if ((((!((*_151130_m.alloc)._field_Comptime)) || (_204ce19ee_comptimeTypeInfo((*(_151172_expr))._field_Type.ptr()) == nullptr)) || (_204ce19ee_comptimeTypeInfo((*(_15178_d))._field_Type.ptr()) == nullptr))) {
					_204c90d44_assignTypeChecker _15729_checker = _204c90d44_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_151172_expr))._field_Type, ._field_d=_15178_d, ._field_errorToken=(*_151615_e.alloc)._field_Token, ._field_refers=_204bdc323_getOwnerRefers(_self_)};;
					_204c91d45_check(&_15729_checker);
				};
			}
			_iter_next_208908e92:;
			++it;
			goto _iter_begin_208908e92;
		}
		_iter_end_208908e92:;
	};
	if (((!((*_151130_m.alloc)._field_Comptime)) || _15147_constMatched)) {
		(*_15127_case.alloc)._field_Scope=_204be6360_checkCaseScope(_self_, &(_15127_case), &((*_151153_c.alloc)._field_Scope));
	};
	return _15127_case;;
}



inline void _204be6cde_checkCases(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase>* _158832_m, jule::Ptr<_204bd59e2_Match> _158856_rm, jule::Ptr<_204ca2b7a_Data> _158872_expr) {
	(*(_158856_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd651a_Case>>::alloc(0LL, (*((*(_158832_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bd651a_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_158832_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20891cca8:;
		if (it != expr_end) {
			jule::I32 _15907_i = it - expr->begin();
			{
				jule::Ptr<_204bd651a_Case> _15918_case = jule::new_ptr<_204bd651a_Case>(_204bd651a_Case{._field_Owner=_158856_rm, ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_204ca2b7a_Data>>(nullptr), ._field_Next=jule::Ptr<_204bd651a_Case>(nullptr)});;
				if ((_15907_i > 0LL)) {
					(*((*_158856_rm.alloc)._field_Cases[(_15907_i - 1LL)]))._field_Next=_15918_case;
				};
				(*_158856_rm.alloc)._field_Cases=jule::append((*_158856_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd651a_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15918_case; __jule_collection; }));
			}
			_iter_next_20891cca8:;
			++it;
			_15907_i++;
			goto _iter_begin_20891cca8;
		}
		_iter_end_20891cca8:;
	};
	if ((((*_158856_rm.alloc)._field_Default != nullptr) && ((*((*(_158832_m))))._field_Cases.len() > 0LL))) {
		(*((*_158856_rm.alloc)._field_Cases[((*_158856_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_158856_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_158832_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2089212ea:;
		if (it != expr_end) {
			jule::I32 _16048_i = it - expr->begin();
			jule::Ptr<_204a41bb1_Case> _160415_c = *it;
			{
				_204be68c1_checkCase(_self_, _158856_rm, _16048_i, _160415_c, _158872_expr);
			}
			_iter_next_2089212ea:;
			++it;
			_16048_i++;
			goto _iter_begin_2089212ea;
		}
		_iter_end_2089212ea:;
	};
}



inline jule::Ptr<_204bd651a_Case> _204be71da_checkDefault(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd59e2_Match> _160933_m, jule::Ptr<_204a40a17_Else> _160948_d) {
	jule::Ptr<_204bd651a_Case> _16107_def = jule::new_ptr<_204bd651a_Case>(_204bd651a_Case{._field_Owner=_160933_m, ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_204ca2b7a_Data>>(nullptr), ._field_Next=jule::Ptr<_204bd651a_Case>(nullptr)});;
	(*(_16107_def))._field_Scope=_204be6360_checkCaseScope(_self_, &(_16107_def), &((*(_160948_d))._field_Scope));
	return _16107_def;;
}



inline void _204be754d_checkComptimePanic(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a14216_Token> _161739_callToken, jule::Ptr<_204bd11d5_Scope>* _161766_s) {
	if (((*((*(_161766_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16213_stmt = (*((*(_161766_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16213_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_2089249e6:;
			{
				jule::Ptr<_204ca2b7a_Data> _16244_d = _16213_stmt.unsafe_cast_ptr<_204ca2b7a_Data>();;
				{
					auto &_match_expr{ (*(_16244_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type27) {
						_case_begin_2089259c5:;
						{
							jule::Ptr<_204b17869_BuiltinPanicCallExprModel> _16279_m = (*(_16244_d))._field_Model.unsafe_cast_ptr<_204b17869_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16279_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_208926b91:;
									{
										jule::Ptr<_204a9d338_Const> _16306_c = (*(_16279_m))._field_Expr.unsafe_cast_ptr<_204a9d338_Const>();;
										if ((!(_204b092ea_IsStr(_16306_c.ptr())))) {
											goto _match_end_208926b19;
										};
										if ((_161739_callToken == nullptr)) {
											jule::Ptr<_204bd8929_scopeChecker> _163511_root = _204bdc08c_getHardRoot(_self_);;
											if (((*(_163511_root))._field_calledFrom == nullptr)) {
												_161739_callToken=(*(_16279_m))._field_Token;
											} else {
												_161739_callToken=(*(_163511_root))._field_calledFrom;
											};
										};
										_204c3238a_pushErr((*(_self_))._field_s.ptr(), _161739_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204b06bee_ReadStr(_16306_c.ptr()), &__jule_any_type5); __jule_collection; }));
										_204bdb29a_stop(_self_);
									}
								}
								_match_end_208926b19:;
							};
						}
					}
					_match_end_20892595e:;
				};
			}
		}
		_match_end_208924034:;
	};
}



inline void _204be78b1_processConstMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204bd59e2_Match>* _164939_tm, jule::Ptr<_204a424ca_MatchCase>* _164956_m) {
	{
		auto expr = &((*((*(_164939_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208927103:;
		if (it != expr_end) {
			jule::I32 _16508_i = it - expr->begin();
			jule::Ptr<_204bd651a_Case> _165015_c = *it;
			{
				if (((*(_165015_c))._field_Scope != nullptr)) {
					jule::Ptr<_204a14216_Token> _165213_token = nullptr;;
					if (((!((*((*(_164939_tm))))._field_TypeMatch)) && ((*(*(_165015_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165213_token=(*((*((*((*(_164956_m))))._field_Cases[_16508_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_204be754d_checkComptimePanic(_self_, _165213_token, &((*_165015_c.alloc)._field_Scope));
					(*((*(_164939_tm))))._field_Default=_165015_c;
					(*((*(_164939_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_208927103:;
			++it;
			_16508_i++;
			goto _iter_begin_208927103;
		}
		_iter_end_208927103:;
	};
	if (((*((*(_164956_m))))._field_Default != nullptr)) {
		(*((*(_164939_tm))))._field_Cases=nullptr;
		(*((*(_164939_tm))))._field_Default=_204be71da_checkDefault(_self_, (*(_164939_tm)), (*((*(_164956_m))))._field_Default);
		if (((*((*(_164939_tm))))._field_Default != nullptr)) {
			jule::Ptr<_204a14216_Token> _166613_token = nullptr;;
			if ((!((*((*(_164939_tm))))._field_TypeMatch))) {
				_166613_token=(*((*(*((*(_164956_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_204be754d_checkComptimePanic(_self_, _166613_token, &((*(*((*(_164939_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_164939_tm))))._field_Cases=nullptr;
	};
}



inline void _204be7b69_checkTypeMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase>* _167836_m) {
	jule::Ptr<_204ca2b7a_Data> _16797_d = _204cc7cc1_eval1(_204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)), (*((*(_167836_m))))._field_Expr);;
	if ((_16797_d == nullptr)) {
		return;;
	};
	if ((*((*(_167836_m))))._field_Comptime) {
		jule::Ptr<_204bb36e5_comptimeTypeInfo> _16858_cti = _204ce19ee_comptimeTypeInfo((*(_16797_d))._field_Type.ptr());;
		if ((_16858_cti == nullptr)) {
			if ((!((*_16797_d.alloc)._field_Decl))) {
				_204c3238a_pushErr((*(_self_))._field_s, (*((*((*(_167836_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*_16797_d.alloc)._field_Type=(*(_16858_cti))._field_base;
		};
	} else if (((*(_16797_d))._field_Decl || (!(((((_204cdd138_Prim((*(_16797_d))._field_Type.ptr()) != nullptr) && _204ce72eb_IsAny(_204cdd138_Prim((*(_16797_d))._field_Type).ptr())) || (_204cde942_Trait((*(_16797_d))._field_Type.ptr()) != nullptr)) || (_204cddb72_TypeEnum((*(_16797_d))._field_Type.ptr()) != nullptr)))))) {
		_204c3238a_pushErr((*(_self_))._field_s, (*((*((*(_167836_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204bd59e2_Match> _16997_tm = jule::new_ptr<_204bd59e2_Match>(_204bd59e2_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16797_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_167836_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_204bd651a_Case>>(nullptr), ._field_Default=jule::Ptr<_204bd651a_Case>(nullptr)});;
	if (((!((*(_16997_tm))._field_Comptime)) && ((*((*(_167836_m))))._field_Default != nullptr))) {
		(*_16997_tm.alloc)._field_Default=_204be71da_checkDefault(_self_, _16997_tm, (*((*(_167836_m))))._field_Default);
	};
	_204be6cde_checkCases(_self_, _167836_m, _16997_tm, _16797_d);
	if ((*(_16997_tm))._field_Comptime) {
		_204be78b1_processConstMatch(_self_, &(_16997_tm), _167836_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16997_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _204be7e22_checkCommonMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase>* _172138_m) {
	jule::Ptr<_204ca2b7a_Data> _172211_d = nullptr;;
	if (((*((*(_172138_m))))._field_Expr == nullptr)) {
		_172211_d=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b05549_NewBool(true)});
		(*(_172211_d))._field_Model=jule::Any((*_172211_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_172211_d=_204cc8453_evalExpr1(_204c39260_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)), (*((*(_172138_m))))._field_Expr);
		if ((_172211_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_172138_m))))._field_Comptime) {
		if ((!(_204beb673_canComptimeMatch(&(_172211_d))))) {
			_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172138_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_204ce01e5_comptime((*(_172211_d))._field_Type.ptr())) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172138_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204bd59e2_Match> _17487_mc = jule::new_ptr<_204bd59e2_Match>(_204bd59e2_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172211_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_172138_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_204bd651a_Case>>(nullptr), ._field_Default=jule::Ptr<_204bd651a_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17487_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_17487_mc))._field_Comptime)) && ((*((*(_172138_m))))._field_Default != nullptr))) {
		(*_17487_mc.alloc)._field_Default=_204be71da_checkDefault(_self_, _17487_mc, (*((*(_172138_m))))._field_Default);
	};
	_204be6cde_checkCases(_self_, _172138_m, _17487_mc, _172211_d);
	if ((*(_17487_mc))._field_Comptime) {
		_204be78b1_processConstMatch(_self_, &(_17487_mc), _172138_m);
	};
}



inline void _204be81ca_checkMatch(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a424ca_MatchCase> _177231_m) {
	if ((*(_177231_m))._field_TypeMatch) {
		_204be7b69_checkTypeMatch(_self_, &(_177231_m));
		return;;
	};
	_204be7e22_checkCommonMatch(_self_, &(_177231_m));
}



inline void _204be8483_checkFall(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a378bb_FallSt> _178026_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _204bdb7b7_isDeferred(_self_))) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*(_178026_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_204bd651a_Case* _17887_case = ((_204bd651a_Case*)((*(_self_))._field_cse));;
	if ((*((*(_17887_case))._field_Owner))._field_Comptime) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_178026_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17887_case))._field_Next == nullptr)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_178026_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_204bd6c13_FallSt>(_204bd6c13_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17887_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_204bd377b_BreakSt> _204be87c4_checkBreakWithLabel(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ecad_BreakSt> _180336_b) {
	jule::Ptr<_204bd377b_BreakSt> _18047_brk = _204be8b15_checkPlainBreak(_self_, _180336_b);;
	if ((_18047_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18047_brk))._field_It=0LLU;
	(*_18047_brk.alloc)._field_Mtch=0LLU;
	jule::Ptr<_204bd7560_scopeLabel> _18147_label = _204bce37b_findLabelParent(&((*((*(_180336_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18147_label == nullptr)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180336_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180336_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_18147_label))._field_used=true;
	if ((((*((*_18147_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_18147_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180336_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180336_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _18273_i = ((*((*_18147_label.alloc)._field_node))._field_Index + 1LL);;
	if ((_18273_i >= (*((*(*(_18147_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180336_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180336_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18318_st = (*((*(*(_18147_label))._field_node.alloc)._field_Scope))._field_Stmts[_18273_i];;
		{
			auto &_match_expr{ _18318_st };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_2089642c7:;
				{
					(*_18047_brk.alloc)._field_It=static_cast<jule::Uintptr>(_18318_st.unsafe_cast_ptr<_204bd211a_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_208962e41:;
				{
					(*_18047_brk.alloc)._field_It=static_cast<jule::Uintptr>(_18318_st.unsafe_cast_ptr<_204bd301c_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type35) {
				_case_begin_20896312d:;
				{
					(*_18047_brk.alloc)._field_It=static_cast<jule::Uintptr>(_18318_st.unsafe_cast_ptr<_204bd25c1_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_208963194:;
				{
					(*_18047_brk.alloc)._field_Mtch=static_cast<jule::Uintptr>(_18318_st.unsafe_cast_ptr<_204bd59e2_Match>());
				}
			}
			else {
				_case_begin_2089630b7:;
				{
					_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180336_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180336_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_208963051:;
		};
	};
	if (((*_18047_brk.alloc)._field_It != 0LLU)) {
		if ((!(_204be3549_checkValidBreakLabel(_self_, (*_18047_brk.alloc)._field_It)))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180336_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180336_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*_18047_brk.alloc)._field_Mtch != 0LLU)) {
		if ((!(_204be3549_checkValidBreakLabel(_self_, (*_18047_brk.alloc)._field_Mtch)))) {
			_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180336_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180336_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _18047_brk;;
}



inline jule::Ptr<_204bd377b_BreakSt> _204be8b15_checkPlainBreak(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ecad_BreakSt> _186132_b) {
	if (_204bdb7b7_isDeferred(_self_)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186132_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204bd8929_scopeChecker> _18677_scope = _self_;;
	_julec_label_20896a5a8:;
	{
		
		if ((((((*(_18677_scope))._field_it == 0LLU) && ((*_18677_scope.alloc)._field_cse == 0LLU)) && ((*_18677_scope.alloc)._field_parent != nullptr)) && ((*_18677_scope.alloc)._field_owner == nullptr))) {
			_case_begin_20896ba71:;
			{
				_18677_scope=(*_18677_scope.alloc)._field_parent;
				goto _julec_label_20896a5a8;
			}
		}
		else if (((*(_18677_scope))._field_it != 0LLU)) {
			_case_begin_20896bb09:;
			{
				return jule::new_ptr<_204bd377b_BreakSt>(_204bd377b_BreakSt{._field_It=(*_18677_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18677_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_20896bb70:;
			{
				return jule::new_ptr<_204bd377b_BreakSt>(_204bd377b_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_204bd651a_Case*)((*_18677_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_20896b972:;
	};
	_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*(_186132_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _204be8dbd_checkBreak(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ecad_BreakSt> _188327_b) {
	if (((*(_188327_b))._field_Label != nullptr)) {
		jule::Ptr<_204bd377b_BreakSt> _18858_brk = _204be87c4_checkBreakWithLabel(_self_, _188327_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18858_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_204bd377b_BreakSt> _18907_brk = _204be8b15_checkPlainBreak(_self_, _188327_b);;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18907_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _204be9176_checkRet(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a3ce32_RetSt> _189429_r) {
	if (_204bdb7b7_isDeferred(_self_)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189429_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_204bd70a9_RetSt> _18997_rt = jule::new_ptr<_204bd70a9_RetSt>(_204bd70a9_RetSt{._field_Func=(*(_204bdbd06_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18997_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_204c9eacd_retTypeChecker> _19047_rtc = jule::new_ptr<_204c9eacd_retTypeChecker>(_204c9eacd_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18997_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_204a2de45_Expr>>(nullptr), ._field_errorToken=(*(_189429_r))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _19103_ok = _204ca0abd_check(_19047_rtc.ptr(), &((*_189429_r.alloc)._field_Expr));;
	if ((!(_19103_ok))) {
		return;;
	};
	if (((*_189429_r.alloc)._field_Expr != nullptr)) {
		(*_18997_rt.alloc)._field_Expr=(*_19047_rtc.alloc)._field_model;
	};
}



inline void _204be942e_checkUseExpr(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a2e819_UseExpr> _192029_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192029_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_204bdb7b7_isDeferred(_self_)) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192029_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192029_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _204be96d7_checkNode(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Any* _193631_node) {
	{
		auto &_match_expr{ (*(_193631_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_20898236c:;
			{
				_204bdeee6_checkAnonScope(_self_, (*(_193631_node)).cast_ptr<_204a39c0e_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_2089826d0:;
			{
				_204bdd7db_checkVarDecl(_self_, (*(_193631_node)).cast_ptr<_204a3ca58_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_208982746:;
			{
				_204bddd4c_checkTypeAliasDecl(_self_, (*(_193631_node)).cast_ptr<_204a4170a_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2089827ac:;
			{
				_204be0612_checkExpr(_self_, (*(_193631_node)).cast_ptr<_204a2de45_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_208982b0e:;
			{
				_204be104c_checkConditional(_self_, (*(_193631_node)).cast_ptr<_204a40ebd_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_208982b75:;
			{
				_204be2db7_checkIter(_self_, (*(_193631_node)).cast_ptr<_204a3d6a2_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_208982bdb:;
			{
				_204be3b43_checkCont(_self_, (*(_193631_node)).cast_ptr<_204a40187_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_208982c52:;
			{
				_204be3deb_checkLabel(_self_, (*(_193631_node)).cast_ptr<_204a371e5_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_208982cb8:;
			{
				_204be41a4_pushGoto(_self_, (*(_193631_node)).cast_ptr<_204a375be_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_208982d2e:;
			{
				_204be5e64_checkAssignSt(_self_, (*(_193631_node)).cast_ptr<_204a385ae_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_208982d95:;
			{
				_204be81ca_checkMatch(_self_, (*(_193631_node)).cast_ptr<_204a424ca_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_208982e0b:;
			{
				_204be8483_checkFall(_self_, (*(_193631_node)).cast_ptr<_204a378bb_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_208982e83:;
			{
				_204be8dbd_checkBreak(_self_, (*(_193631_node)).cast_ptr<_204a3ecad_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_20898300a:;
			{
				_204be9176_checkRet(_self_, (*(_193631_node)).cast_ptr<_204a3ce32_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_208983082:;
			{
				_204be942e_checkUseExpr(_self_, (*(_193631_node)).cast_ptr<_204a2e819_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_208982548:;
			{
				jule::println(_206beddb0_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_2089824d2:;
	};
}



inline void _204be98d5_checkResult(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	_204a3959e_Stmt _19747_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19747_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_2089ae850:;
			{
				jule::Ptr<_204a2e819_UseExpr> _19778_ue = _19747_stmt._field_Data.unsafe_cast_ptr<_204a2e819_UseExpr>();;
				jule::Ptr<_204ca2b7a_Data> _19788_d = _204cc8794_evalExpr(_204c39260_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)), (*(_19778_ue))._field_Expr);;
				if ((_19788_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19788_d, &__jule_any_type22); __jule_collection; }));
				jule::Ptr<_204c9eacd_retTypeChecker> _19838_rtc = jule::new_ptr<_204c9eacd_retTypeChecker>(_204c9eacd_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_types=_204b22896_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_204a2de45_Expr>>(nullptr), ._field_errorToken=(*((*_19778_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_204ca0abd_check(_19838_rtc.ptr(), &((*_19778_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2089b1775:;
			{
				jule::Ptr<_204a2de45_Expr> _19918_expr = _19747_stmt._field_Data.unsafe_cast_ptr<_204a2de45_Expr>();;
				jule::Ptr<_204ca2b7a_Data> _19928_d = _204cc8794_evalExpr(_204c39260_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)), _19918_expr);;
				if ((_19928_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19928_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_2089b7968:;
						{
							jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _19989_m = (*(_19928_d))._field_Model.unsafe_cast_ptr<_204b19470_BuiltinErrorCallExprModel>();;
							_204be0359_processErrorCall(_self_, &(_19989_m), (*(_19918_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19928_d, &__jule_any_type22); __jule_collection; }));
						}
					}
					else {
						_case_begin_2089b7b44:;
						{
							return;;
						}
					}
					_match_end_2089b7acd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_2089b0dd4:;
			{
				_204be96d7_checkNode(_self_, &(_19747_stmt._field_Data));
			}
		}
		else {
			_case_begin_2089b0d6d:;
			{
				_204be96d7_checkNode(_self_, &(_19747_stmt._field_Data));
				return;;
			}
		}
		_match_end_2089b0d07:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _204be9ad3_checkTree(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _20207_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20207_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20207_n); ((*_self_.alloc)._field_i)++) {
		{
			_204a3959e_Stmt _20288_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_204be96d7_checkNode(_self_, &(_20288_stmt._field_Data));
			if (_204bdb531_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_2089bb7b3:;
	}
	_iter_end_2089bb7b3:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_204be98d5_checkResult(_self_);
	};
}



inline void _204be9e46_checkGoto(_204bd8929_scopeChecker* _self_, jule::Ptr<_204bd4392_GotoSt>* _203930_gt, jule::Ptr<_204bd7560_scopeLabel>* _203948_label) {
	jule::I32 _20407_n = 0LL;;
	if (((*((*(_203930_gt))))._field_Scope == (*((*((*(_203948_label))))._field_node))._field_Scope)) {
		if (((*((*(_203930_gt))))._field_Index > (*(*((*(_203948_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20407_n=(*((*(_203930_gt))))._field_Index;
	} else if (((*((*((*(_203930_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203948_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_204bd11d5_Scope> _20538_gtsc = (*((*(_203930_gt))))._field_Scope;;
		while ((((*_20538_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203948_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20538_gtsc=(*(_20538_gtsc))._field_Parent;
			}
		_iter_next_2089c1c19:;
		}
		_iter_end_2089c1c19:;;
		if (((*_20538_gtsc.alloc)._field_StmtIndex > (*(*((*(_203948_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20407_n=(*_20538_gtsc.alloc)._field_StmtIndex;
	} else {
		_20407_n=0LL;
	};
	jule::Ptr<_204bd11d5_Scope> _20757_s = (*((*((*(_203948_label))))._field_node))._field_Scope;;
	jule::I32 _20767_i = ((*(*((*(_203948_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20767_i >= _20407_n); (_20767_i)--) {
				{
					jule::Any _20799_stmt = (*(_20757_s))._field_Stmts[_20767_i];;
					if (_204beb93c_stmtIsDef(&(_20799_stmt))) {
						_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_203930_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203930_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_2089c5723:;
			}
			_iter_end_2089c5723:;;
			if (((*(_20757_s))._field_ChildIndex > (*((*((*(_203930_gt))))._field_Scope))._field_ChildIndex)) {
				_20757_s=(*(_20757_s))._field_Parent;
				_20767_i=((*_20757_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_2089c539e;
			};
			goto _iter_end_2089c539e;
		}
	_iter_next_2089c539e:;
	}
	_iter_end_2089c539e:;;
}



inline void _204bea144_checkGotos(_204bd8929_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2089c83d5:;
		if (it != expr_end) {
			jule::Ptr<_204bd4392_GotoSt> _209715_gt = *it;
			{
				jule::Ptr<_204bd7560_scopeLabel> _20988_label = _204bdd137_findLabelAll(_self_, &((*(_209715_gt))._field_Ident));;
				if ((_20988_label == nullptr)) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_209715_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209715_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_2089c83d5;
				};
				(*_209715_gt.alloc)._field_Label=(*(_20988_label))._field_node;
				(*_20988_label.alloc)._field_used=true;
				_204be9e46_checkGoto(_self_, &(_209715_gt), &(_20988_label));
			}
			_iter_next_2089c83d5:;
			++it;
			goto _iter_begin_2089c83d5;
		}
		_iter_end_2089c83d5:;
	};
}



inline void _204bea342_checkLabels(_204bd8929_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2089caeed:;
		if (it != expr_end) {
			jule::Ptr<_204bd7560_scopeLabel> _211010_l = *it;
			{
				if ((!((*(_211010_l))._field_used))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_211010_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_211010_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_2089caeed:;
			++it;
			goto _iter_begin_2089caeed;
		}
		_iter_end_2089caeed:;
	};
}



inline void _204bea540_checkVars(_204bd8929_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2089ccc7a:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _211810_v = *it;
			{
				if (((((!((*(_211810_v))._field_Used)) && (!((*_211810_v.alloc)._field_Constant))) && (!(_204a16aed_IsIgnoreIdent((*_211810_v.alloc)._field_Ident)))) && (!(_204a16db7_IsAnonIdent((*_211810_v.alloc)._field_Ident))))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_211810_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211810_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_2089ccc7a:;
			++it;
			goto _iter_begin_2089ccc7a;
		}
		_iter_end_2089ccc7a:;
	};
}



inline void _204bea73d_checkAliases(_204bd8929_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2089d0585:;
		if (it != expr_end) {
			jule::Ptr<_204cd9b90_TypeAlias> _212610_a = *it;
			{
				if ((((!((*(_212610_a))._field_Used)) && (!(_204a16aed_IsIgnoreIdent((*_212610_a.alloc)._field_Ident)))) && (!(_204a16db7_IsAnonIdent((*_212610_a.alloc)._field_Ident))))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_212610_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212610_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_2089d0585:;
			++it;
			goto _iter_begin_2089d0585;
		}
		_iter_end_2089d0585:;
	};
}



inline void _204beaaa1_check(jule::Ptr<_204bd8929_scopeChecker> _self_, jule::Ptr<_204a39c0e_ScopeTree>* _213427_tree, jule::Ptr<_204bd11d5_Scope>* _213455_s) {
	(*((*(_213455_s))))._field_Deferred=(*((*(_213427_tree))))._field_Deferred;
	(*((*(_213455_s))))._field_Unsafety=(*((*(_213427_tree))))._field_Unsafety;
	jule::I32 _21383_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213427_tree));
	(*_self_.alloc)._field_scope=(*(_213455_s));
	_204be9ad3_checkTree(_self_);
	if ((_21383_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_204bea540_checkVars(_self_);
		_204bea73d_checkAliases(_self_);
		if (_204bdb09c_isRoot(_self_)) {
			_204bea144_checkGotos(_self_);
			_204bea342_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_204bd8929_scopeChecker> _204bead37_newChildChecker(jule::Ptr<_204bd8929_scopeChecker> _self_) {
	jule::Ptr<_204bd8929_scopeChecker> _21587_base = _204bcdb3e_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21587_base))._field_parent=_self_;
	(*_21587_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21587_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21587_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21587_base;;
}








inline jule::Bool _204bec7a6_directiveChecker_eq(_204bec7a6_directiveChecker *_self_, _204bec7a6_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _204becc07_checkCdef(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2089d97e2:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_204b1d5a6_Fn>()))._field_Binded) {
					goto _match_end_2089d8648;
				};
				goto _case_begin_2089d86ae;
			}
		}
		else {
			_case_begin_2089d86ae:;
			{
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2089d8648:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _204beceb0_checkTypedef(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2089dc9e3:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Binded) {
					goto _match_end_2089db849;
				};
				goto _case_begin_2089db8b0;
			}
		}
		else {
			_case_begin_2089db8b0:;
			{
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2089db849:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _204bed268_checkNamespace(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2089e0be4:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Binded))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2089de819:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_204b1d5a6_Fn>()))._field_Binded))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2089deb27:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_204c5319c_Var>()))._field_Binded))) {
					_204c3238a_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_2089deab1:;
			{
				_204c3238a_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2089dea4a:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204a14216_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_733_arg))._field_Kind[0LL] != '\"')) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*(_733_arg))._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2089eb260:;
			{
				if ((_204cd2209_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_204a2902d_Directive> _919_typedef = jule::new_ptr<_204a2902d_Directive>(_204a2902d_Directive{._field_Tag=jule::new_ptr<_204a14216_Token>((*((*((*(_4835_d))))._field_Tag))), ._field_Args=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr)});;
					(*(*(_919_typedef))._field_Tag.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2902d_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_2089eb1e9:;
	};
}



inline void _204bed521_checkDeprecated(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2089eeb59:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Binded) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2089ed806:;
			{
				jule::Ptr<_204b1d5a6_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_204b1d5a6_Fn>();;
				if ((((*(_1078_f))._field_Binded || _204b1e079_IsEntryPoint(_1078_f.ptr())) || _204b1e310_IsInit(_1078_f.ptr()))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2089eda8c:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_204c5319c_Var>()))._field_Binded) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_2089eda26:;
			{
				_204c3238a_pushErr((*(_self_))._field_s, (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_10036_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2089ed9b0:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204a14216_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1263_arg))._field_Kind[0LL] != '\"')) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*(_1263_arg))._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _204bed7c9_checkTest(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_208a0b825:;
			{
				jule::Ptr<_204b1d5a6_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_204b1d5a6_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_204b1e310_IsInit(_1444_f)))) && (!(_204b1e079_IsEntryPoint(_1444_f))))) {
					goto _match_end_208a0a67b;
				};
				if (_204b1dce3_IsMethod(_1444_f.ptr())) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_208a0a67b;
				};
				goto _case_begin_208a0a6e2;
			}
		}
		else {
			_case_begin_208a0a6e2:;
			{
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_208a0a67b:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _204beda82_checkExport(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_208a11572:;
			{
				jule::Ptr<_204b1d5a6_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_204b1d5a6_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _204b1e310_IsInit(_1654_f.ptr())) || _204b1e079_IsEntryPoint(_1654_f.ptr())) || _204b1dce3_IsMethod(_1654_f.ptr())) || ((*(_1654_f))._field_Generics.len() > 0LL))) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_208a10197:;
			{
				jule::Ptr<_204c5319c_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_204c5319c_Var>();;
				if (((*(_1714_v))._field_Binded || (*(_1714_v))._field_Constant)) {
					_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_208a1043e:;
			{
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_208a103c8:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204a14216_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1873_arg))._field_Kind[0LL] != '\"')) {
		_204c3238a_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*(_1873_arg))._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _204bedd3a_checkDirective(_204bec7a6_directiveChecker* _self_, jule::Ptr<_204a2902d_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_208a1d67d:;
			{
				_204becc07_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_208a1c528:;
			{
				_204beceb0_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_208a1c58e:;
			{
				_204bed268_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_208a1c605:;
			{
				_204bed521_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_208a1c66b:;
			{
				_204bed7c9_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_208a1c6d2:;
			{
				_204beda82_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_208a1c748:;
			{
				_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_208a17a2e:;
			{
				_204c3238a_pushErr((*(_self_))._field_s, (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_20035_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_208a1c44b:;
	};
}



inline void _204bee038_check(_204bec7a6_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a21450:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _22315_d = *it;
			{
				_204bedd3a_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_208a21450:;
			++it;
			goto _iter_begin_208a21450;
		}
		_iter_end_208a21450:;
	};
}







inline jule::Ptr<_204c000b1_ReferenceStack> static__204c00424_new(void) {
	return jule::new_ptr<_204c000b1_ReferenceStack>(_204c000b1_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _204c00820_Len(_204c000b1_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _204c00b61_At(_204c000b1_ReferenceStack* _self_, jule::I32 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _204c00e19_Push(_204c000b1_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _209081ecc_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204a4d2c7_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209083341:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_209083341:;
			++it;
			goto _iter_begin_209083341;
		}
		_iter_end_209083341:;
	};
	return false;;
}

inline jule::Bool _20908d0a4_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204b21664_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20908e3c4:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_20908e3c4:;
			++it;
			goto _iter_begin_20908e3c4;
		}
		_iter_end_20908e3c4:;
	};
	return false;;
}

inline jule::Bool _2090a46d6_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204c5319c_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2090a5a4a:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_2090a5a4a:;
			++it;
			goto _iter_begin_2090a5a4a;
		}
		_iter_end_2090a5a4a:;
	};
	return false;;
}

inline jule::Bool _209529d48_Exist(_204c000b1_ReferenceStack* _self_, jule::Ptr<_204b28cba_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20952b157:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_20952b157:;
			++it;
			goto _iter_begin_20952b157;
		}
		_iter_end_20952b157:;
	};
	return false;;
}








inline jule::Bool _204c01612_Pass_eq(_204c01612_Pass *_self_, _204c01612_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _204c06abd_pushErr(_204c060b7_symBuilder* _self_, jule::Ptr<_204a14216_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args) {
	{ jule::Slice<_1eeaca425_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_204c2c374_compilerErr(_30724_token, true, _30746_fmt, _30766_args)); };
}



inline void _204c0734e_pushSuggestion(_204c060b7_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args) {
	{
		_204c2d496_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31630_fmt, _31650_args);
	};
}



inline jule::Bool _204c0774a_checkCppUseDeclPath(_204c060b7_symBuilder* _self_, jule::Ptr<_204a42a5d_UseDecl>* _32036_decl, jule::Str* _32058_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3213_ext = _200e4014b_Ext((*(_32058_path)));;
	if (((!(_1eea80881_IsValidHeaderExt(_3213_ext))) && (!(_1eea80b4a_IsValidCppExt(_3213_ext))))) {
		_204c06abd_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3213_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1eecba8ac_Stat _3283_info = ({
		auto except = static__200e470a9_Of((*(_32058_path)));
		(except.ok()) ? (except.result) : ({{
			_204c06abd_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32036_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1eecbacb9_IsDir(&_3283_info)) {
		_204c06abd_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32036_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_204c12139_ImportInfo> _204c07a58_buildCppHeaderImport(_204c060b7_symBuilder* _self_, jule::Ptr<_204a42a5d_UseDecl>* _34041_decl) {
	jule::Str _3417_path = (*((*((*(_34041_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1eea805a6_IsStdHeaderPath(_3417_path)))) {
		_3417_path=_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _204a1a948_Dir((*((*((*(_34041_decl))))._field_Token))._field_File.ptr()); (*it++) = _3417_path; __jule_collection; }));
		jule::Bool _3458_ok = _204c0774a_checkCppUseDeclPath(_self_, _34041_decl, &(_3417_path));;
		if ((!(_3458_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200e40415_Abs(_3417_path);
			_3417_path = __jule_assign_result.__jule_result_arg0;
			_3458_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3458_ok))) {
			_204c06abd_pushErr(_self_, &((*((*(_34041_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_204c12139_ImportInfo>(_204c12139_ImportInfo{._field_Decl=(*(_34041_decl)), ._field_Path=_3417_path, ._field_LinkPath=(*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _204c07e54_checkAbsPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_204a42a5d_UseDecl>* _37053_decl) {
	jule::Str _3713_modPath = ((_204c0e136_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_204c0d19b_GetModPath((*(_self_))._field_importer.data);;
	if ((_3713_modPath.len() == 0LL)) {
		_204c06abd_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_204c0734e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37033_filepath=_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3713_modPath; (*it++) = _37033_filepath; __jule_collection; }));
	jule::Bool _37913_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200e40415_Abs(_37033_filepath);
		_37033_filepath = __jule_assign_result.__jule_result_arg0;
		_37913_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37913_ok))) {
		_204c06abd_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1eecba8ac_Stat _3863_info = ({
		auto except = static__200e470a9_Of(_37033_filepath);
		(except.ok()) ? (except.result) : ({{
			_204c06abd_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1eecbacb9_IsDir(&_3863_info)))) {
		_204c06abd_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37033_filepath;;
}



inline jule::Str _204c08350_checkStdAbsPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_204a42a5d_UseDecl>* _39956_decl) {
	(_39936_filepath).mut_slice(4LL);;
	_39936_filepath=_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _200e47560_PathStdlib; (*it++) = _39936_filepath; __jule_collection; }));
	jule::Bool _40213_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200e40415_Abs(_39936_filepath);
		_39936_filepath = __jule_assign_result.__jule_result_arg0;
		_40213_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40213_ok))) {
		_204c06abd_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1eecba8ac_Stat _4093_info = ({
		auto except = static__200e470a9_Of(_39936_filepath);
		(except.ok()) ? (except.result) : ({{
			_204c06abd_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1eecbacb9_IsDir(&_4093_info)))) {
		_204c06abd_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39936_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _204c08691_checkImpPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204a42a5d_UseDecl>* _42234_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4233_path = (*((*((*(_42234_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_200e34096_HasSuffix(_4233_path, jule::Str::lit("/", 1))) {
		_204c06abd_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4283_parts = _200e381dd_SplitAll(_4233_path, jule::Str::lit("/", 1));;
	if ((_4283_parts.len() == 0LL)) {
		_204c06abd_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4283_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4283_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a5d800:;
		if (it != expr_end) {
			jule::Str *_43410_part = it;
			{
				if ((((*(_43410_part))).empty() || _204a16aed_IsIgnoreIdent((*(_43410_part))))) {
					_204c06abd_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43410_part)); __jule_collection; }));
			}
			_iter_next_208a5d800:;
			++it;
			goto _iter_begin_208a5d800;
		}
		_iter_end_208a5d800:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_204c08350_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_204c07e54_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	};
	return __jule_func_result;;
}



inline void _204c08949_assignAlias(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c12139_ImportInfo>* _45233_imp) {
	jule::I32 _4537_i = _200e35141_FindLast((*((*(_45233_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4537_i)++;
	jule::Str _4553_path = (*((*(_45233_imp))))._field_LinkPath.slice(_4537_i);;
	(*((*(_45233_imp))))._field_Alias=_4553_path;
}



inline jule::Ptr<_204c12139_ImportInfo> _204c08c8a_buildImport(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204a42a5d_UseDecl>* _45933_decl) {
	if ((*((*(_45933_decl))))._field_Binded) {
		return _204c07a58_buildCppHeaderImport(_self_.ptr(), _45933_decl);;
	};
	jule::Bool _4633_std;
	jule::Str _4638_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _204c08691_checkImpPath(_self_, _45933_decl);
		_4633_std = __jule_assign_result.__jule_result_arg0;
		_4638_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4638_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_204c12139_ImportInfo> _4687_imp = jule::new_ptr<_204c12139_ImportInfo>(_204c12139_ImportInfo{._field_Decl=(*(_45933_decl)), ._field_Path=_4638_filepath, ._field_LinkPath=(*((*((*(_45933_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45933_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4633_std, ._field_Package=jule::new_ptr<_204c148ab_Package>(_204c148ab_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45933_decl))))._field_Alias != nullptr)) {
		(*(_4687_imp))._field_Alias=(*(*((*(_45933_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_204c0c321_isImplicitImport(_4687_imp)))) {
		_204c08949_assignAlias(_self_, &(_4687_imp));
	};
	return _4687_imp;;
}



inline jule::Ptr<_204c12139_ImportInfo> _204c090cb_findUseDecl(_204c060b7_symBuilder* _self_, jule::Ptr<_204c12139_ImportInfo>* _48628_pkg) {
	return _204b24dc6_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_204c12139_ImportInfo>>((void*)__jule_anon_208a68ca0, jule::Ptr<__jule_anon_208a68ca0_ctx>::make(__jule_anon_208a68ca0_ctx{._48628_pkg=_48628_pkg}).as<jule::Uintptr>(), __jule_anon_208a68ca0_ctx_handler));;
}



inline jule::Bool _204c0941c_checkDuplicateUseDecl(_204c060b7_symBuilder* _self_, jule::Ptr<_204c12139_ImportInfo>* _49442_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204c12139_ImportInfo> _4957_lpkg = _204c090cb_findUseDecl(_self_, _49442_pkg);;
	if ((_4957_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_204c06abd_pushErr(_self_, &((*((*((*(_49442_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49442_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_204c0734e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _204c0975d_getAsLinkPath(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Str _50434_path) {
	_1eeabb290_Builder _5057_sb = static__1eeabbadc_New(_50434_path.len());;
	if (_200e33c22_HasPrefix(_50434_path, _200e47560_PathStdlib)) {
		(_50434_path).mut_slice(_200e47560_PathStdlib.len());;
		({
			auto except = _1eeabc26e_WriteStr(&_5057_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:508:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&_5057_sb, _200e39d6b_ReplaceAll(_50434_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _1eeabc527_WriteByte(&_5057_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
		});
		return _1eeabcaee_Str(&_5057_sb);;
	};
	jule::Str _5143_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200e40415_Abs(((_204c0e136_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_204c0d19b_GetModPath((*(_self_))._field_importer.data));
		_5143_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50434_path).mut_slice(_5143_root.len());;
	if ((_50434_path[0LL] == 92LLU)) {
		(_50434_path).mut_slice(1LL);;
	};
	({
		auto except = _1eeabc527_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:519:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&_5057_sb, _200e39d6b_ReplaceAll(_50434_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
	});
	return _1eeabcaee_Str(&_5057_sb);;
}



inline void _204c09b7b_pushCycleError(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c060b7_symBuilder>* _52532_sb, jule::Str _52549_path, _1eeabb290_Builder* _52565_message) {
	;
	jule::Str _5273_refersTo = _1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204c0975d_getAsLinkPath(_self_, _204a1a948_Dir((*((*((*(_52532_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_204c0975d_getAsLinkPath(_self_, _52549_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5313_m = _1eeabcaee_Str(_52565_message);;
	({
		auto except = _1eeabc26e_WriteStr(_52565_message, _200e338ae_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:532:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_52565_message, _5273_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_52565_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_52565_message, _5313_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
		(except.result);
	});
}



inline void _204c0a099_pushCrossCycleError(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c060b7_symBuilder>* _53837_target, jule::Ptr<_204c12139_ImportInfo>* _53859_imp, jule::Ptr<_204a14216_Token>* _53878_errorToken) {
	_1eeabb290_Builder _5397_message = static__1eeabbadc_New(32LL);;
	_204c09b7b_pushCycleError(_self_, &(_self_), (*((*(_53859_imp))))._field_Path, &(_5397_message));
	jule::Ptr<_204c060b7_symBuilder> _5437_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_204c060b7_symBuilder> _5447_old = _self_;;
	while (((*(_5437_owner))._field_owner != nullptr)) {
		{
			_204c09b7b_pushCycleError(_self_, &((*_5447_old.alloc)._field_owner), _204a1a948_Dir((*((*_5447_old.alloc)._field_table))._field_File.ptr()), &(_5397_message));
			if (((*_5437_owner.alloc)._field_owner == (*(_53837_target)))) {
				_204c09b7b_pushCycleError(_self_, _53837_target, _204a1a948_Dir((*((*(_5437_owner))._field_table))._field_File), &(_5397_message));
				goto _iter_end_208a74cbc;
			};
			_5447_old=_5437_owner;
			_5437_owner=(*(_5437_owner))._field_owner;
		}
	_iter_next_208a74cbc:;
	}
	_iter_end_208a74cbc:;;
	_204c06abd_pushErr(_self_, _53878_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1eeabcaee_Str(&_5397_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _204c0a495_checkImportCycles(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c12139_ImportInfo> _56134_imp, jule::Ptr<_204a42a5d_UseDecl>* _56153_decl) {
	if (((*(_56134_imp))._field_Path == _204a1a948_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_204c06abd_pushErr(_self_, &((*((*(_56153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204c0975d_getAsLinkPath(_self_, (*_56134_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_204c060b7_symBuilder> _5717_owner = (*(_self_))._field_owner;;
	_julec_label_208a79255:;
	if ((_204a1a948_Dir((*((*(_5717_owner))._field_table))._field_File.ptr()) == (*(_56134_imp))._field_Path)) {
		_204c0a099_pushCrossCycleError(_self_, &(_5717_owner), &(_56134_imp), &((*((*(_56153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5717_owner))._field_owner != nullptr)) {
		_5717_owner=(*_5717_owner.alloc)._field_owner;
		goto _julec_label_208a79255;
	};
	return true;;
}



inline void _204c0a8b3_checkPackageAccessibility(_204c060b7_symBuilder* _self_, jule::Ptr<_204a42a5d_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path) {
	if ((((_204c0e136_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_204c0d19b_GetModPath((*(_self_))._field_importer.data) == (*(_59264_mod)))) {
		return;;
	};
	;
	jule::I32 _5973_i = _200e3488d_Find((*(_59275_path)), jule::Str::lit("internal", 8));;
	if ((_5973_i == -1LL)) {
		return;;
	};
	if ((_5973_i == 0LL)) {
		if (((((*(_59275_path)).len() - 8LL) == 0LL) || _200e33c22_HasPrefix((*(_59275_path)), jule::Str::lit("internal/", 9)))) {
			_204c06abd_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59275_path)).slice((_5973_i - 1LL)).equal("/internal", 9)) {
		_204c06abd_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _6153_n = ((_5973_i + 8LL) + 1LL);;
	if (((_6153_n < (*(_59275_path)).len()) && (*(_59275_path)).slice((_5973_i - 1LL), _6153_n).equal("/internal/", 10))) {
		_204c06abd_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _204c0acae_importPackage(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204c12139_ImportInfo>* _62235_imp, jule::Ptr<_204a42a5d_UseDecl>* _62258_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62235_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_204c12139_ImportInfo> _6277_port = ((_204c0e136_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_204c0d82d_GetImport((*(_self_))._field_importer.data, (*((*(_62235_imp))))._field_Path);;
	if ((_6277_port != nullptr)) {
		(*((*(_62235_imp))))._field_Package=(*_6277_port.alloc)._field_Package;
		(*((*(_62235_imp))))._field_Duplicate=true;
		jule::Str _6324_oldMod = ((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0d19b_GetModPath((*_self_.alloc)._field_importer.data);;
		((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0ceae_SetModPath((*_self_.alloc)._field_importer.data, ((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0d4dc_ModById((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_ModId));
		_204c0a8b3_checkPackageAccessibility(_self_, _62258_decl, &(_6324_oldMod), &((*_6277_port.alloc)._field_Path));
		((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0ceae_SetModPath((*_self_.alloc)._field_importer.data, _6324_oldMod);
	} else {
		if ((!(_204c0a495_checkImportCycles(_self_, (*(_62235_imp)), _62258_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6414_oldMod = ((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0d19b_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0ceae_SetModPath((*_self_.alloc)._field_importer.data, _6414_oldMod);
		});;
		if ((*((*(_62235_imp))))._field_Std) {
			((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0ceae_SetModPath((*_self_.alloc)._field_importer.data, _200e47560_PathStdlib);
		};
		jule::Slice<jule::Ptr<_204a27c52_AST>> _6468_asts;
		jule::Slice<_1eeaca425_Log> _64618_errors;
		({
			__jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log __jule_assign_result = ((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0dc29_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_Path, (!((*((*(_62235_imp))))._field_Std)));
			_6468_asts = __jule_assign_result.__jule_result_arg0;
			_64618_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64618_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_204c0a8b3_checkPackageAccessibility(_self_, _62258_decl, &(_6414_oldMod), &((*((*(_62235_imp))))._field_Path));
		{
			auto expr = &(_6468_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208a8b1bd:;
			if (it != expr_end) {
				jule::Ptr<_204a27c52_AST> _65416_ast = *it;
				{
					jule::Ptr<_204b248a9_SymTab> _6559_table = static_cast<jule::Ptr<_204b248a9_SymTab>>(nullptr);;
					({
						__jule_tuple_x_204b248a9_SymTab__jule_tuple_s_1eeaca425_Log __jule_assign_result = _204d0b4b9_buildSymbols(&(_65416_ast), &((*_self_.alloc)._field_importer), _self_);
						_6559_table = __jule_assign_result.__jule_result_arg0;
						_64618_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64618_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62235_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62235_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b248a9_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6559_table; __jule_collection; }));
				}
				_iter_next_208a8b1bd:;
				++it;
				goto _iter_begin_208a8b1bd;
			}
			_iter_end_208a8b1bd:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_204c12139_ImportInfo> _204c0b100_importUseDecl(jule::Ptr<_204c060b7_symBuilder> _self_, jule::Ptr<_204a42a5d_UseDecl>* _66835_decl) {
	jule::Ptr<_204c12139_ImportInfo> _6697_imp = _204c08c8a_buildImport(_self_, _66835_decl);;
	if ((_6697_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6747_ok = _204c0941c_checkDuplicateUseDecl(_self_, &(_6697_imp));;
	if ((!(_6747_ok))) {
		return nullptr;;
	};
	_6747_ok=_204c0acae_importPackage(_self_, &(_6697_imp), _66835_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c12139_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6697_imp; __jule_collection; }));
	if (_6747_ok) {
		((_204c0e136_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_204c0ded2_Imported((*_self_.alloc)._field_importer.data, _6697_imp);
		return _6697_imp;;
	};
	return nullptr;;
}



inline void _204c0b2ed_importUseDecls(jule::Ptr<_204c060b7_symBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a91adb:;
		if (it != expr_end) {
			jule::Ptr<_204a42a5d_UseDecl> _68815_decl = *it;
			{
				_204c0b100_importUseDecl(_self_, &(_68815_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_208a91adb;
				};
			}
			_iter_next_208a91adb:;
			++it;
			goto _iter_begin_208a91adb;
		}
		_iter_end_208a91adb:;
	};
}



inline void _204c0b5a6_appendNode(_204c060b7_symBuilder* _self_, _204a28b10_Node* _69731_node) {
	{
		auto &_match_expr{ (*(_69731_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_208a930b5:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_204bcbac6_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204c05a01_buildImpl((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a465bc_Impl>()); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_208a9312b:;
			{
				jule::Ptr<_204cd9b90_TypeAlias> _7028_ta = _204c0204c_buildTypeAlias((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a4170a_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_208a93192:;
			{
				jule::Ptr<_204a4a46c_Struct> _7058_srct = _204c028dd_buildStruct((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a45720_StructDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4a46c_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_208a93208:;
			{
				jule::Ptr<_204b1d5a6_Fn> _7088_f = _204c0358c_buildFunc((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a3b89d_FnDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1d5a6_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_208a9326e:;
			{
				jule::Ptr<_204b28cba_Trait> _7118_t = _204c03dd9_buildTrait((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a45e5c_TraitDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b28cba_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_208a932d5:;
			{
				jule::Ptr<_204c5319c_Var> _7148_v = _204c0546d_buildVar((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a3ca58_VarDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_208a93a88:;
			{
				jule::Ptr<_204b2b471_Enum> _7178_e = _204c04967_buildEnum((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a43ac5_EnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b2b471_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_208a93aee:;
			{
				jule::Ptr<_204b2cb7b_TypeEnum> _7208_e = _204c051a4_buildTypeEnum((*(_69731_node))._field_Data.unsafe_cast_ptr<_204a44a60_TypeEnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b2cb7b_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7208_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_208a9304e:;
			{
				_204c06abd_pushErr(_self_, &((*(_69731_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_208a92ed8:;
	};
}



inline void _204c0b7a4_appendNodes(_204c060b7_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208aac486:;
		if (it != expr_end) {
			_204a28b10_Node _72815_node = *it;
			{
				_204c0b5a6_appendNode(_self_, &(_72815_node));
			}
			_iter_next_208aac486:;
			++it;
			goto _iter_begin_208aac486;
		}
		_iter_end_208aac486:;
	};
}



inline void _204c0ba5c_pushDirectivePass(_204c060b7_symBuilder* _self_, jule::Ptr<_204a2902d_Directive>* _73338_d) {
	if (((*((*(_73338_d))))._field_Args.len() == 0LL)) {
		_204c06abd_pushErr(_self_, &((*((*(_73338_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73338_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_204a14216_Token> _7384_arg = (*((*(_73338_d))))._field_Args[1LL];;
		_204c06abd_pushErr(_self_, &(_7384_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73338_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204a14216_Token> _7423_arg = (*((*(_73338_d))))._field_Args[0LL];;
	if (((*(_7423_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_204c06abd_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7423_arg))._field_Kind[0LL] != '\"')) {
		_204c06abd_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_204c01612_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204c01612_Pass{._field_Token=(*((*(_73338_d))))._field_Tag, ._field_Text=(*(_7423_arg))._field_Kind.slice(1LL, ((*_7423_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _204c0bc5a_appendTopDirectives(_204c060b7_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ab9262:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _76015_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76015_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_208abac47:;
						{
							_204c0ba5c_pushDirectivePass(_self_, &(_76015_d));
						}
					}
					_match_end_208abab6a:;
				};
			}
			_iter_next_208ab9262:;
			++it;
			goto _iter_begin_208ab9262;
		}
		_iter_end_208ab9262:;
	};
}



inline void _204c0be58_build(jule::Ptr<_204c060b7_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_204b248a9_SymTab>(_204b248a9_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_204c01612_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_204c12139_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_204a4a46c_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_204b1d5a6_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_204b28cba_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_204b2b471_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_204b2cb7b_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_204bcbac6_Impl>>(nullptr)});
	_204c0bc5a_appendTopDirectives(_self_);
	_204c0b2ed_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_204c0b7a4_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _204c12139_ImportInfo_eq(_204c12139_ImportInfo *_self_, _204c12139_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_204c12139_ImportInfo> _204c12656_SelectPackage(_204c12139_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_204c5319c_Var> _204c12a52_FindVar(_204c12139_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c0e8ea_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204c12e4d_FindTypeAlias(_204c12139_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c0ed29_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_204a4a46c_Struct> _204c13349_FindStruct(_204c12139_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c102d0_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_204b1d5a6_Fn> _204c13745_FindFn(_204c12139_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c106cb_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_204b28cba_Trait> _204c13a86_FindTrait(_204c12139_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c10a50_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_204b2b471_Enum> _204c13dc7_FindEnum(_204c12139_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c10dc4_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204c14218_FindTypeEnum(_204c12139_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_204c145d1_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _204c11358_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _204c145d1_isLookupable(_204c12139_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_204c12139_ImportInfo> _204c14d84_SelectPackage(_204c148ab_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_204c5319c_Var> _204c15280_FindVar(_204c148ab_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _204c0e8ea_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204c1567b_FindTypeAlias(_204c148ab_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _204c0ed29_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_204a4a46c_Struct> _204c15a77_FindStruct(_204c148ab_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _204c102d0_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_204b1d5a6_Fn> _204c15e73_FindFn(_204c148ab_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _204c106cb_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_204b28cba_Trait> _204c162b4_FindTrait(_204c148ab_Package* _self_, jule::Str _31125_ident) {
	return _204c10a50_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_204b2b471_Enum> _204c16605_FindEnum(_204c148ab_Package* _self_, jule::Str _31724_ident) {
	return _204c10dc4_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204c16946_FindTypeEnum(_204c148ab_Package* _self_, jule::Str _32328_ident) {
	return _204c11358_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_204bb36e5_comptimeTypeInfo> _204c2dd04_pushComptimeTypeInfo(_204c2d85e_commonSemaMeta* _self_, jule::Ptr<_204cda982_Type>* _21341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b1e1da:;
		if (it != expr_end) {
			jule::Ptr<_204bb36e5_comptimeTypeInfo> _21415_t2 = *it;
			{
				if ((((*((*(_21415_t2))._field_base))._field_BindIdent == (*((*(_21341_t))))._field_BindIdent) && _204cdb1be_Equal((*(_21415_t2))._field_base, (*(_21341_t))))) {
					return _21415_t2;;
				};
			}
			_iter_next_208b1e1da:;
			++it;
			goto _iter_begin_208b1e1da;
		}
		_iter_end_208b1e1da:;
	};
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _2197_t1 = jule::new_ptr<_204bb36e5_comptimeTypeInfo>(_204bb36e5_comptimeTypeInfo{._field_base=(*(_21341_t))});;
	{ jule::Slice<jule::Ptr<_204bb36e5_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2197_t1); };
	return _2197_t1;;
}







inline jule::Ptr<_204c12139_ImportInfo> _204c2e95e_SelectPackage(_204c2e486_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_204c12139_ImportInfo>> _24229_selector) {
	return _204b24dc6_SelectPackage((*(_self_))._field_file.ptr(), _24229_selector);;
}



inline jule::Ptr<_204c5319c_Var> _204c2ed5a_FindVar(_204c2e486_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded) {
	jule::Ptr<_204c5319c_Var> _2547_v = _204c0e8ea_findVarInPackage(&((*(_self_))._field_files), &(_25223_ident), _25235_binded);;
	if ((_2547_v != nullptr)) {
		return _2547_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204c30256_FindTypeAlias(_204c2e486_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded) {
	jule::Ptr<_204cd9b90_TypeAlias> _2697_ta = _204c0ed29_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26729_ident), _26741_binded);;
	if ((_2697_ta != nullptr)) {
		return _2697_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_204a4a46c_Struct> _204c30652_FindStruct(_204c2e486_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded) {
	jule::Ptr<_204a4a46c_Struct> _2847_s = _204c102d0_findStructInPackage(&((*(_self_))._field_files), &(_28226_ident), _28238_binded);;
	if ((_2847_s != nullptr)) {
		return _2847_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_204b1d5a6_Fn> _204c30a4d_FindFn(_204c2e486_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded) {
	jule::Ptr<_204b1d5a6_Fn> _2997_f = _204c106cb_findFnInPackage(&((*(_self_))._field_files), &(_29722_ident), _29734_binded);;
	if ((_2997_f != nullptr)) {
		return _2997_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_204b28cba_Trait> _204c30d8e_FindTrait(_204c2e486_sema* _self_, jule::Str _31225_ident) {
	jule::Ptr<_204b28cba_Trait> _3147_t = _204c10a50_findTraitInPackage(&((*(_self_))._field_files), &(_31225_ident));;
	if ((_3147_t != nullptr)) {
		return _3147_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_204b2b471_Enum> _204c311d0_FindEnum(_204c2e486_sema* _self_, jule::Str _32724_ident) {
	jule::Ptr<_204b2b471_Enum> _3297_e = _204c10dc4_findEnumInPackage(&((*(_self_))._field_files), &(_32724_ident));;
	if ((_3297_e != nullptr)) {
		return _3297_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204c31521_FindTypeEnum(_204c2e486_sema* _self_, jule::Str _34228_ident) {
	jule::Ptr<_204b2cb7b_TypeEnum> _3447_e = _204c11358_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34228_ident));;
	if ((_3447_e != nullptr)) {
		return _3447_e;;
	};
	return nullptr;;
}



inline jule::Bool _204c3192d_isFlag(_204c2e486_sema* _self_, jule::I32 _35418_flags) {
	return (((*(_self_))._field_flags & _35418_flags) == _35418_flags);;
}



inline jule::Ptr<_204b248a9_SymTab> _204c31bb4_getCurrentFile(_204c2e486_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _204c31e6c_setCurrentFile(_204c2e486_sema* _self_, jule::Ptr<_204b248a9_SymTab> _35734_f) {
	(*(_self_))._field_file=_35734_f;
}



inline void _204c3238a_pushErr(_204c2e486_sema* _self_, jule::Ptr<_204a14216_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args) {
	{ jule::Slice<_1eeaca425_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_204c2c374_compilerErr(&(_35923_token), true, _35945_fmt, _35965_args)); };
}



inline void _204c326ed_pushSuggestion(_204c2e486_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args) {
	{
		_204c2d496_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36430_fmt, _36450_args);
	};
}



inline jule::Bool _204c32ae9_isAccessibleDefine(_204c2e486_sema* _self_, jule::Bool _37030_public, jule::Ptr<_204a14216_Token> _37044_token) {
	if ((_37030_public || ((*(_37044_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3753_selfDir = _204a1a948_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3763_tokenDir = _204a1a948_Dir((*(_37044_token))._field_File.ptr());;
	if ((_3753_selfDir == _3763_tokenDir)) {
		return true;;
	};
	if ((_204c16d86_isStdPackage(&(_3763_tokenDir), jule::Str::lit("runtime", 7)) && _204c16d86_isStdPackage(&(_3753_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _204c330a0_isDuplicatedIdent(_204c2e486_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b3184b:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> *_39410_f = it;
			{
				if (_204b2825e_isDuplicatedIdent((*(_39410_f)).ptr(), _39329_itself, _39347_ident, _39359_binded)) {
					return true;;
				};
			}
			_iter_next_208b3184b:;
			++it;
			goto _iter_begin_208b3184b;
		}
		_iter_end_208b3184b:;
	};
	return false;;
}



inline void _204c33413_checkDirectives(jule::Ptr<_204c2e486_sema> _self_, jule::Slice<jule::Ptr<_204a2902d_Directive>>* _40237_d, jule::Any _40263_o) {
	_204bec7a6_directiveChecker _4037_dc = _204bec7a6_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_204a2902d_Directive>>>)(_40237_d)), ._field_o=_40263_o};;
	_204bee038_check(&_4037_dc);
}



inline jule::Bool _204c338b9_checkGenericQuantity(_204c2e486_sema* _self_, jule::I32 _41136_required, jule::I32 _41151_given, jule::Ptr<_204a14216_Token> _41163_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41136_required == 0LL) && (_41151_given > 0LL))) {
			_case_begin_208b34530:;
			{
				_204c3238a_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41136_required > 0LL) && (_41151_given == 0LL))) {
			_case_begin_208b345a7:;
			{
				_204c3238a_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required < _41151_given)) {
			_case_begin_208b3462e:;
			{
				_204c3238a_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required > _41151_given)) {
			_case_begin_208b346a6:;
			{
				_204c3238a_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_208b34464:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_208b34387:;
	};
}



inline jule::Bool _204c348ed_isUseAliasDuplication(_204c2e486_sema* _self_, jule::Ptr<_204c12139_ImportInfo>* _46938_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b386aa:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _47015_imp2 = *it;
			{
				if ((_47015_imp2 == (*(_46938_imp)))) {
					goto _iter_end_208b386aa;
				};
				if (((*(_47015_imp2))._field_Alias == (*((*(_46938_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_208b386aa:;
			++it;
			goto _iter_begin_208b386aa;
		}
		_iter_end_208b386aa:;
	};
	return false;;
}



inline jule::Bool _204c34c3e_checkAutoAlias(_204c2e486_sema* _self_, jule::Ptr<_204c12139_ImportInfo>* _48135_imp) {
	if ((*((*(_48135_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4863_valid = _204c51b07_isValidImpAlias((*((*(_48135_imp))))._field_Alias);;
	if (_4863_valid) {
		if (_204c348ed_isUseAliasDuplication(_self_, _48135_imp)) {
			_204c3238a_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48135_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_204c3238a_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48135_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4863_valid;;
}



inline jule::Bool _204c35080_checkImport(_204c2e486_sema* _self_, jule::Ptr<_204c12139_ImportInfo>* _49932_imp) {
	if ((*((*(_49932_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49932_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_204a16aed_IsIgnoreIdent((*((*(_49932_imp))))._field_Alias)) {
			_204c3238a_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_204c348ed_isUseAliasDuplication(_self_, _49932_imp)) {
			_204c3238a_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49932_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49932_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_204c3238a_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_204c0c321_isImplicitImport((*(_49932_imp))))) && (!(_204c34c3e_checkAutoAlias(_self_, _49932_imp))))) {
		return false;;
	};
	if (((*((*((*(_49932_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49932_imp))))._field_Duplicate))) {
		jule::Ptr<_204c2e486_sema> _5268_sema = jule::new_ptr<_204c2e486_sema>(_204c2e486_sema{._field_errors=jule::Slice<_1eeaca425_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_204b248a9_SymTab>>(nullptr), ._field_file=jule::Ptr<_204b248a9_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_204c4e2b9_check(_5268_sema, &((*((*((*(_49932_imp))))._field_Package))._field_Files));
		if (((*_5268_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5268_sema.alloc)._field_errors);;
			(*_5268_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _204c3527d_checkImports(_204c2e486_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b48940:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _54115_file = *it;
			{
				_204c31e6c_setCurrentFile(_self_, _54115_file);
				{
					auto expr = &((*(_54115_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208b496aa:;
					if (it != expr_end) {
						jule::Ptr<_204c12139_ImportInfo> _54316_imp = *it;
						{
							jule::Bool _5445_ok = _204c35080_checkImport(_self_, &(_54316_imp));;
							if ((!(_5445_ok))) {
								return;;
							};
						}
						_iter_next_208b496aa:;
						++it;
						goto _iter_begin_208b496aa;
					}
					_iter_end_208b496aa:;
				};
			}
			_iter_next_208b48940:;
			++it;
			goto _iter_begin_208b48940;
		}
		_iter_end_208b48940:;
	};
}



inline void _204c3547b_implFileImpls(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b49a40:;
		if (it != expr_end) {
			jule::Ptr<_204bcbac6_Impl> _55415_imp = *it;
			{
				_204c4547a_implImpl(_self_, &(_55415_imp));
			}
			_iter_next_208b49a40:;
			++it;
			goto _iter_begin_208b49a40;
		}
		_iter_end_208b49a40:;
	};
}



inline void _204c35679_implImpls(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b4b47b:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _56015_file = *it;
			{
				_204c31e6c_setCurrentFile(_self_.ptr(), _56015_file);
				_204c3547b_implFileImpls(_self_);
			}
			_iter_next_208b4b47b:;
			++it;
			goto _iter_begin_208b4b47b;
		}
		_iter_end_208b4b47b:;
	};
}



inline void _204c35877_checkEnums(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b4c537:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _56715_file = *it;
			{
				_204c31e6c_setCurrentFile(_self_.ptr(), _56715_file);
				{
					
					if ((!(_204c418b6_checkEnumDecls(_self_)))) {
						_case_begin_208b4cc1e:;
					}
					else if ((!(_204c41b4c_checkTypeEnumDecls(_self_)))) {
						_case_begin_208b4d2e6:;
					}
					_match_end_208b4d219:;
				};
			}
			_iter_next_208b4c537:;
			++it;
			goto _iter_begin_208b4c537;
		}
		_iter_end_208b4c537:;
	};
}



inline void _204c35a75_checkFileInherits(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b4e11b:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _57715_t = *it;
			{
				jule::Bool _5784_ok = _204c43511__checkTraitDeclInherits(_self_, &(_57715_t));;
				if ((!(_5784_ok))) {
					return;;
				};
			}
			_iter_next_208b4e11b:;
			++it;
			goto _iter_begin_208b4e11b;
		}
		_iter_end_208b4e11b:;
	};
}



inline void _204c35c73_checkInherits(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b4e68d:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _58615_file = *it;
			{
				_204c31e6c_setCurrentFile(_self_.ptr(), _58615_file);
				_204c35a75_checkFileInherits(_self_);
			}
			_iter_next_208b4e68d:;
			++it;
			goto _iter_begin_208b4e68d;
		}
		_iter_end_208b4e68d:;
	};
}



inline _204cecd7e_typeChecker _204c36229_typeChecker(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _59247_generics, jule::Ptr<_204cebd8e_referencer> _5937_referencer) {
	_204cecd7e_typeChecker _5947_tc = _204cecd7e_typeChecker{._field_s=_self_, ._field_rootLookup=_59232_l, ._field_lookup=_59232_l, ._field_referencer=_5937_referencer, ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59247_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59232_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
			_case_begin_208b5233e:;
			{
				jule::Ptr<_204bd8929_scopeChecker> _6038_hard = _204bdc08c_getHardRoot(_59232_l.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
				_5947_tc._field_refers=(*((*(_6038_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_208b522c8:;
	};
	if (((_5937_referencer != nullptr) && ((*_5937_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5937_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_208b53bae:;
				{
					_5947_tc._field_ownerAlias=(*(_5937_referencer))._field_owner.unsafe_cast_ptr<_204cd9b90_TypeAlias>();
				}
			}
			_match_end_208b53b48:;
		};
	};
	return _5947_tc;;
}



inline jule::Ptr<_204cda982_Type> _204c3678a_buildTypeWithRefers(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _6207_generics, jule::Ptr<_204cebd8e_referencer> _62035_referencer) {
	return ({ auto _wrap_copy = _204c36229_typeChecker(_self_, _61964_l, _6207_generics, _62035_referencer); _204d05969_checkDecl(&_wrap_copy, _61941_t); });;
}



inline jule::Bool _204c36ceb_checkTypeSymWithRefers(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3193_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _6277_generics, jule::Ptr<_204cebd8e_referencer> _62735_referencer) {
	jule::Bool __jule_func_result = false;
	if (_204ce354a_checked((*(_62644_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62644_t))))._field_Type=_204c3678a_buildTypeWithRefers(_self_, &((*((*(_62644_t))))._field_Decl), _62661_l, _6277_generics, _62735_referencer);
	__jule_func_result = _204ce354a_checked((*(_62644_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_204bc97c7_constraintChecker> _204c37082_constraintChecker(jule::Ptr<_204c2e486_sema> _self_) {
	return jule::new_ptr<_204bc97c7_constraintChecker>(_204bc97c7_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_si=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_et=jule::Ptr<_204a14216_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _204c3747d_checkTypeSym(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3193_TypeSym>* _64134_t, jule::Trait _64151_l) {
	return _204c36ceb_checkTypeSymWithRefers(_self_, _64134_t, _64151_l, nullptr, nullptr);;
}



inline jule::Ptr<_204cda982_Type> _204c37934_checkTypeSymRefers(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_204c000b1_ReferenceStack> _64678_refers) {
	jule::Ptr<_204cecd7e_typeChecker> _6477_tc = jule::new_ptr<_204cecd7e_typeChecker>(_204cecd7e_typeChecker{._field_s=_self_, ._field_rootLookup=_64663_l, ._field_lookup=_64663_l, ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=_64678_refers, ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _204d05969_checkDecl(_6477_tc.ptr(), _64640_t);;
}



inline jule::Ptr<_204cda982_Type> _204c37dda_buildTypeWithGenerics(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _6597_generics, jule::Ptr<_204c000b1_ReferenceStack> _65935_refers) {
	jule::Ptr<_204cecd7e_typeChecker> _6607_tc = jule::new_ptr<_204cecd7e_typeChecker>(_204cecd7e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=_65935_refers, ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6597_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _204d05969_checkDecl(_6607_tc.ptr(), _65843_t);;
}



inline jule::Ptr<_204cda982_Type> _204c3856c_selectType(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _67632_t) {
	jule::Ptr<_204cecd7e_typeChecker> _6777_tc = jule::new_ptr<_204cecd7e_typeChecker>(_204cecd7e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _204d05969_checkDecl(_6777_tc.ptr(), _67632_t);;
}



inline jule::Ptr<_204ca4b49_eval> _204c38a23_evalpd(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _68827_l, jule::Ptr<_204cda982_Type> _68842_p, jule::Ptr<_204c5319c_Var> _68856_owner) {
	jule::Ptr<_204ca4b49_eval> _6897_e = jule::new_ptr<_204ca4b49_eval>(_204ca4b49_eval{._field_s=_self_, ._field_lookup=_68827_l, ._field_prefix=jule::Ptr<_204cda982_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_68856_owner, ._field_field=jule::Ptr<_204a4c727_FieldIns>(nullptr), ._field_target=_204ca41cb_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _68827_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
			_case_begin_208b5e527:;
			{
				(*(_6897_e))._field_unsafety=_204bdad16_isUnsafe(_68827_l.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));
			}
		}
		_match_end_208b5e4b1:;
	};
	(*(_6897_e))._field_prefix=_68842_p;
	return _6897_e;;
}



inline jule::Ptr<_204ca4b49_eval> _204c38e1e_evalp(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _70326_l, jule::Ptr<_204cda982_Type> _70341_p) {
	return _204c38a23_evalpd(_self_, _70326_l, _70341_p, nullptr);;
}



inline jule::Ptr<_204ca4b49_eval> _204c39260_eval(jule::Ptr<_204c2e486_sema> _self_, jule::Trait _70825_l) {
	return _204c38e1e_evalp(_self_, _70825_l, nullptr);;
}



inline jule::Bool _204c3987b_checkAssignType(jule::Ptr<_204c2e486_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_204cda982_Type>* _71254_dest, jule::Ptr<_204ca2b7a_Data>* _7138_d, jule::Ptr<_204a14216_Token> _71322_errorToken, jule::Ptr<_204c000b1_ReferenceStack> _71353_refers) {
	if ((*((*(_7138_d))))._field_Decl) {
		_204c3238a_pushErr(_self_.ptr(), _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71232_destIsRef) {
		if ((!(_204cdb1be_Equal((*(_71254_dest)), (*((*(_7138_d))))._field_Type)))) {
			_204c3238a_pushErr(_self_.ptr(), _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_71254_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_7138_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_204c90d44_assignTypeChecker> _7248_atc = jule::new_ptr<_204c90d44_assignTypeChecker>(_204c90d44_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71254_dest)), ._field_d=(*(_7138_d)), ._field_errorToken=_71322_errorToken, ._field_refers=_71353_refers});;
		jule::Bool _7314_ok = _204c91d45_check(_7248_atc.ptr());;
		if ((!(_7314_ok))) {
			return false;;
		};
	};
	if (((!(_204ca35b5_IsConst((*(_7138_d)).ptr()))) || (_204cdd138_Prim((*(_71254_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7417_kind = (*(_204cdd138_Prim((*(_71254_dest)).ptr())))._field_Kind;;
	{
		
		if (_204ba16c2_IsSigInt(_7417_kind)) {
			_case_begin_208b67574:;
			{
				_204b079e1_SetI64((*((*(_7138_d))))._field_Constant.ptr(), _204b0721b_AsI64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_204ba19d0_IsUnsigInt(_7417_kind)) {
			_case_begin_208b6760c:;
			{
				_204b07c99_SetU64((*((*(_7138_d))))._field_Constant.ptr(), _204b074a2_AsU64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_204ba20da_IsFloat(_7417_kind)) {
			_case_begin_208b67673:;
			{
				_204b085b3_SetF64((*((*(_7138_d))))._field_Constant, _204b07738_AsF64((*((*(_7138_d))))._field_Constant));
			}
		}
		_match_end_208b674b9:;
	};
	return true;;
}



inline jule::Bool _204c39d32__checkTypeCompatibility(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cda982_Type>* _75545_dest, jule::Ptr<_204cda982_Type>* _75563_src, jule::Ptr<_204a14216_Token> _7567_errorToken) {
	if (((*(_75563_src)) == nullptr)) {
		return false;;
	};
	if ((_204cdee5e_Tup((*(_75563_src)).ptr()) != nullptr)) {
		return false;;
	};
	_204c8deb8_typeCompatibilityChecker _7647_tcc = _204c8deb8_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75545_dest)), ._field_src=(*(_75563_src)), ._field_errorToken=_7567_errorToken};;
	return _204c906b2_check(&_7647_tcc);;
}



inline jule::Bool _204c3a2d8_checkTypeCompatibility(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cda982_Type>* _77344_dest, jule::Ptr<_204cda982_Type>* _7748_src, jule::Ptr<_204a14216_Token>* _77425_errorToken) {
	if (_204c39d32__checkTypeCompatibility(_self_, _77344_dest, _7748_src, (*(_77425_errorToken)))) {
		return true;;
	};
	_204c3238a_pushErr(_self_.ptr(), (*(_77425_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_77344_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_7748_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _204c3a706_pushCompatiblityError(_204c2e486_sema* _self_, jule::Ptr<_204cda982_Type>* _78242_dest, jule::Ptr<_204ca2b7a_Data>* _78260_src, jule::Ptr<_204a14216_Token>* _7838_errorToken) {
	if ((*((*(_78260_src))))._field_untyped) {
		{
			
			if (_204b08a47_IsI64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_208b6e999:;
				{
					_204c3238a_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_204b08ccd_IsU64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_208b6ea43:;
				{
					_204c3238a_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_204b09581_IsF64((*((*(_78260_src))))._field_Constant)) {
				_case_begin_208b6eaa9:;
				{
					_204c3238a_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_208b6e867:;
		};
	};
	_204c3238a_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_78260_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _204c3abac_checkTypeCompatibility1(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cda982_Type>* _80045_dest, jule::Ptr<_204ca2b7a_Data>* _80063_src, jule::Ptr<_204a14216_Token>* _8018_errorToken) {
	if (_204c39d32__checkTypeCompatibility(_self_, _80045_dest, &((*((*(_80063_src))))._field_Type), (*(_8018_errorToken)))) {
		return true;;
	};
	_204c3a706_pushCompatiblityError(_self_.ptr(), _80045_dest, _80063_src, _8018_errorToken);
	return false;;
}



inline jule::Ptr<_204cda982_Type> _204c3b163_buildNonGenericType(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a29b11_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_204cda982_Type>>* _81644_ignored) {
	jule::Ptr<_204cecd7e_typeChecker> _8177_tc = jule::new_ptr<_204cecd7e_typeChecker>(_204cecd7e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=(*(_8168_generics)), ._field_ignoredGenerics=_81644_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _204d05969_checkDecl(_8177_tc.ptr(), _81541_ast);;
}



inline jule::Bool _204c3b55e_buildFnNonGenericTypes(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns> _82743_f, jule::Slice<jule::Ptr<_204cda982_Type>>* _82759_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _82811_generics = nullptr;;
	if (_204b1dce3_IsMethod((*(_82743_f))._field_Decl.ptr())) {
		_82811_generics=jule::append((*(*(_82743_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82743_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82811_generics=(*((*(_82743_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _204c3c708_basicFnEnvironment(_self_, &(_82743_f), jule::__new_closure<jule::Bool,jule::Ptr<_204c2e486_sema>*>((void*)__jule_anon_208b7a103, jule::Ptr<__jule_anon_208b7a103_ctx>::make(__jule_anon_208b7a103_ctx{._82743_f=_82743_f,._82811_generics=_82811_generics,._82759_ignored=_82759_ignored}).as<jule::Uintptr>(), __jule_anon_208b7a103_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_204b21664_FnIns> _204c3b8a0_getTraitCheckFnKind(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _85041_f) {
	if (((*((*(_85041_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85041_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_204b21664_FnIns> _8547_ins = _204b1eab3_instanceForce((*(_85041_f)));;
	jule::Ptr<_204cecd7e_typeChecker> _8567_tc = jule::new_ptr<_204cecd7e_typeChecker>(_204cecd7e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8547_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b81505:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> _86115_p = *it;
			{
				if ((!(_204b1c231_IsSelf((*(_86115_p))._field_Decl.ptr())))) {
					(*_86115_p.alloc)._field_Type=_204d05969_checkDecl(_8567_tc.ptr(), &((*((*(*(_86115_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86115_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_208b81505:;
			++it;
			goto _iter_begin_208b81505;
		}
		_iter_end_208b81505:;
	};
	if ((!(_204b1da5c_IsVoid((*(_85041_f)).ptr())))) {
		(*_8547_ins.alloc)._field_Result=_204d05969_checkDecl(_8567_tc.ptr(), &((*((*((*((*(_85041_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8547_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8547_ins;;
}



inline jule::Bool _204c3bd56_checkConstraintsFn(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _87940_f, jule::Ptr<_204a14216_Token>* _87956_et, jule::Ptr<_204b21664_FnIns> _87979_exist) {
	jule::Ptr<_204bc97c7_constraintChecker> _8807_cc = _204c37082_constraintChecker(_self_);;
	(*(_8807_cc))._field_et=(*(_87956_et));
	(*_8807_cc.alloc)._field_fi=(*(_87940_f));
	if ((_87979_exist != nullptr)) {
		{
			auto expr = &((*_87979_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208b86681:;
			if (it != expr_end) {
				jule::I32 _8849_i = it - expr->begin();
				jule::Ptr<_204cd909b_InsGeneric> _88416_g = *it;
				{
					(*((*((*(_87940_f))))._field_Generics[_8849_i]))._field_Constraint=(*(_88416_g))._field_Constraint;
				}
				_iter_next_208b86681:;
				++it;
				_8849_i++;
				goto _iter_begin_208b86681;
			}
			_iter_end_208b86681:;
		};
	} else {
		(*_8807_cc.alloc)._field_uniq=true;
	};
	return _204bca740_check(_8807_cc);;
}



inline jule::Bool _204c3c30c_checkConstraintsStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _89344_s, jule::Ptr<_204a14216_Token>* _89364_et, jule::Ptr<_204a4d2c7_StructIns> _89387_exist) {
	jule::Ptr<_204bc97c7_constraintChecker> _8947_cc = _204c37082_constraintChecker(_self_);;
	(*(_8947_cc))._field_et=(*(_89364_et));
	(*_8947_cc.alloc)._field_si=(*(_89344_s));
	if ((_89387_exist != nullptr)) {
		{
			auto expr = &((*_89387_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208b8984e:;
			if (it != expr_end) {
				jule::I32 _8989_i = it - expr->begin();
				jule::Ptr<_204cd909b_InsGeneric> _89816_g = *it;
				{
					(*((*((*(_89344_s))))._field_Generics[_8989_i]))._field_Constraint=(*(_89816_g))._field_Constraint;
				}
				_iter_next_208b8984e:;
				++it;
				_8989_i++;
				goto _iter_begin_208b8984e;
			}
			_iter_end_208b8984e:;
		};
	} else {
		(*_8947_cc.alloc)._field_uniq=true;
	};
	return _204bca740_check(_8947_cc);;
}



inline jule::Bool _204c3c708_basicFnEnvironment(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*> _91051_algo) {
	jule::Ptr<_204c2e486_sema> _9117_sema = (*((*((*(_91040_f))))._field_Decl))._field_sema;;
	jule::Ptr<_204b248a9_SymTab> _9127_old = _204c31bb4_getCurrentFile(_9117_sema.ptr());;
	jule::Ptr<_204b248a9_SymTab> _9137_file = _204c2d100_findFile(&((*_9117_sema.alloc)._field_files), &((*((*(*((*(_91040_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9137_file != nullptr)) {
		_204c31e6c_setCurrentFile(_9117_sema, _9137_file);
	};
	jule::Bool _9183_ok = _91051_algo(&(_9117_sema));;
	if ((_9117_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_9117_sema))._field_errors);
		(*_9117_sema.alloc)._field_errors=nullptr;
	};
	_204c31e6c_setCurrentFile(_9117_sema.ptr(), _9127_old);
	return _9183_ok;;
}



inline jule::Bool _204c3cb04_fnEnvironment(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*> _93046_algo) {
	jule::I32 _9317_size = (*((*(_93035_f))))._field_Generics.len();;
	if ((((*((*(_93035_f))))._field_Decl != nullptr) && ((*(*((*(_93035_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9317_size+=(*(*((*((*(_93035_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _9357_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>::alloc(0LL, _9317_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cd9b90_TypeAlias>(nullptr); __jule_collection; });;
	_204c2cc7b_appendGenericTypeAliases(&(_9357_generics), _93035_f);
	return _204c3c708_basicFnEnvironment(_self_, _93035_f, jule::__new_closure<jule::Bool,jule::Ptr<_204c2e486_sema>*>((void*)__jule_anon_208b930c7, jule::Ptr<__jule_anon_208b930c7_ctx>::make(__jule_anon_208b930c7_ctx{._93046_algo=_93046_algo,._9357_generics=_9357_generics}).as<jule::Uintptr>(), __jule_anon_208b930c7_ctx_handler));;
}



inline void _204c3cdac_checkFnParamKind(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2050e_ParamIns>* _94238_p) {
	(*((*((*(_94238_p))))._field_Type))._field_Variadic=(*((*((*(_94238_p))))._field_Decl))._field_Variadic;
}



inline jule::Bool _204c3d1ed_reloadFnInsTypes(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns> _94637_f) {
	if ((_204b22b2c_IsBuiltin(_94637_f.ptr()) || _204b22db3_IsAnon(_94637_f.ptr()))) {
		return true;;
	};
	return _204c3cb04_fnEnvironment(_self_, &(_94637_f), jule::__new_closure<jule::Bool,jule::Ptr<_204c2e486_sema>*,jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>*>((void*)__jule_anon_208b95a69, jule::Ptr<__jule_anon_208b95a69_ctx>::make(__jule_anon_208b95a69_ctx{._94637_f=_94637_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_208b95a69_ctx_handler));;
}



inline jule::Bool _204c3d6a4_checkRefValidityForInitExpr(jule::Ptr<_204c2e486_sema> _self_, jule::Bool _98644_leftMut, jule::Ptr<_204ca2b7a_Data>* _98664_d, jule::Ptr<_204a14216_Token>* _98679_errorToken) {
	if ((!(_204c2bd46_isValidModelForRef(&((*((*(_98664_d))))._field_Model))))) {
		_204c3238a_pushErr(_self_.ptr(), (*(_98679_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98644_leftMut && (!((*((*(_98664_d))))._field_Mutable)))) {
		_204c3238a_pushErr(_self_.ptr(), (*(_98679_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _204c3d9e5_isMutRiskyStruct(_204c2e486_sema* _self_, jule::Ptr<_204a4d2c7_StructIns>* _100329_s) {
	{
		auto expr = &((*((*(_100329_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ba0b62:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> *_100410_f = it;
			{
				if ((((*((*((*(_100410_f))))._field_Decl))._field_Mutable && _204cdc368_Mutable((*(*(_100410_f)).alloc)._field_Type.ptr())) && _204c32ae9_isAccessibleDefine(_self_, (*(*((*(_100410_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100410_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_208ba0b62:;
			++it;
			goto _iter_begin_208ba0b62;
		}
		_iter_end_208ba0b62:;
	};
	return false;;
}



inline jule::Bool _204c3e111_checkValidityForInitExpr(jule::Ptr<_204c2e486_sema> _self_, jule::Bool _103041_leftMut, jule::Bool _103056_leftRef, jule::Ptr<_204cda982_Type>* _10314_leftKind, jule::Ptr<_204ca2b7a_Data>* _103126_d, jule::Ptr<_204a14216_Token>* _103141_errorToken) {
	if ((_103041_leftMut && (!((*((*(_103126_d))))._field_Mutable)))) {
		if ((_204cdc368_Mutable((*((*(_103126_d))))._field_Type.ptr()) || (*((*((*(_103126_d))))._field_Type))._field_Variadic)) {
			_204c3238a_pushErr(_self_.ptr(), (*(_103141_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_103126_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_204a4d2c7_StructIns> _10394_s = _204cde6ab_Struct((*((*(_103126_d))))._field_Type.ptr());;
		if (((_10394_s != nullptr) && _204c3d9e5_isMutRiskyStruct(_self_.ptr(), &(_10394_s)))) {
			_204c3238a_pushErr(_self_, (*(_103141_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_103126_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103056_leftRef) {
		if ((!(_204c3d6a4_checkRefValidityForInitExpr(_self_, _103041_leftMut, _103126_d, _103141_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_204c90d44_assignTypeChecker> _10507_atc = jule::new_ptr<_204c90d44_assignTypeChecker>(_204c90d44_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_204cda982_Type>(nullptr), ._field_d=(*(_103126_d)), ._field_errorToken=(*(_103141_errorToken)), ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr)});;
	return _204c91592_checkValidity(_10507_atc.ptr());;
}



inline jule::Bool _204c3e50c_checkTypeAliasDeclKind(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _105844_ta, jule::Trait _105864_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204b248a9_SymTab> _10597_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_204c31e6c_setCurrentFile(_self_, _10597_old);
	});;
	if (((*((*(_105844_ta))))._field_Token != nullptr)) {
		jule::Ptr<_204b248a9_SymTab> _10648_file = _204c2d100_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_105844_ta))))._field_Token.alloc)._field_File));;
		if ((_10648_file != nullptr)) {
			_204c31e6c_setCurrentFile(_self_, _10648_file);
		};
	};
	__jule_func_result=_204c36ceb_checkTypeSymWithRefers(_self_, &((*((*(_105844_ta))))._field_TypeSym), _105864_l, nullptr, jule::new_ptr<_204cebd8e_referencer>(_204cebd8e_referencer{._field_ident=(*((*(_105844_ta))))._field_Ident, ._field_owner=jule::Any((*(_105844_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_105844_ta))))._field_Refers))}));
	if (((__jule_func_result && (_204cdde08_Arr((*((*((*(_105844_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_204cdde08_Arr((*((*((*(_105844_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_204c3238a_pushErr(_self_, (*((*(*((*(_105844_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _204c3e870_checkTypeAliasDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _108140_ta, jule::Trait _108160_l) {
	if (_204a16aed_IsIgnoreIdent((*((*(_108140_ta))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_108140_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_204c3e50c_checkTypeAliasDeclKind(_self_, _108140_ta, _108160_l);
}



inline void _204c3eb28_checkTypeAliasDeclDup(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204cd9b90_TypeAlias>* _108943_ta) {
	if (_204a16aed_IsIgnoreIdent((*((*(_108943_ta))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_108943_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_204c330a0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_108943_ta))), &((*((*(_108943_ta))))._field_Ident), (*((*(_108943_ta))))._field_Binded)) {
		_204c3238a_pushErr(_self_, (*((*(_108943_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_108943_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_204c3e50c_checkTypeAliasDeclKind(_self_, _108943_ta, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));
}



inline jule::Bool _204c3edae_checkTypeAliasDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208bb45e3:;
		if (it != expr_end) {
			jule::Ptr<_204cd9b90_TypeAlias> _110215_ta = *it;
			{
				_204c3eb28_checkTypeAliasDeclDup(_self_, &(_110215_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208bb45e3:;
			++it;
			goto _iter_begin_208bb45e3;
		}
		_iter_end_208bb45e3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _208be34ac_checkEnumItemsDup(_204c2e486_sema* _self_, jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _111336_items) {
	{
		auto expr = &(_111336_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208be3c2c:;
		if (it != expr_end) {
			jule::Ptr<_204b2a915_EnumItem> *_111410_item = it;
			{
				if (((*((*(_111410_item))))._field_Ident).empty()) {
					goto _iter_next_208be3c2c;
				} else if (_204a16aed_IsIgnoreIdent((*((*(_111410_item))))._field_Ident)) {
					_204c3238a_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111336_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_208be5965:;
						if (it != expr_end) {
							jule::Ptr<_204b2a915_EnumItem> *_112012_citem = it;
							{
								if (((*(_111410_item)) == (*(_112012_citem)))) {
									goto _iter_end_208be5965;
								} else if (((*(*(_111410_item)).alloc)._field_Ident == (*((*(_112012_citem))))._field_Ident)) {
									_204c3238a_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111410_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_208be5965;
								};
							}
							_iter_next_208be5965:;
							++it;
							goto _iter_begin_208be5965;
						}
						_iter_end_208be5965:;
					};
				};
			}
			_iter_next_208be3c2c:;
			++it;
			goto _iter_begin_208be3c2c;
		}
		_iter_end_208be3c2c:;
	};
}

inline void _208c014ed_checkEnumItemsDup(_204c2e486_sema* _self_, jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> _111336_items) {
	{
		auto expr = &(_111336_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c01c6d:;
		if (it != expr_end) {
			jule::Ptr<_204b2c5a4_TypeEnumItem> *_111410_item = it;
			{
				if (((*((*(_111410_item))))._field_Ident).empty()) {
					goto _iter_next_208c01c6d;
				} else if (_204a16aed_IsIgnoreIdent((*((*(_111410_item))))._field_Ident)) {
					_204c3238a_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111336_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_208c03962:;
						if (it != expr_end) {
							jule::Ptr<_204b2c5a4_TypeEnumItem> *_112012_citem = it;
							{
								if (((*(_111410_item)) == (*(_112012_citem)))) {
									goto _iter_end_208c03962;
								} else if (((*(*(_111410_item)).alloc)._field_Ident == (*((*(_112012_citem))))._field_Ident)) {
									_204c3238a_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111410_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_208c03962;
								};
							}
							_iter_next_208c03962:;
							++it;
							goto _iter_begin_208c03962;
						}
						_iter_end_208c03962:;
					};
				};
			}
			_iter_next_208c01c6d:;
			++it;
			goto _iter_begin_208c01c6d;
		}
		_iter_end_208c01c6d:;
	};
}



inline void _204c40420_checkEnumItemsStr(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2b471_Enum>* _113339_e) {
	jule::Ptr<_204ca4b49_eval> _11347_eval = _204c39260_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113339_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208bb6381:;
		if (it != expr_end) {
			jule::Ptr<_204b2a915_EnumItem> _113515_item = *it;
			{
				if (_204b2acde_AutoExpr(_113515_item.ptr())) {
					(*_113515_item.alloc)._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b05813_NewStr((*_113515_item.alloc)._field_Ident)})});
					(*((*((*_113515_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113515_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_204ca2b7a_Data> _11449_d = _204cc8794_evalExpr(_11347_eval, (*((*(_113515_item))._field_Value))._field_Expr);;
					if ((_11449_d == nullptr)) {
						goto _iter_next_208bb6381;
					};
					if ((!(_204ca35b5_IsConst(_11449_d.ptr())))) {
						_204c3238a_pushErr(_self_, (*((*(*(_113515_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_204c000b1_ReferenceStack> _11539_refers = static_cast<jule::Ptr<_204c000b1_ReferenceStack>>(nullptr);;
					_204c3987b_checkAssignType(_self_, false, &((*((*((*(_113339_e))))._field_TypeSym))._field_Type), &(_11449_d), (*_113515_item.alloc)._field_Token, _11539_refers);
					(*(*(_113515_item))._field_Value.alloc)._field_Data=_11449_d;
				};
			}
			_iter_next_208bb6381:;
			++it;
			goto _iter_begin_208bb6381;
		}
		_iter_end_208bb6381:;
	};
}



inline void _208bc248b_checkEnumItemInt(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ca4b49_eval>* _116043_eval, jule::Ptr<_204b2b471_Enum>* _116061_e, jule::Ptr<_204ce3a9a_Prim>* _116072_prim, jule::Ptr<_204b2a915_EnumItem>* _116090_item, jule::U64* _1160112_n) {
	if (_204b2acde_AutoExpr((*(_116090_item)).ptr())) {
		(*((*(_116090_item))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		{
			
{
				_case_begin_208bc4878:;
				{
					(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Constant=static__204b05280_NewU64((*(_1160112_n)));
				}
			}
			_match_end_208bc523b:;
		};
		(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116090_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_204ca2b7a_Data> _11758_d = _204cc8794_evalExpr((*(_116043_eval)), (*((*((*(_116090_item))))._field_Value))._field_Expr);;
		if ((_11758_d == nullptr)) {
			return;;
		};
		if ((!(_204ca35b5_IsConst(_11758_d.ptr())))) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(*((*(_116090_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_204c000b1_ReferenceStack> _11828_refers = static_cast<jule::Ptr<_204c000b1_ReferenceStack>>(nullptr);;
		_204c3987b_checkAssignType(_self_, false, &((*((*((*(_116061_e))))._field_TypeSym))._field_Type), &(_11758_d), (*((*(_116090_item))))._field_Token, _11828_refers);
		(*(*((*(_116090_item))))._field_Value.alloc)._field_Data=_11758_d;
		{
			
{
				_case_begin_208bc93e9:;
				{
					(*(_1160112_n))=_204b066d2_ReadU64((*((*(*((*(_116090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_208bca719:;
		};
	};
}

inline void _208bd2ee6_checkEnumItemInt(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ca4b49_eval>* _116043_eval, jule::Ptr<_204b2b471_Enum>* _116061_e, jule::Ptr<_204ce3a9a_Prim>* _116072_prim, jule::Ptr<_204b2a915_EnumItem>* _116090_item, jule::I64* _1160112_n) {
	if (_204b2acde_AutoExpr((*(_116090_item)).ptr())) {
		(*((*(_116090_item))))._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})});
		{
			
{
				_case_begin_208bd5cb8:;
				{
					(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Constant=static__204b0500a_NewI64((*(_1160112_n)));
				}
			}
			_match_end_208bd5c52:;
		};
		(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116090_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_204ca2b7a_Data> _11758_d = _204cc8794_evalExpr((*(_116043_eval)), (*((*((*(_116090_item))))._field_Value))._field_Expr);;
		if ((_11758_d == nullptr)) {
			return;;
		};
		if ((!(_204ca35b5_IsConst(_11758_d.ptr())))) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(*((*(_116090_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_204c000b1_ReferenceStack> _11828_refers = static_cast<jule::Ptr<_204c000b1_ReferenceStack>>(nullptr);;
		_204c3987b_checkAssignType(_self_, false, &((*((*((*(_116061_e))))._field_TypeSym))._field_Type), &(_11758_d), (*((*(_116090_item))))._field_Token, _11828_refers);
		(*(*((*(_116090_item))))._field_Value.alloc)._field_Data=_11758_d;
		{
			
{
				_case_begin_208bdb43e:;
				{
					(*(_1160112_n))=_204b0644b_ReadI64((*((*(*((*(_116090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_208bdb3b7:;
		};
	};
}



inline void _208bbd61e_checkEnumItemsInt1(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3a9a_Prim>* _119641_prim, jule::Ptr<_204b2b471_Enum>* _119659_e) {
	jule::U64 _11977_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_208bc0302:;
			{
				_11977_max=_204b9eec8_MaxU(_204ce3e1e_Str((*(_119641_prim)).ptr()));
			}
		}
		_match_end_208bc0467:;
	};
	jule::Ptr<_204ca4b49_eval> _12077_eval = _204c39260_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));;
	jule::U64 _12087_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_204b2a915_EnumItem> _12097_first = (*((*(_119659_e))))._field_Items[0LL];;
	_208bc248b_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_12097_first), &(_12087_n));
	if (((*((*(_12097_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_208bbeb2b:;
				{
					_12087_n=_204b074a2_AsU64((*(*((*(_12097_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_208bcaede:;
		};
	};
	{
		auto expr = (*((*(_119659_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_208bc6e74:;
		if (it != expr_end) {
			jule::Ptr<_204b2a915_EnumItem> _122115_item = *it;
			{
				if (((_204b2acde_AutoExpr(_122115_item.ptr()) && (_12087_n > 0LLU)) && ((jule::U64)(_11977_max - _12087_n) <= 0LLU))) {
					_204c3238a_pushErr(_self_, (*_122115_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_208bc6e74;
				};
				(_12087_n)++;
				_208bc248b_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_122115_item), &(_12087_n));
			}
			_iter_next_208bc6e74:;
			++it;
			goto _iter_begin_208bc6e74;
		}
		_iter_end_208bc6e74:;
	};
}

inline void _208bbd8e9_checkEnumItemsInt1(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204ce3a9a_Prim>* _119641_prim, jule::Ptr<_204b2b471_Enum>* _119659_e) {
	jule::I64 _11977_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_208bd0da1:;
			{
				_11977_max=_204b9ec0e_MaxI(_204ce3e1e_Str((*(_119641_prim)).ptr()));
			}
		}
		_match_end_208bd0d3a:;
	};
	jule::Ptr<_204ca4b49_eval> _12077_eval = _204c39260_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));;
	jule::I64 _12087_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_204b2a915_EnumItem> _12097_first = (*((*(_119659_e))))._field_Items[0LL];;
	_208bd2ee6_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_12097_first), &(_12087_n));
	if (((*((*(_12097_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_208bd38a9:;
				{
					_12087_n=_204b0721b_AsI64((*(*((*(_12097_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_208bd8a35:;
		};
	};
	{
		auto expr = (*((*(_119659_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_208bdd276:;
		if (it != expr_end) {
			jule::Ptr<_204b2a915_EnumItem> _122115_item = *it;
			{
				if (((_204b2acde_AutoExpr(_122115_item.ptr()) && (_12087_n > 0LL)) && ((_11977_max - _12087_n) <= 0LL))) {
					_204c3238a_pushErr(_self_, (*_122115_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_208bdd276;
				};
				(_12087_n)++;
				_208bd2ee6_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_122115_item), &(_12087_n));
			}
			_iter_next_208bdd276:;
			++it;
			goto _iter_begin_208bdd276;
		}
		_iter_end_208bdd276:;
	};
}



inline void _204c410be_checkEnumItemsInt(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2b471_Enum>* _123139_e) {
	jule::Ptr<_204ce3a9a_Prim> _12323_prim = _204cdd138_Prim((*((*((*(_123139_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_204ba16c2_IsSigInt((*(_12323_prim))._field_Kind)) {
			_case_begin_208bc348c:;
			{
				_208bbd8e9_checkEnumItemsInt1(_self_, &(_12323_prim), _123139_e);
			}
		}
		else {
			_case_begin_208bbcd6b:;
			{
				_208bbd61e_checkEnumItemsInt1(_self_, &(_12323_prim), _123139_e);
			}
		}
		_match_end_208bbcce4:;
	};
}



inline void _204c41377_checkEnumDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2b471_Enum>* _124135_e) {
	if (_204a16aed_IsIgnoreIdent((*((*(_124135_e))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_204c330a0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124135_e))), &((*((*(_124135_e))))._field_Ident), false)) {
		_204c3238a_pushErr(_self_, (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124135_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124135_e))))._field_Items.len() == 0LL)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124135_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_208be34ac_checkEnumItemsDup(_self_.ptr(), (*((*(_124135_e))))._field_Items);
	if (((*((*(_124135_e))))._field_TypeSym != nullptr)) {
		if ((!(_204c3747d_checkTypeSym(_self_, &((*((*(_124135_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124135_e))))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_204ce3a9a_Prim> _12657_t = _204cdd138_Prim((*((*((*(_124135_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12657_t == nullptr)) {
		_204c3238a_pushErr(_self_, (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_204ce7065_IsStr(_12657_t.ptr())) {
			_case_begin_208beab68:;
			{
				_204c40420_checkEnumItemsStr(_self_, _124135_e);
			}
		}
		else if (_204ba1c99_IsInt(_204ce3e1e_Str(_12657_t.ptr()))) {
			_case_begin_208bea849:;
			{
				_204c410be_checkEnumItemsInt(_self_, _124135_e);
			}
		}
		else {
			_case_begin_208be9c11:;
			{
				_204c3238a_pushErr(_self_, (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_208be9cee:;
	};
}



inline void _204c41630_checkTypeEnumDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b2cb7b_TypeEnum>* _128239_e) {
	if (_204a16aed_IsIgnoreIdent((*((*(_128239_e))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_128239_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_204c330a0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128239_e))), &((*((*(_128239_e))))._field_Ident), false)) {
		_204c3238a_pushErr(_self_, (*((*(_128239_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128239_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128239_e))))._field_Items.len() == 0LL)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_128239_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128239_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_208c014ed_checkEnumItemsDup(_self_.ptr(), (*((*(_128239_e))))._field_Items);
	{
		auto expr = &((*((*(_128239_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c01ce5:;
		if (it != expr_end) {
			jule::Ptr<_204b2c5a4_TypeEnumItem> _129615_item = *it;
			{
				if (((*(_129615_item))._field_TypeSym == nullptr)) {
					_204c3238a_pushErr(_self_, (*_129615_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_208c01ce5;
				};
				jule::Bool _13014_ok = _204c3747d_checkTypeSym(_self_, &((*(_129615_item))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));;
				if ((!(_13014_ok))) {
					goto _iter_next_208c01ce5;
				};
				jule::Ptr<_204ce3a9a_Prim> _13054_p = _204cdd138_Prim((*((*_129615_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13054_p != nullptr) && _204ce72eb_IsAny(_13054_p))) {
					_204c3238a_pushErr(_self_, (*_129615_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_208c01ce5:;
			++it;
			goto _iter_begin_208c01ce5;
		}
		_iter_end_208c01ce5:;
	};
	if (((*((*(_128239_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_204b2c5a4_TypeEnumItem> _13118_item = (*((*(_128239_e))))._field_Items[0LL];;
		_204cda982_Type _13124_tk = _204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128239_e)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4)};;
		if ((((*((*(_13118_item))._field_TypeSym))._field_Type != nullptr) && _204cdb1be_Equal((*((*(_13118_item))._field_TypeSym))._field_Type, ((jule::Ptr<_204cda982_Type>)((&(_13124_tk))))))) {
			_204c3238a_pushErr(_self_, (*_13118_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204b2d000_Str((*(_128239_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _204c418b6_checkEnumDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c0ce77:;
		if (it != expr_end) {
			jule::Ptr<_204b2b471_Enum> _132315_e = *it;
			{
				_204c41377_checkEnumDecl(_self_, &(_132315_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208c0ce77:;
			++it;
			goto _iter_begin_208c0ce77;
		}
		_iter_end_208c0ce77:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c41b4c_checkTypeEnumDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c0e64e:;
		if (it != expr_end) {
			jule::Ptr<_204b2cb7b_TypeEnum> _133515_e = *it;
			{
				_204c41630_checkTypeEnumDecl(_self_, &(_133515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208c0e64e:;
			++it;
			goto _iter_begin_208c0e64e;
		}
		_iter_end_208c0e64e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c41e8d_checkDeclGenerics(_204c2e486_sema* _self_, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _134534_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134534_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c10b28:;
		if (it != expr_end) {
			jule::I32 _13477_i = it - expr->begin();
			jule::Ptr<_204a36d1b_GenericDecl> *_134710_g = it;
			{
				if (_204a16aed_IsIgnoreIdent((*((*(_134710_g))))._field_Ident)) {
					_204c3238a_pushErr(_self_, (*(*(_134710_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_208c10b28;
				};
				_julec_label_208c11c06:;
				{
					auto expr = _134534_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c126da:;
					if (it != expr_end) {
						jule::I32 _13568_j = it - expr->begin();
						jule::Ptr<_204a36d1b_GenericDecl> *_135611_ct = it;
						{
							{
								
								if ((_13568_j >= _13477_i)) {
									_case_begin_208c13345:;
									{
										goto _iter_end_208c126da;
									}
								}
								else if (((*((*(_134710_g))))._field_Ident == (*((*(_135611_ct))))._field_Ident)) {
									_case_begin_208c133cd:;
									{
										_204c3238a_pushErr(_self_, (*(*(_134710_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_134710_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_208c126da;
									}
								}
								_match_end_208c13235:;
							};
						}
						_iter_next_208c126da:;
						++it;
						_13568_j++;
						goto _iter_begin_208c126da;
					}
					_iter_end_208c126da:;
				};
			}
			_iter_next_208c10b28:;
			++it;
			_13477_i++;
			goto _iter_begin_208c10b28;
		}
		_iter_end_208c10b28:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c422ce_checkFnDeclParamsDup(_204c2e486_sema* _self_, jule::Ptr<_204b1d5a6_Fn>* _137237_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_208c114a8:;
	{
		auto expr = &((*((*(_137237_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c14038:;
		if (it != expr_end) {
			jule::I32 _13757_i = it - expr->begin();
			jule::Ptr<_204b1bad2_Param> *_137510_p = it;
			{
				{
					auto expr = &((*((*(_137237_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c1606d:;
					if (it != expr_end) {
						jule::Ptr<_204a36d1b_GenericDecl> *_137711_g = it;
						{
							if (((*((*(_137510_p))))._field_Ident == (*((*(_137711_g))))._field_Ident)) {
								__jule_func_result=false;
								_204c3238a_pushErr(_self_, (*(*(_137510_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137510_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_208c14038;
							};
						}
						_iter_next_208c1606d:;
						++it;
						goto _iter_begin_208c1606d;
					}
					_iter_end_208c1606d:;
				};
				_julec_label_208c18108:;
				{
					auto expr = &((*((*(_137237_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c16546:;
					if (it != expr_end) {
						jule::I32 _13878_j = it - expr->begin();
						jule::Ptr<_204b1bad2_Param> *_138711_jp = it;
						{
							{
								
								if ((_13878_j >= _13757_i)) {
									_case_begin_208c18bb9:;
									{
										goto _iter_end_208c16546;
									}
								}
								else if (_204a16aed_IsIgnoreIdent((*((*(_137510_p))))._field_Ident) || _204a16aed_IsIgnoreIdent((*((*(_138711_jp))))._field_Ident) || _204a16db7_IsAnonIdent((*(*(_137510_p)).alloc)._field_Ident) || _204a16db7_IsAnonIdent((*(*(_138711_jp)).alloc)._field_Ident)) {
									_case_begin_208c18c52:;
									{
										goto _iter_end_208c16546;
									}
								}
								else if (((*(*(_137510_p)).alloc)._field_Ident == (*(*(_138711_jp)).alloc)._field_Ident)) {
									_case_begin_208c18cb8:;
									{
										__jule_func_result=false;
										_204c3238a_pushErr(_self_, (*(*(_137510_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137510_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_208c14038;
									}
								}
								_match_end_208c18a65:;
							};
						}
						_iter_next_208c16546:;
						++it;
						_13878_j++;
						goto _iter_begin_208c16546;
					}
					_iter_end_208c16546:;
				};
			}
			_iter_next_208c14038:;
			++it;
			_13757_i++;
			goto _iter_begin_208c14038;
		}
		_iter_end_208c14038:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c42620_checkFnDeclResultDup(_204c2e486_sema* _self_, jule::Ptr<_204b1d5a6_Fn>* _140937_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_204b1da5c_IsVoid((*(_140937_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_140937_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c21e8b:;
		if (it != expr_end) {
			jule::I32 _14167_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> *_141610_v = it;
			{
				if ((_204a16aed_IsIgnoreIdent((*((*(_141610_v))))._field_Kind) || _204a16db7_IsAnonIdent((*((*(_141610_v))))._field_Kind))) {
					goto _iter_next_208c21e8b;
				};
				{
					auto expr = &((*((*(_140937_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c235ec:;
					if (it != expr_end) {
						jule::Ptr<_204a36d1b_GenericDecl> *_142111_g = it;
						{
							if (((*((*(_141610_v))))._field_Kind == (*((*(_142111_g))))._field_Ident)) {
								goto _julec_label_208c22a2a;
							};
						}
						_iter_next_208c235ec:;
						++it;
						goto _iter_begin_208c235ec;
					}
					_iter_end_208c235ec:;
				};
				{
					auto expr = &((*((*(_140937_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c239c6:;
					if (it != expr_end) {
						jule::Ptr<_204b1bad2_Param> *_142711_p = it;
						{
							if (((*((*(_141610_v))))._field_Kind == (*((*(_142711_p))))._field_Ident)) {
								goto _julec_label_208c22a2a;
							};
						}
						_iter_next_208c239c6:;
						++it;
						goto _iter_begin_208c239c6;
					}
					_iter_end_208c239c6:;
				};
				_julec_label_208c25203:;
				{
					auto expr = &((*((*((*(_140937_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c25577:;
					if (it != expr_end) {
						jule::I32 _14358_j = it - expr->begin();
						jule::Ptr<_204a14216_Token> *_143511_jv = it;
						{
							{
								
								if ((_14358_j >= _14167_i)) {
									_case_begin_208c2618d:;
									{
										goto _iter_end_208c25577;
									}
								}
								else if (((*((*(_143511_jv))))._field_Kind == (*((*(_141610_v))))._field_Kind)) {
									_case_begin_208c26226:;
									{
										goto _julec_label_208c22a2a;
									}
								}
								_match_end_208c2607d:;
							};
						}
						_iter_next_208c25577:;
						++it;
						_14358_j++;
						goto _iter_begin_208c25577;
					}
					_iter_end_208c25577:;
				};
				goto _iter_next_208c21e8b;
				_julec_label_208c22a2a:;
				_204c3238a_pushErr(_self_, (*(_141610_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_141610_v))))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_208c21e8b:;
			++it;
			_14167_i++;
			goto _iter_begin_208c21e8b;
		}
		_iter_end_208c21e8b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c42961_checkFnVariadicParam(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _145442_f) {
	if (((*((*(_145442_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_204b1bad2_Param> _14587_param = (*((*(_145442_f))))._field_Params[((*((*(_145442_f))))._field_Params.len() - 1LL)];;
	if (((*(_14587_param))._field_Variadic && (*_14587_param.alloc)._field_Reference)) {
		_204c3238a_pushErr(_self_.ptr(), (*_14587_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _204c42c19_checkFnDeclPrototype(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _146742_f) {
	if (((*((*(_146742_f))))._field_Exceptional && (*((*(_146742_f))))._field_Binded)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_146742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_146742_f))))._field_Exceptional) {
		if (_204b1e079_IsEntryPoint((*(_146742_f)).ptr())) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_146742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_204b1e310_IsInit((*(_146742_f)).ptr())) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_146742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_204c41e8d_checkDeclGenerics(_self_.ptr(), &((*((*(_146742_f))))._field_Generics))))) {
			_case_begin_208c2cdcb:;
		}
		else if ((!(_204c422ce_checkFnDeclParamsDup(_self_.ptr(), _146742_f)))) {
			_case_begin_208c2ce42:;
		}
		else if ((!(_204c42620_checkFnDeclResultDup(_self_, _146742_f)))) {
			_case_begin_208c2cea8:;
		}
		else if ((!(_204c42961_checkFnVariadicParam(_self_, _146742_f)))) {
			_case_begin_208c2d01e:;
		}
		_match_end_208c2b12c:;
	};
}



inline jule::Bool _204c431c0_catchTraitInheritCycle(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait> _148939_t1, jule::Ptr<_204b28cba_Trait> _148955_t2, _1eeabb290_Builder* _148972_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_148955_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c305a4:;
		if (it != expr_end) {
			jule::Ptr<_204ce3193_TypeSym> _149115_i = *it;
			{
				if (((*(_149115_i))._field_Type == nullptr)) {
					goto _iter_next_208c305a4;
				};
				jule::Ptr<_204b28cba_Trait> _14958_t3 = _204cde942_Trait((*(_149115_i))._field_Type.ptr());;
				if ((_148939_t1 == _14958_t3)) {
					_204c47e50_pushCycleError(_self_.ptr(), &((*(_148955_t2))._field_Ident), &((*(_14958_t3))._field_Ident), _148972_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_204c431c0_catchTraitInheritCycle(_self_, _148939_t1, _14958_t3, _148972_message)))) {
					_204c47e50_pushCycleError(_self_, &((*(_148955_t2))._field_Ident), &((*(_14958_t3))._field_Ident), _148972_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208c305a4:;
			++it;
			goto _iter_begin_208c305a4;
		}
		_iter_end_208c305a4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c43511__checkTraitDeclInherits(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _150845_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_150845_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c33d6b:;
		if (it != expr_end) {
			jule::I32 _15108_i = it - expr->begin();
			jule::Ptr<_204ce3193_TypeSym> _151015_it = *it;
			{
				if ((!(_204c3747d_checkTypeSym(_self_, &(_151015_it), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_208c33d6b;
				};
				jule::Ptr<_204b28cba_Trait> _15158_t2 = _204cde942_Trait((*(_151015_it))._field_Type.ptr());;
				if ((_15158_t2 == nullptr)) {
					_204c3238a_pushErr(_self_.ptr(), (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_150845_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_151015_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_208c33d6b;
				};
				{
					auto expr = &((*((*(_150845_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c35c6e:;
					if (it != expr_end) {
						jule::I32 _15218_j = it - expr->begin();
						jule::Ptr<_204ce3193_TypeSym> _152111_it2 = *it;
						{
							if ((_15218_j >= _15108_i)) {
								goto _iter_end_208c35c6e;
							};
							if ((((*(_152111_it2))._field_Type != nullptr) && _204cdb1be_Equal((*(_151015_it))._field_Type, (*_152111_it2.alloc)._field_Type))) {
								_204c3238a_pushErr(_self_.ptr(), (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15158_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_208c35c6e;
							};
						}
						_iter_next_208c35c6e:;
						++it;
						_15218_j++;
						goto _iter_begin_208c35c6e;
					}
					_iter_end_208c35c6e:;
				};
				if (((*(_150845_t)) == _15158_t2)) {
					_204c3238a_pushErr(_self_.ptr(), (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_150845_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1eeabb290_Builder _15359_message = static__1eeabbadc_New(64LL);;
					__jule_func_result=(__jule_func_result && _204c431c0_catchTraitInheritCycle(_self_, (*(_150845_t)), _15158_t2, &(_15359_message)));
					if ((_1eeabd083_Len(&_15359_message) > 0LL)) {
						jule::Str _153810_errMsg = _1eeabcaee_Str(&_15359_message);;
						_1eeabccec_Clear(&_15359_message);
						_204c47e50_pushCycleError(_self_, &((*((*(_150845_t))))._field_Ident), &((*(_15158_t2))._field_Ident), &(_15359_message));
						_153810_errMsg+=_1eeabcaee_Str(&_15359_message);
						_204c3238a_pushErr(_self_, (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_153810_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_208c33d6b:;
			++it;
			_15108_i++;
			goto _iter_begin_208c33d6b;
		}
		_iter_end_208c33d6b:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _204c437b9_checkTraitDeclInherits(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _154944_t) {
	{
		auto expr = &((*((*(_154944_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c34630:;
		if (it != expr_end) {
			jule::I32 _15508_i = it - expr->begin();
			jule::Ptr<_204ce3193_TypeSym> _155015_it = *it;
			{
				jule::Ptr<_204b28cba_Trait> _15518_t1 = _204cde942_Trait((*(_155015_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_154944_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c407c3:;
					if (it != expr_end) {
						jule::I32 _15529_j = it - expr->begin();
						jule::Ptr<_204ce3193_TypeSym> _155216_it2 = *it;
						{
							if ((_15529_j == _15508_i)) {
								goto _iter_next_208c407c3;
							};
							jule::Ptr<_204b28cba_Trait> _15569_t2 = _204cde942_Trait((*(_155216_it2))._field_Type);;
							{
								auto expr = &((*(_15518_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_208c420ee:;
								if (it != expr_end) {
									jule::Ptr<_204b1d5a6_Fn> _155717_t1m = *it;
									{
										jule::Ptr<_204b1d5a6_Fn> _155810_t2m = _204b2999c_FindMethod(_15569_t2.ptr(), (*(_155717_t1m))._field_Ident);;
										if ((_155810_t2m == nullptr)) {
											goto _iter_next_208c420ee;
										};
										jule::Ptr<_204b21664_FnIns> _15626_t1f = _204c3b8a0_getTraitCheckFnKind(_self_, &(_155717_t1m));;
										jule::Ptr<_204b21664_FnIns> _15636_t2f = _204c3b8a0_getTraitCheckFnKind(_self_, &(_155810_t2m));;
										if ((!(_204b22610_equalTrait(_15626_t1f, &(_15636_t2f))))) {
											_204c3238a_pushErr(_self_, (*((*_155015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_154944_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15569_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_204b23545_GetKindStr(_15626_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_204b23545_GetKindStr(_15636_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_208c420ee:;
									++it;
									goto _iter_begin_208c420ee;
								}
								_iter_end_208c420ee:;
							};
						}
						_iter_next_208c407c3:;
						++it;
						_15529_j++;
						goto _iter_begin_208c407c3;
					}
					_iter_end_208c407c3:;
				};
			}
			_iter_next_208c34630:;
			++it;
			_15508_i++;
			goto _iter_begin_208c34630;
		}
		_iter_end_208c34630:;
	};
}



inline void _204c43a72_checkTraitDeclMethod(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _157442_f) {
	if (_204a16aed_IsIgnoreIdent((*((*(_157442_f))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_157442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_204a16db7_IsAnonIdent((*((*(_157442_f))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_157442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157442_f))))._field_sema=_self_;
	_204c42c19_checkFnDeclPrototype(_self_, _157442_f);
	jule::Ptr<_204b21664_FnIns> _15827_ins = _204b1ed49_instance((*(_157442_f)));;
	_204c3d1ed_reloadFnInsTypes(_self_, _15827_ins);
	(*(_15827_ins))._field_reloaded=true;
	_204b20157_appendInstance((*(_157442_f)).ptr(), &(_15827_ins));
}



inline void _204c43d2a_checkTraitDeclMethods(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _158843_t) {
	{
		auto expr = &((*((*(_158843_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c49645:;
		if (it != expr_end) {
			jule::I32 _15898_i = it - expr->begin();
			jule::Ptr<_204b1d5a6_Fn> _158915_f = *it;
			{
				_204c43a72_checkTraitDeclMethod(_self_, &(_158915_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_204b2a12e_findMethodInherit((*(_158843_t)).ptr(), &((*(_158915_f))._field_Ident)) != nullptr)) {
					_204c3238a_pushErr(_self_, (*_158915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_158915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_208c49645;
				};
				_julec_label_208c4c549:;
				{
					auto expr = &((*((*(_158843_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c4c989:;
					if (it != expr_end) {
						jule::I32 _16058_j = it - expr->begin();
						jule::Ptr<_204b1d5a6_Fn> _160511_jf = *it;
						{
							{
								
								if ((_16058_j >= _15898_i)) {
									_case_begin_208c4d5a0:;
									{
										goto _iter_end_208c4c989;
									}
								}
								else if (((*(_158915_f))._field_Ident == (*(_160511_jf))._field_Ident)) {
									_case_begin_208c4d638:;
									{
										_204c3238a_pushErr(_self_, (*_158915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_158915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_208c4c989;
									}
								}
								_match_end_208c4d490:;
							};
						}
						_iter_next_208c4c989:;
						++it;
						_16058_j++;
						goto _iter_begin_208c4c989;
					}
					_iter_end_208c4c989:;
				};
			}
			_iter_next_208c49645:;
			++it;
			_15898_i++;
			goto _iter_begin_208c49645;
		}
		_iter_end_208c49645:;
	};
}



inline void _204c440d3_checkTraitDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b28cba_Trait>* _162436_t) {
	if (_204a16aed_IsIgnoreIdent((*((*(_162436_t))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_162436_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_204c330a0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162436_t))), &((*((*(_162436_t))))._field_Ident), false)) {
		_204c3238a_pushErr(_self_, (*((*(_162436_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162436_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_204c437b9_checkTraitDeclInherits(_self_, _162436_t);
	_204c43d2a_checkTraitDeclMethods(_self_, _162436_t);
}



inline jule::Bool _204c44369_checkTraitDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c5374d:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _163815_t = *it;
			{
				_204c440d3_checkTraitDecl(_self_, &(_163815_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208c5374d:;
			++it;
			goto _iter_begin_208c5374d;
		}
		_iter_end_208c5374d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c44765_checkTraitImplMethods(_204c2e486_sema* _self_, jule::Ptr<_204b28cba_Trait>* _164842_base, jule::Ptr<_204bcbac6_Impl>* _164857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_164857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c55233:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> *_165010_f = it;
			{
				if ((_204b2999c_FindMethod((*(_164842_base)).ptr(), (*((*(_165010_f))))._field_Ident) == nullptr)) {
					_204c3238a_pushErr(_self_, (*(*(_165010_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_164842_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165010_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_208c55233:;
			++it;
			goto _iter_begin_208c55233;
		}
		_iter_end_208c55233:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c44b61_implToStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _165934_dest, jule::Ptr<_204bcbac6_Impl>* _165954_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165954_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c57aa4:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _166315_f = *it;
			{
				if (((_204a4b11b_FindMethod((*(_165934_dest)).ptr(), (*(_166315_f))._field_Ident, (*_166315_f.alloc)._field_Statically) != nullptr) || (_204a4b79d_FindField((*(_165934_dest)).ptr(), (*(_166315_f))._field_Ident) != nullptr))) {
					_204c3238a_pushErr(_self_.ptr(), (*(_166315_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165934_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166315_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_208c57aa4;
				};
				if ((((*((*(_165934_dest))))._field_Generics.len() > 0LL) && ((*(_166315_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166315_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_208c5abc8:;
						if (it != expr_end) {
							jule::Ptr<_204a36d1b_GenericDecl> _167112_fg = *it;
							{
								{
									auto expr = &((*((*(_165934_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_208c5b6bd:;
									if (it != expr_end) {
										jule::Ptr<_204a36d1b_GenericDecl> _167213_dg = *it;
										{
											if (((*(_167112_fg))._field_Ident == (*(_167213_dg))._field_Ident)) {
												_204c3238a_pushErr(_self_.ptr(), (*_167112_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_208c5b6bd:;
										++it;
										goto _iter_begin_208c5b6bd;
									}
									_iter_end_208c5b6bd:;
								};
							}
							_iter_next_208c5abc8:;
							++it;
							goto _iter_begin_208c5abc8;
						}
						_iter_end_208c5abc8:;
					};
				};
				_204c33413_checkDirectives(_self_, &((*(_166315_f))._field_Directives), jule::Any(_166315_f, &__jule_any_type10));
				(*_166315_f.alloc)._field_sema=_self_;
				(*_166315_f.alloc)._field_Owner=(*(_165934_dest));
				{ jule::Slice<jule::Ptr<_204b1d5a6_Fn>> &__jule_push_dest = (*((*(_165934_dest))))._field_Methods; __jule_push_dest.push(_166315_f); };
			}
			_iter_next_208c57aa4:;
			++it;
			goto _iter_begin_208c57aa4;
		}
		_iter_end_208c57aa4:;
	};
	{
		auto expr = &((*((*(_165954_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c57e39:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _168815_v = *it;
			{
				;
				if (((_204a4b11b_FindMethod((*(_165934_dest)).ptr(), (*(_168815_v))._field_Ident, true) != nullptr) || (_204a4b45c_FindStatic((*(_165934_dest)).ptr(), (*(_168815_v))._field_Ident) != nullptr))) {
					_204c3238a_pushErr(_self_.ptr(), (*(_168815_v))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165934_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_168815_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_208c57e39;
				};
				{ jule::Slice<jule::Ptr<_204c5319c_Var>> &__jule_push_dest = (*((*(_165934_dest))))._field_Statics; __jule_push_dest.push(_168815_v); };
			}
			_iter_next_208c57e39:;
			++it;
			goto _iter_begin_208c57e39;
		}
		_iter_end_208c57e39:;
	};
	return __jule_func_result;;
}



inline void _204c44e19_implTrait(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204bcbac6_Impl>* _170131_decl) {
	jule::Ptr<_204cda982_Type> _17027_base_t = _204c3856c_selectType(_self_, &((*((*(_170131_decl))))._field_Base));;
	if ((_17027_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_204b28cba_Trait> _17067_base = _204cde942_Trait(_17027_base_t.ptr());;
	if ((_17067_base == nullptr)) {
		_204c3238a_pushErr(_self_, (*((*((*(_170131_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str(_17027_base_t), &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204cda982_Type> _17137_destT = _204c3856c_selectType(_self_, &((*((*(_170131_decl))))._field_Dest));;
	if ((_17137_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _17177_destS = _204cde6ab_Struct(_17137_destT.ptr());;
	if ((_17177_destS == nullptr)) {
		_204c3238a_pushErr(_self_, (*((*((*(_170131_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str(_17137_destT), &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204a4a46c_Struct> _17247_dest = (*(_17177_destS))._field_Decl;;
	if ((_204a1a948_Dir((*((*(_17247_dest))._field_Token))._field_File.ptr()) != _204a1a948_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_204c3238a_pushErr(_self_, (*((*((*(_170131_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_204c51101_pushImplemented(_17067_base, &(_17247_dest));
	_204c513dc_pushImplements(&(_17247_dest), _17067_base);
	if (((*((*(_170131_decl))))._field_Statics.len() > 0LL)) {
		_204c3238a_pushErr(_self_, (*((*((*(_170131_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_204c44765_checkTraitImplMethods(_self_, &(_17067_base), _170131_decl)))) {
			_case_begin_208c6b524:;
		}
		else if ((!(_204c44b61_implToStruct(_self_, &(_17247_dest), _170131_decl)))) {
			_case_begin_208c6b58a:;
		}
		_match_end_208c6a567:;
	};
}



inline void _204c451c2_implStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204bcbac6_Impl>* _174432_decl) {
	jule::Ptr<_204cda982_Type> _17457_destT = _204c3856c_selectType(_self_, &((*((*(_174432_decl))))._field_Dest));;
	if ((_17457_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _17497_destS = _204cde6ab_Struct(_17457_destT.ptr());;
	if ((_17497_destS == nullptr)) {
		_204c3238a_pushErr(_self_, (*((*((*(_174432_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str(_17457_destT), &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204a4a46c_Struct> _17567_dest = (*(_17497_destS))._field_Decl;;
	if ((_204a1a948_Dir((*((*(_17567_dest))._field_Token))._field_File.ptr()) != _204a1a948_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_204c3238a_pushErr(_self_, (*((*((*(_174432_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_204c44b61_implToStruct(_self_, &(_17567_dest), _174432_decl)))) {
			_case_begin_208c72393:;
		}
		_match_end_208c70957:;
	};
}



inline void _204c4547a_implImpl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204bcbac6_Impl>* _176830_decl) {
	{
		
		if (_204bcbec2_IsTraitImpl((*(_176830_decl)).ptr())) {
			_case_begin_208c72e32:;
			{
				_204c44e19_implTrait(_self_, _176830_decl);
			}
		}
		else if (_204bcc258_IsStructImpl((*(_176830_decl)).ptr())) {
			_case_begin_208c72ecb:;
			{
				_204c451c2_implStruct(_self_, _176830_decl);
			}
		}
		_match_end_208c72d11:;
	};
}



inline void _204c457dd_checkVarDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _177934_decl, jule::Trait _177950_l) {
	if (_204a16aed_IsIgnoreIdent((*((*(_177934_decl))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_204c53840_IsTypeInferred((*(_177934_decl)).ptr())) {
		if ((!(_204c535a9_IsInitialized((*(_177934_decl)).ptr())))) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_204c000b1_ReferenceStack> _17898_refers = static_cast<jule::Ptr<_204c000b1_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _177950_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4)) {
				_case_begin_208c77101:;
				{
					_17898_refers=(*((*(_177934_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
				_case_begin_208c775c9:;
				{
					_17898_refers=_204bdc323_getOwnerRefers(_177950_l.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_208c771de:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1796:5"));;
				}
			}
			_match_end_208c77178:;
		};
		(*((*((*(_177934_decl))))._field_TypeSym))._field_Type=_204c37934_checkTypeSymRefers(_self_, &((*(*((*(_177934_decl))))._field_TypeSym.alloc)._field_Decl), _177950_l, _17898_refers);
	};
	if ((*((*(_177934_decl))))._field_Reference) {
		if ((*((*(_177934_decl))))._field_Constant) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_177934_decl))))._field_Statically) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_204c535a9_IsInitialized((*(_177934_decl)).ptr())))) {
		if ((*((*(_177934_decl))))._field_Constant) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_177934_decl))))._field_Statically) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_177934_decl))))._field_Reference) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _204c45a96_checkGlobalVarDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _182540_decl) {
	if (_204c330a0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182540_decl))), &((*((*(_182540_decl))))._field_Ident), (*((*(_182540_decl))))._field_Binded)) {
		_204c3238a_pushErr(_self_, (*((*(_182540_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182540_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182540_decl))))._field_Binded && (*((*(_182540_decl))))._field_Constant)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_182540_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182540_decl))))._field_Binded)) && (!((*((*(_182540_decl))))._field_Constant))) && (!((*((*(_182540_decl))))._field_Statically)))) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_182540_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_204c33413_checkDirectives(_self_, &((*((*(_182540_decl))))._field_Directives), jule::Any((*(_182540_decl)), &__jule_any_type7));
	_204c457dd_checkVarDecl(_self_, _182540_decl, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));
}



inline jule::Bool _204c45d2c_checkGlobalDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c842b7:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _184315_decl = *it;
			{
				_204c45a96_checkGlobalVarDecl(_self_, &(_184315_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208c842b7:;
			++it;
			goto _iter_begin_208c842b7;
		}
		_iter_end_208c842b7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c46228_checkStructTraitImpl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _185342_strct, jule::Ptr<_204b28cba_Trait>* _185363_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185363_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c85b9d:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _185415_tf = *it;
			{
				jule::Bool _18558_exist = false;;
				jule::Ptr<_204b1d5a6_Fn> _18568_sf = _204a4b11b_FindMethod((*(_185342_strct)).ptr(), (*(_185415_tf))._field_Ident, (*_185415_tf.alloc)._field_Statically);;
				jule::Ptr<_204b21664_FnIns> _18574_tfK = _204c3b8a0_getTraitCheckFnKind(_self_, &(_185415_tf));;
				if ((_18568_sf != nullptr)) {
					jule::Ptr<_204b21664_FnIns> _18599_sfK = _204c3b8a0_getTraitCheckFnKind(_self_, &(_18568_sf));;
					if ((_18599_sfK != nullptr)) {
						_18558_exist=_204b22610_equalTrait(_18574_tfK, &(_18599_sfK));
					};
				};
				if (_18558_exist) {
					jule::Ptr<_204a2902d_Directive> _18655_d = _204cd2209_findDirective(&((*(_18568_sf))._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18655_d != nullptr)) {
						_204c3238a_pushErr(_self_, (*_18655_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_204c3238a_pushErr(_self_, (*((*(_185342_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185363_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_204b23545_GetKindStr(_18574_tfK.ptr(), true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_208c85b9d:;
			++it;
			goto _iter_begin_208c85b9d;
		}
		_iter_end_208c85b9d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c46569_checkStructImpls(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _187938_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_187938_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c8c0b1:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _188115_trt = *it;
			{
				__jule_func_result=(_204c46228_checkStructTraitImpl(_self_, _187938_s, &(_188115_trt)) && __jule_func_result);
			}
			_iter_next_208c8c0b1:;
			++it;
			goto _iter_begin_208c8c0b1;
		}
		_iter_end_208c8c0b1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _204c468aa_checkStructFields(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _188739_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188739_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c8d557:;
		if (it != expr_end) {
			jule::Ptr<_204a47579_Field> _188915_f = *it;
			{
				(*(_188915_f))._field_Owner=(*(_188739_st));
				{
					auto expr = &((*((*(_188739_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208c8e316:;
					if (it != expr_end) {
						jule::Ptr<_204a47579_Field> _189111_cf = *it;
						{
							if ((_188915_f == _189111_cf)) {
								goto _iter_end_208c8e316;
							} else if (((*_188915_f.alloc)._field_Ident == (*(_189111_cf))._field_Ident)) {
								_204c3238a_pushErr(_self_.ptr(), (*_188915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_188915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_208c8e316:;
						++it;
						goto _iter_begin_208c8e316;
					}
					_iter_end_208c8e316:;
				};
			}
			_iter_next_208c8d557:;
			++it;
			goto _iter_begin_208c8d557;
		}
		_iter_end_208c8d557:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _204c46b63_checkStructDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _190437_s) {
	if (_204a16aed_IsIgnoreIdent((*((*(_190437_s))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_190437_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_204c330a0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190437_s))), &((*((*(_190437_s))))._field_Ident), (*((*(_190437_s))))._field_Binded)) {
		_204c3238a_pushErr(_self_, (*((*(_190437_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190437_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_204c33413_checkDirectives(_self_, &((*((*(_190437_s))))._field_Directives), jule::Any((*(_190437_s)), &__jule_any_type9));
	{
		
		if ((!(_204c41e8d_checkDeclGenerics(_self_, &((*((*(_190437_s))))._field_Generics))))) {
			_case_begin_208c9464b:;
		}
		else if ((!(_204c468aa_checkStructFields(_self_, _190437_s)))) {
			_case_begin_208c946b2:;
		}
		else if ((!(_204c46569_checkStructImpls(_self_, _190437_s)))) {
			_case_begin_208c94728:;
		}
		else if ((!(_204c4779b_checkFuncDeclsBy(_self_, &((*((*(_190437_s))))._field_Methods))))) {
			_case_begin_208c9478e:;
		}
		_match_end_208c94519:;
	};
}



inline jule::Bool _204c46de9_checkStructDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c96b04:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _192415_s = *it;
			{
				_204c46b63_checkStructDecl(_self_, &(_192415_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208c96b04:;
			++it;
			goto _iter_begin_208c96b04;
		}
		_iter_end_208c96b04:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _204c471a2_checkAnonFuncDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _193439_f) {
	(*((*(_193439_f))))._field_sema=_self_;
	_204c42c19_checkFnDeclPrototype(_self_, _193439_f);
}



inline void _204c4745a_checkFuncDecl(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _193935_f) {
	if (_204a16aed_IsIgnoreIdent((*((*(_193935_f))))._field_Ident)) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_193935_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_204b1e596_IsAnon((*(_193935_f)).ptr())) {
		_204c3238a_pushErr(_self_.ptr(), (*((*(_193935_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_204c33413_checkDirectives(_self_, &((*((*(_193935_f))))._field_Directives), jule::Any((*(_193935_f)), &__jule_any_type10));
	_204c471a2_checkAnonFuncDecl(_self_, _193935_f);
	if ((((*((*(_193935_f))))._field_Owner == nullptr) && _204c330a0_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_193935_f))), &((*((*(_193935_f))))._field_Ident), (*((*(_193935_f))))._field_Binded))) {
		if ((*((*(_193935_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_204b1d5a6_Fn> _19515_init = _204c30a4d_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19515_init != nullptr)) {
				return;;
			};
		};
		_204c3238a_pushErr(_self_, (*((*(_193935_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_193935_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _204c4779b_checkFuncDeclsBy(jule::Ptr<_204c2e486_sema> _self_, jule::Slice<jule::Ptr<_204b1d5a6_Fn>>* _196138_funcs) {
	{
		auto expr = _196138_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208c9e59b:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _196215_f = *it;
			{
				_204c4745a_checkFuncDecl(_self_, &(_196215_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_208c9e59b:;
			++it;
			goto _iter_begin_208c9e59b;
		}
		_iter_end_208c9e59b:;
	};
	return true;;
}



inline jule::Bool _204c47a32_checkFuncDecls(jule::Ptr<_204c2e486_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _204c4779b_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _204c47e50_pushCycleError(_204c2e486_sema* _self_, jule::Str* _197727_st1, jule::Str* _197738_st2, _1eeabb290_Builder* _197753_message) {
	;
	jule::Str _19793_refersTo = _1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_197727_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_197738_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19803_m = _1eeabcaee_Str(_197753_message);;
	({
		auto except = _1eeabc26e_WriteStr(_197753_message, _200e338ae_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1981:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_197753_message, _19793_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1982:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_197753_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1983:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_197753_message, _19803_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1984:3"));
		(except.result);
	});
}



inline void _204c48604_checkPackageDecls(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ca62b7:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _200415_f = *it;
			{
				_204c31e6c_setCurrentFile(_self_.ptr(), _200415_f);
				if ((!(_204c3edae_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_208ca62b7:;
			++it;
			goto _iter_begin_208ca62b7;
		}
		_iter_end_208ca62b7:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ca6790:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _201115_f = *it;
			{
				_204c31e6c_setCurrentFile(_self_, _201115_f);
				if ((!(_204c44369_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_208ca6790:;
			++it;
			goto _iter_begin_208ca6790;
		}
		_iter_end_208ca6790:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ca775d:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _201815_f = *it;
			{
				_204c31e6c_setCurrentFile(_self_, _201815_f);
				if ((!(_204c45d2c_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_208ca775d:;
			++it;
			goto _iter_begin_208ca775d;
		}
		_iter_end_208ca775d:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ca87a3:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _202515_f = *it;
			{
				_204c31e6c_setCurrentFile(_self_, _202515_f);
				{
					
					if ((!(_204c47a32_checkFuncDecls(_self_)))) {
						_case_begin_208ca9ebe:;
					}
					else if ((!(_204c46de9_checkStructDecls(_self_)))) {
						_case_begin_208caa068:;
					}
					else {
						_case_begin_208ca9919:;
						{
							goto _iter_next_208ca87a3;
						}
					}
					_match_end_208ca9e25:;
				};
				return;;
			}
			_iter_next_208ca87a3:;
			++it;
			goto _iter_begin_208ca87a3;
		}
		_iter_end_208ca87a3:;
	};
}



inline void _204c48967_checkDataForTypeInference(_204c2e486_sema* _self_, jule::Ptr<_204ca2b7a_Data>* _203742_d, jule::Ptr<_204a14216_Token>* _203753_errToken) {
	{
		
		if (_204ca3098_IsNil((*(_203742_d)).ptr())) {
			_case_begin_208cab0d0:;
			{
				_204c3238a_pushErr(_self_, (*(_203753_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_204ca332e_IsVoid((*(_203742_d)).ptr())) {
			_case_begin_208cab179:;
			{
				_204c3238a_pushErr(_self_, (*(_203753_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_203742_d))))._field_Type))._field_Variadic) {
			_case_begin_208cab1e0:;
			{
				_204c3238a_pushErr(_self_, (*(_203753_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_208caae9d:;
	};
}



inline void _204c48c20_checkVarValue(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _204935_v) {
	if (_204c53840_IsTypeInferred((*(_204935_v)).ptr())) {
		(*((*(_204935_v))))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_204935_v))))._field_Value))._field_Data))._field_Type});
		_204c48967_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_204935_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_204935_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_204c3e111_checkValidityForInitExpr(_self_, (*((*(_204935_v))))._field_Mutable, (*((*(_204935_v))))._field_Reference, &((*((*((*(_204935_v))))._field_TypeSym))._field_Type), &((*(*((*(_204935_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_204935_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_204cea3ba_Arr> _20628_arr = _204cdde08_Arr((*((*((*(_204935_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_20628_arr != nullptr)) {
			if ((*_20628_arr.alloc)._field_Auto) {
				jule::Ptr<_204cea3ba_Arr> _20656_dataArr = _204cdde08_Arr((*((*((*((*(_204935_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_20656_dataArr != nullptr)) {
					(*_20628_arr.alloc)._field_N=(*_20656_dataArr.alloc)._field_N;
				};
			};
		};
		if (_204c3987b_checkAssignType(_self_, (*((*(_204935_v))))._field_Reference, &((*(*((*(_204935_v))))._field_TypeSym.alloc)._field_Type), &((*((*((*(_204935_v))))._field_Value))._field_Data), (*((*(*((*(_204935_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_204935_v))))._field_Refers)) {
			_204c3e111_checkValidityForInitExpr(_self_, (*((*(_204935_v))))._field_Mutable, (*((*(_204935_v))))._field_Reference, &((*(*((*(_204935_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_204935_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_204935_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if ((*((*(_204935_v))))._field_Constant) {
		if (((!(_204ca35b5_IsConst((*((*((*(_204935_v))))._field_Value))._field_Data.ptr()))) && (!(_204ce01e5_comptime((*(*((*((*(_204935_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_204c3238a_pushErr(_self_.ptr(), (*((*(*((*(_204935_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_204935_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_204935_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_204cdee5e_Tup((*((*((*(_204935_v))))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
		(*(*((*(_204935_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _204c49083_evalVarValue(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _209834_decl, jule::Trait _209850_l) {
	if ((!(_204c535a9_IsInitialized((*(_209834_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_204ca4b49_eval> _21037_eval = static_cast<jule::Ptr<_204ca4b49_eval>>(nullptr);;
	if (((*((*(_209834_decl))))._field_TypeSym != nullptr)) {
		_21037_eval=_204c38a23_evalpd(_self_, _209850_l, (*(*((*(_209834_decl))))._field_TypeSym.alloc)._field_Type, (*(_209834_decl)));
	} else {
		_21037_eval=_204c38a23_evalpd(_self_, _209850_l, nullptr, (*(_209834_decl)));
	};
	(*(_21037_eval))._field_target._field_mutable=(*((*(_209834_decl))))._field_Mutable;
	(*((*((*(_209834_decl))))._field_Value))._field_Data=_204cc8794_evalExpr(_21037_eval, (*(*((*(_209834_decl))))._field_Value.alloc)._field_Expr);
}



inline void _204c493e6_checkVar(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204c5319c_Var>* _211530_decl, jule::Trait _211546_l) {
	_204c49083_evalVarValue(_self_, _211530_decl, _211546_l);
	if (((*((*((*(_211530_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_204c48c20_checkVarValue(_self_, _211530_decl);
}



inline void _204c495e4_checkGlobals(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208cc1a0d:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _212515_decl = *it;
			{
				if (((*(_212515_decl))._field_Binded || (*(_212515_decl))._field_Used)) {
					goto _iter_next_208cc1a0d;
				};
				_204c493e6_checkVar(_self_, &(_212515_decl), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));
			}
			_iter_next_208cc1a0d:;
			++it;
			goto _iter_begin_208cc1a0d;
		}
		_iter_end_208cc1a0d:;
	};
}



inline jule::Ptr<_204b21664_FnIns> _204c499e0_readyToCheckFn(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _213836_s, jule::Ptr<_204b1d5a6_Fn>* _213856_f) {
	jule::Ptr<_204b21664_FnIns> _21397_ins = _204b1ed49_instance((*(_213856_f)));;
	if (((*((*(_213856_f))))._field_Instances.len() != 0LL)) {
		return _21397_ins;;
	};
	(*(_21397_ins))._field_Owner=(*(_213836_s));
	_204b20157_appendInstance((*(_213856_f)).ptr(), &(_21397_ins));
	(*_21397_ins.alloc)._field_reloaded=true;
	if (_204c3d1ed_reloadFnInsTypes(_self_, _21397_ins)) {
		return _21397_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _204c49ddb_checkGenericFn(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _215436_f, jule::Ptr<_204a14216_Token>* _215452_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_204c3d1ed_reloadFnInsTypes(_self_, (*(_215436_f)));
	(*((*(_215436_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204b21664_FnIns> _21607_existInstance = _204b20157_appendInstance((*((*(_215436_f))))._field_Decl.ptr(), _215436_f);;
	if ((!(_204c3bd56_checkConstraintsFn(_self_, _215436_f, _215452_et, _21607_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21607_existInstance != nullptr)) {
		(*(_215436_f))=_21607_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_204c4c949_checkFnInsCaller(_self_, _215436_f, (*(_215452_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _204c4a24e_checkTypeMethod(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _217737_s, jule::Ptr<_204b1d5a6_Fn>* _217757_f) {
	if (((*((*(_217757_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_204b21664_FnIns> _21827_ins = (*((*(_217757_f))))._field_Instances[0LL];;
	if (((*((*(_21827_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_204c4cc02_checkFnIns(_self_, &(_21827_ins));
}



inline jule::Ptr<_204b21664_FnIns> _204c4a705_checkStructInsOp(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _219038_s, jule::Ptr<_204b1d5a6_Fn>* _219058_f, jule::Fn<jule::Bool,jule::Ptr<_204b1d5a6_Fn>> _219066_p) {
	if (((((*(_219058_f)) == nullptr) || ((*((*(_219058_f))))._field_Generics.len() > 0LL)) || (!(_219066_p((*(_219058_f))))))) {
		return nullptr;;
	};
	return (*((*(_219058_f))))._field_Instances[0LL];;
}



inline jule::Bool _204c4ab01_checkStructEnv(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _220036_s, jule::Ptr<_204a14216_Token> _220055_errorToken) {
	jule::Bool __jule_func_result = false;
	_204cecd7e_typeChecker _22017_tc = _204cecd7e_typeChecker{._field_s=(*((*((*(_220036_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220036_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220036_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_204cebd8e_referencer>(_204cebd8e_referencer{._field_ident=(*(*((*(_220036_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220036_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220036_s))))._field_Refers, ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220036_s))))._field_Generics.len() > 0LL)) {
		_22017_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>::alloc(0LL, (*((*(_220036_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cd9b90_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220036_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208cd0500:;
			if (it != expr_end) {
				jule::I32 _22149_i = it - expr->begin();
				jule::Ptr<_204cd909b_InsGeneric> _221416_g = *it;
				{
					jule::Ptr<_204a36d1b_GenericDecl> _22159_decl = (*(*((*(_220036_s))))._field_Decl.alloc)._field_Generics[_22149_i];;
					{ jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> &__jule_push_dest = _22017_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_204cd9b90_TypeAlias>(_204cd9b90_TypeAlias{._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22159_decl.alloc)._field_Token, ._field_Ident=(*(_22159_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_221416_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr)})); };
				}
				_iter_next_208cd0500:;
				++it;
				_22149_i++;
				goto _iter_begin_208cd0500;
			}
			_iter_end_208cd0500:;
		};
	};
	jule::Ptr<_204b248a9_SymTab> _22247_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_204c31e6c_setCurrentFile(_self_, _22247_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220036_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_204b248a9_SymTab> _22288_file = _204c2d100_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220036_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22288_file != nullptr)) {
			_204c31e6c_setCurrentFile(_self_, _22288_file);
		};
	};
	if (((*((*(_220036_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_204bc97c7_constraintChecker> _22358_cc = _204c37082_constraintChecker(_self_);;
		(*(_22358_cc))._field_et=_220055_errorToken;
		(*_22358_cc.alloc)._field_si=(*(_220036_s));
		(*_22358_cc.alloc)._field_genericsA=_22017_tc._field_useGenerics;
		(*_22358_cc.alloc)._field_uniq=true;
		if ((!(_204bca740_check(_22358_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220036_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _22488_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22017_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220036_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208cd8edc:;
			if (it != expr_end) {
				jule::Ptr<_204c5319c_Var> _225016_v = *it;
				{
					_204c457dd_checkVarDecl(_self_, &(_225016_v), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));
					_204c493e6_checkVar(_self_, &(_225016_v), jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22488_n) == 0LL) && __jule_func_result);
				}
				_iter_next_208cd8edc:;
				++it;
				goto _iter_begin_208cd8edc;
			}
			_iter_end_208cd8edc:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22017_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_204ca4b49_eval> _22617_eval = _204c39260_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));;
	(*((*(_220036_s))))._field_Comparable=(!((*(*((*(_220036_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220036_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208cdc9a2:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> _226315_f = *it;
			{
				jule::Ptr<_204cda982_Type> _22648_kind = _204d05969_checkDecl(&_22017_tc, &((*((*((*(_226315_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_22648_kind != nullptr) && __jule_func_result);
				if ((_22648_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220036_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220036_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220036_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220036_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_208cdc9a2;
				};
				(*_226315_f.alloc)._field_Type=_22648_kind;
				(*((*(_220036_s))))._field_Mutable=((*((*(_220036_s))))._field_Mutable || ((!((*(*(_226315_f))._field_Decl.alloc)._field_Mutable)) && _204cdc368_Mutable((*_226315_f.alloc)._field_Type.ptr())));
				(*((*(_220036_s))))._field_Comparable=((*((*(_220036_s))))._field_Comparable && _204cdc0d2_Comparable((*_226315_f.alloc)._field_Type.ptr()));
				if (((*(*(_226315_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_208cdc9a2;
				};
				(*(_22617_eval))._field_prefix=(*_226315_f.alloc)._field_Type;
				(*_22617_eval.alloc)._field_field=_226315_f;
				(*_22617_eval.alloc)._field_target._field_mutable=true;
				(*_226315_f.alloc)._field_Default=_204cc8794_evalExpr(_22617_eval, (*(*(_226315_f))._field_Decl.alloc)._field_Default);
				if (((*_226315_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_208cdc9a2;
				};
				;
				_204c3987b_checkAssignType(_self_, false, &((*_226315_f.alloc)._field_Type), &((*_226315_f.alloc)._field_Default), (*((*(*(_226315_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220036_s))))._field_Refers);
			}
			_iter_next_208cdc9a2:;
			++it;
			goto _iter_begin_208cdc9a2;
		}
		_iter_end_208cdc9a2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _204c4aeec_precheckStructIns(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _229839_s, jule::Ptr<_204a14216_Token> _229858_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_204c4ab01_checkStructEnv(_self_, _229839_s, _229858_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_229839_s))))._field_Comparable && ((*((*(_229839_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_204b1d5a6_Fn> _23098_decl = _2046da3c6_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_229839_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208ce8c44:;
			if (it != expr_end) {
				jule::Ptr<_204a4c727_FieldIns> _231016_field = *it;
				{
					jule::Ptr<_204cea3ba_Arr> _23119_arr = _204cdde08_Arr((*(_231016_field))._field_Type.ptr());;
					if ((_23119_arr == nullptr)) {
						goto _iter_next_208ce8c44;
					};
					jule::Ptr<_204b21664_FnIns> _23159_f = _204b1eab3_instanceForce(_23098_decl);;
					(*(_23159_f))._field_Generics=jule::append((*_23159_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=(*(_23119_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204c49ddb_checkGenericFn(_self_, &(_23159_f), &((*((*_231016_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2319:6"));;
					};
					_204c00e19_Push((*((*(_229839_s))))._field_Refers.ptr(), jule::Any(_23159_f, &__jule_any_type65));
				}
				_iter_next_208ce8c44:;
				++it;
				goto _iter_begin_208ce8c44;
			}
			_iter_end_208ce8c44:;
		};
	};
	{
		auto expr = &((*((*(_229839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ceccc0:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _232515_f = *it;
			{
				if (((*(_232515_f))._field_Generics.len() == 0LL)) {
					if ((_204c499e0_readyToCheckFn(_self_, _229839_s, &(_232515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_208ceccc0:;
			++it;
			goto _iter_begin_208ceccc0;
		}
		_iter_end_208ceccc0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _204c4b2a5_checkStructIns(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns>* _233536_s) {
	{
		auto expr = &((*((*(_233536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208cee783:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _233615_f = *it;
			{
				_204c4a24e_checkTypeMethod(_self_, _233536_s, &(_233615_f));
			}
			_iter_next_208cee783:;
			++it;
			goto _iter_begin_208cee783;
		}
		_iter_end_208cee783:;
	};
}



inline void _204c4b55d_checkTypeStruct(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _234137_s) {
	if ((*((*(_234137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d01279:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _235415_ins = *it;
			{
				_204c4b2a5_checkStructIns(_self_, &(_235415_ins));
			}
			_iter_next_208d01279:;
			++it;
			goto _iter_begin_208d01279;
		}
		_iter_end_208d01279:;
	};
}



inline void _204c4b75b_checkStructTypes(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d02236:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _236015_s = *it;
			{
				_204c4b55d_checkTypeStruct(_self_, &(_236015_s));
			}
			_iter_next_208d02236:;
			++it;
			goto _iter_begin_208d02236;
		}
		_iter_end_208d02236:;
	};
}



inline void _204c4ba14_checkStructInsOperators(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4d2c7_StructIns> _236544_s) {
	{
		auto expr = &((*(_236544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d031c1:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _236615_m = *it;
			{
				{
					auto &_match_expr{ (*(_236615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_208d038ca:;
						{
							(*(_236544_s))._field_Operators._field_Eq=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c54ca3_Eq);
							(*_236544_s.alloc)._field_Comparable=((*_236544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_208d03ec4:;
						{
							(*(_236544_s))._field_Operators._field_Gt=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5506c_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_208d0403a:;
						{
							(*_236544_s.alloc)._field_Operators._field_GtEq=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c55336_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_208d040a1:;
						{
							(*_236544_s.alloc)._field_Operators._field_Lt=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c55600_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_208d04117:;
						{
							(*_236544_s.alloc)._field_Operators._field_LtEq=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c558b9_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_208d0418e:;
						{
							(*_236544_s.alloc)._field_Operators._field_Shl=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c56007_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_208d04216:;
						{
							(*_236544_s.alloc)._field_Operators._field_Shr=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c562c1_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_208d0428d:;
						{
							(*_236544_s.alloc)._field_Operators._field_Add=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5658a_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_208d04315:;
						{
							(*_236544_s.alloc)._field_Operators._field_Sub=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c56854_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_208d0438c:;
						{
							(*_236544_s.alloc)._field_Operators._field_Div=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c56b1d_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_208d04414:;
						{
							(*_236544_s.alloc)._field_Operators._field_Mul=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c56dd7_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_208d0448b:;
						{
							(*_236544_s.alloc)._field_Operators._field_Mod=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c571a1_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_208d04513:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitAnd=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5746a_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_208d0458a:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitOr=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c57734_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_208d04612:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitXor=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c579ed_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_208d04689:;
						{
							(*_236544_s.alloc)._field_Operators._field_Neg=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5813b_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_208d04711:;
						{
							(*_236544_s.alloc)._field_Operators._field_Pos=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c58405_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_208d04788:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitNot=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c586be_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_208d04810:;
						{
							(*_236544_s.alloc)._field_Operators._field_AddAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c58d0c_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_208d04887:;
						{
							(*_236544_s.alloc)._field_Operators._field_SubAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c590c6_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_208d0490e:;
						{
							(*_236544_s.alloc)._field_Operators._field_DivAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c59390_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_208d04986:;
						{
							(*_236544_s.alloc)._field_Operators._field_MulAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c59659_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_208d04a0d:;
						{
							(*_236544_s.alloc)._field_Operators._field_ModAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c59923_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_208d04a85:;
						{
							(*_236544_s.alloc)._field_Operators._field_ShlAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c59bdc_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_208d04b0c:;
						{
							(*_236544_s.alloc)._field_Operators._field_ShrAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c59ea6_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_208d04b84:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitOrAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5a270_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_208d04c0b:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitAndAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5a539_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_208d04c83:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitXorAssign=_204c4a705_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__204c5a803_BitXorAssign);
						}
					}
					_match_end_208d03ba5:;
				};
			}
			_iter_next_208d031c1:;
			++it;
			goto _iter_begin_208d031c1;
		}
		_iter_end_208d031c1:;
	};
}



inline void _204c4bcbc_precheckStructType(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204a4a46c_Struct>* _242940_s) {
	if ((*((*(_242940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_242940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_242940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_204a4d2c7_StructIns> _24408_ins = _204a4a912_instance((*(_242940_s)));;
		(*(_24408_ins))._field_Checked=true;
		_204a4ac20_appendInstance((*(_242940_s)).ptr(), &(_24408_ins));
		jule::Bool _24434_ok = _204c4aeec_precheckStructIns(_self_, &(_24408_ins), nullptr);;
		if ((!(_24434_ok))) {
			return;;
		};
	};
	_204c4ba14_checkStructInsOperators(_self_, (*((*(_242940_s))))._field_Instances[0LL]);
}



inline void _204c4beba_precheckStructTypes(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d1b3b5:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _245315_s = *it;
			{
				_204c4bcbc_precheckStructType(_self_, &(_245315_s));
			}
			_iter_next_208d1b3b5:;
			++it;
			goto _iter_begin_208d1b3b5;
		}
		_iter_end_208d1b3b5:;
	};
}



inline void _204c4c273_checkRets(_204c2e486_sema* _self_, jule::Ptr<_204b21664_FnIns>* _245830_f) {
	if (_204b1da5c_IsVoid((*((*(_245830_f))))._field_Decl.ptr())) {
		return;;
	};
	_204c4e6b5_missingRetChecker _24623_mrc = static__204c4eab1_new();;
	jule::Bool _24633_ok = _204c50c8d_check(&_24623_mrc, (*((*(_245830_f))))._field_Scope);;
	if ((!(_24633_ok))) {
		_204c3238a_pushErr(_self_, (*((*((*(_245830_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _204c4c5d6_checkFnInsSc(_204c2e486_sema* _self_, jule::Ptr<_204b21664_FnIns>* _246933_f, jule::Ptr<_204bd8929_scopeChecker>* _246949_sc) {
	_204c2c660_appendRetVars(&((*((*((*(_246949_sc))))._field_table))._field_Vars), _246933_f);
	_204c2c990_appendParamVars(&((*(*((*(_246949_sc))))._field_table.alloc)._field_Vars), _246933_f);
	_204c2cc7b_appendGenericTypeAliases(&((*(*((*(_246949_sc))))._field_table.alloc)._field_TypeAliases), _246933_f);
	_204beaaa1_check((*(_246949_sc)), &((*((*((*(_246933_f))))._field_Decl))._field_Scope), &((*((*(_246933_f))))._field_Scope));
	if ((!(_204bdb531_stopped((*(_246949_sc)).ptr())))) {
		_204c4c273_checkRets(_self_, _246933_f);
	};
}



inline void _204c4c949_checkFnInsCaller(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _248238_f, jule::Ptr<_204a14216_Token> _248253_caller) {
	if ((*((*((*(_248238_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_204b248a9_SymTab> _24877_old = (*((*((*((*(_248238_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_204c31e6c_setCurrentFile((*((*((*(_248238_f))))._field_Decl))._field_sema, _24877_old);
	});;
	jule::Ptr<_204b248a9_SymTab> _24897_file = _204c2d100_findFile(&((*(*((*((*(_248238_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248238_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24897_file != nullptr)) {
		_204c31e6c_setCurrentFile((*((*((*(_248238_f))))._field_Decl))._field_sema, _24897_file);
	};
	jule::Ptr<_204bd8929_scopeChecker> _24947_sc = _204bce007_newScopeChecker(&((*(*((*(_248238_f))))._field_Decl.alloc)._field_sema), (*(_248238_f)));;
	(*(_24947_sc))._field_calledFrom=_248253_caller;
	_204c4c5d6_checkFnInsSc(_self_.ptr(), _248238_f, &(_24947_sc));
	if (((*(*((*(_248238_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*((*(*((*(_248238_f))))._field_Decl.alloc)._field_sema))._field_errors);
		(*(*((*((*(_248238_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _204c4cc02_checkFnIns(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b21664_FnIns>* _250432_f) {
	_204c4c949_checkFnInsCaller(_self_, _250432_f, nullptr);
}



inline void _204c4ceaa_checkFunc(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _250831_f) {
	if ((*((*(_250831_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_250831_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_250831_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d299de:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _251815_ins = *it;
			{
				_204c4cc02_checkFnIns(_self_, &(_251815_ins));
			}
			_iter_next_208d299de:;
			++it;
			goto _iter_begin_208d299de;
		}
		_iter_end_208d299de:;
	};
}



inline void _204c4d263_checkTestFn(_204c2e486_sema* _self_, jule::Ptr<_204b21664_FnIns>* _252332_f) {
	if ((*((*((*(_252332_f))))._field_Decl))._field_Public) {
		_204c3238a_pushErr(_self_, (*(*((*(_252332_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_252332_f))))._field_Decl))._field_Unsafety || (!(_204b1da5c_IsVoid((*((*(_252332_f))))._field_Decl.ptr())))) || ((*((*((*(_252332_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_252332_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_252332_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_252332_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_204c3238a_pushErr(_self_, (*((*((*(_252332_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204ce75c6_Sptr> _25417_sptr = _204cdd3be_Sptr((*((*((*(_252332_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25417_sptr == nullptr)) {
		_204c3238a_pushErr(_self_, (*((*((*(_252332_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _25483_s = _204cde6ab_Struct((*(_25417_sptr))._field_Elem.ptr());;
	if (((_25483_s == nullptr) || (!(_204c16d86_isStdPackage(&((*((*((*((*(_25483_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_204c3238a_pushErr(_self_, (*((*((*(_252332_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_204c326ed_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _204c4d51b_precheckFunc(jule::Ptr<_204c2e486_sema> _self_, jule::Ptr<_204b1d5a6_Fn>* _255634_f) {
	if ((*((*(_255634_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_255634_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_255634_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_204b21664_FnIns> _25678_ins = _204b1eab3_instanceForce((*(_255634_f)));;
		{ jule::Slice<jule::Ptr<_204b21664_FnIns>> &__jule_push_dest = (*((*(_255634_f))))._field_Instances; __jule_push_dest.push(_25678_ins); };
		jule::Bool _25694_ok = _204c3d1ed_reloadFnInsTypes(_self_, _25678_ins);;
		(*(_25678_ins))._field_reloaded=true;
		if ((_25694_ok && _204d06eed_hasDirective(&((*((*(_255634_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_204c4d263_checkTestFn(_self_, &(_25678_ins));
		};
	};
}



inline void _204c4d719_precheckFuncs(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d38745:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _258015_decl = *it;
			{
				{
					auto expr = &((*(_258015_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208d3923a:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _258116_m = *it;
						{
							_204c4d51b_precheckFunc(_self_, &(_258116_m));
						}
						_iter_next_208d3923a:;
						++it;
						goto _iter_begin_208d3923a;
					}
					_iter_end_208d3923a:;
				};
			}
			_iter_next_208d38745:;
			++it;
			goto _iter_begin_208d38745;
		}
		_iter_end_208d38745:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d38cea:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _258515_decl = *it;
			{
				_204c4d51b_precheckFunc(_self_, &(_258515_decl));
			}
			_iter_next_208d38cea:;
			++it;
			goto _iter_begin_208d38cea;
		}
		_iter_end_208d38cea:;
	};
}



inline void _204c4d917_checkFuncs(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d3a989:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _259215_decl = *it;
			{
				_204c4ceaa_checkFunc(_self_, &(_259215_decl));
			}
			_iter_next_208d3a989:;
			++it;
			goto _iter_begin_208d3a989;
		}
		_iter_end_208d3a989:;
	};
}



inline void _204c4db15_checkPackageTypes(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d3b76a:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _260015_f = *it;
			{
				_204c31e6c_setCurrentFile(_self_.ptr(), _260015_f);
				_204c495e4_checkGlobals(_self_);
				_204c4d719_precheckFuncs(_self_);
				_204c4beba_precheckStructTypes(_self_);
			}
			_iter_next_208d3b76a:;
			++it;
			goto _iter_begin_208d3b76a;
		}
		_iter_end_208d3b76a:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d3d2e9:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _261115_f = *it;
			{
				_204c31e6c_setCurrentFile(_self_, _261115_f);
				_204c4d917_checkFuncs(_self_);
				_204c4b75b_checkStructTypes(_self_);
			}
			_iter_next_208d3d2e9:;
			++it;
			goto _iter_begin_208d3d2e9;
		}
		_iter_end_208d3d2e9:;
	};
}



inline void _204c4dd13_setFileSemaFields(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d3e8d3:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _261915_f = *it;
			{
				(*(_261915_f))._field_sema=_self_;
			}
			_iter_next_208d3e8d3:;
			++it;
			goto _iter_begin_208d3e8d3;
		}
		_iter_end_208d3e8d3:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d40010:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _262215_st = *it;
			{
				(*(_262215_st))._field_sema=_self_;
			}
			_iter_next_208d40010:;
			++it;
			goto _iter_begin_208d40010;
		}
		_iter_end_208d40010:;
	};
}



inline void _204c4e011_setSemaFields(jule::Ptr<_204c2e486_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d4120e:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _262815_file = *it;
			{
				_204c31e6c_setCurrentFile(_self_.ptr(), _262815_file);
				_204c4dd13_setFileSemaFields(_self_);
			}
			_iter_next_208d4120e:;
			++it;
			goto _iter_begin_208d4120e;
		}
		_iter_end_208d4120e:;
	};
}



inline void _204c4e2b9_check(jule::Ptr<_204c2e486_sema> _self_, jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _263427_files) {
	(*(_self_))._field_files=(*(_263427_files));
	_204c4e011_setSemaFields(_self_);
	_204c3527d_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_204c35c73_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_204c35679_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_204c35877_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_204c48604_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_204c4db15_checkPackageTypes(_self_);
}







inline _204c4e6b5_missingRetChecker static__204c4eab1_new(void) {
	return _204c4e6b5_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _204c4edbe_checkConditional(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd1d1d_Conditional> _268232_c) {
	{
		auto expr = &((*(_268232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d468a7:;
		if (it != expr_end) {
			jule::Ptr<_204bd1603_If> _268315_elif = *it;
			{
				if ((_268315_elif == nullptr)) {
					return false;;
				};
				if ((!(_204c5094c_checkScope(_self_, (*(_268315_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_208d468a7:;
			++it;
			goto _iter_begin_208d468a7;
		}
		_iter_end_208d468a7:;
	};
	return (((*_268232_c.alloc)._field_Default != nullptr) && _204c5094c_checkScope(_self_, (*((*_268232_c.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _204c50210_checkMatch(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd59e2_Match> _269426_m) {
	{
		auto expr = &((*(_269426_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d48975:;
		if (it != expr_end) {
			jule::Ptr<_204bd651a_Case> _269515_c = *it;
			{
				if ((_269515_c == nullptr)) {
					return false;;
				};
				jule::I32 _26994_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27004_ok = _204c5094c_checkScope(_self_, (*(_269515_c))._field_Scope);;
				{
					
					if ((_26994_n != (*(_self_))._field_breaked.len())) {
						_case_begin_208d4a4c1:;
						{
							return false;;
						}
					}
					else if ((!(_27004_ok))) {
						_case_begin_208d4a559:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_208d4a5c0;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_208d4a5c0:;
						{
							(*(_self_))._field_falled=false;
							if (((*_269515_c.alloc)._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_208d48975;
						}
					}
					_match_end_208d4a45a:;
				};
			}
			_iter_next_208d48975:;
			++it;
			goto _iter_begin_208d48975;
		}
		_iter_end_208d48975:;
	};
	return (((*_269426_m.alloc)._field_Default != nullptr) && _204c5094c_checkScope(_self_, (*((*_269426_m.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _204c5060b_checkInfIter(_204c4e6b5_missingRetChecker* _self_, jule::Uintptr _272024_it, jule::Ptr<_204bd11d5_Scope>* _272042_s) {
	jule::I32 _27213_n = (*(_self_))._field_breaked.len();;
	if (_204c5094c_checkScope(_self_, (*(_272042_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27213_n);;
		return true;;
	};
	if ((_27213_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27213_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_208d4de42:;
			if (it != expr_end) {
				jule::Uintptr _272711_addr = *it;
				{
					if ((_272024_it == _272711_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27213_n);;
						return false;;
					};
				}
				_iter_next_208d4de42:;
				++it;
				goto _iter_begin_208d4de42;
			}
			_iter_end_208d4de42:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27213_n);;
	};
	return true;;
}



inline jule::Bool _204c5094c_checkScope(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd11d5_Scope> _273826_s) {
	if ((_273826_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_273826_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d504a4:;
		if (it != expr_end) {
			jule::Any _274215_st = *it;
			{
				{
					auto &_match_expr{ _274215_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_208d5121e:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_208d50ecc:;
						{
							jule::Uintptr _27485_addr = (*(_274215_st.unsafe_cast_ptr<_204bd377b_BreakSt>()))._field_It;;
							if ((_27485_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27485_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type38) {
						_case_begin_208d51296:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type33) {
						_case_begin_208d5131d:;
						{
							jule::Ptr<_204bd211a_InfIter> _27569_ii = _274215_st.unsafe_cast_ptr<_204bd211a_InfIter>();;
							if (_204c5060b_checkInfIter(_self_, static_cast<jule::Uintptr>(_27569_ii), &((*(_27569_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_208d51395:;
						{
							jule::Ptr<_204bd25c1_WhileIter> _27619_wn = _274215_st.unsafe_cast_ptr<_204bd25c1_WhileIter>();;
							if ((_204bd2967_IsWhileNext(_27619_wn.ptr()) && ((*_27619_wn.alloc)._field_Expr == nullptr))) {
								if (_204c5060b_checkInfIter(_self_, static_cast<jule::Uintptr>(_27619_wn), &((*_27619_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_208d5141c:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type20) {
						_case_begin_208d51494:;
						{
							if (_204c5094c_checkScope(_self_, _274215_st.unsafe_cast_ptr<_204bd11d5_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_208d5151b:;
						{
							{
								auto &_match_expr{ (*(_274215_st.cast_ptr<_204ca2b7a_Data>(&__jule_any_type22)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
									_case_begin_208d57357:;
									{
										return true;;
									}
								}
								_match_end_208d572ad:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_208d51593:;
						{
							if (_204c4edbe_checkConditional(_self_, _274215_st.unsafe_cast_ptr<_204bd1d1d_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_208d5161a:;
						{
							if (_204c50210_checkMatch(_self_, _274215_st.unsafe_cast_ptr<_204bd59e2_Match>())) {
								return true;;
							};
						}
					}
					_match_end_208d510dc:;
				};
			}
			_iter_next_208d504a4:;
			++it;
			goto _iter_begin_208d504a4;
		}
		_iter_end_208d504a4:;
	};
	return false;;
}



inline jule::Bool _204c50c8d_check(_204c4e6b5_missingRetChecker* _self_, jule::Ptr<_204bd11d5_Scope> _279321_s) {
	return _204c5094c_checkScope(_self_, _279321_s);;
}







inline jule::Bool _204c535a9_IsInitialized(_204c5319c_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _204c53840_IsTypeInferred(_204c5319c_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _204c53ac6_untypedConstant(_204c5319c_Var* _self_) {
	return (_204c53840_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__204c54665_Str(jule::Ptr<_204b1d5a6_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _204b1da5c_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _204b1c4b7_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_204b21664_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_204ce3a9a_Prim> _253_prim = _204cdd138_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _204ce7065_IsStr(_253_prim.ptr());;
}



inline jule::Bool static__204c549d9_logical(jule::Ptr<_204b1d5a6_Fn>* _3221_f, jule::Str _3229_ident) {
	if (((((((((((((((*(_3221_f)) == nullptr) || ((*((*(_3221_f))))._field_Ident != _3229_ident)) || ((*((*(_3221_f))))._field_Owner == nullptr)) || ((*((*(_3221_f))))._field_Instances.len() == 0LL)) || (*((*(_3221_f))))._field_Statically) || (*((*(_3221_f))))._field_Unsafety) || _204b1da5c_IsVoid((*(_3221_f)).ptr())) || ((*((*(_3221_f))))._field_Generics.len() != 0LL)) || ((*((*(_3221_f))))._field_Params.len() != 2LL)) || (*((*((*(_3221_f))))._field_Params[0LL]))._field_Mutable) || _204b1c4b7_IsRef((*((*(_3221_f))))._field_Params[0LL].ptr())) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_204b21664_FnIns> _497_ins = (*((*(_3221_f))))._field_Instances[0LL];;
	jule::Ptr<_204ce3a9a_Prim> _503_prim = _204cdd138_Prim((*(_497_ins))._field_Result.ptr());;
	if (((_503_prim == nullptr) || (!(_204ce6cce_IsBool(_503_prim.ptr()))))) {
		return false;;
	};
	return ((*_497_ins.alloc)._field_Owner == _204cde6ab_Struct((*((*_497_ins.alloc)._field_Params[1LL]))._field_Type.ptr()));;
}



inline jule::Bool static__204c54ca3_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _5815_f) {
	return static__204c549d9_logical(&(_5815_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__204c5506c_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _6315_f) {
	return static__204c549d9_logical(&(_6315_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__204c55336_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _6817_f) {
	return static__204c549d9_logical(&(_6817_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__204c55600_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _7315_f) {
	return static__204c549d9_logical(&(_7315_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__204c558b9_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _7817_f) {
	return static__204c549d9_logical(&(_7817_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__204c55c3d_result(jule::Ptr<_204b1d5a6_Fn>* _8220_f, jule::Str _8228_ident) {
	if (((((((((((((((*(_8220_f)) == nullptr) || ((*((*(_8220_f))))._field_Ident != _8228_ident)) || ((*((*(_8220_f))))._field_Owner == nullptr)) || ((*((*(_8220_f))))._field_Instances.len() == 0LL)) || (*((*(_8220_f))))._field_Statically) || (*((*(_8220_f))))._field_Unsafety) || _204b1da5c_IsVoid((*(_8220_f)).ptr())) || ((*((*(_8220_f))))._field_Generics.len() != 0LL)) || ((*((*(_8220_f))))._field_Params.len() != 2LL)) || (*((*((*(_8220_f))))._field_Params[0LL]))._field_Mutable) || _204b1c4b7_IsRef((*((*(_8220_f))))._field_Params[0LL].ptr())) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_204b21664_FnIns> _997_ins = (*((*(_8220_f))))._field_Instances[0LL];;
	return (_204cde6ab_Struct((*(_997_ins))._field_Result.ptr()) == (*_997_ins.alloc)._field_Owner);;
}



inline jule::Bool static__204c56007_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _10416_f) {
	return static__204c55c3d_result(&(_10416_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__204c562c1_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _10916_f) {
	return static__204c55c3d_result(&(_10916_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__204c5658a_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _11416_f) {
	return static__204c55c3d_result(&(_11416_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__204c56854_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _11916_f) {
	return static__204c55c3d_result(&(_11916_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__204c56b1d_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _12416_f) {
	return static__204c55c3d_result(&(_12416_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__204c56dd7_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _12916_f) {
	return static__204c55c3d_result(&(_12916_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__204c571a1_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _13416_f) {
	return static__204c55c3d_result(&(_13416_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__204c5746a_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _13919_f) {
	return static__204c55c3d_result(&(_13919_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__204c57734_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _14418_f) {
	return static__204c55c3d_result(&(_14418_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__204c579ed_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _14919_f) {
	return static__204c55c3d_result(&(_14919_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__204c57d72_unary(jule::Ptr<_204b1d5a6_Fn>* _15319_f, jule::Str _15327_ident) {
	if (((((((((((((*(_15319_f)) == nullptr) || ((*((*(_15319_f))))._field_Ident != _15327_ident)) || ((*((*(_15319_f))))._field_Owner == nullptr)) || ((*((*(_15319_f))))._field_Instances.len() == 0LL)) || (*((*(_15319_f))))._field_Statically) || (*((*(_15319_f))))._field_Unsafety) || _204b1da5c_IsVoid((*(_15319_f)).ptr())) || ((*((*(_15319_f))))._field_Generics.len() != 0LL)) || ((*((*(_15319_f))))._field_Params.len() != 1LL)) || (*((*((*(_15319_f))))._field_Params[0LL]))._field_Mutable) || _204b1c4b7_IsRef((*((*(_15319_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_204b21664_FnIns> _1687_ins = (*((*(_15319_f))))._field_Instances[0LL];;
	return (_204cde6ab_Struct((*(_1687_ins))._field_Result.ptr()) == (*_1687_ins.alloc)._field_Owner);;
}



inline jule::Bool static__204c5813b_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _17316_f) {
	return static__204c57d72_unary(&(_17316_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__204c58405_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _17816_f) {
	return static__204c57d72_unary(&(_17816_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__204c586be_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _18319_f) {
	return static__204c57d72_unary(&(_18319_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__204c58a43_assign(jule::Ptr<_204b1d5a6_Fn>* _18720_f, jule::Str _18728_ident) {
	if (((((((((((((((*(_18720_f)) == nullptr) || ((*((*(_18720_f))))._field_Ident != _18728_ident)) || ((*((*(_18720_f))))._field_Owner == nullptr)) || ((*((*(_18720_f))))._field_Instances.len() == 0LL)) || (*((*(_18720_f))))._field_Statically) || (*((*(_18720_f))))._field_Unsafety) || (!(_204b1da5c_IsVoid((*(_18720_f)).ptr())))) || ((*((*(_18720_f))))._field_Generics.len() != 0LL)) || ((*((*(_18720_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_18720_f))))._field_Params[0LL]))._field_Mutable))) || _204b1c4b7_IsRef((*((*(_18720_f))))._field_Params[0LL].ptr())) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__204c58d0c_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _20722_f) {
	return static__204c58a43_assign(&(_20722_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__204c590c6_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _21222_f) {
	return static__204c58a43_assign(&(_21222_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__204c59390_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _21722_f) {
	return static__204c58a43_assign(&(_21722_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__204c59659_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _22222_f) {
	return static__204c58a43_assign(&(_22222_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__204c59923_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _22722_f) {
	return static__204c58a43_assign(&(_22722_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__204c59bdc_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _23222_f) {
	return static__204c58a43_assign(&(_23222_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__204c59ea6_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _23722_f) {
	return static__204c58a43_assign(&(_23722_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__204c5a270_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _24224_f) {
	return static__204c58a43_assign(&(_24224_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__204c5a539_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _24725_f) {
	return static__204c58a43_assign(&(_24725_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__204c5a803_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn> _25225_f) {
	return static__204c58a43_assign(&(_25225_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _204c8deb8_typeCompatibilityChecker_eq(_204c8deb8_typeCompatibilityChecker *_self_, _204c8deb8_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _204c8e4e6_pushErr(_204c8deb8_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _204c8e77c_checkTrait(_204c8deb8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_204cdbab5_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_204b28cba_Trait> _1157_trt = _204cde942_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_204cdd3be_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_208d9a796:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_204cdd3be_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_204cde6ab_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_208d9a840;
			}
		}
		else if ((_204cde6ab_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_208d9a840:;
			{
				jule::Ptr<_204a4d2c7_StructIns> _1264_s = _204cde6ab_Struct((*(_self_))._field_src);;
				if ((!(_204a4bade_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _204c8ca55_traitHasReferenceReceiver(&(_1157_trt)))) {
					_204c8e4e6_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_204cde942_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_208d9a8b7:;
			{
				jule::Ptr<_204b28cba_Trait> _1368_base = _204cde942_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_208da0977:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208da0c1e:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_208da16ae:;
								if (it != expr_end) {
									jule::Ptr<_204a4a46c_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_208da0c1e;
										};
									}
									_iter_next_208da16ae:;
									++it;
									goto _iter_begin_208da16ae;
								}
								_iter_end_208da16ae:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_208da0c1e:;
						++it;
						goto _iter_begin_208da0c1e;
					}
					_iter_end_208da0c1e:;
				};
				{
					auto expr = &((*(_1157_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208da1a77:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_204b1d5a6_Fn> _1509_m2 = _204b2999c_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_204b21664_FnIns> _1545_m1k = _204c3b8a0_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_204b21664_FnIns> _1555_m2k = _204c3b8a0_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_204b22610_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_208da1a77:;
						++it;
						goto _iter_begin_208da1a77;
					}
					_iter_end_208da1a77:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_208d9a70d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_208d9a686:;
	};
}



inline jule::Bool _204c8ea13_checkPtr(_204c8deb8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_204cdbab5_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_204cead8d_Ptr> _1707_dest = _204cdd655_Ptr((*(_self_))._field_dest.ptr());;
	if (_204ceb90a_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _204cdb1be_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _204c8ec99_checkPrim(_204c8deb8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_204ce3a9a_Prim> _1794_prim = _204cdd138_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _204ce72eb_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _204cdb1be_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _204c90195_typeEnum(_204c8deb8_typeCompatibilityChecker* _self_, jule::Ptr<_204b2cb7b_TypeEnum>* _18725_e, jule::Ptr<_204cda982_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208da7ece:;
		if (it != expr_end) {
			jule::Ptr<_204b2c5a4_TypeEnumItem> _18815_item = *it;
			{
				if (_204cdb1be_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_204b2cb7b_TypeEnum> _1928_ke = _204cddb72_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type.ptr());;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_208da7ece;
				};
				if (_204c90195_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_208da7ece:;
			++it;
			goto _iter_begin_208da7ece;
		}
		_iter_end_208da7ece:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c9042b_checkTypeEnum(_204c8deb8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_204cdb1be_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_204b2cb7b_TypeEnum> _2077_e = _204cddb72_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _204c90195_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _204c906b2_check(_204c8deb8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_204cdd655_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _204c8ea13_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_204cdc885_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_204cdbab5_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_204cdd138_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_208dad7cb:;
			{
				__jule_func_result = _204c8ec99_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_204cddb72_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_208dad864:;
			{
				__jule_func_result = _204c9042b_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_204cde942_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_208dad259:;
			{
				__jule_func_result = _204c8e77c_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_208dacd91:;
			{
				__jule_func_result = _204cdb1be_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_208dac412:;
	};
}








inline jule::Bool _204c90d44_assignTypeChecker_eq(_204c90d44_assignTypeChecker *_self_, _204c90d44_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _204c9130b_pushErr(_204c90d44_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _204c91592_checkValidity(_204c90d44_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_204cde425_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_208db149e:;
			{
				jule::Ptr<_204b21664_FnIns> _2524_f = _204cde425_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_204b22b2c_IsBuiltin(_2524_f.ptr())) {
						_case_begin_208db2d1e:;
						{
							_204c9130b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_208db2db8:;
						{
							_204c9130b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*(*(_2524_f))._field_Decl.alloc)._field_Statically)) && _204b1dce3_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_208db2e2e:;
						{
							_204c9130b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*(*(_2524_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_208db2e95:;
						{
							_204c9130b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_204c326ed_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_208db2c31:;
				};
			}
		}
		else if ((_204cdee5e_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_208db1548:;
			{
				_204c9130b_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_208db1416:;
	};
	return _2497_valid;;
}



inline jule::Bool _204c91828_checkConst(_204c90d44_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_204cdd138_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_204cdd138_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_204ba20da_IsFloat(_2813_kind)) {
			_case_begin_208db96d8:;
			{
				if ((!(_204c8ce1d_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_204ba1c99_IsInt(_2813_kind)) {
			_case_begin_208db9771:;
			{
				if ((!(_204c8d9ce_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_208db9672:;
			{
				return false;;
			}
		}
		_match_end_208db9540:;
	};
	return true;;
}



inline jule::Bool _204c91aae_checkCompatibility(_204c90d44_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_208dbba09:;
			{
				return false;;
			}
		}
		else if ((!(_204c91592_checkValidity(_self_)))) {
			_case_begin_208dbba81:;
			{
				return false;;
			}
		}
		else if (_204c91828_checkConst(_self_)) {
			_case_begin_208dbbae7:;
			{
				return true;;
			}
		}
		else if ((_204cdd8db_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_208dbbb5d:;
			{
				jule::Ptr<_204cda982_Type> _3108_dkind = (*(_self_))._field_dest;;
				if ((_204cdd8db_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_204cdd8db_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_204ce3a9a_Prim> _3144_prim = _204cdd138_Prim((*(_self_))._field_dest.ptr());;
				if (((_3144_prim == nullptr) || _204ce72eb_IsAny(_3144_prim.ptr()))) {
					goto _match_end_208db9dc0;
				};
				jule::Ptr<_204cda982_Type> _3198_dest = (*((*(_204cdd8db_Enum((*((*(_self_))._field_d))._field_Type)))._field_TypeSym))._field_Type;;
				return _204c3a2d8_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_208db9dc0:;
	};
	return _204c3abac_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _204c91d45_check(_204c90d44_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _204c91aae_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_204d08164_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _208ddb694_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_208ddcd49:;
			{
				jule::Ptr<_204cda982_Type> _3498_elem = static_cast<jule::Ptr<_204cda982_Type>>(nullptr);;
				{
					
{
						_case_begin_208ddd61e:;
						{
							_3498_elem=(*(_204cdde08_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_208ddd553:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a2bdcc_ArrTypeDecl>()))._field_Elem;
				return _204c93e57_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_208ddccc2:;
	};
	return false;;
}

inline jule::Bool _208ddb93b_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_208de4339:;
			{
				jule::Ptr<_204cda982_Type> _3498_elem = static_cast<jule::Ptr<_204cda982_Type>>(nullptr);;
				{
					
{
						_case_begin_208de76d3:;
						{
							_3498_elem=(*(_204cde18e_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_208de4a43:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a2b041_SlcTypeDecl>()))._field_Elem;
				return _204c93e57_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_208de42b2:;
	};
	return false;;
}

inline jule::Bool _208de3833_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_208dea829:;
			{
				jule::Ptr<_204cda982_Type> _3498_elem = static_cast<jule::Ptr<_204cda982_Type>>(nullptr);;
				{
					
{
						_case_begin_208deb165:;
						{
							_3498_elem=(*(_204cdd655_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_208deb033:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a2b63a_PtrTypeDecl>()))._field_Elem;
				return _204c93e57_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_208dea7a2:;
	};
	return false;;
}

inline jule::Bool _208deddd2_annotateConstraintElem(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_208e019ea:;
			{
				jule::Ptr<_204cda982_Type> _3498_elem = static_cast<jule::Ptr<_204cda982_Type>>(nullptr);;
				{
					
{
						_case_begin_208e0239c:;
						{
							_3498_elem=(*(_204cdd3be_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_208e02204:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a2abab_SptrTypeDecl>()))._field_Elem;
				return _204c93e57_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_208e01973:;
	};
	return false;;
}



inline jule::Bool _204c93143_annotateConstraintMap(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_208dc414e:;
			{
				jule::Ptr<_204ce973d_Map> _3698_m = _204cdebc8_Map((*(_36642_k)).ptr());;
				jule::Ptr<_204a2c62a_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a2c62a_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_204c93e57_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _204c93e57_annotateConstraint(_self_, &((*(_3698_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_208dc40c7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c93484_annotateConstraintTup(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_208dc99b2:;
			{
				jule::Ptr<_204a2b33d_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a2b33d_TupleTypeDecl>();;
				jule::Ptr<_204ce8b8d_Tuple> _3858_tup2 = _204cdee5e_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208dcc93d:;
					if (it != expr_end) {
						jule::Ptr<_204cda982_Type> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_208dce720:;
								if (it != expr_end) {
									jule::Ptr<_204a29b11_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_204c93e57_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_208dce720:;
									++it;
									goto _iter_begin_208dce720;
								}
								_iter_end_208dce720:;
							};
						}
						_iter_next_208dcc93d:;
						++it;
						goto _iter_begin_208dcc93d;
					}
					_iter_end_208dcc93d:;
				};
			}
		}
		_match_end_208dc993a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c937c5_annotateConstraintFn(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_208dcec5e:;
			{
				jule::Ptr<_204a3b89d_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_204a3b89d_FnDecl>();;
				jule::Ptr<_204b21664_FnIns> _4028_f = _204cde425_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208dd1b73:;
					if (it != expr_end) {
						jule::I32 _4039_i = it - expr->begin();
						jule::Ptr<_204b2050e_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_204c93e57_annotateConstraint(_self_, &((*(_40316_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_208dd1b73:;
						++it;
						_4039_i++;
						goto _iter_begin_208dd1b73;
					}
					_iter_end_208dd1b73:;
				};
				if (((*(_4018_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_204c93e57_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_208dcebe8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c93b16_annotateConstraintIdent(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _41944_k) {
	jule::Ptr<_204a2a21b_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_204a2a21b_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_204a4d2c7_StructIns> _4217_s = _204cde6ab_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208dd5616:;
		if (it != expr_end) {
			jule::I32 _4227_i = it - expr->begin();
			jule::Ptr<_204a36d1b_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_204cd909b_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_204c942ba_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_208dd5616;
				};
				jule::Ptr<_204a29b11_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_4207_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208dd8240:;
					if (it != expr_end) {
						jule::Ptr<_204a29b11_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_208dd8dde:;
								if (it != expr_end) {
									jule::Ptr<_204cd909b_InsGeneric> _43717_sg = *it;
									{
										if (_204c93e57_annotateConstraint(_self_, &((*(_43717_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_208dd8dde:;
									++it;
									goto _iter_begin_208dd8dde;
								}
								_iter_end_208dd8dde:;
							};
						}
						_iter_next_208dd8240:;
						++it;
						goto _iter_begin_208dd8240;
					}
					_iter_end_208dd8240:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_208dd5616:;
			++it;
			_4227_i++;
			goto _iter_begin_208dd5616;
		}
		_iter_end_208dd5616:;
	};
	return false;;
}



inline jule::Bool _204c93e57_annotateConstraint(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_208dd921e:;
			{
				return _204c93b16_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_208dd8790:;
	};
	{
		
		if ((_204cdde08_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda0cc:;
			{
				return _208ddb694_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_204cde18e_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda143:;
			{
				return _208ddb93b_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_204cdd655_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda1a9:;
			{
				return _208de3833_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_204cdd3be_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda220:;
			{
				return _208deddd2_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_204cdebc8_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda297:;
			{
				return _204c93143_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_204cde425_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda6e8:;
			{
				return _204c937c5_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_204cdee5e_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_208dda770:;
			{
				return _204c93484_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_208dd9ecd:;
			{
				return false;;
			}
		}
		_match_end_208dd9e67:;
	};
}



inline void _204c942ba_pushGeneric(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _47332_k, jule::I32 _47342_i) {
	(*((*(_self_))._field_f))._field_Generics[_47342_i]=jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)});
	jule::Ptr<_204a36d1b_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47342_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e0879e:;
		if (it != expr_end) {
			jule::Ptr<_204cda982_Type> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _204cdad7d_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_208e0879e:;
			++it;
			goto _iter_begin_208e0879e;
		}
		_iter_end_208e0879e:;
	};
	if ((((*(_4757_gd))._field_Constraint == nullptr) || ((*((*(_4757_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_4757_gd))._field_Constraint))._field_Mask[0LL];
	_204c93e57_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _204c9460b_annotatePrim(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _204c96630_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _204c9494c_annotateArr(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204cea3ba_Arr> _4937_parr = _204cdde08_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204cea3ba_Arr> _4977_arr = _204cdde08_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _204c96971_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _204c94c8d_annotateSlc(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204ce8099_Slc> _5037_pslc = _204cde18e_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204ce8099_Slc> _5077_slc = _204cde18e_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _204c96971_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _204c95189_checkMapKey(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _51238_k, jule::Ptr<_204cda982_Type>* _51254_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204cda982_Type>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_204c96971_annotateKind(_self_, _51254_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _204c954ca_annotateMap(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204ce973d_Map> _5217_pmap = _204cdebc8_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204ce973d_Map> _5257_m = _204cdebc8_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_204c95189_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _204c95189_checkMapKey(_self_, (&((*_5217_pmap.alloc)._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _204c9581b_annotateFn(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204b21664_FnIns> _5317_pf = _204cde425_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204b21664_FnIns> _5357_f = _204cde425_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_208e15d0b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_204b1da5c_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _204b1da5c_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_208e15d94:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_208e15c62:;
	};
	__jule_func_result=true;
	jule::Ptr<_204cda982_Type>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e17c42:;
		if (it != expr_end) {
			jule::I32 _5458_i = it - expr->begin();
			jule::Ptr<_204b2050e_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Type));
				__jule_func_result=(_204c96971_annotateKind(_self_, &((*(_54515_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_208e17c42:;
			++it;
			_5458_i++;
			goto _iter_begin_208e17c42;
		}
		_iter_end_208e17c42:;
	};
	if ((!(_204b1da5c_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*_5317_pf.alloc)._field_Result));
		__jule_func_result=(_204c96971_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _204c95b5c_annotatePtr(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204cead8d_Ptr> _5607_pptr = _204cdd655_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204cead8d_Ptr> _5647_ptr = _204cdd655_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _204c96971_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _204c95e9d_annotateSptr(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204ce75c6_Sptr> _5707_ssptr = _204cdd3be_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204ce75c6_Sptr> _5747_sptr = _204cdd3be_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _204c96971_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _204c962de_annotateStruct(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204a4d2c7_StructIns> _5807_s = _204cde6ab_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _5847_s2 = _204cde6ab_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e21c07:;
		if (it != expr_end) {
			jule::I32 _5888_i = it - expr->begin();
			jule::Ptr<_204cd909b_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_204cd909b_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_204cdb1be_Equal((*(_58815_g))._field_Type, (*(_5898_g2))._field_Type)) {
					goto _iter_next_208e21c07;
				};
				(*(_self_))._field_k=(&((*(_58815_g))._field_Type));
				if ((!(_204c96971_annotateKind(_self_, &((*(_5898_g2))._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208e21c07:;
			++it;
			_5888_i++;
			goto _iter_begin_208e21c07;
		}
		_iter_end_208e21c07:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c96630_annotateAny(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _204cdad7d_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e252d2:;
		if (it != expr_end) {
			jule::I32 _6037_i = it - expr->begin();
			jule::Ptr<_204a36d1b_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_208e252d2;
				};
				jule::Ptr<_204cd909b_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Type == nullptr)) {
						_case_begin_208e26ba7:;
						{
							_204c942ba_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_204cdb1be_Equal((*(_6074_t))._field_Type, (*(_60139_k)))))) {
						_case_begin_208e26c51:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_208e26a64:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_208e252d2:;
			++it;
			_6037_i++;
			goto _iter_begin_208e252d2;
		}
		_iter_end_208e252d2:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c96971_annotateKind(_204c92719_dynamicTypeAnnotation* _self_, jule::Ptr<_204cda982_Type>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_204c96630_annotateAny(_self_, _62240_k)) {
			_case_begin_208e2925e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_204cdd138_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e292c5:;
			{
				__jule_func_result = _204c9460b_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cdde08_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e2933b:;
			{
				__jule_func_result = _204c9494c_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cde18e_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e293b3:;
			{
				__jule_func_result = _204c94c8d_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cdebc8_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e2956c:;
			{
				__jule_func_result = _204c954ca_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cde425_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e295d3:;
			{
				__jule_func_result = _204c9581b_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cdd655_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e29649:;
			{
				__jule_func_result = _204c95b5c_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cdd3be_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e296b0:;
			{
				__jule_func_result = _204c95e9d_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_204cde6ab_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_208e29737:;
			{
				__jule_func_result = _204c962de_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_208e2913d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_208e28bba:;
	};
}



inline jule::Bool _204c96c07_annotate(_204c92719_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _204c96971_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _204c97b1a_pushErrToken(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204a14216_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_204c3238a_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _204c97e7d_pushErr(_204c97576_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_204c97b1a_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _204c98214_getParams(_204c97576_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _204b1c231_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _204c98555_checkCounts(_204c97576_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_204b2050e_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _204b1c231_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I32 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_208e36337:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*((*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_208e361a0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_208e35d70:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_208e35d09:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_208e35c93:;
	};
	_1eeabb290_Builder _7027_err = static__1eeabbadc_New(32LL);;
	({
		auto except = _1eeabc26e_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:703:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:704:3"));
		(except.result);
	});
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e38ceb:;
		if (it != expr_end) {
			jule::I32 _7057_i = it - expr->begin();
			jule::Ptr<_204b2050e_ParamIns> *_70510_p = it;
			{
				({
					auto except = _1eeabc26e_WriteStr(&_7027_err, _204cdad7d_Str((*((*(_70510_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:706:4"));
					(except.result);
				});
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					({
						auto except = _1eeabc26e_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:708:5"));
						(except.result);
					});
				};
			}
			_iter_next_208e38ceb:;
			++it;
			_7057_i++;
			goto _iter_begin_208e38ceb;
		}
		_iter_end_208e38ceb:;
	};
	({
		auto except = _1eeabc527_WriteByte(&_7027_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:711:3"));
	});
	_204c97e7d_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1eeabcaee_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c98a0b_checkArg(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204b2050e_ParamIns>* _71629_p, jule::Ptr<_204ca2b7a_Data>* _71648_arg, jule::Ptr<_204a14216_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _204b23941_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _204ca123e_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_204c92719_dynamicTypeAnnotation _7219_dta = _204c92719_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_204c96c07_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_204c97b1a_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_204c3e111_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_71629_p))))._field_Decl))._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _204c3987b_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, (*(_71665_errorToken)), _204ca8158_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _204c98e07_push(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204b2050e_ParamIns>* _74525_p, jule::Ptr<_204a2de45_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204cda982_Type> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_74525_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_204ca2b7a_Data> _7557_d = _204cc8794_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7473_oldMut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_204c98a0b_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _204c99303_pushVariadic(_204c97576_fnCallArgChecker* _self_, jule::Ptr<_204b2050e_ParamIns>* _76933_p, jule::I32 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_204b13788_SliceExprModel> _7737_model = jule::new_ptr<_204b13788_SliceExprModel>(_204b13788_SliceExprModel{._field_ElemType=(*((*(_76933_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_204cda982_Type> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7793_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_76933_p))))._field_Decl))._field_Mutable;
	jule::Ptr<_204cda982_Type> _7877_oldKind = (*((*(_76933_p))))._field_Type;;
	(*((*(_76933_p))))._field_Type=jule::new_ptr<_204cda982_Type>((*(*((*(_76933_p))))._field_Type.alloc));
	(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Type=_7877_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_204a2de45_Expr> _7968_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7968_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_208e4c628:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce8099_Slc>(_204ce8099_Slc{._field_Elem=(*((*(_76933_p))))._field_Type}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_208e4c925:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Type;
					}
				}
				_match_end_208e4c8ae:;
			};
			jule::Ptr<_204ca2b7a_Data> _8098_d = _204cc8112_eval((*(_self_))._field_e, _7968_arg);;
			if ((_8098_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_208e4baab;
			};
			if ((*((*(_8098_d))._field_Type))._field_Variadic) {
				_7717_variadiced=true;
				(*((*((*(_76933_p))))._field_Type))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _204c98a0b_checkArg(_self_, _76933_p, &(_8098_d), &((*(_7968_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8098_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_208e51341:;
						{
							_7737_model=(*(_8098_d))._field_Model.unsafe_cast_ptr<_204b13788_SliceExprModel>();
							(*(_7737_model))._field_ElemType=(*((*(_76933_p))))._field_Type;
						}
					}
					else {
						_case_begin_208e54157:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8098_d))._field_Model); };
						}
					}
					_match_end_208e540e1:;
				};
				(_76951_i)++;
				goto _iter_end_208e4baab;
			};
			__jule_func_result=(__jule_func_result && _204c98a0b_checkArg(_self_, _76933_p, &(_8098_d), &((*(_7968_arg))._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8098_d))._field_Model; __jule_collection; }));
		}
	_iter_next_208e4baab:;
	}
	_iter_end_208e4baab:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7793_oldMut;
	if ((_7717_variadiced && _7723_more)) {
		_204c97b1a_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _204c99644_checkArgs(_204c97576_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_204b2050e_ParamIns>>* _85430_params) {
	jule::Bool __jule_func_result = false;
	_204ca41cb_target _8553_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I32 _8597_i = 0LL;;
	if ((((*(_85430_params)).len() > 0LL) && _204b1c231_IsSelf((*((*(_85430_params))[0LL]))._field_Decl.ptr()))) {
		(_8597_i)++;
	};
	_julec_label_208e5ca9a:;
	while ((_8597_i < (*(_85430_params)).len())) {
		{
			jule::Ptr<_204b2050e_ParamIns> _8668_p = (*(_85430_params))[_8597_i];;
			{
				
				if ((*((*(_8668_p))._field_Decl))._field_Variadic) {
					_case_begin_208e5e54c:;
					{
						__jule_func_result=(_204c99303_pushVariadic(_self_, &(_8668_p), _8597_i) && __jule_func_result);
						goto _iter_end_208e5cc76;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8597_i)) {
					_case_begin_208e5e63a:;
					{
						__jule_func_result=false;
						goto _iter_end_208e5cc76;
					}
				}
				else {
					_case_begin_208e5e184:;
					{
						__jule_func_result=(_204c98e07_push(_self_, &(_8668_p), (*(_self_))._field_args[_8597_i]) && __jule_func_result);
					}
				}
				_match_end_208e5e10c:;
			};
			(_8597_i)++;
		}
	_iter_next_208e5cc76:;
	}
	_iter_end_208e5cc76:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8553_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _204c998ca_checkDynamicTypeAnnotation(_204c97576_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e61395:;
		if (it != expr_end) {
			jule::Ptr<_204cd909b_InsGeneric> _88610_g = *it;
			{
				if ((_88610_g == nullptr)) {
					_204c97e7d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_208e61395:;
			++it;
			goto _iter_begin_208e61395;
		}
		_iter_end_208e61395:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c99b61_check(_204c97576_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _8967_params = _204c98214_getParams(_self_);;
	__jule_func_result=_204c98555_checkCounts(_self_, &(_8967_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_204c99644_checkArgs(_self_, &(_8967_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_204c998ca_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _204c9aa41_pushErr(_204c9a4ad_structLitChecker* _self_, jule::Ptr<_204a14216_Token> _93423_token, jule::Str _93445_fmt, jule::Slice<jule::Any> _93465_args) {
	_204ca5122_pushErr((*(_self_))._field_e.ptr(), _93423_token, _93445_fmt, _93465_args);
}



inline void _204c9ada4_pushSuggestion(_204c9a4ad_structLitChecker* _self_, jule::Str _93930_fmt, jule::Slice<jule::Any> _93950_args) {
	_204ca5485_pushSuggestion((*(_self_))._field_e.ptr(), _93930_fmt, _93950_args);
}



inline void _204c9b2c2_pushMatch(_204c9a4ad_structLitChecker* _self_, jule::Ptr<_204a4c727_FieldIns>* _94330_f, jule::Ptr<_204ca2b7a_Data>* _94349_d, jule::Ptr<_204a14216_Token>* _94364_errorToken) {
	;
	jule::Bool _9493_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_94330_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_204c3e111_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9493_mutable, false, &((*((*(_94330_f))))._field_Type), _94349_d, _94364_errorToken)) {
		_204c3987b_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_94330_f))))._field_Type), _94349_d, (*(_94364_errorToken)), _204ca8158_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_204b11cd6_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_204b11cd6_StructArgExprModel>(_204b11cd6_StructArgExprModel{._field_Token=(*(_94364_errorToken)), ._field_Field=(*(_94330_f)), ._field_Expr=(*(_94349_d))})); };
}



inline void _204c9b635_checkPair(_204c9a4ad_structLitChecker* _self_, jule::Ptr<_204a33664_FieldExprPair>* _96230_pair, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _96262_exprs) {
	jule::Ptr<_204a4c727_FieldIns> _9647_f = _204a4e6b3_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96230_pair))))._field_Field))._field_Kind);;
	if ((_9647_f == nullptr)) {
		_204c9aa41_pushErr(_self_, (*((*(_96230_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96230_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_204c32ae9_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9647_f))._field_Decl))._field_Public, (*(*(_9647_f))._field_Decl.alloc)._field_Token)))) {
		_204c9aa41_pushErr(_self_, (*((*(_96230_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96230_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_204c9ada4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_208e6c868:;
	{
		auto expr = _96262_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e6d869:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _97615_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97615_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_208e6e3b4:;
						{
							jule::Ptr<_204a33664_FieldExprPair> _9799_dpair = (*(_97615_expr))._field_Kind.unsafe_cast_ptr<_204a33664_FieldExprPair>();;
							{
								
								if (((*(_96230_pair)) == _9799_dpair)) {
									_case_begin_208e6ec44:;
									{
										goto _iter_end_208e6d869;
									}
								}
								else if (((*(*((*(_96230_pair))))._field_Field.alloc)._field_Kind == (*(*(_9799_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_208e71ac0:;
									{
										_204c9aa41_pushErr(_self_, (*((*(_96230_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96230_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_208e6d869;
									}
								}
								_match_end_208e6ebab:;
							};
						}
					}
					_match_end_208e6e33c:;
				};
			}
			_iter_next_208e6d869:;
			++it;
			goto _iter_begin_208e6d869;
		}
		_iter_end_208e6d869:;
	};
	jule::Ptr<_204cda982_Type> _9907_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9907_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9647_f))._field_Type;
	jule::Ptr<_204ca2b7a_Data> _9947_d = _204cc8794_evalExpr((*(_self_))._field_e, (*((*(_96230_pair))))._field_Expr);;
	if ((_9947_d == nullptr)) {
		return;;
	};
	_204c9b2c2_pushMatch(_self_, &(_9647_f), &(_9947_d), &((*((*(_96230_pair))))._field_Field));
}



inline jule::Bool _204c9b976_readyExprs(_204c9a4ad_structLitChecker* _self_, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _100131_exprs) {
	jule::Bool _10027_ok = true;;
	{
		auto expr = _100131_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e77004:;
		if (it != expr_end) {
			jule::I32 _10038_i = it - expr->begin();
			jule::Ptr<_204a2de45_Expr> _100315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_208e77c80:;
						{
							jule::Ptr<_204a34c70_KeyValPair> _10069_pair = (*(_100315_expr))._field_Kind.unsafe_cast_ptr<_204a34c70_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10069_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type42) {
									_case_begin_208e7ab73:;
									{
										goto _match_end_208e7a744;
									}
								}
								else {
									_case_begin_208e7a7aa:;
									{
										_204c9aa41_pushErr(_self_, (*(_10069_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10027_ok=false;
										goto _iter_next_208e77004;
									}
								}
								_match_end_208e7a744:;
							};
							(*((*(_100131_exprs))[_10038_i]))._field_Kind=jule::Any(jule::new_ptr<_204a33664_FieldExprPair>(_204a33664_FieldExprPair{._field_Field=(*((*(_10069_pair))._field_Key))._field_Token, ._field_Expr=(*_10069_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_208e77c08:;
				};
			}
			_iter_next_208e77004:;
			++it;
			_10038_i++;
			goto _iter_begin_208e77004;
		}
		_iter_end_208e77004:;
	};
	return _10027_ok;;
}



inline void _204c9bc2e_check(_204c9a4ad_structLitChecker* _self_, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _102526_exprs) {
	if (((*(_102526_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_204c9b976_readyExprs(_self_, _102526_exprs)))) {
		return;;
	};
	jule::Bool _10327_paired = false;;
	{
		auto expr = _102526_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208e7de0c:;
		if (it != expr_end) {
			jule::I32 _10338_i = it - expr->begin();
			jule::Ptr<_204a2de45_Expr> _103315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_208e84d36:;
						{
							jule::Ptr<_204a33664_FieldExprPair> _10369_pair = (*(_103315_expr))._field_Kind.unsafe_cast_ptr<_204a33664_FieldExprPair>();;
							if (((_10338_i > 0LL) && (!(_10327_paired)))) {
								_204c9aa41_pushErr(_self_, (*(_10369_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10327_paired=true;
							_204c9b635_checkPair(_self_, &(_10369_pair), _102526_exprs);
						}
					}
					else {
						_case_begin_208e8012d:;
						{
							if (_10327_paired) {
								_204c9aa41_pushErr(_self_, (*(_103315_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10338_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_204c9aa41_pushErr(_self_, (*(_103315_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_208e7de0c;
							};
							jule::Ptr<_204a4c727_FieldIns> _10519_field = (*((*(_self_))._field_s))._field_Fields[_10338_i];;
							if ((!(_204c32ae9_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10519_field))._field_Decl))._field_Public, (*(*(_10519_field))._field_Decl.alloc)._field_Token)))) {
								_204c9aa41_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_204c9ada4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_204cda982_Type> _10599_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10599_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*(_10519_field))._field_Type;
							jule::Ptr<_204ca2b7a_Data> _10639_d = _204cc8794_evalExpr((*(_self_))._field_e, _103315_expr);;
							if ((_10639_d == nullptr)) {
								goto _iter_next_208e7de0c;
							};
							_204c9b2c2_pushMatch(_self_, &(_10519_field), &(_10639_d), &((*(_103315_expr))._field_Token));
						}
					}
					_match_end_208e800b7:;
				};
			}
			_iter_next_208e7de0c:;
			++it;
			_10338_i++;
			goto _iter_begin_208e7de0c;
		}
		_iter_end_208e7de0c:;
	};
	if ((!(_10327_paired))) {
		jule::I32 _10744_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _10758_diff = (_10744_n - (*(_102526_exprs)).len());;
		{
			
			if ((_10758_diff <= 0LL)) {
				_case_begin_208e888b7:;
				{
					return;;
				}
			}
			_match_end_208e88796:;
		};
		_1eeabb290_Builder _10818_idents = static__1eeabbadc_New(32LL);;
		for (; (_10758_diff > 0LL); (_10758_diff)--) {
			{
				({
					auto except = _1eeabc26e_WriteStr(&_10818_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1083:5"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&_10818_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10744_n - _10758_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1084:5"));
					(except.result);
				});
			}
		_iter_next_208460455:;
		}
		_iter_end_208460455:;;
		_204c9aa41_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1eeabd5a0_Buf(&_10818_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _204c9c290_rangeChecker_eq(_204c9c290_rangeChecker *_self_, _204c9c290_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_204c5319c_Var> _204c9c7ac_buildVar(_204c9c290_rangeChecker* _self_, jule::Ptr<_204a3ca58_VarDecl>* _110125_decl) {
	jule::Ptr<_204c5319c_Var> _11027_v = _204c0546d_buildVar((*(_110125_decl)));;
	return _11027_v;;
}



inline void _204c9c9aa_setSizeKey(_204c9c290_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _204c9cdc8_checkRangeExprValidity(_204c9c290_rangeChecker* _self_, jule::Ptr<_204ca2b7a_Data>* _112043_d, jule::Ptr<_204c5319c_Var>* _112054_key, jule::Ptr<_204cda982_Type>* _112070_k) {
	jule::Bool _11217__mut = (*((*(_112054_key))))._field_Mutable;;
	if ((_11217__mut && (!(_204cdc368_Mutable((*(_112070_k)).ptr()))))) {
		_11217__mut=false;
	};
	_204c3e111_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11217__mut, (*((*(_112054_key))))._field_Reference, &((*((*((*(_112054_key))))._field_TypeSym))._field_Type), _112043_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _204c9d0c6_checkSlice(_204c9c290_rangeChecker* _self_) {
	_204c9c9aa_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_204ce8099_Slc> _11397_slc = _204cde18e_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_11397_slc))._field_Elem});
	_204c9cdc8_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11397_slc.alloc)._field_Elem));
}



inline void _204c9d2c4_checkArray(_204c9c290_rangeChecker* _self_) {
	_204c9c9aa_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_204cea3ba_Arr> _11527_arr = _204cdde08_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_11527_arr))._field_Elem});
	_204c9cdc8_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11527_arr.alloc)._field_Elem));
}



inline void _204c9d4c2_checkMapKeyA(_204c9c290_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_204ce973d_Map> _11647_m = _204cdebc8_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_11647_m))._field_Key});
	jule::Ptr<_204ca2b7a_Data> _11687_d = jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc));;
	(*_11687_d.alloc)._field_Type=(*_11647_m.alloc)._field_Key;
	_204c9cdc8_checkRangeExprValidity(_self_, &(_11687_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11647_m.alloc)._field_Key));
}



inline void _204c9d6c0_checkMapKeyB(_204c9c290_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_204ce973d_Map> _11797_m = _204cdebc8_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_11797_m))._field_Val});
	jule::Ptr<_204ca2b7a_Data> _11837_d = jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc));;
	(*_11837_d.alloc)._field_Type=(*_11797_m.alloc)._field_Val;
	_204c9cdc8_checkRangeExprValidity(_self_, &(_11837_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11797_m.alloc)._field_Val));
}



inline void _204c9d8bd_checkMap(_204c9c290_rangeChecker* _self_) {
	_204c9d4c2_checkMapKeyA(_self_);
	_204c9d6c0_checkMapKeyB(_self_);
}



inline void _204c9dabb_checkStr(_204c9c290_rangeChecker* _self_) {
	_204c9c9aa_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_TypeSym;
}



inline void _204c9dcb9_checkComptime(_204c9c290_rangeChecker* _self_) {
	_204c9c9aa_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _204a16aed_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_204c9c7ac_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _204c9e050_checkComptimeRange(_204c9c290_rangeChecker* _self_) {
	jule::Ptr<_204ba37e5_comptimeRange> _12187_range = _204ce14d2_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12187_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data6)) {
			_case_begin_208eaa90b:;
			{
				_204c9dcb9_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_208eaac19:;
			{
				_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_208eaaba3:;
	};
}



inline jule::Bool _204c9e2d6_check(_204c9c290_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_208eae091:;
		}
		else if ((_204cde18e_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_208eac941:;
			{
				_204c9d0c6_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_204cdde08_Arr((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_208eac9a7:;
			{
				_204c9d2c4_checkArray(_self_);
				return true;;
			}
		}
		else if ((_204cdebc8_Map((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_208ead018:;
			{
				_204c9d8bd_checkMap(_self_);
				return true;;
			}
		}
		else if ((_204ce14d2_comptimeRange((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_208ead07e:;
			{
				return _204c9e050_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_208eac8a8:;
			{
				jule::Ptr<_204ce3a9a_Prim> _12514_prim = _204cdd138_Prim((*((*(_self_))._field_d))._field_Type);;
				if (((_12514_prim != nullptr) && _204ce7065_IsStr(_12514_prim))) {
					_204c9dabb_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_208eac7ba:;
	};
	_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _204ca0040_prepareTypes(_204c9eacd_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_204b22896_Types((*(_self_))._field_f);
	};
}



inline void _204ca02e8_prepareExprs(_204c9eacd_retTypeChecker* _self_, jule::Ptr<_204a2de45_Expr>* _128033_e) {
	if (((*(_128033_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128033_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_208eb5460:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128033_e))))._field_Kind.unsafe_cast_ptr<_204a2ea39_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_208eb4cde:;
			{
				{ jule::Slice<jule::Ptr<_204a2de45_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128033_e))); };
			}
		}
		_match_end_208eb485a:;
	};
}



inline void _204ca04e6_checkExprs(_204c9eacd_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_204ca2b7a_Data>> _12967_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204ca2b7a_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_204ca4b49_eval> _12977_eval = _204c39260_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	(*(_12977_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208eb8078:;
		if (it != expr_end) {
			jule::I32 _12998_i = it - expr->begin();
			jule::Ptr<_204a2de45_Expr> _129915_expr = *it;
			{
				if ((_12998_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_208eb8078;
				};
				jule::Ptr<_204cda982_Type> _13048_t = (*(_self_))._field_types[_12998_i];;
				(*_12977_eval.alloc)._field_prefix=_13048_t;
				jule::Ptr<_204ca2b7a_Data> _13078_d = _204cc8794_evalExpr(_12977_eval, _129915_expr);;
				if ((_13078_d == nullptr)) {
					goto _iter_next_208eb8078;
				};
				{ jule::Slice<jule::Ptr<_204ca2b7a_Data>> &__jule_push_dest = _12967_datas; __jule_push_dest.push(_13078_d); };
				if ((((*(_self_))._field_mutable && (!((*(_13078_d))._field_Mutable))) && _204cdc368_Mutable((*_13078_d.alloc)._field_Type.ptr()))) {
					_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_204c90d44_assignTypeChecker _13198_ac = _204c90d44_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13048_t, ._field_d=_13078_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_204bdc08c_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_204c91d45_check(&_13198_ac);
			}
			_iter_next_208eb8078:;
			++it;
			_12998_i++;
			goto _iter_begin_208eb8078;
		}
		_iter_end_208eb8078:;
	};
	if ((_12967_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_204b169bc_TupleExprModel>(_204b169bc_TupleExprModel{._field_Datas=_12967_datas}), &__jule_any_type84);
	} else if ((_12967_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12967_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _204ca077c_tryFuncMultiRetForward(_204c9eacd_retTypeChecker* _self_) {
	jule::Ptr<_204ca4b49_eval> _13417_eval = _204c39260_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
	jule::Ptr<_204ca2b7a_Data> _13427_d = _204cc8794_evalExpr(_13417_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13427_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_204ce8b8d_Tuple> _13487_tup = _204cdee5e_Tup((*(_13427_d))._field_Type.ptr());;
	if ((_13487_tup == nullptr)) {
		return false;;
	};
	if (((*(_13487_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_208ec4392;
	};
	(*(_self_))._field_model=(*_13427_d.alloc)._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ec2439:;
		if (it != expr_end) {
			jule::I32 _13567_i = it - expr->begin();
			{
				jule::Ptr<_204cda982_Type> _13578_t1 = (*(_self_))._field_types[_13567_i];;
				jule::Ptr<_204cda982_Type> _13588_t2 = (*(_13487_tup))._field_Types[_13567_i];;
				if ((!(_204c39d32__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13578_t1), &(_13588_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_208ec4392;
				};
			}
			_iter_next_208ec2439:;
			++it;
			_13567_i++;
			goto _iter_begin_208ec2439;
		}
		_iter_end_208ec2439:;
	};
	return true;;
	_julec_label_208ec4392:;
	_1eeabb290_Builder _13657_wanted = static__1eeabbadc_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ec499c:;
		if (it != expr_end) {
			jule::I32 _13667_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> _136610_t = *it;
			{
				({
					auto except = _1eeabc26e_WriteStr(&_13657_wanted, _204cdad7d_Str(_136610_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1367:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13667_i) > 1LL)) {
					({
						auto except = _1eeabc26e_WriteStr(&_13657_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1369:5"));
						(except.result);
					});
				};
			}
			_iter_next_208ec499c:;
			++it;
			_13667_i++;
			goto _iter_begin_208ec499c;
		}
		_iter_end_208ec499c:;
	};
	_1eeabb290_Builder _13727_given = static__1eeabbadc_New(32LL);;
	{
		auto expr = &((*(_13487_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ec66d5:;
		if (it != expr_end) {
			jule::I32 _13737_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> _137310_t = *it;
			{
				({
					auto except = _1eeabc26e_WriteStr(&_13727_given, _204cdad7d_Str(_137310_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1374:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13737_i) > 1LL)) {
					({
						auto except = _1eeabc26e_WriteStr(&_13727_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1376:5"));
						(except.result);
					});
				};
			}
			_iter_next_208ec66d5:;
			++it;
			_13737_i++;
			goto _iter_begin_208ec66d5;
		}
		_iter_end_208ec66d5:;
	};
	_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1eeabcaee_Str(&_13657_wanted), &__jule_any_type5); (*it++) = jule::Any(_1eeabcaee_Str(&_13727_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _204ca0abd_check(_204c9eacd_retTypeChecker* _self_, jule::Ptr<_204a2de45_Expr>* _138326_e) {
	_204ca0040_prepareTypes(_self_);
	_204ca02e8_prepareExprs(_self_, _138326_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_208ec9980:;
			{
				if ((!(_204b1e82c_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _204b1da5c_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_208ec99e6:;
			{
				_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_208ec9a5c:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_208ece4ce:;
						{
							if (_204ca077c_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_208ece424:;
				};
				_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_208ec9ac3:;
			{
				_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_208ec9b39:;
			{
				_204c3238a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_208ec982b:;
	};
	_204ca04e6_checkExprs(_self_);
	return true;;
}








inline jule::Bool _204ca2b7a_Data_eq(_204ca2b7a_Data *_self_, _204ca2b7a_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _204ca3098_IsNil(_204ca2b7a_Data* _self_) {
	return _204cdbab5_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _204ca332e_IsVoid(_204ca2b7a_Data* _self_) {
	return _204cdbd4b_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _204ca35b5_IsConst(_204ca2b7a_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _204ca3906_GoodOperand(_204ca2b7a_Data* _self_, jule::Ptr<_204ca2b7a_Data>* _6228_other) {
	if ((_204cddb72_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_204cdd138_Prim((*((*(_6228_other))))._field_Type.ptr()) == nullptr) || (!(_204ce72eb_IsAny(_204cdd138_Prim((*((*(_6228_other))))._field_Type.ptr()).ptr())))) && (_204cde942_Trait((*((*(_6228_other))))._field_Type.ptr()) == nullptr)) && (!(_204cdbab5_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _204ca3d02_Value_eq(_204ca3d02_Value *_self_, _204ca3d02_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _204ca41cb_target_eq(_204ca41cb_target *_self_, _204ca41cb_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _204ca4b49_eval_eq(_204ca4b49_eval *_self_, _204ca4b49_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_204ca41cb_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _204ca5122_pushErr(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_204c3238a_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _204ca5485_pushSuggestion(_204ca4b49_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_204c326ed_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _204ca5683_allowBuiltin(_204ca4b49_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _204ca5881_disallowBuiltin(_204ca4b49_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _204ca5b17_isUnsafe(_204ca4b49_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _204ca5d9d_isGlobal(_204ca4b49_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4)) {
			_case_begin_209044a2d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_209044e3a:;
			{
				return false;;
			}
		}
		_match_end_209044dc4:;
	};
}



inline jule::Bool _204ca61de_applyNumericPrefix(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_204ca35b5_IsConst((*(_12939_d)).ptr())))) || (_204cdd138_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_204ce3a9a_Prim> _1363_prim = _204cdd138_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_204ba20da_IsFloat(_204ce3e1e_Str(_1363_prim.ptr()))) {
			_case_begin_20904759c:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_204cda982_Type>((*(*(_self_))._field_prefix.alloc));
				_204b085b3_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _204b07738_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_204ba16c2_IsSigInt(_204ce3e1e_Str(_1363_prim.ptr()))) {
			_case_begin_209047613:;
			{
				if ((!(_204c8d292_sigAssignable(_204ce3e1e_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_204cda982_Type>((*(*(_self_))._field_prefix.alloc));
				_204b079e1_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _204b0721b_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_204ba19d0_IsUnsigInt(_204ce3e1e_Str(_1363_prim))) {
			_case_begin_209047679:;
			{
				if ((!(_204c8d65a_unsigAssignable(_204ce3e1e_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_204cda982_Type>((*(*(_self_))._field_prefix.alloc));
				_204b07c99_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _204b074a2_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		_match_end_2090474ae:;
	};
	return true;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca6530_litStr(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_204a15602_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_204c8b614_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_204c8b955_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_204a9d338_Const> _1717_constant = static__204b05813_NewStr(_1657_s);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5dd46_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca6871_litRune(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _18120_l) {
	jule::I32 _1823_r = _204c71176_ToRune((*((*(_18120_l))))._field_Value);;
	jule::Ptr<_204ca2b7a_Data> _1837_data = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_1823_r))});;
	if ((_1823_r <= 255LL)) {
		(*(_1837_data))._field_Type=_204d6082b_primU8;
	} else {
		(*(_1837_data))._field_Type=_204d602ba_primI32;
	};
	(*(_1837_data))._field_Model=jule::Any(jule::new_ptr<_204b1a10d_RuneExprModel>(_204b1a10d_RuneExprModel{._field_Code=_1823_r}), &__jule_any_type86);
	(*_1837_data.alloc)._field_Mutable=true;
	(*_1837_data.alloc)._field_IsRune=true;
	(*_1837_data.alloc)._field_untyped=true;
	return _1837_data;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca6bb2_litFloat(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _20021_l) {
	jule::F64 _2013_f = ({
		auto except = _201a0b134_ParseFloat((*((*(_20021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_204a9d338_Const> _2027_constant = static__204b05acc_NewF64(_2013_f);;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d617c7_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2027_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2027_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca7003_litInt(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _21223_l) {
	;
	jule::Str _2157_lit = (*((*(_21223_l))))._field_Value;;
	jule::I32 _2167_base = 0LL;;
	{
		
		if (_200e33c22_HasPrefix(_2157_lit, jule::Str::lit("0x", 2))) {
			_case_begin_2090599dd:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=16LLU;
			}
		}
		else if (_200e33c22_HasPrefix(_2157_lit, jule::Str::lit("0b", 2))) {
			_case_begin_209059acb:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=2LLU;
			}
		}
		else if (_200e33c22_HasPrefix(_2157_lit, jule::Str::lit("0o", 2))) {
			_case_begin_20905968b:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=8LLU;
			}
		}
		else if (((_2157_lit[0LL] == '0') && (_2157_lit.len() > 1LL))) {
			_case_begin_209059702:;
			{
				(_2157_lit).mut_slice(1LL);;
				_2167_base=8LLU;
			}
		}
		else {
			_case_begin_209059625:;
			{
				_2167_base=10LLU;
			}
		}
		_match_end_20905959d:;
	};
	jule::Ptr<_204ca2b7a_Data> _2367_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	jule::Bool _2387_ok = true;;
	jule::I64 _2393_sig = ({
		auto except = _201a04979_ParseInt(_2157_lit, _2167_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2387_ok=false;

			0LL;
		});
	});;
	if (_2387_ok) {
		(*_2367_d.alloc)._field_Constant=static__204b0500a_NewI64(_2393_sig);
		(*_2367_d.alloc)._field_Type=_204d5ea28_primInt;
	} else {
		jule::U64 _2474_unsig = ({
			auto except = _201a044c3_ParseUint(_2157_lit, _2167_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_204ca5122_pushErr(_self_, (*((*(_21223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2367_d.alloc)._field_Constant=static__204b05280_NewU64(_2474_unsig);
		(*_2367_d.alloc)._field_Type=_204d5e660_primUint;
	};
	(*_2367_d.alloc)._field_Model=jule::Any((*_2367_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2367_d.alloc)._field_untyped=true;
	if ((!(_204ca61de_applyNumericPrefix(_self_, &(_2367_d))))) {
		_204cd2803_fitBitsize(&(_2367_d));
	};
	return _2367_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca7344_litNum(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr>* _26723_l) {
	{
		
		if (_204a162a1_IsFloat((*((*(_26723_l))))._field_Value)) {
			_case_begin_209061b5a:;
			{
				return _204ca6bb2_litFloat(_self_, _26723_l);;
			}
		}
		else {
			_case_begin_209061ae4:;
			{
				return _204ca7003_litInt(_self_, _26723_l);;
			}
		}
		_match_end_2090619d4:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ca7685_evalLit(_204ca4b49_eval* _self_, jule::Ptr<_204a2edd0_LitExpr> _27623_lit) {
	{
		
		if (_204a1536b_IsStr((*(_27623_lit))._field_Value)) {
			_case_begin_209062d7b:;
			{
				return _204ca6530_litStr(_self_, &(_27623_lit));;
			}
		}
		else if (_204a158bb_IsRune((*(_27623_lit))._field_Value)) {
			_case_begin_209062de2:;
			{
				return _204ca6871_litRune(_self_, &(_27623_lit));;
			}
		}
		else if (_204a1656a_IsNum((*_27623_lit.alloc)._field_Value)) {
			_case_begin_209062e58:;
			{
				return _204ca7344_litNum(_self_, &(_27623_lit));;
			}
		}
		else {
			_case_begin_209062771:;
			{
				return nullptr;;
			}
		}
		_match_end_209062661:;
	};
}



inline jule::Any _204ca79c6_findBuiltins(_204ca4b49_eval* _self_, jule::Str* _28929_ident) {
	if (_204c2b681_IsPub((*(_28929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data2)) {
				_case_begin_2090651e1:;
				{
					jule::Any _2939_def = _204cd25c2_findBuiltinsImport(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_204c12139_ImportInfo>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data2));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4)) {
				_case_begin_209064e38:;
				{
					jule::Any _2989_def = _204cd332b_findBuiltinsSema(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_204c2e486_sema>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
				_case_begin_209065257:;
				{
					jule::Any _3039_def = _204cd332b_findBuiltinsSema(_28929_ident, (*((*(_self_))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)))._field_s);;
					if ((_3039_def != nullptr)) {
						return _3039_def;;
					};
				}
			}
			_match_end_209065136:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _204d62113_findBuiltinDef(_28929_ident);;
}



inline jule::Any _204ca7dc2_getDef(_204ca4b49_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded) {
	jule::Ptr<_204c5319c_Var> _3217_v = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d08ebc_FindVar((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3217_v != nullptr)) {
		return jule::Any(_3217_v, &__jule_any_type7);;
	};
	jule::Ptr<_204cd9b90_TypeAlias> _3267_ta = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d093b8_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3267_ta != nullptr)) {
		return jule::Any(_3267_ta, &__jule_any_type8);;
	};
	if ((!(_31635_binded))) {
		jule::Ptr<_204b2b471_Enum> _3328_enm = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d0a342_FindEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3328_enm != nullptr)) {
			return jule::Any(_3328_enm, &__jule_any_type12);;
		};
		jule::Ptr<_204b2cb7b_TypeEnum> _3378_tenm = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d0a683_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3378_tenm != nullptr)) {
			return jule::Any(_3378_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_204b1d5a6_Fn> _3437_f = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d09bb0_FindFn((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3437_f != nullptr)) {
		return jule::Any(_3437_f, &__jule_any_type10);;
	};
	jule::Ptr<_204a4a46c_Struct> _3487_s = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d097b4_FindStruct((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3487_s != nullptr)) {
		return jule::Any(_3487_s, &__jule_any_type9);;
	};
	return _204ca79c6_findBuiltins(_self_, _31623_ident);;
}



inline jule::Ptr<_204c000b1_ReferenceStack> _204ca8158_getOwnerRefers(_204ca4b49_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
			_case_begin_20906e717:;
			{
				return _204bdc323_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_20906d0a6:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_20906d040:;
	};
	return nullptr;;
}



inline void _20907ebcd_pushReference(_204ca4b49_eval* _self_, jule::Ptr<_204a4d2c7_StructIns>* _37437_ref) {
	jule::Ptr<_204c000b1_ReferenceStack> _3757_refers = _204ca8158_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_209081ecc_Exist(_3757_refers, (*(_37437_ref))))))) {
		_204c00e19_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type64));
	};
}

inline void _20908ab51_pushReference(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns>* _37437_ref) {
	jule::Ptr<_204c000b1_ReferenceStack> _3757_refers = _204ca8158_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_20908d0a4_Exist(_3757_refers, (*(_37437_ref))))))) {
		_204c00e19_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type65));
	};
}

inline void _2090a234e_pushReference(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _37437_ref) {
	jule::Ptr<_204c000b1_ReferenceStack> _3757_refers = _204ca8158_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_2090a46d6_Exist(_3757_refers, (*(_37437_ref))))))) {
		_204c00e19_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type7));
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ca8752__evalEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2b471_Enum> _38125_enm) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38125_enm, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca8b4d_evalEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2b471_Enum> _39028_enm, jule::Ptr<_204a14216_Token> _39040_errorToken) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39028_enm))._field_Public, (*_39028_enm.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, _39040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39028_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _204ca8752__evalEnum(_self_, _39028_enm);;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca8e8e__evalTypeEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2cb7b_TypeEnum> _39929_enm) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39929_enm, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca938a_evalTypeEnum(_204ca4b49_eval* _self_, jule::Ptr<_204b2cb7b_TypeEnum> _40832_enm, jule::Ptr<_204a14216_Token> _40848_errorToken) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40832_enm))._field_Public, (*_40832_enm.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, _40848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40832_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _204ca8e8e__evalTypeEnum(_self_, _40832_enm);;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca96cb__evalStruct(_204ca4b49_eval* _self_, jule::Ptr<_204a4d2c7_StructIns> _41727_s) {
	jule::Ptr<_204ca2b7a_Data> _4187_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41727_s, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41727_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	if ((((*(_41727_s))._field_Decl != nullptr) && (*(*(_41727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4187_d))._field_Type))._field_BindIdent=(*(*(_41727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4187_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca9ac7_evalStruct(_204ca4b49_eval* _self_, jule::Ptr<_204a4a46c_Struct> _43130_s, jule::Ptr<_204a14216_Token> _43146_errorToken) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43130_s))._field_Public, (*_43130_s.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, _43146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43130_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_204caa27b_checkDeprecated(_self_, &((*(_43130_s))._field_Directives), _43146_errorToken);
	jule::Ptr<_204a4d2c7_StructIns> _4407_ins = _204a4a912_instance(_43130_s);;
	if (((*_43130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_204a4d2c7_StructIns> _4478_exist = _204a4ac20_appendInstance(_43130_s, &(_4407_ins));;
		if ((_4478_exist != nullptr)) {
			_4407_ins=_4478_exist;
		} else {
			if ((!(_204c4aeec_precheckStructIns((*(_self_))._field_s, &(_4407_ins), _43146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	_20907ebcd_pushReference(_self_, &(_4407_ins));
	return _204ca96cb__evalStruct(_self_, _4407_ins);;
}



inline jule::Ptr<_204ca2b7a_Data> _204ca9e18_evalFnIns(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns> _46125_f) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_46125_f, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_46125_f, &__jule_any_type65), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline void _204caa27b_checkDeprecated(_204ca4b49_eval* _self_, jule::Slice<jule::Ptr<_204a2902d_Directive>>* _47036_directives, jule::Ptr<_204a14216_Token> _47067_tok) {
	if (_204ca5b17_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_204a2902d_Directive> _4753_d = _204cd2209_findDirective(_47036_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4753_d != nullptr)) {
		if (((*_4753_d.alloc)._field_Args.len() == 0LL)) {
			_204ca5122_pushErr(_self_, _47067_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_204ca5122_pushErr(_self_, _47067_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4753_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204caa677_evalFn(_204ca4b49_eval* _self_, jule::Ptr<_204b1d5a6_Fn> _48626_f, jule::Ptr<_204a14216_Token> _48634_errorToken) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48626_f))._field_Public, (*_48626_f.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, _48634_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48626_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_204caa27b_checkDeprecated(_self_, &((*(_48626_f))._field_Directives), _48634_errorToken);
	jule::Ptr<_204b21664_FnIns> _4957_ins = _204b1ed49_instance(_48626_f);;
	if (((*_48626_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_204b21664_FnIns> _5028_exist = _204b20157_appendInstance(_48626_f, &(_4957_ins));;
		if ((_5028_exist != nullptr)) {
			_4957_ins=_5028_exist;
		};
	};
	_20908ab51_pushReference(_self_, &(_4957_ins));
	return _204ca9e18_evalFnIns(_self_, _4957_ins);;
}



inline void _204caaa95_pushIllegalCycleError(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _51138_v1, jule::Ptr<_204c5319c_Var>* _51149_v2, _1eeabb290_Builder* _51164_message) {
	;
	jule::Str _5133_refersTo = _1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_51138_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_51149_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5143_buf = _1eeabd5a0_Buf(_51164_message);;
	({
		auto except = _1eeabc26e_WriteStr(_51164_message, _200e338ae_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:515:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_51164_message, _5133_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:516:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_51164_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:517:3"));
	});
	({
		auto except = _1eeabbe2d_Write(_51164_message, _5143_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:518:3"));
		(except.result);
	});
}



inline jule::Bool _204caae91_checkCrossCycle(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _52132_v, _1eeabb290_Builder* _52146_message) {
	{
		auto expr = &((*((*(_52132_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20909243d:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> *_52210_d = it;
			{
				if (((*(_52210_d)) == (*(_self_))._field_owner)) {
					_204caaa95_pushIllegalCycleError(_self_, _52132_v, _52210_d, _52146_message);
					return false;;
				};
				if ((!(_204caae91_checkCrossCycle(_self_, _52210_d, _52146_message)))) {
					_204caaa95_pushIllegalCycleError(_self_, _52132_v, _52210_d, _52146_message);
					return false;;
				};
			}
			_iter_next_20909243d:;
			++it;
			goto _iter_begin_20909243d;
		}
		_iter_end_20909243d:;
	};
	return true;;
}



inline jule::Bool _204cab38c_checkIllegalCycles(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var>* _53839_v, jule::Ptr<_204a14216_Token> _53848_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53839_v)))) {
		_204ca5122_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_owner.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1eeabb290_Builder _5517_message = static__1eeabbadc_New(32LL);;
	if ((!(_204caae91_checkCrossCycle(_self_, _53839_v, &(_5517_message))))) {
		jule::Str _5548_errMsg = _1eeabcaee_Str(&_5517_message);;
		_1eeabccec_Clear(&_5517_message);
		_204caaa95_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53839_v, &(_5517_message));
		_5548_errMsg+=_1eeabcaee_Str(&_5517_message);
		_204ca5122_pushErr(_self_, _53848_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5548_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*((*(_self_))._field_owner))._field_Depends=jule::append((*(*(_self_))._field_owner.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_53839_v)); __jule_collection; }));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cab788_evalVar(_204ca4b49_eval* _self_, jule::Ptr<_204c5319c_Var> _56627_v, jule::Ptr<_204a14216_Token> _56636_errorToken) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56627_v))._field_Public, (*_56627_v.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, _56636_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56627_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_204caa27b_checkDeprecated(_self_, &((*(_56627_v))._field_Directives), _56636_errorToken);
	if (((*_56627_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_2090a9532;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4)) {
			_case_begin_20909ad92:;
			{
				jule::Bool _5834_ok = _204cab38c_checkIllegalCycles(_self_, &(_56627_v), _56636_errorToken);;
				if ((!(_5834_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
			_case_begin_20909a765:;
			{
				jule::Ptr<_204bd8929_scopeChecker> _5888_s = (*(_self_))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1);;
				jule::Ptr<_204bd8929_scopeChecker> _5898_root = _204bdbd06_getRoot(_5888_s);;
				if ((((((*_56627_v.alloc)._field_Scope != nullptr) && (!((*_56627_v.alloc)._field_Constant))) && ((*(_5898_root))._field_captured != nullptr)) && _204cd8034_isVarCaptured(_5898_root, _5888_s, _56627_v))) {
					_204bdba70_pushCaptured(_5898_root, &(_56627_v));
				};
				if (((!((*_56627_v.alloc)._field_Reference)) || _204ca5b17_isUnsafe(_self_))) {
					goto _match_end_20909aba5;
				};
				while ((((*_5888_s.alloc)._field_owner == nullptr) && ((*_5888_s.alloc)._field_parent != nullptr))) {
					{
						_5888_s=(*(_5888_s))._field_parent;
					}
				_iter_next_20909e912:;
				}
				_iter_end_20909e912:;;
				if (((((*_5888_s.alloc)._field_owner != nullptr) && (*(*(_5888_s))._field_owner.alloc)._field_Anon) && ((*_56627_v.alloc)._field_Scope != (*(*(_5888_s))._field_owner.alloc)._field_Scope))) {
					_204ca5122_pushErr(_self_, _56636_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56627_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_20909aba5:;
	};
	if (((*_56627_v.alloc)._field_Scope == nullptr)) {
		_2090a234e_pushReference(_self_, &(_56627_v));
	};
	if (((((!((*_56627_v.alloc)._field_Used)) && (!((*_56627_v.alloc)._field_Binded))) && ((*_56627_v.alloc)._field_Scope == nullptr)) && (((*_56627_v.alloc)._field_Value == nullptr) || ((*((*_56627_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_204b248a9_SymTab> _6228_varfile = _204c0e477_findVarFileInPackage(&((*((*(_self_))._field_s))._field_files), &(_56627_v));;
		jule::Ptr<_204b248a9_SymTab> _6238_file = _204c31bb4_getCurrentFile((*(_self_))._field_s);;
		_204c31e6c_setCurrentFile((*(_self_))._field_s, _6228_varfile);
		_204c493e6_checkVar((*(_self_))._field_s, &(_56627_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4));
		_204c31e6c_setCurrentFile((*(_self_))._field_s, _6238_file);
	};
	(*_56627_v.alloc)._field_Used=true;
	if ((((*_56627_v.alloc)._field_TypeSym == nullptr) || ((*((*_56627_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_2090a9532:;
	jule::Ptr<_204ca2b7a_Data> _6427_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=(*((*_56627_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56627_v.alloc)._field_Mutable, ._field_Reference=(*_56627_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56627_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56627_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	if ((((*_56627_v.alloc)._field_Value != nullptr) && ((*(*(_56627_v))._field_Value.alloc)._field_Data != nullptr))) {
		if (((!((*_56627_v.alloc)._field_Binded)) && _204c535a9_IsInitialized(_56627_v))) {
			(*(_6427_d))._field_IsRune=(*(*((*(_56627_v))._field_Value))._field_Data.alloc)._field_IsRune;
		};
		if (((*_56627_v.alloc)._field_Constant && ((*(*((*(_56627_v))._field_Value))._field_Data.alloc)._field_Constant != nullptr))) {
			(*(_6427_d))._field_Constant=jule::new_ptr<_204a9d338_Const>((*(*((*((*(_56627_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6427_d.alloc)._field_Model=jule::Any((*_6427_d.alloc)._field_Constant, &__jule_any_type15);
			if (_204c53ac6_untypedConstant(_56627_v)) {
				_204ca61de_applyNumericPrefix(_self_, &(_6427_d));
				(*_6427_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6427_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cabb84_evalTypeAlias(_204ca4b49_eval* _self_, jule::Ptr<_204cd9b90_TypeAlias> _66633_ta, jule::Ptr<_204a14216_Token> _66649_errorToken) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66633_ta))._field_Public, (*_66633_ta.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, _66649_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66633_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66633_ta))._field_Used=true;
	jule::Trait _6757_kind = (*((*((*_66633_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_204ca2b7a_Data> _67611_d = nullptr;;
	{
		auto &_match_expr{ _6757_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)) {
			_case_begin_2090b4c46:;
			{
				_67611_d=_204ca96cb__evalStruct(_self_, _6757_kind.cast_ptr<_204a4d2c7_StructIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3)) {
			_case_begin_2090b7a18:;
			{
				_67611_d=_204ca8752__evalEnum(_self_, _6757_kind.cast_ptr<_204b2b471_Enum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4)) {
			_case_begin_2090b86b7:;
			{
				_67611_d=_204ca8e8e__evalTypeEnum(_self_, _6757_kind.cast_ptr<_204b2cb7b_TypeEnum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_2090b364b:;
			{
				_67611_d=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66633_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});
				if ((*_66633_ta.alloc)._field_Binded) {
					(*((*(_67611_d))._field_Type))._field_BindIdent=(*_66633_ta.alloc)._field_Ident;
				} else {
					(*((*(_67611_d))._field_Type))._field_BindIdent=(*(*((*(_66633_ta))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
				};
				(*(_67611_d))._field_Model=jule::Any((*_67611_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		_match_end_2090b34c5:;
	};
	(*((*(_67611_d))._field_Type))._field_Generic=(*_66633_ta.alloc)._field_Generic;
	return _67611_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cac080_evalDef(_204ca4b49_eval* _self_, jule::Any* _70528_def, jule::Ptr<_204a14216_Token> _70542_ident) {
	{
		auto &_match_expr{ (*(_70528_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2090bb654:;
			{
				return _204cab788_evalVar(_self_, (*(_70528_def)).cast_ptr<_204c5319c_Var>(&__jule_any_type7), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2090bb423:;
			{
				return _204ca8b4d_evalEnum(_self_, (*(_70528_def)).cast_ptr<_204b2b471_Enum>(&__jule_any_type12), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_2090bb6ba:;
			{
				return _204ca938a_evalTypeEnum(_self_, (*(_70528_def)).cast_ptr<_204b2cb7b_TypeEnum>(&__jule_any_type13), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2090bb731:;
			{
				return _204ca9ac7_evalStruct(_self_, (*(_70528_def)).cast_ptr<_204a4a46c_Struct>(&__jule_any_type9), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_2090bb797:;
			{
				jule::Ptr<_204b1d5a6_Fn> _7168_f = (*(_70528_def)).cast_ptr<_204b1d5a6_Fn>(&__jule_any_type10);;
				if ((!(*(_7168_f))._field_Ident.equal("init", 4))) {
					return _204caa677_evalFn(_self_, _7168_f, _70542_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2090bb81e:;
			{
				return _204ca9e18_evalFnIns(_self_, (*(_70528_def)).cast_ptr<_204b21664_FnIns>(&__jule_any_type65));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2090bb896:;
			{
				return _204cabb84_evalTypeAlias(_self_, (*(_70528_def)).cast_ptr<_204cd9b90_TypeAlias>(&__jule_any_type8), _70542_ident);;
			}
		}
		_match_end_2090bb555:;
	};
	_204ca5122_pushErr(_self_, _70542_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_70542_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cac3c1_evalIdent(_204ca4b49_eval* _self_, jule::Ptr<_204a30760_IdentExpr> _72929_ident) {
	jule::Any _7307_def = _204ca7dc2_getDef(_self_, &((*(_72929_ident))._field_Ident), (*_72929_ident.alloc)._field_Binded);;
	return _204cac080_evalDef(_self_, &(_7307_def), (*_72929_ident.alloc)._field_Token);;
}



inline jule::Ptr<_204ca2b7a_Data> _204cac712_evalUnary(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a31002_UnaryExpr> _73430_u) {
	_204cc8c28_unaryEval _7357_unary = static__204cc919b_new(_self_);;
	return _204cca5cb_eval(&_7357_unary, _73430_u);;
}



inline jule::Ptr<_204ca2b7a_Data> _204caca53_evalVariadic(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a313cb_VariadicExpr> _73933_v) {
	if (((*(_73933_v))._field_Expr == nullptr)) {
		_204ca5122_pushErr(_self_.ptr(), (*_73933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204cda982_Type> _7457_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7457_prefix;
	});;
	jule::Ptr<_204ca2b7a_Data> _7497_d = _204cc8794_evalExpr(_self_, (*(_73933_v))._field_Expr);;
	if ((_7497_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_204cdcda2_Variadicable((*(_7497_d))._field_Type.ptr())))) {
		_204ca5122_pushErr(_self_, (*_73933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_7497_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_204cd7b05_makeVariadic(&(_7497_d), (*(_204cde18e_Slc((*(_7497_d))._field_Type.ptr())))._field_Elem);
	return _7497_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cacd94_evalUnsafe(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a302a9_UnsafeExpr> _76131_u) {
	jule::Bool _7623_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_204ca2b7a_Data> _7647_d = _204cc8794_evalExpr(_self_, (*(_76131_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7623_unsafety;
	return _7647_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cad1d5_evalArr(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3549b_SliceExpr> _76928_s) {
	jule::Ptr<_204cea3ba_Arr> _7717_pt = _204cdde08_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_204cea3ba_Arr> _7737_arr = jule::new_ptr<_204cea3ba_Arr>(_204cea3ba_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7717_pt))._field_Elem});;
	jule::Bool _7797_filled = false;;
	if (((*(_76928_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76928_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_2090cba60:;
				{
					if (((*((*((*(_76928_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_204a313cb_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_2090cb9a5;
					};
					if ((*_7717_pt.alloc)._field_Auto) {
						_204ca5122_pushErr(_self_, (*_76928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7797_filled=true;
					((*(_76928_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_2090cb9a5:;
		};
	};
	(*(_7737_arr))._field_N=(*(_76928_s))._field_Exprs.len();
	if ((!((*_7717_pt.alloc)._field_Auto))) {
		if (((*_7737_arr.alloc)._field_N > (*_7717_pt.alloc)._field_N)) {
			_204ca5122_pushErr(_self_, (*_76928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7737_arr.alloc)._field_N < (*_7717_pt.alloc)._field_N)) {
			(*_7737_arr.alloc)._field_N=(*_7717_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_204b166c0_ArrayExprModel> _8087_model = jule::new_ptr<_204b166c0_ArrayExprModel>(_204b166c0_ArrayExprModel{._field_Kind=_7737_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7797_filled) {
		(*(_8087_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8087_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_76928_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_204cda982_Type> _8177_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7737_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76928_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2090d3a67:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _81915_elem = *it;
			{
				jule::Ptr<_204ca2b7a_Data> _8208_d = _204cc8794_evalExpr(_self_, _81915_elem);;
				if ((_8208_d == nullptr)) {
					goto _iter_next_2090d3a67;
				};
				;
				if (_204c3e111_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_7737_arr.alloc)._field_Elem), &(_8208_d), &((*(_81915_elem))._field_Token))) {
					_204c3987b_checkAssignType((*(_self_))._field_s, false, &((*_7737_arr.alloc)._field_Elem), &(_8208_d), (*_81915_elem.alloc)._field_Token, _204ca8158_getOwnerRefers(_self_));
				};
				(*(_8087_model))._field_Elems=jule::append((*_8087_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8208_d))._field_Model; __jule_collection; }));
			}
			_iter_next_2090d3a67:;
			++it;
			goto _iter_begin_2090d3a67;
		}
		_iter_end_2090d3a67:;
	};
	(*_self_.alloc)._field_prefix=_8177_prefix;
	if (_7797_filled) {
		(*(_8087_model))._field_Elems=jule::append((*_8087_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7737_arr, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8087_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204cad68b_evalExpSlc(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3549b_SliceExpr> _84631_s, jule::Ptr<_204cda982_Type> _84655_t, jule::Any _84669_first) {
	jule::Ptr<_204ce8099_Slc> _8477_slc = jule::new_ptr<_204ce8099_Slc>(_204ce8099_Slc{._field_Elem=_84655_t});;
	jule::I32 _8517_i = 0LL;;
	jule::Ptr<_204b13788_SliceExprModel> _8527_model = jule::new_ptr<_204b13788_SliceExprModel>(_204b13788_SliceExprModel{._field_ElemType=_84655_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84631_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84669_first != nullptr)) {
		(*(_8527_model))._field_Elems=jule::append((*_8527_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84669_first; __jule_collection; }));
		_8517_i=1LL;
	};
	jule::Ptr<_204cda982_Type> _8617_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8477_slc))._field_Elem;
	{
		auto expr = (*_84631_s.alloc)._field_Exprs.slice(_8517_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2090de897:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _86315_elem = *it;
			{
				jule::Ptr<_204ca2b7a_Data> _8648_d = _204cc8794_evalExpr(_self_, _86315_elem);;
				if ((_8648_d != nullptr)) {
					;
					if (_204c3e111_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8477_slc.alloc)._field_Elem), &(_8648_d), &((*(_86315_elem))._field_Token))) {
						_204c3987b_checkAssignType((*(_self_))._field_s, false, &((*_8477_slc.alloc)._field_Elem), &(_8648_d), (*_86315_elem.alloc)._field_Token, _204ca8158_getOwnerRefers(_self_));
					};
					(*(_8527_model))._field_Elems=jule::append((*_8527_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8648_d))._field_Model; __jule_collection; }));
				};
			}
			_iter_next_2090de897:;
			++it;
			goto _iter_begin_2090de897;
		}
		_iter_end_2090de897:;
	};
	(*_self_.alloc)._field_prefix=_8617_prefix;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8477_slc, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8527_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204cad9cc_evalSliceExpr(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3549b_SliceExpr> _88434_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_204cdde08_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_2090e4517:;
				{
					return _204cad1d5_evalArr(_self_, _88434_s);;
				}
			}
			else if ((_204cde18e_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_2090e45b1:;
				{
					jule::Ptr<_204ce8099_Slc> _8909_pt = _204cde18e_Slc((*(_self_))._field_prefix);;
					return _204cad68b_evalExpSlc(_self_, _88434_s, (*(_8909_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_2090e445c:;
		};
	};
	jule::Ptr<_204cda982_Type> _8957_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88434_s))._field_Exprs.len() == 0LL)) {
		_204ca5122_pushErr(_self_, (*_88434_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a2de45_Expr> _9037_firstExpr = (*(_88434_s))._field_Exprs[0LL];;
	jule::Ptr<_204ca2b7a_Data> _9047_firstElem = _204cc8794_evalExpr(_self_, _9037_firstExpr);;
	if ((_9047_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_204c3e111_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9047_firstElem))._field_Type), &(_9047_firstElem), &((*(_9037_firstExpr))._field_Token));
	jule::Ptr<_204ca2b7a_Data> _9147_d = _204cad68b_evalExpSlc(_self_, _88434_s, (*_9047_firstElem.alloc)._field_Type, (*_9047_firstElem.alloc)._field_Model);;
	(*_self_.alloc)._field_prefix=_8957_prefix;
	return _9147_d;;
}



inline jule::Bool _204caddc8_checkIntegerIndexingByData(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _92047_d, jule::Ptr<_204a14216_Token> _92061_token) {
	jule::Str _9213_errKey = _204cd54d7_checkDataForIntegerIndexing(&((*(_self_))._field_s), _92047_d, &(_92061_token), _204ca8158_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9213_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_2090ec6a7:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_2090ec388:;
			{
				_204ca5122_pushErr(_self_, _92061_token, _9213_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_92047_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_2090ebbd4:;
			{
				_204ca5122_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_2090ec322:;
	};
	return false;;
}



inline void _204cae2e6_indexingPtr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _93332_d, jule::Ptr<_204ca2b7a_Data>* _93347_index, jule::Ptr<_204a35e08_IndexingExpr>* _93366_i) {
	_204caddc8_checkIntegerIndexingByData(_self_, _93347_index, (*((*(_93366_i))))._field_Token);
	(*((*(_93332_d))))._field_Lvalue=true;
	jule::Ptr<_204cead8d_Ptr> _9377_ptr = _204cdd655_Ptr((*((*(_93332_d))))._field_Type.ptr());;
	{
		
		if (_204ceb90a_IsUnsafe(_9377_ptr.ptr())) {
			_case_begin_209100578:;
			{
				_204ca5122_pushErr(_self_, (*((*(_93366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_204ca5b17_isUnsafe(_self_)))) {
			_case_begin_209100611:;
			{
				_204ca5122_pushErr(_self_, (*((*(_93366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_2091004ce:;
	};
	(*((*(_93332_d))))._field_Type=(*(_9377_ptr))._field_Elem;
}



inline void _204cae714_indexingArr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _94932_d, jule::Ptr<_204ca2b7a_Data>* _94947_index, jule::Ptr<_204a35e08_IndexingExpr>* _94966_i) {
	jule::Ptr<_204cea3ba_Arr> _9507_arr = _204cdde08_Arr((*((*(_94932_d))))._field_Type.ptr());;
	(*((*(_94932_d))))._field_Type=(*(_9507_arr))._field_Elem;
	_204caddc8_checkIntegerIndexingByData(_self_, _94947_index, (*((*(_94966_i))))._field_Token);
	(*((*(_94932_d))))._field_Lvalue=true;
	if ((_204ca35b5_IsConst((*(_94947_index)).ptr()) && (_204b07738_AsF64((*((*(_94947_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9507_arr.alloc)._field_N)))) {
		_204ca5122_pushErr(_self_, (*((*(_94966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _204caeb32_indexingSlc(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _95932_d, jule::Ptr<_204ca2b7a_Data>* _95947_index, jule::Ptr<_204a35e08_IndexingExpr>* _95966_i) {
	jule::Ptr<_204ce8099_Slc> _9607_slc = _204cde18e_Slc((*((*(_95932_d))))._field_Type.ptr());;
	(*((*(_95932_d))))._field_Type=(*(_9607_slc))._field_Elem;
	_204caddc8_checkIntegerIndexingByData(_self_, _95947_index, (*((*(_95966_i))))._field_Token);
	(*((*(_95932_d))))._field_Lvalue=true;
	if ((!(_204ca35b5_IsConst((*(_95947_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95932_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_209107c9a:;
			{
				jule::Ptr<_204b13788_SliceExprModel> _9718_m = (*((*(_95932_d))))._field_Model.unsafe_cast_ptr<_204b13788_SliceExprModel>();;
				jule::F64 _9724_indx = _204b07738_AsF64((*((*(_95947_index))))._field_Constant.ptr());;
				if ((_9724_indx >= static_cast<jule::F64>((*(_9718_m))._field_Elems.len()))) {
					_204ca5122_pushErr(_self_, (*((*(_95966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_95932_d))))._field_Model=(*(_9718_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_9724_indx))];
					(*((*(_95932_d))))._field_Decl=true;
				};
			}
		}
		_match_end_209107c34:;
	};
}



inline void _204cb0050_indexingMap(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _98232_d, jule::Ptr<_204ca2b7a_Data>* _98247_index, jule::Ptr<_204a35e08_IndexingExpr>* _98266_i) {
	(*((*(_98232_d))))._field_Lvalue=true;
	if (((*(_98247_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_204ce973d_Map> _9877_m = _204cdebc8_Map((*((*(_98232_d))))._field_Type.ptr());;
	_204c90d44_assignTypeChecker _9887_atc = _204c90d44_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9877_m))._field_Key, ._field_d=(*(_98247_index)), ._field_errorToken=(*((*(_98266_i))))._field_Token, ._field_refers=_204ca8158_getOwnerRefers(_self_)};;
	_204c91d45_check(&_9887_atc);
	(*((*(_98232_d))))._field_Type=(*_9877_m.alloc)._field_Val;
}



inline void _204cb52ca_indexingStr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _99932_d, jule::Ptr<_204ca2b7a_Data>* _99947_index, jule::Ptr<_204a35e08_IndexingExpr>* _99966_i) {
	(*((*(_99932_d))))._field_Type=_204d6082b_primU8;
	(*((*(_99932_d))))._field_Mutable=false;
	(*((*(_99932_d))))._field_Lvalue=true;
	if (((*(_99947_index)) == nullptr)) {
		return;;
	};
	_204caddc8_checkIntegerIndexingByData(_self_, _99947_index, (*((*(_99966_i))))._field_Token);
	if ((!(_204ca35b5_IsConst((*(_99947_index)).ptr())))) {
		(*((*(_99932_d))))._field_Constant=nullptr;
		(*((*(_99932_d))))._field_untyped=false;
		return;;
	};
	if (_204ca35b5_IsConst((*(_99932_d)).ptr())) {
		jule::I64 _10174_j = _204b0721b_AsI64((*((*(_99947_index))))._field_Constant.ptr());;
		jule::Str _10184_s = _204b06bee_ReadStr((*((*(_99932_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10174_j) >= _10184_s.len())) {
			_204ca5122_pushErr(_self_, (*((*(_99966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_204b07c99_SetU64((*((*(_99932_d))))._field_Constant, static_cast<jule::U64>(_10184_s[static_cast<jule::I32>(_10174_j)]));
		};
	};
}



inline void _204cb56e8_comptimeRange(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _102734_d, jule::Ptr<_204ca2b7a_Data>* _102749_index, jule::Ptr<_204a35e08_IndexingExpr>* _102768_i) {
	if (((*(_102749_index)) == nullptr)) {
		(*(_102734_d))=nullptr;
		return;;
	};
	if ((!(_204caddc8_checkIntegerIndexingByData(_self_, _102749_index, (*((*((*(_102768_i))))._field_Index))._field_Token)))) {
		(*(_102734_d))=nullptr;
		return;;
	};
	if ((!(_204ca35b5_IsConst((*(_102749_index)).ptr())))) {
		(*(_102734_d))=nullptr;
		_204ca5122_pushErr(_self_, (*((*((*(_102768_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _10423_j = static_cast<jule::I32>(_204b0721b_AsI64((*((*(_102749_index))))._field_Constant.ptr()));;
	jule::Ptr<_204ba37e5_comptimeRange> _10437_ci = _204ce14d2_comptimeRange((*((*(_102734_d))))._field_Type.ptr());;
	if ((_10423_j >= ((_204ba35c5_comptimeRangeKindMptrData*)(*(_10437_ci))._field_kind.safe_type())->_204ba3471_len((*(_10437_ci))._field_kind.data))) {
		(*(_102734_d))=nullptr;
		_204ca5122_pushErr(_self_, (*((*((*(_102768_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_204ba35c5_comptimeRangeKindMptrData*)(*(_10437_ci))._field_kind.safe_type())->_204ba2959_index((*(_10437_ci))._field_kind.data, _102734_d, _10423_j);
}



inline void _204cb5b16_toIndexing(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _105231_d, jule::Ptr<_204ca2b7a_Data>* _105246_index, jule::Ptr<_204a35e08_IndexingExpr>* _105265_i) {
	{
		
		if ((_204cdd655_Ptr((*((*(_105231_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_209119707:;
			{
				_204cae2e6_indexingPtr(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_204cdde08_Arr((*((*(_105231_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2091197a1:;
			{
				_204cae714_indexingArr(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_204cde18e_Slc((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_209119817:;
			{
				_204caeb32_indexingSlc(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_204cdebc8_Map((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_20911987d:;
			{
				_204cb0050_indexingMap(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_204cdd138_Prim((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_2091198e4:;
			{
				jule::Ptr<_204ce3a9a_Prim> _10674_prim = _204cdd138_Prim((*((*(_105231_d))))._field_Type);;
				{
					
					if (_204ce7065_IsStr(_10674_prim.ptr())) {
						_case_begin_20911dc06:;
						{
							_204cb52ca_indexingStr(_self_, _105231_d, _105246_index, _105265_i);
							return;;
						}
					}
					_match_end_20911db4b:;
				};
			}
		}
		else if ((_204ce14d2_comptimeRange((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_20911996b:;
			{
				_204cb56e8_comptimeRange(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		_match_end_209119592:;
	};
	_204ca5122_pushErr(_self_, (*((*(_105265_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_105231_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _204cb60bc_pushGenericsFromExprSubIdent(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32058_SubIdentExpr>* _108050_sexpr, jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>* _10818_generics, jule::Ptr<_204a2de45_Expr>* _108141_expr) {
	jule::Ptr<_204a2a4d5_SubIdentTypeDecl> _10827_t = jule::new_ptr<_204a2a4d5_SubIdentTypeDecl>(_204a2a4d5_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>>(nullptr)});;
	if ((!(_204cd6560_pushSubIdentFromExpr(jule::Any((*(_108050_sexpr)), &__jule_any_type89), &(_10827_t))))) {
		_204ca5122_pushErr(_self_.ptr(), (*((*(_108141_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*(_10818_generics)); __jule_push_dest.push(jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Kind=jule::Any(_10827_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _204cb64b8_pushGenericsFromData(jule::Ptr<_204ca4b49_eval> _self_, jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>* _109142_generics, jule::Ptr<_204a2de45_Expr>* _109175_expr) {
	{
		auto &_match_expr{ (*((*(_109175_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_209126aee:;
			{
				jule::Ptr<_204a31002_UnaryExpr> _10948_u = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_204a31002_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10948_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_20912b609:;
						{
							jule::Ptr<_204a2b63a_PtrTypeDecl> _10979_kind = jule::new_ptr<_204a2b63a_PtrTypeDecl>(_204a2b63a_PtrTypeDecl{._field_Elem=jule::Ptr<_204a29b11_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _10989__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a29b11_TypeDecl>(nullptr); __jule_collection; });;
							_204cb64b8_pushGenericsFromData(_self_, &(_10989__generics), &((*(_10948_u))._field_Expr));
							(*_10979_kind.alloc)._field_Elem=_10989__generics[0LL];
							{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*((*(_109175_expr))))._field_Token, ._field_Kind=jule::Any(_10979_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_20912b670:;
						{
							jule::Ptr<_204a2abab_SptrTypeDecl> _11069_kind = jule::new_ptr<_204a2abab_SptrTypeDecl>(_204a2abab_SptrTypeDecl{._field_Elem=jule::Ptr<_204a29b11_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _11079__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a29b11_TypeDecl>(nullptr); __jule_collection; });;
							_204cb64b8_pushGenericsFromData(_self_, &(_11079__generics), &((*(_10948_u))._field_Expr));
							(*_11069_kind.alloc)._field_Elem=_11079__generics[0LL];
							{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*((*(_109175_expr))))._field_Token, ._field_Kind=jule::Any(_11069_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_209127308:;
						{
							_204ca5122_pushErr(_self_, (*_10948_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_20912956e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_209126b65:;
			{
				{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push((*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_204a29b11_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_209122d3c:;
			{
				jule::Ptr<_204a32058_SubIdentExpr> _11218_sexpr = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_204a32058_SubIdentExpr>();;
				return _204cb60bc_pushGenericsFromExprSubIdent(_self_, &(_11218_sexpr), _109142_generics, _109175_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_209122da3:;
			{
				jule::Ptr<_204a30760_IdentExpr> _11248_ident = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_204a30760_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*_11248_ident.alloc)._field_Token, ._field_Ident=(*_11248_ident.alloc)._field_Ident, ._field_Binded=(*(_11248_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_209124c0c:;
			{
				{
					auto expr = &((*((*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_204a2ea39_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_209135cea:;
					if (it != expr_end) {
						jule::Ptr<_204a2de45_Expr> _113316_texpr = *it;
						{
							if ((!(_204cb64b8_pushGenericsFromData(_self_, _109142_generics, &(_113316_texpr))))) {
								return false;;
							};
						}
						_iter_next_209135cea:;
						++it;
						goto _iter_begin_209135cea;
					}
					_iter_end_209135cea:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_209124c73:;
			{
				jule::Ptr<_204a31b7e_NamespaceExpr> _11398_ns = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_204a31b7e_NamespaceExpr>();;
				jule::Ptr<_204a2a21b_IdentTypeDecl> _11408_decl = jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*(_11398_ns))._field_Ident, ._field_Ident=(*((*_11398_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*(_11408_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_204a2a8ae_NamespaceTypeDecl>(_204a2a8ae_NamespaceTypeDecl{._field_Namespace=(*_11398_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*_11408_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11408_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_209122cc6:;
			{
				_204ca5122_pushErr(_self_, (*((*(_109175_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_209122c60:;
	};
	return true;;
}



inline void _204cb682b_evalIdentDeclFromIndexing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204ca2b7a_Data>* _116147_d, jule::Ptr<_204a35e08_IndexingExpr>* _116162_i) {
	jule::Ptr<_204a4d2c7_StructIns> _11627_s = _204cde6ab_Struct((*((*(_116147_d))))._field_Type.ptr());;
	if ((_11627_s == nullptr)) {
		_204ca5122_pushErr(_self_.ptr(), (*((*((*(_116162_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_116147_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_116147_d))=nullptr;
		return;;
	};
	jule::Ptr<_204a2a21b_IdentTypeDecl> _116911_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_116162_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_209147515:;
			{
				jule::Ptr<_204a30760_IdentExpr> _11728_expr = (*((*((*(_116162_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_204a30760_IdentExpr>();;
				_116911_decl=jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*_11728_expr.alloc)._field_Token, ._field_Ident=(*_11728_expr.alloc)._field_Ident, ._field_Binded=(*(_11728_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_209148b10:;
			{
				jule::Ptr<_204a31b7e_NamespaceExpr> _11798_expr = (*((*((*(_116162_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_204a31b7e_NamespaceExpr>();;
				_116911_decl=jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*(_11798_expr))._field_Ident, ._field_Ident=(*((*_11798_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_209147b53:;
			{
				_204ca5122_pushErr(_self_.ptr(), (*((*(_116162_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_116147_d))=nullptr;
				return;;
			}
		}
		_match_end_209147adc:;
	};
	if ((!(_204cb64b8_pushGenericsFromData(_self_, &((*(_116911_decl))._field_Generics), &((*((*(_116162_i))))._field_Index))))) {
		(*(_116147_d))=nullptr;
		return;;
	};
	_11627_s=({ auto _wrap_copy = _204cbd327_typeChecker(_self_.ptr()); _204d02218_fromStruct(&_wrap_copy, &(_116911_decl), &((*(_11627_s))._field_Decl)); });
	if ((_11627_s == nullptr)) {
		(*(_116147_d))=nullptr;
		return;;
	};
	(*(*((*(_116147_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11627_s, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _204cb6cd2_checkGenericFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204b21664_FnIns>* _120436_f, jule::Ptr<_204a14216_Token>* _120452_et, jule::Any* _120476_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_204b21664_FnIns> _12057_old = (*(_120436_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204c49ddb_checkGenericFn((*(_self_))._field_s, _120436_f, _120452_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_204cd61db_updateModelToGenericIns(_120476_model, _120436_f);
		_2091507e8_updateRefer(_204ca8158_getOwnerRefers(_self_.ptr()), &(_12057_old), _120436_f);
	};
	return __jule_func_result;;
}



inline void _204cb7145_evalFnGenericFromIndexing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204ca2b7a_Data>* _122047_d, jule::Ptr<_204a35e08_IndexingExpr>* _122062_i) {
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _12217_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a29b11_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_204cb64b8_pushGenericsFromData(_self_, &(_12217_generics), &((*((*(_122062_i))))._field_Index))))) {
		(*(_122047_d))=nullptr;
		return;;
	};
	jule::Ptr<_204b21664_FnIns> _12277_f = _204cde425_Fn((*((*(_122047_d))))._field_Type.ptr());;
	jule::I32 _12287_genericsLen = 0LL;;
	if (((*(_12277_f))._field_Decl != nullptr)) {
		_12287_genericsLen=(*(*(_12277_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_204c338b9_checkGenericQuantity((*(_self_))._field_s.ptr(), _12287_genericsLen, _12217_generics.len(), (*((*((*(_122062_i))))._field_Expr))._field_Token)))) {
		(*(_122047_d))=nullptr;
		return;;
	};
	(*(_12277_f))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(0LL, (*((*_12277_f.alloc)._field_Decl))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cd909b_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12217_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209156403:;
		if (it != expr_end) {
			jule::Ptr<_204a29b11_TypeDecl> _123915_g = *it;
			{
				jule::Ptr<_204ca2b7a_Data> _12408_k = _204cbd668_evalType(_self_.ptr(), _123915_g);;
				if ((_12408_k == nullptr)) {
					(*(_122047_d))=nullptr;
					return;;
				};
				(*_12277_f.alloc)._field_Generics=jule::append((*_12277_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=(*(_12408_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_209156403:;
			++it;
			goto _iter_begin_209156403;
		}
		_iter_end_209156403:;
	};
	if (_204b22b2c_IsBuiltin(_12277_f)) {
		return;;
	};
	jule::Bool _12523_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204cb6cd2_checkGenericFn(_self_, &(_12277_f), &((*((*((*(_122062_i))))._field_Expr))._field_Token), &((*((*(_122047_d))))._field_Model));
		_12523_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12523_ok) {
		(*(*((*(_122047_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12277_f, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1);
	} else {
		(*(_122047_d))=nullptr;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cb7486_evalIndexing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a35e08_IndexingExpr> _126033_i) {
	jule::Ptr<_204cda982_Type> _12617_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12617_prefix;
	});;
	jule::Ptr<_204ca2b7a_Data> _12657_d = _204cc7980_evalExprKind(_self_, (*((*(_126033_i))._field_Expr))._field_Kind);;
	if ((_12657_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12657_d))._field_Decl) {
		_204cb682b_evalIdentDeclFromIndexing(_self_, &(_12657_d), &(_126033_i));
		return _12657_d;;
	};
	if ((_204cde425_Fn((*(_12657_d))._field_Type.ptr()) != nullptr)) {
		_204cb7145_evalFnGenericFromIndexing(_self_, &(_12657_d), &(_126033_i));
		return _12657_d;;
	};
	_204ca2b7a_Data _12817_oldData = (*(_12657_d));;
	jule::Ptr<_204ca2b7a_Data> _12837_index = _204cc8794_evalExpr(_self_, (*(_126033_i))._field_Index);;
	if ((_12837_index == nullptr)) {
		return nullptr;;
	};
	_204beb3a9_makeComptimeRange(&(_12657_d));
	(*(_12657_d))._field_Decl=false;
	_204cb5b16_toIndexing(_self_, &(_12657_d), &(_12837_index), &(_126033_i));
	if ((_12657_d == nullptr)) {
		return nullptr;;
	};
	if (_204ca35b5_IsConst(_12657_d)) {
		(*_12657_d.alloc)._field_Decl=false;
		(*_12657_d.alloc)._field_Model=jule::Any((*_12657_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_12657_d.alloc)._field_Decl) {
		(*_12657_d.alloc)._field_Decl=false;
	} else {
		(*_12657_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b13c3e_IndexingExprModel>(_204b13c3e_IndexingExprModel{._field_Token=(*(_126033_i))._field_Token, ._field_Expr=jule::new_ptr<_204ca2b7a_Data>(_12817_oldData), ._field_Index=_12837_index}), &__jule_any_type43);
	};
	return _12657_d;;
}



inline __jule_tuple_x_204ca2b7a_Data__jule_tuple_x_204ca2b7a_Data _204cb77c7_evalSlicingExprs(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a36568_SlicingExpr>* _132038_s) {
	__jule_tuple_x_204ca2b7a_Data__jule_tuple_x_204ca2b7a_Data __jule_func_result;
	jule::Ptr<_204cda982_Type> _13217_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13217_prefix;
	});;
	jule::Ptr<_204ca2b7a_Data> _132511_l = nullptr;;
	jule::Ptr<_204ca2b7a_Data> _132611_r = nullptr;;
	if (((*((*(_132038_s))))._field_Start != nullptr)) {
		_132511_l=_204cc8794_evalExpr(_self_, (*((*(_132038_s))))._field_Start);
		if ((_132511_l != nullptr)) {
			_204caddc8_checkIntegerIndexingByData(_self_, &(_132511_l), (*((*(_132038_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_132511_l=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5ea28_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b0500a_NewI64(0LL)});
		(*((*(_132511_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_132511_l.alloc)._field_Model=jule::Any((*_132511_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_132038_s))))._field_To != nullptr)) {
		_132611_r=_204cc8794_evalExpr(_self_, (*((*(_132038_s))))._field_To);
		if ((_132611_r != nullptr)) {
			_204caddc8_checkIntegerIndexingByData(_self_, &(_132611_r), (*((*(_132038_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _132511_l;
	__jule_func_result.__jule_result_arg1 = _132611_r;
	return __jule_func_result;;
}



inline void _204cb7a80_slicingArr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _135627_d) {
	jule::Ptr<_204cda982_Type> _13577_elemType = (*(_204cdde08_Arr((*((*(_135627_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_135627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce8099_Slc>(_204ce8099_Slc{._field_Elem=_13577_elemType}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24)});
	(*((*(_135627_d))))._field_Lvalue=false;
	(*((*(_135627_d))))._field_Mutable=((*((*(_135627_d))))._field_Mutable || (!(_204cdc368_Mutable(_13577_elemType.ptr()))));
}



inline void _204cb7e9d_slicingStr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _137127_d, jule::Ptr<_204ca2b7a_Data>* _137138_l, jule::Ptr<_204ca2b7a_Data>* _137149_r) {
	(*((*(_137127_d))))._field_Lvalue=false;
	(*((*(_137127_d))))._field_Mutable=true;
	if ((!(_204ca35b5_IsConst((*(_137127_d)).ptr())))) {
		return;;
	};
	if ((((*(_137138_l)) == nullptr) || ((*(_137149_r)) == nullptr))) {
		(*((*(_137127_d))))._field_Constant=nullptr;
		(*((*(_137127_d))))._field_untyped=false;
		return;;
	};
	if ((_204ca35b5_IsConst((*(_137138_l)).ptr()) && _204ca35b5_IsConst((*(_137149_r)).ptr()))) {
		jule::I64 _13854_left = _204b0721b_AsI64((*((*(_137138_l))))._field_Constant.ptr());;
		if ((_13854_left < 0LL)) {
			return;;
		};
		jule::Str _13904_s = _204b06bee_ReadStr((*((*(_137127_d))))._field_Constant);;
		jule::I64 _13918_right = static_cast<jule::I64>(0LL);;
		if (((*(_137149_r)) == nullptr)) {
			_13918_right=static_cast<jule::I64>(_13904_s.len());
		} else {
			_13918_right=_204b0721b_AsI64((*((*(_137149_r))))._field_Constant);
		};
		if ((_13854_left > _13918_right)) {
			return;;
		};
		_204b0830a_SetStr((*((*(_137127_d))))._field_Constant, _13904_s.slice(static_cast<jule::I32>(_13854_left), static_cast<jule::I32>(_13918_right)));
		(*((*(_137127_d))))._field_Decl=true;
	} else {
		(*((*(_137127_d))))._field_Constant=nullptr;
		(*((*(_137127_d))))._field_untyped=false;
	};
}



inline void _204cb8476_checkSlicing(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _140933_d, jule::Ptr<_204ca2b7a_Data>* _140944_l, jule::Ptr<_204ca2b7a_Data>* _140955_r, jule::Ptr<_204a36568_SlicingExpr>* _140966_s) {
	{
		
		if ((_204cdde08_Arr((*((*(_140933_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_209173354:;
			{
				_204cb7a80_slicingArr(_self_, _140933_d);
				return;;
			}
		}
		else if ((_204cde18e_Slc((*((*(_140933_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2091733ed:;
			{
				return;;
			}
		}
		else if ((_204cdd138_Prim((*((*(_140933_d))))._field_Type) != nullptr)) {
			_case_begin_209173464:;
			{
				jule::Ptr<_204ce3a9a_Prim> _14174_prim = _204cdd138_Prim((*((*(_140933_d))))._field_Type);;
				{
					
					if (_204ce7065_IsStr(_14174_prim.ptr())) {
						_case_begin_209175c3b:;
						{
							_204cb7e9d_slicingStr(_self_, _140933_d, _140944_l, _140955_r);
							return;;
						}
					}
					_match_end_209175b81:;
				};
			}
		}
		_match_end_209173222:;
	};
	_204ca5122_pushErr(_self_, (*((*(_140966_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_140933_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_204ca2b7a_Data> _204cb87b7_evalSlicing(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a36568_SlicingExpr> _142832_s) {
	jule::Ptr<_204ca2b7a_Data> _14297_d = _204cc8794_evalExpr(_self_, (*(_142832_s))._field_Expr);;
	if ((_14297_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204ca2b7a_Data> _14347_l;
	jule::Ptr<_204ca2b7a_Data> _143414_r;
	({
		__jule_tuple_x_204ca2b7a_Data__jule_tuple_x_204ca2b7a_Data __jule_assign_result = _204cb77c7_evalSlicingExprs(_self_, &(_142832_s));
		_14347_l = __jule_assign_result.__jule_result_arg0;
		_143414_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14347_l == nullptr)) {
		return _14297_d;;
	};
	(*(_14297_d))._field_Decl=false;
	_204cb8476_checkSlicing(_self_, &(_14297_d), &(_14347_l), &(_143414_r), &(_142832_s));
	if (_204ca35b5_IsConst(_14297_d)) {
		(*_14297_d.alloc)._field_Decl=false;
		(*_14297_d.alloc)._field_Model=jule::Any((*_14297_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_14297_d.alloc)._field_Decl) {
		(*_14297_d.alloc)._field_Decl=false;
	} else {
		jule::Ptr<_204b1502b_SlicingExprModel> _14528_model = jule::new_ptr<_204b1502b_SlicingExprModel>(_204b1502b_SlicingExprModel{._field_Token=(*_142832_s.alloc)._field_Token, ._field_Expr=(*_14297_d.alloc)._field_Model, ._field_Left=(*(_14347_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_143414_r != nullptr)) {
			(*(_14528_model))._field_Right=(*_143414_r.alloc)._field_Model;
		};
		(*_14297_d.alloc)._field_Model=jule::Any(_14528_model, &__jule_any_type95);
	};
	return _14297_d;;
}



inline void _204cb8bd5_castPtr(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _146527_t, jule::Ptr<_204ca2b7a_Data> _146541_d, jule::Ptr<_204a14216_Token> _146551_errorToken) {
	(*(_146541_d))._field_Constant=nullptr;
	(*_146541_d.alloc)._field_untyped=false;
	jule::Ptr<_204ce75c6_Sptr> _14683_sptr = _204cdd3be_Sptr((*_146541_d.alloc)._field_Type.ptr());;
	if ((_14683_sptr != nullptr)) {
		if ((!(_204cdb1be_Equal((*(_204cdd655_Ptr(_146527_t.ptr())))._field_Elem, (*_14683_sptr.alloc)._field_Elem)))) {
			_204ca5122_pushErr(_self_, _146551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_146541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_146527_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_204ca5b17_isUnsafe(_self_)))) {
		_204ca5122_pushErr(_self_, _146551_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204ce3a9a_Prim> _14813_prim = _204cdd138_Prim((*(_146541_d))._field_Type);;
	if (((_204cdd655_Ptr((*(_146541_d))._field_Type) == nullptr) && ((_14813_prim == nullptr) || (!(_204ba1c99_IsInt(_204ce3e1e_Str(_14813_prim.ptr()))))))) {
		_204ca5122_pushErr(_self_, _146551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_146541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_146527_t.ptr()), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _204cb9103_castStruct(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _148730_t, jule::Ptr<_204ca2b7a_Data> _148744_d, jule::Ptr<_204a14216_Token> _148754_errorToken) {
	(*(_148744_d))._field_Constant=nullptr;
	(*_148744_d.alloc)._field_untyped=false;
	jule::Ptr<_204b28cba_Trait> _14907_tr = _204cde942_Trait((*_148744_d.alloc)._field_Type.ptr());;
	if ((_14907_tr == nullptr)) {
		_204ca5122_pushErr(_self_, _148754_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_148744_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_148730_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _14967_s = _204cde6ab_Struct(_148730_t.ptr());;
	_20907ebcd_pushReference(_self_, &(_14967_s));
	if ((!(_204a4bade_IsImplements((*(_14967_s))._field_Decl.ptr(), _14907_tr)))) {
		_204ca5122_pushErr(_self_, _148754_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_148744_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_148730_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _204cb9521_castRef(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _150427_t, jule::Ptr<_204ca2b7a_Data> _150441_d, jule::Ptr<_204a14216_Token> _150451_errorToken) {
	(*(_150441_d))._field_Constant=nullptr;
	(*_150441_d.alloc)._field_untyped=false;
	jule::Ptr<_204ce75c6_Sptr> _15077_sptr = _204cdd3be_Sptr(_150427_t.ptr());;
	jule::Ptr<_204cead8d_Ptr> _15097_ptr = _204cdd655_Ptr((*_150441_d.alloc)._field_Type.ptr());;
	if (((_15097_ptr != nullptr) && _204cdb1be_Equal((*(_15077_sptr))._field_Elem, (*_15097_ptr.alloc)._field_Elem))) {
		if ((!(_204ca5b17_isUnsafe(_self_)))) {
			_204ca5122_pushErr(_self_, _150451_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_204cde6ab_Struct((*(_15077_sptr))._field_Elem.ptr()) != nullptr)) {
		_204cb9103_castStruct(_self_, (*_15077_sptr.alloc)._field_Elem, _150441_d, _150451_errorToken);
		return;;
	};
	_204ca5122_pushErr(_self_, _150451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_150441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_150427_t), &__jule_any_type5); __jule_collection; }));
}



inline void _204cb993e_castSlc(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _152727_t, jule::Ptr<_204ca2b7a_Data> _152741_d, jule::Ptr<_204a14216_Token> _152751_errorToken) {
	jule::Ptr<_204a9d338_Const> _15283_c = (*(_152741_d))._field_Constant;;
	(*_152741_d.alloc)._field_Constant=nullptr;
	(*_152741_d.alloc)._field_untyped=false;
	if ((_204cdd8db_Enum((*_152741_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_204cdd138_Prim((*((*(_204cdd8db_Enum((*(_152741_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_204ce7065_IsStr(_204cdd138_Prim((*((*(_204cdd8db_Enum((*(_152741_d))._field_Type)))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
			_204ca5122_pushErr(_self_, _152751_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_152741_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_152727_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_204cdd138_Prim((*_152741_d.alloc)._field_Type.ptr()) == nullptr) || (!(_204ce7065_IsStr(_204cdd138_Prim((*_152741_d.alloc)._field_Type.ptr()).ptr()))))) {
		_204ca5122_pushErr(_self_, _152751_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*_152741_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_152727_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_152727_t=(*(_204cde18e_Slc(_152727_t.ptr())))._field_Elem;
	jule::Ptr<_204ce3a9a_Prim> _15433_prim = _204cdd138_Prim(_152727_t);;
	if (((_15433_prim == nullptr) || ((!(_204ce54c5_IsU8(_15433_prim.ptr()))) && (!(_204ce4ea8_IsI32(_15433_prim)))))) {
		_204ca5122_pushErr(_self_, _152751_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*_152741_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_152727_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15283_c != nullptr)) {
		{
			
			if (_204ce54c5_IsU8(_15433_prim.ptr())) {
				_case_begin_20919b13a:;
				{
					jule::Str _15535_s = _204b06bee_ReadStr(_15283_c);;
					jule::Ptr<_204b13788_SliceExprModel> _15549_model = jule::new_ptr<_204b13788_SliceExprModel>(_204b13788_SliceExprModel{._field_ElemType=_152727_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15535_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15535_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20919cb31:;
						if (it != expr_end) {
							jule::U8 *_155812_b = it;
							{
								jule::Ptr<_204a9d338_Const> _155910_bc = static__204b05280_NewU64(static_cast<jule::U64>((*(_155812_b))));;
								(*(_155910_bc))._field_Kind=(*_15433_prim.alloc)._field_Kind;
								(*(_15549_model))._field_Elems=jule::append((*_15549_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_155910_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_20919cb31:;
							++it;
							goto _iter_begin_20919cb31;
						}
						_iter_end_20919cb31:;
					};
					(*_152741_d.alloc)._field_Model=jule::Any(_15549_model, &__jule_any_type80);
					(*_152741_d.alloc)._field_Decl=true;
				}
			}
			else if (_204ce4ea8_IsI32(_15433_prim.ptr())) {
				_case_begin_20919b1d4:;
				{
					jule::Slice<jule::I32> _15665_runes = __jule_strToRunes(_204b06bee_ReadStr(_15283_c));;
					jule::Ptr<_204b13788_SliceExprModel> _15679_model = jule::new_ptr<_204b13788_SliceExprModel>(_204b13788_SliceExprModel{._field_ElemType=_152727_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15665_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15665_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2091a0cee:;
						if (it != expr_end) {
							jule::I32 *_157112_r = it;
							{
								jule::Ptr<_204a9d338_Const> _157210_rc = static__204b0500a_NewI64(static_cast<jule::I64>((*(_157112_r))));;
								(*(_157210_rc))._field_Kind=(*_15433_prim.alloc)._field_Kind;
								(*(_15679_model))._field_Elems=jule::append((*_15679_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_157210_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_2091a0cee:;
							++it;
							goto _iter_begin_2091a0cee;
						}
						_iter_end_2091a0cee:;
					};
					(*_152741_d.alloc)._field_Model=jule::Any(_15679_model, &__jule_any_type80);
					(*_152741_d.alloc)._field_Decl=true;
				}
			}
			_match_end_20919b04c:;
		};
	};
}



inline void _204cb9ca2_castStr(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _158227_d, jule::Ptr<_204a14216_Token> _158237_errorToken) {
	if ((_204cdd8db_Enum((*(_158227_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204b2b471_Enum> _15848_e = _204cdd8db_Enum((*(_158227_d))._field_Type);;
		if (((_204cdd138_Prim((*((*(_15848_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _204ce7065_IsStr(_204cdd138_Prim((*((*(_15848_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_204a9d338_Const> _15903_c = (*(_158227_d))._field_Constant;;
	(*_158227_d.alloc)._field_Constant=nullptr;
	(*_158227_d.alloc)._field_untyped=false;
	if ((_204cdd138_Prim((*_158227_d.alloc)._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204ce3a9a_Prim> _15944_prim = _204cdd138_Prim((*(_158227_d))._field_Type);;
		if (((!(_204ce54c5_IsU8(_15944_prim.ptr()))) && (!(_204ce4ea8_IsI32(_15944_prim))))) {
			_204ca5122_pushErr(_self_, _158237_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_204cdad7d_Str((*(_158227_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_15903_c != nullptr)) {
			{
				
				if (_204ce54c5_IsU8(_15944_prim.ptr())) {
					_case_begin_2091a8a71:;
					{
						(*_158227_d.alloc)._field_Constant=static__204b05813_NewStr(__jule_strFromByte(static_cast<jule::U8>(_204b074a2_AsU64(_15903_c))));
						(*_158227_d.alloc)._field_Model=jule::Any((*_158227_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158227_d.alloc)._field_Decl=true;
					}
				}
				else if (_204ce4ea8_IsI32(_15944_prim.ptr())) {
					_case_begin_2091a8b1a:;
					{
						(*_158227_d.alloc)._field_Constant=static__204b05813_NewStr(__jule_strFromRune(static_cast<jule::I32>(_204b0721b_AsI64(_15903_c))));
						(*_158227_d.alloc)._field_Model=jule::Any((*_158227_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158227_d.alloc)._field_Decl=true;
					}
				}
				_match_end_2091a8961:;
			};
		};
		return;;
	};
	jule::Ptr<_204ce8099_Slc> _16157_s = _204cde18e_Slc((*_158227_d.alloc)._field_Type.ptr());;
	if ((_16157_s == nullptr)) {
		_204ca5122_pushErr(_self_, _158237_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_204cdad7d_Str((*(_158227_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_204cda982_Type> _16217_t = (*(_16157_s))._field_Elem;;
	jule::Ptr<_204ce3a9a_Prim> _16223_prim = _204cdd138_Prim(_16217_t.ptr());;
	if (((_16223_prim == nullptr) || ((!(_204ce54c5_IsU8(_16223_prim.ptr()))) && (!(_204ce4ea8_IsI32(_16223_prim)))))) {
		_204ca5122_pushErr(_self_, _158237_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_204cdad7d_Str((*(_158227_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _204cba1c0_castInt(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _162927_t, jule::Ptr<_204ca2b7a_Data> _162941_d, jule::Ptr<_204a14216_Token> _162951_errorToken) {
	if (_204ca35b5_IsConst(_162941_d.ptr())) {
		jule::Ptr<_204ce3a9a_Prim> _16314_prim = _204cdd138_Prim(_162927_t.ptr());;
		{
			
			if (_204ba16c2_IsSigInt((*(_16314_prim))._field_Kind)) {
				_case_begin_2091b22a5:;
				{
					_204b079e1_SetI64((*_162941_d.alloc)._field_Constant.ptr(), _204b0721b_AsI64((*(_162941_d))._field_Constant));
				}
			}
			else if (_204ba19d0_IsUnsigInt((*(_16314_prim))._field_Kind)) {
				_case_begin_2091b234e:;
				{
					_204b07c99_SetU64((*_162941_d.alloc)._field_Constant.ptr(), _204b074a2_AsU64((*(_162941_d))._field_Constant));
				}
			}
			_match_end_2091b221c:;
		};
	} else {
		(*(_162941_d))._field_Constant=nullptr;
		(*_162941_d.alloc)._field_untyped=false;
	};
	if ((_204cdd8db_Enum((*(_162941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204b2b471_Enum> _16444_e = _204cdd8db_Enum((*(_162941_d))._field_Type);;
		if (_204ba2371_IsNum(_204cdad7d_Str((*((*(_16444_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	if ((_204cdd3be_Sptr((*(_162941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204ce3a9a_Prim> _16514_prim = _204cdd138_Prim(_162927_t.ptr());;
		if ((!(_204ce6a48_IsUintptr(_16514_prim.ptr())))) {
			_204ca5122_pushErr(_self_, _162951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_162941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_162927_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_204cdd655_Ptr((*(_162941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204ce3a9a_Prim> _16584_prim = _204cdd138_Prim(_162927_t.ptr());;
		if (_204ce6a48_IsUintptr(_16584_prim.ptr())) {
		} else if ((!(_204ca5b17_isUnsafe(_self_)))) {
			_204ca5122_pushErr(_self_, _162951_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_204ce3a9a_Prim> _16673_prim = _204cdd138_Prim((*(_162941_d))._field_Type.ptr());;
	if (((_16673_prim != nullptr) && _204ba2371_IsNum(_204ce3e1e_Str(_16673_prim)))) {
		return;;
	};
	_204ca5122_pushErr(_self_, _162951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_162941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_162927_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _204cba5dd_castNum(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _167527_t, jule::Ptr<_204ca2b7a_Data> _167541_d, jule::Ptr<_204a14216_Token> _167551_errorToken) {
	if (_204ca35b5_IsConst(_167541_d.ptr())) {
		jule::Ptr<_204ce3a9a_Prim> _16774_prim = _204cdd138_Prim(_167527_t.ptr());;
		{
			
			if (_204ba20da_IsFloat((*(_16774_prim))._field_Kind)) {
				_case_begin_2091bd6ac:;
				{
					_204b085b3_SetF64((*_167541_d.alloc)._field_Constant.ptr(), _204b07738_AsF64((*(_167541_d))._field_Constant));
				}
			}
			else if (_204ba16c2_IsSigInt((*(_16774_prim))._field_Kind)) {
				_case_begin_2091bd756:;
				{
					_204b079e1_SetI64((*_167541_d.alloc)._field_Constant.ptr(), _204b0721b_AsI64((*(_167541_d))._field_Constant));
				}
			}
			else if (_204ba19d0_IsUnsigInt((*_16774_prim.alloc)._field_Kind)) {
				_case_begin_2091bd7bc:;
				{
					_204b07c99_SetU64((*(_167541_d))._field_Constant, _204b074a2_AsU64((*(_167541_d))._field_Constant));
				}
			}
			_match_end_2091bd5d0:;
		};
	} else {
		(*(_167541_d))._field_Constant=nullptr;
		(*_167541_d.alloc)._field_untyped=false;
	};
	if ((_204cdd8db_Enum((*(_167541_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204b2b471_Enum> _16924_e = _204cdd8db_Enum((*(_167541_d))._field_Type);;
		if (_204ba2371_IsNum(_204cdad7d_Str((*((*(_16924_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_204ce3a9a_Prim> _16983_prim = _204cdd138_Prim((*(_167541_d))._field_Type.ptr());;
	if (((_16983_prim != nullptr) && _204ba2371_IsNum(_204ce3e1e_Str(_16983_prim)))) {
		return;;
	};
	_204ca5122_pushErr(_self_, _167551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_167541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_167527_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _204cbaa0b_castPrim(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _170628_t, jule::Ptr<_204ca2b7a_Data> _170642_d, jule::Ptr<_204a14216_Token> _170652_errorToken) {
	jule::Ptr<_204ce3a9a_Prim> _17073_prim = _204cdd138_Prim(_170628_t.ptr());;
	{
		
		if (_204ce72eb_IsAny(_17073_prim.ptr())) {
			_case_begin_2091c6bd2:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1710:4"));;
			}
		}
		else if (_204ce7065_IsStr(_17073_prim.ptr())) {
			_case_begin_2091c6880:;
			{
				_204cb9ca2_castStr(_self_, _170642_d, _170652_errorToken);
			}
		}
		else if (_204ba1c99_IsInt(_204ce3e1e_Str(_17073_prim))) {
			_case_begin_2091c68e6:;
			{
				_204cba1c0_castInt(_self_, _170628_t, _170642_d, _170652_errorToken);
			}
		}
		else if (_204ba2371_IsNum(_204ce3e1e_Str(_17073_prim))) {
			_case_begin_2091c695c:;
			{
				_204cba5dd_castNum(_self_, _170628_t, _170642_d, _170652_errorToken);
			}
		}
		else {
			_case_begin_2091c6819:;
			{
				_204ca5122_pushErr(_self_, _170652_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str(_170628_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_2091c6792:;
	};
}



inline void _204cbad6e_castConstant(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type>* _172233_t, jule::Ptr<_204ca2b7a_Data>* _172248_d) {
	if ((((*(_172248_d)) == nullptr) || (!(_204ca35b5_IsConst((*(_172248_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_204ce3a9a_Prim> _17263_prim = _204cdd138_Prim((*(_172233_t)).ptr());;
	_204cd6010_castConstByType(&((*(_17263_prim))._field_Kind), _172248_d);
	(*((*(_172248_d))))._field_Model=jule::Any((*((*(_172248_d))))._field_Constant, &__jule_any_type15);
}



inline void _204cbb28c_castTypeEnum(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type>* _173133_t, jule::Ptr<_204ca2b7a_Data>* _173148_d, jule::Ptr<_204a14216_Token>* _173163_errorToken) {
	jule::I32 _17323_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_204c3a2d8_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_173148_d))))._field_Type), _173133_t, _173163_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17323_n);;
		_204ca5122_pushErr(_self_, (*(_173163_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_173148_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_173133_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_173148_d))))._field_Constant=nullptr;
	(*((*(_173148_d))))._field_untyped=false;
}



inline void _204cbb6aa_castTypeEnumT(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type>* _174134_t, jule::Ptr<_204ca2b7a_Data>* _174149_d, jule::Ptr<_204a14216_Token>* _174164_errorToken) {
	jule::I32 _17423_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_204c3a2d8_checkTypeCompatibility((*(_self_))._field_s, _174134_t, &((*((*(_174149_d))))._field_Type), _174164_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17423_n);;
		_204ca5122_pushErr(_self_, (*(_174164_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_174149_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_174134_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_174149_d))))._field_Constant=nullptr;
	(*((*(_174149_d))))._field_untyped=false;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbbb61_evalCastByTypeNData(_204ca4b49_eval* _self_, jule::Ptr<_204cda982_Type> _175139_t, jule::Ptr<_204ca2b7a_Data> _175153_d, jule::Ptr<_204a14216_Token> _175167_errorToken) {
	if (((_175153_d != nullptr) && (*_175153_d.alloc)._field_Decl)) {
		_204ca5122_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_204ca3098_IsNil(_175153_d.ptr())) {
			_case_begin_2091d4706:;
			{
				if ((!(_204cdc885_NilCompatible(_175139_t.ptr())))) {
					_204ca5122_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_175139_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_175153_d.alloc)._field_Constant=nullptr;
				(*_175153_d.alloc)._field_untyped=false;
			}
		}
		else if (((_204cdd138_Prim((*(_175153_d))._field_Type.ptr()) != nullptr) && _204ce72eb_IsAny(_204cdd138_Prim((*(_175153_d))._field_Type).ptr()))) {
			_case_begin_2091d44a3:;
			{
				if ((_204cddb72_TypeEnum(_175139_t.ptr()) != nullptr)) {
					_204ca5122_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
				};
				(*_175153_d.alloc)._field_Constant=nullptr;
				(*_175153_d.alloc)._field_untyped=false;
			}
		}
		else if (((_204cdd138_Prim(_175139_t) != nullptr) && _204ce72eb_IsAny(_204cdd138_Prim(_175139_t).ptr()))) {
			_case_begin_2091d4519:;
			{
				(*_175153_d.alloc)._field_Constant=nullptr;
				(*_175153_d.alloc)._field_untyped=false;
			}
		}
		else if ((_204cddb72_TypeEnum((*(_175153_d))._field_Type) != nullptr)) {
			_case_begin_2091d4580:;
			{
				_204cbb28c_castTypeEnum(_self_, &(_175139_t), &(_175153_d), &(_175167_errorToken));
			}
		}
		else if ((_204cddb72_TypeEnum(_175139_t) != nullptr)) {
			_case_begin_2091d45e6:;
			{
				_204cbb6aa_castTypeEnumT(_self_, &(_175139_t), &(_175153_d), &(_175167_errorToken));
			}
		}
		else if ((_204cdd655_Ptr(_175139_t) != nullptr)) {
			_case_begin_2091d53c7:;
			{
				_204cb8bd5_castPtr(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_204cdd3be_Sptr(_175139_t) != nullptr)) {
			_case_begin_2091d543d:;
			{
				_204cb9521_castRef(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_204cde18e_Slc(_175139_t) != nullptr)) {
			_case_begin_2091d54a4:;
			{
				_204cb993e_castSlc(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_204cde6ab_Struct(_175139_t) != nullptr)) {
			_case_begin_2091d551a:;
			{
				_204cb9103_castStruct(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_204cdd138_Prim(_175139_t) != nullptr)) {
			_case_begin_2091d5581:;
			{
				_204cbaa0b_castPrim(_self_, _175139_t, _175153_d, _175167_errorToken);
				_204cbad6e_castConstant(_self_, &(_175139_t), &(_175153_d));
			}
		}
		else {
			_case_begin_2091d4371:;
			{
				_204ca5122_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str(_175139_t), &__jule_any_type5); __jule_collection; }));
				_175153_d=nullptr;
			}
		}
		_match_end_2091d430a:;
	};
	if ((_175153_d == nullptr)) {
		return nullptr;;
	};
	if ((_204cdb82e_Binded(_175139_t.ptr()) || _204cdb82e_Binded((*(_175153_d))._field_Type.ptr()))) {
		if ((!(_204ca5b17_isUnsafe(_self_)))) {
			_204ca5122_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*(_175153_d))._field_Mutable=((*_175153_d.alloc)._field_Mutable || (!(_204cdc368_Mutable((*_175153_d.alloc)._field_Type.ptr()))));
	if (((!((*_175153_d.alloc)._field_Decl)) && ((_204cdd8db_Enum((*_175153_d.alloc)._field_Type.ptr()) == nullptr) || (!(_204cdb1be_Equal((*((*(_204cdd8db_Enum((*_175153_d.alloc)._field_Type.ptr())))._field_TypeSym))._field_Type, _175139_t)))))) {
		_204cd4cde_applyCastKind(&((*(_self_))._field_s), &(_175153_d), &(_175139_t), &(_175167_errorToken), _204ca8158_getOwnerRefers(_self_));
		(*((*(_175153_d))._field_Model.cast_ptr<_204b12a0c_CastingExprModel>(&__jule_any_type96)))._field_Token=_175167_errorToken;
	} else {
		(*_175153_d.alloc)._field_Type=_175139_t;
	};
	(*_175153_d.alloc)._field_Decl=false;
	(*_175153_d.alloc)._field_Lvalue=false;
	(*_175153_d.alloc)._field_untyped=false;
	if (_204ca35b5_IsConst(_175153_d)) {
		(*((*_175153_d.alloc)._field_Constant))._field_Kind=(*(_204cdd138_Prim(_175139_t.ptr())))._field_Kind;
	};
	return _175153_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbc117_evalCastT(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204cda982_Type>* _183631_t, jule::Ptr<_204a2de45_Expr>* _183646_e, jule::Ptr<_204a14216_Token>* _183666_et) {
	jule::Ptr<_204cda982_Type> _18377_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18377_prefix;
	});;
	if ((_204cde18e_Slc((*(_183631_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_183646_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_2091e7a5a:;
				{
					(*_self_.alloc)._field_prefix=(*(_183631_t));
				}
			}
			_match_end_2091e79d3:;
		};
	};
	jule::Ptr<_204ca2b7a_Data> _18467_d = _204cc8794_evalExpr(_self_, (*(_183646_e)));;
	if (((_18467_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18467_d;;
	};
	return _204cbbb61_evalCastByTypeNData(_self_, (*(_183631_t)), _18467_d, (*(_183666_et)));;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbc458_evalCast(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a317a5_CastExpr> _185329_c) {
	jule::Ptr<_204ce3193_TypeSym> _18547_t = _204c01975_buildType((*(_185329_c))._field_Kind);;
	jule::Bool _18553_ok = _204c3747d_checkTypeSym((*(_self_))._field_s, &(_18547_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18553_ok))) {
		return nullptr;;
	};
	return _204cbc117_evalCastT(_self_, &((*(_18547_t))._field_Type), &((*_185329_c.alloc)._field_Expr), &((*((*_185329_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbc799_evalNamespace(_204ca4b49_eval* _self_, jule::Ptr<_204a31b7e_NamespaceExpr> _186233_s) {
	jule::Ptr<_204c12139_ImportInfo> _18637_imp = _204cd83a8_findNamespace((*(_self_))._field_lookup, (*((*(_186233_s))._field_Namespace))._field_Kind);;
	if ((_18637_imp == nullptr)) {
		_204ca5122_pushErr(_self_, (*_186233_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_186233_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18697_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18637_imp, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data2);
	;
	_204ca5881_disallowBuiltin(_self_);
	jule::Any _18747_def = _204ca7dc2_getDef(_self_, &((*((*_186233_s.alloc)._field_Ident))._field_Kind), false);;
	_204ca5683_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18697_lookup;
	jule::Ptr<_204ca2b7a_Data> _18777_d = _204cac080_evalDef(_self_, &(_18747_def), (*_186233_s.alloc)._field_Ident);;
	return _18777_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbcc50_evalStructLitExplicit(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a4d2c7_StructIns> _188142_s, jule::Slice<jule::Ptr<_204a2de45_Expr>> _18827_exprs, jule::Ptr<_204a14216_Token> _188232_errorToken) {
	jule::Bool _18833_ok = _204c338b9_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_188142_s))._field_Decl))._field_Generics.len(), (*_188142_s.alloc)._field_Generics.len(), _188232_errorToken);;
	if ((!(_18833_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_188142_s.alloc)._field_Decl))) {
		_204ca5122_pushErr(_self_, _188232_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188142_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_20907ebcd_pushReference(_self_, &(_188142_s));
	_204caa27b_checkDeprecated(_self_, &((*(*(_188142_s))._field_Decl.alloc)._field_Directives), _188232_errorToken);
	_204c9a4ad_structLitChecker _18967_slc = _204c9a4ad_structLitChecker{._field_e=_self_, ._field_errorToken=_188232_errorToken, ._field_s=_188142_s, ._field_args=jule::Slice<jule::Ptr<_204b11cd6_StructArgExprModel>>(nullptr)};;
	_204c9bc2e_check(&_18967_slc, &(_18827_exprs));
	jule::Ptr<_204ca2b7a_Data> _19037_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_188142_s, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)}), ._field_Mutable=(*(_self_))._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_204b1217c_StructLitExprModel>(_204b1217c_StructLitExprModel{._field_Strct=_188142_s, ._field_Args=_18967_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	if ((*(*(_188142_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19037_d))._field_Type))._field_BindIdent=(*(*(_188142_s))._field_Decl.alloc)._field_Ident;
	};
	return _19037_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbd091_evalStructLit(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a33e8e_StructLit> _191934_lit) {
	jule::Ptr<_204ce3193_TypeSym> _19207_t = _204c01975_buildType((*(_191934_lit))._field_Kind);;
	jule::Bool _19213_ok = _204c3747d_checkTypeSym((*(_self_))._field_s, &(_19207_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19213_ok))) {
		return nullptr;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _19267_s = _204cde6ab_Struct((*(_19207_t))._field_Type.ptr());;
	if ((_19267_s == nullptr)) {
		if ((_204cdd3be_Sptr((*(_19207_t))._field_Type) != nullptr)) {
			_19267_s=_204cde6ab_Struct((*(_204cdd3be_Sptr((*(_19207_t))._field_Type)))._field_Elem.ptr());
			if ((_19267_s != nullptr)) {
				goto _julec_label_2092105de;
			};
		};
		_204ca5122_pushErr(_self_, (*((*_191934_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_2092105de:;
	jule::Ptr<_204ca2b7a_Data> _19397_d = _204cbcc50_evalStructLitExplicit(_self_, _19267_s, (*_191934_lit.alloc)._field_Exprs, (*((*_191934_lit.alloc)._field_Kind))._field_Token);;
	if ((_204cdd3be_Sptr((*(_19207_t))._field_Type) != nullptr)) {
		jule::Ptr<_204b1217c_StructLitExprModel> _19418_model = (*(_19397_d))._field_Model.cast_ptr<_204b1217c_StructLitExprModel>(&__jule_any_type98);;
		_204cd2b33_makeStructLitAlloc(&(_19397_d), &(_19418_model));
	};
	return _19397_d;;
}



inline _204cecd7e_typeChecker _204cbd327_typeChecker(_204ca4b49_eval* _self_) {
	return _204c36229_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_204ca2b7a_Data> _204cbd668_evalType(_204ca4b49_eval* _self_, jule::Ptr<_204a29b11_TypeDecl> _195128_t) {
	jule::Ptr<_204ce3193_TypeSym> _19527_tk = _204c01975_buildType(_195128_t);;
	jule::Bool _19533_ok = _204c3747d_checkTypeSym((*(_self_))._field_s, &(_19527_tk), (*(_self_))._field_lookup);;
	if ((!(_19533_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=(*(_19527_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19527_tk.alloc)._field_Type, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline void _204cbd9cb_callTypeFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr>* _196432_fc, jule::Ptr<_204ca2b7a_Data>* _196459_d) {
	if (((*((*(_196432_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr(_self_.ptr(), (*((*(_196432_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_196432_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr(_self_.ptr(), (*((*((*(_196432_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_196459_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_196432_fc))))._field_IsCo) {
		_204ca5122_pushErr(_self_, (*((*(_196432_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_196459_d))=nullptr;
		return;;
	} else if (((*((*(_196432_fc))))._field_Exception != nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_196432_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_196459_d))=nullptr;
		return;;
	};
	if (((*((*(_196432_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_204a2de45_Expr> _19808_arg = (*((*(_196432_fc))))._field_Args[0LL];;
		(*(_196459_d))=_204cbc117_evalCastT(_self_, &((*((*(_196459_d))))._field_Type), &(_19808_arg), &((*(_19808_arg))._field_Token));
		return;;
	};
	if (((*(_196459_d)) != nullptr)) {
		(*((*(_196459_d))))._field_Decl=false;
	};
}



inline void _204cbdd3e_callBuiltinFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr>* _199035_fc, jule::Ptr<_204ca2b7a_Data>* _199062_d) {
	if ((!(_204a33026_Unhandled((*(_199035_fc)).ptr())))) {
		_204ca5122_pushErr(_self_.ptr(), (*((*(_199035_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_199062_d))=(*(_204cde425_Fn((*((*(_199062_d))))._field_Type.ptr())))._field_caller(&(_self_), _199035_fc, _199062_d);
	if (((*(_199062_d)) == nullptr)) {
		return;;
	};
	(*((*(_199062_d))))._field_Mutable=true;
}



inline void _204cbe1a2_checkFnOfConcurrentCall(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns>* _200240_f, jule::Ptr<_204a14216_Token> _200251_errorToken) {
	if (_204ca5b17_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_200240_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20921e631:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> *_200610_p = it;
			{
				if (_204b1c231_IsSelf((*((*(_200610_p))))._field_Decl.ptr())) {
					if ((!(_204b1c4b7_IsRef((*((*(_200610_p))))._field_Decl)))) {
						_204ca5122_pushErr(_self_, _200251_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_200610_p))))._field_Decl))._field_Reference) {
					_204ca5122_pushErr(_self_, _200251_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_20921e631:;
			++it;
			goto _iter_begin_20921e631;
		}
		_iter_end_20921e631:;
	};
}



inline void _204cbe5c0_processExceptionalHandler(_204ca4b49_eval* _self_, jule::Ptr<_204b21664_FnIns>* _202146_f, jule::Ptr<_204a32b6e_FnCallExpr>* _202162_fc, jule::Ptr<_204ca2b7a_Data>* _202189_d) {
	jule::Bool _20223_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_204b1da5c_IsVoid((*((*(_202146_f))))._field_Decl.ptr()))));;
	jule::Ptr<_204bd8929_scopeChecker> _202311_csc = nullptr;;
	jule::Ptr<_204bd11d5_Scope> _202411_ch = nullptr;;
	jule::Ptr<_204b133ae_FnCallExprModel> _20267_model = (*((*(_202189_d))))._field_Model.cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31);;
	jule::Ptr<_204bd8929_scopeChecker> _20307_sc = (*(_self_))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1);;
	_202311_csc=_204bead37_newChildChecker(_20307_sc);
	if (_20223_resultNeeded) {
		(*(_202311_csc))._field_result=jule::new_ptr<_204bd7939_result>(_204bd7939_result{._field_func=(*(_202146_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_202411_ch=_204bde0d3_getChild(_20307_sc);
	(*((*((*(_202162_fc))))._field_Exception))._field_Parent=(*_20307_sc.alloc)._field_tree;
	(*((*(_202311_csc))._field_table))._field_Vars=jule::append((*(*(_202311_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204cd2ea7_buildErrorVar(&(_202411_ch), _202162_fc); __jule_collection; }));
	_204bde501_checkChildSsc(_20307_sc, &((*((*(_202162_fc))))._field_Exception), &(_202411_ch), &(_202311_csc));
	(*(_20267_model))._field_Assigned=_20223_resultNeeded;
	(*_20267_model.alloc)._field_Except=_202411_ch;
	if ((_20223_resultNeeded && ((*(_202311_csc))._field_result != nullptr))) {
		_204ca5122_pushErr(_self_, (*((*(_202162_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _204cbe933_callFn(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr>* _204828_fc, jule::Ptr<_204ca2b7a_Data>* _204855_d) {
	jule::Ptr<_204b21664_FnIns> _20497_f = _204cde425_Fn((*((*(_204855_d))))._field_Type.ptr());;
	if (_204b22b2c_IsBuiltin(_20497_f.ptr())) {
		_204cbdd3e_callBuiltinFn(_self_, _204828_fc, _204855_d);
		return;;
	};
	if (((!(_204b1dce3_IsMethod((*(_20497_f))._field_Decl.ptr()))) && _204d06eed_hasDirective(&((*(*(_20497_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_204ca5122_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_204855_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_204855_d))))._field_Mutable)) && _204b1dce3_IsMethod((*(_20497_f))._field_Decl.ptr())) && (!((*(*(_20497_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20497_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*(_self_))._field_target._field_mutable) {
			_204ca5122_pushErr(_self_, (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_204b1217c_StructLitExprModel> _20695_lit = _204cd7187_isLitBased(&((*((*(_204855_d))))._field_Model));;
			if ((_20695_lit == nullptr)) {
				_204ca5122_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_204c99ec4_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_20695_lit));
			};
		};
	} else if (((!(_204ca5b17_isUnsafe(_self_.ptr()))) && (*((*(_20497_f))._field_Decl))._field_Unsafety)) {
		_204ca5122_pushErr(_self_, (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20817_dynamicAnnotation = ((((*((*(_20497_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_20497_f.alloc)._field_Generics.len() == 0LL)) && ((*_20497_f.alloc)._field_Params.len() > 0LL));;
	if (_20817_dynamicAnnotation) {
		(*_20497_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc((*(*(_20497_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20497_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cd909b_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20497_f.alloc)._field_Generics.len() != (*(*(_20497_f))._field_Decl.alloc)._field_Generics.len())) {
		_204c338b9_checkGenericQuantity((*(_self_))._field_s.ptr(), (*(*(_20497_f))._field_Decl.alloc)._field_Generics.len(), (*_20497_f.alloc)._field_Generics.len(), (*((*(_204828_fc))))._field_Token);
		(*(_204855_d))=nullptr;
		return;;
	};
	jule::Ptr<_204c2e486_sema> _20907_old = (*(_self_))._field_s;;
	if (((*(*(_20497_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20497_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20907_old != (*_self_.alloc)._field_s)) {
			(*(_20907_old))._field_errors=jule::append((*_20907_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20907_old;
	});;
	_204c97576_fnCallArgChecker _21037_fcac = _204c97576_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_204828_fc))))._field_Args, ._field_errorToken=(*((*(_204828_fc))))._field_Token, ._field_f=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_dynamicAnnotation=_20817_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)};;
	if ((!(_20817_dynamicAnnotation))) {
		if ((!((*_20497_f.alloc)._field_reloaded))) {
			jule::Bool _21125_ok = _204c3d1ed_reloadFnInsTypes((*(_self_))._field_s, _20497_f);;
			(*_20497_f.alloc)._field_reloaded=true;
			if ((!(_21125_ok))) {
				(*(_204855_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_204b21664_FnIns> _21198_existInstance = _204b20157_appendInstance((*(_20497_f))._field_Decl, &(_20497_f));;
		if ((_21198_existInstance != nullptr)) {
			_20497_f=_21198_existInstance;
		};
	} else if ((!(_204c3b55e_buildFnNonGenericTypes((*(_self_))._field_s, _20497_f, &(_21037_fcac._field_ignored))))) {
		(*(_204855_d))=nullptr;
		return;;
	};
	_21037_fcac._field_f=_20497_f;
	jule::Bool _21307_ok = false;;
	if (((*(*(_20497_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20907_old, (*(_self_))._field_s);
		_21307_ok=_204c99b61_check(&_21037_fcac);
		std::swap(_20907_old, (*(_self_))._field_s);
	} else {
		_21307_ok=_204c99b61_check(&_21037_fcac);
	};
	if (_20817_dynamicAnnotation) {
		if ((!(_21307_ok))) {
			(*(_204855_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204cb6cd2_checkGenericFn(_self_, &(_20497_f), &((*((*(_204828_fc))))._field_Token), &((*((*(_204855_d))))._field_Model));
			_21307_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21307_ok))) {
			(*(_204855_d))=nullptr;
			return;;
		};
	};
	jule::Any _21517_callModel = (*((*(_204855_d))))._field_Model;;
	if (_204b1da5c_IsVoid((*(_20497_f))._field_Decl)) {
		(*(_204855_d))=_204cd4eed_buildVoidData();
	} else {
		(*((*(_204855_d))))._field_Type=(*_20497_f.alloc)._field_Result;
		(*((*(_204855_d))))._field_Lvalue=false;
	};
	jule::Ptr<_204b133ae_FnCallExprModel> _21607_model = jule::new_ptr<_204b133ae_FnCallExprModel>(_204b133ae_FnCallExprModel{._field_Token=(*((*(_204828_fc))))._field_Token, ._field_Func=_20497_f, ._field_IsCo=(*((*(_204828_fc))))._field_IsCo, ._field_Expr=_21517_callModel, ._field_Args=_21037_fcac._field_argModels, ._field_Except=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_204855_d))))._field_Model=jule::Any(_21607_model, &__jule_any_type31);
	(*((*(_204855_d))))._field_Mutable=true;
	if ((*(*(_20497_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_204828_fc))))._field_IsCo) {
			_204c3238a_pushErr((*(_self_))._field_s.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_204c326ed_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_204a33026_Unhandled((*(_204828_fc)).ptr())) {
				_case_begin_209245525:;
				{
					_204ca5122_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_204a332ac_Ignored((*(_204828_fc)).ptr())) {
				_case_begin_209245206:;
				{
					goto _match_end_209243ad9;
				}
			}
			else {
				_case_begin_209243b83:;
				{
					_204cbe5c0_processExceptionalHandler(_self_.ptr(), &(_20497_f), _204828_fc, _204855_d);
				}
			}
			_match_end_209243ad9:;
		};
	} else if ((!(_204a33026_Unhandled((*(_204828_fc)).ptr())))) {
		_204ca5122_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_204828_fc))))._field_IsCo) {
		(*((*(_21607_model))._field_Func))._field_AsAnon=true;
		(*(*(_21607_model))._field_Func.alloc)._field_CalledCo=true;
		_204cbe1a2_checkFnOfConcurrentCall(_self_.ptr(), &((*_21607_model.alloc)._field_Func), (*((*(_204828_fc))))._field_Token);
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cbec74_evalFnCall(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32b6e_FnCallExpr> _219731_fc) {
	jule::Ptr<_204cda982_Type> _21987_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21987_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_219731_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_20924a9ae:;
			{
				if (((*((*((*(_219731_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _204d631e1_builtinCallerError(&(_self_), &(_219731_fc));;
				};
			}
		}
		_match_end_20924a937:;
	};
	jule::Ptr<_204ca2b7a_Data> _22117_d = _204cc7980_evalExprKind(_self_, (*((*(_219731_fc))._field_Expr))._field_Kind);;
	if ((_22117_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22117_d))._field_Decl) {
		_204cbd9cb_callTypeFn(_self_, &(_219731_fc), &(_22117_d));
		return _22117_d;;
	};
	if ((_204cde425_Fn((*(_22117_d))._field_Type.ptr()) == nullptr)) {
		_204ca5122_pushErr(_self_, (*_219731_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_204cbe933_callFn(_self_, &(_219731_fc), &(_22117_d));
	return _22117_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc0170_evalEnumStatic(_204ca4b49_eval* _self_, jule::Ptr<_204b2b471_Enum> _223034_enm, jule::Ptr<_204a14216_Token> _223050_ident) {
	jule::Ptr<_204b2a915_EnumItem> _22317_item = _204b2c098_FindItem(_223034_enm.ptr(), (*(_223050_ident))._field_Kind);;
	if ((_22317_item == nullptr)) {
		_204ca5122_pushErr(_self_, _223050_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_223034_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_223050_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _204cd6dbd_evalEnumStatic(&((*(_self_))._field_s), &(_223034_enm), &(_22317_item), &(_223050_ident), _204ca8158_getOwnerRefers(_self_));;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc056b_evalTypeEnumStatic(_204ca4b49_eval* _self_, jule::Ptr<_204b2cb7b_TypeEnum> _223838_enm, jule::Ptr<_204a14216_Token> _223854_ident) {
	jule::Ptr<_204b2c5a4_TypeEnumItem> _22397_item = _204b2d770_FindItem(_223838_enm.ptr(), (*(_223854_ident))._field_Kind);;
	if ((_22397_item == nullptr)) {
		_204ca5122_pushErr(_self_, _223854_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_223838_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_204cdd8db_Enum((*((*(_22397_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_2092547ba:;
			{
				return _204ca8752__evalEnum(_self_, _204cdd8db_Enum((*((*(_22397_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_204cddb72_TypeEnum((*((*(_22397_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_20925293e:;
			{
				return _204ca8e8e__evalTypeEnum(_self_, _204cddb72_TypeEnum((*((*(_22397_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_204cde6ab_Struct((*((*(_22397_item))._field_TypeSym))._field_Type) != nullptr)) {
			_case_begin_2092529a5:;
			{
				return _204ca96cb__evalStruct(_self_, _204cde6ab_Struct((*((*(_22397_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_2092528c8:;
			{
				jule::Ptr<_204ca2b7a_Data> _22528_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=(*(*(_22397_item))._field_TypeSym.alloc)._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
				(*(_22528_d))._field_Model=jule::Any((*_22528_d.alloc)._field_Type, &__jule_any_type87);
				return _22528_d;;
			}
		}
		_match_end_209252a93:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc0967_evalStructStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a4d2c7_StructIns> _226136_s, jule::Ptr<_204a14216_Token> _226151_ident) {
	jule::Ptr<_204ca2b7a_Data> _22627_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	;
	jule::Ptr<_204b1d5a6_Fn> _22667_method = _204a4e372_FindMethod(_226136_s.ptr(), (*(_226151_ident))._field_Kind, true);;
	if ((_22667_method != nullptr)) {
		if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22667_method.alloc)._field_Public, (*_22667_method.alloc)._field_Token)))) {
			_204ca5122_pushErr(_self_, _226151_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226151_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_204b21664_FnIns> _22738_ins = _204b1ed49_instance(_22667_method);;
		(*(_22738_ins))._field_Owner=_226136_s;
		_20908ab51_pushReference(_self_, &(_22738_ins));
		(*_22627_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b162e6_StructStaticIdentExprModel>(_204b162e6_StructStaticIdentExprModel{._field_Structure=_226136_s, ._field_Expr=(*_22627_d.alloc)._field_Model, ._field_Method=_22738_ins}), &__jule_any_type99);
		(*_22627_d.alloc)._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22738_ins, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)});
		return _22627_d;;
	};
	jule::Ptr<_204c5319c_Var> _22877_sttc = _204a4ea04_FindStatic(_226136_s, (*_226151_ident.alloc)._field_Kind);;
	if ((_22877_sttc != nullptr)) {
		return _204cab788_evalVar(_self_, _22877_sttc, _226151_ident);;
	};
	_204ca5122_pushErr(_self_, _226151_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_226136_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_226151_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc0e1d_evalTraitSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _229637_d, jule::Ptr<_204b28cba_Trait> _229651_trt, jule::Ptr<_204a14216_Token> _229668_ident) {
	jule::Ptr<_204b1d5a6_Fn> _22977_f = _204b2999c_FindMethod(_229651_trt.ptr(), (*(_229668_ident))._field_Kind);;
	if ((_22977_f == nullptr)) {
		_204ca5122_pushErr(_self_, _229668_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229651_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_229668_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204b1ed49_instance(_22977_f), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)}), ._field_Mutable=(*(_229637_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_204b155ae_TraitSubIdentExprModel>(_204b155ae_TraitSubIdentExprModel{._field_Token=_229668_ident, ._field_Expr=(*_229637_d.alloc)._field_Model, ._field_Method=_22977_f, ._field_Trt=_229651_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc147e_evalStructSubIdentField(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _231844_d, jule::Ptr<_204a4d2c7_StructIns>* _231859_s, jule::Ptr<_204a14216_Token>* _231879_tok, jule::Ptr<_204a4c727_FieldIns>* _2318104_f) {
	jule::Ptr<_204b15e50_StructSubIdentExprModel> _23197_model = jule::new_ptr<_204b15e50_StructSubIdentExprModel>(_204b15e50_StructSubIdentExprModel{._field_Token=(*(_231879_tok)), ._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*((*(_231844_d))))), ._field_Method=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Field=(*(_2318104_f)), ._field_Owner=(*(_231859_s))});;
	(*((*(_231844_d))))._field_Model=jule::Any(_23197_model, &__jule_any_type101);
	(*((*(_231844_d))))._field_Type=(*((*(_2318104_f))))._field_Type;
	(*((*(_231844_d))))._field_Lvalue=true;
	if (((*((*((*(_2318104_f))))._field_Decl))._field_Mutable && (!((*((*(_231844_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
				_case_begin_20926911a:;
				{
					jule::Ptr<_204bd8929_scopeChecker> _23345_scope = _204bdc08c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1));;
					(*((*(_231844_d))))._field_Mutable=(((*(_23345_scope))._field_owner != nullptr) && ((*((*_23345_scope.alloc)._field_owner))._field_Owner == (*(_231859_s))));
				}
			}
			_match_end_2092690a4:;
		};
	};
	return (*(_231844_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc1a9a_evalStructSubIdentMethod(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _234345_d, jule::Ptr<_204a4d2c7_StructIns>* _234360_s, jule::Ptr<_204a14216_Token>* _234380_tok, jule::Ptr<_204b1d5a6_Fn>* _2343105_m, jule::Bool _2343113_ref) {
	if ((_204b1c4b7_IsRef((*((*(_2343105_m))))._field_Params[0LL].ptr()) && (!(_2343113_ref)))) {
		_204ca5122_pushErr(_self_, (*(_234380_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_204caa27b_checkDeprecated(_self_, &((*((*(_2343105_m))))._field_Directives), (*(_234380_tok)));
	jule::Ptr<_204b21664_FnIns> _23507_ins = _204b1ed49_instance((*(_2343105_m)));;
	(*(_23507_ins))._field_Owner=(*(_234360_s));
	_20908ab51_pushReference(_self_, &(_23507_ins));
	jule::Ptr<_204ca2b7a_Data> _23537_model = jule::new_ptr<_204ca2b7a_Data>((*((*(_234345_d)))));;
	(*((*(_234345_d))))._field_Model=jule::Any(jule::new_ptr<_204b15e50_StructSubIdentExprModel>(_204b15e50_StructSubIdentExprModel{._field_Token=(*(_234380_tok)), ._field_Expr=_23537_model, ._field_Method=_23507_ins, ._field_Field=jule::Ptr<_204a4c727_FieldIns>(nullptr), ._field_Owner=(*(_234360_s))}), &__jule_any_type101);
	(*((*(_234345_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23507_ins, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)});
	return (*(_234345_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc210b_evalStructSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _236438_d, jule::Ptr<_204a4d2c7_StructIns> _236452_s, jule::Ptr<_204a32058_SubIdentExpr> _236471_si, jule::Bool _236495_ref) {
	jule::Ptr<_204a4c727_FieldIns> _23657_f = _204a4e6b3_FindField(_236452_s.ptr(), (*((*(_236471_si))._field_Ident))._field_Kind);;
	if ((_23657_f != nullptr)) {
		if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23657_f.alloc)._field_Decl))._field_Public, (*(*(_23657_f))._field_Decl.alloc)._field_Token)))) {
			_204ca5122_pushErr(_self_, (*_236471_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23657_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _204cc147e_evalStructSubIdentField(_self_, &(_236438_d), &(_236452_s), &((*_236471_si.alloc)._field_Ident), &(_23657_f));;
	};
	;
	jule::Ptr<_204b1d5a6_Fn> _23757_m = _204a4e372_FindMethod(_236452_s.ptr(), (*((*_236471_si.alloc)._field_Ident))._field_Kind, false);;
	if ((_23757_m == nullptr)) {
		_204ca5122_pushErr(_self_, (*_236471_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_236452_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_236471_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_23757_m))._field_Public, (*_23757_m.alloc)._field_Token)))) {
		_204ca5122_pushErr(_self_, (*_236471_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_23757_m.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_204ca5485_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _204cc1a9a_evalStructSubIdentMethod(_self_, &(_236438_d), &(_236452_s), &((*_236471_si.alloc)._field_Ident), &(_23757_m), _236495_ref);;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc244c_evalIntTypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _238833_ident) {
	;
	{
		auto &_match_expr{ (*(_238833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_209279647:;
			{
				jule::Ptr<_204a9d338_Const> _23928_c = static__204b0500a_NewI64(_204b9ec0e_MaxI(jule::Str::lit("int", 3)));;
				(*(_23928_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5ea28_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23928_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_20927a25d:;
			{
				jule::Ptr<_204a9d338_Const> _24018_c = static__204b0500a_NewI64(static_cast<jule::I64>(_204ba0319_Min(jule::Str::lit("int", 3))));;
				(*(_24018_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5ea28_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24018_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24018_c});;
			}
		}
		else {
			_case_begin_209276a73:;
			{
				_204ca5122_pushErr(_self_, _238833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_238833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20927926d:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc278d_evalUintTypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _241534_ident) {
	;
	{
		auto &_match_expr{ (*(_241534_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_20927d7b1:;
			{
				jule::Ptr<_204a9d338_Const> _24198_c = static__204b05280_NewU64(_204b9eec8_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24198_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5e660_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24198_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24198_c});;
			}
		}
		else {
			_case_begin_20927c65b:;
			{
				_204ca5122_pushErr(_self_, _241534_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_241534_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20927d3d7:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc2ace_evalI8TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _243332_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243332_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_209281c04:;
			{
				jule::Ptr<_204a9d338_Const> _24398_c = static__204b0500a_NewI64(127LL);;
				(*(_24398_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5ec6a_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24398_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24398_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_20928281a:;
			{
				jule::Ptr<_204a9d338_Const> _24488_c = static__204b0500a_NewI64(-128LL);;
				(*(_24488_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d5ec6a_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24488_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24488_c});;
			}
		}
		else {
			_case_begin_20928163d:;
			{
				_204ca5122_pushErr(_self_, _243332_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_243332_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20928182a:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc2e20_evalI16TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _246233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_209286357:;
			{
				jule::Ptr<_204a9d338_Const> _24688_c = static__204b0500a_NewI64(32767LL);;
				(*(_24688_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d60012_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24688_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24688_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_209286e6d:;
			{
				jule::Ptr<_204a9d338_Const> _24778_c = static__204b0500a_NewI64(-32768LL);;
				(*(_24778_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d60012_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24778_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24778_c});;
			}
		}
		else {
			_case_begin_209285c91:;
			{
				_204ca5122_pushErr(_self_, _246233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_246233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209285e7d:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc3261_evalI32TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _249133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_20928a9aa:;
			{
				jule::Ptr<_204a9d338_Const> _24978_c = static__204b0500a_NewI64(2147483647LL);;
				(*(_24978_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d602ba_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24978_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24978_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_20928b5c1:;
			{
				jule::Ptr<_204a9d338_Const> _25068_c = static__204b0500a_NewI64(-2147483648LL);;
				(*(_25068_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d602ba_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25068_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25068_c});;
			}
		}
		else {
			_case_begin_20928a3e4:;
			{
				_204ca5122_pushErr(_self_, _249133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_249133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20928a5d1:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc35a2_evalI64TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _252033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_20929010d:;
			{
				jule::Ptr<_204a9d338_Const> _25268_c = static__204b0500a_NewI64(jule::MAX_I64);;
				(*(_25268_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d60573_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25268_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25268_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_209290c24:;
			{
				jule::Ptr<_204a9d338_Const> _25358_c = static__204b0500a_NewI64(jule::MIN_I64);;
				(*(_25358_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d60573_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25358_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25358_c});;
			}
		}
		else {
			_case_begin_20928ea47:;
			{
				_204ca5122_pushErr(_self_, _252033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_252033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20928ec34:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc38e3_evalU8TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _254932_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254932_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2092943cb:;
			{
				jule::Ptr<_204a9d338_Const> _25548_c = static__204b05280_NewU64(255LLU);;
				(*(_25548_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d6082b_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25548_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25548_c});;
			}
		}
		else {
			_case_begin_209292d36:;
			{
				_204ca5122_pushErr(_self_, _254932_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_254932_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209293e69:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc3c34_evalU16TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _256833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_20929738a:;
			{
				jule::Ptr<_204a9d338_Const> _25738_c = static__204b05280_NewU64(65535LLU);;
				(*(_25738_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d60ad4_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25738_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25738_c});;
			}
		}
		else {
			_case_begin_209296be7:;
			{
				_204ca5122_pushErr(_self_, _256833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_256833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209296e28:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc4075_evalU32TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _258733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_258733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2092a01a6:;
			{
				jule::Ptr<_204a9d338_Const> _25928_c = static__204b05280_NewU64(4294967295LLU);;
				(*(_25928_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d60d8c_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25928_c});;
			}
		}
		else {
			_case_begin_20929ea13:;
			{
				_204ca5122_pushErr(_self_, _258733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20929ec44:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc43b6_evalU64TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _260633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_260633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2092a3165:;
			{
				jule::Ptr<_204a9d338_Const> _26118_c = static__204b05280_NewU64(jule::MAX_U64);;
				(*(_26118_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d61376_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26118_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26118_c});;
			}
		}
		else {
			_case_begin_2092a29c2:;
			{
				_204ca5122_pushErr(_self_, _260633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_260633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2092a2c03:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc4707_evalF32TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _262533_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2092a67ea:;
			{
				jule::Ptr<_204a9d338_Const> _26328_c = static__204b05acc_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26328_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d615b8_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26328_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26328_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_2092a7411:;
			{
				jule::Ptr<_204a9d338_Const> _26418_c = static__204b05acc_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26418_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d615b8_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26418_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26418_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_2092a7477:;
			{
				jule::Ptr<_204a9d338_Const> _26508_c = static__204b05acc_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26508_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d615b8_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26508_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26508_c});;
			}
		}
		else {
			_case_begin_2092a608b:;
			{
				_204ca5122_pushErr(_self_, _262533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type18); (*it++) = jule::Any((*(_262533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2092a6421:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc4a48_evalF64TypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204a14216_Token> _266433_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_266433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_2092ac438:;
			{
				jule::Ptr<_204a9d338_Const> _26718_c = static__204b05acc_NewF64(jule::MAX_F64);;
				(*(_26718_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d617c7_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26718_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26718_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_2092ad04e:;
			{
				jule::Ptr<_204a9d338_Const> _26808_c = static__204b05acc_NewF64(jule::MIN_F64);;
				(*(_26808_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d617c7_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26808_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26808_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_2092ad0b5:;
			{
				jule::Ptr<_204a9d338_Const> _26898_c = static__204b05acc_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26898_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=true, ._field_Type=_204d617c7_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26898_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26898_c});;
			}
		}
		else {
			_case_begin_2092abbc9:;
			{
				_204ca5122_pushErr(_self_, _266433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type18); (*it++) = jule::Any((*(_266433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2092ac05e:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc4e44_evalPrimStatic(_204ca4b49_eval* _self_, jule::Str _270330_kind, jule::Ptr<_204a14216_Token> _270341_ident) {
	{
		auto &_match_expr{ _270330_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_2092b1dee:;
			{
				return _204cc244c_evalIntTypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_2092b29b0:;
			{
				return _204cc278d_evalUintTypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_2092b2a26:;
			{
				return _204cc2ace_evalI8TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_2092b1aad:;
			{
				return _204cc2e20_evalI16TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_2092b1b24:;
			{
				return _204cc3261_evalI32TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_2092b1b8a:;
			{
				return _204cc35a2_evalI64TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_2092b1c01:;
			{
				return _204cc38e3_evalU8TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_2092b2b14:;
			{
				return _204cc3c34_evalU16TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_2092b2b7a:;
			{
				return _204cc4075_evalU32TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_2092b2be1:;
			{
				return _204cc43b6_evalU64TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_2092b2c57:;
			{
				return _204cc4707_evalF32TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_2092b2cbd:;
			{
				return _204cc4a48_evalF64TypeStatic(_self_, _270341_ident);;
			}
		}
		else {
			_case_begin_2092ad291:;
			{
				_204ca5122_pushErr(_self_, _270341_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_270330_kind, &__jule_any_type5); (*it++) = jule::Any((*(_270341_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2092ad318:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc5340_evalTypeStatic(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _273534_d, jule::Ptr<_204a32058_SubIdentExpr> _273548_si) {
	{
		
		if ((_204cdd138_Prim((*(_273534_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2092b7c3a:;
			{
				return _204cc4e44_evalPrimStatic(_self_, _204ce3e1e_Str(_204cdd138_Prim((*(_273534_d))._field_Type).ptr()), (*(_273548_si))._field_Ident);;
			}
		}
		else if ((_204cdd8db_Enum((*(_273534_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2092b8bc5:;
			{
				return _204cc0170_evalEnumStatic(_self_, _204cdd8db_Enum((*(_273534_d))._field_Type), (*(_273548_si))._field_Ident);;
			}
		}
		else if ((_204cddb72_TypeEnum((*(_273534_d))._field_Type) != nullptr)) {
			_case_begin_2092b8c3b:;
			{
				return _204cc056b_evalTypeEnumStatic(_self_, _204cddb72_TypeEnum((*(_273534_d))._field_Type), (*_273548_si.alloc)._field_Ident);;
			}
		}
		else if ((_204cde6ab_Struct((*(_273534_d))._field_Type) != nullptr)) {
			_case_begin_2092b78c7:;
			{
				return _204cc0967_evalStructStatic(_self_, _204cde6ab_Struct((*(_273534_d))._field_Type), (*_273548_si.alloc)._field_Ident);;
			}
		}
		else {
			_case_begin_2092b7861:;
			{
				_204ca5122_pushErr(_self_, (*_273548_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_273534_d))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2092b77a6:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _2092c0aab_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bb36e5_comptimeTypeInfo>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204bb9520_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092c5374_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ba4351_comptimeStructField>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204ba5792_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092c9ae8_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204baa797_comptimeEnumField>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204bab7cb_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092ce3b1_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bad5ad_comptimeParam>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204baee0b_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092d3c78_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ba7574_comptimeStatic>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204ba89b5_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092d84ec_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bb97ea_comptimeValue>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204bbc27b_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092dcc71_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bbdec5_comptimeFile>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204bc0823_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_204ca2b7a_Data> _2092e257d_comptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204bc2ddb_comptimeDecl>* _275154_ct, jule::Ptr<_204ca2b7a_Data>* _275174_d, jule::Ptr<_204a32058_SubIdentExpr>* _275185_si) {
	jule::Ptr<_204ca2b7a_Data> _27527_cd = _204bc6c47_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_204ca5122_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}



inline __jule_tuple_x_204ca2b7a_Data__jule_tuple_bool _204cc5be2_tryComptimeObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data>* _275943_d, jule::Ptr<_204a32058_SubIdentExpr> _275957_si) {
	__jule_tuple_x_204ca2b7a_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_204ce19ee_comptimeTypeInfo((*((*(_275943_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2092bdeb6:;
			{
				jule::Ptr<_204bb36e5_comptimeTypeInfo> _27628_ct = _204ce19ee_comptimeTypeInfo((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092c0aab_comptimeObjSubIdent(_self_, &(_27628_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce0712_comptimeStructField((*((*(_275943_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_2092bd9ee:;
			{
				jule::Ptr<_204ba4351_comptimeStructField> _27658_ct = _204ce0712_comptimeStructField((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092c5374_comptimeObjSubIdent(_self_, &(_27658_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce0c2e_comptimeEnumField((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_2092bda76:;
			{
				jule::Ptr<_204baa797_comptimeEnumField> _27688_ct = _204ce0c2e_comptimeEnumField((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092c9ae8_comptimeObjSubIdent(_self_, &(_27688_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce124b_comptimeParam((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_2092bdaed:;
			{
				jule::Ptr<_204bad5ad_comptimeParam> _27718_ct = _204ce124b_comptimeParam((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092ce3b1_comptimeObjSubIdent(_self_, &(_27718_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce201b_comptimeStatic((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_2092bdb75:;
			{
				jule::Ptr<_204ba7574_comptimeStatic> _27748_ct = _204ce201b_comptimeStatic((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092d3c78_comptimeObjSubIdent(_self_, &(_27748_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce22a2_comptimeValue((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_2092bdbec:;
			{
				jule::Ptr<_204bb97ea_comptimeValue> _27778_ct = _204ce22a2_comptimeValue((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092d84ec_comptimeObjSubIdent(_self_, &(_27778_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce2a55_comptimeFile((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_2092be22a:;
			{
				jule::Ptr<_204bbdec5_comptimeFile> _27808_ct = _204ce2a55_comptimeFile((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092dcc71_comptimeObjSubIdent(_self_, &(_27808_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_204ce2538_comptimeDecl((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_2092be291:;
			{
				jule::Ptr<_204bc2ddb_comptimeDecl> _27838_ct = _204ce2538_comptimeDecl((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _2092e257d_comptimeObjSubIdent(_self_, &(_27838_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2092bd988:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_2092bd8cd:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc60dd_evalObjSubIdent(_204ca4b49_eval* _self_, jule::Ptr<_204ca2b7a_Data> _279035_d, jule::Ptr<_204a32058_SubIdentExpr> _279049_si) {
	if (_204a16aed_IsIgnoreIdent((*((*(_279049_si))._field_Ident))._field_Kind)) {
		_204ca5122_pushErr(_self_, (*_279049_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_204ca2b7a_Data> _27968_compData;
		jule::Bool _279618_ok;
		({
			__jule_tuple_x_204ca2b7a_Data__jule_tuple_bool __jule_assign_result = _204cc5be2_tryComptimeObjSubIdent(_self_, &(_279035_d), _279049_si);
			_27968_compData = __jule_assign_result.__jule_result_arg0;
			_279618_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_279618_ok) {
			return _27968_compData;;
		};
	};
	jule::Ptr<_204cda982_Type> _28017_kind = (*(_279035_d))._field_Type;;
	{
		
		if ((_204cdd655_Ptr((*_279035_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_2092e6d79:;
			{
				jule::Ptr<_204cead8d_Ptr> _28044_ptr = _204cdd655_Ptr((*(_279035_d))._field_Type);;
				if (_204ceb90a_IsUnsafe(_28044_ptr.ptr())) {
					goto _match_end_2092e6d02;
				};
				if ((!(_204ca5b17_isUnsafe(_self_)))) {
					_204ca5122_pushErr(_self_, (*(_279049_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28017_kind=(*(_204cdd655_Ptr((*(_279035_d))._field_Type)))._field_Elem;
				_204cd7473_makeImplicitDeref(&(_279035_d), (*(_279049_si))._field_Ident);
			}
		}
		else if ((_204cdd3be_Sptr((*_279035_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_2092e6e23:;
			{
				_28017_kind=(*(_204cdd3be_Sptr((*(_279035_d))._field_Type)))._field_Elem;
				_204cd7473_makeImplicitDeref(&(_279035_d), (*(_279049_si))._field_Ident);
			}
		}
		_match_end_2092e6d02:;
	};
	{
		
		if ((_204cde942_Trait((*(_279035_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_2092e7e35:;
			{
				return _204cc0e1d_evalTraitSubIdent(_self_, _279035_d, _204cde942_Trait((*(_279035_d))._field_Type), (*(_279049_si))._field_Ident);;
			}
		}
		else if ((_204cde6ab_Struct(_28017_kind.ptr()) != nullptr)) {
			_case_begin_2092eb257:;
			{
				jule::Ptr<_204a4d2c7_StructIns> _28224_s = _204cde6ab_Struct(_28017_kind);;
				if (_204cd39be_isInstancedStruct(_28224_s)) {
					jule::Bool _28249_usedReferenceElem = (_204cdd3be_Sptr((*(_279035_d))._field_Type.ptr()) != nullptr);;
					return _204cc210b_evalStructSubIdent(_self_, _279035_d, _204cde6ab_Struct(_28017_kind), _279049_si, _28249_usedReferenceElem);;
				};
			}
		}
		_match_end_2092eb1e1:;
	};
	_204ca5122_pushErr(_self_, (*(_279049_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_279035_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc642e_evalSubIdent(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a32058_SubIdentExpr> _283233_si) {
	jule::Ptr<_204cda982_Type> _28337_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28337_prefix;
	});;
	jule::Ptr<_204ca2b7a_Data> _28367_d = _204cc7980_evalExprKind(_self_, (*((*(_283233_si))._field_Expr))._field_Kind);;
	if ((_28367_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28367_d))._field_Decl) {
		return _204cc5340_evalTypeStatic(_self_, _28367_d, _283233_si);;
	};
	return _204cc60dd_evalObjSubIdent(_self_, _28367_d, _283233_si);;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc6770_evalTuple(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2ea39_TupleExpr> _284630_tup) {
	jule::Ptr<_204ce8b8d_Tuple> _28477_tupT = jule::new_ptr<_204ce8b8d_Tuple>(_204ce8b8d_Tuple{._field_Types=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)});;
	(*_28477_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(0LL, (*(_284630_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cda982_Type>(nullptr); __jule_collection; });
	jule::Ptr<_204b169bc_TupleExprModel> _28507_model = jule::new_ptr<_204b169bc_TupleExprModel>(_204b169bc_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(0LL, (*_284630_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204ca2b7a_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28547_ok = true;;
	{
		auto expr = &((*_284630_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20930611e:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _285515_expr = *it;
			{
				jule::Ptr<_204ca2b7a_Data> _28568_d = _204cc8794_evalExpr(_self_, _285515_expr);;
				if ((_28568_d == nullptr)) {
					_28547_ok=false;
					goto _iter_next_20930611e;
				};
				(*_28477_tupT.alloc)._field_Types=jule::append((*_28477_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28568_d))._field_Type; __jule_collection; }));
				(*(_28507_model))._field_Datas=jule::append((*_28507_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28568_d; __jule_collection; }));
			}
			_iter_next_20930611e:;
			++it;
			goto _iter_begin_20930611e;
		}
		_iter_end_20930611e:;
	};
	if ((!(_28547_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28477_tupT, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28507_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc6b6b_evalMap(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204ce973d_Map> _287528_m, jule::Ptr<_204a34445_BraceLit> _287541_lit) {
	jule::Ptr<_204b14998_MapExprModel> _28767_model = jule::new_ptr<_204b14998_MapExprModel>(_204b14998_MapExprModel{._field_Kind=_287528_m, ._field_Entries=jule::Slice<jule::Ptr<_204b145be_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_287541_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20930995d:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _288015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_288015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_20930a101:;
						{
							goto _match_end_20930a3dc;
						}
					}
					else {
						_case_begin_20930a453:;
						{
							_204ca5122_pushErr(_self_.ptr(), (*(_287541_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_20930a3dc:;
				};
				jule::Ptr<_204a34c70_KeyValPair> _28908_pair = (*(_288015_expr))._field_Kind.cast_ptr<_204a34c70_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_204ca2b7a_Data> _28928_key = _204cc8794_evalExpr(_self_, (*(_28908_pair))._field_Key);;
				if ((_28928_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_204ca2b7a_Data> _28978_val = _204cc8794_evalExpr(_self_, (*_28908_pair.alloc)._field_Val);;
				if ((_28978_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_204c3e111_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_287528_m))._field_Key), &(_28928_key), &((*((*_28908_pair.alloc)._field_Key))._field_Token))) {
					_204c3987b_checkAssignType((*(_self_))._field_s, false, &((*_287528_m.alloc)._field_Key), &(_28928_key), (*(*(_28908_pair))._field_Key.alloc)._field_Token, _204ca8158_getOwnerRefers(_self_));
				};
				if (_204c3e111_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_287528_m))._field_Val), &(_28978_val), &((*((*_28908_pair.alloc)._field_Val))._field_Token))) {
					_204c3987b_checkAssignType((*(_self_))._field_s, false, &((*_287528_m.alloc)._field_Val), &(_28978_val), (*(*(_28908_pair))._field_Val.alloc)._field_Token, _204ca8158_getOwnerRefers(_self_));
				};
				(*(_28767_model))._field_Entries=jule::append((*_28767_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b145be_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204b145be_KeyValPairExprModel>(_204b145be_KeyValPairExprModel{._field_Key=(*(_28928_key))._field_Model, ._field_Val=(*(_28978_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_20930995d:;
			++it;
			goto _iter_begin_20930995d;
		}
		_iter_end_20930995d:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_287528_m, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28767_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc6eac_evalBraceLit(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a34445_BraceLit> _292333_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_209313703:;
			{
				_204ca5122_pushErr(_self_, (*(_292333_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_204cdebc8_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_20931587b:;
			{
				return _204cc6b6b_evalMap(_self_, _204cdebc8_Map((*(_self_))._field_prefix), _292333_lit);;
			}
		}
		else if ((_204cde6ab_Struct((*(_self_))._field_prefix) != nullptr)) {
			_case_begin_2093158e2:;
			{
				return _204cbcc50_evalStructLitExplicit(_self_, _204cde6ab_Struct((*(_self_))._field_prefix), (*(_292333_lit))._field_Exprs, (*_292333_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_20931367b:;
			{
				_204ca5122_pushErr(_self_, (*_292333_lit.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20931553a:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc72ed_evalAnonFunc(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3b89d_FnDecl> _293833_decl) {
	_204cecd7e_typeChecker _29397_tc = _204cecd7e_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_204b21664_FnIns> _29447_ins = _204d04e96_buildFunc(&_29397_tc, _293833_decl);;
	if ((_29447_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29447_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_204c5319c_Var>> _29497_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204c5319c_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
			_case_begin_20931c72e:;
			{
				jule::Ptr<_204bd8929_scopeChecker> _29528_sc = (*_self_.alloc)._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1);;
				jule::Ptr<_204bd8929_scopeChecker> _29538_scc = _204bead37_newChildChecker(_29528_sc);;
				(*(_29538_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_204bd7560_scopeLabel>>>(nullptr);
				(*_29538_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_204bd4392_GotoSt>>>(nullptr);
				(*_29538_scc.alloc)._field_owner=_29447_ins;
				(*_29538_scc.alloc)._field_childIndex=0LL;
				(*_29538_scc.alloc)._field_it=0LLU;
				(*_29538_scc.alloc)._field_cse=0LLU;
				(*_29538_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_204c5319c_Var>>>)((&(_29497_captured))));
				_204c4c5d6_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29447_ins), &(_29538_scc));
			}
		}
		else {
			_case_begin_20931d312:;
			{
				_204c4cc02_checkFnIns((*_self_.alloc)._field_s, &(_29447_ins));
			}
		}
		_match_end_20931d29b:;
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29447_ins, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_204b141e5_AnonFnExprModel>(_204b141e5_AnonFnExprModel{._field_Captured=_29497_captured, ._field_Func=_29447_ins, ._field_Global=_204ca5d9d_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc763e_evalBinary(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a3250e_BinaryExpr> _297631_op) {
	_204ccabb4_binaryEval _29777_bs = static__204ccb29c_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_204ce3a9a_Prim> _29804_prim = _204cdd138_Prim((*(_self_))._field_prefix);;
		if (((_29804_prim == nullptr) || (!(_204ba2371_IsNum(_204ce3e1e_Str(_29804_prim.ptr())))))) {
			jule::Ptr<_204cda982_Type> _29829_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29829_prefix;
			});;
			return _204cd1d0d_eval(&_29777_bs, &(_297631_op));;
		};
	};
	return _204cd1d0d_eval(&_29777_bs, &(_297631_op));;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc7980_evalExprKind(jule::Ptr<_204ca4b49_eval> _self_, jule::Any _299133_kind) {
	{
		auto &_match_expr{ _299133_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_209329373:;
			{
				jule::Ptr<_204a2e20e_RangeExpr> _29948_e = _299133_kind.unsafe_cast_ptr<_204a2e20e_RangeExpr>();;
				return _204cc7980_evalExprKind(_self_, (*((*(_29948_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_2093296a3:;
			{
				return _204ca7685_evalLit(_self_.ptr(), _299133_kind.unsafe_cast_ptr<_204a2edd0_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_209329719:;
			{
				return _204cac3c1_evalIdent(_self_, _299133_kind.unsafe_cast_ptr<_204a30760_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_209329780:;
			{
				return _204cac712_evalUnary(_self_, _299133_kind.unsafe_cast_ptr<_204a31002_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_2093297e6:;
			{
				return _204caca53_evalVariadic(_self_, _299133_kind.unsafe_cast_ptr<_204a313cb_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_20932985c:;
			{
				return _204cacd94_evalUnsafe(_self_, _299133_kind.unsafe_cast_ptr<_204a302a9_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2093298c3:;
			{
				return _204cad9cc_evalSliceExpr(_self_, _299133_kind.unsafe_cast_ptr<_204a3549b_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_209329cbe:;
			{
				return _204cb7486_evalIndexing(_self_, _299133_kind.unsafe_cast_ptr<_204a35e08_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_209329d35:;
			{
				return _204cb87b7_evalSlicing(_self_, _299133_kind.unsafe_cast_ptr<_204a36568_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_209329d9b:;
			{
				return _204cbc458_evalCast(_self_, _299133_kind.unsafe_cast_ptr<_204a317a5_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_209329e12:;
			{
				return _204cbc799_evalNamespace(_self_, _299133_kind.unsafe_cast_ptr<_204a31b7e_NamespaceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_209329e89:;
			{
				return _204cbd091_evalStructLit(_self_, _299133_kind.unsafe_cast_ptr<_204a33e8e_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_20932a011:;
			{
				return _204cbd668_evalType(_self_, _299133_kind.unsafe_cast_ptr<_204a29b11_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_20932a088:;
			{
				return _204cbec74_evalFnCall(_self_, _299133_kind.unsafe_cast_ptr<_204a32b6e_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_20932a110:;
			{
				return _204cc642e_evalSubIdent(_self_, _299133_kind.unsafe_cast_ptr<_204a32058_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_20932a187:;
			{
				return _204cc6770_evalTuple(_self_, _299133_kind.unsafe_cast_ptr<_204a2ea39_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_20932a20e:;
			{
				return _204cc6eac_evalBraceLit(_self_, _299133_kind.unsafe_cast_ptr<_204a34445_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_20932a286:;
			{
				return _204cc72ed_evalAnonFunc(_self_, _299133_kind.unsafe_cast_ptr<_204a3b89d_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_20932a30d:;
			{
				return _204cc763e_evalBinary(_self_, _299133_kind.unsafe_cast_ptr<_204a3250e_BinaryExpr>());;
			}
		}
		else {
			_case_begin_20932963c:;
			{
				return nullptr;;
			}
		}
		_match_end_2093295c6:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc7cc1_eval1(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _303926_expr) {
	jule::Ptr<_204ca2b7a_Data> _30407_d = _204cc7980_evalExprKind(_self_, (*(_303926_expr))._field_Kind);;
	if (((_30407_d == nullptr) || ((*(_30407_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_204cde425_Fn((*(_30407_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_209350234:;
			{
				jule::Ptr<_204b21664_FnIns> _30488_f = _204cde425_Fn((*(_30407_d))._field_Type);;
				if (_204b22b2c_IsBuiltin(_30488_f.ptr())) {
					_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_303926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_20934d93b;
				};
				jule::I32 _30534_required = (*((*(_30488_f))._field_Decl))._field_Generics.len();;
				jule::I32 _30544_given = (*_30488_f.alloc)._field_Generics.len();;
				if ((!(_204c338b9_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30534_required, _30544_given, (*_303926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30488_f))._field_Decl.alloc)._field_Statically)) && _204b1dce3_IsMethod((*(_30488_f))._field_Decl))) {
					_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_303926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_204cd2209_findDirective(&((*(*(_30488_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*_303926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30488_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30488_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30407_d))._field_Decl) {
			_case_begin_20935029a:;
			{
				jule::Ptr<_204a4d2c7_StructIns> _30678_s = _204cde6ab_Struct((*_30407_d.alloc)._field_Type.ptr());;
				if ((_30678_s == nullptr)) {
					goto _match_end_20934d93b;
				};
				jule::I32 _30714_required = (*((*(_30678_s))._field_Decl))._field_Generics.len();;
				jule::I32 _30724_given = (*_30678_s.alloc)._field_Generics.len();;
				if ((!(_204c338b9_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30714_required, _30724_given, (*_303926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_20934d93b:;
	};
	return _30407_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc8112_eval(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _308425_expr) {
	jule::Ptr<_204ca2b7a_Data> _30857_d = _204cc7cc1_eval1(_self_, _308425_expr);;
	if ((_30857_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _204ce01e5_comptime((*(_30857_d))._field_Type.ptr()))) {
		_204c3238a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_308425_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30857_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cc8453_evalExpr1(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _309930_expr) {
	jule::Ptr<_204ca2b7a_Data> _31007_d = _204cc7cc1_eval1(_self_, _309930_expr);;
	{
		
		if ((_31007_d == nullptr)) {
			_case_begin_20935d3a7:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31007_d))._field_Decl) {
			_case_begin_20935d451:;
			{
				_204ca5122_pushErr(_self_, (*(_309930_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_20935d330:;
			{
				return _31007_d;;
			}
		}
		_match_end_20935d2a8:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cc8794_evalExpr(jule::Ptr<_204ca4b49_eval> _self_, jule::Ptr<_204a2de45_Expr> _311529_expr) {
	jule::Ptr<_204ca2b7a_Data> _31167_d = _204cc8112_eval(_self_, _311529_expr);;
	{
		
		if ((_31167_d == nullptr)) {
			_case_begin_209360420:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31167_d))._field_Decl) {
			_case_begin_2093604b9:;
			{
				_204ca5122_pushErr(_self_, (*(_311529_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_209360398:;
			{
				return _31167_d;;
			}
		}
		_match_end_209360321:;
	};
}








inline jule::Bool _204cc8c28_unaryEval_eq(_204cc8c28_unaryEval *_self_, _204cc8c28_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _204cc8c28_unaryEval static__204cc919b_new(jule::Ptr<_204ca4b49_eval> _313620_e) {
	return _204cc8c28_unaryEval{._field_e=_313620_e, ._field_d=jule::Ptr<_204ca2b7a_Data>(nullptr), ._field_u=jule::Ptr<_204a31002_UnaryExpr>(nullptr)};;
}



inline void _204cc9399_minus(_204cc8c28_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_2093622ac:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_204cdd138_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_209362697:;
			{
				if ((!(_204ba2371_IsNum(_204cdad7d_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_204cde6ab_Struct((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_209361e5a:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_209361de4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_209361d28:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_204ca35b5_IsConst((*(_self_))._field_d)) {
		{
			
			if (_204b09581_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_209366a75:;
				{
					_204b085b3_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_204b06e85_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_204b08a47_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_209366b63:;
				{
					_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_204b0644b_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_204b08ccd_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_209366723:;
				{
					_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_204b0721b_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_20936669b:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3174:5"));;
				}
			}
			_match_end_2093665be:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _204cc9597_plus(_204cc8c28_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_20936c0a8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_204cdd138_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_20936c493:;
			{
				if ((!(_204ba2371_IsNum(_204cdad7d_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_204cde6ab_Struct((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_20936bc56:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_20936bbe0:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_20936bad0:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_204ca35b5_IsConst((*(_self_))._field_d)) {
		{
			
			if (_204b09581_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_209371871:;
				{
					_204b085b3_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_204b06e85_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_204b08a47_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_20937195e:;
				{
					_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_204b0644b_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_204b08ccd_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_20937151e:;
				{
					_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_204b0721b_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_209371497:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3219:5"));;
				}
			}
			_match_end_2093713ba:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _204cc9795_caret(_204cc8c28_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_209376da4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_204cdd138_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_20937728e:;
			{
				if ((!(_204ba1c99_IsInt(_204cdad7d_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_204cde6ab_Struct((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_209376a52:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2093769db:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2093768cb:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_204ca35b5_IsConst((*(_self_))._field_d)) {
		jule::I32 _32604_sz = _204b98c2a_BitSizeOf((*(_204cdd138_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_204b08a47_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_20937c33d:;
				{
					{
						auto &_match_expr{ _32604_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_20937d41b:;
							{
								_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_204b0644b_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_20937d00e:;
							{
								_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_204b0644b_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_20937d075:;
							{
								_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_204b0644b_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_20937d0db:;
							{
								_204b079e1_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_204b0644b_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_20937cd44:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3273:6"));;
							}
						}
						_match_end_20937cdbb:;
					};
				}
			}
			else if (_204b08ccd_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_20937c41a:;
				{
					{
						auto &_match_expr{ _32604_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_20938350e:;
							{
								_204b07c99_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_204b066d2_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_209383102:;
							{
								_204b07c99_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_204b066d2_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_209383168:;
							{
								_204b07c99_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_204b066d2_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_2093831ce:;
							{
								_204b07c99_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_204b066d2_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_209382e26:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3286:6"));;
							}
						}
						_match_end_209382e9d:;
					};
				}
			}
			else {
				_case_begin_20937bea8:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3289:5"));;
				}
			}
			_match_end_20937be42:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _204cc9993_excl(_204cc8c28_unaryEval* _self_) {
	jule::Ptr<_204ce3a9a_Prim> _33033_t = _204cdd138_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_33033_t == nullptr) || (!(_204ce6cce_IsBool(_33033_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_204ca35b5_IsConst((*(_self_))._field_d)) {
		{
			
			if (_204b09064_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_20938ae40:;
				{
					_204b08052_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_204b06968_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_20938aa77:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3317:5"));;
				}
			}
			_match_end_20938a99a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _204cc9b91_star(_204cc8c28_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_204cdd655_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_20938e790:;
			{
				if ((!(_204ca5b17_isUnsafe((*(_self_))._field_e.ptr())))) {
					_204ca5122_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_204cead8d_Ptr> _33428_t = _204cdd655_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_204ceb90a_IsUnsafe(_33428_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Type=(*(_33428_t))._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_204cdd3be_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_20938e817:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_204cdd3be_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_20938e3d8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_20938d3c6:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _204cc9d8e_amper(_204cc8c28_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_209398018:;
			{
				jule::Ptr<_204b1217c_StructLitExprModel> _33648_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_204b1217c_StructLitExprModel>();;
				_204cd2b33_makeStructLitAlloc(&((*(_self_))._field_d), &(_33648_lit));
			}
		}
		else {
			_case_begin_209395477:;
			{
				{
					
					if (_204d072b7_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_209395d6d:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204cead8d_Ptr>(_204cead8d_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_20939506a:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_20939591c:;
				};
			}
		}
		_match_end_209395411:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _204cca08c_typeDecl(_204cc8c28_unaryEval* _self_) {
	_204cecd7e_typeChecker _33897_tc = _204cecd7e_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_204cebd8e_referencer>(nullptr), ._field_refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_204cd9b90_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_20939ba55:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d036ae_buildPtrFromType(&_33897_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_20939b714:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0302c_buildSptrFromType(&_33897_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else {
			_case_begin_20939b14d:;
			{
				_204ca5122_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(*(_self_))._field_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_20939b68c:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _204cca28a_evalData(_204cc8c28_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2093a2363:;
			{
				jule::Ptr<_204cda982_Type> _34148_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_204cc8112_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34148_prefix;
			}
		}
		else {
			_case_begin_20939b77a:;
			{
				(*(_self_))._field_d=_204cc8112_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_2093a1e45:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cca5cb_eval(_204cc8c28_unaryEval* _self_, jule::Ptr<_204a31002_UnaryExpr> _342324_u) {
	(*(_self_))._field_u=_342324_u;
	_204cca28a_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_204cca08c_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_204cda982_Type> _34343_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_2093a6a2c:;
			{
				_204cc9399_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_2093a6a93:;
			{
				_204cc9597_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_2093a6b09:;
			{
				_204cc9795_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_2093a6b70:;
			{
				_204cc9993_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_2093a6bd6:;
			{
				_204cc9b91_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2093a6c4c:;
			{
				_204cc9d8e_amper(_self_);
			}
		}
		else {
			_case_begin_2093a64dd:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_2093a69a5:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_2093a7258:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str(_34343_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_204ca35b5_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_2093a51ac:;
			{
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_2093a8c0a:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _204ccabb4_binaryEval_eq(_204ccabb4_binaryEval *_self_, _204ccabb4_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _204ccabb4_binaryEval static__204ccb29c_newPlain(jule::Ptr<_204ca4b49_eval> _347125_e) {
	return _204ccabb4_binaryEval{._field_e=_347125_e, ._field_l=jule::Ptr<_204ca2b7a_Data>(nullptr), ._field_r=jule::Ptr<_204ca2b7a_Data>(nullptr), ._field_op=jule::Ptr<_204a14216_Token>(nullptr)};;
}



inline _204ccabb4_binaryEval static__204ccb621_new(jule::Ptr<_204ca4b49_eval> _347720_e, jule::Ptr<_204a14216_Token> _347734_op) {
	return _204ccabb4_binaryEval{._field_e=_347720_e, ._field_l=jule::Ptr<_204ca2b7a_Data>(nullptr), ._field_r=jule::Ptr<_204ca2b7a_Data>(nullptr), ._field_op=_347734_op};;
}



inline jule::Bool _204ccb8a7_checkTypeCompatibility(_204ccabb4_binaryEval* _self_) {
	return _204c3abac_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _204ccbb3d_checkStructCommonOperatorCompatibility(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204b21664_FnIns> _349111_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_2093ae55c:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_2093ae20a:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_2093ae271:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_2093ae2d7:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_2093ae34d:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_2093ae3b4:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_2093ae42a:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2093b0b68:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_2093b0bce:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_2093b0c45:;
			{
				_349111_overload=(*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_2093adc98:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_2093ae183:;
	};
	if ((_349111_overload == nullptr)) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_204b2050e_ParamIns> _35237_p = (*(_349111_overload))._field_Params[1LL];;
	return _204c3987b_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_35237_p))._field_Decl))._field_Reference, &((*_35237_p.alloc)._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, _204ca8158_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_204ca2b7a_Data> _204ccbdc4_evalComptimeTypeInfo(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _35287_r = _204ce19ee_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35287_r == nullptr)) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204bb36e5_comptimeTypeInfo> _35337_l = _204ce19ee_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_2093beeda:;
			{
				jule::Ptr<_204a9d338_Const> _35368_constant = static__204b05549_NewBool(_204cdb1be_Equal((*(_35337_l))._field_base, (*(_35287_r))._field_base));;
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35368_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35368_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2093c1481:;
			{
				jule::Ptr<_204a9d338_Const> _35438_constant = static__204b05549_NewBool((!(_204cdb1be_Equal((*(_35337_l))._field_base, (*(_35287_r))._field_base))));;
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35438_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35438_constant});;
			}
		}
		else {
			_case_begin_2093bcceb:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093beb11:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccc15a_evalNil(_204ccabb4_binaryEval* _self_) {
	if ((!(_204cdc885_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2093c6035:;
			{
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2093c431e:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093c5b5b:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccc3e1_evalEnum(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204b2b471_Enum> _35747_enm = _204cdd8db_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2093c8466:;
			{
				jule::Ptr<_204cda982_Type> _35788_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_204cdd8db_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
					_35788_rkind=(*((*(_204cdd8db_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				if ((!(_204c3a2d8_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_35747_enm))._field_TypeSym))._field_Type), &(_35788_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		_match_end_2093c83de:;
	};
	if (((_204cdd8db_Enum((*((*(_self_))._field_r))._field_Type) == nullptr) || (_35747_enm != _204cdd8db_Enum((*((*(_self_))._field_r))._field_Type)))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35747_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_2093ce0b5:;
			{
				if ((!(_204ba2371_IsNum(_204cdad7d_Str((*((*(_35747_enm))._field_TypeSym))._field_Type.ptr()))))) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2093d0209:;
			{
				jule::Ptr<_204b2a915_EnumItem> _36084_first = (*(_35747_enm))._field_Items[0LL];;
				{
					
					if (_204b08a47_IsI64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_2093d3ae2:;
						{
							if ((_204b0644b_ReadI64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_2093d8212;
							};
							goto _julec_label_2093d6ed0;
						}
					}
					else if (_204b08ccd_IsU64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_2093d3bd0:;
						{
							if ((_204b066d2_ReadU64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_2093d8212;
							};
							goto _julec_label_2093d6ed0;
						}
					}
					else {
						_case_begin_2093d3729:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3621:5"));;
						}
					}
					_match_end_2093d36a2:;
				};
				_julec_label_2093d6ed0:;
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_204ca5485_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_2093d8212:;
				goto _case_begin_2093d0270;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_2093d0270:;
			{
				if (((_204cdd138_Prim((*((*_35747_enm.alloc)._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_204ba1c99_IsInt(_204ce3e1e_Str(_204cdd138_Prim((*((*_35747_enm.alloc)._field_TypeSym))._field_Type.ptr()).ptr())))))) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2093c84cc:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093cdc0d:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccc677_evalTypeEnum(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204b2cb7b_TypeEnum> _36417_enm = _204cddb72_TypeEnum((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2093dc28d:;
			{
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2093db5bc:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204b2d000_Str(_36417_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093dbd2b:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccc90d_evalSptr(_204ccabb4_binaryEval* _self_) {
	if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2093de7ac:;
			{
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2093dd6ce:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093de3d3:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cccb94_evalPtr(_204ccabb4_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_2093e1b88:;
			{
				if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_2093e30eb:;
			{
				if ((_204cdd655_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_204ceb90a_IsUnsafe(_204cdd655_Ptr((*((*(_self_))._field_l))._field_Type.ptr()).ptr())) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_204cd3cbb_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2093e1281:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093e11a4:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccce2a_evalArr(_204ccabb4_binaryEval* _self_) {
	if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2093e9c90:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_204b21664_FnIns> _37189_f = _204b1eab3_instanceForce(_2046da3c6_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37189_f))._field_Generics=jule::append((*_37189_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=(*(_204cdde08_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37205_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204c49ddb_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37189_f), &((*(_self_))._field_op));
						_37205_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37205_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3722:6"));;
					};
					_20908ab51_pushReference((*(_self_))._field_e, &(_37189_f));
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2093e4a48:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2093e98b6:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccd1b1_evalStruct(_204ccabb4_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_2093eb665:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Gt == nullptr)) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_2093eb6ed:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_209400c63:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Lt == nullptr)) {
					_204ca5122_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_209400cc9:;
			{
				if (((*(_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_LtEq == nullptr)) {
					_204ca5122_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_209400d40:;
			{
				if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		_match_end_2093eb588:;
	};
	if ((!(_204ccbb3d_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ccd447_evalTrait(_204ccabb4_binaryEval* _self_) {
	if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_209412208:;
			{
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_2094115ae:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209411d2e:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccd6cd_evalAny(_204ccabb4_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2094145d4:;
			{
				_204d08164_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _204ca8158_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_209413bcc:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209413b00:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccd964_evalBool(_204ccabb4_binaryEval* _self_) {
	if ((!(_204ccb8a7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_20941776e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_209415915:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209417395:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204ccdbea_evalStr(_204ccabb4_binaryEval* _self_) {
	jule::Str _38347_rk = _204cdad7d_Str((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_38347_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_38347_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_20941ba09:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_20941b91b:;
			{
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_20941a4ca:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20941b564:;
	};
}



inline void _204ccdde8_setTypeToGreater(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204ce3a9a_Prim> _38593_lp = _204cdd138_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_204ce3a9a_Prim> _38603_rp = _204cdd138_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38603_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38593_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*_38593_lp.alloc)._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _204cce1a1_checkModData(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _387633_d) {
	if ((!(_204ca35b5_IsConst((*(_387633_d)).ptr())))) {
		if (((_204cdd138_Prim((*((*(_387633_d))))._field_Type.ptr()) == nullptr) || (!(_204ba1c99_IsInt((*(_204cdd138_Prim((*((*(_387633_d))))._field_Type.ptr())))._field_Kind))))) {
			_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_204c8d292_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _387633_d)) {
			_case_begin_209428054:;
			{
				_204b079e1_SetI64((*((*(_387633_d))))._field_Constant.ptr(), _204b0721b_AsI64((*((*(_387633_d))))._field_Constant));
			}
		}
		else if (_204c8d65a_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _387633_d)) {
			_case_begin_209427c35:;
			{
				_204b07c99_SetU64((*((*(_387633_d))))._field_Constant.ptr(), _204b074a2_AsU64((*((*(_387633_d))))._field_Constant));
			}
		}
		else {
			_case_begin_209427bbe:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_209427b58:;
	};
}



inline void _204cce39e_mod(_204ccabb4_binaryEval* _self_) {
	_204cce1a1_checkModData(_self_, &((*(_self_))._field_l));
	_204cce1a1_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _204cce79a_numbersAreCompatibile(_204ccabb4_binaryEval* _self_, jule::Str* _389834_lk, jule::Str* _389844_rk) {
	if ((!(_204ba2371_IsNum((*(_389844_rk)))))) {
		return false;;
	};
	if ((_204ca35b5_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_389834_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_204ca35b5_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _204c8ce1d_floatAssignable(_389834_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389844_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_389834_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_204ca35b5_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _204c8ce1d_floatAssignable(_389834_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389844_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_204ca35b5_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _204c8d9ce_intAssignable((*(_389834_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_389834_lk)) == (*(_389844_rk)));;
}



inline jule::Ptr<_204ca2b7a_Data> _204ccea31_shift(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204ce3a9a_Prim> _39263_lk = _204cdd138_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39263_lk == nullptr)) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ce3a9a_Prim> _39313_rk = _204cdd138_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39313_rk == nullptr)) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_204ba2371_IsNum((*(_39263_lk))._field_Kind))) || (!(_204ba2371_IsNum((*(_39313_rk))._field_Kind))))) {
		_204c3a706_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_204ba1c99_IsInt((*(_39263_lk))._field_Kind)))) {
		if (((!(_204ca35b5_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39263_lk.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39313_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_204c8d9ce_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_204b079e1_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _204b0721b_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_204d60573_primI64;
		} else if (_204c8d9ce_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_204b07c99_SetU64((*((*(_self_))._field_l))._field_Constant, _204b074a2_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_204d61376_primU64;
		};
	};
	if ((!(_204ba1c99_IsInt((*(_39313_rk))._field_Kind)))) {
		if (((!(_204ca35b5_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39263_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_39313_rk.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_204c8d9ce_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_204b079e1_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _204b0721b_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_204d60573_primI64;
		} else if (_204c8d9ce_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_204b07c99_SetU64((*((*(_self_))._field_r))._field_Constant, _204b074a2_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_204d61376_primU64;
		};
	};
	if ((!(_204cd35e5_isOkForShifting(&((*(_self_))._field_r))))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_204ca2b7a_Data> _204ccecb7_evalFloat(_204ccabb4_binaryEval* _self_) {
	jule::Str _39813_lk = (*(_204cdd138_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39823_rk = (*(_204cdd138_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_204cce79a_numbersAreCompatibile(_self_, &(_39813_lk), &(_39823_rk))))) {
		_204c3a706_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_20944404d:;
			{
				_204ccdde8_setTypeToGreater(_self_);
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		_match_end_209443ec6:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_209445a22:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4006:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_2094468be:;
			{
				_204ccdde8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_209446935:;
			{
				_204ccdde8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_209444eb6:;
			{
				if ((!(_204ba1c99_IsInt(_39823_rk)))) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39813_lk, &__jule_any_type5); (*it++) = jule::Any(_39823_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_204cce39e_mod(_self_);
				_204ccdde8_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_20944413b:;
			{
				_204ca5122_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_209444e50:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cd004d_evalInt(_204ccabb4_binaryEval* _self_) {
	jule::Str _40303_lk = (*(_204cdd138_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _40313_rk = (*(_204cdd138_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_204cce79a_numbersAreCompatibile(_self_, &(_40303_lk), &(_40313_rk))))) {
		_204c3a706_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_20944c760:;
			{
				return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e0ee_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
			}
		}
		_match_end_20944c6d8:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_20944e047:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4055:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_20944ede4:;
			{
				_204ccdde8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_20944ee5a:;
			{
				_204ccdde8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_20944d662:;
			{
				_204cce39e_mod(_self_);
				_204ccdde8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_20944c84d:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20944db3a:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cd02d4_evalPrim(_204ccabb4_binaryEval* _self_) {
	jule::Ptr<_204ce3a9a_Prim> _40783_prim = _204cdd138_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_204ce6cce_IsBool(_40783_prim.ptr())) {
			_case_begin_209453216:;
			{
				return _204ccd964_evalBool(_self_);;
			}
		}
		else if (_204ce7065_IsStr(_40783_prim.ptr())) {
			_case_begin_2094532b0:;
			{
				return _204ccdbea_evalStr(_self_);;
			}
		}
		_match_end_20945317d:;
	};
	if ((_204cdd138_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204ce3e1e_Str(_40783_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_204ba20da_IsFloat((*(_40783_prim))._field_Kind)) {
			_case_begin_20945603d:;
			{
				return _204ccecb7_evalFloat(_self_);;
			}
		}
		else if (_204ba1c99_IsInt((*(_40783_prim))._field_Kind)) {
			_case_begin_2094560c6:;
			{
				return _204cd004d_evalInt(_self_);;
			}
		}
		else {
			_case_begin_209455ec7:;
			{
				return nullptr;;
			}
		}
		_match_end_209454404:;
	};
}



inline jule::Bool _204cd056a_checkSpecialCases(_204ccabb4_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41033_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_41033_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_204cdc0d2_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_204cdbab5_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_204cdc0d2_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_204cdbab5_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cd0801_evalOp(_204ccabb4_binaryEval* _self_) {
	jule::Bool _41183_ok = _204cd056a_checkSpecialCases(_self_);;
	if ((!(_41183_ok))) {
		return nullptr;;
	};
	if ((_204cde6ab_Struct((*((*(_self_))._field_l))._field_Type.ptr()) != nullptr)) {
		return _204ccd1b1_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _204ccea31_shift(_self_);;
	};
	{
		
		if (_204cdbd4b_Void((*((*(_self_))._field_l))._field_Type.ptr())) {
			_case_begin_2094601ac:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_204ce19ee_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr()) != nullptr)) {
			_case_begin_209460366:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209460223;
			}
		}
		else if ((_204ce19ee_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209460223:;
			{
				return _204ccbdc4_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_204cdd138_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _204ce72eb_IsAny(_204cdd138_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_209460289:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_20946180c;
			}
		}
		else if (_204cdbab5_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_20946180c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209461873;
			}
		}
		else if (_204cdbab5_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_209461873:;
			{
				return _204ccc15a_evalNil(_self_);;
			}
		}
		else if (((_204cdd138_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _204ce72eb_IsAny(_204cdd138_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_209461972:;
			{
				return _204ccd6cd_evalAny(_self_);;
			}
		}
		else if ((_204cddb72_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_2094619d8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209461a4e;
			}
		}
		else if ((_204cddb72_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461a4e:;
			{
				return _204ccc677_evalTypeEnum(_self_);;
			}
		}
		else if ((_204cdd8db_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_209461ab5:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209461b2b;
			}
		}
		else if ((_204cdd8db_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461b2b:;
			{
				return _204ccc3e1_evalEnum(_self_);;
			}
		}
		else if ((_204cdd3be_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_209461b92:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209461c08;
			}
		}
		else if ((_204cdd3be_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461c08:;
			{
				return _204ccc90d_evalSptr(_self_);;
			}
		}
		else if ((_204cdd655_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_209461c6e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209461cd5;
			}
		}
		else if ((_204cdd655_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461cd5:;
			{
				return _204cccb94_evalPtr(_self_);;
			}
		}
		else if ((_204cdde08_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461d4b:;
			{
				return _204ccce2a_evalArr(_self_);;
			}
		}
		else if ((_204cde942_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_209461e17:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_209461e7d;
			}
		}
		else if ((_204cde942_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461e7d:;
			{
				return _204ccd447_evalTrait(_self_);;
			}
		}
		else if ((_204cdd138_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_209461ee4:;
			{
				return _204cd02d4_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_20945eed1:;
			{
				_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_20945e574:;
	};
}



inline void _204cd0aa9_evalConst(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _418830_d) {
	{
		
		if (((*(_418830_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_209473ac7:;
			{
				return;;
			}
		}
		else if ((!(_204ca35b5_IsConst((*(_self_))._field_l.ptr()))) || (!(_204ca35b5_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_20947417c:;
			{
				(*((*(_418830_d))))._field_Constant=nullptr;
				(*((*(_418830_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_2094739b7:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_209474259:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b0a62b_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_2094766ac:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool((!(_204b0a62b_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_209476723:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b0a2da_Or((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_209476789:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b09e99_And((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_209476800:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b0b0ee_Gt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_209476877:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b0a96c_Lt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_2094768ee:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b0b440_GtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_209476976:;
			{
				(*((*(_418830_d))))._field_Constant=static__204b05549_NewBool(_204b0acad_LtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_2094769ed:;
			{
				_204b0b781_Add((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_209476a75:;
			{
				_204b0bac2_Sub((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_209476aec:;
			{
				_204b0be13_Mul((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_209476b74:;
			{
				jule::Bool _42284_ok = _204b0c254_Div((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42284_ok)) && (_204b07738_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_204ce3a9a_Prim> _42338_prim = _204cdd138_Prim((*((*(_418830_d))))._field_Type.ptr());;
				{
					
					if (_204ba16c2_IsSigInt((*(_42338_prim))._field_Kind)) {
						_case_begin_209487c84:;
						{
							_204b079e1_SetI64((*((*(_418830_d))))._field_Constant, _204b0721b_AsI64((*((*(_418830_d))))._field_Constant));
						}
					}
					else if (_204ba19d0_IsUnsigInt((*(_42338_prim))._field_Kind)) {
						_case_begin_209487d2d:;
						{
							_204b07c99_SetU64((*((*(_418830_d))))._field_Constant, _204b074a2_AsU64((*((*(_418830_d))))._field_Constant));
						}
					}
					_match_end_209487c0c:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_209476beb:;
			{
				jule::Bool _42414_ok = _204b0c595_Mod((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42414_ok)) && (_204b07738_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_204ca5122_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_209476c73:;
			{
				_204b0cc27_BitwiseOr((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_209476cea:;
			{
				_204b0c8d6_BitwiseAnd((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_209476d72:;
			{
				_204b0d068_Xor((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_209476de9:;
			{
				_204b0d3a9_Lshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_209476e71:;
			{
				_204b0d6ea_Rshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_209475997:;
	};
	(*((*(_418830_d))))._field_Model=jule::Any((*((*(_418830_d))))._field_Constant, &__jule_any_type15);
	_204cd59e3_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _418830_d, _204cdd8db_Enum((*((*(_418830_d))))._field_Type.ptr()), &((*(_self_))._field_op), _204ca8158_getOwnerRefers((*(_self_))._field_e));
}



inline void _204cd0d62_checkData(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _426630_d) {
	jule::Ptr<_204b21664_FnIns> _42673_f = _204cde425_Fn((*((*(_426630_d))))._field_Type.ptr());;
	if ((((_42673_f != nullptr) && ((*_42673_f.alloc)._field_Decl != nullptr)) && _204b1dce3_IsMethod((*(_42673_f))._field_Decl))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _204cd1060_checkDatas(_204ccabb4_binaryEval* _self_) {
	_204cd0d62_checkData(_self_, &((*(_self_))._field_l));
	_204cd0d62_checkData(_self_, &((*(_self_))._field_r));
}



inline void _204cd1318_setModel(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _427829_d) {
	if (_204ca35b5_IsConst((*(_427829_d)).ptr())) {
		if (((_204ca35b5_IsConst((*(_self_))._field_l.ptr()) && _204ca35b5_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_204ca2b7a_Data> _42897_l;
	jule::Ptr<_204ca2b7a_Data> _428914_r;
	({
		jule::Ptr<_204ca2b7a_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_204ca2b7a_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42897_l = ___jule_assign_arg;
		_428914_r = _1___jule_assign_arg;
	});
	if ((!(_204ca3906_GoodOperand(_42897_l.ptr(), &(_428914_r))))) {
		std::swap(_42897_l, _428914_r);
	};
	(*((*(_427829_d))))._field_Model=jule::Any(jule::new_ptr<_204b113ce_BinaryExprModel>(_204b113ce_BinaryExprModel{._field_Left=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_42897_l))._field_Type, ._field_Model=(*_42897_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_428914_r))._field_Type, ._field_Model=(*_428914_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _204cd15c1_postEval(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _430729_d) {
	(*((*(_430729_d))))._field_Lvalue=false;
	_204cd1318_setModel(_self_, _430729_d);
}



inline jule::Ptr<_204ca2b7a_Data> _204cd19bc_solveExplicit(_204ccabb4_binaryEval* _self_, jule::Ptr<_204ca2b7a_Data>* _431234_l, jule::Ptr<_204ca2b7a_Data>* _431249_r) {
	({
		jule::Ptr<_204ca2b7a_Data> ___jule_assign_arg = (*(_431234_l));
		jule::Ptr<_204ca2b7a_Data> _1___jule_assign_arg = (*(_431249_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_204cd1060_checkDatas(_self_);
	jule::Ptr<_204ca2b7a_Data> _43177_d = _204cd0801_evalOp(_self_);;
	({
		jule::Ptr<_204ca2b7a_Data> ___jule_assign_arg = (*(_431234_l));
		jule::Ptr<_204ca2b7a_Data> _1___jule_assign_arg = (*(_431249_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_204cd0aa9_evalConst(_self_, &(_43177_d));
	if ((_43177_d != nullptr)) {
		(*_43177_d.alloc)._field_Mutable=true;
		_204cd15c1_postEval(_self_, &(_43177_d));
	};
	return _43177_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204cd1d0d_eval(_204ccabb4_binaryEval* _self_, jule::Ptr<_204a3250e_BinaryExpr>* _433225_op) {
	if (((*((*((*(_433225_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_204ca5122_pushErr((*(_self_))._field_e.ptr(), (*((*(_433225_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_204ca5485_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204ca2b7a_Data> _43397_l = _204cc8453_evalExpr1((*(_self_))._field_e, (*((*(_433225_op))))._field_Left);;
	if (((_43397_l == nullptr) || ((*(_43397_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_204cda982_Type> _43447_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43397_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43447_prefix;
	});;
	jule::Ptr<_204ca2b7a_Data> _43477_r = _204cc8453_evalExpr1((*(_self_))._field_e, (*((*(_433225_op))))._field_Right);;
	if (((_43477_r == nullptr) || ((*(_43477_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_433225_op))))._field_Op;
	jule::Ptr<_204ca2b7a_Data> _43547_d = _204cd19bc_solveExplicit(_self_, &(_43397_l), &(_43477_r));;
	if ((((_43547_d != nullptr) && (*_43397_l.alloc)._field_IsRune) && (*(_43477_r))._field_IsRune)) {
		(*_43547_d.alloc)._field_IsRune=true;
	};
	return _43547_d;;
}
















inline jule::Bool _204cda982_Type_eq(_204cda982_Type *_self_, _204cda982_Type _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _204cdad7d_Str(_204cda982_Type* _self_) {
	if (_204cdbab5_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1eeabb290_Builder _567_kind = static__1eeabbadc_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1eeabc26e_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	if (_204cdb82e_Binded(_self_)) {
		({
			auto except = _1eeabc26e_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:63:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:64:4"));
			(except.result);
		});
	} else {
		({
			auto except = _1eeabc26e_WriteStr(&_567_kind, ((_204cda4cb_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_204cda036_Str((*(_self_))._field_Kind.data));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:66:4"));
			(except.result);
		});
	};
	return _1eeabcaee_Str(&_567_kind);;
}



inline jule::Bool _204cdb1be_Equal(jule::Ptr<_204cda982_Type> _self_, jule::Ptr<_204cda982_Type> _7218_other) {
	if (_204cdbab5_IsNil(_self_.ptr())) {
		return _204cdbab5_IsNil(_7218_other.ptr());;
	};
	if ((_204cdb82e_Binded(_self_.ptr()) || _204cdb82e_Binded(_7218_other.ptr()))) {
		return ((_204cdb82e_Binded(_self_.ptr()) == _204cdb82e_Binded(_7218_other.ptr())) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_204cda4cb_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_204cda377_Equal((*(_self_))._field_Kind.data, _7218_other);;
}



inline jule::Bool _204cdb82e_Binded(_204cda982_Type* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _204cdbab5_IsNil(_204cda982_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _204cdbd4b_Void(_204cda982_Type* _self_) {
	jule::Ptr<_204ce3a9a_Prim> _923_prim = _204cdd138_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _204cdc0d2_Comparable(_204cda982_Type* _self_) {
	{
		_204cda982_Type* _998__self = _self_;;
		if ((_204cde6ab_Struct(_998__self) != nullptr)) {
			return (*(_204cde6ab_Struct(_998__self)))._field_Comparable;;
		};
		if ((_204cdde08_Arr(_998__self) != nullptr)) {
			return _204cdc0d2_Comparable((*(_204cdde08_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_204cdebc8_Map(_998__self) == nullptr) && (_204cde18e_Slc(_998__self) == nullptr)) && (_204cde425_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _204cdc368_Mutable(_204cda982_Type* _self_) {
	{
		_204cda982_Type* _1138__self = _self_;;
		if ((_204cde6ab_Struct(_1138__self) != nullptr)) {
			return (*(_204cde6ab_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_204cde942_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_204cdd138_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_204ce3a9a_Prim> _1215_p = _204cdd138_Prim(_1138__self);;
			return _204ce72eb_IsAny(_1215_p.ptr());;
		};
		if ((_204cdde08_Arr(_1138__self) != nullptr)) {
			return _204cdc368_Mutable((*(_204cdde08_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_204cde18e_Slc(_1138__self) != nullptr) || (_204cdd655_Ptr(_1138__self) != nullptr)) || (_204cdd3be_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _204cdc5ee_Ordered(_204cda982_Type* _self_) {
	{
		_204cda982_Type* _1368__self = _self_;;
		jule::Ptr<_204ce3a9a_Prim> _1374_prim = _204cdd138_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_204ba2371_IsNum((*_1374_prim.alloc)._field_Kind) || _204ce7065_IsStr(_1374_prim));;
		};
		if ((_204cdd655_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_204a4d2c7_StructIns> _1444_s = _204cde6ab_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_204b2b471_Enum> _1514_enm = _204cdd8db_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _204ba2371_IsNum(_204cdad7d_Str((*((*_1514_enm.alloc)._field_TypeSym))._field_Type.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _204cdc885_NilCompatible(_204cda982_Type* _self_) {
	{
		_204cda982_Type* _1628__self = _self_;;
		jule::Ptr<_204ce3a9a_Prim> _1644_prim = _204cdd138_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _204ce72eb_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_204cdbab5_IsNil(_1628__self) || (_204cde425_Fn(_1628__self) != nullptr)) || (_204cdd3be_Sptr(_1628__self) != nullptr)) || (_204cdd655_Ptr(_1628__self) != nullptr)) || (_204cde942_Trait(_1628__self) != nullptr)) || (_204cde18e_Slc(_1628__self) != nullptr)) || (_204cdebc8_Map(_1628__self) != nullptr)) || (_204cddb72_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _204cdcb1b_GC(_204cda982_Type* _self_) {
	{
		_204cda982_Type* _1838__self = _self_;;
		jule::Ptr<_204ce3a9a_Prim> _1844_prim = _204cdd138_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_204ce72eb_IsAny(_1844_prim) || _204ce7065_IsStr(_1844_prim));;
		};
		return ((((_204cdd3be_Sptr(_1838__self) != nullptr) || (_204cde18e_Slc(_1838__self) != nullptr)) || (_204cde942_Trait(_1838__self) != nullptr)) || (_204cddb72_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _204cdcda2_Variadicable(_204cda982_Type* _self_) {
	{
		_204cda982_Type* _1968__self = _self_;;
		return (_204cde18e_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_204ce3a9a_Prim> _204cdd138_Prim(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)) {
			_case_begin_2094c01b7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ce3a9a_Prim>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_2094d4693:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d462c:;
	};
}



inline jule::Ptr<_204ce75c6_Sptr> _204cdd3be_Sptr(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)) {
			_case_begin_2094d5331:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ce75c6_Sptr>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_2094d5584:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d551d:;
	};
}



inline jule::Ptr<_204cead8d_Ptr> _204cdd655_Ptr(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28)) {
			_case_begin_2094d608a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204cead8d_Ptr>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_2094d62dd:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d6277:;
	};
}



inline jule::Ptr<_204b2b471_Enum> _204cdd8db_Enum(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3)) {
			_case_begin_2094d6ce4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204b2b471_Enum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_2094d7047:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d6ed1:;
	};
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204cddb72_TypeEnum(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4)) {
			_case_begin_2094d7a4d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204b2cb7b_TypeEnum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_2094d7ca1:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d7c3a:;
	};
}



inline jule::Ptr<_204cea3ba_Arr> _204cdde08_Arr(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27)) {
			_case_begin_2094d87a7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204cea3ba_Arr>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_2094d8a0a:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d8994:;
	};
}



inline jule::Ptr<_204ce8099_Slc> _204cde18e_Slc(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24)) {
			_case_begin_2094d9511:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ce8099_Slc>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_2094d9764:;
			{
				return nullptr;;
			}
		}
		_match_end_2094d96ed:;
	};
}



inline jule::Ptr<_204b21664_FnIns> _204cde425_Fn(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)) {
			_case_begin_2094da26a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204b21664_FnIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_2094da4bd:;
			{
				return nullptr;;
			}
		}
		_match_end_2094da457:;
	};
}



inline jule::Ptr<_204a4d2c7_StructIns> _204cde6ab_Struct(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)) {
			_case_begin_2094daec4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204a4d2c7_StructIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_2094db227:;
			{
				return nullptr;;
			}
		}
		_match_end_2094db1b1:;
	};
}



inline jule::Ptr<_204b28cba_Trait> _204cde942_Trait(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data2)) {
			_case_begin_2094dbc2d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204b28cba_Trait>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_2094dbe81:;
			{
				return nullptr;;
			}
		}
		_match_end_2094dbe1a:;
	};
}



inline jule::Ptr<_204ce973d_Map> _204cdebc8_Map(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data26)) {
			_case_begin_2094dc987:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ce973d_Map>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_2094dcbda:;
			{
				return nullptr;;
			}
		}
		_match_end_2094dcb74:;
	};
}



inline jule::Ptr<_204ce8b8d_Tuple> _204cdee5e_Tup(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data25)) {
			_case_begin_2094dd6e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ce8b8d_Tuple>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_2094dd944:;
			{
				return nullptr;;
			}
		}
		_match_end_2094dd8cd:;
	};
}



inline jule::Bool _204ce01e5_comptime(_204cda982_Type* _self_) {
	return (((((((((((((((_204ce1768_comptimeTypeInfos(_self_) != nullptr) || (_204ce19ee_comptimeTypeInfo(_self_) != nullptr)) || (_204ce047b_comptimeStructFields(_self_) != nullptr)) || (_204ce0712_comptimeStructField(_self_) != nullptr)) || (_204ce0998_comptimeEnumFields(_self_) != nullptr)) || (_204ce0c2e_comptimeEnumField(_self_) != nullptr)) || (_204ce1c85_comptimeStatics(_self_) != nullptr)) || (_204ce201b_comptimeStatic(_self_) != nullptr)) || (_204ce0eb5_comptimeParams(_self_) != nullptr)) || (_204ce124b_comptimeParam(_self_) != nullptr)) || (_204ce22a2_comptimeValue(_self_) != nullptr)) || (_204ce2cdb_comptimeFiles(_self_) != nullptr)) || (_204ce2a55_comptimeFile(_self_) != nullptr)) || (_204ce2538_comptimeDecl(_self_) != nullptr)) || (_204ce27be_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_204ba5ae4_comptimeStructFields> _204ce047b_comptimeStructFields(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data7)) {
			_case_begin_2094de637:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ba5ae4_comptimeStructFields>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_2094e3707:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e3691:;
	};
}



inline jule::Ptr<_204ba4351_comptimeStructField> _204ce0712_comptimeStructField(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data6)) {
			_case_begin_2094e3d56:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ba4351_comptimeStructField>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_2094e40a9:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e4043:;
	};
}



inline jule::Ptr<_204babaa6_comptimeEnumFields> _204ce0998_comptimeEnumFields(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data11)) {
			_case_begin_2094e4ab0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204babaa6_comptimeEnumFields>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_2094e4d13:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e4c9c:;
	};
}



inline jule::Ptr<_204baa797_comptimeEnumField> _204ce0c2e_comptimeEnumField(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data10)) {
			_case_begin_2094e5819:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204baa797_comptimeEnumField>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_2094e5a6c:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e5a06:;
	};
}



inline jule::Ptr<_204bb0417_comptimeParams> _204ce0eb5_comptimeParams(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data13)) {
			_case_begin_2094e6573:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bb0417_comptimeParams>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_2094e67c6:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e6760:;
	};
}



inline jule::Ptr<_204bad5ad_comptimeParam> _204ce124b_comptimeParam(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data12)) {
			_case_begin_2094e72cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bad5ad_comptimeParam>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_2094e7530:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e74b9:;
	};
}



inline jule::Ptr<_204ba37e5_comptimeRange> _204ce14d2_comptimeRange(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)) {
			_case_begin_2094e8036:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ba37e5_comptimeRange>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_2094e8289:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e8223:;
	};
}



inline jule::Ptr<_204bb1c76_comptimeTypeInfos> _204ce1768_comptimeTypeInfos(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data14)) {
			_case_begin_2094e8c90:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bb1c76_comptimeTypeInfos>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_2094e8ee3:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e8e7c:;
	};
}



inline jule::Ptr<_204bb36e5_comptimeTypeInfo> _204ce19ee_comptimeTypeInfo(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data15)) {
			_case_begin_2094e99e9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bb36e5_comptimeTypeInfo>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_2094e9c4c:;
			{
				return nullptr;;
			}
		}
		_match_end_2094e9bd6:;
	};
}



inline jule::Ptr<_204ba8d28_comptimeStatics> _204ce1c85_comptimeStatics(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data9)) {
			_case_begin_2094ea753:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ba8d28_comptimeStatics>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_2094ea9a6:;
			{
				return nullptr;;
			}
		}
		_match_end_2094ea940:;
	};
}



inline jule::Ptr<_204ba7574_comptimeStatic> _204ce201b_comptimeStatic(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data8)) {
			_case_begin_2094eb4ac:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204ba7574_comptimeStatic>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_2094eb710:;
			{
				return nullptr;;
			}
		}
		_match_end_2094eb699:;
	};
}



inline jule::Ptr<_204bb97ea_comptimeValue> _204ce22a2_comptimeValue(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data16)) {
			_case_begin_2094ec216:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bb97ea_comptimeValue>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_2094ec469:;
			{
				return nullptr;;
			}
		}
		_match_end_2094ec403:;
	};
}



inline jule::Ptr<_204bc2ddb_comptimeDecl> _204ce2538_comptimeDecl(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20)) {
			_case_begin_2094ece70:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bc2ddb_comptimeDecl>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_2094ed1c3:;
			{
				return nullptr;;
			}
		}
		_match_end_2094ed15c:;
	};
}



inline jule::Ptr<_204bc0aed_comptimeDecls> _204ce27be_comptimeDecls(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data19)) {
			_case_begin_2094edbc9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bc0aed_comptimeDecls>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_2094ede2c:;
			{
				return nullptr;;
			}
		}
		_match_end_2094eddb6:;
	};
}



inline jule::Ptr<_204bbdec5_comptimeFile> _204ce2a55_comptimeFile(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data18)) {
			_case_begin_2094ee933:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bbdec5_comptimeFile>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_2094eeb86:;
			{
				return nullptr;;
			}
		}
		_match_end_2094eeb20:;
	};
}



inline jule::Ptr<_204bbc556_comptimeFiles> _204ce2cdb_comptimeFiles(_204cda982_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data17)) {
			_case_begin_20950068c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_204bbc556_comptimeFiles>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_2095008e0:;
			{
				return nullptr;;
			}
		}
		_match_end_209500879:;
	};
}








inline jule::Bool _204ce3193_TypeSym_eq(_204ce3193_TypeSym *_self_, _204ce3193_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _204ce354a_checked(_204ce3193_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _204ce3a9a_Prim_eq(_204ce3a9a_Prim *_self_, _204ce3a9a_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _204ce3e1e_Str(_204ce3a9a_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _204ce4260_Equal(jule::Ptr<_204ce3a9a_Prim> _self_, jule::Ptr<_204cda982_Type> _51418_other) {
	jule::Ptr<_204ce3a9a_Prim> _5153_prim = _204cdd138_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _204ce4705_IsConstraint(_204ce3a9a_Prim* _self_) {
	return ((((!(_204ce7065_IsStr(_self_))) && (!(_204ce72eb_IsAny(_self_)))) && (!(_204ce6cce_IsBool(_self_)))) && (!(_204ba2371_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _204ce498b_IsI8(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _204ce4c22_IsI16(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _204ce4ea8_IsI32(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _204ce523e_IsI64(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _204ce54c5_IsU8(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _204ce575b_IsU16(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _204ce59e2_IsU32(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _204ce5c78_IsU64(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _204ce600e_IsF32(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _204ce6295_IsF64(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _204ce652b_IsInt(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _204ce67b2_IsUint(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _204ce6a48_IsUintptr(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _204ce6cce_IsBool(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _204ce7065_IsStr(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _204ce72eb_IsAny(_204ce3a9a_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _204ce75c6_Sptr_eq(_204ce75c6_Sptr *_self_, _204ce75c6_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _204ce797d_Str(_204ce75c6_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _204cdad7d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _204ce7cbe_Equal(jule::Ptr<_204ce75c6_Sptr> _self_, jule::Ptr<_204cda982_Type> _59118_other) {
	jule::Ptr<_204ce75c6_Sptr> _5923_sptr = _204cdd3be_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _204cdb1be_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _204ce8099_Slc_eq(_204ce8099_Slc *_self_, _204ce8099_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _204ce8561_Str(_204ce8099_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _204cdad7d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _204ce88a2_Equal(jule::Ptr<_204ce8099_Slc> _self_, jule::Ptr<_204cda982_Type> _61018_other) {
	jule::Ptr<_204ce8099_Slc> _6113_slc = _204cde18e_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _204cdb1be_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _204ce9045_Str(_204ce8b8d_Tuple* _self_) {
	_1eeabb290_Builder _6277_s = static__1eeabbadc_New(16LL);;
	({
		auto except = _1eeabc527_WriteByte(&_6277_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:628:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&_6277_s, _204cdad7d_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:629:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_209511cdb:;
		if (it != expr_end) {
			jule::Ptr<_204cda982_Type> *_63010_t = it;
			{
				({
					auto except = _1eeabc527_WriteByte(&_6277_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:631:4"));
				});
				({
					auto except = _1eeabc26e_WriteStr(&_6277_s, _204cdad7d_Str((*(_63010_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:632:4"));
					(except.result);
				});
			}
			_iter_next_209511cdb:;
			++it;
			goto _iter_begin_209511cdb;
		}
		_iter_end_209511cdb:;
	};
	({
		auto except = _1eeabc527_WriteByte(&_6277_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:634:3"));
	});
	return _1eeabcaee_Str(&_6277_s);;
}



inline jule::Bool _204ce9386_Equal(jule::Ptr<_204ce8b8d_Tuple> _self_, jule::Ptr<_204cda982_Type> _63918_other) {
	jule::Ptr<_204ce8b8d_Tuple> _6403_tup = _204cdee5e_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _6477_i = 0LL;;
	for (; (_6477_i < (*(_self_))._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_204cdb1be_Equal((*_self_.alloc)._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_209514b68:;
	}
	_iter_end_209514b68:;;
	return true;;
}








inline jule::Bool _204ce973d_Map_eq(_204ce973d_Map *_self_, _204ce973d_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _204ce9ae5_Str(_204ce973d_Map* _self_) {
	_1eeabb290_Builder _6677_s = static__1eeabbadc_New(16LL);;
	({
		auto except = _1eeabc26e_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:668:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_6677_s, _204cdad7d_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:669:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&_6677_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:670:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&_6677_s, _204cdad7d_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:671:3"));
		(except.result);
	});
	return _1eeabcaee_Str(&_6677_s);;
}



inline jule::Bool _204ce9e36_Equal(jule::Ptr<_204ce973d_Map> _self_, jule::Ptr<_204cda982_Type> _67618_other) {
	jule::Ptr<_204ce973d_Map> _6773_m = _204cdebc8_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_204cdb1be_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _204cdb1be_Equal((*_self_.alloc)._field_Val, (*_6773_m.alloc)._field_Val));;
}








inline jule::Bool _204cea3ba_Arr_eq(_204cea3ba_Arr *_self_, _204cea3ba_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _204cea772_Str(_204cea3ba_Arr* _self_) {
	_1eeabb290_Builder _6957_s = static__1eeabbadc_New(16LL);;
	({
		auto except = _1eeabc527_WriteByte(&_6957_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:696:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&_6957_s, _201a16073_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:697:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&_6957_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:698:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&_6957_s, _204cdad7d_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:699:3"));
		(except.result);
	});
	return _1eeabcaee_Str(&_6957_s);;
}



inline jule::Bool _204ceaab3_Equal(jule::Ptr<_204cea3ba_Arr> _self_, jule::Ptr<_204cda982_Type> _70418_other) {
	jule::Ptr<_204cea3ba_Arr> _7053_arr = _204cdde08_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _204cdb1be_Equal((*_self_.alloc)._field_Elem, (*_7053_arr.alloc)._field_Elem));;
}








inline jule::Bool _204cead8d_Ptr_eq(_204cead8d_Ptr *_self_, _204cead8d_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _204ceb245_Str(_204cead8d_Ptr* _self_) {
	if (_204ceb90a_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _204cdad7d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _204ceb586_Equal(jule::Ptr<_204cead8d_Ptr> _self_, jule::Ptr<_204cda982_Type> _72818_other) {
	jule::Ptr<_204cead8d_Ptr> _7293_ptr = _204cdd655_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_209520c62:;
			{
				return false;;
			}
		}
		else if (_204ceb90a_IsUnsafe(_self_.ptr())) {
			_case_begin_209520613:;
			{
				return _204ceb90a_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_204ceb90a_IsUnsafe(_7293_ptr)) {
			_case_begin_209520679:;
			{
				return _204ceb90a_IsUnsafe(_self_);;
			}
		}
		else {
			_case_begin_209520190:;
			{
				return _204cdb1be_Equal((*_self_.alloc)._field_Elem, (*_7293_ptr.alloc)._field_Elem);;
			}
		}
		_match_end_209520118:;
	};
}



inline jule::Bool _204ceb90a_IsUnsafe(_204cead8d_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _204cebd8e_referencer_eq(_204cebd8e_referencer *_self_, _204cebd8e_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _204ced610_pushErr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a14216_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_204c3238a_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _204ced80d_allowBuiltin(_204cecd7e_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _204ceda0b_disallowBuiltin(_204cecd7e_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _20952566d_pushReference(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4d2c7_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_209081ecc_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_204c00e19_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type64));
}

inline void _209528143_pushReference(_204cecd7e_typeChecker* _self_, jule::Ptr<_204b28cba_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_209529d48_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_204c00e19_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _204cee06c_pushReferenceByKind(_204cecd7e_typeChecker* _self_, jule::Ptr<_204cda982_Type>* _84240_k) {
	{
		
		if ((_204cde6ab_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_209524282:;
			{
				jule::Ptr<_204a4d2c7_StructIns> _8458_t = _204cde6ab_Struct((*(_84240_k)).ptr());;
				_20952566d_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_204cde942_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_20952432b:;
			{
				jule::Ptr<_204b28cba_Trait> _8488_t = _204cde942_Trait((*(_84240_k)).ptr());;
				_209528143_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_209524161:;
	};
}



inline void _204cee48a_pushCycleError(_204cecd7e_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1eeabb290_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon20952c213, nullptr, nullptr);;
	jule::Str _8653_m = _1eeabcaee_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1eeabc26e_WriteStr(_85353_message, _200e338ae_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:869:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_85353_message, _8683_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:870:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_85353_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:871:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_85353_message, _8653_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:872:3"));
		(except.result);
	});
}



inline jule::Bool _204cee886_checkCrossCycle(_204cecd7e_typeChecker* _self_, jule::Any _87527_decl, _1eeabb290_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_209531679:;
			{
				jule::Ptr<_204cd9b90_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_204cd9b90_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_209532647:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_209532ed8:;
									{
										_204cee48a_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_204cee886_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_209533071:;
									{
										_204cee48a_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_209532dc8:;
							};
						}
						_iter_next_209532647:;
						++it;
						goto _iter_begin_209532647;
					}
					_iter_end_209532647:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2095314d1:;
			{
				jule::Ptr<_204a4a46c_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_204a4a46c_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2095349e0:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_209535381:;
									{
										_204cee48a_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_204cee886_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_209535419:;
									{
										_204cee48a_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_209535271:;
							};
						}
						_iter_next_2095349e0:;
						++it;
						goto _iter_begin_2095349e0;
					}
					_iter_end_2095349e0:;
				};
			}
		}
		_match_end_209531613:;
	};
	return true;;
}



inline jule::Bool _204ceec82_checkIllegalCycles(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2095376b3:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_204a4a46c_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20953753c:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_204cd9b90_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_20953502e:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_204ced610_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_referencer.alloc)._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1eeabb290_Builder _9327_message = static__1eeabbadc_New(32LL);;
	if ((!(_204cee886_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _1eeabcaee_Str(&_9327_message);;
		_1eeabccec_Clear(&_9327_message);
		_204cee48a_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_1eeabcaee_Str(&_9327_message);
		_204ced610_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20953c465:;
			{
				{
					(*((*((*(_self_))._field_referencer))._field_refs))=jule::append((*((*(*(_self_))._field_referencer.alloc)._field_refs)),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl; __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_20953ab06:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_20953cc29:;
						{
							jule::Ptr<_204a4a46c_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_204a4a46c_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4a46c_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.unsafe_cast_ptr<_204a4a46c_Struct>(); __jule_collection; }));
						}
					}
					_match_end_20953ca81:;
				};
			}
		}
		_match_end_20953c3cc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _204d0017d_fromTypeAlias(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _95930_decl, jule::Ptr<_204cd9b90_TypeAlias>* _95962_ta) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_204ced610_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_204ced610_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2095433b1:;
			if (it != expr_end) {
				jule::Ptr<_204cd9b90_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type != nullptr) && _204cdb1be_Equal((*(*((*(_95962_ta))))._field_TypeSym.alloc)._field_Type, (*(*(_97611_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_2095433b1;
					};
				}
				_iter_next_2095433b1:;
				++it;
				goto _iter_begin_2095433b1;
			}
			_iter_end_2095433b1:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2095456b0:;
			if (it != expr_end) {
				jule::Ptr<_204cd9b90_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_204ced610_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_209546150:;
						if (it != expr_end) {
							jule::Ptr<_204cd9b90_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_204ced610_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_209546150:;
							++it;
							goto _iter_begin_209546150;
						}
						_iter_end_209546150:;
					};
				}
				_iter_next_2095456b0:;
				++it;
				goto _iter_begin_2095456b0;
			}
			_iter_end_2095456b0:;
		};
	};
	if (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type == nullptr)) {
		jule::Bool _10034_ok = _204c3e50c_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)) {
			_case_begin_2095496b4:;
			{
				jule::Bool _10114_ok = _204ceec82_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_204a4d2c7_StructIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_20954963c:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_204cda982_Type> _10237_tk = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind});;
	_204cee06c_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data21);;
}



inline jule::Ptr<_204b2b471_Enum> _204d00579_fromEnum(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _103625_decl, jule::Ptr<_204b2b471_Enum>* _103657_e) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_204ced610_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_204ced610_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204d00975_fromTypeEnum(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _104829_decl, jule::Ptr<_204b2cb7b_TypeEnum>* _104861_e) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_204ced610_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_204ced610_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_204b28cba_Trait> _204d00d71_fromTrait(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _106026_decl, jule::Ptr<_204b28cba_Trait>* _106058_t) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_204ced610_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_204ced610_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_209528143_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _204d0126c_checkStructIns(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4d2c7_StructIns>* _107335_ins, jule::Ptr<_204a14216_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_204c4aeec_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_204c4ba14_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_204c4b2a5_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _204d01525_appendUsedStructReference(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4a46c_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_20955c221:;
			{
				jule::Ptr<_204a4a46c_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_204a4a46c_Struct>();;
				if ((!(_204a4be30_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4a46c_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_20955c1aa:;
	};
}



inline jule::Ptr<_204a4d2c7_StructIns> _204d01921_buildStructInstance(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _110740_decl, jule::Ptr<_204a4a46c_Struct>* _110772_s) {
	jule::Ptr<_204cebd8e_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
				_case_begin_2095650b4:;
				{
					jule::Ptr<_204bd8929_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1);;
					jule::Ptr<_204bd8929_scopeChecker> _11199_hard = _204bdc08c_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_11199_hard))._field_owner))._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_20956504d;
					};
					jule::I32 _11235_n = ((*((*(_11199_hard))._field_owner))._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_20956504d:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_204a4d2c7_StructIns> _11377_ins = _204a4a912_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cd909b_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20956a394:;
		if (it != expr_end) {
			jule::Ptr<_204a29b11_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_204cda982_Type> _11408_kind = _204d05628_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_20956a394:;
			++it;
			goto _iter_begin_20956a394;
		}
		_iter_end_20956a394:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_204a4d2c7_StructIns> _204d01d1c_fromStructIns(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a4d2c7_StructIns>* _115534_ins, jule::Ptr<_204a14216_Token> _115555_token) {
	jule::Ptr<_204a4d2c7_StructIns> _11567_existInstance = _204a4ac20_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_204c3c30c_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_20952566d_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_204d0126c_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_20952566d_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_204a4d2c7_StructIns> _204d02218_fromStruct(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _117331_decl, jule::Ptr<_204a4a46c_Struct>* _117363_s) {
	if ((!(_204c32ae9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_204ced610_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_204ced610_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_204a4d2c7_StructIns>(_204a4d2c7_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_204a4c727_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_204b1d5a6_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Operators=_204a49559_Operators{._field_Eq=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Gt=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Lt=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Shl=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Shr=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Add=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Sub=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Div=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Mul=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Mod=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Neg=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Pos=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_204b21664_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _204ceec82_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_204d01525_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_204a4d2c7_StructIns> _11977_ins = _204d01921_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_204c338b9_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*_11977_ins.alloc)._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _204d01d1c_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _204d02559_getDef(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209575844:;
		if (it != expr_end) {
			jule::Ptr<_204a36d1b_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_204d0788e_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22);;
				};
			}
			_iter_next_209575844:;
			++it;
			goto _iter_begin_209575844;
		}
		_iter_end_209575844:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209575bda:;
		if (it != expr_end) {
			jule::Ptr<_204cd9b90_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_204ced610_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_204a4d2c7_StructIns> _12309_st = _204cde6ab_Struct((*((*_122415_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _204ceec82_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_209575bda:;
			++it;
			goto _iter_begin_209575bda;
		}
		_iter_end_209575bda:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_204b2b471_Enum> _12428_e = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d0a342_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_204d00579_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3);;
		};
		jule::Ptr<_204b2cb7b_TypeEnum> _12478_te = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d0a683_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_204d00975_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4);;
		};
		jule::Ptr<_204b28cba_Trait> _12528_t = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d0a001_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_204d00d71_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_204ced610_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a4a46c_Struct> _12617_s = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d097b4_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_204d02218_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0);;
	};
	jule::Ptr<_204cd9b90_TypeAlias> _12667_ta = ((_204d0a7d7_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_204d093b8_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_204d61d7c_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _204d0017d_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_204ced610_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _204d0289a_buildIdent(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a21b_IdentTypeDecl> _127830_decl) {
	return _204d02559_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _204d02bdb_buildSubIdent(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a4d5_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _204d0289a_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4)) {
			_case_begin_209583b2c:;
			{
				goto _match_end_20958418d;
			}
		}
		else {
			_case_begin_209583c09:;
			{
				_204ced610_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20958418d:;
	};
	jule::Ptr<_204b2cb7b_TypeEnum> _12947_t = _12837_ident.cast_ptr<_204b2cb7b_TypeEnum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2095858a9:;
		if (it != expr_end) {
			jule::I32 _12967_i = it - expr->begin();
			jule::Ptr<_204a2a21b_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_204b2c5a4_TypeEnumItem> _12978_item = _204b2d770_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_204ced610_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_204cee06c_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_12978_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data21);;
				};
				_12947_t=_204cddb72_TypeEnum((*((*(_12978_item))._field_TypeSym))._field_Type.ptr());
				if ((_12947_t == nullptr)) {
					_204ced610_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_2095858a9:;
			++it;
			_12967_i++;
			goto _iter_begin_2095858a9;
		}
		_iter_end_2095858a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_204ce75c6_Sptr> _204d0302c_buildSptrFromType(_204cecd7e_typeChecker* _self_, jule::Ptr<_204cda982_Type>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_20958615c:;
			{
				return nullptr;;
			}
		}
		else if (((_204cdde08_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_204cdde08_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_20958a419:;
			{
				_204ced610_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209589a01:;
	};
	return jule::new_ptr<_204ce75c6_Sptr>(_204ce75c6_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_204ce75c6_Sptr> _204d0336d_buildSptr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2abab_SptrTypeDecl> _133029_decl) {
	jule::Bool _13313_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13313_cycleRisk;
	});;
	jule::Ptr<_204cda982_Type> _13357_elem = _204d05969_checkDecl(_self_, &((*(_133029_decl))._field_Elem));;
	return _204d0302c_buildSptrFromType(_self_, &(_13357_elem));;
}



inline jule::Ptr<_204cead8d_Ptr> _204d036ae_buildPtrFromType(_204cecd7e_typeChecker* _self_, jule::Ptr<_204cda982_Type>* _133937_elem) {
	{
		
		if (((*(_133937_elem)) == nullptr)) {
			_case_begin_20958da16:;
			{
				return nullptr;;
			}
		}
		else if (((_204cdde08_Arr((*(_133937_elem)).ptr()) != nullptr) && (*(_204cdde08_Arr((*(_133937_elem)).ptr())))._field_Auto)) {
			_case_begin_20958dab0:;
			{
				_204ced610_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_204cead8d_Ptr>(_204cead8d_Ptr{._field_Elem=jule::Ptr<_204cda982_Type>(nullptr)});;
			}
		}
		_match_end_20958d8e5:;
	};
	return jule::new_ptr<_204cead8d_Ptr>(_204cead8d_Ptr{._field_Elem=(*(_133937_elem))});;
}



inline jule::Ptr<_204cead8d_Ptr> _204d03a00_buildPtr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2b63a_PtrTypeDecl> _135428_decl) {
	jule::Bool _13553_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13553_cycleRisk;
	});;
	jule::Ptr<_204cda982_Type> _13597_elem = static_cast<jule::Ptr<_204cda982_Type>>(nullptr);;
	if ((!(_204a2b9d1_IsUnsafe(_135428_decl.ptr())))) {
		_13597_elem=_204d05969_checkDecl(_self_, &((*_135428_decl.alloc)._field_Elem));
		return _204d036ae_buildPtrFromType(_self_, &(_13597_elem));;
	};
	return jule::new_ptr<_204cead8d_Ptr>(_204cead8d_Ptr{._field_Elem=_13597_elem});;
}



inline jule::Ptr<_204ce8099_Slc> _204d03d41_buildSlc(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2b041_SlcTypeDecl> _137128_decl) {
	jule::Bool _13723_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13723_cycleRisk;
	});;
	jule::Ptr<_204cda982_Type> _13767_elem = _204d05969_checkDecl(_self_, &((*(_137128_decl))._field_Elem));;
	{
		
		if ((_13767_elem == nullptr)) {
			_case_begin_209593db2:;
			{
				return nullptr;;
			}
		}
		else if (((_204cdde08_Arr(_13767_elem.ptr()) != nullptr) && (*(_204cdde08_Arr(_13767_elem)))._field_Auto)) {
			_case_begin_209593e28:;
			{
				_204ced610_pushErr(_self_, (*((*_137128_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209593d4b:;
	};
	return jule::new_ptr<_204ce8099_Slc>(_204ce8099_Slc{._field_Elem=_13767_elem});;
}



inline jule::Ptr<_204cea3ba_Arr> _204d04182_buildArr(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2bdcc_ArrTypeDecl> _139228_decl) {
	jule::I32 _13937_n = 0LL;;
	if ((!(_204a2c273_AutoSized(_139228_decl.ptr())))) {
		jule::Ptr<_204ca2b7a_Data> _13968_size = _204cc8794_evalExpr(_204c39260_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139228_decl.alloc)._field_Size);;
		if ((_13968_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_204ca35b5_IsConst(_13968_size.ptr())))) {
			_204ced610_pushErr(_self_, (*((*_139228_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_204cdd138_Prim((*(_13968_size))._field_Type.ptr()) == nullptr) || (!(_204ba1c99_IsInt((*(_204cdd138_Prim((*(_13968_size))._field_Type.ptr())))._field_Kind))))) {
			_204ced610_pushErr(_self_, (*((*_139228_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13937_n=static_cast<jule::I32>(_204b0721b_AsI64((*(_13968_size))._field_Constant.ptr()));
		if ((_13937_n < 0LL)) {
			_204ced610_pushErr(_self_, (*((*_139228_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14145_max = _204b9ec0e_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_204b97c18_BitSize != 64LL) && (static_cast<jule::I64>(_13937_n) > _14145_max))) {
				_204ced610_pushErr(_self_, (*((*_139228_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cd6829_constoa(&((*_13968_size.alloc)._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_201a15ca9_FmtInt(_14145_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_204cda982_Type> _14237_elem = _204d05969_checkDecl(_self_, &((*(_139228_decl))._field_Elem));;
	{
		
		if ((_14237_elem == nullptr)) {
			_case_begin_20959e142:;
			{
				return nullptr;;
			}
		}
		else if (((_204cdde08_Arr(_14237_elem.ptr()) != nullptr) && (*(_204cdde08_Arr(_14237_elem)))._field_Auto)) {
			_case_begin_20959e1db:;
			{
				_204ced610_pushErr(_self_, (*((*_139228_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20959e0ba:;
	};
	return jule::new_ptr<_204cea3ba_Arr>(_204cea3ba_Arr{._field_Auto=_204a2c273_AutoSized(_139228_decl), ._field_N=_13937_n, ._field_Elem=_14237_elem});;
}



inline jule::Ptr<_204ce973d_Map> _204d044c3_buildMap(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2c62a_MapTypeDecl> _144128_decl) {
	jule::Bool _14423_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14423_cycleRisk;
	});;
	jule::Ptr<_204cda982_Type> _14467_key = _204d05969_checkDecl(_self_, &((*(_144128_decl))._field_Key));;
	if ((_14467_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204cda982_Type> _14517_val = _204d05969_checkDecl(_self_, &((*_144128_decl.alloc)._field_Val));;
	if ((_14517_val == nullptr)) {
		return nullptr;;
	};
	if ((_204cdd8db_Enum(_14517_val.ptr()) != nullptr)) {
		_204ced610_pushErr(_self_, (*((*_144128_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_204a4a46c_Struct> _14608_s = _2046da926_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_204d01525_appendUsedStructReference(_self_, &(_14608_s));
		jule::Ptr<_204a4d2c7_StructIns> _14628_ins = _204a4a912_instance(_14608_s);;
		(*(_14628_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=_14467_key, ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=_14517_val, ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); __jule_collection; });
		_204d01d1c_fromStructIns(_self_, &(_14628_ins), (*((*_144128_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_204ce973d_Map>(_204ce973d_Map{._field_Key=_14467_key, ._field_Val=_14517_val});;
}



inline jule::Ptr<_204ce8b8d_Tuple> _204d04814_buildTuple(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2b33d_TupleTypeDecl> _147330_decl) {
	jule::Slice<jule::Ptr<_204cda982_Type>> _14747_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(0LL, (*(_147330_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cda982_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147330_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2095a8404:;
		if (it != expr_end) {
			jule::Ptr<_204a29b11_TypeDecl> _147515_t = *it;
			{
				jule::Ptr<_204cda982_Type> _14768_kind = _204d05969_checkDecl(_self_, &(_147515_t));;
				if ((_14768_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_204cda982_Type>> &__jule_push_dest = _14747_types; __jule_push_dest.push(_14768_kind); };
			}
			_iter_next_2095a8404:;
			++it;
			goto _iter_begin_2095a8404;
		}
		_iter_end_2095a8404:;
	};
	return jule::new_ptr<_204ce8b8d_Tuple>(_204ce8b8d_Tuple{._field_Types=_14747_types});;
}



inline jule::Bool _204d04b55_checkFuncTypes(_204cecd7e_typeChecker* _self_, jule::Ptr<_204b21664_FnIns>* _148635_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_148635_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2095a9e3e:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> _148715_p = *it;
			{
				(*(_148715_p))._field_Type=_204d05628_build(_self_, &((*((*((*((*_148715_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_148715_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_204c3cdac_checkFnParamKind((*(_self_))._field_s, &(_148715_p));
			}
			_iter_next_2095a9e3e:;
			++it;
			goto _iter_begin_2095a9e3e;
		}
		_iter_end_2095a9e3e:;
	};
	if ((!(_204b1da5c_IsVoid((*((*(_148635_f))))._field_Decl.ptr())))) {
		(*((*(_148635_f))))._field_Result=_204d05628_build(_self_, &((*((*((*((*(*((*(_148635_f))))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_148635_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_204b21664_FnIns> _204d04e96_buildFunc(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a3b89d_FnDecl> _150429_decl) {
	jule::Bool _15053_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15053_cycleRisk;
	});;
	if (((*(_150429_decl))._field_Generics.len() > 0LL)) {
		_204ced610_pushErr(_self_, (*_150429_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204b1d5a6_Fn> _15147_f = _204c0358c_buildFunc(_150429_decl);;
	jule::I32 _15163_n = (*((*(_self_))._field_s))._field_errors.len();;
	_204c471a2_checkAnonFuncDecl((*(_self_))._field_s, &(_15147_f));
	if ((_15163_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_204b21664_FnIns> _15227_ins = _204b1eab3_instanceForce(_15147_f);;
	(*(_15227_ins))._field_Anon=true;
	(*_15227_ins.alloc)._field_AsAnon=true;
	jule::Bool _15263_ok = _204d04b55_checkFuncTypes(_self_, &(_15227_ins));;
	if ((!(_15263_ok))) {
		return nullptr;;
	};
	return _15227_ins;;
}



inline jule::Trait _204d052d7_buildNamespace(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a2a8ae_NamespaceTypeDecl> _153434_ns) {
	jule::Ptr<_204c12139_ImportInfo> _15357_imp = _204cd83a8_findNamespace((*(_self_))._field_lookup, (*((*(_153434_ns))._field_Namespace))._field_Kind);;
	if (((_15357_imp == nullptr) || (!(_204c145d1_isLookupable(_15357_imp.ptr()))))) {
		_204ced610_pushErr(_self_, (*_153434_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_153434_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_204ceda0b_disallowBuiltin(_self_);
	jule::Trait _15427_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15357_imp, (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data2);
	jule::Ptr<_204cda982_Type> _15447_kind = _204d05969_checkDecl(_self_, &((*_153434_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15427_lookup;
	_204ced80d_allowBuiltin(_self_);
	return jule::Trait(_15447_kind, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data21);;
}



inline jule::Ptr<_204cda982_Type> _204d05628_build(_204cecd7e_typeChecker* _self_, jule::Any* _155026_declKind) {
	jule::Trait _155111_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155026_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_2095b82b0:;
			{
				jule::Trait _15548_t = _204d0289a_buildIdent(_self_, (*(_155026_declKind)).cast_ptr<_204a2a21b_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15548_t != nullptr)) {
					_155111_kind=_15548_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_2095b7721:;
			{
				jule::Trait _15598_t = _204d02bdb_buildSubIdent(_self_, (*(_155026_declKind)).cast_ptr<_204a2a4d5_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15598_t != nullptr)) {
					_155111_kind=_15598_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_2095b7787:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204ce75c6_Sptr> _15658_t = _204d0336d_buildSptr(_self_, (*(_155026_declKind)).cast_ptr<_204a2abab_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15658_t != nullptr)) {
					_155111_kind=jule::Trait(_15658_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2095b77ed:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204cead8d_Ptr> _15718_t = _204d03a00_buildPtr(_self_, (*(_155026_declKind)).cast_ptr<_204a2b63a_PtrTypeDecl>(&__jule_any_type74));;
				if ((_15718_t != nullptr)) {
					_155111_kind=jule::Trait(_15718_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_2095b7864:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204ce8099_Slc> _15778_t = _204d03d41_buildSlc(_self_, (*(_155026_declKind)).cast_ptr<_204a2b041_SlcTypeDecl>(&__jule_any_type73));;
				if ((_15778_t != nullptr)) {
					_155111_kind=jule::Trait(_15778_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_2095b78ca:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204cea3ba_Arr> _15838_t = _204d04182_buildArr(_self_, (*(_155026_declKind)).cast_ptr<_204a2bdcc_ArrTypeDecl>(&__jule_any_type72));;
				if ((_15838_t != nullptr)) {
					_155111_kind=jule::Trait(_15838_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_2095b7941:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204ce973d_Map> _15898_t = _204d044c3_buildMap(_self_, (*(_155026_declKind)).cast_ptr<_204a2c62a_MapTypeDecl>(&__jule_any_type76));;
				if ((_15898_t != nullptr)) {
					_155111_kind=jule::Trait(_15898_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_2095b83c0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204ce8b8d_Tuple> _15958_t = _204d04814_buildTuple(_self_, (*(_155026_declKind)).cast_ptr<_204a2b33d_TupleTypeDecl>(&__jule_any_type77));;
				if ((_15958_t != nullptr)) {
					_155111_kind=jule::Trait(_15958_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_2095b8436:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_204b21664_FnIns> _16018_t = _204d04e96_buildFunc(_self_, (*(_155026_declKind)).cast_ptr<_204a3b89d_FnDecl>(&__jule_any_type68));;
				if ((_16018_t != nullptr)) {
					_155111_kind=jule::Trait(_16018_t, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_2095b849c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16078_t = _204d052d7_buildNamespace(_self_, (*(_155026_declKind)).cast_ptr<_204a2a8ae_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16078_t != nullptr)) {
					_155111_kind=_16078_t;
				};
			}
		}
		else {
			_case_begin_2095b76aa:;
			{
				_204ced610_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2095b7644:;
	};
	if ((_155111_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155111_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data21)) {
			_case_begin_2095c67b8:;
			{
				return _155111_kind.cast_ptr<_204cda982_Type>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_2095c3c49:;
			{
				jule::Ptr<_204cda982_Type> _16228_tk = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_155111_kind});;
				{
					auto &_match_expr{ _155111_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)) {
						_case_begin_2095c4b6d:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_204cda982_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16228_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)) {
						_case_begin_2095c49e7:;
						{
							jule::Ptr<_204a4d2c7_StructIns> _16295_s = _155111_kind.cast_ptr<_204a4d2c7_StructIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0);;
							if ((((*(_16295_s))._field_Decl != nullptr) && (*(*(_16295_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16228_tk))._field_BindIdent=(*(*(_16295_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_2095c4b07:;
				};
				return _16228_tk;;
			}
		}
		_match_end_2095c3221:;
	};
}



inline jule::Ptr<_204cda982_Type> _204d05969_checkDecl(_204cecd7e_typeChecker* _self_, jule::Ptr<_204a29b11_TypeDecl>* _163830_decl) {
	jule::Ptr<_204a14216_Token> _16407_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_163830_decl))))._field_Token;
	jule::Ptr<_204cda982_Type> _16437_kind = _204d05628_build(_self_, &((*((*(_163830_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16407_errorToken;
	return _16437_kind;;
}








inline jule::Bool _204d05e42_identTypeLookup_eq(_204d05e42_identTypeLookup *_self_, _204d05e42_identTypeLookup _other_) { return true; }

inline jule::Bool static__204d063b5_prim(jule::Str* _166518_ident, jule::Ptr<_204ce3a9a_Prim> _166530_t) {
	return ((*(_166530_t))._field_Kind == (*(_166518_ident)));;
}



inline jule::Bool static__204d06739_exist(jule::Str* _166919_ident, jule::Ptr<_204cda982_Type>* _166936_k) {
	{
		
		if ((_204cdd138_Prim((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cb614:;
			{
				return static__204d063b5_prim(_166919_ident, _204cdd138_Prim((*(_166936_k)).ptr()));;
			}
		}
		else if ((_204cdd3be_Sptr((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cb68b:;
			{
				jule::Ptr<_204ce75c6_Sptr> _16748_sptr = _204cdd3be_Sptr((*(_166936_k)).ptr());;
				return static__204d06739_exist(_166919_ident, &((*(_16748_sptr))._field_Elem));;
			}
		}
		else if ((_204cdd655_Ptr((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cb713:;
			{
				jule::Ptr<_204cead8d_Ptr> _16778_ptr = _204cdd655_Ptr((*(_166936_k)).ptr());;
				return static__204d06739_exist(_166919_ident, &((*(_16778_ptr))._field_Elem));;
			}
		}
		else if ((_204cde18e_Slc((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cb78a:;
			{
				jule::Ptr<_204ce8099_Slc> _16808_slc = _204cde18e_Slc((*(_166936_k)).ptr());;
				return static__204d06739_exist(_166919_ident, &((*(_16808_slc))._field_Elem));;
			}
		}
		else if ((_204cdde08_Arr((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cb966:;
			{
				jule::Ptr<_204cea3ba_Arr> _16838_arr = _204cdde08_Arr((*(_166936_k)).ptr());;
				return static__204d06739_exist(_166919_ident, &((*(_16838_arr))._field_Elem));;
			}
		}
		else if ((_204cdebc8_Map((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cb9cc:;
			{
				jule::Ptr<_204ce973d_Map> _16868_m = _204cdebc8_Map((*(_166936_k)).ptr());;
				return (static__204d06739_exist(_166919_ident, &((*(_16868_m))._field_Key)) || static__204d06739_exist(_166919_ident, &((*(_16868_m))._field_Val)));;
			}
		}
		else if ((_204cde6ab_Struct((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cba43:;
			{
				jule::Ptr<_204a4d2c7_StructIns> _16908_s = _204cde6ab_Struct((*(_166936_k)).ptr());;
				{
					auto expr = &((*(_16908_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2095d3ce2:;
					if (it != expr_end) {
						jule::Ptr<_204cd909b_InsGeneric> _169116_g = *it;
						{
							if (static__204d06739_exist(_166919_ident, &((*(_169116_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_2095d3ce2:;
						++it;
						goto _iter_begin_2095d3ce2;
					}
					_iter_end_2095d3ce2:;
				};
				return false;;
			}
		}
		else if ((_204cde425_Fn((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cbaa9:;
			{
				jule::Ptr<_204b21664_FnIns> _16988_f = _204cde425_Fn((*(_166936_k)).ptr());;
				{
					auto expr = &((*(_16988_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2095d56c8:;
					if (it != expr_end) {
						jule::Ptr<_204b2050e_ParamIns> _169916_p = *it;
						{
							if (_204b1c231_IsSelf((*(_169916_p))._field_Decl.ptr())) {
								goto _iter_next_2095d56c8;
							};
							if (static__204d06739_exist(_166919_ident, &((*(_169916_p))._field_Type))) {
								return true;;
							};
						}
						_iter_next_2095d56c8:;
						++it;
						goto _iter_begin_2095d56c8;
					}
					_iter_end_2095d56c8:;
				};
				if (((*_16988_f.alloc)._field_Result != nullptr)) {
					return static__204d06739_exist(_166919_ident, &((*_16988_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_204cdee5e_Tup((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_2095cbb31:;
			{
				jule::Ptr<_204ce8b8d_Tuple> _17128_tup = _204cdee5e_Tup((*(_166936_k)).ptr());;
				{
					auto expr = &((*(_17128_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2095d8049:;
					if (it != expr_end) {
						jule::Ptr<_204cda982_Type> _171316_t = *it;
						{
							if (static__204d06739_exist(_166919_ident, &(_171316_t))) {
								return true;;
							};
						}
						_iter_next_2095d8049:;
						++it;
						goto _iter_begin_2095d8049;
					}
					_iter_end_2095d8049:;
				};
				return false;;
			}
		}
		else {
			_case_begin_2095cb4e3:;
			{
				return false;;
			}
		}
		_match_end_2095cb3d3:;
	};
}















inline void _20566d27b_stop(_20566cac7_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _20566d512_stopped(_20566cac7_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _20566d798_finished(_20566cac7_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _20566da2e_isLastSt(_20566cac7_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _20566dd92_pushErr(_20566cac7_scopeParser* _self_, jule::Ptr<_204a14216_Token> _15423_token, jule::Str _15445_fmt) {
	_20568b7b6_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _20566e205_pushSuggestion(_20566cac7_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_20568bb29_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _20566e4ad_insertAsNext(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_20566c236_stmt>(_20566c236_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_20566c236_stmt> _20566e744_next(_20566cac7_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_204a39c0e_ScopeTree> _20566eb40_buildScope(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _17331_tokens, jule::Ptr<_204a14216_Token> _17360_end) {
	jule::Ptr<_204a39c0e_ScopeTree> _1747_s = _20566aeb0_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_20566cac7_scopeParser _1777_ssp = _20566cac7_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_20566c236_stmt>>(nullptr), ._field_pos=0};;
	_2056799b3_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_204a3ca58_VarDecl> _20566ee81_buildVarSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _18431_tokens) {
	jule::Ptr<_204a3ca58_VarDecl> _1857_v = _20568e588_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_204a3ce32_RetSt> _2056702c2_buildRetSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _19230_tokens) {
	jule::Ptr<_204a3ce32_RetSt> _1937_st = jule::new_ptr<_204a3ce32_RetSt>(_204a3ce32_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_204a3d6a2_Iter> _205670613_buildWhileNextIter(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _20339_s) {
	jule::Ptr<_204a3d6a2_Iter> _2047_it = jule::new_ptr<_204a3d6a2_Iter>(_204a3d6a2_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_204a14216_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_204a3decc_WhileKind> _2087_kind = jule::new_ptr<_204a3decc_WhileKind>(_204a3decc_WhileKind{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_204a14216_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_20566da2e_isLastSt(_self_)) {
		_20566dd92_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_20566e744_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_204a14216_Token>> _2207_stTokens = _20568620b_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_20566c236_stmt> _2228_stmt = jule::new_ptr<_20566c236_stmt>(_20566c236_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_205679650_buildSt(_self_, &(_2228_stmt));
	};
	jule::I32 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_204a14216_Token>> _2317_blockTokens = _205689484_range(&(_2307_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_20566d27b_stop(_self_);
		_20566dd92_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_20566dd92_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_2047_it))._field_Scope=_20566eb40_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type34);
	return _2047_it;;
}



inline jule::Ptr<_204a3decc_WhileKind> _205670954_buildWhileIterKind(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _24839_tokens) {
	return jule::new_ptr<_204a3decc_WhileKind>(_204a3decc_WhileKind{._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_204a14216_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _205670c95_getRangeKindKeysTokens(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _2557_vars;
	jule::Slice<_1eeaca425_Log> _25513_errs;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(_25443_toks, static_cast<jule::U32>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_204a3ca58_VarDecl> _2056710d6_buildRangeKindKey(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_204a3ca58_VarDecl> _2647_key = jule::new_ptr<_204a3ca58_VarDecl>(_204a3ca58_VarDecl{._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_20566dd92_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_20566dd92_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20566dd92_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_2647_key))._field_Ident=(*((*_2647_key.alloc)._field_Token))._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _205671427_buildRangeKindKeys(_20566cac7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2097b3d29:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_2056710d6_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_2097b3d29:;
			++it;
			goto _iter_begin_2097b3d29;
		}
		_iter_end_2097b3d29:;
	};
	return _28711_keys;;
}



inline void _20567178a_setupRangeKindKeysPlain(_20566cac7_scopeParser* _self_, jule::Ptr<_204a3e8d4_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_204a14216_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _2957_keyTokens = _205670c95_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_20566dd92_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _3027_keys = _205671427_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _205671aed_setupRangeKindKeysExplicit(_20566cac7_scopeParser* _self_, jule::Ptr<_204a3e8d4_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_204a14216_Token>>* _30974_tokens) {
	jule::I32 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _3117_rang = _205689484_range(&(_3107_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_20566dd92_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_20567178a_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _205671e61_setupRangeKindKeys(_20566cac7_scopeParser* _self_, jule::Ptr<_204a3e8d4_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_204a14216_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_205671aed_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_20567178a_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_204a3e8d4_RangeKind> _205672417_buildRangeIterKind(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_204a14216_Token>>* _3278_exprTokens, jule::Ptr<_204a14216_Token>* _32742_inToken) {
	jule::Ptr<_204a3e8d4_RangeKind> _3287_rng = jule::new_ptr<_204a3e8d4_RangeKind>(_204a3e8d4_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_KeyA=jule::Ptr<_204a3ca58_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_204a3ca58_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_20566dd92_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*(_3287_rng))._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_205671e61_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _205672813_buildCommonIterKind(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _34240_tokens, jule::Ptr<_204a14216_Token>* _34266_errTok) {
	jule::I32 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2097bdecc:;
		if (it != expr_end) {
			jule::I32 _3448_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_2097be939:;
						{
							(_3437_braceN)++;
							goto _iter_next_2097bdecc;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_2097bed24:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_2097bec25:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_2097bdecc;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_2097c0de1:;
						{
							jule::Slice<jule::Ptr<_204a14216_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_204a14216_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_205672417_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type36);;
						}
					}
					_match_end_2097c1540:;
				};
			}
			_iter_next_2097bdecc:;
			++it;
			_3448_i++;
			goto _iter_begin_2097bdecc;
		}
		_iter_end_2097bdecc:;
	};
	return jule::Any(_205670954_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type34);;
}



inline jule::Ptr<_204a3d6a2_Iter> _205672b54_buildCommonIter(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _36935_tokens) {
	jule::Ptr<_204a3d6a2_Iter> _3707_it = jule::new_ptr<_204a3d6a2_Iter>(_204a3d6a2_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_20566d27b_stop(_self_);
		_20566dd92_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _3807_exprTokens = _20568620b_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*(_3707_it))._field_Kind=_205672813_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I32 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_204a14216_Token>> _3857_scopeTokens = _205689484_range(&(_3847_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_20566d27b_stop(_self_);
		_20566dd92_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_20566dd92_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_3707_it))._field_Scope=_20566eb40_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_204a3d6a2_Iter> _205672e95_buildIterSt(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _205670613_buildWhileNextIter(_self_, _39932_st);;
	};
	return _205672b54_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_204a3ecad_BreakSt> _2056732d6_buildBreakSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _40633_tokens) {
	jule::Ptr<_204a3ecad_BreakSt> _4077_brk = jule::new_ptr<_204a3ecad_BreakSt>(_204a3ecad_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_204a14216_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_20566dd92_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_20566dd92_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_204a40187_ContSt> _205673627_buildContSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _42432_tokens) {
	jule::Ptr<_204a40187_ContSt> _4257_cont = jule::new_ptr<_204a40187_ContSt>(_204a40187_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_204a14216_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_20566dd92_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_20566dd92_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_204a4063d_If> _205673968_buildIf(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _44228_tokens) {
	jule::Ptr<_204a4063d_If> _4437_model = jule::new_ptr<_204a4063d_If>(_204a4063d_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_204a14216_Token>> _4477_exprTokens = _20568620b_getBlockExpr(_44228_tokens);;
	jule::I32 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_20566dd92_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _4547_scopeTokens = _205689484_range(&(_4487_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_20566d27b_stop(_self_);
		_20566dd92_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a14216_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_20566dd92_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*(_4437_model))._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_20566eb40_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_204a40a17_Else> _205673ca9_buildElse(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _47530_tokens) {
	jule::Ptr<_204a40a17_Else> _4767_els = jule::new_ptr<_204a40a17_Else>(_204a40a17_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I32 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _4817_scopeTokens = _205689484_range(&(_4807_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_20566dd92_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_20566d27b_stop(_self_);
			_20566dd92_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_20566dd92_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_20566eb40_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_204a40ebd_Conditional> _2056740ea_buildIfElseChain(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _49936_tokens) {
	jule::Ptr<_204a40ebd_Conditional> _5007_chain = jule::new_ptr<_204a40ebd_Conditional>(_204a40ebd_Conditional{._field_Head=_205673968_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_204a4063d_If>>(nullptr), ._field_Default=jule::Ptr<_204a40a17_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_2097dcbee;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_204a4063d_If> _5129_elif = _205673968_buildIf(_self_, &(_49936_tokens));;
				(*(_5007_chain))._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4063d_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_2097dcbee;
			};
			(*(_5007_chain))._field_Default=_205673ca9_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_2097dcbee;
		}
	_iter_next_2097dcbee:;
	}
	_iter_end_2097dcbee:;;
	return _5007_chain;;
}



inline jule::Ptr<_204a2de45_Expr> _20567443b_buildCoCallSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _52233_tokens) {
	jule::Ptr<_204a14216_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_204a2de45_Expr> _5257_e = _20568be6a_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_2097e1ce1:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_204a32b6e_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_2097e23b8:;
			{
				_20566dd92_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_2097e2352:;
	};
	return _5257_e;;
}



inline jule::Ptr<_204a375be_GotoSt> _20567477c_buildGotoSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _53832_tokens) {
	jule::Ptr<_204a375be_GotoSt> _5397_gt = jule::new_ptr<_204a375be_GotoSt>(_204a375be_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_204a14216_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_20566dd92_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_20566dd92_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_204a14216_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20566dd92_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_204a378bb_FallSt> _205674abd_buildFallSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _55832_tokens) {
	jule::Ptr<_204a378bb_FallSt> _5597_fll = jule::new_ptr<_204a378bb_FallSt>(_204a378bb_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_20566dd92_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_204a4170a_TypeAliasDecl> _205674e0e_buildTypeAliasSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _56837_tokens) {
	jule::Ptr<_204a4170a_TypeAliasDecl> _5697_tad = _20568d70d_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _2056753d7_pushCaseExpr(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _57432_tokens, jule::Ptr<_204a14216_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I32 _5808_i = 0LL;;
		jule::Ptr<_204a29b11_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_204a2de45_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_204a2de45_Expr>(_204a2de45_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type92)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_20566dd92_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_204a2de45_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_20568be6a_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_204a2de45_Expr__jule_tuple_bool _20567588d_buildCaseExprs(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _59735_tokens, jule::Ptr<_204a14216_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_204a2de45_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a2de45_Expr>(nullptr); __jule_collection; });;
	jule::I32 _5997_braceN = 0LL;;
	jule::I32 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2097edc87:;
		if (it != expr_end) {
			jule::I32 _6018_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_209800580:;
						{
							(_5997_braceN)++;
							goto _iter_next_2097edc87;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_20980096a:;
						{
							(_5997_braceN)--;
							goto _iter_next_2097edc87;
						}
					}
					_match_end_20980086b:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_2097edc87;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_209802131:;
						{
							jule::Slice<jule::Ptr<_204a14216_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_20566dd92_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_2056753d7_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_209802197:;
						{
							(*(_59765_colon))=_60115_tok;
							_2056753d7_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_209801b36:;
				};
			}
			_iter_next_2097edc87:;
			++it;
			_6018_i++;
			goto _iter_begin_2097edc87;
		}
		_iter_end_2097edc87:;
	};
	_20566dd92_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_204a39c0e_ScopeTree> _205675bce_buildCaseScope(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _63935_tokens) {
	jule::I32 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_204a14216_Token>> _6438_next;
			({
				__jule_tuple_sx_204a14216_Token__jule_tuple_bool __jule_assign_result = _20566be06_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_209805d8d;
			};
			jule::Ptr<_204a14216_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_209805d8d;
			};
			jule::Slice<jule::Ptr<_204a14216_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_204a39c0e_ScopeTree> _6538_scope = _20566eb40_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_209805d8d:;
	}
	_iter_end_209805d8d:;;
	jule::Ptr<_204a14216_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_204a39c0e_ScopeTree> _6617_scope = _20566eb40_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_204a41bb1_Case__jule_tuple_bool _2056760ca_buildCase(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_204a41bb1_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_204a41bb1_Case> _6677_c = jule::new_ptr<_204a41bb1_Case>(_204a41bb1_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_204a2de45_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_204a14216_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_20566dd92_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_204a2de45_Expr__jule_tuple_bool __jule_assign_result = _20567588d_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*(_6677_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_6677_c))._field_Scope=_205675bce_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_204a41bb1_Case__jule_tuple_x_204a40a17_Else _2056764c6_buildCases(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_204a41bb1_Case__jule_tuple_x_204a40a17_Else __jule_func_result;
	jule::Slice<jule::Ptr<_204a41bb1_Case>> _68611_cases = nullptr;;
	jule::Ptr<_204a40a17_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_204a14216_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_20566dd92_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_2098102e8;
			};
			jule::Ptr<_204a41bb1_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_204a41bb1_Case__jule_tuple_bool __jule_assign_result = _2056760ca_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_204a40a17_Else>(_204a40a17_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_20566dd92_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_204a41bb1_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_2098102e8:;
	}
	_iter_end_2098102e8:;;
	if (_6887_defNotLast) {
		_20566dd92_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_204a424ca_MatchCase> _205676817_buildMatchCase(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _71934_tokens) {
	jule::Ptr<_204a424ca_MatchCase> _7207_m = jule::new_ptr<_204a424ca_MatchCase>(_204a424ca_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_204a14216_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_204a41bb1_Case>>(nullptr), ._field_Default=jule::Ptr<_204a40a17_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _7307_exprTokens = _20568620b_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*(_7207_m))._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*(_7207_m))._field_TypeMatch) {
		_20566dd92_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I32 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_204a14216_Token>> _7387_blockToks = _205689484_range(&(_7377_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_20566d27b_stop(_self_);
		_20566dd92_pushErr(_self_, (*(_7207_m))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_20566e205_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_20566dd92_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_7207_m))._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_204a41bb1_Case__jule_tuple_x_204a40a17_Else __jule_assign_result = _2056764c6_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_204a39c0e_ScopeTree> _205676b58_buildScopeSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_204a14216_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_20566dd92_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_20566dd92_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_20566dd92_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I32 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _7827_scopeTokens = _205689484_range(&(_7817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_20566dd92_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_20566dd92_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_204a39c0e_ScopeTree> _7897_scope = _20566eb40_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_204a371e5_LabelSt> _205676e99_buildLabelSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _79533_tokens) {
	jule::Ptr<_204a371e5_LabelSt> _7967_lbl = jule::new_ptr<_204a371e5_LabelSt>(_204a371e5_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_20566e4ad_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__204a3926e_StmtData__jule_tuple_bool _2056772da_buildIdSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _81030_tokens) {
	__jule_tuple__204a3926e_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_204a14216_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_2164e0054:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_205676e99_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_2164e07b3:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_205687ae2_assignInfo> _20567762b_buildAssignInfo(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _82436_tokens) {
	jule::Ptr<_205687ae2_assignInfo> _8257_info = jule::new_ptr<_205687ae2_assignInfo>(_205687ae2_assignInfo{._field_l=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr), ._field_setter=jule::Ptr<_204a14216_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2164e1e9b:;
		if (it != expr_end) {
			jule::I32 _8298_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_2164e2a4b:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_2164e2de2:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_2164e2ce3:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_2164e2ebe:;
						{
							goto _iter_next_2164e1e9b;
						}
					}
					else if (((!(_204a1932b_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_2164e4058:;
						{
							goto _iter_next_2164e1e9b;
						}
					}
					_match_end_2164e3ee2:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_204a19062_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_2164e1e9b;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_204a19062_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_20566dd92_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_2164e1e9b;
			}
			_iter_next_2164e1e9b:;
			++it;
			_8298_i++;
			goto _iter_begin_2164e1e9b;
		}
		_iter_end_2164e1e9b:;
	};
	return _8257_info;;
}



inline jule::Ptr<_204a3802b_AssignLeft> _20567796c_buildAssignL(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _86933_tokens) {
	jule::Ptr<_204a3802b_AssignLeft> _8707_l = jule::new_ptr<_204a3802b_AssignLeft>(_204a3802b_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*(_8707_l))._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_204a3802b_AssignLeft>> _205677cad_buildAssignLs(_20566cac7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_204a3802b_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2164eb868:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _88215_part = *it;
			{
				jule::Ptr<_204a3802b_AssignLeft> _8838_l = _20567796c_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_204a3802b_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_2164eb868:;
			++it;
			goto _iter_begin_2164eb868;
		}
		_iter_end_2164eb868:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__204a3926e_StmtData__jule_tuple_bool _2056780ee_buildPlainAssign(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _88937_tokens) {
	__jule_tuple__204a3926e_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_205687ae2_assignInfo> _8907_info = _20567762b_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204a385ae_AssignSt> _8957_assign = jule::new_ptr<_204a385ae_AssignSt>(_204a385ae_AssignSt{._field_Declarative=false, ._field_Setter=(*(_8907_info))._field_setter, ._field_Left=jule::Slice<jule::Ptr<_204a3802b_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_20568be6a_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _2056784ea_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*(_8957_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_204a3802b_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_216502693:;
				{
					jule::Ptr<_204a3ca58_VarDecl> _9159_decl = jule::new_ptr<_204a3ca58_VarDecl>(_204a3ca58_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_21650262c:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _9297_parts;
	jule::Slice<_1eeaca425_Log> _92914_errs;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_8957_assign))._field_Left=_205677cad_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_20568be6a_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _2056784ea_buildDeclAssign1(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _94337_lefts, jule::Ptr<_204a385ae_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _9457_parts;
	jule::Slice<_1eeaca425_Log> _94514_errs;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(_94337_lefts, static_cast<jule::U32>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21650915b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_204a14216_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_20566dd92_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_20566dd92_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_20566dd92_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_204a3802b_AssignLeft> _9798_l = _20567796c_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*(_9798_l))._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_204a3802b_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_21650915b:;
			++it;
			goto _iter_begin_21650915b;
		}
		_iter_end_21650915b:;
	};
	return true;;
}



inline __jule_tuple_x_204a385ae_AssignSt__jule_tuple_bool _20567883b_buildDeclAssign(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _99135_tokens) {
	__jule_tuple_x_204a385ae_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_204a14216_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204a385ae_AssignSt> _10027_assign = jule::new_ptr<_204a385ae_AssignSt>(_204a385ae_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_204a14216_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_204a3802b_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	jule::I32 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _10077_rang = _205689484_range(&(_10067_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_20566dd92_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_20566dd92_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_204a14216_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_20568be6a_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _2056784ea_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__204a3926e_StmtData__jule_tuple_bool _205678b7c_buildAssignSt(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _102534_tokens) {
	__jule_tuple__204a3926e_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_205687e99_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_216518e18:;
			{
				({
					__jule_tuple_x_204a385ae_AssignSt__jule_tuple_bool __jule_assign_result = _20567883b_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_2165185aa:;
			{
				({
					__jule_tuple__204a3926e_StmtData__jule_tuple_bool __jule_assign_result = _2056780ee_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_216518a1c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_204a2e819_UseExpr> _205678ebd_buildUseExpr(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_20566dd92_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_204a2e819_UseExpr> _10437_ue = jule::new_ptr<_204a2e819_UseExpr>(_204a2e819_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_20568be6a_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _20567930e_buildConstSt(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_20566dd92_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_21651da77:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_204a3d6a2_Iter> _10598_iter = _205672e95_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_21651d868:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_204a424ca_MatchCase> _10668_mt = _205676817_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_21651cb97:;
			{
				return jule::Any(_20566ee81_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_21651d3b2:;
	};
}



inline jule::Any _205679650_buildSt(_20566cac7_scopeParser* _self_, jule::Ptr<_20566c236_stmt>* _107628_st) {
	jule::Ptr<_204a14216_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__204a3926e_StmtData__jule_tuple_bool __jule_assign_result = _2056772da_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__204a3926e_StmtData__jule_tuple_bool __jule_assign_result = _205678b7c_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_2165249d4:;
			{
				return jule::Any(_205678ebd_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_2165248d5:;
			{
				return _20567930e_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_216524c37:;
			{
				return jule::Any(_20566ee81_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_216524c9d:;
			{
				return jule::Any(_2056702c2_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_216524d14:;
			{
				return jule::Any(_205672e95_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_216524d7a:;
			{
				return jule::Any(_2056732d6_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_216524de1:;
			{
				return jule::Any(_205673627_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_216524e68:;
			{
				return jule::Any(_2056740ea_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_216524ee0:;
			{
				return jule::Any(_20567443b_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_216525067:;
			{
				return jule::Any(_20567477c_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_2165250de:;
			{
				return jule::Any(_205674abd_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_216525166:;
			{
				return jule::Any(_205674e0e_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_2165251dd:;
			{
				return jule::Any(_205676817_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_216525265:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_21652471a;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_205676b58_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_2165252dc:;
			{
				return jule::Any(_205676b58_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_216525364:;
			{
				return jule::Any(_205676b58_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_21652471a:;
	};
	jule::Ptr<_204a2de45_Expr> _11327_expr = _20568be6a_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_20566dd92_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _2056799b3_build(_20566cac7_scopeParser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _114026_tokens, jule::Ptr<_204a39c0e_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_20566c5dd_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_20566da2e_isLastSt(_self_))) && (!(_20566d798_finished(_self_))))) {
		{
			jule::Ptr<_20566c236_stmt> _11488_st = _20566e744_next(_self_);;
			jule::Any _11498_data = _205679650_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_204a3959e_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _204a3959e_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_20566d512_stopped(_self_)) {
				goto _iter_end_2165325b3;
			};
		}
	_iter_next_2165325b3:;
	}
	_iter_end_2165325b3:;;
}








inline jule::Bool _20567a4ec_exprBuilder_eq(_20567a4ec_exprBuilder *_self_, _20567a4ec_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _20567ac06_pushErr(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_20568b7b6_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _20567b069_pushSuggestion(_20567a4ec_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_20568bb29_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_204a2ea39_TupleExpr> _20567b3aa_buildTuple(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _2331_parts) {
	jule::Ptr<_204a2ea39_TupleExpr> _247_tuple = jule::new_ptr<_204a2ea39_TupleExpr>(_204a2ea39_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a2de45_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21655793a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20568579e_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_21655793a:;
			++it;
			goto _iter_begin_21655793a;
		}
		_iter_end_21655793a:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_204a2edd0_LitExpr> _20567b6eb_buildLit(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token> _3324_token) {
	return jule::new_ptr<_204a2edd0_LitExpr>(_204a2edd0_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _20567bd7d_buildSingle(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_216559b90:;
			{
				return jule::Any(_20567b6eb_buildLit(_self_, _4431_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_216559c17:;
			{
				return jule::Any(jule::new_ptr<_204a313cb_VariadicExpr>(_204a313cb_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_216559c7d:;
			{
				return jule::Any(_205686b57_buildIdentExpr(&(_4431_token)), &__jule_any_type42);;
			}
		}
		_match_end_216559ac4:;
	};
	_20567ac06_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_204a30760_IdentExpr> _20567c1be_buildBindIdent(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_20567ac06_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a14216_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20567ac06_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a30760_IdentExpr> _757_expr = _205686b57_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_204a31002_UnaryExpr> _20567c510_buildUnary(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _8030_tokens) {
	jule::Ptr<_204a14216_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_20567ac06_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_204a14953_IsUnaryOp((*(_817_op))._field_Id)))) {
		_20567ac06_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_204a31002_UnaryExpr>(_204a31002_UnaryExpr{._field_Op=_817_op, ._field_Expr=_20568579e_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_204a32058_SubIdentExpr> _20567c851_buildObjSubIdent(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _10136_tokens) {
	jule::I32 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_204a14216_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_20567ac06_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_204a32058_SubIdentExpr>(_204a32058_SubIdentExpr{._field_Expr=_20568579e_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_204a31b7e_NamespaceExpr> _20567cb92_buildNamespace(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _11635_tokens) {
	jule::Ptr<_204a31b7e_NamespaceExpr> _1177_ns = jule::new_ptr<_204a31b7e_NamespaceExpr>(_204a31b7e_NamespaceExpr{._field_Namespace=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Ptr<_204a14216_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_20567ac06_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_20567ac06_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_20567ac06_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_20567ac06_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_20567ac06_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20567ac06_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20567ced3_buildType(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _15030_tokens) {
	jule::I32 _1517_i = 0LL;;
	jule::Ptr<_204a29b11_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_20567ac06_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_20567ac06_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _20567d324_buildSubIdent(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _16434_tokens) {
	jule::I32 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_204a14216_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_216572317:;
			{
				return jule::Any(_20567c851_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_216572944:;
			{
				return jule::Any(_20567cb92_buildNamespace(_self_, _16434_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_2165729aa:;
			{
				return jule::Any(_20567ced3_buildType(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		_match_end_216572823:;
	};
	if (_2056872ea_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_20567ced3_buildType(_self_, _16434_tokens), &__jule_any_type92);;
	};
	_20567ac06_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_204a313cb_VariadicExpr> _20567d665_buildVariadic(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _18633_tokens) {
	jule::Ptr<_204a14216_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_204a313cb_VariadicExpr>(_204a313cb_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_20568579e_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_204a2e20e_RangeExpr> _20567d9a6_buildBetweenParentheses(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_20567ac06_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_204a2e20e_RangeExpr>(_204a2e20e_RangeExpr{._field_Expr=_20568579e_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_204a317a5_CastExpr> _20567dce7_tryBuildCast(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _20733_tokens) {
	jule::I32 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2165783c8:;
		if (it != expr_end) {
			jule::I32 _2097_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_216578e67:;
						{
							(_2087_rangeN)++;
							goto _iter_next_2165783c8;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_216579352:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_216579253:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_2165783c8;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_204a14216_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_204a14216_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_204a14216_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_204a317a5_CastExpr> _2418_cast = jule::new_ptr<_204a317a5_CastExpr>(_204a317a5_CastExpr{._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_20567ac06_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_20567ac06_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I32 _2559_typeIndex = 0LL;;
					jule::Ptr<_204a29b11_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_20567ac06_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I32 _26610_j = 0LL;;
						_205689484_range(&(_26610_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_20568579e_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_2165783c8:;
			++it;
			_2097_i++;
			goto _iter_begin_2165783c8;
		}
		_iter_end_2165783c8:;
	};
	return nullptr;;
}



inline void _20567e215_pushArg(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a2de45_Expr>>* _28128_args, jule::Slice<jule::Ptr<_204a14216_Token>> _28152_tokens, jule::Ptr<_204a14216_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_20567ac06_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_204a2de45_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_20568579e_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_204a2de45_Expr>> _20567e556_buildArgs(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _29611_args = nullptr;;
	jule::I32 _2977_last = 0LL;;
	jule::I32 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216586e64:;
		if (it != expr_end) {
			jule::I32 _3007_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_216587bce:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_2165880b9:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_216587eba:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_216586e64;
				};
				_20567e215_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_216586e64:;
			++it;
			_3007_i++;
			goto _iter_begin_216586e64;
		}
		_iter_end_216586e64:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_20567e215_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_20567e215_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_204a32b6e_FnCallExpr> _20567ed4d_buildFnCall(_20567a4ec_exprBuilder* _self_, jule::Ptr<_204a14216_Token>* _35632_token, jule::Slice<jule::Ptr<_204a14216_Token>>* _35659_expr, jule::Slice<jule::Ptr<_204a14216_Token>>* _35687_args) {
	return jule::new_ptr<_204a32b6e_FnCallExpr>(_204a32b6e_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_20568579e_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_20567e556_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _20568018e_buildParenthesesRange(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _36442_tokens) {
	jule::Ptr<_204a14216_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_204a317a5_CastExpr> _3678_expr = _20567dce7_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_204a14216_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token __jule_assign_result = _20568974d_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_20567d9a6_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type104);;
	};
	if (_2056872ea_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_20567ced3_buildType(_self_, _36442_tokens), &__jule_any_type92);;
	};
	return jule::Any(_20567ed4d_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_204a302a9_UnsafeExpr> _2056804d0_buildUnsafeExpr(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _38635_tokens) {
	jule::Ptr<_204a14216_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I32 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _3907_rangeTokens = _205689484_range(&(_3897_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_20567ac06_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_204a302a9_UnsafeExpr>(_204a302a9_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_20568579e_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_204a3b89d_FnDecl> _205680821_buildAnonFn(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _40132_tokens) {
	jule::Ptr<_204a3b89d_FnDecl> _4027_f = _205692954_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_204a3bc44_IsAnon(_4027_f.ptr())))) {
		_20567ac06_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _205680b62_buildUnsafe(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_21659aab0:;
			{
				return jule::Any(_205680821_buildAnonFn(_self_, _41032_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_216599e44:;
			{
				return jule::Any(_2056804d0_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_21659a395:;
	};
}



inline void _205681080_pushRangeLitPart(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _42036_part, jule::Ptr<_204a14216_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_20567ac06_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _2056813c1_getBraceRangeLitExprParts(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _43711_parts = nullptr;;
	jule::I32 _4397_last = 0LL;;
	jule::I32 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21659e344:;
		if (it != expr_end) {
			jule::I32 _4427_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_2165a00ae:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_2165a0499:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_2165a039a:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_21659e344;
				};
				_205681080_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_21659e344:;
			++it;
			_4427_i++;
			goto _iter_begin_21659e344;
		}
		_iter_end_21659e344:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_205681080_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_205681080_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_204a33664_FieldExprPair> _205681712_buildFieldExprPair(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_20567ac06_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a33664_FieldExprPair> _4787_pair = jule::new_ptr<_204a33664_FieldExprPair>(_204a33664_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_20568579e_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_204a2de45_Expr> _205681a53_buildStructLitExpr(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _48639_tokens) {
	jule::Ptr<_204a14216_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*(_4877_token))._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_204a2de45_Expr>(_204a2de45_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_205681712_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type81)});;
		};
	};
	return _20568579e_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_204a2de45_Expr>> _205681d94_buildStructLitExprs(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _5027_parts = _2056813c1_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a2de45_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a2de45_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2165a8c22:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_204a2de45_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_205681a53_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_2165a8c22:;
			++it;
			goto _iter_begin_2165a8c22;
		}
		_iter_end_2165a8c22:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_204a33e8e_StructLit> _2056821d5_buildTypedStructLiteral(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _51443_tokens) {
	jule::I32 _5157_i = 0LL;;
	jule::Ptr<_204a29b11_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_20567ac06_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_204a14216_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_20567ac06_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_204a33e8e_StructLit>(_204a33e8e_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_205681d94_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_204a2de45_Expr> _205682526_buildBraceLitPart(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_204a14216_Token>> _5397_l;
	jule::Slice<jule::Ptr<_204a14216_Token>> _53914_r;
	({
		__jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token __jule_assign_result = _2056865c4_splitDelim(_53838_tokens, static_cast<jule::U32>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_204a2de45_Expr>(_204a2de45_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_204a34c70_KeyValPair>(_204a34c70_KeyValPair{._field_Key=_20568579e_buildFromTokens(_self_, _5397_l), ._field_Val=_20568579e_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type82)});;
	};
	return _20568579e_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_204a34445_BraceLit> _205682867_buildBraceLit(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _55534_tokens) {
	jule::Ptr<_204a34445_BraceLit> _5567_lit = jule::new_ptr<_204a34445_BraceLit>(_204a34445_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_204a2de45_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _5617_parts = _2056813c1_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a2de45_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2165b3941:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _205682526_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_2165b3941:;
			++it;
			goto _iter_begin_2165b3941;
		}
		_iter_end_2165b3941:;
	};
	return _5567_lit;;
}



inline jule::Any _205682ba8_buildBraceRange(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_204a14216_Token>> _5757_exprTokens;
	jule::I32 _57519_rangeN;
	({
		__jule_tuple_sx_204a14216_Token__jule_tuple_int __jule_assign_result = _205686e21_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_2165b3da3:;
			{
				return jule::Any(_205682867_buildBraceLit(_self_, _57436_tokens), &__jule_any_type111);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_2165b5437:;
			{
				_20567ac06_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2165b537c:;
	};
	jule::Ptr<_204a14216_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _20568511c_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_2165b8d75:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I32 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_204a14216_Token>> _5979_rangeTokens = _205689484_range(&(_5969_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57436_tokens);;
					jule::Ptr<_204a32b6e_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_204a32b6e_FnCallExpr>();;
					if (_204a332ac_Ignored(_5989_model.ptr())) {
						_20567ac06_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*(_5989_model))._field_Exception=_20568c960_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_2165b7dda:;
				{
					_20567ac06_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_2165b832a:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_2165bd385:;
			{
				return _205680b62_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_2165bd3eb:;
			{
				return jule::Any(_205680821_buildAnonFn(_self_, _57436_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_2165bd462:;
			{
				return jule::Any(_2056821d5_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_2165b84d4:;
			{
				_20567ac06_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2165bc6c5:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _205682ee9_getEnumerableParts(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _6287_parts;
	jule::Slice<_1eeaca425_Log> _62814_errors;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(&(_62638_tokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_204a3549b_SliceExpr> _20568333a_buildSlice(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _63330_tokens) {
	jule::Ptr<_204a3549b_SliceExpr> _6347_slc = jule::new_ptr<_204a3549b_SliceExpr>(_204a3549b_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_204a2de45_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _6397_parts = _205682ee9_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a2de45_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2165c328b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_2165c328b;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2de45_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20568579e_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_2165c328b:;
			++it;
			goto _iter_begin_2165c328b;
		}
		_iter_end_2165c328b:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_204a35e08_IndexingExpr> _2056837e1_buildIndexing(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_204a14216_Token>> _6567_tokens, jule::Ptr<_204a14216_Token> _65636_errorToken) {
	jule::Ptr<_204a14216_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_20567ac06_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a2de45_Expr> _6637_expr = _20568579e_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204a2de45_Expr> _6677_index = _20568579e_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204a35e08_IndexingExpr>(_204a35e08_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_204a36568_SlicingExpr> _205683e0c_buildSlicing(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_204a14216_Token>>* _67967_start, jule::Slice<jule::Ptr<_204a14216_Token>>* _6808_to, jule::Ptr<_204a14216_Token>* _68034_errorToken, jule::Ptr<_204a14216_Token> _68065_end) {
	jule::Ptr<_204a36568_SlicingExpr> _6817_slc = jule::new_ptr<_204a36568_SlicingExpr>(_204a36568_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_20568579e_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_To=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_20568579e_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*(_6817_slc))._field_To=_20568579e_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _20568424d_buildBracketRange(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _69537_tokens) {
	jule::Ptr<_204a14216_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_204a14216_Token>> _6977_exprTokens;
	jule::I32 _69719_rangeN;
	({
		__jule_tuple_sx_204a14216_Token__jule_tuple_int __jule_assign_result = _205686e21_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_20568333a_buildSlice(_self_, _69537_tokens), &__jule_any_type97);;
	} else if ((_69719_rangeN > 0LL)) {
		_20567ac06_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_204a14216_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_204a14216_Token>> _7137_start;
	jule::Slice<jule::Ptr<_204a14216_Token>> _71318_to;
	({
		__jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token __jule_assign_result = _2056865c4_splitDelim(&(_7127_splitTokens), static_cast<jule::U32>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_205683e0c_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_2056837e1_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type107);;
}



inline jule::Any _20568458e_buildExclRight(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _72035_tokens) {
	jule::Ptr<_204a14216_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _20568511c_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_2165d0d8c:;
			{
				(*(_7237_d.unsafe_cast_ptr<_204a32b6e_FnCallExpr>()))._field_Exception=jule::new_ptr<_204a39c0e_ScopeTree>(_204a39c0e_ScopeTree{._field_Parent=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_204a3959e_Stmt>(nullptr), ._field_End=jule::Ptr<_204a14216_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_2165d1277:;
	};
	_20567ac06_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _2056848d0_buildData(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_2165d2993:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2165d2a09:;
			{
				return _20567bd7d_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_2165d2a70:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_20567c1be_buildBindIdent(_self_, _73830_tokens), &__jule_any_type42);;
				};
			}
		}
		_match_end_2165d2861:;
	};
	jule::Ptr<_204a14216_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_20567d665_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type79);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_204a14953_IsUnaryOp((*(_7507_token))._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*(_7507_token))._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_20567ced3_buildType(_self_, _73830_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_20567c510_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type91);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_2165d7338:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_204a14216_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_2165d7613;
						};
					};
					jule::Ptr<_204a14216_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_2165d7613;
					};
					return jule::Any(_20567ced3_buildType(_self_, _73830_tokens), &__jule_any_type92);;
				}
			}
			_match_end_2165d7613:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_2165da814:;
			{
				return _20567d324_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_2165da87a:;
			{
				return _20568458e_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_2165da8e1:;
			{
				return _20568018e_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_2165da957:;
			{
				return _205682ba8_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_2165da9bd:;
			{
				return _20568424d_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_2165da79d:;
	};
	_20567ac06_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _205684ccb_buildBinary(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _80732_tokens, jule::I32 _80757_i) {
	jule::Ptr<_204a14216_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_204a14216_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_205685b34_isTypeOp(&((*(_8087_op))._field_Id)) && _205685e42_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_20567ced3_buildType(_self_, _80732_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_20567ac06_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_20567ac06_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20567b069_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_204a3250e_BinaryExpr>(_204a3250e_BinaryExpr{._field_Left=_20568579e_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_20568579e_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type112);;
}



inline jule::Any _20568511c_build(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_20567ced3_buildType(_self_, _83226_tokens), &__jule_any_type92);;
	};
	jule::I32 _8363_i = _20568688d_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _2056848d0_buildData(_self_, _83226_tokens);;
	};
	return _205684ccb_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _20568545d_buildKind(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _8447_parts;
	jule::Slice<_1eeaca425_Log> _84414_errors;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(_84330_tokens, static_cast<jule::U32>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_20567b3aa_buildTuple(_self_, &(_8447_parts)), &__jule_any_type83);;
	};
	return _20568511c_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_204a2de45_Expr> _20568579e_buildFromTokens(_20567a4ec_exprBuilder* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _20568545d_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204a2de45_Expr>(_204a2de45_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _20568b112_stop(_20568acd2_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _20568b398_stopped(_20568acd2_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _20568b7b6_pushErr(_20568acd2_parser* _self_, jule::Ptr<_204a14216_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1eeaca425_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20568a3b9_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _20568bb29_pushSuggestion(_20568acd2_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_20568a760_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_204a2de45_Expr> _20568be6a_buildExpr(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _17831_tokens) {
	return _20568579e_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_204a2902d_Directive> _20568c2ab_buildDirective(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_20568b7b6_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_20568b7b6_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_204a2902d_Directive>(_204a2902d_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _20568c564_pushDirective(_20568acd2_parser* _self_, jule::Ptr<_204a2902d_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216617e6d:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_216617e6d:;
			++it;
			goto _iter_begin_216617e6d;
		}
		_iter_end_216617e6d:;
	};
	{ jule::Slice<jule::Ptr<_204a2902d_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_204a39c0e_ScopeTree> _20568c960_buildScope(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _21032_tokens, jule::Ptr<_204a14216_Token> _21061_end) {
	jule::Ptr<_204a39c0e_ScopeTree> _2117_s = _20566aeb0_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_20566cac7_scopeParser _2137_sp = _20566cac7_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_20566c236_stmt>>(nullptr), ._field_pos=0};;
	_2056799b3_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool _20568ce16__buildType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_20569be8b_typeBuilder _2227_tb = _20569be8b_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_20569eea0_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool _20568d3bc_buildType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_204a14216_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_204a29b11_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568ce16__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_20568b7b6_pushErr(_self_.ptr(), _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_204a4170a_TypeAliasDecl> _20568d70d_buildTypeAliasDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _24240_tokens) {
	jule::I32 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a4170a_TypeAliasDecl> _2487_tad = jule::new_ptr<_204a4170a_TypeAliasDecl>(_204a4170a_TypeAliasDecl{._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr)});;
	jule::Ptr<_204a14216_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(8LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_204a29b11_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_204c2b681_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _20568da71_buildVarTypeAndExpr(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3ca58_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_204a14216_Token>>* _28264_tokens) {
	jule::I32 _2837_i = 0LL;;
	jule::Ptr<_204a14216_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_20568b7b6_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_204a29b11_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*(_2847_tok))._field_Id != static_cast<jule::U32>(71LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_204a14216_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_20568b7b6_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_20568be6a_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _20568ddd4_buildVarCommon(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3ca58_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_204a14216_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*((*((*(_31536_v))))._field_Token))._field_Kind;
	(*((*(_31536_v))))._field_Public=_204c2b681_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_20568da71_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _20568e247_buildVarBegin(_20568acd2_parser* _self_, jule::Ptr<_204a3ca58_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_204a14216_Token>>* _33157_tokens) {
	jule::Ptr<_204a14216_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_2166348a2:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_216634561;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_216634561:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_20568b7b6_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_2166345c7:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_216634253:;
			{
				(*(_33157_tokens))=nullptr;
				_20568b7b6_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_2166344ea:;
	};
}



inline jule::Ptr<_204a3ca58_VarDecl> _20568e588_buildVar(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _35929_tokens) {
	jule::Ptr<_204a3ca58_VarDecl> _3607_v = jule::new_ptr<_204a3ca58_VarDecl>(_204a3ca58_VarDecl{._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	_20568e247_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_20568ddd4_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_204a36d1b_GenericDecl> _20568e8c9_buildGeneric(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _37834_tokens) {
	jule::Ptr<_204a36d1b_GenericDecl> _3797_g = jule::new_ptr<_204a36d1b_GenericDecl>(_204a36d1b_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_204a36865_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_3797_g))._field_Ident=(*((*_3797_g.alloc)._field_Token))._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_20568b7b6_pushErr(_self_.ptr(), (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_20568b7b6_pushErr(_self_.ptr(), (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_204a14216_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _3978_parts;
		jule::Slice<_1eeaca425_Log> _39715_errors;
		({
			__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(&(_3968_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_204a36865_Constraint>(_204a36865_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a29b11_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21664278e:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_204a14216_Token>> _40316_part = *it;
				{
					jule::I32 _4049_i = 0LL;;
					jule::Ptr<_204a29b11_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_20568b7b6_pushErr(_self_.ptr(), _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_21664278e:;
				++it;
				goto _iter_begin_21664278e;
			}
			_iter_end_21664278e:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _20568ecc5_buildGenerics(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _41535_tokens, jule::Ptr<_204a14216_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _4217_parts;
	jule::Slice<_1eeaca425_Log> _42114_errors;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(_41535_tokens, static_cast<jule::U32>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a36d1b_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21664c304:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_20568e8c9_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_21664c304:;
			++it;
			goto _iter_begin_21664c304;
		}
		_iter_end_21664c304:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_204a3a44b_ParamDecl> _205690116_buildSelfParam(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_204a3a44b_ParamDecl> _4407_param = jule::new_ptr<_204a3a44b_ParamDecl>(_204a3a44b_ParamDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_20568b7b6_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_1eeabb290_Builder _4527_ident = static__1eeabbadc_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		({
			auto except = _1eeabc26e_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:455:4"));
			(except.result);
		});
		if ((_43534_tokens.len() == 1LL)) {
			_20568b7b6_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		({
			auto except = _1eeabc26e_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:464:4"));
			(except.result);
		});
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_20568b7b6_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_1eeabcaee_Str(&_4527_ident);
	return _4407_param;;
}



inline void _205690534_paramTypeBegin(_20568acd2_parser* _self_, jule::Ptr<_204a3a44b_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_204a14216_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_204a14216_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_20568b7b6_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_21665576e;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_21665576e:;
	}
	_iter_end_21665576e:;;
}



inline void _205690897_buildParamType(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3a44b_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_204a14216_Token>>* _49065_tokens) {
	jule::I32 _4917_i = 0LL;;
	_205690534_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_20568b7b6_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _205690c0a_buildParamBody(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a3a44b_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_204a14216_Token>> _50364_tokens) {
	jule::Ptr<_204a14216_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_20568b7b6_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_205690897_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_205690897_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_204a3a44b_ParamDecl> _20569104b_buildParam(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _52331_tokens) {
	jule::Ptr<_204a3a44b_ParamDecl> _5247_param = jule::new_ptr<_204a3a44b_ParamDecl>(_204a3a44b_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_20568b7b6_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_20568b7b6_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*((*(_5247_param))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_205690897_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_205690c0a_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _205691304_checkParams(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216666142:;
		if (it != expr_end) {
			jule::Ptr<_204a3a44b_ParamDecl> _56715_param = *it;
			{
				if ((_204a3a803_IsSelf(_56715_param.ptr()) || ((*(_56715_param))._field_Kind != nullptr))) {
					goto _iter_next_216666142;
				};
				if (((*(_56715_param))._field_Token == nullptr)) {
					_20568b7b6_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*(_56715_param))._field_Kind=jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_216666142:;
			++it;
			goto _iter_begin_216666142;
		}
		_iter_end_216666142:;
	};
}



inline jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>> _205691700_buildParams(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _5877_parts;
	jule::Slice<_1eeaca425_Log> _58714_errs;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(_58633_tokens, static_cast<jule::U32>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_204a3a44b_ParamDecl> _5958_param = _205690116_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _204a3a803_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21666cc2b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_21666cc2b;
				};
				jule::Ptr<_204a3a44b_ParamDecl> _6068_param = _20569104b_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_21666cc2b:;
			++it;
			goto _iter_begin_21666cc2b;
		}
		_iter_end_21666cc2b:;
	};
	_205691304_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool _205691aeb_buildMultiRetType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _61639_tokens, jule::I32* _61669_i) {
	__jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_204a2ca04_RetTypeDecl>(_204a2ca04_RetTypeDecl{._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, _61639_tokens, _61669_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_204a14216_Token>> _6267_rangeTokens = _205689484_range(_61669_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _6287_parts;
	jule::Slice<_1eeaca425_Log> _62814_errs;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(&(_6267_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a29b11_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a14216_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a14216_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216673d31:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_216673d31;
				};
				jule::Ptr<_204a14216_Token> _6408_token = _63615_part[0LL];;
				jule::I32 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_20568b7b6_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_216673d31;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_204a14216_Token> _6579_newToken = jule::new_ptr<_204a14216_Token>((*(_6408_token)));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a14216_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a14216_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_204a29b11_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_20568b7b6_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_216673d31:;
			++it;
			goto _iter_begin_216673d31;
		}
		_iter_end_216673d31:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_204a2b33d_TupleTypeDecl>(_204a2b33d_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool _205691ee7_buildRetType(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _68734_tokens, jule::I32* _68764_i) {
	__jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_204a2ca04_RetTypeDecl>(_204a2ca04_RetTypeDecl{._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_204a14216_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_21667cdd4:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_21667ce5b:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_21667cec2:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_20568b7b6_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_21667e9b8:;
						{
							({
								__jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool __jule_assign_result = _205691aeb_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_21667eee6:;
						{
							_20568b7b6_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_21667ee4c:;
				};
				({
					__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, _68734_tokens, _68764_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_21667cd6d:;
	};
	((*(_68764_i)))++;
	_20568b7b6_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_204a3b89d_FnDecl> _20569249d_buildFnPrototype(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_204a3b89d_FnDecl> _7277_f = jule::new_ptr<_204a3b89d_FnDecl>(_204a3b89d_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_204a2ca04_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_20568b7b6_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_20568b7b6_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_7277_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a14216_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_20568b7b6_pushErr(_self_.ptr(), (*(_7277_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_7277_f))._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*(_7277_f))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_204a14216_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_204a14216_Token>> _7737_genericsTokens = _205689484_range(_72668_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*(_7277_f))._field_Generics=_20568ecc5_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _7837_paramsToks = _205689484_range(_72668_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*(_7277_f))._field_Params=_205691700_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_204a14216_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*(_7277_f))._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*(_7277_f))._field_Public=_204c2b681_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_204a2ca04_RetTypeDecl__jule_tuple_bool __jule_assign_result = _205691ee7_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_204a3b89d_FnDecl> _205692954_buildFn(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I32 _8047_i = 0LL;;
	jule::Ptr<_204a3b89d_FnDecl> _8057_f = _20569249d_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_20568b7b6_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_20568b112_stop(_self_);
		_20568b7b6_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _8217_blockTokens = _205689484_range(&(_8047_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*(_8057_f))._field_Scope=_20568c960_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_20568b7b6_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_20568b112_stop(_self_);
		_20568b7b6_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _205692cb7_buildBindUseDecl(_20568acd2_parser* _self_, jule::Ptr<_204a42a5d_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_204a14216_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_20568b7b6_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_204a14216_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if (((((*(_8417_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_204a1536b_IsStr((*(_8417_token))._field_Kind)))) || _204a15602_IsRawStr((*(_8417_token))._field_Kind))) {
		_20568b7b6_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _20569312a_parseUseDecl(_20568acd2_parser* _self_, jule::Ptr<_204a42a5d_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_204a14216_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_205692cb7_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_204a14216_Token> _8567_token = _85058_tokens[0LL];;
	if ((((((*(_8567_token))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U32>(4LLU))) && (!(_204a1536b_IsStr((*_8567_token.alloc)._field_Kind)))) || _204a15602_IsRawStr((*(_8567_token))._field_Kind))) {
		_20568b7b6_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_8567_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_20568b7b6_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*(_8567_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_204a1536b_IsStr((*(_8567_token))._field_Kind))))) {
			_20568b7b6_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_204a42a5d_UseDecl> _205693526_buildUseDecl(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _88032_tokens, jule::Bool _88057_binded) {
	jule::Ptr<_204a42a5d_UseDecl> _8817_decl = jule::new_ptr<_204a42a5d_UseDecl>(_204a42a5d_UseDecl{._field_Token=_88032_tokens[0LL], ._field_Path=jule::Ptr<_204a14216_Token>(nullptr), ._field_Alias=jule::Ptr<_204a14216_Token>(nullptr), ._field_Binded=_88057_binded});;
	if ((_88032_tokens.len() < 2LL)) {
		_20568b7b6_pushErr(_self_, (*(_8817_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88032_tokens).mut_slice(1LL);;
	_20569312a_parseUseDecl(_self_, &(_8817_decl), _88032_tokens);
	return _8817_decl;;
}



inline jule::Ptr<_204a29b11_TypeDecl> _205693922_buildTypeEnumItemKind(jule::Ptr<_20568acd2_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_204a14216_Token>>* _89456_tokens) {
	jule::I32 _8957_braceN = 0LL;;
	jule::I32 _8963_exprStart = (*(_89443_i));;
	for (; ((*(_89443_i)) < (*(_89456_tokens)).len()); ((*(_89443_i)))++) {
		{
			jule::Ptr<_204a14216_Token> _8984_t = (*(_89456_tokens))[(*(_89443_i))];;
			{
				auto &_match_expr{ (*(_8984_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_2166a4d1d:;
					{
						(_8957_braceN)++;
						goto _iter_next_2166a42a1;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_2166a514d:;
					{
						(_8957_braceN)--;
					}
				}
				_match_end_2166a4d95:;
			};
			if ((_8957_braceN > 0LL)) {
				goto _iter_next_2166a42a1;
			};
			if ((((*(_8984_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_89443_i)) + 1LL) >= (*(_89456_tokens)).len()))) {
				jule::Slice<jule::Ptr<_204a14216_Token>> _91413_kindTokens = nullptr;;
				if (((*(_8984_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart, (*(_89443_i)));
				} else {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart);
				};
				jule::I32 _9209_j = 0LL;;
				jule::Ptr<_204a29b11_TypeDecl> _9219_kind;
				({
					__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_91413_kindTokens), (&(_9209_j)), true);
					_9219_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9209_j < _91413_kindTokens.len())) {
					_20568b7b6_pushErr(_self_.ptr(), _91413_kindTokens[_9209_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9219_kind;;
			};
		}
	_iter_next_2166a42a1:;
	}
	_iter_end_2166a42a1:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>> _205693c63_buildTypeEnumItems(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _93140_tokens) {
	jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>> _9327_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a44400_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _9337_i = 0LL;;
	for (; (_9337_i < (*(_93140_tokens)).len()); (_9337_i)++) {
		{
			jule::Ptr<_204a14216_Token> _9358_t = (*(_93140_tokens))[_9337_i];;
			jule::Ptr<_204a44400_TypeEnumItemDecl> _9368_item = jule::new_ptr<_204a44400_TypeEnumItemDecl>(_204a44400_TypeEnumItemDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr)});;
			(*_9368_item.alloc)._field_Token=_9358_t;
			if ((((*((*_9368_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_93140_tokens)).len() - _9337_i) > 2LL))) {
				_9358_t=(*(_93140_tokens))[(_9337_i + 1LL)];
				if (((*(_9358_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_9368_item.alloc)._field_Ident=(*(*(_9368_item))._field_Token.alloc)._field_Kind;
					_9337_i+=2LL;
					if (((_9337_i >= (*(_93140_tokens)).len()) || ((*((*(_93140_tokens))[_9337_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_20568b7b6_pushErr(_self_.ptr(), _9358_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_2166aa131;
					};
				};
			};
			(*_9368_item.alloc)._field_Kind=_205693922_buildTypeEnumItemKind(_self_, &(_9337_i), _93140_tokens);
			{ jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>> &__jule_push_dest = _9327_items; __jule_push_dest.push(_9368_item); };
		}
	_iter_next_2166aa131:;
	}
	_iter_end_2166aa131:;;
	return _9327_items;;
}



inline jule::Ptr<_204a44a60_TypeEnumDecl> _2056940a4_buildTypeEnumDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _95539_tokens) {
	jule::I32 _9567_i = 1LL;;
	jule::Ptr<_204a44a60_TypeEnumDecl> _9577_e = jule::new_ptr<_204a44a60_TypeEnumDecl>(_204a44a60_TypeEnumDecl{._field_Token=(*(_95539_tokens))[_9567_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_204a14216_Token>(nullptr)});;
	if (((*((*(_9577_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_9577_e))._field_Ident=(*((*_9577_e.alloc)._field_Token))._field_Kind;
	_9567_i+=3LL;
	jule::Slice<jule::Ptr<_204a14216_Token>> _9677_itemTokens = _205689484_range(&(_9567_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _95539_tokens);;
	if ((_9677_itemTokens == nullptr)) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9577_e;;
	} else if ((_9567_i < (*(_95539_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_95539_tokens))[_9567_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Public=_204c2b681_IsPub((*_9577_e.alloc)._field_Ident);
	(*_9577_e.alloc)._field_End=(*(_95539_tokens))[(_9567_i - 1LL)];
	(*_9577_e.alloc)._field_Items=_205693c63_buildTypeEnumItems(_self_, &(_9677_itemTokens));
	return _9577_e;;
}



inline jule::Ptr<_204a2de45_Expr> _2056944a0_buildEnumItemExpr(jule::Ptr<_20568acd2_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_204a14216_Token>>* _98252_tokens) {
	jule::I32 _9837_braceN = 0LL;;
	jule::I32 _9843_exprStart = (*(_98239_i));;
	for (; ((*(_98239_i)) < (*(_98252_tokens)).len()); ((*(_98239_i)))++) {
		{
			jule::Ptr<_204a14216_Token> _9864_t = (*(_98252_tokens))[(*(_98239_i))];;
			{
				auto &_match_expr{ (*(_9864_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_2166b84d5:;
					{
						(_9837_braceN)++;
						goto _iter_next_2166b7968;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_2166b8815:;
					{
						(_9837_braceN)--;
					}
				}
				_match_end_2166b855c:;
			};
			if ((_9837_braceN > 0LL)) {
				goto _iter_next_2166b7968;
			};
			if ((((*(_9864_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_98239_i)) + 1LL) >= (*(_98252_tokens)).len()))) {
				jule::Slice<jule::Ptr<_204a14216_Token>> _100213_exprTokens = nullptr;;
				if (((*(_9864_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart, (*(_98239_i)));
				} else {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart);
				};
				return _20568be6a_buildExpr(_self_, &(_100213_exprTokens));;
			};
		}
	_iter_next_2166b7968:;
	}
	_iter_end_2166b7968:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>> _2056947e1_buildEnumItems(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _101436_tokens) {
	jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>> _10157_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a43014_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _10167_i = 0LL;;
	for (; (_10167_i < (*(_101436_tokens)).len()); (_10167_i)++) {
		{
			jule::Ptr<_204a14216_Token> _10188_t = (*(_101436_tokens))[_10167_i];;
			jule::Ptr<_204a43014_EnumItemDecl> _10198_item = jule::new_ptr<_204a43014_EnumItemDecl>(_204a43014_EnumItemDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr)});;
			(*_10198_item.alloc)._field_Token=_10188_t;
			if (((*((*_10198_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_20568b7b6_pushErr(_self_.ptr(), (*_10198_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10198_item.alloc)._field_Ident=(*((*_10198_item.alloc)._field_Token))._field_Kind;
			if ((((_10167_i + 1LL) >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[(_10167_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_10167_i + 1LL) < (*(_101436_tokens)).len())) {
					(_10167_i)++;
				};
				{ jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
				goto _iter_next_2166bc3b8;
			};
			(_10167_i)++;
			_10188_t=(*(_101436_tokens))[_10167_i];
			(_10167_i)++;
			if (((*(_10188_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_20568b7b6_pushErr(_self_.ptr(), _10188_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_2166bc3b8;
			};
			if (((_10167_i >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[_10167_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_20568b7b6_pushErr(_self_.ptr(), _10188_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_2166bc3b8;
			};
			(*_10198_item.alloc)._field_Expr=_2056944a0_buildEnumItemExpr(_self_, &(_10167_i), _101436_tokens);
			{ jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
		}
	_iter_next_2166bc3b8:;
	}
	_iter_end_2166bc3b8:;;
	return _10157_items;;
}



inline jule::Ptr<_204a43ac5_EnumDecl> _205694b32_buildEnumDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _105135_tokens) {
	if (((*(_105135_tokens)).len() < 3LL)) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_105135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a43ac5_EnumDecl> _10567_e = jule::new_ptr<_204a43ac5_EnumDecl>(_204a43ac5_EnumDecl{._field_Token=(*(_105135_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_204a14216_Token>(nullptr)});;
	if (((*((*(_10567_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_10567_e))._field_Ident=(*((*_10567_e.alloc)._field_Token))._field_Kind;
	jule::I32 _10647_i = 2LL;;
	if (((*((*(_105135_tokens))[_10647_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_10647_i)++;
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_20568b7b6_pushErr(_self_.ptr(), (*(_105135_tokens))[(_10647_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
		({
			__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, _105135_tokens, (&(_10647_i)), true);
			(*_10567_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_20568b112_stop(_self_.ptr());
			_20568b7b6_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
	} else {
		(*_10567_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _10817_itemTokens = _205689484_range(&(_10647_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _105135_tokens);;
	if ((_10817_itemTokens == nullptr)) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10567_e;;
	} else if ((_10647_i < (*(_105135_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_105135_tokens))[_10647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Public=_204c2b681_IsPub((*_10567_e.alloc)._field_Ident);
	(*_10567_e.alloc)._field_End=(*(_105135_tokens))[(_10647_i - 1LL)];
	(*_10567_e.alloc)._field_Items=_2056947e1_buildEnumItems(_self_, &(_10817_itemTokens));
	return _10567_e;;
}



inline jule::Any _205694e73_buildNodeEnumDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _109639_tokens) {
	if ((((*(_109639_tokens)).len() > 3LL) && ((*((*(_109639_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_109639_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_2056940a4_buildTypeEnumDecl(_self_, _109639_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_205694b32_buildEnumDecl(_self_, _109639_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_204a44d29_FieldDecl> _2056952b4_buildField(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _110531_tokens) {
	jule::Ptr<_204a44d29_FieldDecl> _11067_f = jule::new_ptr<_204a44d29_FieldDecl>(_204a44d29_FieldDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	(*_11067_f.alloc)._field_Mutable=((*(_110531_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_11067_f.alloc)._field_Mutable) {
		if ((_110531_tokens.len() == 1LL)) {
			_20568b7b6_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(1LL);;
	};
	(*_11067_f.alloc)._field_Token=_110531_tokens[0LL];
	if (((*((*_11067_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*_11067_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11067_f.alloc)._field_Ident=(*((*_11067_f.alloc)._field_Token))._field_Kind;
	if ((_110531_tokens.len() == 1LL)) {
		_20568b7b6_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110531_tokens.len() < 3LL) || ((*(_110531_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_20568b7b6_pushErr(_self_.ptr(), _110531_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110531_tokens).mut_slice(2LL);;
	jule::I32 _11347_i = 0LL;;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_110531_tokens), (&(_11347_i)), true);
		(*_11067_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11347_i < _110531_tokens.len())) {
		jule::Ptr<_204a14216_Token> _11374_token = _110531_tokens[_11347_i];;
		if (((*(_11374_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_20568b7b6_pushErr(_self_.ptr(), _110531_tokens[_11347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11347_i)++;
		if ((_11347_i >= _110531_tokens.len())) {
			_20568b7b6_pushErr(_self_.ptr(), _11374_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(_11347_i);;
		(*_11067_f.alloc)._field_Default=_20568be6a_buildExpr(_self_, &(_110531_tokens));
	};
	(*_11067_f.alloc)._field_Public=_204c2b681_IsPub((*_11067_f.alloc)._field_Ident);
	return _11067_f;;
}



inline jule::Slice<jule::Ptr<_204a44d29_FieldDecl>> _205695605_buildStructDeclFields(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _115442_tokens) {
	jule::Slice<jule::Ptr<_204a44d29_FieldDecl>> _115511_fields = nullptr;;
	jule::Slice<jule::Ptr<_20566c236_stmt>> _11567_stmts = _20566c5dd_splitStmts(&(_115442_tokens));;
	{
		auto expr = &(_11567_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2166de242:;
		if (it != expr_end) {
			jule::Ptr<_20566c236_stmt> _115715_stmt = *it;
			{
				_115442_tokens=(*(_115715_stmt))._field_tokens;
				jule::Ptr<_204a44d29_FieldDecl> _11598_f = _2056952b4_buildField(_self_, _115442_tokens);;
				{ jule::Slice<jule::Ptr<_204a44d29_FieldDecl>> &__jule_push_dest = _115511_fields; __jule_push_dest.push(_11598_f); };
			}
			_iter_next_2166de242:;
			++it;
			goto _iter_begin_2166de242;
		}
		_iter_end_2166de242:;
	};
	return _115511_fields;;
}



inline jule::Ptr<_204a45720_StructDecl> _205695946_buildStructDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _116537_tokens) {
	if (((*(_116537_tokens)).len() < 3LL)) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_116537_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _11717_i = 1LL;;
	jule::Ptr<_204a45720_StructDecl> _11727_s = jule::new_ptr<_204a45720_StructDecl>(_204a45720_StructDecl{._field_Token=(*(_116537_tokens))[_11717_i], ._field_End=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_204a44d29_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>(nullptr)});;
	if (((*((*(_11727_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11717_i)++;
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	(*(_11727_s))._field_Ident=(*((*_11727_s.alloc)._field_Token))._field_Kind;
	jule::Ptr<_204a14216_Token> _11863_errorToken = (*(_116537_tokens))[_11717_i];;
	jule::Slice<jule::Ptr<_204a14216_Token>> _11877_genericsTokens = _205689484_range(&(_11717_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _116537_tokens);;
	if ((_11877_genericsTokens != nullptr)) {
		(*_11727_s.alloc)._field_Generics=_20568ecc5_buildGenerics(_self_, &(_11877_genericsTokens), &(_11863_errorToken));
	};
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_116537_tokens))[(_11717_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _11977_bodyTokens = _205689484_range(&(_11717_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _116537_tokens);;
	if ((_11977_bodyTokens == nullptr)) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	if ((_11717_i < (*(_116537_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11727_s.alloc)._field_Public=_204c2b681_IsPub((*_11727_s.alloc)._field_Ident);
	(*_11727_s.alloc)._field_Fields=_205695605_buildStructDeclFields(_self_, _11977_bodyTokens);
	(*_11727_s.alloc)._field_End=(*(_116537_tokens))[(_11717_i - 1LL)];
	return _11727_s;;
}



inline void _205695bee_checkMethodReceiver(_20568acd2_parser* _self_, jule::Ptr<_204a3b89d_FnDecl>* _121336_f) {
	if ((*((*(_121336_f))))._field_Statically) {
		if ((((*((*(_121336_f))))._field_Params.len() > 0LL) && _204a3a803_IsSelf((*((*(_121336_f))))._field_Params[0LL].ptr()))) {
			_20568b7b6_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121336_f))))._field_Params.len() == 0LL)) {
		_20568b7b6_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_204a3a44b_ParamDecl> _12253_param = (*((*(_121336_f))))._field_Params[0LL];;
	if ((!(_204a3a803_IsSelf(_12253_param.ptr())))) {
		_20568b7b6_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _205696062_buildTraitBody(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a45e5c_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_204a14216_Token>> _123260_tokens) {
	jule::Slice<jule::Ptr<_20566c236_stmt>> _12337_stmts = _20566c5dd_splitStmts(&(_123260_tokens));;
	{
		auto expr = &(_12337_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216700b27:;
		if (it != expr_end) {
			jule::Ptr<_20566c236_stmt> _123415_stmt = *it;
			{
				_123260_tokens=(*(_123415_stmt))._field_tokens;
				if ((_123260_tokens.len() == 0LL)) {
					goto _iter_next_216700b27;
				};
				{
					auto &_match_expr{ (*(_123260_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_216704840:;
						{
							jule::Ptr<_204a3b89d_FnDecl> _12419_f = _205692954_buildFn(_self_, &(_123260_tokens), true, true);;
							if ((_12419_f == nullptr)) {
								goto _match_end_216701e7a;
							};
							_205695bee_checkMethodReceiver(_self_, &(_12419_f));
							if (((*(_12419_f))._field_Generics.len() > 0LL)) {
								_20568b7b6_pushErr(_self_, (*_12419_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_204a3b89d_FnDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Methods; __jule_push_dest.push(_12419_f); };
						}
					}
					else {
						_case_begin_216701771:;
						{
							jule::I32 _12519_i = 0LL;;
							jule::Ptr<_204a29b11_TypeDecl> _12529_ti;
							jule::Bool _125213_ok;
							({
								__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_123260_tokens), (&(_12519_i)), true);
								_12529_ti = __jule_assign_result.__jule_result_arg0;
								_125213_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125213_ok))) {
								goto _match_end_216701e7a;
							};
							if ((_12519_i < _123260_tokens.len())) {
								_20568b7b6_pushErr(_self_.ptr(), _123260_tokens[_12519_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Inherits; __jule_push_dest.push(_12529_ti); };
						}
					}
					_match_end_216701e7a:;
				};
			}
			_iter_next_216700b27:;
			++it;
			goto _iter_begin_216700b27;
		}
		_iter_end_216700b27:;
	};
}



inline jule::Ptr<_204a45e5c_TraitDecl> _2056963a3_buildTraitDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _126436_tokens) {
	if (((*(_126436_tokens)).len() < 3LL)) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_126436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a45e5c_TraitDecl> _12697_t = jule::new_ptr<_204a45e5c_TraitDecl>(_204a45e5c_TraitDecl{._field_Token=(*(_126436_tokens))[1LL], ._field_End=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_204a3b89d_FnDecl>>(nullptr)});;
	if (((*((*(_12697_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_12697_t))._field_Ident=(*((*_12697_t.alloc)._field_Token))._field_Kind;
	jule::I32 _12777_i = 2LL;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _12787_bodyTokens = _205689484_range(&(_12777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _126436_tokens);;
	if ((_12787_bodyTokens == nullptr)) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12777_i < (*(_126436_tokens)).len())) {
		_20568b7b6_pushErr(_self_.ptr(), (*(_126436_tokens))[_12777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Public=_204c2b681_IsPub((*_12697_t.alloc)._field_Ident);
	_205696062_buildTraitBody(_self_, &(_12697_t), _12787_bodyTokens);
	(*_12697_t.alloc)._field_End=(*(_126436_tokens))[(_12777_i - 1LL)];
	return _12697_t;;
}



inline jule::Ptr<_204a3b89d_FnDecl> _2056966e4_buildBindFn(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _129432_tokens) {
	(_129432_tokens).mut_slice(1LL);;
	jule::Ptr<_204a3b89d_FnDecl> _12967_f = _205692954_buildFn(_self_, &(_129432_tokens), false, true);;
	if ((_12967_f != nullptr)) {
		(*_12967_f.alloc)._field_Public=false;
		(*_12967_f.alloc)._field_Binded=true;
	};
	return _12967_f;;
}



inline jule::Ptr<_204a3ca58_VarDecl> _205696a35_buildBindVar(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _130433_tokens) {
	(_130433_tokens).mut_slice(1LL);;
	jule::Ptr<_204a3ca58_VarDecl> _13067_v = _20568e588_buildVar(_self_, _130433_tokens);;
	if ((_13067_v != nullptr)) {
		(*_13067_v.alloc)._field_Public=false;
		(*_13067_v.alloc)._field_Binded=true;
		if (((*_13067_v.alloc)._field_Expr != nullptr)) {
			_20568b7b6_pushErr(_self_, (*_13067_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13067_v;;
}



inline jule::Ptr<_204a45720_StructDecl> _205696d76_buildBindStruct(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _131736_tokens) {
	(_131736_tokens).mut_slice(1LL);;
	jule::Ptr<_204a45720_StructDecl> _13197_s = _205695946_buildStructDecl(_self_, &(_131736_tokens));;
	if ((_13197_s != nullptr)) {
		(*_13197_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13197_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216714322:;
			if (it != expr_end) {
				jule::Ptr<_204a44d29_FieldDecl> _132216_f = *it;
				{
					(*(_132216_f))._field_Public=true;
				}
				_iter_next_216714322:;
				++it;
				goto _iter_begin_216714322;
			}
			_iter_end_216714322:;
		};
		(*_13197_s.alloc)._field_Binded=true;
	};
	return _13197_s;;
}



inline jule::Ptr<_204a4170a_TypeAliasDecl> _2056971b7_buildBindTypeAlias(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _133139_tokens) {
	(_133139_tokens).mut_slice(1LL);;
	jule::Ptr<_204a4170a_TypeAliasDecl> _13337_t = _20568d70d_buildTypeAliasDecl(_self_, &(_133139_tokens));;
	if ((_13337_t != nullptr)) {
		(*_13337_t.alloc)._field_Public=false;
		(*_13337_t.alloc)._field_Binded=true;
	};
	return _13337_t;;
}



inline jule::Ptr<_204a42a5d_UseDecl> _205697508_buildBindUse(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _134133_tokens) {
	if ((_134133_tokens.len() == 1LL)) {
		_20568b7b6_pushErr(_self_.ptr(), _134133_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134133_tokens).mut_slice(1LL);;
	;
	return _205693526_buildUseDecl(_self_.ptr(), _134133_tokens, true);;
}



inline jule::Any _205697849_buildBind(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _135231_tokens) {
	jule::Ptr<_204a14216_Token> _13537_token = (*(_135231_tokens))[0LL];;
	if (((*(_135231_tokens)).len() == 1LL)) {
		_20568b7b6_pushErr(_self_.ptr(), _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13537_token=(*(_135231_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13537_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_21671a3d3:;
			{
				return jule::Any(_2056966e4_buildBindFn(_self_, (*(_135231_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_21671a03c:;
			{
				return jule::Any(_205696a35_buildBindVar(_self_, (*(_135231_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_21671a0a3:;
			{
				return jule::Any(_205696d76_buildBindStruct(_self_, (*(_135231_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_21671a119:;
			{
				return jule::Any(_2056971b7_buildBindTypeAlias(_self_, (*(_135231_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_2167199dc:;
			{
				_20568b7b6_pushErr(_self_, _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_216719ec6:;
	};
	return nullptr;;
}



inline jule::Ptr<_204a3b89d_FnDecl> _205697b8a_getMethod(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _137631_tokens) {
	jule::I32 _13777_i = 0LL;;
	jule::Ptr<_204a14216_Token> _13787_token = (*(_137631_tokens))[_13777_i];;
	if (((*(_13787_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_20568b7b6_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*(_13787_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_20568b7b6_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*(_13787_token))._field_Id != static_cast<jule::U32>(29LLU))) {
		_20568b7b6_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _205692954_buildFn(_self_, _137631_tokens, true, false);;
}



inline void _205697eed_parseImplBody(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a465bc_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_204a14216_Token>>* _140557_tokens) {
	jule::Slice<jule::Ptr<_20566c236_stmt>> _14067_stmts = _20566c5dd_splitStmts(_140557_tokens);;
	{
		auto expr = &(_14067_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216723342:;
		if (it != expr_end) {
			jule::Ptr<_20566c236_stmt> _140715_stmt = *it;
			{
				(*(_140557_tokens))=(*(_140715_stmt))._field_tokens;
				jule::Ptr<_204a14216_Token> _14098_token = (*(_140557_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_2167243cb:;
						{
							_20568c564_pushDirective(_self_.ptr(), _20568c2ab_buildDirective(_self_, (*(_140557_tokens))));
							goto _iter_next_216723342;
						}
					}
					_match_end_21672461d:;
				};
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_216725c29:;
						{
							jule::Ptr<_204a3ca58_VarDecl> _14189_v = _20568e588_buildVar(_self_, (*(_140557_tokens)));;
							if ((_14189_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Statics; __jule_push_dest.push(_14189_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_216725861:;
						{
							jule::Ptr<_204a3b89d_FnDecl> _14259_f = _205697b8a_getMethod(_self_, _140557_tokens);;
							if ((_14259_f != nullptr)) {
								_205695bee_checkMethodReceiver(_self_, &(_14259_f));
								_205698938_applyFnMeta(_self_, &(_14259_f));
								{ jule::Slice<jule::Ptr<_204a3b89d_FnDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Methods; __jule_push_dest.push(_14259_f); };
							};
						}
					}
					else {
						_case_begin_216724772:;
						{
							_20568b7b6_pushErr(_self_, _14098_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_216723342;
						}
					}
					_match_end_216724c39:;
				};
			}
			_iter_next_216723342:;
			++it;
			goto _iter_begin_216723342;
		}
		_iter_end_216723342:;
	};
}



inline jule::Ptr<_204a465bc_Impl> _20569833e_buildImpl(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _143830_tokens) {
	jule::Ptr<_204a14216_Token> _14397_token = _143830_tokens[0LL];;
	if ((_143830_tokens.len() < 2LL)) {
		_20568b7b6_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _14457_i = 1LL;;
	jule::Ptr<_204a29b11_TypeDecl> _14477_base;
	jule::Bool _144717_ok;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		_14477_base = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_20568b7b6_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204a465bc_Impl> _14567_ipl = jule::new_ptr<_204a465bc_Impl>(_204a465bc_Impl{._field_End=jule::Ptr<_204a14216_Token>(nullptr), ._field_Base=_14477_base, ._field_Dest=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_204a3b89d_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_204a3ca58_VarDecl>>(nullptr)});;
	_14397_token=_143830_tokens[_14457_i];
	if (((*(_14397_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_14397_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_14567_ipl))._field_Base, (*_14567_ipl.alloc)._field_Dest);
			goto _julec_label_216732593;
		};
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14457_i)++;
	if ((_14457_i >= _143830_tokens.len())) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		(*(_14567_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_216732593:;
	jule::Slice<jule::Ptr<_204a14216_Token>> _14947_bodyTokens = _205689484_range(&(_14457_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_143830_tokens));;
	if ((_14947_bodyTokens == nullptr)) {
		_20568b112_stop(_self_.ptr());
		_20568b7b6_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14457_i < _143830_tokens.len())) {
		_20568b7b6_pushErr(_self_.ptr(), _143830_tokens[_14457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*(_14567_ipl))._field_End=_143830_tokens[(_14457_i - 1LL)];
	_205697eed_parseImplBody(_self_, &(_14567_ipl), &(_14947_bodyTokens));
	return _14567_ipl;;
}



inline jule::Any _205698680_buildNodeData(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _150935_tokens) {
	jule::Ptr<_204a14216_Token> _15107_token = (*(_150935_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15107_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_216737741:;
			{
				jule::Ptr<_204a3b89d_FnDecl> _15148_f = _205692954_buildFn(_self_, _150935_tokens, false, false);;
				if ((_15148_f != nullptr)) {
					(*_15148_f.alloc)._field_Global=true;
				};
				return jule::Any(_15148_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_216737e4a:;
			{
				return jule::Any(_20568e588_buildVar(_self_, (*(_150935_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_216737eb1:;
			{
				return jule::Any(_20568d70d_buildTypeAliasDecl(_self_, _150935_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_216737356:;
			{
				return _205694e73_buildNodeEnumDecl(_self_, _150935_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_2167373bc:;
			{
				return jule::Any(_205695946_buildStructDecl(_self_, _150935_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_216737433:;
			{
				return jule::Any(_2056963a3_buildTraitDecl(_self_, _150935_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_216737499:;
			{
				return jule::Any(_20569833e_buildImpl(_self_, (*(_150935_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_216737510:;
			{
				return _205697849_buildBind(_self_, _150935_tokens);;
			}
		}
		else {
			_case_begin_216737059:;
			{
				_20568b7b6_pushErr(_self_, _15107_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2167372e0:;
	};
}



inline void _205698938_applyFnMeta(_20568acd2_parser* _self_, jule::Ptr<_204a3b89d_FnDecl>* _154232_f) {
	(*((*(_154232_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _205698be1_applyMeta(_20568acd2_parser* _self_, _204a28b10_Node* _154730_node) {
	{
		auto &_match_expr{ (*(_154730_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_21673e10a:;
			{
				jule::Ptr<_204a3ca58_VarDecl> _15508_v = (*(_154730_node))._field_Data.unsafe_cast_ptr<_204a3ca58_VarDecl>();;
				if ((_15508_v == nullptr)) {
					return;;
				};
				(*(_15508_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_21673dd63:;
			{
				jule::Ptr<_204a3b89d_FnDecl> _15578_f = (*(_154730_node))._field_Data.unsafe_cast_ptr<_204a3b89d_FnDecl>();;
				if ((_15578_f == nullptr)) {
					return;;
				};
				_205698938_applyFnMeta(_self_, &(_15578_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_21673e1a4:;
			{
				jule::Ptr<_204a45720_StructDecl> _15638_sd = (*(_154730_node))._field_Data.unsafe_cast_ptr<_204a45720_StructDecl>();;
				if ((_15638_sd == nullptr)) {
					return;;
				};
				(*(_15638_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_21673e072:;
	};
}



inline void _205698e99_pushUseDecl(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a42a5d_UseDecl>* _157233_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a42a5d_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157233_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_20568b7b6_pushErr(_self_, (*((*(_157233_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_20568bb29_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _2056992da_pushMetaNodes(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _158035_tokens) {
	{
		auto &_match_expr{ (*((*(_158035_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_21674574e:;
			{
				;
				jule::Ptr<_204a42a5d_UseDecl> _15848_decl = _205693526_buildUseDecl(_self_.ptr(), (*(_158035_tokens)), false);;
				_205698e99_pushUseDecl(_self_, &(_15848_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_2167457c6:;
			{
				if ((((*(_158035_tokens)).len() > 1LL) && ((*((*(_158035_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_204a42a5d_UseDecl> _15899_decl = _205697508_buildBindUse(_self_, (*(_158035_tokens)));;
					_205698e99_pushUseDecl(_self_, &(_15899_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_21674583c:;
			{
				_20568c564_pushDirective(_self_, _20568c2ab_buildDirective(_self_, (*(_158035_tokens))));
				return true;;
			}
		}
		_match_end_21674563e:;
	};
	return false;;
}



inline _204a28b10_Node _20569962b_parseNode(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _160031_st) {
	_204a28b10_Node _16017_node = _204a28b10_Node{._field_Token=(*(_160031_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_2056992da_pushMetaNodes(_self_, _160031_st)) {
		return _16017_node;;
	};
	jule::Any _16097_data = _205698680_buildNodeData(_self_, _160031_st);;
	if ((_16097_data == nullptr)) {
		return _16017_node;;
	};
	_16017_node._field_Data=_16097_data;
	_205698be1_applyMeta(_self_, &(_16017_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_20568b7b6_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16017_node;;
}



inline void _2056998d4_appendNode(jule::Ptr<_20568acd2_parser> _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _162432_st) {
	if (((*(_162432_st)).len() == 0LL)) {
		return;;
	};
	_204a28b10_Node _16287_node = _20569962b_parseNode(_self_, _162432_st);;
	if (((_16287_node._field_Data != nullptr) && (!(_20568b398_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_204a28b10_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16287_node; __jule_collection; }));
	};
}



inline void _205699dac_removeRange(_20568acd2_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_204a14216_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges) {
	jule::U32 _16353_close = _205689e8a_getCloseOfBrace(_163435_id);;
	for (; (_163427_i >= 0LL); (_163427_i)--) {
		{
			jule::Ptr<_204a14216_Token> _16374_tok = (*(_163451_tokens))[(*(_163481_ranges))[_163427_i]];;
			if (((*(_16374_tok))._field_Id != _16353_close)) {
				goto _iter_next_2167509ce;
			};
			(*(_163481_ranges))=jule::append((*(_163481_ranges)).slice(0LL, _163427_i),(*(_163481_ranges)).slice((_163427_i + 1LL)));
			goto _iter_end_2167509ce;
		}
	_iter_next_2167509ce:;
	}
	_iter_end_2167509ce:;;
}



inline void _20569a2ca_pushWrongOrderCloseErr(_20568acd2_parser* _self_, jule::Ptr<_204a14216_Token>* _164639_t, jule::Slice<jule::Ptr<_204a14216_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges) {
	{
		auto &_match_expr{ (*((*(_164658_tokens))[(*(_164684_ranges))[((*(_164684_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_216752ddd:;
			{
				_20568b7b6_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_216752e65:;
			{
				_20568b7b6_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_216752ecb:;
			{
				_20568b7b6_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_216752ccd:;
	};
}



inline void _20569a7a3_pushRangeClose(_20568acd2_parser* _self_, jule::Ptr<_204a14216_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_204a14216_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges) {
	jule::I32 _16583_n = (*(_165796_ranges)).len();;
	if ((_16583_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165730_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_216755ee0:;
				{
					_20568b7b6_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_216756067:;
				{
					_20568b7b6_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_2167560cd:;
				{
					_20568b7b6_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_216755e24:;
		};
		return;;
	} else if (((*((*(_165766_tokens))[(*(_165796_ranges))[(_16583_n - 1LL)]]))._field_Id != _165748_left)) {
		_20569a2ca_pushWrongOrderCloseErr(_self_, &(_165730_t), _165766_tokens, _165796_ranges);
	};
	_205699dac_removeRange(_self_, (_16583_n - 1LL), (*(_165730_t))._field_Id, _165766_tokens, _165796_ranges);
}



inline void _20569aa5b_checkRanges(_20568acd2_parser* _self_, jule::Slice<jule::Ptr<_204a14216_Token>>* _167528_tokens) {
	jule::Slice<jule::I32> _167611_ranges = nullptr;;
	{
		auto expr = _167528_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2167593ab:;
		if (it != expr_end) {
			jule::I32 _16787_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> *_167810_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167810_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_21675a2e1:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _167611_ranges; __jule_push_dest.push(_16787_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_21675a379:;
						{
							_20569a7a3_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(74LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_21675a3e0:;
						{
							_20569a7a3_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(72LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_21675a456:;
						{
							_20569a7a3_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(76LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					_match_end_21675a225:;
				};
			}
			_iter_next_2167593ab:;
			++it;
			_16787_i++;
			goto _iter_begin_2167593ab;
		}
		_iter_end_2167593ab:;
	};
	{
		auto expr = &(_167611_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21675c58a:;
		if (it != expr_end) {
			jule::I32 _169310_i = *it;
			{
				jule::Ptr<_204a14216_Token> _16944_token = (*(_167528_tokens))[_169310_i];;
				{
					auto &_match_expr{ (*(_16944_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_21675d316:;
						{
							_20568b7b6_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_21675d37c:;
						{
							_20568b7b6_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_21675d3e3:;
						{
							_20568b7b6_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_21675d080:;
				};
			}
			_iter_next_21675c58a:;
			++it;
			goto _iter_begin_21675c58a;
		}
		_iter_end_21675c58a:;
	};
}



inline void _20569ad14_parse(jule::Ptr<_20568acd2_parser> _self_, jule::Ptr<_204a19cbb_Fileset>* _170627_f) {
	(*(_self_))._field_ast=jule::new_ptr<_204a27c52_AST>(_204a27c52_AST{._field_File=(*(_170627_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_204a42a5d_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_204a28b10_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_20567a4ec_exprBuilder>(_20567a4ec_exprBuilder{._field_p=_self_});
	_20569aa5b_checkRanges(_self_, &((*((*(_170627_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20566c236_stmt>> _17197_stmts = _20566c5dd_splitStmts(&((*((*(_170627_f))))._field_Tokens));;
	jule::I32 _17227_i = 0LL;;
	for (; (_17227_i < _17197_stmts.len()); (_17227_i)++) {
		{
			jule::Ptr<_20566c236_stmt> _17248_stmt = _17197_stmts[_17227_i];;
			if (((*(_17248_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_17248_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_21676212d;
			};
			if ((!(_1eeacc229_IsTopDirective((*((*(_17248_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_21676212d;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2902d_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20568c2ab_buildDirective(_self_, (*(_17248_stmt))._field_tokens); __jule_collection; }));
		}
	_iter_next_21676212d:;
	}
	_iter_end_21676212d:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17227_i < _17197_stmts.len()) && (!(_20568b398_stopped(_self_)))); (_17227_i)++) {
		{
			jule::Ptr<_20566c236_stmt> _17418_stmt = _17197_stmts[_17227_i];;
			_2056998d4_appendNode(_self_, &((*(_17418_stmt))._field_tokens));
		}
	_iter_next_216765131:;
	}
	_iter_end_216765131:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_20568b7b6_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _20569c563_pushErr(_20569be8b_typeBuilder* _self_, jule::Ptr<_204a14216_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_20568b7b6_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _20569c8c6_pushSuggestion(_20569be8b_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_20568bb29_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569cb5c_buildNamespace(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a29b11_TypeDecl> _457_t = jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_204a2a8ae_NamespaceTypeDecl> _487_ns = jule::new_ptr<_204a2a8ae_NamespaceTypeDecl>(_204a2a8ae_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_204a14216_Token>(nullptr), ._field_Kind=jule::Ptr<_204a29b11_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_20569c563_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_20569c8c6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_20569c563_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_20569c8c6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_20569c563_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_20569c8c6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_20569c563_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_20569c8c6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_20569d410_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type94);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _20569cde3_buildGenerics(_20569be8b_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_204a14216_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _857_parts = _20569d179_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_20569c563_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a29b11_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216775284:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _9215_part = *it;
			{
				jule::I32 _938_j = 0LL;;
				jule::Ptr<_204a29b11_TypeDecl> _948_t;
				({
					__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_20569c563_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_204a29b11_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_216775284:;
			++it;
			goto _iter_begin_216775284;
		}
		_iter_end_216775284:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _20569d179_identGenerics(_20569be8b_typeBuilder* _self_) {
	jule::I32 _1043_first = (*((*(_self_))._field_i));;
	jule::I32 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_204a14216_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_21677982c:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_216779b5c:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_2167798a4:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_2167789c4;
			};
		}
	_iter_next_2167789c4:;
	}
	_iter_end_2167789c4:;;
	jule::Slice<jule::Ptr<_204a14216_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _1207_parts;
	jule::Slice<_1eeaca425_Log> _12014_errors;
	({
		__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_assign_result = _205689c04_parts(&(_1197_tokens), static_cast<jule::U32>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569d410_buildIdent(_20569be8b_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _20569cb5c_buildNamespace(_self_);;
	};
	jule::Ptr<_204a14216_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_204a2a21b_IdentTypeDecl> _1337_it = jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_204a29b11_TypeDecl> _1397_itd = jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1337_it))._field_Generics=_20569cde3_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_20569c563_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20569c563_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_204a2a4d5_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_204a2a4d5_SubIdentTypeDecl>(_204a2a4d5_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_204a29b11_TypeDecl> _1587_ident = _20569d410_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_2167857e4:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.unsafe_cast_ptr<_204a2a21b_IdentTypeDecl>(); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_21677ebea:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_204a2a4d5_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_21678576c:;
	};
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569d696_buildCppLink(_20569be8b_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_20569c563_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_204a29b11_TypeDecl> _1777_t = _20569d410_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_204a2a21b_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569d92c_buildFn(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_204a3b89d_FnDecl> _1847_f = _20569249d_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_204a3bc44_IsAnon(_1847_f.ptr())))) {
		_20569c563_pushErr(_self_, (*_1847_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569dbb3_buildPtr(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_20569c563_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_204a2b63a_PtrTypeDecl>(_204a2b63a_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_204a29b11_TypeDecl> _2157_elem = _20569ec19_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_204a2b63a_PtrTypeDecl>(_204a2b63a_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569de49_buildSptr(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_20569c563_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_204a29b11_TypeDecl> _2367_elem = _20569ec19_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_204a2abab_SptrTypeDecl>(_204a2abab_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569e1d0_buildSlc(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_204a29b11_TypeDecl> _2527_elem = _20569ec19_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_204a2b041_SlcTypeDecl>(_204a2b041_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569e466_buildArr(_20569be8b_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_204a14216_Token>> _2657_exprTokens = _205689484_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20569c563_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_204a29b11_TypeDecl> _2717_elem = _20569ec19_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204a2bdcc_ArrTypeDecl> _2767_arrt = jule::new_ptr<_204a2bdcc_ArrTypeDecl>(_204a2bdcc_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_204a2de45_Expr>(nullptr)});;
	jule::Ptr<_204a14216_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_20568be6a_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569e6ec_buildMap(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20569c563_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_204a14216_Token>> _3027_keyTokens = _205689484_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20569c563_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_20569c563_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_204a2c62a_MapTypeDecl> _3117_mapt = jule::new_ptr<_204a2c62a_MapTypeDecl>(_204a2c62a_MapTypeDecl{._field_Key=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_204a29b11_TypeDecl>(nullptr)});;
	jule::I32 _3127_j = 0LL;;
	jule::Ptr<_204a29b11_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_20569c563_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_204a29b11_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_assign_result = _20568d3bc_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569e983_buildEnumerable(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_20569c563_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _20569e1d0_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _20569e466_buildArr(_self_);;
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569ec19_step(_20569be8b_typeBuilder* _self_) {
	jule::Ptr<_204a14216_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_2167aab7c:;
			{
				return _20569d410_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_2167ab067:;
			{
				return _20569d696_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_2167ab0cd:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_204a29b11_TypeDecl> _3589_f = _20569d92c_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_204a3b89d_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_2167ab144:;
			{
				return _20569d92c_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_2167ab1aa:;
			{
				return _20569dbb3_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2167ab232:;
			{
				return _20569de49_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_2167ab2a9:;
			{
				return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_204a2abab_SptrTypeDecl>(_204a2abab_SptrTypeDecl{._field_Elem=_20569de49_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_2167ab331:;
			{
				return _20569e983_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_2167ab3a8:;
			{
				return _20569e6ec_buildMap(_self_);;
			}
		}
		_match_end_2167aac04:;
	};
	((*((*(_self_))._field_i)))++;
	_20569c563_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool _20569eea0_build(_20569be8b_typeBuilder* _self_) {
	__jule_tuple_x_204a29b11_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_204a29b11_TypeDecl> _3897_root = _20569ec19_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _20569b6c7_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _204e14380_CompileInfo_eq(_204e14380_CompileInfo *_self_, _204e14380_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _204e16151_pushErr(_204e15abd_directiveEval* _self_, jule::Ptr<_204a14216_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1eeaca425_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1eeaca425_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1eeaca887_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _204e1654c_splitOperans(_204e15abd_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_204a14216_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_204a14216_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_2167cecc2:;
					{
						(_367_rangeN)++;
						goto _iter_next_2167ce343;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_2167d0102:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_2167ced49:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_2167ce343;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_2167ce343:;
	}
	_iter_end_2167ce343:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_204e16151_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _204e1688d_evalDirectiveIdent(_204e15abd_directiveEval* _self_, jule::Str _6430_ident) {
	return (_204e150c8_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _204e16bce_evalDirectivePart(_204e15abd_directiveEval* _self_, jule::Slice<jule::Ptr<_204a14216_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_204e16151_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _204e1688d_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _204e16e65_eval(_204e15abd_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_204e16151_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _967_logicalOrParts = _204e1654c_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2167d7cb9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_204a14216_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> _1038_logicalAndParts = _204e1654c_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2167d987b:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_204a14216_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_204a14216_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_204a14216_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_204e16151_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _204e16bce_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_2167d987b:;
						++it;
						goto _iter_begin_2167d987b;
					}
					_iter_end_2167d987b:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_2167d7cb9:;
			++it;
			goto _iter_begin_2167d7cb9;
		}
		_iter_end_2167d7cb9:;
	};
	return _947_result;;
}







inline jule::Bool _204e13406_isPassFileAnnotation(_2056a108e_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_200e406ce_Base(_5136_p);
	jule::I32 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _200e4014b_Ext(_5136_p).len()));;
	if (_200e34096_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_204e150c8_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I32 _747_i = _200e36928_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204decdc4_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204de8232_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_200e36928_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204decdc4_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204de8232_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204de8232_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204decdc4_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204decdc4_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_2056a108e_Importer> static__2056a14bd_New(_204e14380_CompileInfo _4516_info) {
	jule::Ptr<_2056a108e_Importer> _467_imp = jule::new_ptr<_2056a108e_Importer>(_2056a108e_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _200e47560_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_204c12139_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_204e14c10_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _2056a1754_AllPackages(_2056a108e_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _2056a1b94_SetModPath(_2056a108e_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _2056a1e2a_GetModPath(_2056a108e_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _2056a226b_ModById(_2056a108e_Importer* _self_, jule::I32 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_204c12139_ImportInfo> _2056a25ac_GetImport(_2056a108e_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2167e8758:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _7515_p = *it;
			{
				if (_200e3ced4_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_2167e8758:;
			++it;
			goto _iter_begin_2167e8758;
		}
		_iter_end_2167e8758:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log _2056a29a8_ImportPackage(_2056a108e_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log __jule_func_result;
	jule::Slice<_1eec71478_Dir> _857_dirents = ({
		auto except = static__200e411c4_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1eeaca425_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2056a0aa5_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1eec71478_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _204c2ab25_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_1eeaca425_Log> _939_errs = _204c2adde_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_204a27c52_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a27c52_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a27c52_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2167ea9be:;
		if (it != expr_end) {
			_1eec71478_Dir _10110_dirent = *it;
			{
				if ((_1eecbacb9_IsDir(&_10110_dirent._field_Stat) || (!(_200e34096_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_2167ea9be;
				};
				jule::Str _1074__path = _200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_204a19cbb_Fileset> _1088_file = static__204a1a151_New(_1074__path);;
				{
					_204a1a6b2_FillMut(_1088_file.ptr(), _2056a0797_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_1eeaca425_Log> _1108_errors = _204a27801_Lex(_1088_file, static_cast<jule::I32>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_20561c4a0_FileInfo> _1158_finfo = _2056202b6_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_204e13406_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_2167ea9be;
				};
				jule::Bool _1254_r;
				jule::Slice<_1eeaca425_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1eeaca425_Log __jule_assign_result = _2056a3190_isPassBuildDirectives(_self_, &((*(_1158_finfo))._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_2167ea9be;
				};
				{ jule::Slice<jule::Ptr<_204a27c52_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*(_1158_finfo))._field_Ast); };
			}
			_iter_next_2167ea9be:;
			++it;
			goto _iter_begin_2167ea9be;
		}
		_iter_end_2167ea9be:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _2056a2c61_Imported(_2056a108e_Importer* _self_, jule::Ptr<_204c12139_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2167eca9d:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _200e3ced4_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_2167eca9d:;
			++it;
			goto _iter_begin_2167eca9d;
		}
		_iter_end_2167eca9d:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216804566:;
			if (it != expr_end) {
				jule::I32 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*(_14128_imp))._field_ModId=_1518_i;
						goto _julec_label_21680669a;
					};
				}
				_iter_next_216804566:;
				++it;
				_1518_i++;
				goto _iter_begin_216804566;
			}
			_iter_end_216804566:;
		};
		(*(_14128_imp))._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_21680669a:;
	};
	{ jule::Slice<jule::Ptr<_204c12139_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1eeaca425_Log _2056a3190_isPassBuildDirectives(_2056a108e_Importer* _self_, jule::Ptr<_204a27c52_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_1eeaca425_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216806bb7:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_216806bb7;
				};
				_204e15abd_directiveEval _1738_de = _204e15abd_directiveEval{._field_logs=jule::Slice<_1eeaca425_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _204e16e65_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_216806bb7:;
			++it;
			goto _iter_begin_216806bb7;
		}
		_iter_end_216806bb7:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _204d6c21c_anyData_eq(_204d6c21c_anyData *_self_, _204d6c21c_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}





inline jule::Ptr<_2056a71a5_ExprInspector> static__2056a74e6_New(void) {
	return jule::new_ptr<_2056a71a5_ExprInspector>(_2056a71a5_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _2056a779e_args(_2056a71a5_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216869367:;
		if (it != expr_end) {
			jule::I32 _237_i = it - expr->begin();
			{
				_2056a7d10_inspect(_self_, &(_2224_args[_237_i]));
			}
			_iter_next_216869367:;
			++it;
			_237_i++;
			goto _iter_begin_216869367;
		}
		_iter_end_216869367:;
	};
}



inline void _2056a7a57_InspectStep(_2056a71a5_ExprInspector* _self_, jule::Any* _3339_m) {
	_2056a7d10_inspect(_self_, _3339_m);
}



inline void _2056a7d10_inspect(_2056a71a5_ExprInspector* _self_, jule::Any* _3728_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_3728_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_3728_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_21686b16b:;
			{
				jule::Ptr<_204b113ce_BinaryExprModel> _458_b = (*(_3728_m)).cast_ptr<_204b113ce_BinaryExprModel>(&__jule_any_type114);;
				_2056a7d10_inspect(_self_, &((*((*(_458_b))._field_Left))._field_Model));
				_2056a7d10_inspect(_self_, &((*((*_458_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21686b2e2:;
			{
				jule::Ptr<_204b117a8_UnaryExprModel> _498_u = (*(_3728_m)).cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113);;
				_2056a7d10_inspect(_self_, &((*((*(_498_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_21686b1d2:;
			{
				jule::Ptr<_204b1217c_StructLitExprModel> _528_lit = (*(_3728_m)).cast_ptr<_204b1217c_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_528_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216870604:;
					if (it != expr_end) {
						jule::Ptr<_204b11cd6_StructArgExprModel> _5316_arg = *it;
						{
							_2056a7d10_inspect(_self_, &((*((*(_5316_arg))._field_Expr))._field_Model));
						}
						_iter_next_216870604:;
						++it;
						goto _iter_begin_216870604;
					}
					_iter_end_216870604:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_21686b5ab:;
			{
				jule::Ptr<_204b1217c_StructLitExprModel> _578_lit = (*((*(_3728_m)).cast_ptr<_204b12479_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_578_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216871cba:;
					if (it != expr_end) {
						jule::Ptr<_204b11cd6_StructArgExprModel> _5816_arg = *it;
						{
							_2056a7d10_inspect(_self_, &((*(*(_5816_arg))._field_Expr.alloc)._field_Model));
						}
						_iter_next_216871cba:;
						++it;
						goto _iter_begin_216871cba;
					}
					_iter_end_216871cba:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_21686b622:;
			{
				jule::Ptr<_204b12a0c_CastingExprModel> _628_c = (*(_3728_m)).cast_ptr<_204b12a0c_CastingExprModel>(&__jule_any_type96);;
				_2056a7d10_inspect(_self_, &((*((*(_628_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_21686b688:;
			{
				jule::Ptr<_204b133ae_FnCallExprModel> _658_fc = (*(_3728_m)).cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31);;
				_2056a7d10_inspect(_self_, &((*(_658_fc))._field_Expr));
				_2056a779e_args(_self_, (*_658_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_21686b6ee:;
			{
				jule::Ptr<_204b13788_SliceExprModel> _698_s = (*(_3728_m)).cast_ptr<_204b13788_SliceExprModel>(&__jule_any_type80);;
				_2056a779e_args(_self_, (*(_698_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_21686b765:;
			{
				jule::Ptr<_204b166c0_ArrayExprModel> _728_a = (*(_3728_m)).cast_ptr<_204b166c0_ArrayExprModel>(&__jule_any_type88);;
				_2056a779e_args(_self_, (*(_728_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21686b7dc:;
			{
				jule::Ptr<_204b13c3e_IndexingExprModel> _758_i = (*(_3728_m)).cast_ptr<_204b13c3e_IndexingExprModel>(&__jule_any_type43);;
				_2056a7d10_inspect(_self_, &((*((*(_758_i))._field_Expr))._field_Model));
				_2056a7d10_inspect(_self_, &((*((*_758_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_21686b864:;
			{
				jule::Ptr<_204b14998_MapExprModel> _798_mp = (*(_3728_m)).cast_ptr<_204b14998_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_798_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216878288:;
					if (it != expr_end) {
						jule::Ptr<_204b145be_KeyValPairExprModel> _8016_entry = *it;
						{
							_2056a7d10_inspect(_self_, &((*(_8016_entry))._field_Key));
							_2056a7d10_inspect(_self_, &((*_8016_entry.alloc)._field_Val));
						}
						_iter_next_216878288:;
						++it;
						goto _iter_begin_216878288;
					}
					_iter_end_216878288:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_21686b8db:;
			{
				jule::Ptr<_204b1502b_SlicingExprModel> _858_s = (*(_3728_m)).cast_ptr<_204b1502b_SlicingExprModel>(&__jule_any_type95);;
				_2056a7d10_inspect(_self_, &((*(_858_s))._field_Expr));
				_2056a7d10_inspect(_self_, &((*_858_s.alloc)._field_Left));
				if (((*_858_s.alloc)._field_Right != nullptr)) {
					_2056a7d10_inspect(_self_, &((*_858_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_21686b963:;
			{
				jule::Ptr<_204b155ae_TraitSubIdentExprModel> _928_t = (*(_3728_m)).cast_ptr<_204b155ae_TraitSubIdentExprModel>(&__jule_any_type100);;
				_2056a7d10_inspect(_self_, &((*(_928_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_21686b9da:;
			{
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _958_s = (*(_3728_m)).cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				_2056a7d10_inspect(_self_, &((*((*(_958_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_21686ba62:;
			{
				jule::Ptr<_204b169bc_TupleExprModel> _988_t = (*(_3728_m)).cast_ptr<_204b169bc_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_988_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21687cce8:;
					if (it != expr_end) {
						jule::Ptr<_204ca2b7a_Data> _9916_d = *it;
						{
							_2056a7d10_inspect(_self_, &((*(_9916_d))._field_Model));
						}
						_iter_next_21687cce8:;
						++it;
						goto _iter_begin_21687cce8;
					}
					_iter_end_21687cce8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_21686bad9:;
			{
				jule::Ptr<_204b17490_BuiltinNewCallExprModel> _1038_b = (*(_3728_m)).cast_ptr<_204b17490_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_1038_b))._field_Init != nullptr)) {
					_2056a7d10_inspect(_self_, &((*_1038_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_21686bb61:;
			{
				jule::Ptr<_204b16cb9_BuiltinPrintCallExprModel> _1088_c = (*(_3728_m)).cast_ptr<_204b16cb9_BuiltinPrintCallExprModel>(&__jule_any_type25);;
				_2056a7d10_inspect(_self_, &((*((*(_1088_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_21686bbd8:;
			{
				jule::Ptr<_204b170b6_BuiltinPrintlnCallExprModel> _1118_c = (*(_3728_m)).cast_ptr<_204b170b6_BuiltinPrintlnCallExprModel>(&__jule_any_type26);;
				_2056a7d10_inspect(_self_, &((*((*(_1118_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_21686bc60:;
			{
				jule::Ptr<_204b17869_BuiltinPanicCallExprModel> _1148_c = (*(_3728_m)).cast_ptr<_204b17869_BuiltinPanicCallExprModel>(&__jule_any_type27);;
				_2056a7d10_inspect(_self_, &((*(_1148_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_21686bcd7:;
			{
				jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _1178_c = (*(_3728_m)).cast_ptr<_204b19470_BuiltinErrorCallExprModel>(&__jule_any_type21);;
				_2056a7d10_inspect(_self_, &((*((*(_1178_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_21686bd5e:;
			{
				jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> _1208_b = (*(_3728_m)).cast_ptr<_204b17d20_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1208_b))._field_Len != nullptr)) {
					_2056a7d10_inspect(_self_, &((*_1208_b.alloc)._field_Len));
				};
				if (((*(_1208_b))._field_Cap != nullptr)) {
					_2056a7d10_inspect(_self_, &((*_1208_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_21686bdd6:;
			{
				jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> _1288_b = (*(_3728_m)).cast_ptr<_204b181e9_BuiltinAppendCallExprModel>(&__jule_any_type24);;
				_2056a7d10_inspect(_self_, &((*(_1288_b))._field_Dest));
				_2056a7d10_inspect(_self_, &((*_1288_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_21686be5d:;
			{
				jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _1328_l = (*(_3728_m)).cast_ptr<_204b184e6_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_2056a7d10_inspect(_self_, &((*((*(_1328_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_21686bed5:;
			{
				jule::Ptr<_204b187e3_BuiltinCapCallExprModel> _1358_c = (*(_3728_m)).cast_ptr<_204b187e3_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_2056a7d10_inspect(_self_, &((*((*(_1358_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_21686c05c:;
			{
				jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> _1388_b = (*(_3728_m)).cast_ptr<_204b18bbc_BuiltinDeleteCallExprModel>(&__jule_any_type29);;
				_2056a7d10_inspect(_self_, &((*((*(_1388_b))._field_Dest))._field_Model));
				if (((*_1388_b.alloc)._field_Key != nullptr)) {
					_2056a7d10_inspect(_self_, &((*(*(_1388_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_21686c0d4:;
			{
				jule::Ptr<_204b1976c_SizeofExprModel> _1448_s = (*(_3728_m)).cast_ptr<_204b1976c_SizeofExprModel>(&__jule_any_type120);;
				_2056a7d10_inspect(_self_, &((*(_1448_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_21686c15b:;
			{
				jule::Ptr<_204b19e21_AlignofExprModel> _1478_a = (*(_3728_m)).cast_ptr<_204b19e21_AlignofExprModel>(&__jule_any_type121);;
				_2056a7d10_inspect(_self_, &((*(_1478_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_21686c1d3:;
			{
				jule::Ptr<_204b1a77e_FreeExprModel> _1508_f = (*(_3728_m)).cast_ptr<_204b1a77e_FreeExprModel>(&__jule_any_type30);;
				_2056a7d10_inspect(_self_, &((*(_1508_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_21686c25a:;
			{
				jule::Ptr<_204b1a482_BackendEmitExprModel> _1538_e = (*(_3728_m)).cast_ptr<_204b1a482_BackendEmitExprModel>(&__jule_any_type23);;
				_2056a779e_args(_self_, (*(_1538_e))._field_Exprs);
			}
		}
		_match_end_21686b105:;
	};
}



inline void _2056a8173_Inspect(_2056a71a5_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16148_f) {
	(*(_self_))._field_handler=_16148_f;
	_2056a7d10_inspect(_self_, _16128_m);
}








inline jule::Bool _2056ae8d8_MetaStrBuilder_eq(_2056ae8d8_MetaStrBuilder *_self_, _2056ae8d8_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _2056b05a9_MetaRuntime_eq(_2056b05a9_MetaRuntime *_self_, _2056b05a9_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _2056b107c_MetaMathCmplx_eq(_2056b107c_MetaMathCmplx *_self_, _2056b107c_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _2056b1687_Meta_eq(_2056b1687_Meta *_self_, _2056b1687_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_2056b1687_Meta> static__2056b1a61_Collect(jule::Ptr<_2056a39dc_IR> _7124_ir) {
	jule::Ptr<_2056b1687_Meta> _727_meta = jule::new_ptr<_2056b1687_Meta>(_2056b1687_Meta{._field_Runtime=jule::Ptr<_2056b05a9_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_2056ae8d8_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_2056b107c_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_204b1d5a6_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__2056b1d2a_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__2056b20e4_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__2056b23ad_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_2056b05a9_MetaRuntime> static__2056b1d2a_CollectRuntime(jule::Ptr<_2056a39dc_IR>* _8032_ir) {
	jule::Ptr<_204c12139_ImportInfo> _817_p = _2056ad2aa_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2056b05a9_MetaRuntime> _857_meta = jule::new_ptr<_2056b05a9_MetaRuntime>(_2056b05a9_MetaRuntime{._field_ToStr=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Map=jule::Ptr<_204a4a46c_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_204a4a46c_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_204d6b31a_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_204d6b6d3_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_204d6b6d3_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_2056ae8d8_MetaStrBuilder> static__2056b20e4_CollectStrBuilder(jule::Ptr<_2056a39dc_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_204c12139_ImportInfo> _1097_p = _2056ad2aa_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _1137_b = _204cde6ab_Struct((*((*(_204c12e4d_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_2056ae8d8_MetaStrBuilder> _1147_meta = jule::new_ptr<_2056ae8d8_MetaStrBuilder>(_2056ae8d8_MetaStrBuilder{._field_Write=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_204b21664_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_204a4e372_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_204a4e372_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_204a4e372_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_204a4e372_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_2056b107c_MetaMathCmplx> static__2056b23ad_CollectMathCmplx(jule::Ptr<_2056a39dc_IR>* _12334_ir) {
	jule::Ptr<_204c12139_ImportInfo> _1247_p = _2056ad2aa_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2056b107c_MetaMathCmplx> _1287_meta = jule::new_ptr<_2056b107c_MetaMathCmplx>(_2056b107c_MetaMathCmplx{._field_Cmplx=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_204b21664_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_204d6b6d3_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_204a4e372_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_204a4e372_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}















inline jule::Ptr<_20682b0d6_ObjectDeadCode> static__20682b5c0_new(jule::Ptr<_2056a39dc_IR>* _2621_ir) {
	return jule::new_ptr<_20682b0d6_ObjectDeadCode>(_20682b0d6_ObjectDeadCode{._field_live=_20682acc8_liveTable{._field_vars=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_204b21664_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_204a4d2c7_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_204b28cba_Trait>>(nullptr)}, ._field_ir=(*(_2621_ir))});;
}



inline jule::Bool _2168ebecc_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204a4d2c7_StructIns>* _3227_t) {
	jule::Slice<jule::Ptr<_204a4d2c7_StructIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_2168edbc1:;
			{
				_3311_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_2168eda8e:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168edb05:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_2168edb05:;
			++it;
			_447_i++;
			goto _iter_begin_2168edb05;
		}
		_iter_end_2168edb05:;
	};
	return false;;
}

inline jule::Bool _216903c2b_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b21664_FnIns>* _3227_t) {
	jule::Slice<jule::Ptr<_204b21664_FnIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_216905865:;
			{
				_3311_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_216905799:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216905810:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_216905810:;
			++it;
			_447_i++;
			goto _iter_begin_216905810;
		}
		_iter_end_216905810:;
	};
	return false;;
}

inline jule::Bool _21692d76c_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b28cba_Trait>* _3227_t) {
	jule::Slice<jule::Ptr<_204b28cba_Trait>> _3311_live = nullptr;;
	{
		
{
			_case_begin_2169304c7:;
			{
				_3311_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_21693032e:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216931594:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_216931594:;
			++it;
			_447_i++;
			goto _iter_begin_216931594;
		}
		_iter_end_216931594:;
	};
	return false;;
}

inline jule::Bool _216938997_isLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c5319c_Var>* _3227_t) {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _3311_live = nullptr;;
	{
		
{
			_case_begin_21693a3b1:;
			{
				_3311_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_21693a515:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21693b04e:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_21693b04e:;
			++it;
			_447_i++;
			goto _iter_begin_21693b04e;
		}
		_iter_end_21693b04e:;
	};
	return false;;
}



inline void _2168ec95b_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204a4d2c7_StructIns> _5232_t) {
	{
		
{
			_case_begin_216901069:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4d2c7_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_21690050d:;
	};
}

inline void _216904e19_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b21664_FnIns> _5232_t) {
	{
		
{
			_case_begin_21690837e:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b21664_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_21690778a:;
	};
}

inline void _21692e1eb_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b28cba_Trait> _5232_t) {
	{
		
{
			_case_begin_216932661:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b28cba_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_216931a7d:;
	};
}

inline void _21693be95_pushLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c5319c_Var> _5232_t) {
	{
		
{
			_case_begin_21693cb44:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_21693b637:;
	};
}



inline void _20682be72_pushStructAsLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204a4d2c7_StructIns>* _6538_s) {
	if (_2168ebecc_isLive(_self_, _6538_s)) {
		return;;
	};
	_2168ec95b_pushLive(_self_, (*(_6538_s)));
	_20682c22a_setReferencesAsLive(_self_, &((*((*(_6538_s))))._field_Refers));
	jule::Bool _713_allLive = _20682e5c3_isAllMethodsLive((*((*(_6538_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168eb9e3:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _7215_m = *it;
			{
				{
					auto expr = &((*(_7215_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216902b81:;
					if (it != expr_end) {
						jule::Ptr<_204b21664_FnIns> _7316_ins = *it;
						{
							if (_216903c2b_isLive(_self_, &(_7316_ins))) {
								goto _iter_next_216902b81;
							};
							if (_713_allLive) {
								_216904e19_pushLive(_self_, _7316_ins);
								_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								goto _iter_next_216902b81;
							};
							if (_2056a9ce0_IsTraitMethod(_6538_s, &(_7316_ins))) {
								_216904e19_pushLive(_self_, _7316_ins);
								_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
							};
							;
							;
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Eq)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Gt)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_GtEq)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Lt)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_LtEq)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shl)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shr)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Add)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Sub)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Div)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mul)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mod)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAnd)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOr)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXor)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Neg)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Pos)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitNot)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_AddAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_SubAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_DivAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_MulAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ModAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShlAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShrAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOrAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAndAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXorAssign)) {
									_216904e19_pushLive(_self_, _7316_ins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							;
							jule::Ptr<_204b1d5a6_Fn> _1119__str = _204a4e372_FindMethod((*(_6538_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1119__str != nullptr) && static__204c54665_Str(_1119__str))) {
								jule::Ptr<_204b21664_FnIns> _11310_fins = (*_1119__str.alloc)._field_Instances[0LL];;
								_216904e19_pushLive(_self_, _11310_fins);
								_20682c22a_setReferencesAsLive(_self_, &((*(_11310_fins))._field_Refers));
							};
						}
						_iter_next_216902b81:;
						++it;
						goto _iter_begin_216902b81;
					}
					_iter_end_216902b81:;
				};
			}
			_iter_next_2168eb9e3:;
			++it;
			goto _iter_begin_2168eb9e3;
		}
		_iter_end_2168eb9e3:;
	};
}



inline void _20682c22a_setReferencesAsLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c000b1_ReferenceStack>* _12141_rs) {
	if (((*(_12141_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1257_i = 0LL;;
	for (; (_1257_i < _204c00820_Len((*(_12141_rs)).ptr())); (_1257_i)++) {
		{
			jule::Any _1278_ref = _204c00b61_At((*(_12141_rs)).ptr(), _1257_i);;
			{
				auto &_match_expr{ _1278_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_21692c45d:;
					{
						jule::Ptr<_204b28cba_Trait> _1309_t = _1278_ref.unsafe_cast_ptr<_204b28cba_Trait>();;
						if (_21692d76c_isLive(_self_, &(_1309_t))) {
							goto _iter_next_21692b4d4;
						};
						_21692e1eb_pushLive(_self_, _1309_t);
						{
							auto expr = &((*(_1309_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_21692d184:;
							if (it != expr_end) {
								jule::Ptr<_204b1d5a6_Fn> _13517_ins = *it;
								{
									{
										auto expr = &((*(_13517_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_216932ae5:;
										if (it != expr_end) {
											jule::Ptr<_204b21664_FnIns> _13618_mins = *it;
											{
												if (_216903c2b_isLive(_self_, &(_13618_mins))) {
													goto _iter_next_216932ae5;
												};
												_216904e19_pushLive(_self_, _13618_mins);
												_20682c22a_setReferencesAsLive(_self_, &((*(_13618_mins))._field_Refers));
											}
											_iter_next_216932ae5:;
											++it;
											goto _iter_begin_216932ae5;
										}
										_iter_end_216932ae5:;
									};
								}
								_iter_next_21692d184:;
								++it;
								goto _iter_begin_21692d184;
							}
							_iter_end_21692d184:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_21692c293:;
					{
						jule::Ptr<_204b21664_FnIns> _1459_f = _1278_ref.unsafe_cast_ptr<_204b21664_FnIns>();;
						if (_216903c2b_isLive(_self_, &(_1459_f))) {
							goto _match_end_21692c31a;
						};
						if ((((*(_1459_f))._field_Owner != nullptr) && (!((*((*_1459_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_2168ebecc_isLive(_self_, &((*_1459_f.alloc)._field_Owner))))) {
								_2168ec95b_pushLive(_self_, (*_1459_f.alloc)._field_Owner);
								_20682c22a_setReferencesAsLive(_self_, &((*(*(_1459_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_216904e19_pushLive(_self_, _1459_f);
						_20682c22a_setReferencesAsLive(_self_, &((*(_1459_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_21692c4c4:;
					{
						jule::Ptr<_204c5319c_Var> _1589_v = _1278_ref.unsafe_cast_ptr<_204c5319c_Var>();;
						if (_216938997_isLive(_self_, &(_1589_v))) {
							goto _match_end_21692c31a;
						};
						_21693be95_pushLive(_self_, _1589_v);
						_20682c22a_setReferencesAsLive(_self_, &((*(_1589_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_21692c53a:;
					{
						jule::Ptr<_204a4d2c7_StructIns> _1659_s = _1278_ref.unsafe_cast_ptr<_204a4d2c7_StructIns>();;
						_20682be72_pushStructAsLive(_self_, &(_1659_s));
					}
				}
				_match_end_21692c31a:;
			};
		}
	_iter_next_21692b4d4:;
	}
	_iter_end_21692b4d4:;;
}



inline void _20682c4d3_inits(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c148ab_Package>* _17127_pkg) {
	{
		auto expr = &((*((*(_17127_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21692ba56:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _17215_file = *it;
			{
				{
					auto expr = &((*(_17215_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216940097:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _17316_f = *it;
						{
							if ((*(_17316_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_204b21664_FnIns> _17510_ins = (*(_17316_f))._field_Instances[0LL];;
								if ((!(_216903c2b_isLive(_self_, &(_17510_ins))))) {
									_216904e19_pushLive(_self_, _17510_ins);
								};
								_20682c22a_setReferencesAsLive(_self_, &((*(_17510_ins))._field_Refers));
							};
						}
						_iter_next_216940097:;
						++it;
						goto _iter_begin_216940097;
					}
					_iter_end_216940097:;
				};
			}
			_iter_next_21692ba56:;
			++it;
			goto _iter_begin_21692ba56;
		}
		_iter_end_21692ba56:;
	};
}



inline void _20682c78b_collectLivePackage(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c148ab_Package>* _18540_pkg) {
	_20682c4d3_inits(_self_, _18540_pkg);
	_2056a668d_IterFiles(_18540_pkg, jule::__new_closure<void,jule::Ptr<_204b248a9_SymTab>*>((void*)__jule_anon_216942ce2, jule::Ptr<__jule_anon_216942ce2_ctx>::make(__jule_anon_216942ce2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_216942ce2_ctx_handler));
	if (_200e4dbc6_Test) {
		if ((((*((*(_18540_pkg))))._field_Files.len() > 0LL) && _2056aa164_IsStdPackage((*((*((*((*(_18540_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_204a4a46c_Struct> _2159_s = _204c15a77_FindStruct((*(_18540_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_204a4d2c7_StructIns> _2169_ins = (*(_2159_s))._field_Instances[0LL];;
			_20682be72_pushStructAsLive(_self_, &(_2169_ins));
			{
				auto expr = &((*(_2169_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_2169494ad:;
				if (it != expr_end) {
					jule::Ptr<_204b1d5a6_Fn> _21817_m = *it;
					{
						{
							auto expr = &((*(_21817_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_216949e3c:;
							if (it != expr_end) {
								jule::Ptr<_204b21664_FnIns> _21918_mins = *it;
								{
									if (_216903c2b_isLive(_self_, &(_21918_mins))) {
										goto _iter_next_216949e3c;
									};
									_216904e19_pushLive(_self_, _21918_mins);
									_20682c22a_setReferencesAsLive(_self_, &((*(_21918_mins))._field_Refers));
								}
								_iter_next_216949e3c:;
								++it;
								goto _iter_begin_216949e3c;
							}
							_iter_end_216949e3c:;
						};
					}
					_iter_next_2169494ad:;
					++it;
					goto _iter_begin_2169494ad;
				}
				_iter_end_2169494ad:;
			};
		};
		{
			auto expr = &((*((*(_18540_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216946a4e:;
			if (it != expr_end) {
				jule::Ptr<_204b248a9_SymTab> _22816_file = *it;
				{
					{
						auto expr = &((*(_22816_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21694c604:;
						if (it != expr_end) {
							jule::Ptr<_204b1d5a6_Fn> _22917_f = *it;
							{
								if (_2056ab3b8_HasDirective(&((*(_22917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_204b21664_FnIns> _23111_ins = (*_22917_f.alloc)._field_Instances[0LL];;
									if ((!(_216903c2b_isLive(_self_, &(_23111_ins))))) {
										_216904e19_pushLive(_self_, _23111_ins);
									};
									_20682c22a_setReferencesAsLive(_self_, &((*(_23111_ins))._field_Refers));
								};
							}
							_iter_next_21694c604:;
							++it;
							goto _iter_begin_21694c604;
						}
						_iter_end_21694c604:;
					};
				}
				_iter_next_216946a4e:;
				++it;
				goto _iter_begin_216946a4e;
			}
			_iter_end_216946a4e:;
		};
	};
}



inline void _20682c989_collectLive(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21694e194:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _24315_used = *it;
			{
				if ((!((*(_24315_used))._field_Binded))) {
					_20682c78b_collectLivePackage(_self_, &((*_24315_used.alloc)._field_Package));
				};
			}
			_iter_next_21694e194:;
			++it;
			goto _iter_begin_21694e194;
		}
		_iter_end_21694e194:;
	};
	_20682c78b_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_204b1d5a6_Fn> _2517_main = _204c15e73_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2517_main != nullptr)) {
		jule::Ptr<_204b21664_FnIns> _2538_ins = (*_2517_main.alloc)._field_Instances[0LL];;
		if ((!(_216903c2b_isLive(_self_, &(_2538_ins))))) {
			_216904e19_pushLive(_self_, _2538_ins);
		};
		_20682c22a_setReferencesAsLive(_self_, &((*(_2538_ins))._field_Refers));
	};
}



inline void _20682cc42_removeDeadGlobals(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204c5319c_Var>>* _26139_vars) {
	jule::I32 _2627_i = 0LL;;
	while ((_2627_i < (*(_26139_vars)).len())) {
		{
			jule::Ptr<_204c5319c_Var> _2644_v = (*(_26139_vars))[_2627_i];;
			if (_216938997_isLive(_self_, &(_2644_v))) {
				(_2627_i)++;
				goto _iter_next_216953e9b;
			};
			(*(_26139_vars))=jule::append((*(_26139_vars)).slice(0LL, _2627_i),(*(_26139_vars)).slice((_2627_i + 1LL)));
		}
	_iter_next_216953e9b:;
	}
	_iter_end_216953e9b:;;
}



inline void _20682ceea_removeDeadFns(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204b1d5a6_Fn>>* _27335_funcs) {
	jule::I32 _2747_i = 0LL;;
	while ((_2747_i < (*(_27335_funcs)).len())) {
		{
			jule::Ptr<_204b1d5a6_Fn> _2768_f = (*(_27335_funcs))[_2747_i];;
			jule::I32 _2778_j = 0LL;;
			while ((_2778_j < (*(_2768_f))._field_Instances.len())) {
				{
					jule::Ptr<_204b21664_FnIns> _2795_ins = (*_2768_f.alloc)._field_Instances[_2778_j];;
					if (_216903c2b_isLive(_self_, &(_2795_ins))) {
						(_2778_j)++;
						goto _iter_next_216956850;
					};
					(*_2768_f.alloc)._field_Instances=jule::append((*_2768_f.alloc)._field_Instances.slice(0LL, _2778_j),(*_2768_f.alloc)._field_Instances.slice((_2778_j + 1LL)));
				}
			_iter_next_216956850:;
			}
			_iter_end_216956850:;;
			if (((*_2768_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_27335_funcs))=jule::append((*(_27335_funcs)).slice(0LL, _2747_i),(*(_27335_funcs)).slice((_2747_i + 1LL)));
				goto _iter_next_216955a08;
			};
			(_2747_i)++;
		}
	_iter_next_216955a08:;
	}
	_iter_end_216955a08:;;
}



inline void _20682d2a3_removeDeadStructs(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204a4a46c_Struct>>* _29439_structs) {
	jule::I32 _2957_i = 0LL;;
	while ((_2957_i < (*(_29439_structs)).len())) {
		{
			jule::Ptr<_204a4a46c_Struct> _2978_s = (*(_29439_structs))[_2957_i];;
			jule::I32 _2988_j = 0LL;;
			while ((_2988_j < (*(_2978_s))._field_Instances.len())) {
				{
					jule::Ptr<_204a4d2c7_StructIns> _3009_ins = (*_2978_s.alloc)._field_Instances[_2988_j];;
					_20682ceea_removeDeadFns(_self_, &((*(_3009_ins))._field_Methods));
					if ((((*_3009_ins.alloc)._field_Methods.len() != 0LL) || _2168ebecc_isLive(_self_, &(_3009_ins)))) {
						(_2988_j)++;
						goto _iter_next_21695a502;
					};
					(*_2978_s.alloc)._field_Instances=jule::append((*_2978_s.alloc)._field_Instances.slice(0LL, _2988_j),(*_2978_s.alloc)._field_Instances.slice((_2988_j + 1LL)));
				}
			_iter_next_21695a502:;
			}
			_iter_end_21695a502:;;
			if (((*_2978_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_29439_structs))=jule::append((*(_29439_structs)).slice(0LL, _2957_i),(*(_29439_structs)).slice((_2957_i + 1LL)));
				goto _iter_next_2169596aa;
			};
			(_2957_i)++;
		}
	_iter_next_2169596aa:;
	}
	_iter_end_2169596aa:;;
}



inline void _20682d55b_removeDeadTraits(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_204b28cba_Trait>>* _31638_traits) {
	jule::I32 _3177_i = 0LL;;
	while ((_3177_i < (*(_31638_traits)).len())) {
		{
			jule::Ptr<_204b28cba_Trait> _3198_t = (*(_31638_traits))[_3177_i];;
			if ((!(_21692d76c_isLive(_self_, &(_3198_t))))) {
				(*(_31638_traits))=jule::append((*(_31638_traits)).slice(0LL, _3177_i),(*(_31638_traits)).slice((_3177_i + 1LL)));
				goto _iter_next_21695ddb8;
			};
			jule::I32 _3248_j = 0LL;;
			while ((_3248_j < (*(_3198_t))._field_Implemented.len())) {
				{
					jule::Ptr<_204a4a46c_Struct> _3265_s = (*_3198_t.alloc)._field_Implemented[_3248_j];;
					if (((*(_3265_s))._field_Instances.len() > 0LL)) {
						(_3248_j)++;
						goto _iter_next_21695e814;
					};
					(*_3198_t.alloc)._field_Implemented=jule::append((*_3198_t.alloc)._field_Implemented.slice(0LL, _3248_j),(*_3198_t.alloc)._field_Implemented.slice((_3248_j + 1LL)));
				}
			_iter_next_21695e814:;
			}
			_iter_end_21695e814:;;
			(_3177_i)++;
		}
	_iter_next_21695ddb8:;
	}
	_iter_end_21695ddb8:;;
}



inline void _20682d814_removeDeadsFile(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204b248a9_SymTab>* _33737_file) {
	_20682ceea_removeDeadFns(_self_, &((*((*(_33737_file))))._field_Funcs));
	_20682d2a3_removeDeadStructs(_self_, &((*((*(_33737_file))))._field_Structs));
	_20682d55b_removeDeadTraits(_self_, &((*((*(_33737_file))))._field_Traits));
	_20682cc42_removeDeadGlobals(_self_, &((*((*(_33737_file))))._field_Vars));
}



inline void _20682dabc_removeDeadsPackage(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_, jule::Ptr<_204c148ab_Package>* _34440_pkg) {
	{
		auto expr = &((*((*(_34440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2169643c9:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _34515_file = *it;
			{
				_20682d814_removeDeadsFile(_self_, &(_34515_file));
			}
			_iter_next_2169643c9:;
			++it;
			goto _iter_begin_2169643c9;
		}
		_iter_end_2169643c9:;
	};
}



inline void _20682dcba_removeDeads(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216965254:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _35115_used = *it;
			{
				if ((!((*(_35115_used))._field_Binded))) {
					_20682dabc_removeDeadsPackage(_self_, &((*_35115_used.alloc)._field_Package));
				};
			}
			_iter_next_216965254:;
			++it;
			goto _iter_begin_216965254;
		}
		_iter_end_216965254:;
	};
	_20682dabc_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _20682deb8_elimanate(jule::Ptr<_20682b0d6_ObjectDeadCode> _self_) {
	_20682c989_collectLive(_self_);
	_20682dcba_removeDeads(_self_);
}








inline jule::Bool _20683020b_scopeDeadCode_eq(_20683020b_scopeDeadCode *_self_, _20683020b_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _206830728_optimizeChild(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd11d5_Scope>* _1935_s) {
	jule::Ptr<_20683020b_scopeDeadCode> _207_sdc = jule::new_ptr<_20683020b_scopeDeadCode>(_20683020b_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_206833143_optimizeStmts(_207_sdc);
	};
}



inline void _2068309d1_optimizeBodyChildExceptional(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd11d5_Scope>* _2950_s) {
	jule::Ptr<_20683020b_scopeDeadCode> _307_sdc = jule::new_ptr<_20683020b_scopeDeadCode>(_20683020b_scopeDeadCode{._field_parent=jule::Ptr<_20683020b_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_206833143_optimizeStmts(_307_sdc);
	};
}



inline void _206830c89_optimizeBodyChild(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd11d5_Scope>* _3939_s) {
	jule::Ptr<_20683020b_scopeDeadCode> _407_sdc = jule::new_ptr<_20683020b_scopeDeadCode>(_20683020b_scopeDeadCode{._field_parent=jule::Ptr<_20683020b_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_206833143_optimizeStmts(_407_sdc);
	};
}



inline void _206831042_optimizeExprModel(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_206834793_exprDeadCode _493_edc = static__206834bb1_new(&(_self_));;
	_206834e69_optimize(&_493_edc, _4839_model);
}



inline void _206831240_eliminateFollowed(_20683020b_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_20683020b_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*(_607_parent))._field_parent;
		}
	_iter_next_216975352:;
	}
	_iter_end_216975352:;;
}



inline void _2068314e8_pushGoto(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd4392_GotoSt> _6929_gt) {
	jule::I32 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*(*(_self_))._field_labels.alloc)[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_216978685:;
	}
	_iter_end_216978685:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd4392_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _2068317a1_pushLabel(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd3c32_Label> _7930_l) {
	jule::I32 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*(*(_self_))._field_gotos.alloc)[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_21697a885;
			};
			(_807_i)++;
		}
	_iter_next_21697a885:;
	}
	_iter_end_21697a885:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd3c32_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _206831a59_optimizeRangeIter(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd301c_RangeIter> _9238_it) {
	_206831042_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_206830c89_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _206831d12_optimizeWhileIter(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd25c1_WhileIter> _9738_it) {
	_206831042_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_206832e45_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_206830c89_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _2068320ba_optimizeInfIter(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd211a_InfIter> _10536_it) {
	_206830c89_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _206832373_optimizeConditional(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd1d1d_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21698264a:;
		if (it != expr_end) {
			jule::Ptr<_204bd1603_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_206831042_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_206830c89_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_21698264a:;
			++it;
			goto _iter_begin_21698264a;
		}
		_iter_end_21698264a:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_206830728_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_206830c89_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _20683262b_optimizeMatch(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd59e2_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216985bd1:;
		if (it != expr_end) {
			jule::Ptr<_204bd651a_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2169866e8:;
					if (it != expr_end) {
						jule::Ptr<_204ca2b7a_Data> _12916_expr = *it;
						{
							_206831042_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_2169866e8:;
						++it;
						goto _iter_begin_2169866e8;
					}
					_iter_end_2169866e8:;
				};
				_206830c89_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_216985bd1:;
			++it;
			goto _iter_begin_216985bd1;
		}
		_iter_end_216985bd1:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_206830728_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_206830c89_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _2068328d4_optimizeAssign(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd4c22_Assign> _14535_assign) {
	_206831042_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_206831042_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _206832b8c_optimizeMultiAssign(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Ptr<_204bd52a5_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21698aa2c:;
		if (it != expr_end) {
			jule::Ptr<_204ca2b7a_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_206831042_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_21698aa2c:;
			++it;
			goto _iter_begin_21698aa2c;
		}
		_iter_end_21698aa2c:;
	};
	_206831042_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _206832e45_optimizeStmt(jule::Ptr<_20683020b_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_21698c6cc:;
			{
				jule::Ptr<_204bd11d5_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_204bd11d5_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_206833440_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_206830728_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_21698c446:;
			{
				_206831a59_optimizeRangeIter(_self_, _15933_st.unsafe_cast_ptr<_204bd301c_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_21698c754:;
			{
				_206831d12_optimizeWhileIter(_self_, _15933_st.unsafe_cast_ptr<_204bd25c1_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_21698c7cb:;
			{
				_2068320ba_optimizeInfIter(_self_, _15933_st.unsafe_cast_ptr<_204bd211a_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_21698c853:;
			{
				_206832373_optimizeConditional(_self_, _15933_st.unsafe_cast_ptr<_204bd1d1d_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_21698c8ca:;
			{
				_20683262b_optimizeMatch(_self_, _15933_st.unsafe_cast_ptr<_204bd59e2_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_21698c952:;
			{
				_2068328d4_optimizeAssign(_self_, _15933_st.unsafe_cast_ptr<_204bd4c22_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_21698c9c9:;
			{
				_206832b8c_optimizeMultiAssign(_self_, _15933_st.unsafe_cast_ptr<_204bd52a5_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_21698ca51:;
			{
				jule::Ptr<_204ca2b7a_Data> _1838_d = _15933_st.unsafe_cast_ptr<_204ca2b7a_Data>();;
				if ((*_self_.alloc)._field_except) {
					goto _match_end_21698c578;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type27) {
						_case_begin_2169932b5:;
						{
							_206831240_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_216993936:;
						{
							_206831042_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_2169938c0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_21698cac8:;
			{
				_206831240_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_21698cb50:;
			{
				_2068314e8_pushGoto(_self_, _15933_st.unsafe_cast_ptr<_204bd4392_GotoSt>());
				_206831240_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_21698cbc7:;
			{
				_2068317a1_pushLabel(_self_, _15933_st.unsafe_cast_ptr<_204bd3c32_Label>());
			}
		}
		_match_end_21698c578:;
	};
}



inline void _206833143_optimizeStmts(jule::Ptr<_20683020b_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_206832e45_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_2169965a4:;
	}
	_iter_end_2169965a4:;;
}








inline jule::Bool _206834793_exprDeadCode_eq(_206834793_exprDeadCode *_self_, _206834793_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _206834793_exprDeadCode static__206834bb1_new(jule::Ptr<_20683020b_scopeDeadCode>* _1421_s) {
	return _206834793_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _206834e69_optimize(_206834793_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_2056a71a5_ExprInspector> _217_inspector = static__2056a74e6_New();;
	_2056a8173_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_216999200, jule::Ptr<__jule_anon_216999200_ctx>::make(__jule_anon_216999200_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_216999200_ctx_handler));
}








inline jule::Bool _2064e2693_ExceptionalForwardingExprModel_eq(_2064e2693_ExceptionalForwardingExprModel *_self_, _2064e2693_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _2065039c3_FnCallIgnoreExceptionalExprModel_eq(_2065039c3_FnCallIgnoreExceptionalExprModel *_self_, _2065039c3_FnCallIgnoreExceptionalExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}










inline jule::Bool _206503e79_SwapExprModel_eq(_206503e79_SwapExprModel *_self_, _206503e79_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _206504353_EmptyCompareExprModel_eq(_206504353_EmptyCompareExprModel *_self_, _206504353_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _206504650_RefExprModel_eq(_206504650_RefExprModel *_self_, _206504650_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _206504b06_StrCompExprModel_eq(_206504b06_StrCompExprModel *_self_, _206504b06_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _206505222_MutSlicingExprModel_eq(_206505222_MutSlicingExprModel *_self_, _206505222_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _20650551e_UnsafeBinaryExprModel_eq(_20650551e_UnsafeBinaryExprModel *_self_, _20650551e_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _20650581b_UnsafeIndexingExprModel_eq(_20650581b_UnsafeIndexingExprModel *_self_, _20650581b_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _206505be5_PushToSliceExprModel_eq(_206505be5_PushToSliceExprModel *_self_, _206505be5_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _2065060be_AppendToSliceExprModel_eq(_2065060be_AppendToSliceExprModel *_self_, _2065060be_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _206506498_StrRuneIter_eq(_206506498_StrRuneIter *_self_, _206506498_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _206506795_UnsafeDerefExprModel_eq(_206506795_UnsafeDerefExprModel *_self_, _206506795_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _206506a92_UnsafeCastingExprModel_eq(_206506a92_UnsafeCastingExprModel *_self_, _206506a92_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _20650782e_nilVar_eq(_20650782e_nilVar *_self_, _20650782e_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _206508115_pushVar(_206507b70_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_206719425_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2169db297:;
		if (it != expr_end) {
			jule::I32 _287_i = it - expr->begin();
			{
				_20650782e_nilVar *_299_v = &((*(_self_))._field_vars[_287_i]);;
				if (((*(_299_v))._field_var == _2323_var)) {
					(*(_299_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_2169db297:;
			++it;
			_287_i++;
			goto _iter_begin_2169db297;
		}
		_iter_end_2169db297:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2169dc331:;
		if (it != expr_end) {
			jule::I32 _367_i = it - expr->begin();
			{
				_20650782e_nilVar *_379_v = &((*(_self_))._field_vars[_367_i]);;
				if (((*(_379_v))._field_var == 0LLU)) {
					(*(_379_v))._field_var=_2323_var;
					(*(_379_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_2169dc331:;
			++it;
			_367_i++;
			goto _iter_begin_2169dc331;
		}
		_iter_end_2169dc331:;
	};
	{ jule::Slice<_20650782e_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_20650782e_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _206508456_removeVar(_206507b70_nils* _self_, jule::Uintptr _4825_var) {
	if ((_4825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2169de8c7:;
			if (it != expr_end) {
				jule::I32 _508_i = it - expr->begin();
				{
					_20650782e_nilVar *_5110_v = &((*(_self_))._field_vars[_508_i]);;
					if (((*(_5110_v))._field_var == _4825_var)) {
						(*(_5110_v))._field_var=0LLU;
						(*(_5110_v))._field_safe=false;
						return true;;
					};
				}
				_iter_next_2169de8c7:;
				++it;
				_508_i++;
				goto _iter_begin_2169de8c7;
			}
			_iter_end_2169de8c7:;
		};
	};
	return false;;
}



inline jule::Bool _206508797_isSafe(_206507b70_nils* _self_, jule::Uintptr _6322_var) {
	if ((_6322_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2169e1764:;
			if (it != expr_end) {
				_20650782e_nilVar _6511_v = *it;
				{
					if ((_6511_v._field_var == _6322_var)) {
						return _6511_v._field_safe;;
					};
				}
				_iter_next_2169e1764:;
				++it;
				goto _iter_begin_2169e1764;
			}
			_iter_end_2169e1764:;
		};
	};
	return false;;
}








inline jule::Bool _206700bd1_scopeOptimizer_eq(_206700bd1_scopeOptimizer *_self_, _206700bd1_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_206700bd1_scopeOptimizer> static__2067012b9_new(jule::Ptr<_204bd11d5_Scope> _2420_scope) {
	jule::Ptr<_206700bd1_scopeOptimizer> _257_sc = jule::new_ptr<_206700bd1_scopeOptimizer>(_206700bd1_scopeOptimizer{._field_parent=jule::Ptr<_206700bd1_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2420_scope, ._field_data=jule::new_ptr<_206713771_data>(_206713771_data{._field_boundary=jule::new_ptr<_206715a2b_boundary>(_206715a2b_boundary{._field_vars=jule::Slice<_2067156da_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_206507b70_nils>(_206507b70_nils{._field_vars=jule::Slice<_20650782e_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_206710b47_dynamic>(_206710b47_dynamic{._field_vars=jule::Slice<_206710806_dynamicVar>(nullptr)})})});;
	return _257_sc;;
}



inline void _206701572_setCurrentStmt(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Any _3635_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3635_stmt))))));
}



inline void _206701770_removeCurrent(jule::Ptr<_206700bd1_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _206701a06_isLastStmt(jule::Ptr<_206700bd1_scopeOptimizer> _self_) {
	jule::Ptr<_206700bd1_scopeOptimizer> _467_r = _self_;;
	for (; (_467_r != nullptr); _467_r=(*(_467_r))._field_parent) {
		{
			if ((((*((*_467_r.alloc)._field_scope))._field_Stmts.len() - (*_467_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_2169ed92a:;
	}
	_iter_end_2169ed92a:;;
	return true;;
}



inline jule::Bool _206701c8c_isIter(jule::Ptr<_206700bd1_scopeOptimizer> _self_) {
	jule::Ptr<_206700bd1_scopeOptimizer> _567_r = (*(_self_))._field_parent;;
	for (; (_567_r != nullptr); _567_r=(*(_567_r))._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_567_r))._field_scope))._field_Stmts[(*(_567_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type33) {
					_case_begin_216a01279:;
					{
						return true;;
					}
				}
				_match_end_216a011d0:;
			};
		}
	_iter_next_2169eed5a:;
	}
	_iter_end_2169eed5a:;;
	return false;;
}



inline void _206702045_optimizeData(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204ca2b7a_Data> _6833_d) {
	{
		auto &_match_expr{ (*(_6833_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_216a02445:;
			{
				jule::Ptr<_204b133ae_FnCallExprModel> _718_m = (*(_6833_d))._field_Model.unsafe_cast_ptr<_204b133ae_FnCallExprModel>();;
				static__2067092e4_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
				if (((((((_20671a899_Exceptional && (*((*((*(_718_m))._field_Func))._field_Decl))._field_Exceptional) && ((*_718_m.alloc)._field_Except != nullptr)) && ((*(*(_718_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _2056a8dee_IsForwarded(&((*_718_m.alloc)._field_Except))) && _206701a06_isLastStmt(_self_)) && (!(_206701c8c_isIter(_self_))))) {
					_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2064e2693_ExceptionalForwardingExprModel>(_2064e2693_ExceptionalForwardingExprModel{._field_Expr=_718_m}), &__jule_any_type122));
				};
				return;;
			}
		}
		_match_end_216a023bd:;
	};
	static__2067092e4_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
}



inline void _2067022ed_optimizeVar(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204c5319c_Var> _8732_v) {
	if (((*(_8732_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _2065092d1_isNilValidType((*((*_8732_v.alloc)._field_TypeSym))._field_Type)) && _206509017_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_206508115_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _206509622_getNilVar(jule::Any(_8732_v, &__jule_any_type7)), true);
		};
		if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
			jule::Ptr<_204cda982_Type> _969_kind = _20671241d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_8732_v.alloc)._field_TypeSym))._field_Type, (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model);;
			if ((_969_kind != nullptr)) {
				if (_206711ede_isDynamicValidType((*(*(_8732_v))._field_TypeSym.alloc)._field_Type)) {
					_2067110dc_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _20671275e_getDynamicVar(jule::Any(_8732_v, &__jule_any_type7)), _969_kind);
				};
			};
		};
		static__2067092e4_optimizeData(&((*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model), &((*(_self_))._field_data), _self_);
	};
}



inline void _2067025a6_optimizeConditional(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd1d1d_Conditional> _10840_c) {
	_206713771_data _1127_alive = _206713771_data{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)};;
	_20671482c_loadCheckpoint(&_1127_alive, _2067142dd_getCheckpoint((*(_self_))._field_data.ptr()));
	_206713276_dataCheckpoint _1167_checkpoint = _2067142dd_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_10840_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216a128a6:;
		if (it != expr_end) {
			jule::Ptr<_204bd1603_If> _11815_elif = *it;
			{
				static__20670968a_optimizeConditionalData(&((*(_11815_elif))._field_Expr), &((*_self_.alloc)._field_data), _self_);
				_206705d07_optimizeChild(_self_, (*_11815_elif.alloc)._field_Scope);
				_206714057_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
				_20671482c_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _1167_checkpoint);
			}
			_iter_next_216a128a6:;
			++it;
			goto _iter_begin_216a128a6;
		}
		_iter_end_216a128a6:;
	};
	if (((*_10840_c.alloc)._field_Default != nullptr)) {
		_206705d07_optimizeChild(_self_, (*(*(_10840_c))._field_Default.alloc)._field_Scope);
		_206714057_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
	};
	_20671482c_loadCheckpoint((*(_self_))._field_data, _206714574_getMutCheckpoint(&_1127_alive));
	if ((!(_206719d4e_Cond))) {
		return;;
	};
	jule::Bool _1357_constCase = false;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216a16613:;
		if (it != expr_end) {
			jule::I32 _1388_i = it - expr->begin();
			jule::Ptr<_204bd1603_If> _13815_elif = *it;
			{
				if ((!(_206706643_isConstantValidConditionalCase(&(_13815_elif))))) {
					goto _iter_next_216a16613;
				};
				_1357_constCase=true;
				((*(_10840_c))._field_Elifs).mut_slice(0LL, _1388_i);;
				(*_10840_c.alloc)._field_Default=jule::new_ptr<_204bd1900_Else>(_204bd1900_Else{._field_Scope=(*(_13815_elif))._field_Scope});
				goto _iter_end_216a16613;
			}
			_iter_next_216a16613:;
			++it;
			_1388_i++;
			goto _iter_begin_216a16613;
		}
		_iter_end_216a16613:;
	};
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_204bd1603_If>* _1557_i = (&((*_10840_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_204bd1603_If>* _1563_end = (&((*_10840_c.alloc)._field_Elifs[((*_10840_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1557_i <= _1563_end); (_1557_i)++) {
		{
			{
				if (_20670705b_isUnreachableConditionalCase(&((*(_1557_i))))) {
					(*(_1557_i))=nullptr;
				};
			};
		}
	_iter_next_216a19c21:;
	}
	_iter_end_216a19c21:;;
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1357_constCase))) {
		return;;
	};
	jule::I32 _1747_only = -1LL;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216a1b7e4:;
		if (it != expr_end) {
			jule::I32 _1757_j = it - expr->begin();
			jule::Ptr<_204bd1603_If> _17510_elif = *it;
			{
				if ((_17510_elif != nullptr)) {
					if ((_1747_only != -1LL)) {
						return;;
					};
					_1747_only=_1757_j;
				};
			}
			_iter_next_216a1b7e4:;
			++it;
			_1757_j++;
			goto _iter_begin_216a1b7e4;
		}
		_iter_end_216a1b7e4:;
	};
	if ((_1747_only != -1LL)) {
		_206701572_setCurrentStmt(_self_, jule::Any((*((*_10840_c.alloc)._field_Elifs[_1747_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _2067029c4_buildDefaultConstantTrueCase(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd651a_Case> _19149_case, jule::I32* _19173_i, jule::Ptr<_204bd59e2_Match>* _19186_m) {
	(*(_19149_case))._field_Exprs=nullptr;
	jule::I32 _1933_start = (*(_19173_i));;
	_julec_label_216a1e3da:;
	for (;;) {
		{
			if (((*((*_19149_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_216a1e385;
			};
			jule::Any *_1999_stmt = &((*((*_19149_case.alloc)._field_Scope))._field_Stmts[((*(*(_19149_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_1999_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_216a212ee:;
					{
						((*(_19173_i)))++;
						if (((*(_19173_i)) >= (*((*(_19186_m))))._field_Cases.len())) {
							(*(_1999_stmt))=jule::Any((*((*((*(_19186_m))))._field_Default))._field_Scope, &__jule_any_type20);
							goto _iter_end_216a1e385;
						};
						_19149_case=(*((*(_19186_m))))._field_Cases[(*(_19173_i))];
						(*(_1999_stmt))=jule::Any((*(_19149_case))._field_Scope, &__jule_any_type20);
					}
				}
				else {
					_case_begin_216a213cb:;
					{
						goto _iter_end_216a1e385;
					}
				}
				_match_end_216a21288:;
			};
		}
	_iter_next_216a1e385:;
	}
	_iter_end_216a1e385:;;
	(*((*(_19186_m))))._field_Default=(*((*(_19186_m))))._field_Cases[_1933_start];
	((*((*(_19186_m))))._field_Cases).mut_slice(0LL, _1933_start);;
}



inline void _206702c7c_optimizeMatch(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd59e2_Match> _21734_m) {
	jule::Uintptr _2187_var = 0LLU;;
	if ((_20671ae0a_Dynamic && (*(_21734_m))._field_TypeMatch)) {
		_2187_var=_20671275e_getDynamicVar((*((*_21734_m.alloc)._field_Expr))._field_Model);
	};
	_206713771_data _2267_alive = _206713771_data{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)};;
	_20671482c_loadCheckpoint(&_2267_alive, _2067142dd_getCheckpoint((*(_self_))._field_data.ptr()));
	_206713276_dataCheckpoint _2307_checkpoint = _2067142dd_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216a25d2b:;
		if (it != expr_end) {
			jule::Ptr<_204bd651a_Case> _23215_case = *it;
			{
				{
					auto expr = &((*(_23215_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216a267bb:;
					if (it != expr_end) {
						jule::Ptr<_204ca2b7a_Data> _23316_expr = *it;
						{
							static__20670968a_optimizeConditionalData(&((*(_23316_expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
						}
						_iter_next_216a267bb:;
						++it;
						goto _iter_begin_216a267bb;
					}
					_iter_end_216a267bb:;
				};
				if ((((*_23215_case.alloc)._field_Exprs.len() == 1LL) && ((*((*_self_.alloc)._field_data))._field_dynamic != nullptr))) {
					jule::Ptr<_204cda982_Type> _2389_kind = _20671241d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_23215_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2389_kind != nullptr)) {
						_2067110dc_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2187_var, _2389_kind);
					} else {
						_20671142d_removeVar((*(*(_self_))._field_data.alloc)._field_dynamic.ptr(), _2187_var);
					};
				};
				_206705d07_optimizeChild(_self_, (*_23215_case.alloc)._field_Scope);
				_206714057_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
				_20671482c_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _2307_checkpoint);
			}
			_iter_next_216a25d2b:;
			++it;
			goto _iter_begin_216a25d2b;
		}
		_iter_end_216a25d2b:;
	};
	if (((*_21734_m.alloc)._field_Default != nullptr)) {
		_206705d07_optimizeChild(_self_, (*(*(_21734_m))._field_Default.alloc)._field_Scope);
		_206714057_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
	};
	_20671482c_loadCheckpoint((*(_self_))._field_data, _206714574_getMutCheckpoint(&_2267_alive));
	if ((!(_206719d4e_Cond))) {
		return;;
	};
	jule::Bool _2607_constCase = false;;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216a2d262:;
		if (it != expr_end) {
			jule::I32 _26312_i = it - expr->begin();
			jule::Ptr<_204bd651a_Case> _26319_case = *it;
			{
				if ((!(_206706c1a_isConstantValidMatchCase(&(_26319_case))))) {
					goto _iter_next_216a2d262;
				};
				_2607_constCase=true;
				_2067029c4_buildDefaultConstantTrueCase(_self_, _26319_case, &(_26312_i), &(_21734_m));
				goto _iter_end_216a2d262;
			}
			_iter_next_216a2d262:;
			++it;
			_26312_i++;
			goto _iter_begin_216a2d262;
		}
		_iter_end_216a2d262:;
	};
	if (((*_21734_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_204bd651a_Case>* _2777_i = (&((*_21734_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_204bd651a_Case>* _2783_end = (&((*_21734_m.alloc)._field_Cases[((*_21734_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2777_i <= _2783_end); (_2777_i)++) {
		{
			{
				if (_2067072e2_isUnreachableMatchCase(&((*(_2777_i))))) {
					(*(_2777_i))=nullptr;
				};
			};
		}
	_iter_next_216a30d9c:;
	}
	_iter_end_216a30d9c:;;
	if ((!(_2607_constCase))) {
		return;;
	};
	jule::I32 _2927_only = -1LL;;
	{
		auto expr = &((*_21734_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216a322aa:;
		if (it != expr_end) {
			jule::I32 _2937_j = it - expr->begin();
			jule::Ptr<_204bd651a_Case> _29310_case = *it;
			{
				if ((_29310_case != nullptr)) {
					if ((_2927_only != -1LL)) {
						return;;
					};
					_2927_only=_2937_j;
				};
			}
			_iter_next_216a322aa:;
			++it;
			_2937_j++;
			goto _iter_begin_216a322aa;
		}
		_iter_end_216a322aa:;
	};
	if ((_2927_only != -1LL)) {
		_206701572_setCurrentStmt(_self_, jule::Any((*((*_21734_m.alloc)._field_Cases[_2927_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _206703035_optimizeRangeIter(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd301c_RangeIter> _30938_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30938_it))._field_KeyA != nullptr))) {
		_206715ec1_pushVar((*((*(_self_))._field_data))._field_boundary, _206717e5c_getBoundaryVar((*((*_30938_it.alloc)._field_Expr))._field_Model), jule::Any((*_30938_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_2067060b0_optimizeChildHard(_self_, (*(_30938_it))._field_Scope);
	if (_20671ab52_Iter) {
		{
			auto &_match_expr{ (*((*(_30938_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_216a36d1a:;
				{
					jule::Ptr<_204b12a0c_CastingExprModel> _3219_cem = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_204b12a0c_CastingExprModel>();;
					jule::Ptr<_204ce3a9a_Prim> _3225_eprim = _204cdd138_Prim((*(_3219_cem))._field_ExprType.ptr());;
					if (((_3225_eprim == nullptr) || (!(_204ce7065_IsStr(_3225_eprim.ptr()))))) {
						goto _match_end_216a36c82;
					};
					jule::Ptr<_204ce8099_Slc> _3269_s = _204cde18e_Slc((*_3219_cem.alloc)._field_Type.ptr());;
					if ((_3269_s == nullptr)) {
						goto _match_end_216a36c82;
					};
					jule::Ptr<_204ce3a9a_Prim> _3305_prim = _204cdd138_Prim((*(_3269_s))._field_Elem.ptr());;
					if ((_3305_prim == nullptr)) {
						goto _match_end_216a36c82;
					};
					{
						
						if (_204ce54c5_IsU8(_3305_prim.ptr())) {
							_case_begin_216a3a77a:;
							{
								(*_30938_it.alloc)._field_Expr=(*_3219_cem.alloc)._field_Expr;
							}
						}
						else if (_204ce4ea8_IsI32(_3305_prim.ptr())) {
							_case_begin_216a3a956:;
							{
								static__2067092e4_optimizeData(&((*((*_3219_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
								_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_206506498_StrRuneIter>(_206506498_StrRuneIter{._field_Expr=(*_3219_cem.alloc)._field_Expr, ._field_Base=_30938_it}), &__jule_any_type123));
								return;;
							}
						}
						_match_end_216a3a58d:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_216a36853:;
				{
					jule::Ptr<_204b13788_SliceExprModel> _3519_slc = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_204b13788_SliceExprModel>();;
					jule::Ptr<_204cea3ba_Arr> _3529_arr = jule::new_ptr<_204cea3ba_Arr>(_204cea3ba_Arr{._field_Auto=false, ._field_N=(*(_3519_slc))._field_Elems.len(), ._field_Elem=(*_3519_slc.alloc)._field_ElemType});;
					(*((*((*_30938_it.alloc)._field_Expr))._field_Type))._field_Kind=jule::Trait(_3529_arr, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27);
					(*(*(_30938_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_204b166c0_ArrayExprModel>(_204b166c0_ArrayExprModel{._field_Kind=_3529_arr, ._field_Elems=(*_3519_slc.alloc)._field_Elems}), &__jule_any_type88);
				}
			}
			_match_end_216a36c82:;
		};
	};
	static__2067092e4_optimizeData(&((*((*_30938_it.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
}



inline void _2067032dd_optimizeWhileIter(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd25c1_WhileIter> _36638_it) {
	static__2067092e4_optimizeData(&((*(_36638_it))._field_Expr), &((*(_self_))._field_data), _self_);
	_206705a4e_optimizeStmt(_self_, (*_36638_it.alloc)._field_Next);
	_2067060b0_optimizeChildHard(_self_, (*_36638_it.alloc)._field_Scope);
}



inline jule::Bool _20670362e_substr(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _37227_a) {
	if (((*((*(_37227_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37227_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_216a45b92:;
			{
				jule::Ptr<_204b1502b_SlicingExprModel> _3788_sem = (*((*(_37227_a))._field_Right))._field_Model.unsafe_cast_ptr<_204b1502b_SlicingExprModel>();;
				if (_204d6da7b_EqualModels((*((*(_37227_a))._field_Left))._field_Model, (*(_3788_sem))._field_Expr)) {
					_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_206505222_MutSlicingExprModel>(_206505222_MutSlicingExprModel{._field_Token=(*_3788_sem.alloc)._field_Token, ._field_Expr=(*_3788_sem.alloc)._field_Expr, ._field_Left=(*_3788_sem.alloc)._field_Left, ._field_Right=(*_3788_sem.alloc)._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_216a45b1a:;
	};
	return false;;
}



inline jule::Bool _206703970_strAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _39230_a) {
	if ((!(_20671a091_Str))) {
		return false;;
	};
	jule::Ptr<_204ce3a9a_Prim> _3963_lp = _204cdd138_Prim((*((*(_39230_a))._field_Left))._field_Type.ptr());;
	if (((_3963_lp == nullptr) || (!(_204ce7065_IsStr(_3963_lp.ptr()))))) {
		return false;;
	};
	return _20670362e_substr(_self_, _39230_a);;
}



inline jule::Bool _206703cb1_sliceAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _40332_a) {
	if (((!(_20671a338_Slice)) || (_204cde18e_Slc((*((*(_40332_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _20670362e_substr(_self_, _40332_a);;
}



inline void _206704069_optimizePostfix(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd476b_Postfix> _41136_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_206717610_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41136_postfix))._field_Expr);
	};
	static__2067092e4_optimizeData(&((*(_41136_postfix))._field_Expr), &((*(_self_))._field_data), _self_);
}



inline jule::Bool _2067043aa_cmplxAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign>* _41833_assign) {
	if ((((!(_20671baed_StdMathCmplx)) || ((*((*((*(_41833_assign))))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) || ((*(_2056ae454_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _4227_s = _204cde6ab_Struct((*((*((*(_41833_assign))))._field_Left))._field_Type.ptr());;
	if (((_4227_s == nullptr) || (_4227_s != (*((*(_2056ae454_ProgramMeta))._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_41833_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_216a52d7a:;
			{
				goto _match_end_216a53b28;
			}
		}
		else {
			_case_begin_216a53b8e:;
			{
				return false;;
			}
		}
		_match_end_216a53b28:;
	};
	jule::Ptr<_204b133ae_FnCallExprModel> _4327_fc = (*((*((*(_41833_assign))))._field_Right))._field_Model.cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31);;
	{
		auto &_match_expr{ (*(_4327_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_216a54420:;
			{
				goto _match_end_216a54d27;
			}
		}
		else {
			_case_begin_216a54d8d:;
			{
				return false;;
			}
		}
		_match_end_216a54d27:;
	};
	jule::Ptr<_204b15e50_StructSubIdentExprModel> _4397_siem = (*(_4327_fc))._field_Expr.cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
	if ((!(_204d6da7b_EqualModels((*(*((*(_41833_assign))))._field_Left.alloc)._field_Model, (*((*(_4397_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4327_fc))._field_Func };
		
		if (_match_expr == (*((*(_2056ae454_ProgramMeta))._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_216a56b81:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2056ae454_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*(_2056ae454_ProgramMeta))._field_MathCmplx))._field_CmplxSub) {
			_case_begin_216a56be7:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2056ae454_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*(*(_2056ae454_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMul) {
			_case_begin_216a56c6e:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2056ae454_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*(*(_2056ae454_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDiv) {
			_case_begin_216a56ce6:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_2056ae454_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_216a55d06:;
			{
				return false;;
			}
		}
		_match_end_216a56aa4:;
	};
	(*(_4397_siem))._field_Method=(*_4327_fc.alloc)._field_Func;
	_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4327_fc, &__jule_any_type31), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)}), &__jule_any_type22));
	return true;;
}



inline void _206704663_optimizeAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd4c22_Assign> _46035_assign) {
	if ((((*((*(_46035_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _204d6da7b_EqualModels((*((*_46035_assign.alloc)._field_Left))._field_Model, (*((*_46035_assign.alloc)._field_Right))._field_Model))) {
		_206701770_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		if (_2067178c9_isBoundaryRiskyType((*((*(_46035_assign))._field_Left))._field_Type)) {
			_206717610_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_46035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
		if (_206509017_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Right))._field_Model)) {
			if (_2065092d1_isNilValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				;
				_206508115_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _206509622_getNilVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_206508b4e_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Left))._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
		jule::Ptr<_204cda982_Type> _4848_kind = _20671241d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_46035_assign))._field_Right))._field_Type, (*(*(_46035_assign))._field_Right.alloc)._field_Model);;
		if ((_4848_kind != nullptr)) {
			if (_206711ede_isDynamicValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				_2067110dc_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _20671275e_getDynamicVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), _4848_kind);
			};
		} else {
			_206711bd1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_46035_assign.alloc)._field_Left))._field_Model);
		};
	};
	{
		
		if (_206703970_strAssign(_self_, _46035_assign) || _206703cb1_sliceAssign(_self_, _46035_assign) || _2067043aa_cmplxAssign(_self_, &(_46035_assign))) {
			_case_begin_216a63121:;
			{
				return;;
			}
		}
		_match_end_216a64cc1:;
	};
	static__2067092e4_optimizeData(&((*((*(_46035_assign))._field_Left))._field_Model), &((*(_self_))._field_data), _self_);
	static__2067092e4_optimizeData(&((*((*_46035_assign.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data), _self_);
	{
		auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(47LLU) || _match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU) || _match_expr == static_cast<jule::U32>(40LLU) || _match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_216a6db87:;
			{
				if (((!(_20671916c_Math)) || (_204cde6ab_Struct((*(*(_46035_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_216a6db10;
				};
				jule::U32 _5124_oldId;
				jule::Str _51211_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*((*_46035_assign.alloc)._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_46035_assign))._field_Op.alloc)._field_Kind;
					_5124_oldId = ___jule_assign_arg;
					_51211_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(40LLU)) {
						_case_begin_216a72581:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(60LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(41LLU)) {
						_case_begin_216a721c9:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(61LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_216a72240:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_216a722a6:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_216a7231c:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_216a72383:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(47LLU)) {
						_case_begin_216a7240a:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(67LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_216a7013e:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:536:5"));;
						}
					}
					_match_end_216a72086:;
				};
				jule::Ptr<_204b113ce_BinaryExprModel> _5388_b = jule::new_ptr<_204b113ce_BinaryExprModel>(_204b113ce_BinaryExprModel{._field_Left=(*_46035_assign.alloc)._field_Left, ._field_Right=(*_46035_assign.alloc)._field_Right, ._field_Op=(*_46035_assign.alloc)._field_Op});;
				jule::Any _5438_model = jule::Any(_5388_b, &__jule_any_type114);;
				static__2067092e4_optimizeData(&(_5438_model), &((*_self_.alloc)._field_data), _self_);
				if (((!__jule_any_type114_compare(_5438_model, _5388_b)) || ((*(_5388_b))._field_Op != (*_46035_assign.alloc)._field_Op))) {
					if (((*((*_46035_assign.alloc)._field_Op))._field_Id == static_cast<jule::U32>(67LLU))) {
						_206701770_removeCurrent(_self_);
						return;;
					};
					(*_46035_assign.alloc)._field_Right=jule::new_ptr<_204b10dd4_OperandExprModel>((*(*(_46035_assign))._field_Right.alloc));
					(*(_5388_b))._field_Op=jule::new_ptr<_204a14216_Token>((*(*(_5388_b))._field_Op.alloc));
					(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_46035_assign))._field_Right.alloc)._field_Model=_5438_model;
					return;;
				};
				(*((*_46035_assign.alloc)._field_Op))._field_Id=_5124_oldId;
				(*(*(_46035_assign))._field_Op.alloc)._field_Kind=_51211_oldKind;
				return;;
			}
		}
		_match_end_216a6db10:;
	};
	if (_206718d70_Append) {
		{
			auto &_match_expr{ (*((*(_46035_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type24) {
				_case_begin_216a80814:;
				{
					jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> _5699_m = (*((*(_46035_assign))._field_Right))._field_Model.unsafe_cast_ptr<_204b181e9_BuiltinAppendCallExprModel>();;
					if ((!(_20670eb24_areSameLvalueExprModel(&((*(*(_46035_assign))._field_Left.alloc)._field_Model), &((*(_5699_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5699_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_216a835b4:;
							{
								_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_206505be5_PushToSliceExprModel>(_206505be5_PushToSliceExprModel{._field_Dest=(*(_5699_m))._field_Dest, ._field_Elems=(*(_5699_m))._field_Elements.unsafe_cast_ptr<_204b13788_SliceExprModel>()}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_216a82607:;
							{
								_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2065060be_AppendToSliceExprModel>(_2065060be_AppendToSliceExprModel{._field_Dest=(*(*(_46035_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*(_5699_m))._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_216a82591:;
					};
				}
			}
			_match_end_216a8078c:;
		};
	};
}



inline void _2067049c6_normalizeAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _59437_assign, jule::Ptr<_204b169bc_TupleExprModel>* _59470_tup) {
	jule::I32 _5957_i = 0LL;;
	while ((_5957_i < (*((*(_59437_assign))))._field_Left.len())) {
		{
			jule::Ptr<_204ca2b7a_Data> _5978_l = (*((*(_59437_assign))))._field_Left[_5957_i];;
			jule::Ptr<_204ca2b7a_Data> _5988_r = (*((*(_59470_tup))))._field_Datas[_5957_i];;
			if (((_5978_l == nullptr) && (_5988_r != nullptr))) {
				jule::I32 _6065_offset = ((*(_self_))._field_i + 1LL);;
				(*((*_self_.alloc)._field_scope))._field_Stmts=_216a8c59b_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6065_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5988_r, &__jule_any_type22); __jule_collection; }));
				goto _julec_label_216a96a7d;
			};
			if (((_5978_l != nullptr) && (_5988_r != nullptr))) {
				{
					
					if (_204ca35b5_IsConst(_5988_r)) {
						_case_begin_216a8d47b:;
						{
							jule::I32 _6186_offset = ((*(_self_))._field_i + 1LL);;
							(*((*_self_.alloc)._field_scope))._field_Stmts=_216a8c59b_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6186_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_204bd4c22_Assign>(_204bd4c22_Assign{._field_Left=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*_5978_l.alloc)._field_Type, ._field_Model=(*_5978_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*_5988_r.alloc)._field_Type, ._field_Model=(*_5988_r.alloc)._field_Model}), ._field_Op=(*((*(_59437_assign))))._field_Op}), &__jule_any_type41); __jule_collection; }));
							goto _julec_label_216a96a7d;
						}
					}
					else if (_204d6da7b_EqualModels((*_5978_l.alloc)._field_Model, (*_5988_r.alloc)._field_Model)) {
						_case_begin_216a8d4e2:;
						{
							goto _julec_label_216a96a7d;
						}
					}
					_match_end_216a97441:;
				};
			};
			(_5957_i)++;
			goto _iter_next_216a8a775;
			_julec_label_216a96a7d:;
			(*((*(_59437_assign))))._field_Left=jule::append((*((*(_59437_assign))))._field_Left.slice(0LL, _5957_i),(*((*(_59437_assign))))._field_Left.slice((_5957_i + 1LL)));
			(*((*(_59470_tup))))._field_Datas=jule::append((*((*(_59470_tup))))._field_Datas.slice(0LL, _5957_i),(*((*(_59470_tup))))._field_Datas.slice((_5957_i + 1LL)));
		}
	_iter_next_216a8a775:;
	}
	_iter_end_216a8a775:;;
}



inline jule::Bool _206704dc2_tryOptimizeSwap(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _64237_assign, jule::Ptr<_204b169bc_TupleExprModel>* _64270_tup) {
	jule::Bool __jule_func_result = false;
	if ((((((*((*(_64270_tup))))._field_Datas.len() != 2LL) || ((*((*(_64237_assign))))._field_Left.len() != 2LL)) || ((*((*(_64237_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_64237_assign))))._field_Left[1LL] == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((!(_204d6da7b_EqualModels((*((*((*(_64237_assign))))._field_Left[0LL]))._field_Model, (*((*((*(_64270_tup))))._field_Datas[1LL]))._field_Model))) || (!(_204d6da7b_EqualModels((*((*((*(_64237_assign))))._field_Left[1LL]))._field_Model, (*((*((*(_64270_tup))))._field_Datas[0LL]))._field_Model))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_206503e79_SwapExprModel> _6527_model = jule::new_ptr<_206503e79_SwapExprModel>(_206503e79_SwapExprModel{._field_Left=(*((*(_64237_assign))))._field_Left[0LL], ._field_Right=(*((*(_64237_assign))))._field_Left[1LL]});;
	_206701572_setCurrentStmt(_self_, jule::Any(_6527_model, &__jule_any_type127));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _206705235_splitAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _66433_assign, jule::Ptr<_204b169bc_TupleExprModel>* _66466_tup) {
	{
		auto expr = &((*((*(_66466_tup))))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216aa870a:;
		if (it != expr_end) {
			jule::I32 _6707_i = it - expr->begin();
			{
				jule::Ptr<_204ca2b7a_Data> _6714_r = (*((*(_66466_tup))))._field_Datas[_6707_i];;
				jule::Ptr<_204ca2b7a_Data> _6724_l = (*((*(_66433_assign))))._field_Left[_6707_i];;
				if ((_6724_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6724_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_216aaa025:;
							{
								goto _match_end_216aaa2de;
							}
						}
						else {
							_case_begin_216aaa355:;
							{
								return;;
							}
						}
						_match_end_216aaa2de:;
					};
				};
				if ((_6714_r != nullptr)) {
					{
						auto &_match_expr{ (*(_6714_r))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_216aaaaa3:;
							{
								goto _match_end_216aaad5b;
							}
						}
						else {
							_case_begin_216aaadc2:;
							{
								return;;
							}
						}
						_match_end_216aaad5b:;
					};
				};
			}
			_iter_next_216aa870a:;
			++it;
			_6707_i++;
			goto _iter_begin_216aa870a;
		}
		_iter_end_216aa870a:;
	};
	jule::I32 _6913_z = (*(_self_))._field_i;;
	jule::I32 _6927_i = 0LL;;
	_julec_label_216aa84c9:;
	while ((_6927_i < (*((*(_66433_assign))))._field_Left.len())) {
		{
			jule::Ptr<_204ca2b7a_Data> _6958_l = (*((*(_66433_assign))))._field_Left[_6927_i];;
			if ((_6958_l == nullptr)) {
				(_6927_i)++;
				goto _iter_next_216aab840;
			};
			{
				auto &_match_expr{ (*(_6958_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_216aaced4:;
					{
						goto _match_end_216aaca50;
					}
				}
				else {
					_case_begin_216aacab6:;
					{
						(_6927_i)++;
						goto _iter_next_216aab840;
					}
				}
				_match_end_216aaca50:;
			};
			jule::Ptr<_204c5319c_Var> _7074_v = (*(_6958_l))._field_Model.cast_ptr<_204c5319c_Var>(&__jule_any_type7);;
			{
				auto expr = &((*((*(_66433_assign))))._field_Left);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_216aadaa6:;
				if (it != expr_end) {
					jule::I32 _7108_j = it - expr->begin();
					jule::Ptr<_204ca2b7a_Data> _71011_jl = *it;
					{
						while ((((_7108_j != _6927_i) && (_71011_jl != nullptr)) && (__jule_any_type7_compare((*(_71011_jl))._field_Model, _7074_v)))) {
							{
								(_6927_i)++;
								goto _iter_next_216aab840;
							}
						_iter_next_216aae4be:;
						}
						_iter_end_216aae4be:;;
					}
					_iter_next_216aadaa6:;
					++it;
					_7108_j++;
					goto _iter_begin_216aadaa6;
				}
				_iter_end_216aadaa6:;
			};
			{
				auto expr = &((*((*(_66466_tup))))._field_Datas);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_216aae216:;
				if (it != expr_end) {
					jule::I32 _7178_j = it - expr->begin();
					jule::Ptr<_204ca2b7a_Data> _71711_jl = *it;
					{
						while ((((_7178_j != _6927_i) && (_71711_jl != nullptr)) && (__jule_any_type7_compare((*(_71711_jl))._field_Model, _7074_v)))) {
							{
								(_6927_i)++;
								goto _iter_next_216aab840;
							}
						_iter_next_216ab069b:;
						}
						_iter_end_216ab069b:;;
					}
					_iter_next_216aae216:;
					++it;
					_7178_j++;
					goto _iter_begin_216aae216;
				}
				_iter_end_216aae216:;
			};
			jule::Ptr<_204ca2b7a_Data> _7268_r = (*((*(_66466_tup))))._field_Datas[_6927_i];;
			jule::I32 _7314_offset = ((*_self_.alloc)._field_i + 1LL);;
			(*((*_self_.alloc)._field_scope))._field_Stmts=_216a8c59b_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _7314_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_204bd4c22_Assign>(_204bd4c22_Assign{._field_Left=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*_6958_l.alloc)._field_Type, ._field_Model=(*_6958_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_7268_r))._field_Type, ._field_Model=(*_7268_r.alloc)._field_Model}), ._field_Op=(*((*(_66433_assign))))._field_Op}), &__jule_any_type41); __jule_collection; }));
			(*((*(_66433_assign))))._field_Left=jule::append((*((*(_66433_assign))))._field_Left.slice(0LL, _6927_i),(*((*(_66433_assign))))._field_Left.slice((_6927_i + 1LL)));
			(*((*(_66466_tup))))._field_Datas=jule::append((*((*(_66466_tup))))._field_Datas.slice(0LL, _6927_i),(*((*(_66466_tup))))._field_Datas.slice((_6927_i + 1LL)));
		}
	_iter_next_216aab840:;
	}
	_iter_end_216aab840:;;
	(*_self_.alloc)._field_i=_6913_z;
}



inline void _2067054dd_optimizeMultiAssign(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd52a5_MultiAssign> _74540_assign) {
	jule::Ptr<_204b169bc_TupleExprModel> _7507_tup = static_cast<jule::Ptr<_204b169bc_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_74540_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_216ab6383:;
			{
				_7507_tup=(*(_74540_assign))._field_Right.unsafe_cast_ptr<_204b169bc_TupleExprModel>();
			}
		}
		_match_end_216ab630b:;
	};
	if ((_20671a5e1_Assign && (_7507_tup != nullptr))) {
		_2067049c6_normalizeAssign(_self_, &(_74540_assign), &(_7507_tup));
		_206705235_splitAssign(_self_, &(_74540_assign), &(_7507_tup));
		_206704dc2_tryOptimizeSwap(_self_, &(_74540_assign), &(_7507_tup));
		if (((*(_74540_assign))._field_Left.len() == 0LL)) {
			_206701770_removeCurrent(_self_);
			return;;
		};
		if (((*(_74540_assign))._field_Left.len() == 1LL)) {
			jule::Ptr<_204ca2b7a_Data> _7849_l = (*(_74540_assign))._field_Left[0LL];;
			jule::Ptr<_204ca2b7a_Data> _7859_r = (*(_7507_tup))._field_Datas[0LL];;
			_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_204bd4c22_Assign>(_204bd4c22_Assign{._field_Left=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_7849_l))._field_Type, ._field_Model=(*_7849_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_204b10dd4_OperandExprModel>(_204b10dd4_OperandExprModel{._field_Type=(*(_7859_r))._field_Type, ._field_Model=(*_7859_r.alloc)._field_Model}), ._field_Op=(*_74540_assign.alloc)._field_Op}), &__jule_any_type41));
			((*_self_.alloc)._field_i)--;
			return;;
		};
	};
	_206713276_dataCheckpoint _8177_checkpoint = _2067142dd_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*(_74540_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216abc378:;
		if (it != expr_end) {
			jule::I32 _8198_i = it - expr->begin();
			jule::Ptr<_204ca2b7a_Data> _81915_l = *it;
			{
				if ((_81915_l != nullptr)) {
					if (((*(*(_self_))._field_data.alloc)._field_boundary != nullptr)) {
						if (_2067178c9_isBoundaryRiskyType((*_81915_l.alloc)._field_Type)) {
							_206717610_possibleBoundaryRemove(&(_8177_checkpoint._field_boundary), (*_81915_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_7507_tup != nullptr) && _206509017_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_7507_tup.alloc)._field_Datas[_8198_i]))._field_Model))) {
							if (_2065092d1_isNilValidType((*_81915_l.alloc)._field_Type)) {
								;
								_206508115_pushVar(_8177_checkpoint._field_nils.ptr(), _206509622_getNilVar((*_81915_l.alloc)._field_Model), true);
							};
						} else {
							_206508b4e_possibleNilRemove(&(_8177_checkpoint._field_nils), (*_81915_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_7507_tup != nullptr))) {
						jule::Ptr<_204cda982_Type> _83710_kind = _20671241d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_7507_tup.alloc)._field_Datas[_8198_i]))._field_Type, (*((*(_7507_tup))._field_Datas[_8198_i]))._field_Model);;
						if ((_83710_kind != nullptr)) {
							if (_206711ede_isDynamicValidType((*_81915_l.alloc)._field_Type)) {
								_2067110dc_pushVar(_8177_checkpoint._field_dynamic, _20671275e_getDynamicVar((*_81915_l.alloc)._field_Model), _83710_kind);
							};
						} else {
							_206711bd1_possibleDynamicRemove(&(_8177_checkpoint._field_dynamic), (*_81915_l.alloc)._field_Model);
						};
					};
					static__2067092e4_optimizeData(&((*_81915_l.alloc)._field_Model), &((*_self_.alloc)._field_data), _self_);
				};
			}
			_iter_next_216abc378:;
			++it;
			_8198_i++;
			goto _iter_begin_216abc378;
		}
		_iter_end_216abc378:;
	};
	static__2067092e4_optimizeData(&((*_74540_assign.alloc)._field_Right), &((*_self_.alloc)._field_data), _self_);
	_20671482c_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _8177_checkpoint);
}



inline void _206705796_optimizeRet(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd70a9_RetSt> _85632_r) {
	static__2067092e4_optimizeData(&((*(_85632_r))._field_Expr), &((*(_self_))._field_data), _self_);
	if ((!(_20671a899_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_85632_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_216ac6c45:;
			{
				goto _match_end_216ac6d00;
			}
		}
		else {
			_case_begin_216ac6d66:;
			{
				return;;
			}
		}
		_match_end_216ac6d00:;
	};
	jule::Ptr<_204b133ae_FnCallExprModel> _8707_fc = (*_85632_r.alloc)._field_Expr.cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31);;
	if (((((!((*((*((*(_8707_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*(_8707_fc))._field_Except == nullptr)) || ((*((*(_8707_fc))._field_Except))._field_Stmts.len() != 1LL)) || (!(_2056a8dee_IsForwarded(&((*(_8707_fc))._field_Except)))))) {
		return;;
	};
	_206701572_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2064e2693_ExceptionalForwardingExprModel>(_2064e2693_ExceptionalForwardingExprModel{._field_Expr=_8707_fc}), &__jule_any_type122));
}



inline void _206705a4e_optimizeStmt(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Any _88033_stmt) {
	{
		auto &_match_expr{ _88033_stmt };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_216aca287:;
			{
				_2067060b0_optimizeChildHard(_self_, _88033_stmt.unsafe_cast_ptr<_204bd11d5_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_216aca012:;
			{
				_206702045_optimizeData(_self_, _88033_stmt.unsafe_cast_ptr<_204ca2b7a_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_216aca320:;
			{
				_2067022ed_optimizeVar(_self_, _88033_stmt.unsafe_cast_ptr<_204c5319c_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_216aca3b9:;
			{
				_2067025a6_optimizeConditional(_self_, _88033_stmt.unsafe_cast_ptr<_204bd1d1d_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_216aca430:;
			{
				_206703035_optimizeRangeIter(_self_, _88033_stmt.unsafe_cast_ptr<_204bd301c_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_216aca496:;
			{
				_2067032dd_optimizeWhileIter(_self_, _88033_stmt.unsafe_cast_ptr<_204bd25c1_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_216aca51d:;
			{
				_2067060b0_optimizeChildHard(_self_, (*(_88033_stmt.unsafe_cast_ptr<_204bd211a_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_216aca595:;
			{
				_206704663_optimizeAssign(_self_, _88033_stmt.unsafe_cast_ptr<_204bd4c22_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_216aca61c:;
			{
				_2067054dd_optimizeMultiAssign(_self_, _88033_stmt.unsafe_cast_ptr<_204bd52a5_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_216aca694:;
			{
				_206702c7c_optimizeMatch(_self_, _88033_stmt.unsafe_cast_ptr<_204bd59e2_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_216aca71b:;
			{
				_206705796_optimizeRet(_self_, _88033_stmt.unsafe_cast_ptr<_204bd70a9_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_216aca793:;
			{
				_206704069_optimizePostfix(_self_, _88033_stmt.unsafe_cast_ptr<_204bd476b_Postfix>());
			}
		}
		_match_end_216aca133:;
	};
}



inline void _206705d07_optimizeChild(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd11d5_Scope> _91034_child) {
	jule::Ptr<_206700bd1_scopeOptimizer> _9117_so = static__2067012b9_new(_91034_child);;
	(*(_9117_so))._field_parent=_self_;
	(*_9117_so.alloc)._field_data=(*(_self_))._field_data;
	_2067062ad_optimize(_9117_so);
}



inline void _2067060b0_optimizeChildHard(jule::Ptr<_206700bd1_scopeOptimizer> _self_, jule::Ptr<_204bd11d5_Scope> _94638_child) {
	_206713771_data _9497_alive = _206713771_data{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)};;
	_20671482c_loadCheckpoint(&_9497_alive, _2067142dd_getCheckpoint((*(_self_))._field_data.ptr()));
	_206705d07_optimizeChild(_self_, _94638_child);
	_206714057_removeDeads(&_9497_alive, &((*_self_.alloc)._field_data));
	_20671482c_loadCheckpoint((*(_self_))._field_data, _206714574_getMutCheckpoint(&_9497_alive));
}



inline void _2067062ad_optimize(jule::Ptr<_206700bd1_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_206705a4e_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_216ad5869:;
	}
	_iter_end_216ad5869:;;
}








inline jule::Bool _2067084e1_exprOptimizer_eq(_2067084e1_exprOptimizer *_self_, _2067084e1_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector) &&
		(_self_->_field_scopeOpt == _self_->_field_scopeOpt);
}

inline void static__206708a1e_optimize(jule::Any* _2326_model) {
	static__2067092e4_optimizeData(_2326_model, &(_206712e13_emptyData), nullptr);
}



inline jule::Ptr<_2067084e1_exprOptimizer> static__206708e4d_new(jule::Any* _2721_model, jule::Ptr<_206713771_data>* _2750_d, jule::Ptr<_206700bd1_scopeOptimizer> _2764_s) {
	return jule::new_ptr<_2067084e1_exprOptimizer>(_2067084e1_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2721_model)), ._field_data=(*(_2750_d)), ._field_inspector=static__2056a74e6_New(), ._field_scopeOpt=_2764_s});;
}



inline void static__2067092e4_optimizeData(jule::Any* _3630_model, jule::Ptr<_206713771_data>* _3659_d, jule::Ptr<_206700bd1_scopeOptimizer> _3673_s) {
	if (_20683551e_exprEnabled) {
		jule::Ptr<_2067084e1_exprOptimizer> _398_exop = static__206708e4d_new(_3630_model, _3659_d, _3673_s);;
		_20670e31b_do(_398_exop.ptr());
	};
}



inline void static__20670968a_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_206713771_data>* _4770_d, jule::Ptr<_206700bd1_scopeOptimizer> _4784_s) {
	if ((!(_20683551e_exprEnabled))) {
		return;;
	};
	jule::Ptr<_2067084e1_exprOptimizer> _527_exop = static__206708e4d_new(_4741_model, _4770_d, _4784_s);;
	{
		auto &_match_expr{ (*(_4741_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_216ae5648:;
			{
				goto _match_end_216ae5406;
			}
		}
		else {
			_case_begin_216ae57ad:;
			{
				_20670e31b_do(_527_exop.ptr());
				return;;
			}
		}
		_match_end_216ae5406:;
	};
	jule::Bool _677_check = true;;
	jule::Ptr<jule::Bool> _687__check = ((jule::Ptr<jule::Bool>)((&(_677_check))));;
	_2056a8173_Inspect((*(_527_exop))._field_inspector.ptr(), &((*((*_527_exop.alloc)._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_216ae777c, jule::Ptr<__jule_anon_216ae777c_ctx>::make(__jule_anon_216ae777c_ctx{._687__check=_687__check,._527_exop=_527_exop}).as<jule::Uintptr>(), __jule_anon_216ae777c_ctx_handler));
}



inline jule::Bool _2067099cb_selfCmpCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _10128_m) {
	if (((_204cdd138_Prim((*((*((*(_10128_m))))._field_Left))._field_Type.ptr()) != nullptr) && _204ba20da_IsFloat((*(_204cdd138_Prim((*((*((*(_10128_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_204d6da7b_EqualModels((*((*((*(_10128_m))))._field_Left))._field_Model, (*((*((*(_10128_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_10128_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_216aecce3:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__204b05549_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_216aecd7b:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__204b05549_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_216aebbd2:;
			{
				return false;;
			}
		}
		_match_end_216aecba0:;
	};
}



inline jule::Bool _206709d1c_boolCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _13025_m) {
	jule::Ptr<_204ce3a9a_Prim> _1313_lp = _204cdd138_Prim((*((*((*(_13025_m))))._field_Left))._field_Type.ptr());;
	if (((_1313_lp == nullptr) || (!(_204ce6cce_IsBool(_1313_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_216b025cd:;
			{
				std::swap((*((*(_13025_m))))._field_Left, (*((*(_13025_m))))._field_Right);
			}
		}
		else {
			_case_begin_216b017a8:;
			{
				{
					auto &_match_expr{ (*((*((*(_13025_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_216b00a93:;
						{
							goto _match_end_216b020d3;
						}
					}
					else {
						_case_begin_216b02149:;
						{
							return false;;
						}
					}
					_match_end_216b020d3:;
				};
			}
		}
		_match_end_216b01742:;
	};
	jule::Ptr<_204a9d338_Const> _1487_c = (*((*((*(_13025_m))))._field_Right))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_216b04239:;
			{
				if (_204b06968_ReadBool(_1487_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				} else {
					_204b08052_SetBool(_1487_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_216b042d3:;
			{
				if (_204b06968_ReadBool(_1487_c.ptr())) {
					_204b08052_SetBool(_1487_c, true);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_216b0239c:;
		}
		_match_end_216b041a1:;
	};
	return false;;
}



inline jule::Bool _20670a15d_arrayCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel> _18325_m) {
	jule::Ptr<_204cea3ba_Arr> _1847_arr = _204cdde08_Arr((*((*(_18325_m))._field_Left))._field_Type.ptr());;
	if (((_1847_arr == nullptr) || ((*(_1847_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__204b05549_NewBool(true), &__jule_any_type15);
	return true;;
}



inline jule::Bool _20670a49e_strCond(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _19524_m) {
	jule::Ptr<_204ce3a9a_Prim> _1963_lp = _204cdd138_Prim((*((*((*(_19524_m))))._field_Left))._field_Type.ptr());;
	if (((_1963_lp == nullptr) || (!(_204ce7065_IsStr(_1963_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*((*(_19524_m))))._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*((*(_19524_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_19524_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_216b0cc59:;
			{
				std::swap((*((*(_19524_m))))._field_Left, (*((*(_19524_m))))._field_Right);
			}
		}
		else {
			_case_begin_216b0be34:;
			{
				{
					auto &_match_expr{ (*((*((*(_19524_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_216b0a9b0:;
						{
							goto _match_end_216b0c75e;
						}
					}
					else {
						_case_begin_216b0c7c5:;
						{
							return false;;
						}
					}
					_match_end_216b0c75e:;
				};
			}
		}
		_match_end_216b0bdbd:;
	};
	jule::Ptr<_204a9d338_Const> _2167_c = (*((*((*(_19524_m))))._field_Right))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_19524_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_216b0ca39:;
			{
				if ((_204b06bee_ReadStr(_2167_c.ptr())).empty()) {
					jule::Any _2209_model = jule::Any(jule::new_ptr<_206504353_EmptyCompareExprModel>(_206504353_EmptyCompareExprModel{._field_Expr=(*((*((*(_19524_m))))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2209_model))))));
					goto _match_end_216b0e7b6;
				};
				jule::Any _2278_model = jule::Any(jule::new_ptr<_206504b06_StrCompExprModel>(_206504b06_StrCompExprModel{._field_Left=(*((*((*(_19524_m))))._field_Left))._field_Model, ._field_Right=_2167_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2278_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_216b0e871:;
			{
				if ((_204b06bee_ReadStr(_2167_c.ptr())).empty()) {
					jule::Any _2359_model = jule::Any(jule::new_ptr<_206504353_EmptyCompareExprModel>(_206504353_EmptyCompareExprModel{._field_Expr=(*((*((*(_19524_m))))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2359_model))))));
					goto _match_end_216b0e7b6;
				};
				jule::Any _2428_model = jule::Any(jule::new_ptr<_206504b06_StrCompExprModel>(_206504b06_StrCompExprModel{._field_Left=(*((*((*(_19524_m))))._field_Left))._field_Model, ._field_Right=_2167_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2428_model))))));
			}
		}
		_match_end_216b0e7b6:;
	};
	return true;;
}



inline jule::Bool _20670a7e0_strConcat(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _25326_m) {
	jule::Ptr<_204ce3a9a_Prim> _2543_lp = _204cdd138_Prim((*((*((*(_25326_m))))._field_Left))._field_Type.ptr());;
	if (((_2543_lp == nullptr) || (!(_204ce7065_IsStr(_2543_lp.ptr()))))) {
		return false;;
	};
	if (((*((*((*(_25326_m))))._field_Op))._field_Id != static_cast<jule::U32>(60LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_25326_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_216b1cc03:;
			{
				goto _match_end_216b1d8e6;
			}
		}
		else {
			_case_begin_216b1d95c:;
			{
				return false;;
			}
		}
		_match_end_216b1d8e6:;
	};
	jule::Ptr<_206503bb0_StrConcatExprModel> _2777_model = jule::new_ptr<_206503bb0_StrConcatExprModel>(_206503bb0_StrConcatExprModel{._field_Parts=jule::Slice<jule::Any>(nullptr)});;
	jule::Fn<void,jule::Any> _27811_step;;
	jule::Fn<void,jule::Any> *_2814__step = &(_27811_step);;
	_27811_step=jule::__new_closure<void,jule::Any>((void*)__jule_anon_216b206ea, jule::Ptr<__jule_anon_216b206ea_ctx>::make(__jule_anon_216b206ea_ctx{._2777_model=_2777_model,._2814__step=_2814__step}).as<jule::Uintptr>(), __jule_anon_216b206ea_ctx_handler);
	_27811_step(jule::Any((*(_25326_m)), &__jule_any_type114));
	jule::Any _3067_anyModel = jule::Any(_2777_model, &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_3067_anyModel))))));
	return true;;
}



inline jule::Bool _20670ac96_tryNeutralElement1(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _31135_m, jule::Ptr<_204a9d338_Const> _31166_c, jule::Ptr<_204b10dd4_OperandExprModel>* _31192_nc) {
	if (_204b092ea_IsStr(_31166_c.ptr())) {
		if ((!(_20671a091_Str))) {
			return false;;
		};
		if (((_204b06bee_ReadStr(_31166_c.ptr())).empty() && ((*((*((*(_31135_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_31192_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_20671916c_Math)) || (_204b07738_AsF64(_31166_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_31135_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_216b28824:;
			{
				if (((*(_31192_nc)) == (*((*(_31135_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_31192_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_31166_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_216b2945c:;
			{
				if (_204ba20da_IsFloat((*(_204cdd138_Prim((*((*(_31192_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_216b29319;
				};
				_204b079e1_SetI64(_31166_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_31166_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_216b294c3:;
			{
				(*((*(_self_))._field_model))=(*((*(_31192_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_216b29319:;
	};
	return false;;
}



inline jule::Bool _20670b0d7_tryNeutralElement(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _36134_m) {
	{
		auto &_match_expr{ (*((*((*(_36134_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_216b2d51b:;
			{
				jule::Ptr<_204a9d338_Const> _3658_c = (*((*((*(_36134_m))))._field_Left))._field_Model.unsafe_cast_ptr<_204a9d338_Const>();;
				return _20670ac96_tryNeutralElement1(_self_, _36134_m, _3658_c, &((*((*(_36134_m))))._field_Right));;
			}
		}
		_match_end_216b2d494:;
	};
	{
		auto &_match_expr{ (*((*((*(_36134_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_216b2da38:;
			{
				jule::Ptr<_204a9d338_Const> _3708_c = (*((*((*(_36134_m))))._field_Right))._field_Model.unsafe_cast_ptr<_204a9d338_Const>();;
				return _20670ac96_tryNeutralElement1(_self_, _36134_m, _3708_c, &((*((*(_36134_m))))._field_Left));;
			}
		}
		_match_end_216b2d9c2:;
	};
	return false;;
}



inline void _20670b390_checkBinaryForBoundary(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _37639_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_37639_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_216b31e8c:;
			{
				jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _3828_blc = (*((*((*(_37639_m))))._field_Left))._field_Model.unsafe_cast_ptr<_204b184e6_BuiltinLenCallExprModel>();;
				if ((!(_206717b93_isBoundaryValidType((*((*(_3828_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_37639_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_37639_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_37639_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_37639_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_216b3526a:;
							{
								jule::Ptr<_204a9d338_Const> _39410_c = jule::new_ptr<_204a9d338_Const>((*((*((*((*(_37639_m))))._field_Right))._field_Model.unsafe_cast_ptr<_204a9d338_Const>())));;
								_204b0bac2_Sub(_39410_c, (*(static__204b0500a_NewI64(1LL))));
								_206715ec1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _206717e5c_getBoundaryVar((*((*(_3828_blc))._field_Expr))._field_Model), jule::Any(_39410_c, &__jule_any_type15));
							}
						}
						_match_end_216b351e3:;
					};
					return;;
				};
				_206715ec1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _206717e5c_getBoundaryVar((*((*(_3828_blc))._field_Expr))._field_Model), (*((*((*(_37639_m))))._field_Right))._field_Model);
				return;;
			}
		}
		_match_end_216b31e15:;
	};
	{
		auto &_match_expr{ (*((*((*(_37639_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_216b3260d:;
			{
				jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _4058_blc = (*((*((*(_37639_m))))._field_Right))._field_Model.unsafe_cast_ptr<_204b184e6_BuiltinLenCallExprModel>();;
				if ((!(_206717b93_isBoundaryValidType((*((*(_4058_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_37639_m))))._field_Op))._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_37639_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_37639_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_37639_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_216b3bda9:;
							{
								jule::Ptr<_204a9d338_Const> _41710_c = jule::new_ptr<_204a9d338_Const>((*((*((*((*(_37639_m))))._field_Left))._field_Model.unsafe_cast_ptr<_204a9d338_Const>())));;
								_204b0bac2_Sub(_41710_c, (*(static__204b0500a_NewI64(1LL))));
								_206715ec1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _206717e5c_getBoundaryVar((*((*(_4058_blc))._field_Expr))._field_Model), jule::Any(_41710_c, &__jule_any_type15));
							}
						}
						_match_end_216b3bd32:;
					};
					return;;
				};
				_206715ec1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _206717e5c_getBoundaryVar((*((*(_4058_blc))._field_Expr))._field_Model), (*((*((*(_37639_m))))._field_Left))._field_Model);
				return;;
			}
		}
		_match_end_216b32586:;
	};
}



inline void _20670b648_checkBinaryForNil(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _42834_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _4327_var = _206509622_getNilVar((*((*((*(_42834_m))))._field_Left))._field_Model);;
	if ((_4327_var != 0LLU)) {
		if ((!(_2065092d1_isNilValidType((*(*((*(_42834_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_42834_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_216b42761:;
				{
					_206508115_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4327_var, ((*((*((*(_42834_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_216b426d9:;
		};
		return;;
	};
	_4327_var=_206509622_getNilVar((*((*((*(_42834_m))))._field_Right))._field_Model);
	if ((_4327_var != 0LLU)) {
		if ((!(_2065092d1_isNilValidType((*(*((*(_42834_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_42834_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_216b44e4a:;
				{
					_206508115_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4327_var, ((*((*((*(_42834_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_216b44dc3:;
		};
		return;;
	};
}



inline void _20670b901_shift(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel> _46221_m) {
	jule::I32 _4643_z = _204b98c2a_BitSizeOf((*(_204cdd138_Prim((*((*(_46221_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _4653_s = _204b074a2_AsU64((*((*_46221_m.alloc)._field_Right))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15).ptr());;
	if ((_4653_s >= static_cast<jule::U64>(_4643_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__204b05280_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _4757_model = jule::Any(jule::new_ptr<_20650551e_UnsafeBinaryExprModel>(_20650551e_UnsafeBinaryExprModel{._field_Node=_46221_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4757_model))))));
}



inline jule::Bool _20670bc42_binaryMath(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel>* _48227_m) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204ce3a9a_Prim> _4863_lp = _204cdd138_Prim((*((*((*(_48227_m))))._field_Left))._field_Type.ptr());;
	if ((_4863_lp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_204ce3a9a_Prim> _4903_rp = _204cdd138_Prim((*((*((*(_48227_m))))._field_Right))._field_Type);;
	if ((_4903_rp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*((*(_48227_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_216b4e394:;
			{
				if (((!(_204ba1c99_IsInt((*(_4863_lp))._field_Kind))) || (!(_204d6da7b_EqualModels((*(*((*(_48227_m))))._field_Left.alloc)._field_Model, (*((*((*(_48227_m))))._field_Right))._field_Model))))) {
					goto _match_end_216b4e6c4;
				};
				(*((*(_48227_m))))._field_Op=jule::new_ptr<_204a14216_Token>((*(*((*(_48227_m))))._field_Op.alloc));
				(*(*((*(_48227_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
				(*(*((*(_48227_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*((*((*(_48227_m))))._field_Right))._field_Model=jule::Any(static__204b05280_NewU64(1LLU), &__jule_any_type15);
				jule::Any _5098_model = jule::Any(jule::new_ptr<_20650551e_UnsafeBinaryExprModel>(_20650551e_UnsafeBinaryExprModel{._field_Node=(*(_48227_m))}), &__jule_any_type131);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5098_model))))));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_216b4e77e:;
			{
				if (((!(_204ba1c99_IsInt((*(_4863_lp))._field_Kind))) || (!(_204d6da7b_EqualModels((*(*((*(_48227_m))))._field_Left.alloc)._field_Model, (*((*((*(_48227_m))))._field_Right))._field_Model))))) {
					goto _match_end_216b4e6c4;
				};
				jule::Ptr<_204a9d338_Const> _5188_c = static__204b05280_NewU64(0LLU);;
				(*(_5188_c))._field_Kind=(*(_4863_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_5188_c, &__jule_any_type15);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_216b4e6c4:;
	};
	{
		auto &_match_expr{ (*((*((*(_48227_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_216b4e817:;
			{
				goto _match_end_216b56115;
			}
		}
		else {
			_case_begin_216b5617b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_216b56115:;
	};
	{
		auto &_match_expr{ (*((*((*(_48227_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_216b5728c:;
			{
				jule::Bool _5354_ok;
				jule::U64 _5358_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _20670e75b_checkForBitShiftOpt(&((*((*(_48227_m))))._field_Left), &((*((*(_48227_m))))._field_Right));
					_5354_ok = __jule_assign_result.__jule_result_arg0;
					_5358_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5354_ok) {
					(*((*(_48227_m))))._field_Op=jule::new_ptr<_204a14216_Token>((*(*((*(_48227_m))))._field_Op.alloc));
					(*(*((*(_48227_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
					(*(*((*(_48227_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_204a9d338_Const> _5409_c = (*((*((*(_48227_m))))._field_Right))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
					_204b07c99_SetU64(_5409_c.ptr(), _5358_x);
					_20670b901_shift(_self_, (*(_48227_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_216b57303:;
			{
				jule::Bool _5464_ok;
				jule::U64 _5468_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _20670e75b_checkForBitShiftOpt(&((*((*(_48227_m))))._field_Left), &((*((*(_48227_m))))._field_Right));
					_5464_ok = __jule_assign_result.__jule_result_arg0;
					_5468_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5464_ok) {
					(*((*(_48227_m))))._field_Op=jule::new_ptr<_204a14216_Token>((*(*((*(_48227_m))))._field_Op.alloc));
					(*(*((*(_48227_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
					(*(*((*(_48227_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_204a9d338_Const> _5519_c = (*((*((*(_48227_m))))._field_Right))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
					_204b07c99_SetU64(_5519_c.ptr(), _5468_x);
					_20670b901_shift(_self_, (*(_48227_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_216b57369:;
			{
				jule::Ptr<_204a9d338_Const> _5578_c = (*((*((*(_48227_m))))._field_Right))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
				if ((_204b07738_AsF64(_5578_c.ptr()) == 2LL)) {
					(*((*(_48227_m))))._field_Op=jule::new_ptr<_204a14216_Token>((*(*((*(_48227_m))))._field_Op.alloc));
					(*(*((*(_48227_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(65LLU);
					(*(*((*(_48227_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_204b079e1_SetI64(_5578_c, 1LL);
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_216b56e3a:;
			{
				jule::F64 _5694_s = _204b07738_AsF64((*((*((*(_48227_m))))._field_Right))._field_Model.unsafe_cast_ptr<_204a9d338_Const>().ptr());;
				if ((_5694_s == 0LL)) {
					(*((*(_self_))._field_model))=(*(*((*(_48227_m))))._field_Left.alloc)._field_Model;
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_216b56ea1:;
			{
				_20670b901_shift(_self_, (*(_48227_m)));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_216b56456:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_216b56b82:;
	};
	jule::Any _5837_model = jule::Any(jule::new_ptr<_20650551e_UnsafeBinaryExprModel>(_20650551e_UnsafeBinaryExprModel{._field_Node=(*(_48227_m))}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5837_model))))));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20670beea_binary(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b113ce_BinaryExprModel> _58822_m) {
	if (_20671a091_Str) {
		{
			
			if (_20670a49e_strCond(_self_, &(_58822_m)) || _20670a7e0_strConcat(_self_, &(_58822_m))) {
				_case_begin_216b654dc:;
				{
					goto _julec_label_216b6718c;
				}
			}
			_match_end_216b653cc:;
		};
	};
	if ((_20671b1b3_Array && _20670a15d_arrayCond(_self_, _58822_m))) {
		goto _julec_label_216b6718c;
	};
	if (_206719d4e_Cond) {
		{
			
			if (_206709d1c_boolCond(_self_, &(_58822_m)) || _2067099cb_selfCmpCond(_self_, &(_58822_m))) {
				_case_begin_216b66554:;
				{
					goto _julec_label_216b6718c;
				}
			}
			_match_end_216b66411:;
		};
	};
	if (_20670b0d7_tryNeutralElement(_self_, &(_58822_m))) {
		goto _julec_label_216b6718c;
	};
	if ((_20671916c_Math && _20670bc42_binaryMath(_self_, &(_58822_m)))) {
		goto _julec_label_216b6718c;
	};
	_julec_label_216b6718c:;
	if (((*((*(_58822_m))._field_Op))._field_Id == static_cast<jule::U32>(55LLU))) {
		_206713771_data _6448_checkpoint = _206713771_data{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)};;
		_20671482c_loadCheckpoint(&_6448_checkpoint, _2067142dd_getCheckpoint((*(_self_))._field_data.ptr()));
		{
			_2056a7a57_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_58822_m.alloc)._field_Left))._field_Model));
		};
		_20671482c_loadCheckpoint((*(_self_))._field_data, _2067142dd_getCheckpoint(&_6448_checkpoint));
		{
			_2056a7a57_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_58822_m.alloc)._field_Right))._field_Model));
		};
		_20671482c_loadCheckpoint((*(_self_))._field_data, _206714574_getMutCheckpoint(&_6448_checkpoint));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
	};
}



inline void _20670c2a3_unary(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b117a8_UnaryExprModel> _66421_m) {
	if ((!(_206719986_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_66421_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_216b6b669:;
			{
				{
					auto &_match_expr{ (*((*(_66421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_216b6c68c:;
						{
							jule::Ptr<_204b117a8_UnaryExprModel> _6729_um = (*((*(_66421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_204b117a8_UnaryExprModel>();;
							if (((*((*(_6729_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_6729_um.alloc)._field_Expr))._field_Model;
							};
							return;;
						}
					}
					_match_end_216b6c615:;
				};
				if (((_206719425_Access && ((*((*(_self_))._field_data))._field_nils != nullptr)) && _2065092d1_isNilValidType((*((*(_66421_m))._field_Expr))._field_Type))) {
					jule::Uintptr _6825_var = _206509622_getNilVar((*(*(_66421_m))._field_Expr.alloc)._field_Model);;
					if (_206508797_isSafe((*((*(_self_))._field_data))._field_nils, _6825_var)) {
						jule::Any _68410_model = jule::Any(jule::new_ptr<_206506795_UnsafeDerefExprModel>(_206506795_UnsafeDerefExprModel{._field_Base=_66421_m}), &__jule_any_type132);;
						(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_68410_model))))));
					} else {
						_206508115_pushVar((*((*(_self_))._field_data))._field_nils, _6825_var, true);
					};
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_216b6b999:;
			{
				{
					auto &_match_expr{ (*((*(_66421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_216b758a4:;
						{
							jule::Ptr<_204c5319c_Var> _6949_v = (*((*(_66421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
							if ((*(_6949_v))._field_Reference) {
								jule::Any _69610_model = jule::Any(jule::new_ptr<_206504650_RefExprModel>(_206504650_RefExprModel{._field_Var=_6949_v}), &__jule_any_type133);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_69610_model))))));
							};
						}
					}
					_match_end_216b7582c:;
				};
			}
		}
		_match_end_216b6b8de:;
	};
}



inline void _20670c55b_structureLit(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b1217c_StructLitExprModel> _70328_m) {
	{
		auto expr = &((*(_70328_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216b77ba3:;
		if (it != expr_end) {
			jule::Ptr<_204b11cd6_StructArgExprModel> _70415_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_2067178c9_isBoundaryRiskyType((*((*(_70415_arg))._field_Expr))._field_Type)) {
						_206717610_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_70415_arg, &__jule_any_type134));
					};
				};
				if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
					_206508b4e_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_70415_arg))._field_Expr))._field_Model);
				};
				if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
					_206711bd1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_70415_arg))._field_Expr))._field_Model);
				};
			}
			_iter_next_216b77ba3:;
			++it;
			goto _iter_begin_216b77ba3;
		}
		_iter_end_216b77ba3:;
	};
}



inline void _20670c814_casting(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b12a0c_CastingExprModel> _71923_m) {
	jule::Bool _7203_valid = _206711ede_isDynamicValidType((*(_71923_m))._field_ExprType);;
	jule::Uintptr _7213_var = _20671275e_getDynamicVar((*((*_71923_m.alloc)._field_Expr))._field_Model);;
	if (((_7203_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _206711829_isFits((*((*(_self_))._field_data))._field_dynamic, _7213_var, (*_71923_m.alloc)._field_Type))) {
		jule::Any _7238_model = jule::Any(jule::new_ptr<_206506a92_UnsafeCastingExprModel>(_206506a92_UnsafeCastingExprModel{._field_Base=_71923_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7238_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_dynamic != nullptr) && _7203_valid)) {
		_2067110dc_pushVar((*((*(_self_))._field_data))._field_dynamic, _7213_var, (*_71923_m.alloc)._field_Type);
	};
}



inline void _20670cb77_args(_2067084e1_exprOptimizer* _self_, jule::Slice<jule::Ptr<_204b2050e_ParamIns>> _73320_params, jule::Slice<jule::Any>* _73352_args) {
	{
		auto expr = _73352_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216b88c6e:;
		if (it != expr_end) {
			jule::I32 _7348_i = it - expr->begin();
			jule::Any _73415_arg = *it;
			{
				if ((_7348_i >= _73320_params.len())) {
					goto _iter_next_216b88c6e;
				};
				jule::Ptr<_204b2050e_ParamIns> _7388_p = _73320_params[_7348_i];;
				if (((*((*(_7388_p))._field_Decl))._field_Mutable && (*(*(_7388_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_2067178c9_isBoundaryRiskyType((*_7388_p.alloc)._field_Type)) {
							_206717610_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _73415_arg);
						};
					};
					if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
						_206508b4e_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _73415_arg);
					};
					if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
						_206711bd1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _73415_arg);
					};
				};
			}
			_iter_next_216b88c6e:;
			++it;
			_7348_i++;
			goto _iter_begin_216b88c6e;
		}
		_iter_end_216b88c6e:;
	};
}



inline void _20670ceda_scope(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204bd11d5_Scope>* _75822_s, jule::Bool _75839_child) {
	if ((_75839_child && ((*(_self_))._field_scopeOpt != nullptr))) {
		_2067060b0_optimizeChildHard((*(_self_))._field_scopeOpt, (*(_75822_s)));
		return;;
	};
	jule::Ptr<_206700bd1_scopeOptimizer> _7637_scopt = static__2067012b9_new((*(_75822_s)));;
	if (((*(_self_))._field_data != nullptr)) {
		(*(_7637_scopt))._field_data=jule::new_ptr<_206713771_data>(_206713771_data{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)});
		_20671482c_loadCheckpoint((*(_7637_scopt))._field_data, _2067142dd_getCheckpoint((*(_self_))._field_data));
	};
	_2067062ad_optimize(_7637_scopt);
}



inline void _20670d293_optimizeStrBuilderCall(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _77439_m) {
	;
	{
		if (((*((*(_2056ae454_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_77439_m))))._field_Func)) {
			jule::Any _7819_model = jule::Any(jule::new_ptr<_2065039c3_FnCallIgnoreExceptionalExprModel>(_2065039c3_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_77439_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7819_model))))));
			return;;
		};
	};
	{
		if (((*((*(_2056ae454_ProgramMeta))._field_StrBuilder))._field_WriteByte == (*((*(_77439_m))))._field_Func)) {
			jule::Any _7819_model = jule::Any(jule::new_ptr<_2065039c3_FnCallIgnoreExceptionalExprModel>(_2065039c3_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_77439_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7819_model))))));
			return;;
		};
	};
	{
		if (((*((*(_2056ae454_ProgramMeta))._field_StrBuilder))._field_WriteRune == (*((*(_77439_m))))._field_Func)) {
			jule::Any _7819_model = jule::Any(jule::new_ptr<_2065039c3_FnCallIgnoreExceptionalExprModel>(_2065039c3_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_77439_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7819_model))))));
			return;;
		};
	};
	{
		if (((*((*(_2056ae454_ProgramMeta))._field_StrBuilder))._field_WriteStr == (*((*(_77439_m))))._field_Func)) {
			jule::Any _7819_model = jule::Any(jule::new_ptr<_2065039c3_FnCallIgnoreExceptionalExprModel>(_2065039c3_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_77439_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7819_model))))));
			return;;
		};
	};
}



inline void _20670d54b_lenCall(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _78923_m) {
	if ((!(_20671b69c_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_78923_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_216b9155c:;
			{
				goto _match_end_216b91bab;
			}
		}
		else {
			_case_begin_216b99d7e:;
			{
				return;;
			}
		}
		_match_end_216b91bab:;
	};
	jule::Ptr<_204b12a0c_CastingExprModel> _8007_c = (*((*(_78923_m))._field_Expr))._field_Model.cast_ptr<_204b12a0c_CastingExprModel>(&__jule_any_type96);;
	jule::Ptr<_204ce3a9a_Prim> _8017_prim = _204cdd138_Prim((*((*(_8007_c))._field_Expr))._field_Type.ptr());;
	if (((_8017_prim == nullptr) || (!(_204ce7065_IsStr(_8017_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_204ce8099_Slc> _8067_slc = _204cde18e_Slc((*_8007_c.alloc)._field_Type.ptr());;
	if ((_8067_slc == nullptr)) {
		return;;
	};
	_8017_prim=_204cdd138_Prim((*(_8067_slc))._field_Elem.ptr());
	if ((_8017_prim == nullptr)) {
		return;;
	};
	{
		
		if (_204ce54c5_IsU8(_8017_prim.ptr())) {
			_case_begin_216b9d525:;
			{
				(*_78923_m.alloc)._field_Expr=(*_8007_c.alloc)._field_Expr;
			}
		}
		else if (_204ce4ea8_IsI32(_8017_prim.ptr())) {
			_case_begin_216b9d6ce:;
			{
				jule::Ptr<_204b21664_FnIns> _8238_func = (*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_204b133ae_FnCallExprModel>(_204b133ae_FnCallExprModel{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Func=_8238_func, ._field_IsCo=false, ._field_Expr=jule::Any(_8238_func, &__jule_any_type65), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_8007_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type31);
			}
		}
		_match_end_216b9d349:;
	};
}



inline void _20670d804_funcCall(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b133ae_FnCallExprModel> _83224_m) {
	_20670cb77_args(_self_, (*((*(_83224_m))._field_Func))._field_Params, &((*_83224_m.alloc)._field_Args));
	if (((*_83224_m.alloc)._field_Except != nullptr)) {
		;
		_20670ceda_scope(_self_, &((*_83224_m.alloc)._field_Except), true);
	};
	{
		
		if ((_20671b8de_StdStrings && ((*(_2056ae454_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_216ba2936:;
			{
				_20670d293_optimizeStrBuilderCall(_self_, &(_83224_m));
			}
		}
		_match_end_216ba2260:;
	};
}



inline void _20670daac_indexing(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b13c3e_IndexingExprModel> _84624_m) {
	if ((!(_206719425_Access))) {
		return;;
	};
	jule::Bool _8513_array = (_204cdde08_Arr((*((*(_84624_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_8513_array && _204ca35b5_IsConst((*_84624_m.alloc)._field_Index.ptr()))) {
		jule::Any _8548_model = jule::Any(jule::new_ptr<_20650581b_UnsafeIndexingExprModel>(_20650581b_UnsafeIndexingExprModel{._field_Node=_84624_m}), &__jule_any_type137);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8548_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _206717b93_isBoundaryValidType((*(*(_84624_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _8604_var = _206717e5c_getBoundaryVar((*(*(_84624_m))._field_Expr.alloc)._field_Model);;
		if (_20671670d_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _8604_var, (*((*_84624_m.alloc)._field_Index))._field_Model)) {
			jule::Any _8629_model = jule::Any(jule::new_ptr<_20650581b_UnsafeIndexingExprModel>(_20650581b_UnsafeIndexingExprModel{._field_Node=_84624_m}), &__jule_any_type137);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8629_model))))));
			return;;
		};
		_206715ec1_pushVar((*((*(_self_))._field_data))._field_boundary, _8604_var, (*((*_84624_m.alloc)._field_Index))._field_Model);
	};
}



inline void _20670dd65_anonFunc(_2067084e1_exprOptimizer* _self_, jule::Ptr<_204b141e5_AnonFnExprModel> _87024_m) {
	;
	_20670ceda_scope(_self_, &((*((*(_87024_m))._field_Func))._field_Scope), false);
}



inline void _20670e11d_inspectStep(_2067084e1_exprOptimizer* _self_, jule::Any* _87928_m) {
	(*(_self_))._field_model=((jule::Ptr<jule::Any>)(_87928_m));
	{
		auto &_match_expr{ (*(_87928_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_216badcd8:;
			{
				_20670beea_binary(_self_, (*(_87928_m)).cast_ptr<_204b113ce_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_216bad4e1:;
			{
				_20670c2a3_unary(_self_, (*(_87928_m)).cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_216badd4e:;
			{
				_20670c55b_structureLit(_self_, (*(_87928_m)).cast_ptr<_204b1217c_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_216baddb5:;
			{
				_20670c814_casting(_self_, (*(_87928_m)).cast_ptr<_204b12a0c_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_216bade2b:;
			{
				_20670d804_funcCall(_self_, (*(_87928_m)).cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_216bade92:;
			{
				_20670d54b_lenCall(_self_, (*(_87928_m)).cast_ptr<_204b184e6_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_216bae008:;
			{
				_20670daac_indexing(_self_, (*(_87928_m)).cast_ptr<_204b13c3e_IndexingExprModel>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_216bae06e:;
			{
				_20670dd65_anonFunc(_self_, (*(_87928_m)).cast_ptr<_204b141e5_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		_match_end_216badbc8:;
	};
}



inline void _20670e31b_do(_2067084e1_exprOptimizer* _self_) {
	_2056a8173_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_216bb33b4, jule::Ptr<__jule_anon_216bb33b4_ctx>::make(__jule_anon_216bb33b4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_216bb33b4_ctx_handler));
}








inline jule::Bool _206710806_dynamicVar_eq(_206710806_dynamicVar *_self_, _206710806_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _2067110dc_pushVar(jule::Ptr<_206710b47_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_204cda982_Type> _2442_kind) {
	if (((!(_20671ae0a_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_20671241d_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bbe0b2:;
		if (it != expr_end) {
			jule::I32 _307_i = it - expr->begin();
			{
				_206710806_dynamicVar *_319_v = &((*(_self_))._field_vars[_307_i]);;
				if (((*(_319_v))._field_var == _2424_var)) {
					(*(_319_v))._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_216bbe0b2:;
			++it;
			_307_i++;
			goto _iter_begin_216bbe0b2;
		}
		_iter_end_216bbe0b2:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bc03e3:;
		if (it != expr_end) {
			jule::I32 _387_i = it - expr->begin();
			{
				_206710806_dynamicVar *_399_v = &((*_self_.alloc)._field_vars[_387_i]);;
				if (((*(_399_v))._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_204cda982_Type> _1___jule_assign_arg = _2442_kind;
						(*(_399_v))._field_var = ___jule_assign_arg;
						(*(_399_v))._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_216bc03e3:;
			++it;
			_387_i++;
			goto _iter_begin_216bc03e3;
		}
		_iter_end_216bc03e3:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_206710806_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _206710806_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _20671142d_removeVar(_206710b47_dynamic* _self_, jule::Uintptr _4925_var) {
	if ((_4925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216bc7c25:;
			if (it != expr_end) {
				jule::I32 _518_i = it - expr->begin();
				{
					_206710806_dynamicVar *_5210_v = &((*(_self_))._field_vars[_518_i]);;
					if (((*(_5210_v))._field_var == _4925_var)) {
						(*(_5210_v))._field_var=0LLU;
						(*(_5210_v))._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_216bc7c25:;
				++it;
				_518_i++;
				goto _iter_begin_216bc7c25;
			}
			_iter_end_216bc7c25:;
		};
	};
	return false;;
}



inline jule::Bool _206711829_isFits(_206710b47_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_204cda982_Type> _6436_kind) {
	if ((_6422_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216bc9cd2:;
			if (it != expr_end) {
				_206710806_dynamicVar _6611_v = *it;
				{
					if ((_6611_v._field_var == _6422_var)) {
						return ((_6611_v._field_kind != nullptr) && _204cdb1be_Equal(_6611_v._field_kind, _6436_kind));;
					};
				}
				_iter_next_216bc9cd2:;
				++it;
				goto _iter_begin_216bc9cd2;
			}
			_iter_end_216bc9cd2:;
		};
	};
	return false;;
}








inline jule::Bool _206713276_dataCheckpoint_eq(_206713276_dataCheckpoint *_self_, _206713276_dataCheckpoint _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}






inline jule::Bool _206713771_data_eq(_206713771_data *_self_, _206713771_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline void _206714057_removeDeads(_206713771_data* _self_, jule::Ptr<_206713771_data>* _4228_other) {
	if ((((*(_self_))._field_boundary != nullptr) && ((*((*(_4228_other))))._field_boundary != nullptr))) {
		_216bcb663__removeDeads(&((*(_self_))._field_boundary), &((*((*(_4228_other))))._field_boundary), 0LLU);
	};
	if ((((*(_self_))._field_nils != nullptr) && ((*((*(_4228_other))))._field_nils != nullptr))) {
		_216bcd500__removeDeads(&((*(_self_))._field_nils), &((*((*(_4228_other))))._field_nils), 0LLU);
	};
	if ((((*(_self_))._field_dynamic != nullptr) && ((*((*(_4228_other))))._field_dynamic != nullptr))) {
		_216bd1ab9__removeDeads(&((*(_self_))._field_dynamic), &((*((*(_4228_other))))._field_dynamic), 0LLU);
	};
}



inline _206713276_dataCheckpoint _2067142dd_getCheckpoint(_206713771_data* _self_) {
	_206713276_dataCheckpoint _577_c = _206713276_dataCheckpoint{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)};;
	if (((*(_self_))._field_boundary != nullptr)) {
		_577_c._field_boundary=jule::new_ptr<_206715a2b_boundary>(_206715a2b_boundary{._field_vars=jule::Slice<_2067156da_boundaryVar>(nullptr)});
		(*_577_c._field_boundary.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_2067156da_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _2067156da_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_boundary.alloc)._field_vars);
		{
			auto expr = &((*_577_c._field_boundary.alloc)._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216bd7b69:;
			if (it != expr_end) {
				jule::I32 _618_i = it - expr->begin();
				{
					(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize);
				}
				_iter_next_216bd7b69:;
				++it;
				_618_i++;
				goto _iter_begin_216bd7b69;
			}
			_iter_end_216bd7b69:;
		};
	};
	if (((*(_self_))._field_nils != nullptr)) {
		_577_c._field_nils=jule::new_ptr<_206507b70_nils>(_206507b70_nils{._field_vars=jule::Slice<_20650782e_nilVar>(nullptr)});
		(*_577_c._field_nils.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_20650782e_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _20650782e_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*(*(_self_))._field_nils.alloc)._field_vars);
	};
	if (((*(_self_))._field_dynamic != nullptr)) {
		_577_c._field_dynamic=jule::new_ptr<_206710b47_dynamic>(_206710b47_dynamic{._field_vars=jule::Slice<_206710806_dynamicVar>(nullptr)});
		(*_577_c._field_dynamic.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_206710806_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _206710806_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_204cda982_Type>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_dynamic.alloc)._field_vars);
	};
	return _577_c;;
}



inline _206713276_dataCheckpoint _206714574_getMutCheckpoint(_206713771_data* _self_) {
	return _206713276_dataCheckpoint{._field_boundary=(*(_self_))._field_boundary, ._field_nils=(*(_self_))._field_nils, ._field_dynamic=(*(_self_))._field_dynamic};;
}



inline void _20671482c_loadCheckpoint(_206713771_data* _self_, _206713276_dataCheckpoint _8534_c) {
	(*(_self_))._field_boundary=_8534_c._field_boundary;
	(*(_self_))._field_nils=_8534_c._field_nils;
	(*(_self_))._field_dynamic=_8534_c._field_dynamic;
}











inline void _206715ec1_pushVar(_206715a2b_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize) {
	if (((!(_206719425_Access)) || (_2523_var == 0LLU))) {
		return;;
	};
	if ((!(_206716a93_isValidBoundaryInfo(_2541_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bed71d:;
		if (it != expr_end) {
			_2067156da_boundaryVar _3315_v = *it;
			{
				if ((_3315_v._field_var == _2523_var)) {
					{
						auto expr = &(_3315_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_216bee598:;
						if (it != expr_end) {
							jule::I32 _359_i = it - expr->begin();
							jule::Any _3512_max = *it;
							{
								if (_2067172d0_fitsSize(_2541_maxSize, _3512_max)) {
									_3315_v._field_maxSize[_359_i]=_2541_maxSize;
									return;;
								};
							}
							_iter_next_216bee598:;
							++it;
							_359_i++;
							goto _iter_begin_216bee598;
						}
						_iter_end_216bee598:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3315_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_216bed71d:;
			++it;
			goto _iter_begin_216bed71d;
		}
		_iter_end_216bed71d:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bedb3b:;
		if (it != expr_end) {
			_2067156da_boundaryVar _4715_v = *it;
			{
				if ((_4715_v._field_var == 0LLU)) {
					_4715_v._field_var=_2523_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4715_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_216bedb3b:;
			++it;
			goto _iter_begin_216bedb3b;
		}
		_iter_end_216bedb3b:;
	};
	{ jule::Slice<_2067156da_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_2067156da_boundaryVar{._field_var=_2523_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2541_maxSize; __jule_collection; })}); };
}



inline jule::Bool _206716312_removeVar(_206715a2b_boundary* _self_, jule::Uintptr _5825_var) {
	if ((_5825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216c0236a:;
			if (it != expr_end) {
				_2067156da_boundaryVar _6016_v = *it;
				{
					if ((_6016_v._field_var == _5825_var)) {
						_6016_v._field_var=0LLU;
						(_6016_v._field_maxSize).mut_slice(0LL, 0LL);;
						return true;;
					};
				}
				_iter_next_216c0236a:;
				++it;
				goto _iter_begin_216c0236a;
			}
			_iter_end_216c0236a:;
		};
	};
	return false;;
}



inline jule::Bool _20671670d_fitsMaxSize(_206715a2b_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr) {
	if ((_7227_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216c03e2c:;
			if (it != expr_end) {
				_2067156da_boundaryVar _7411_v = *it;
				{
					if ((_7411_v._field_var == _7227_var)) {
						return (_206716e5b_fitsMaxSize(_7411_v._field_maxSize, _7241_expr) != -1LL);;
					};
				}
				_iter_next_216c03e2c:;
				++it;
				goto _iter_begin_216c03e2c;
			}
			_iter_end_216c03e2c:;
		};
	};
	return false;;
}








inline jule::Bool _2068358b5_Optimizer_eq(_2068358b5_Optimizer *_self_, _2068358b5_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_2068358b5_Optimizer> static__206835d7c_New(jule::Ptr<_2056a39dc_IR>* _2121_ir) {
	return jule::new_ptr<_2068358b5_Optimizer>(_2068358b5_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _206836135_optimizeExpr(_2068358b5_Optimizer* _self_, jule::Any* _2733_model) {
	static__206708a1e_optimize(_2733_model);
}



inline void _2068363dd_optimizeGlobal(_2068358b5_Optimizer* _self_, jule::Ptr<_204c5319c_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_206836135_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _206836696_optimizeFunction(_2068358b5_Optimizer* _self_, jule::Ptr<_204b1d5a6_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c0a5b5:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_206700bd1_scopeOptimizer> _428_so = static__2067012b9_new((*(_4115_ins))._field_Scope);;
				_2067062ad_optimize(_428_so);
			}
			_iter_next_216c0a5b5:;
			++it;
			goto _iter_begin_216c0a5b5;
		}
		_iter_end_216c0a5b5:;
	};
}



inline void _20683694e_optimizeStruct(_2068358b5_Optimizer* _self_, jule::Ptr<_204a4a46c_Struct>* _4735_s) {
	if ((*((*(_4735_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4735_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c0bc8c:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216c0c72c:;
					if (it != expr_end) {
						jule::Ptr<_204a4c727_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_206836135_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_216c0c72c:;
						++it;
						goto _iter_begin_216c0c72c;
					}
					_iter_end_216c0c72c:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216c0cba0:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _5716_m = *it;
						{
							_206836696_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_216c0cba0:;
						++it;
						goto _iter_begin_216c0cba0;
					}
					_iter_end_216c0cba0:;
				};
			}
			_iter_next_216c0bc8c:;
			++it;
			goto _iter_begin_216c0bc8c;
		}
		_iter_end_216c0bc8c:;
	};
}



inline void _206836c07_optimizeGlobals(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c0c254:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216c0ed5b:;
					if (it != expr_end) {
						jule::Ptr<_204c5319c_Var> _6516_v = *it;
						{
							_2068363dd_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_216c0ed5b:;
						++it;
						goto _iter_begin_216c0ed5b;
					}
					_iter_end_216c0ed5b:;
				};
			}
			_iter_next_216c0c254:;
			++it;
			goto _iter_begin_216c0c254;
		}
		_iter_end_216c0c254:;
	};
}



inline void _206836eb0_optimizeFunctions(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c10378:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216c1127a:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _7316_func = *it;
						{
							_206836696_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_216c1127a:;
						++it;
						goto _iter_begin_216c1127a;
					}
					_iter_end_216c1127a:;
				};
			}
			_iter_next_216c10378:;
			++it;
			goto _iter_begin_216c10378;
		}
		_iter_end_216c10378:;
	};
}



inline void _206837268_optimizeStructs(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216c11797:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216c12699:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> _8116_s = *it;
						{
							_20683694e_optimizeStruct(_self_, &(_8116_s));
						}
						_iter_next_216c12699:;
						++it;
						goto _iter_begin_216c12699;
					}
					_iter_end_216c12699:;
				};
			}
			_iter_next_216c11797:;
			++it;
			goto _iter_begin_216c11797;
		}
		_iter_end_216c11797:;
	};
}



inline void _206837521_optimizePackage(_2068358b5_Optimizer* _self_, jule::Ptr<_204c148ab_Package>* _8736_p) {
	_206836c07_optimizeGlobals(_self_, _8736_p);
	_206836eb0_optimizeFunctions(_self_, _8736_p);
	_206837268_optimizeStructs(_self_, _8736_p);
}



inline void _20683771e_Optimize(_2068358b5_Optimizer* _self_) {
	_206837983_detectEnabled();
	if (_206718ab7_Deadcode) {
		_20682e2b5_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_20683572d_scopeEnabled || _20683551e_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_216c14668:;
			if (it != expr_end) {
				jule::Ptr<_204c12139_ImportInfo> _10316_u = *it;
				{
					if ((!((*(_10316_u))._field_Binded))) {
						_206837521_optimizePackage(_self_, &((*_10316_u.alloc)._field_Package));
					};
				}
				_iter_next_216c14668:;
				++it;
				goto _iter_begin_216c14668;
			}
			_iter_end_216c14668:;
		};
		_206837521_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_206718ab7_Deadcode) {
		_2068340cd_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _206908218_AbsTime_eq(_206908218_AbsTime *_self_, _206908218_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _2069088de_Time_eq(_2069088de_Time *_self_, _2069088de_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _2069088de_Time static__206908cc9_Unix(jule::U64 _9117_sec) {
	return _2069088de_Time{._field_sec=_9117_sec};;
}



inline _2069088de_Time static__206908ed8_Now(void) {
	return static__206908cc9_Unix(_20690a9ce_unix());;
}



inline _206908218_AbsTime _20690a6c1_Abs(_2069088de_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_206907679_mdays[static_cast<jule::I32>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_206907679_mdays[static_cast<jule::I32>(_1697_months)];
		}
	_iter_next_216c417b6:;
	}
	_iter_end_216c417b6:;;
	_206908218_AbsTime _1747_t = _206908218_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _206839897_scopeCoder_eq(_206839897_scopeCoder *_self_, _206839897_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_206839897_scopeCoder> static__20683a090_new(jule::Ptr<_206915cc5_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_206839897_scopeCoder>(_206839897_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1d4b8a874_iterHead(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_2067187ba_Copy && _206842cbd_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1d4b90e1d:;
				{
					jule::Ptr<_204c5319c_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
					if ((*(_535_v))._field_Reference) {
						_206854917_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1d4b8e34a;
					};
					goto _case_begin_1d4b8e3b1;
				}
			}
			else {
				_case_begin_1d4b8e3b1:;
				{
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_206854917_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1d4b8e34a:;
		};
	} else {
		_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, _4452_begin);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
}



inline void _20683a766_rangeIndexIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter>* _9336_it) {
	_1eeabb290_Builder _947_sb = static__1eeabbadc_New(64LL);;
	static__20685dc95_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1eeabcaee_Str(&_947_sb);;
	_1eeabccec_Clear(&_947_sb);
	static__20685e36c_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1eeabcaee_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1d4b8a874_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_20691d173_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1d4b9b38a, jule::Ptr<__jule_anon_1d4b9b38a_ctx>::make(__jule_anon_1d4b9b38a_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1d4b9b38a_ctx_handler));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_206916d92_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_2067187ba_Copy && _206843186_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_20691d173_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1d4b9ed94, jule::Ptr<__jule_anon_1d4b9ed94_ctx>::make(__jule_anon_1d4b9ed94_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1d4b9ed94_ctx_handler));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_206916d92_indent((*(_self_))._field_oc);
	};
	_206842064_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, _993_next);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_206916d92_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__20685d9a9_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_206916d92_indent((*(_self_))._field_oc);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2069164e0_write((*(_self_))._field_oc, _963_begin);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e081_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _20683aa1e_rangeHashmapIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter>* _16038_it) {
	_1eeabb290_Builder _1617_sb = static__1eeabbadc_New(64LL);;
	static__20685dc95_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1eeabcaee_Str(&_1617_sb);;
	_1eeabccec_Clear(&_1617_sb);
	static__20685e36c_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1eeabcaee_Str(&_1617_sb);;
	jule::Ptr<_204ce973d_Map> _1687__map = _204cdebc8_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_204a4d2c7_StructIns> _1697_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_204b21664_FnIns> _1717_f = (*(_204a4e372_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_204a4d2c7_StructIns> _1737_iterator = _2056acead_FindStructGenericInstance(&((*(*(_2056ae454_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_204b21664_FnIns> _1747_nextCall = (*(_204a4e372_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069291d4_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, _1633_begin);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_20692a3e4_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_20691d173_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1d4bbe3d0, jule::Ptr<__jule_anon_1d4bbe3d0_ctx>::make(__jule_anon_1d4bbe3d0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d4bbe3d0_ctx_handler));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_206916d92_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_20691d173_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1d4bc18bb, jule::Ptr<__jule_anon_1d4bc18bb_ctx>::make(__jule_anon_1d4bc18bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d4bc18bb_ctx_handler));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_206916d92_indent((*(_self_))._field_oc);
	};
	_206842064_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, _1663_next);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2069164e0_write((*(_self_))._field_oc, _1633_begin);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e081_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _20683acc7_strRuneIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_206506498_StrRuneIter> _24132_it) {
	_1eeabb290_Builder _2427_sb = static__1eeabbadc_New(64LL);;
	static__20685dc95_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _1eeabcaee_Str(&_2427_sb);;
	_1eeabccec_Clear(&_2427_sb);
	static__20685e36c_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _1eeabcaee_Str(&_2427_sb);;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_2067187ba_Copy && _206842cbd_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1d4bd090d:;
				{
					jule::Ptr<_204c5319c_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_206854917_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1d4bcdbe7;
					};
					goto _case_begin_1d4bcdc5d;
				}
			}
			else {
				_case_begin_1d4bcdc5d:;
				{
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_206854917_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1d4bcdbe7:;
		};
	} else {
		_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_206916d92_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_20691d173_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1d4bda61b, jule::Ptr<__jule_anon_1d4bda61b_ctx>::make(__jule_anon_1d4bda61b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d4bda61b_ctx_handler));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_206916d92_indent((*(_self_))._field_oc);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_206916d92_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_20691d173_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_206916d92_indent((*(_self_))._field_oc);
	};
	_2069164e0_write((*(_self_))._field_oc, _2443_begin);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__20685d9a9_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_206842064_scope(_self_, (*((*_24132_it.alloc)._field_Base))._field_Scope);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, _2473_next);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_206916d92_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__20685d9a9_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_206916d92_indent((*(_self_))._field_oc);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2069164e0_write((*(_self_))._field_oc, _2443_begin);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _20683b080_ifCase(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd1603_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_206842064_scope(_self_, (*(_35327_i))._field_Scope);
}



inline void _20683b338_conditional(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd1d1d_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4c0091c:;
		if (it != expr_end) {
			jule::Ptr<_204bd1603_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_1d4c0091c;
				};
				if (_3637_writed) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_20683b080_ifCase(_self_, _36415_elif);
			}
			_iter_next_1d4c0091c:;
			++it;
			goto _iter_begin_1d4c0091c;
		}
		_iter_end_1d4c0091c:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_206842064_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _20683b5e1_infIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd211a_InfIter> _38228_it) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_206842064_scope(_self_, (*(_38228_it))._field_Scope);
	_206916b94_doneIndent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e36c_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e081_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _20683b899_whileIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd25c1_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_39930_it))._field_Next != nullptr)) {
			_206841a03_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_206842064_scope(_self_, (*(_39930_it))._field_Scope);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e36c_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e081_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _20683bb52_rangeIter(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd301c_RangeIter> _43830_it) {
	{
		
		if ((_204cde18e_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1d4c1645a:;
			{
				_20683a766_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_204cdde08_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1d4c16108:;
			{
				_20683a766_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_204cdebc8_Map((*((*(_43830_it))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1d4c1616e:;
			{
				_20683aa1e_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_1d4c16092:;
			{
				_20683a766_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_1d4c15e82:;
	};
}



inline void _20683be0a_cont(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd33a2_ContSt> _45121_c) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__20685e36c_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _20683c1b3_label(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd3c32_Label> _45622_l) {
	static__20685e658_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _20683c46b_gotoSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4392_GotoSt> _46123_gt) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__20685e658_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _20683c724_postfix(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd476b_Postfix> _46628_p) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_2069164e0_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _20683c9cc_assignLeft(jule::Ptr<_206839897_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d4c20475:;
			{
				jule::Ptr<_204b13c3e_IndexingExprModel> _4768_iem = (*(_47332_model)).cast_ptr<_204b13c3e_IndexingExprModel>(&__jule_any_type43);;
				jule::Ptr<_204ce973d_Map> _4774__map = _204cdebc8_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_1d4c2040e;
				};
				jule::Ptr<_204a4d2c7_StructIns> _4838_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*_4774__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_204b21664_FnIns> _4858_f = (*(_204a4e372_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_200e4e589_Production))) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_206918b74_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1d4c2040e:;
	};
	_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _20683cc85_shl(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _50424_a) {
	_20683c9cc_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_206848ca2_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _20683d03d_shr(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _51024_a) {
	_20683c9cc_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_206849115_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _20683d2e6_divByZeroAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _51636_a) {
	_20683c9cc_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_206847e8d_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _20683d7be_operatorOverloadingAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _52247_s, jule::Ptr<_204b10dd4_OperandExprModel>* _52273_l, jule::Ptr<_204b10dd4_OperandExprModel>* _5238_r, jule::U32 _52336_op) {
	;
	jule::Ptr<_204b21664_FnIns> _5257_f = _2056ac6a5_FindOperator(_52247_s, _52336_op, false);;
	if ((_5257_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:527:4"));;
	};
	static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5257_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_20683c9cc_assignLeft(_self_, &((*((*(_52273_l))))._field_Model));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5238_r))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20683da77_assign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd4c22_Assign> _53727_a) {
	{
		auto &_match_expr{ (*((*(_53727_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1d4c35655:;
			{
				if ((_200e4e347_Safety && (_204cde6ab_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr))) {
					_20683d2e6_divByZeroAssign(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1d4c356cc:;
			{
				if ((_204cde6ab_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_20683cc85_shl(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1d4c35743:;
			{
				if ((_204cde6ab_Struct((*((*(_53727_a))._field_Left))._field_Type) == nullptr)) {
					_20683d03d_shr(_self_, _53727_a);
					return;;
				};
			}
		}
		_match_end_1d4c35589:;
	};
	if ((((*((*(_53727_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU)) && (_204cde6ab_Struct((*((*_53727_a.alloc)._field_Left))._field_Type.ptr()) != nullptr))) {
		jule::Ptr<_204a4d2c7_StructIns> _5608_s = _204cde6ab_Struct((*((*(_53727_a))._field_Left))._field_Type);;
		_20683d7be_operatorOverloadingAssign(_self_, &(_5608_s), &((*_53727_a.alloc)._field_Left), &((*_53727_a.alloc)._field_Right), (*(*(_53727_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_20683c9cc_assignLeft(_self_, &((*((*(_53727_a))._field_Left))._field_Model));
	_2069164e0_write((*_self_.alloc)._field_oc, (*((*_53727_a.alloc)._field_Op))._field_Kind);
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_53727_a.alloc)._field_Right))._field_Model);
}



inline void _20683dd30_mapLookupAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _57037_a) {
	jule::Ptr<_204b13c3e_IndexingExprModel> _5727_iem = (*((*(_57037_a))))._field_Right.cast_ptr<_204b13c3e_IndexingExprModel>(&__jule_any_type43);;
	jule::Ptr<_204ce973d_Map> _5737__map = _204cdebc8_Map((*((*(_5727_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_204a4d2c7_StructIns> _5757_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5737__map))._field_Key; (*it++) = (*_5737__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_204b21664_FnIns> _5777_f = (*(_204a4e372_FindMethod(_5757_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5777_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20683c9cc_assignLeft(_self_, &((*(*(_5727_iem))._field_Expr.alloc)._field_Model));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5727_iem.alloc)._field_Index))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57037_a))))._field_Left[0LL] != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[0LL]))._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57037_a))))._field_Left[1LL] != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[1LL]))._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20683e0d8_multiAssignTup(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _60236_a) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_206916996_addIndent((*(_self_))._field_oc);
	jule::Ptr<_204b169bc_TupleExprModel> _6127_tup = (*((*(_60236_a))))._field_Right.cast_ptr<_204b169bc_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_6127_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4c4a835:;
		if (it != expr_end) {
			jule::I32 _6148_i = it - expr->begin();
			jule::Ptr<_204ca2b7a_Data> _61415_r = *it;
			{
				_206916d92_indent((*(_self_))._field_oc);
				jule::Ptr<_204ca2b7a_Data> _6168_l = (*((*(_60236_a))))._field_Left[_6148_i];;
				if ((_6168_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6168_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1d4c4d948:;
							{
								jule::Ptr<_204c5319c_Var> _62010_v = (*(_6168_l))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
								if ((!((*(_62010_v))._field_Reference))) {
									goto _match_end_1d4c4d8d2;
								};
								{
									auto expr = &((*((*(_60236_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1d4c4e927:;
									if (it != expr_end) {
										jule::Ptr<_204c5319c_Var> _62713_dv = *it;
										{
											if ((_62010_v == _62713_dv)) {
												goto _julec_label_1d4c4e86c;
											};
										}
										_iter_next_1d4c4e927:;
										++it;
										goto _iter_begin_1d4c4e927;
									}
									_iter_end_1d4c4e927:;
								};
								goto _match_end_1d4c4d8d2;
								_julec_label_1d4c4e86c:;
								static__20685d9a9_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _62010_v);
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61415_r))._field_Model);
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_60236_a))))._field_Left[_6148_i]=nullptr;
								goto _iter_next_1d4c4a835;
							}
						}
						_match_end_1d4c4d8d2:;
					};
					_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6168_l.alloc)._field_Type);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__20685bc0a_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _206839138_assignArgName, static_cast<jule::Uintptr>(_6148_i));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61415_r))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d4c4a835:;
			++it;
			_6148_i++;
			goto _iter_begin_1d4c4a835;
		}
		_iter_end_1d4c4a835:;
	};
	{
		auto expr = &((*((*(_60236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4c55895:;
		if (it != expr_end) {
			jule::I32 _6568_i = it - expr->begin();
			jule::Ptr<_204ca2b7a_Data> _65615_l = *it;
			{
				if ((_65615_l == nullptr)) {
					goto _iter_next_1d4c55895;
				};
				_206916d92_indent((*(_self_))._field_oc);
				_20683c9cc_assignLeft(_self_, &((*(_65615_l))._field_Model));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__20685bc0a_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _206839138_assignArgName, static_cast<jule::Uintptr>(_6568_i));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d4c55895:;
			++it;
			_6568_i++;
			goto _iter_begin_1d4c55895;
		}
		_iter_end_1d4c55895:;
	};
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _20683e391_multiAssignFn(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign>* _67235_a) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	jule::Ptr<_204b133ae_FnCallExprModel> _6777_f = (*((*(_67235_a))))._field_Right.cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31);;
	_206930dcd_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6777_f))._field_Func))._field_Result));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_67235_a))))._field_Right);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_204ce8b8d_Tuple> _6837_tup = _204cdee5e_Tup((*(*(_6777_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_67235_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4c5e3c6:;
		if (it != expr_end) {
			jule::I32 _6848_i = it - expr->begin();
			jule::Ptr<_204ca2b7a_Data> _68415_l = *it;
			{
				if ((_68415_l == nullptr)) {
					goto _iter_next_1d4c5e3c6;
				};
				;
				_206916d92_indent((*(_self_))._field_oc);
				_20683c9cc_assignLeft(_self_, &((*(_68415_l))._field_Model));
				{
					
					if (_204cdb1be_Equal((*(_6837_tup))._field_Types[_6848_i], (*_68415_l.alloc)._field_Type)) {
						_case_begin_1d4c69645:;
						{
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_6848_i));
						}
					}
					else if (_2056a9394_IsAny(&((*_68415_l.alloc)._field_Type))) {
						_case_begin_1d4c66554:;
						{
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_6848_i));
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_206917ee7_pushAnyType((*(_self_))._field_oc, (*(_6837_tup))._field_Types[_6848_i])));
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1d4c6074b:;
						{
							if ((_204cde942_Trait((*(_6837_tup))._field_Types[_6848_i].ptr()) != nullptr)) {
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_204b28cba_Trait> _70510_t1 = _204cde942_Trait((*_68415_l.alloc)._field_Type.ptr());;
								jule::Ptr<_204b28cba_Trait> _70610_t2 = _204cde942_Trait((*(_6837_tup))._field_Types[_6848_i].ptr());;
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_6848_i));
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_2069188bb_pushAndWriteMaskMapper((*(_self_))._field_oc, _70510_t1, _70610_t2);
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1d4c6164d;
							};
							jule::Ptr<_204b28cba_Trait> _7145_t = _204cde942_Trait((*_68415_l.alloc)._field_Type.ptr());;
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_6848_i));
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__20685ca1e_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7145_t);
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_2056ac276_FindTraitTypeOffset(_7145_t, (*(_6837_tup))._field_Types[_6848_i])));
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1d4c6164d:;
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d4c5e3c6:;
			++it;
			_6848_i++;
			goto _iter_begin_1d4c5e3c6;
		}
		_iter_end_1d4c5e3c6:;
	};
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _20683e649_multiAssign(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd52a5_MultiAssign> _73132_a) {
	{
		auto expr = &((*(_73132_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4c7001e:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _73415_d = *it;
			{
				_20691d173_varInitExpr((*(_self_))._field_oc, &(_73415_d), nullptr);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_206916d92_indent((*(_self_))._field_oc);
			}
			_iter_next_1d4c7001e:;
			++it;
			goto _iter_begin_1d4c7001e;
		}
		_iter_end_1d4c7001e:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d4c7074a:;
			{
				_20683dd30_mapLookupAssign(_self_, &(_73132_a));
				return;;
			}
		}
		_match_end_1d4c706d4:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d4c707d3:;
			{
				_20683e0d8_multiAssignTup(_self_, &(_73132_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d4c72285:;
			{
				_20683e391_multiAssignFn(_self_, &(_73132_a));
			}
		}
		else {
			_case_begin_1d4c7221e:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:753:4"));;
			}
		}
		_match_end_1d4c721a8:;
	};
}



inline jule::Fn<void> _20683e98a_matchExpr(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd59e2_Match> _75730_m) {
	if ((!(_204ca35b5_IsConst((*(_75730_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1d4c747d7, jule::Ptr<__jule_anon_1d4c747d7_ctx>::make(__jule_anon_1d4c747d7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d4c747d7_ctx_handler);;
	};
	if (((!(_204b09064_IsBool((*((*(_75730_m))._field_Expr))._field_Constant.ptr()))) || (!(_204b06968_ReadBool((*((*(_75730_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1d4c75b18, jule::Ptr<__jule_anon_1d4c75b18_ctx>::make(__jule_anon_1d4c75b18_ctx{._self_=_self_,._75730_m=_75730_m}).as<jule::Uintptr>(), __jule_anon_1d4c75b18_ctx_handler);;
	};
	return nullptr;;
}



inline void _20683eced_case(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd59e2_Match> _76725_m, jule::Ptr<_204bd651a_Case> _76746_c) {
	if ((((*(_76746_c))._field_Exprs.len() != 0LL) && (!((*(_76725_m))._field_Comptime)))) {
		if ((((*_76725_m.alloc)._field_Cases.len() > 0LL) && ((*(_76725_m))._field_Cases[0LL] == _76746_c))) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_76746_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d4c79da3:;
			if (it != expr_end) {
				jule::I32 _7749_i = it - expr->begin();
				jule::Ptr<_204ca2b7a_Data> _77416_expr = *it;
				{
					{
						
						if ((!((*_76725_m.alloc)._field_TypeMatch))) {
							_case_begin_1d4c8296b:;
							{
								jule::Fn<void> _7776_caseExpr = _20683e98a_matchExpr(_self_, _76725_m);;
								if (_204ca3906_GoodOperand((*_76725_m.alloc)._field_Expr.ptr(), &(_77416_expr))) {
									if ((_7776_caseExpr != nullptr)) {
										_7776_caseExpr();
										_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_20684a501_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77416_expr))._field_Model);
								} else {
									_20684a501_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77416_expr))._field_Model);
									if ((_7776_caseExpr != nullptr)) {
										_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7776_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1d4c7aa0d:;
							{
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_204cda982_Type> _79310_tk = (*(_77416_expr))._field_Model.cast_ptr<_204cda982_Type>(&__jule_any_type87);;
								if ((_204cde942_Trait((*((*_76725_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_2068467e9_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_204cdd3be_Sptr((*(_77416_expr))._field_Type) != nullptr));
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__20685ca1e_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _204cde942_Trait((*((*(_76725_m))._field_Expr))._field_Type));
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_2056ac276_FindTraitTypeOffset(_204cde942_Trait((*((*(_76725_m))._field_Expr))._field_Type), (*_77416_expr.alloc)._field_Type)));
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _8037_j = _206917ee7_pushAnyType((*(_self_))._field_oc, _79310_tk);;
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_8037_j));
								};
							}
						}
						_match_end_1d4c7a8ed:;
					};
					if ((((*_76746_c.alloc)._field_Exprs.len() - _7749_i) > 1LL)) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1d4c79da3:;
				++it;
				_7749_i++;
				goto _iter_begin_1d4c79da3;
			}
			_iter_end_1d4c79da3:;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_76725_m))._field_Default == _76746_c) && ((*_76725_m.alloc)._field_Cases.len() != 0LL))) {
		_206916d92_indent((*(_self_))._field_oc);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_206916996_addIndent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685ec30_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_76746_c));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_76746_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_206916d92_indent((*(_self_))._field_oc);
		_206842064_scope(_self_, (*_76746_c.alloc)._field_Scope);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2068400a6_matchSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd59e2_Match> _83728_m) {
	if ((((*(_83728_m))._field_Cases.len() == 0LL) && ((*_83728_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*(_83728_m))._field_Comptime && (((*_83728_m.alloc)._field_Default == nullptr) || ((*((*((*_83728_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	if (((!((*(_83728_m))._field_Comptime)) && (!(_204ca35b5_IsConst((*_83728_m.alloc)._field_Expr.ptr()))))) {
		if ((_2067187ba_Copy && _206842cbd_isCopyOptimizable(&((*_83728_m.alloc)._field_Expr)))) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_83728_m))._field_Expr.alloc)._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_206916d92_indent((*(_self_))._field_oc);
	};
	if (((*(_83728_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_83728_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d4c9ad19:;
			if (it != expr_end) {
				jule::Ptr<_204bd651a_Case> _86516_c = *it;
				{
					if ((_86516_c == nullptr)) {
						goto _iter_next_1d4c9ad19;
					};
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_206916d92_indent((*(_self_))._field_oc);
					_20683eced_case(_self_, _83728_m, _86516_c);
				}
				_iter_next_1d4c9ad19:;
				++it;
				goto _iter_begin_1d4c9ad19;
			}
			_iter_end_1d4c9ad19:;
		};
	};
	if (((*(_83728_m))._field_Default != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_20683eced_case(_self_, _83728_m, (*_83728_m.alloc)._field_Default);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685e944_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_83728_m));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _20684035e_fallSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd6c13_FallSt> _89223_f) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__20685ec30_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89223_f))._field_DestCase);
}



inline void _206840617_breakSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd377b_BreakSt> _89724_b) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_89724_b))._field_It != 0LLU)) {
		static__20685e081_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_89724_b.alloc)._field_It);
	} else {
		static__20685e944_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89724_b))._field_Mtch);
	};
}



inline void _2068408c0_setResult(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd70a9_RetSt> _90630_r) {
	if (((*((*((*((*(_90630_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_90630_r.alloc)._field_Expr);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_206916d92_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_90630_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d4ca5b9d:;
			{
				jule::Slice<jule::Ptr<_204ca2b7a_Data>> _9168_datas = (*((*(_90630_r))._field_Expr.unsafe_cast_ptr<_204b169bc_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9168_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d4ca9883:;
					if (it != expr_end) {
						jule::I32 _9178_i = it - expr->begin();
						jule::Ptr<_204ca2b7a_Data> _91711_data = *it;
						{
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_9178_i));
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_91711_data))._field_Model);
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_206916d92_indent((*(_self_))._field_oc);
						}
						_iter_next_1d4ca9883:;
						++it;
						_9178_i++;
						goto _iter_begin_1d4ca9883;
					}
					_iter_end_1d4ca9883:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d4ca882c:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_206854917_model((*(*(_self_))._field_oc.alloc)._field_ec, (*(_90630_r))._field_Expr);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1d4ca8442:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:930:4"));;
			}
		}
		_match_end_1d4ca83cb:;
	};
}



inline void _206840b78_retSt(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd70a9_RetSt> _93426_r) {
	if (_204b1da5c_IsVoid((*((*(_93426_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_93426_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_93426_r))._field_Func.alloc)._field_Result);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_93426_r))._field_Expr != nullptr)) {
		_2068408c0_setResult(_self_, _93426_r);
	};
	if ((*((*((*(_93426_r))._field_Func))._field_Decl))._field_Exceptional) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_206930dcd_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_93426_r))._field_Func.alloc)._field_Result));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _206840e31_var(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204c5319c_Var> _97024_v) {
	if ((!((*(_97024_v))._field_Constant))) {
		_20691d42b_var((*(_self_))._field_oc, _97024_v);
	};
}



inline void _2068411d9_mutSlicing(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_206505222_MutSlicingExprModel> _97631_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_97631_m))._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_200e4e589_Production))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_206918b74_locInfo((*(_self_))._field_oc, &((*_97631_m.alloc)._field_Token));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Left);
	if (((*_97631_m.alloc)._field_Right != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Right);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _206841492_swap(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_206503e79_SwapExprModel> _99325_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_20684a501_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99325_m))._field_Left))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_20684a501_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_99325_m.alloc)._field_Right))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20684174a_exceptionalForwarding(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_2064e2693_ExceptionalForwardingExprModel> _100142_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_20684be2b_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_100142_m))._field_Expr));
}



inline void _206841a03_st(jule::Ptr<_206839897_scopeCoder> _self_, jule::Any _100723_st) {
	if ((_100723_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _100723_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d4cc6a6a:;
			{
				_206842064_scope(_self_, _100723_st.unsafe_cast_ptr<_204bd11d5_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d4cc6ce0:;
			{
				_206840e31_var(_self_, _100723_st.unsafe_cast_ptr<_204c5319c_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d4cc6d56:;
			{
				_206854917_model((*((*_self_.alloc)._field_oc))._field_ec, (*(_100723_st.unsafe_cast_ptr<_204ca2b7a_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1d4cc75c6:;
			{
				_20683b338_conditional(_self_, _100723_st.unsafe_cast_ptr<_204bd1d1d_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d4cc763c:;
			{
				_20683b5e1_infIter(_self_, _100723_st.unsafe_cast_ptr<_204bd211a_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d4cc76a3:;
			{
				_20683b899_whileIter(_self_, _100723_st.unsafe_cast_ptr<_204bd25c1_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d4cc7719:;
			{
				_20683bb52_rangeIter(_self_, _100723_st.unsafe_cast_ptr<_204bd301c_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1d4cc7780:;
			{
				_20683be0a_cont(_self_, _100723_st.unsafe_cast_ptr<_204bd33a2_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1d4cc77e6:;
			{
				_20683c1b3_label(_self_, _100723_st.unsafe_cast_ptr<_204bd3c32_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d4cc785c:;
			{
				_20683c46b_gotoSt(_self_, _100723_st.unsafe_cast_ptr<_204bd4392_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1d4cc78c3:;
			{
				_20683c724_postfix(_self_, _100723_st.unsafe_cast_ptr<_204bd476b_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d4cc7939:;
			{
				_20683da77_assign(_self_, _100723_st.unsafe_cast_ptr<_204bd4c22_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1d4cc79a0:;
			{
				_20683e649_multiAssign(_self_, _100723_st.unsafe_cast_ptr<_204bd52a5_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d4cc7a16:;
			{
				_2068400a6_matchSt(_self_, _100723_st.unsafe_cast_ptr<_204bd59e2_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d4cc7a7c:;
			{
				_20684035e_fallSt(_self_, _100723_st.unsafe_cast_ptr<_204bd6c13_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d4cc7b04:;
			{
				_206840617_breakSt(_self_, _100723_st.unsafe_cast_ptr<_204bd377b_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d4cc7b7b:;
			{
				_206840b78_retSt(_self_, _100723_st.unsafe_cast_ptr<_204bd70a9_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1d4cc7c03:;
			{
				_206852140_pushToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.unsafe_cast_ptr<_206505be5_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1d4cc7c7a:;
			{
				_2068523e8_appendToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.unsafe_cast_ptr<_2065060be_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1d4cc7d02:;
			{
				_2068411d9_mutSlicing(_self_, _100723_st.unsafe_cast_ptr<_206505222_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1d4cc7d79:;
			{
				_206841492_swap(_self_, _100723_st.unsafe_cast_ptr<_206503e79_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1d4cc7e01:;
			{
				_20684174a_exceptionalForwarding(_self_, _100723_st.unsafe_cast_ptr<_2064e2693_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1d4cc7e78:;
			{
				_20683acc7_strRuneIter(_self_, _100723_st.unsafe_cast_ptr<_206506498_StrRuneIter>());
			}
		}
		else {
			_case_begin_1d4cc68d3:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1d4cc686c:;
	};
}



inline void _206841cab_scopeStmts(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd11d5_Scope>* _106332_s) {
	{
		auto expr = &((*((*(_106332_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4cd5ae0:;
		if (it != expr_end) {
			jule::Any _106415_st = *it;
			{
				_206916d92_indent((*(_self_))._field_oc);
				_206841a03_st(_self_, _106415_st);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d4cd5ae0:;
			++it;
			goto _iter_begin_1d4cd5ae0;
		}
		_iter_end_1d4cd5ae0:;
	};
}



inline void _206842064_scope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204bd11d5_Scope> _107226_s) {
	_206916996_addIndent((*(_self_))._field_oc);
	if ((*(_107226_s))._field_Deferred) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206841cab_scopeStmts(_self_, &(_107226_s));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_107226_s))._field_Deferred) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _20684231c_commonFuncScope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204b21664_FnIns>* _108737_f) {
	if ((!(_204b1da5c_IsVoid((*((*(_108737_f))))._field_Decl.ptr())))) {
		jule::Ptr<_204ce8b8d_Tuple> _10898_tup = _204cdee5e_Tup((*((*(_108737_f))))._field_Result.ptr());;
		if ((_10898_tup != nullptr)) {
			_206916d92_indent((*(_self_))._field_oc);
			_206930707_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10898_tup);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_10898_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d4cdc83e:;
				if (it != expr_end) {
					jule::I32 _109410_i = it - expr->begin();
					jule::Ptr<_204cda982_Type> _109417_t = *it;
					{
						if (_2069330ab_shouldInitialized(&(_109417_t))) {
							_206916d92_indent((*(_self_))._field_oc);
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_109410_i));
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_206855ad3_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _109417_t);
							_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1d4cdc83e:;
					++it;
					_109410_i++;
					goto _iter_begin_1d4cdc83e;
				}
				_iter_end_1d4cdc83e:;
			};
		} else if (((*((*(*((*(_108737_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_206916d92_indent((*(_self_))._field_oc);
			_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_108737_f))))._field_Result);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_2069330ab_shouldInitialized(&((*((*(_108737_f))))._field_Result))) {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_206855ad3_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_108737_f))))._field_Result);
			};
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_206841cab_scopeStmts(_self_, &((*((*(_108737_f))))._field_Scope));
	if (((*((*((*(_108737_f))))._field_Decl))._field_Exceptional && _204b1da5c_IsVoid((*((*(_108737_f))))._field_Decl))) {
		_206916d92_indent((*_self_.alloc)._field_oc);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _206842680_anonFuncScope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel> _112734_m, jule::Str _112761_ident) {
	if (((*((*(_112734_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11313_closure = _2056a96d5_IsClosure(&(_112734_m));;
	if (_11313_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_204c5319c_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_204c5319c_Var>>((void*)__jule_anon_1d4ceb0cd, jule::Ptr<__jule_anon_1d4ceb0cd_ctx>::make(__jule_anon_1d4ceb0cd_ctx{._self_=_self_,._112734_m=_112734_m}).as<jule::Uintptr>(), __jule_anon_1d4ceb0cd_ctx_handler); __jule_collection; }));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	if (_11313_closure) {
		_206916d92_indent((*(_self_))._field_oc);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_2069164e0_write((*(_self_))._field_oc, _112761_ident);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_2069164e0_write((*(_self_))._field_oc, _112761_ident);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_20684231c_commonFuncScope(_self_, &((*(_112734_m))._field_Func));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11313_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _206842938_funcScope(jule::Ptr<_206839897_scopeCoder> _self_, jule::Ptr<_204b21664_FnIns> _115930_f) {
	if (((*(_115930_f))._field_Scope == nullptr)) {
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	_20684231c_commonFuncScope(_self_, &(_115930_f));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_206845d8c_exprCoder> static__206846288_new(jule::Ptr<_206915cc5_ObjectCoder>* _4921_oc) {
	return jule::new_ptr<_206845d8c_exprCoder>(_206845d8c_exprCoder{._field_oc=(*(_4921_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_204c5319c_Var>>>(nullptr)});;
}



inline void _206846541_string(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const>* _5524_c) {
	jule::Str _563_content = _204b06bee_ReadStr((*(_5524_c)).ptr());;
	if ((_563_content.len() == 0LL)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _613_len = _201a15ca9_FmtInt(static_cast<jule::I64>(_563_content.len()), 10LL);;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_206856892_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _563_content);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2069164e0_write((*(_self_))._field_oc, _613_len);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2068467e9_boolean(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Bool _7024_b) {
	if (_7024_b) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _2068469e7_nilLit(jule::Ptr<_206845d8c_exprCoder> _self_) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _206846d38_ftoaSpecialCases(jule::Ptr<_206845d8c_exprCoder> _self_, jule::F64* _8234_x) {
	{
		
		if (_2019ba775_IsNaN((*(_8234_x)))) {
			_case_begin_1d4d20476:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_2019bae07_IsInf((*(_8234_x)), 1LL)) {
			_case_begin_1d4d20520:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_2019bae07_IsInf((*(_8234_x)), -1LL)) {
			_case_begin_1d4d20597:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1d4d203dd:;
			{
				return false;;
			}
		}
		_match_end_1d4d202cd:;
	};
	return true;;
}



inline void _2068470e1_float32(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const>* _9625_c) {
	jule::F64 _973_x = _204b07738_AsF64((*(_9625_c)).ptr());;
	if (_206846d38_ftoaSpecialCases(_self_, &(_973_x))) {
		return;;
	};
	{
		
		if ((_973_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1d4d24733:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_973_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1d4d23b0b:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1d4d23776:;
			{
				_206856c38_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _973_x, 32LL);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1d4d23512:;
	};
}



inline void _206847399_float64(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const>* _11525_c) {
	jule::F64 _1163_x = _204b07738_AsF64((*(_11525_c)).ptr());;
	if (_206846d38_ftoaSpecialCases(_self_, &(_1163_x))) {
		return;;
	};
	{
		
		if ((_1163_x == jule::MAX_F64)) {
			_case_begin_1d4d27071:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1163_x == jule::MIN_F64)) {
			_case_begin_1d4d26c52:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1d4d26bdb:;
			{
				_206856c38_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1163_x, 64LL);
			}
		}
		_match_end_1d4d26977:;
	};
}



inline void _206847652_constant(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a9d338_Const> _13329_c) {
	{
		
		if (_204b092ea_IsStr(_13329_c.ptr())) {
			_case_begin_1d4d28dec:;
			{
				_206846541_string(_self_, &(_13329_c));
			}
		}
		else if (_204b09064_IsBool(_13329_c.ptr())) {
			_case_begin_1d4d28e63:;
			{
				_2068467e9_boolean(_self_, _204b06968_ReadBool(_13329_c));
			}
		}
		else if (_204b09581_IsF64(_13329_c)) {
			_case_begin_1d4d28ec9:;
			{
				{
					
					if (((*_13329_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1d4d2b916:;
						{
							_2068470e1_float32(_self_, &(_13329_c));
						}
					}
					else {
						_case_begin_1d4d2b570:;
						{
							_206847399_float64(_self_, &(_13329_c));
						}
					}
					_match_end_1d4d2b460:;
				};
			}
		}
		else if (_204b08a47_IsI64(_13329_c)) {
			_case_begin_1d4d29040:;
			{
				_206857024_itoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _204b0644b_ReadI64(_13329_c));
			}
		}
		else if (_204b08ccd_IsU64(_13329_c)) {
			_case_begin_1d4d290a6:;
			{
				_206857310_utoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _204b066d2_ReadU64(_13329_c));
			}
		}
		else if (_204b09817_IsNil(_13329_c)) {
			_case_begin_1d4d2911c:;
			{
				_2068469e7_nilLit(_self_);
			}
		}
		else {
			_case_begin_1d4d28d86:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1d4d28c87:;
	};
}



inline void _206847a70_operatorOverloadingUnary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _15746_s, jule::U32 _15767_op, jule::Any _15786_e) {
	;
	jule::Ptr<_204b21664_FnIns> _1597_f = _2056ac6a5_FindOperator(_15746_s, _15767_op, true);;
	if ((_1597_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:161:4"));;
	};
	static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1597_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_20684a501_possibleRefExpr(_self_, _15786_e);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _206847e8d_divByZeroBinary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a14216_Token>* _16933_op, jule::Ptr<_204b10dd4_OperandExprModel>* _16957_l, jule::Ptr<_204b10dd4_OperandExprModel>* _16990_r) {
	;
	;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16957_l))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_20684a501_possibleRefExpr(_self_, (*((*(_16957_l))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16990_r))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_20684a501_possibleRefExpr(_self_, (*((*(_16990_r))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_200e4e589_Production))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_206918b74_locInfo((*(_self_))._field_oc, _16933_op);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16957_l))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16933_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1d4d3a2e8:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1d4d3da27:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1d4d3d97d:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _206848686__unsafeBinary(jule::Ptr<_206845d8c_exprCoder> _self_, _1eeabb290_Builder* _20835_buf, jule::Str* _20859_l, jule::Str* _20868_r, jule::Ptr<_204cda982_Type>* _2098_lk, jule::Ptr<_204cda982_Type>* _20930_rk, jule::U32 _20947_op, jule::Str _20962_kind) {
	if ((_204cde6ab_Struct((*(_2098_lk)).ptr()) != nullptr)) {
		jule::Ptr<_204a4d2c7_StructIns> _2128_s = _204cde6ab_Struct((*(_2098_lk)).ptr());;
		_20685795e_operatorOverloadingBinary(_20835_buf, &(_2128_s), _20859_l, _20868_r, _20947_op, _20962_kind);
		return;;
	};
	if (((_20947_op == static_cast<jule::U32>(50LLU)) || (_20947_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_2056a9394_IsAny(_2098_lk)) {
				_case_begin_1d4d43576:;
				{
					if (((!(_204cdbab5_IsNil((*(_20930_rk)).ptr()))) && (!(_2056a9394_IsAny(_20930_rk))))) {
						({
							auto except = _1eeabc527_WriteByte(_20835_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:224:6"));
						});
						if ((_20947_op == static_cast<jule::U32>(51LLU))) {
							({
								auto except = _1eeabc527_WriteByte(_20835_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:226:7"));
							});
						};
						jule::I32 _2286_i = _206917ee7_pushAnyType((*(_self_))._field_oc, (*(_20930_rk)));;
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:229:6"));
							(except.result);
						});
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, _201a16073_Itoa(_2286_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:230:6"));
							(except.result);
						});
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:231:6"));
							(except.result);
						});
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, (*(_20859_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
							(except.result);
						});
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:233:6"));
							(except.result);
						});
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, (*(_20868_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:234:6"));
							(except.result);
						});
						({
							auto except = _1eeabc26e_WriteStr(_20835_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:235:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_204cdde08_Arr((*(_2098_lk)).ptr()) != nullptr)) {
				_case_begin_1d4d43620:;
				{
					jule::Ptr<_204cea3ba_Arr> _2415_arr = _204cdde08_Arr((*(_2098_lk)).ptr());;
					jule::Ptr<_204b21664_FnIns> _2429_ins = _2056aca29_FindFnGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2415_arr))._field_Elem; __jule_collection; }));;
					if ((_20947_op == static_cast<jule::U32>(51LLU))) {
						({
							auto except = _1eeabc527_WriteByte(_20835_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:244:6"));
						});
					};
					static__20685c733_funcIns(_20835_buf, &(_2429_ins));
					({
						auto except = _1eeabc527_WriteByte(_20835_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:247:5"));
					});
					({
						auto except = _1eeabc26e_WriteStr(_20835_buf, (*(_20859_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:248:5"));
						(except.result);
					});
					({
						auto except = _1eeabc26e_WriteStr(_20835_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:249:5"));
						(except.result);
					});
					({
						auto except = _1eeabc26e_WriteStr(_20835_buf, (*(_20868_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:250:5"));
						(except.result);
					});
					({
						auto except = _1eeabc26e_WriteStr(_20835_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
						(except.result);
					});
					({
						auto except = _1eeabc26e_WriteStr(_20835_buf, _201a16073_Itoa((*_2415_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:252:5"));
						(except.result);
					});
					({
						auto except = _1eeabc527_WriteByte(_20835_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
					return;;
				}
			}
			_match_end_1d4d43488:;
		};
	};
	{
		auto &_match_expr{ _20947_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1d4d47338:;
			{
				jule::Ptr<_204ce3a9a_Prim> _2614_lp = _204cdd138_Prim((*(_2098_lk)).ptr());;
				if (((_2614_lp != nullptr) && _204ba19d0_IsUnsigInt((*_2614_lp.alloc)._field_Kind))) {
					({
						auto except = _1eeabc527_WriteByte(_20835_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:5"));
					});
					_206926951_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20835_buf, _2614_lp);
					({
						auto except = _1eeabc527_WriteByte(_20835_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:265:5"));
					});
				};
			}
		}
		_match_end_1d4d472c2:;
	};
	({
		auto except = _1eeabc527_WriteByte(_20835_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:269:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_20835_buf, (*(_20859_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:270:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_20835_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:271:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_20835_buf, _20962_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:272:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_20835_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:273:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_20835_buf, (*(_20868_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:274:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_20835_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:275:3"));
	});
}



inline void _20684893e_unsafeBinary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b113ce_BinaryExprModel> _27833_m) {
	jule::I32 _2793_i = _1eeabd083_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2807_oldbuf = _1eeabd5a0_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_20684a501_possibleRefExpr(_self_, (*((*(_27833_m))._field_Left))._field_Model);
	jule::Str _2823_l = __jule_bytesToStr(_1eeabd5a0_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1eeabd858_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_20684a501_possibleRefExpr(_self_, (*((*_27833_m.alloc)._field_Right))._field_Model);
	jule::Str _2853_r = __jule_bytesToStr(_1eeabd5a0_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1eeabd858_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_206848686__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2823_l), &(_2853_r), &((*(*(_27833_m))._field_Left.alloc)._field_Type), &((*(*(_27833_m))._field_Right.alloc)._field_Type), (*((*_27833_m.alloc)._field_Op))._field_Id, (*(*(_27833_m))._field_Op.alloc)._field_Kind);
}



inline void _206848ca2_shl(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b10dd4_OperandExprModel>* _29025_l, jule::Ptr<_204b10dd4_OperandExprModel>* _29058_r) {
	;
	;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_20684a501_possibleRefExpr(_self_, (*((*(_29025_l))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29058_r))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_20684a501_possibleRefExpr(_self_, (*((*(_29058_r))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_204b98c2a_BitSizeOf((*(_204cdd138_Prim((*((*(_29025_l))))._field_Type.ptr())))._field_Kind)));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _206849115_shr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b10dd4_OperandExprModel>* _31825_l, jule::Ptr<_204b10dd4_OperandExprModel>* _31858_r) {
	;
	;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_20684a501_possibleRefExpr(_self_, (*((*(_31825_l))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31858_r))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_20684a501_possibleRefExpr(_self_, (*((*(_31858_r))))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_204b98c2a_BitSizeOf((*(_204cdd138_Prim((*((*(_31825_l))))._field_Type.ptr())))._field_Kind)));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _2068493bd_binary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b113ce_BinaryExprModel> _34627_m) {
	{
		auto &_match_expr{ (*((*(_34627_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1d4d6ec23:;
			{
				if ((_200e4e347_Safety && (_204cde6ab_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr))) {
					_206847e8d_divByZeroBinary(_self_, &((*_34627_m.alloc)._field_Op), &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1d4d6ec9a:;
			{
				if ((_204cde6ab_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_206848ca2_shl(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1d4d6ed11:;
			{
				if ((_204cde6ab_Struct((*((*(_34627_m))._field_Left))._field_Type) == nullptr)) {
					_206849115_shr(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1d4d6eb57:;
	};
	_20684893e_unsafeBinary(_self_, _34627_m);
}



inline void _206849676_var(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204c5319c_Var> _37024_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d74b29:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_204c5319c_Var>> _37110_prefix = *it;
			{
				if (_37110_prefix(_37024_m)) {
					return;;
				};
			}
			_iter_next_1d4d74b29:;
			++it;
			goto _iter_begin_1d4d74b29;
		}
		_iter_end_1d4d74b29:;
	};
	if ((*(_37024_m))._field_Binded) {
		jule::Ptr<_204a2902d_Directive> _3774_d = _2056ab000_FindDirective(&((*_37024_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3774_d != nullptr)) {
			_206916798_writeBytes((*_self_.alloc)._field_oc, _20692381b_concatAllParts((*_3774_d.alloc)._field_Args));
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__20685d9a9_var(&((*((*_self_.alloc)._field_oc))._field_Buf), _37024_m);
}



inline void _20684992e_structureIns(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4d2c7_StructIns> _38633_m) {
	_2069291d4_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38633_m);
}



inline void _206849bd7_unary(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b117a8_UnaryExprModel> _39026_m) {
	if ((_204cde6ab_Struct((*((*(_39026_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_204a4d2c7_StructIns> _3938_s = _204cde6ab_Struct((*((*(_39026_m))._field_Expr))._field_Type);;
		_206847a70_operatorOverloadingUnary(_self_, &(_3938_s), (*((*_39026_m.alloc)._field_Op))._field_Id, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1d4d7ae3d:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_20684a501_possibleRefExpr(_self_, (*((*(_39026_m))._field_Expr))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1d4d7b79b:;
			{
				if ((_200e4e589_Production || (_204cdd3be_Sptr((*((*(_39026_m))._field_Expr))._field_Type.ptr()) == nullptr))) {
					goto _match_end_1d4d7b702;
				};
				_20684a501_possibleRefExpr(_self_, (*((*(_39026_m))._field_Expr))._field_Model);
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_206918b74_locInfo((*(_self_))._field_oc, &((*_39026_m.alloc)._field_Op));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1d4d7b702:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2069164e0_write((*(_self_))._field_oc, (*((*(_39026_m))._field_Op))._field_Kind);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr(_self_, (*((*_39026_m.alloc)._field_Expr))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _206849e90_structureLit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1217c_StructLitExprModel> _42133_m) {
	if ((*((*((*(_42133_m))._field_Strct))._field_Decl))._field_Binded) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_20684992e_structureIns(_self_, (*(_42133_m))._field_Strct);
	if ((*((*((*_42133_m.alloc)._field_Strct))._field_Decl))._field_Binded) {
		_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4327_inited = false;;
	_julec_label_1d4d84ead:;
	{
		auto expr = &((*((*_42133_m.alloc)._field_Strct))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d86465:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> _43415_f = *it;
			{
				{
					auto expr = &((*_42133_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d4d87202:;
					if (it != expr_end) {
						jule::Ptr<_204b11cd6_StructArgExprModel> _43516_arg = *it;
						{
							if (((*(_43516_arg))._field_Field == _43415_f)) {
								if (_4327_inited) {
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__20685d6bd_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43415_f))._field_Decl));
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_20684a501_possibleRefExpr(_self_, (*((*_43516_arg.alloc)._field_Expr))._field_Model);
								_4327_inited=true;
								goto _iter_next_1d4d86465;
							};
						}
						_iter_next_1d4d87202:;
						++it;
						goto _iter_begin_1d4d87202;
					}
					_iter_end_1d4d87202:;
				};
				if ((*((*((*_42133_m.alloc)._field_Strct))._field_Decl))._field_Binded) {
					_4327_inited=false;
					goto _iter_next_1d4d86465;
				};
				if (_4327_inited) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4327_inited=_206854c58_handleFieldByDefault(_self_, &(_43415_f));
			}
			_iter_next_1d4d86465:;
			++it;
			goto _iter_begin_1d4d86465;
		}
		_iter_end_1d4d86465:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _20684a248_allocStructure(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b12479_AllocStructLitExprModel> _46435_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_20684992e_structureIns(_self_, (*((*(_46435_m))._field_Lit))._field_Strct);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_206849e90_structureLit(_self_, (*_46435_m.alloc)._field_Lit);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20684a501_possibleRefExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _47232_expr) {
	{
		auto &_match_expr{ _47232_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d4d8e6e3:;
			{
				jule::Ptr<_204c5319c_Var> _4754_v = _47232_expr.unsafe_cast_ptr<_204c5319c_Var>();;
				if ((*(_4754_v))._field_Reference) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_206854917_model(_self_, _47232_expr);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1d4d8e67c:;
	};
	_206854917_model(_self_, _47232_expr);
}



inline void _20684a91e_castTraitFromTrait(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b12a0c_CastingExprModel>* _48640_m, jule::Ptr<_204b28cba_Trait> _48672_t1, jule::Ptr<_204b28cba_Trait> _48694_t2) {
	_20684a501_possibleRefExpr(_self_, (*((*((*(_48640_m))))._field_Expr))._field_Model);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_2069188bb_pushAndWriteMaskMapper((*(_self_))._field_oc, _48672_t1, _48694_t2);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20684abc7_casting(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b12a0c_CastingExprModel> _49928_m) {
	{
		
		if (_2056a9394_IsAny(&((*(_49928_m))._field_Type))) {
			_case_begin_1d4d942db:;
			{
				if (_204cdbab5_IsNil((*_49928_m.alloc)._field_ExprType.ptr())) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_204cddb72_TypeEnum((*_49928_m.alloc)._field_ExprType.ptr()) != nullptr)) {
					_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _5104_i = _206917ee7_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_ExprType);;
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49928_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1d4d95ebe:;
						{
							jule::Ptr<_204ce3a9a_Prim> _5145_prim = _204cdd138_Prim((*_49928_m.alloc)._field_ExprType.ptr());;
							if (((_5145_prim != nullptr) && _204ba1c99_IsInt((*_5145_prim.alloc)._field_Kind))) {
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_206926951_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5145_prim);
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1d4d98202;
							};
							goto _case_begin_1d4d98268;
						}
					}
					else {
						_case_begin_1d4d98268:;
						{
							_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
						}
					}
					_match_end_1d4d98202:;
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_5104_i));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_2056a9394_IsAny(&((*(_49928_m))._field_ExprType))) {
			_case_begin_1d4d94385:;
			{
				_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_204cdd3be_Sptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_204cdd3be_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_200e4e589_Production))) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_206918b74_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_206917ee7_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_Type)));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_204cdd655_Ptr((*_49928_m.alloc)._field_ExprType.ptr()) != nullptr) || (_204cdd655_Ptr((*(_49928_m))._field_Type) != nullptr)) {
			_case_begin_1d4d943eb:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_20684a501_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_204cde942_Trait((*(_49928_m))._field_ExprType) != nullptr)) {
			_case_begin_1d4d94462:;
			{
				if ((_204cde942_Trait((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_20684a91e_castTraitFromTrait(_self_, &(_49928_m), _204cde942_Trait((*(_49928_m))._field_Type), _204cde942_Trait((*(_49928_m))._field_ExprType));
					return;;
				};
				_20684a501_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_204cdd3be_Sptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_204cdd3be_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_200e4e589_Production))) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_206918b74_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__20685ca1e_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _204cde942_Trait((*(_49928_m))._field_ExprType));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_2056ac276_FindTraitTypeOffset(_204cde942_Trait((*(_49928_m))._field_ExprType), (*_49928_m.alloc)._field_Type)));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_204cde942_Trait((*(_49928_m))._field_Type) != nullptr)) {
			_case_begin_1d4d944c8:;
			{
				_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_20684a501_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__20685ca1e_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _204cde942_Trait((*_49928_m.alloc)._field_Type.ptr()));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_2056ac276_FindTraitTypeOffset(_204cde942_Trait((*(_49928_m))._field_Type), (*_49928_m.alloc)._field_ExprType)));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1d4d94154:;
	};
	jule::Ptr<_204ce3a9a_Prim> _5967_prim = _204cdd138_Prim((*(_49928_m))._field_Type.ptr());;
	if (((_5967_prim != nullptr) && _204ce7065_IsStr(_5967_prim))) {
		jule::Ptr<_204ce3a9a_Prim> _5988_eprim = _204cdd138_Prim((*_49928_m.alloc)._field_ExprType.ptr());;
		if (((_5988_eprim != nullptr) && (_5967_prim != nullptr))) {
			if (_204ce54c5_IsU8(_5988_eprim)) {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_204ce8099_Slc> _6098_slc = _204cde18e_Slc((*(_49928_m))._field_ExprType);;
		if ((_6098_slc != nullptr)) {
			_5988_eprim=_204cdd138_Prim((*_6098_slc.alloc)._field_Elem.ptr());
			if (_204ce4ea8_IsI32(_5988_eprim.ptr())) {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5967_prim=_204cdd138_Prim((*_49928_m.alloc)._field_ExprType.ptr());
	if (((_5967_prim != nullptr) && _204ce7065_IsStr(_5967_prim))) {
		jule::Ptr<_204ce8099_Slc> _6258_slc = _204cde18e_Slc((*(_49928_m))._field_Type);;
		if ((_6258_slc != nullptr)) {
			_5967_prim=_204cdd138_Prim((*_6258_slc.alloc)._field_Elem.ptr());
			if (_204ce4ea8_IsI32(_5967_prim.ptr())) {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_20684a501_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20684ae80_args(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _64626_m) {
	jule::I32 _6477_j = 0LL;;
	if (((((*((*((*(_64626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*((*((*(_64626_m))))._field_Func))._field_Params.len() > 0LL) && _204b1c231_IsSelf((*((*(*((*(_64626_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6477_j)++;
	};
	{
		auto expr = &((*((*(_64626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4dcab08:;
		if (it != expr_end) {
			jule::I32 _6527_i = it - expr->begin();
			jule::Any _65210_arg = *it;
			{
				jule::Ptr<_204b2050e_ParamIns> _6534_p = (*((*((*(_64626_m))))._field_Func))._field_Params[_6477_j];;
				if ((((*(_6534_p))._field_Decl != nullptr) && (*(*(_6534_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1d4dcd9b8:;
							{
								jule::Ptr<_204c5319c_Var> _6576_v = _65210_arg.unsafe_cast_ptr<_204c5319c_Var>();;
								if ((*(_6576_v))._field_Reference) {
									_206854917_model(_self_, _65210_arg);
									goto _julec_label_1d4dd1515;
								};
							}
						}
						_match_end_1d4dcd952:;
					};
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_206854917_model(_self_, _65210_arg);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1d4dd1515;
				};
				_20684a501_possibleRefExpr(_self_, _65210_arg);
				_julec_label_1d4dd1515:;
				if ((((*((*(_64626_m))))._field_Args.len() - _6527_i) > 1LL)) {
					_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_6477_j)++;
			}
			_iter_next_1d4dcab08:;
			++it;
			_6527_i++;
			goto _iter_begin_1d4dcab08;
		}
		_iter_end_1d4dcab08:;
	};
}



inline void _20684b238_modelForCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _67733_expr) {
	{
		auto &_match_expr{ _67733_expr };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d4dd2538:;
			{
				_20684e868_funcIns(_self_, _67733_expr.unsafe_cast_ptr<_204b21664_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d4dd19ee:;
			{
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _6838_ssie = _67733_expr.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>();;
				if (((*(_6838_ssie))._field_Method != nullptr)) {
					_20684e868_funcIns(_self_, (*_6838_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1d4dcc951:;
	};
	_20684a501_possibleRefExpr(_self_, _67733_expr);
}



inline void _20684b4e1_pushCallInf(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _69229_m) {
	if ((_200e4e589_Production || (!((*((*((*(_69229_m))))._field_Func))._field_Anon)))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_69229_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1d4dd6086:;
				{
					if ((*((*((*((*((*((*(_69229_m))))._field_Expr.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1d4dd6020:;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_206918b74_locInfo((*(_self_))._field_oc, &((*((*(_69229_m))))._field_Token));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69229_m))))._field_Args.len() != 0LL)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _20684b832_isWrapped(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _71531_m) {
	if ((((!(_204b22b2c_IsBuiltin((*((*(_71531_m))))._field_Func.ptr()))) && ((*((*(*((*(_71531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _204b1c231_IsSelf((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1d4ddad49:;
				{
					jule::Ptr<_204b15e50_StructSubIdentExprModel> _7199_ssie = (*((*(_71531_m))))._field_Expr.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>();;
					{
						
						if (_204b1c4b7_IsRef((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_204cdd3be_Sptr((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1d4ddcae8:;
							{
								goto _match_end_1d4ddbca1;
							}
						}
						else {
							_case_begin_1d4ddbd28:;
							{
								if ((_204cde6ab_Struct((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									if ((!((*(*(_7199_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_206854917_model(_self_, (*(*(_7199_ssie))._field_Expr.alloc)._field_Model);
										_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1d4ddbca1:;
					};
				}
			}
			_match_end_1d4ddacd3:;
		};
	};
	return false;;
}



inline jule::Bool _20684bb73_writeReceiver(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _73934_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73934_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d4de2625:;
			{
				_20684a501_possibleRefExpr(_self_, (*((*(_73934_m.unsafe_cast_ptr<_204b117a8_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1d4de2834:;
			{
				_20684a501_possibleRefExpr(_self_, (*((*((*(_73934_m.unsafe_cast_ptr<_206506795_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d4de27bd:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:748:4"));;
			}
		}
		_match_end_1d4de2757:;
	};
}



inline void _20684be2b_pureFuncCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _75234_m) {
	jule::Bool _7533_wrapped = _20684b832_isWrapped(_self_, _75234_m);;
	_20684b238_modelForCall(_self_, (*((*(_75234_m))))._field_Expr);
	if ((!(_204b22b2c_IsBuiltin((*((*(_75234_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75234_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_2056ab3b8_HasDirective(&((*(*((*((*(_75234_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d4deb9d6:;
					if (it != expr_end) {
						jule::I32 _75911_i = it - expr->begin();
						jule::Ptr<_204cd909b_InsGeneric> _75918_g = *it;
						{
							_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75918_g))._field_Type);
							if ((((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() - _75911_i) > 1LL)) {
								_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1d4deb9d6:;
						++it;
						_75911_i++;
						goto _iter_begin_1d4deb9d6;
					}
					_iter_end_1d4deb9d6:;
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_20684b4e1_pushCallInf(_self_, _75234_m);
	if (((*((*((*(_75234_m))))._field_Func))._field_AsAnon && (!((*(*((*(_75234_m))))._field_Func.alloc)._field_Anon)))) {
		_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_204b22b2c_IsBuiltin((*((*(_75234_m))))._field_Func.ptr()))) && ((*((*(*((*(_75234_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _204b1c231_IsSelf((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75234_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1d4e036e1:;
				{
					jule::Ptr<_204b15e50_StructSubIdentExprModel> _7839_ssie = (*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>();;
					{
						
						if (_204b1c4b7_IsRef((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1d4e0797b:;
							{
								_20684bb73_writeReceiver(_self_, (*((*(_7839_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_204cdd3be_Sptr((*((*(_7839_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1d4e09021:;
							{
								jule::Bool _7906_safe = _20684bb73_writeReceiver(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);;
								if (_7906_safe) {
									_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_200e4e589_Production))) {
										_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_206918b74_locInfo((*(_self_))._field_oc, &((*((*(_75234_m))))._field_Token));
										_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1d4e04747:;
							{
								if ((_204cde6ab_Struct((*((*(_7839_ssie))._field_Expr))._field_Type) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7839_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1d4e05094:;
											{
												jule::Ptr<_204c5319c_Var> _8048_v = (*((*(_7839_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
												if ((*(_8048_v))._field_Reference) {
													goto _match_end_1d4e0556c;
												};
												goto _case_begin_1d4e055d3;
											}
										}
										else {
											_case_begin_1d4e055d3:;
											{
												_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1d4e0556c:;
									};
								};
								if (_7533_wrapped) {
									_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_204cdd655_Ptr((*((*(_7839_ssie))._field_Expr))._field_Type) == nullptr)) {
									_206854917_model(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_20684a501_possibleRefExpr(_self_, (*((*((*(*(_7839_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1d4e046c0:;
					};
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1d4e0337d:;
				{
					_20684a501_possibleRefExpr(_self_, (*((*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_204b155ae_TraitSubIdentExprModel>()))._field_Expr);
					_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1d4e03669:;
		};
	};
	_20684ae80_args(_self_, _75234_m);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_7533_wrapped) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _20684c1d4_coFuncCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel>* _84232_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8497_i = jule::Str();;
	if ((((*((*((*(_84232_m))))._field_Func))._field_Params.len() > 0LL) || (*((*((*(_84232_m))))._field_Func))._field_AsAnon)) {
		_8497_i=_201a16073_Itoa(_206917524_pushCoSpawn((*(_self_))._field_oc, (*((*(_84232_m))))._field_Func));
		jule::Str _8524_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8497_i);;
		_2069164e0_write((*(_self_))._field_oc, _8524_t);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_2069164e0_write((*(_self_))._field_oc, _8524_t);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_206916d92_indent((*(_self_))._field_oc);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_20684b238_modelForCall(_self_, (*((*(_84232_m))))._field_Expr);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*((*((*(_84232_m))))._field_Func))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d4e1eb91:;
			if (it != expr_end) {
				jule::I32 _8748_j = it - expr->begin();
				{
					_206916d92_indent((*(_self_))._field_oc);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_8748_j));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_20684a501_possibleRefExpr(_self_, (*((*(_84232_m))))._field_Args[_8748_j]);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1d4e1eb91:;
				++it;
				_8748_j++;
				goto _iter_begin_1d4e1eb91;
			}
			_iter_end_1d4e1eb91:;
		};
		_206916d92_indent((*(_self_))._field_oc);
	};
	if (!(_8497_i).empty()) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8497_i).empty()) {
		static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84232_m))))._field_Func));
	} else {
		_2069164e0_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8497_i));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8497_i).empty()) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8497_i).empty()) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _20684c547_writeUseExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b21664_FnIns>* _92034_f, jule::Ptr<_204ca2b7a_Data> _92055_d) {
	if ((_204cdee5e_Tup((*(_92055_d))._field_Type.ptr()) == nullptr)) {
		_20684a501_possibleRefExpr(_self_, (*_92055_d.alloc)._field_Model);
		_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_204b169bc_TupleExprModel> _9267_tup = (*(_92055_d))._field_Model.cast_ptr<_204b169bc_TupleExprModel>(&__jule_any_type84);;
	_206930707_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _204cdee5e_Tup((*((*(_92034_f))))._field_Result.ptr()));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_9267_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4e3191c:;
		if (it != expr_end) {
			jule::I32 _9297_i = it - expr->begin();
			jule::Ptr<_204ca2b7a_Data> _92910_data = *it;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_9297_i));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_20684a501_possibleRefExpr(_self_, (*(_92910_data))._field_Model);
				if ((((*(_9267_tup))._field_Datas.len() - _9297_i) > 1LL)) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1d4e3191c:;
			++it;
			_9297_i++;
			goto _iter_begin_1d4e3191c;
		}
		_iter_end_1d4e3191c:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _20684c8aa_funcCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b133ae_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional) {
	if ((*(_94129_m))._field_IsCo) {
		_20684c1d4_coFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (((_204b22b2c_IsBuiltin((*(_94129_m))._field_Func.ptr()) || (!((*((*((*(_94129_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_94129_m))._field_Except != nullptr) && ((*((*_94129_m.alloc)._field_Except))._field_Stmts.len() == 0LL)))) {
		_20684be2b_pureFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (_94156_ignoreExceptional) {
		_20684be2b_pureFuncCall(_self_, &(_94129_m));
		if (((*((*(_94129_m))._field_Func))._field_Result != nullptr)) {
			_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_20684be2b_pureFuncCall(_self_, &(_94129_m));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	if (((*(_94129_m))._field_Except != nullptr)) {
		if ((((*((*_94129_m.alloc)._field_Func))._field_Result == nullptr) || (!((*_94129_m.alloc)._field_Assigned)))) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_206842064_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9795_forwarded = _2056a8dee_IsForwarded(&((*_94129_m.alloc)._field_Except));;
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9795_forwarded) {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9849_stmt = (*(*(_94129_m))._field_Except.alloc)._field_Stmts[((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9849_stmt };
				
				if (_match_expr.type == &__jule_any_type22) {
					_case_begin_1d4e40365:;
					{
						((*((*(_94129_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_94129_m))._field_Except))._field_Stmts.len() - 1LL));;
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_206916996_addIndent((*(_self_))._field_oc);
						_206841cab_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_94129_m.alloc)._field_Except));
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_206916d92_indent((*(_self_))._field_oc);
						_20684c547_writeUseExpr(_self_, &((*_94129_m.alloc)._field_Func), _9849_stmt.unsafe_cast_ptr<_204ca2b7a_Data>());
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_206916b94_doneIndent((*(_self_))._field_oc);
						_206916d92_indent((*(_self_))._field_oc);
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1d4e417c8:;
					{
						_206842064_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
					}
				}
				_match_end_1d4e41762:;
			};
			if (_9795_forwarded) {
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_206855ad3_initExpr(_self_, (*((*_94129_m.alloc)._field_Func))._field_Result);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_206916b94_doneIndent((*(_self_))._field_oc);
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_206918b74_locInfo((*(_self_))._field_oc, &((*(_94129_m))._field_Token));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_204b1da5c_IsVoid((*((*_94129_m.alloc)._field_Func))._field_Decl.ptr())))) {
			_206916d92_indent((*(_self_))._field_oc);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_206916b94_doneIndent((*(_self_))._field_oc);
	};
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _20684cb63_slice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b13788_SliceExprModel> _102426_m) {
	if (((*(_102426_m))._field_Elems.len() == 0LL)) {
		_206928337_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102426_m.alloc)._field_ElemType);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_206928337_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_102426_m))._field_ElemType);
	jule::Str _10323_size = _201a16073_Itoa((*_102426_m.alloc)._field_Elems.len());;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_2069164e0_write((*(_self_))._field_oc, _10323_size);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2069164e0_write((*(_self_))._field_oc, _10323_size);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_102426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4e55721:;
		if (it != expr_end) {
			jule::I32 _10427_i = it - expr->begin();
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_20684a501_possibleRefExpr(_self_, (*(_102426_m))._field_Elems[_10427_i]);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1d4e55721:;
			++it;
			_10427_i++;
			goto _iter_begin_1d4e55721;
		}
		_iter_end_1d4e55721:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _20684ce1b_indexing(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b13c3e_IndexingExprModel> _105329_m) {
	{
		auto &_match_expr{ (*((*(_105329_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1d4e5959e:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_200e4e589_Production))) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_206918b74_locInfo((*(_self_))._field_oc, &((*(_105329_m))._field_Token));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10644_s = _204b06bee_ReadStr((*((*(_105329_m))._field_Expr))._field_Model.unsafe_cast_ptr<_204a9d338_Const>().ptr());;
				_206856892_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10644_s);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_10644_s.len()));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_20684a501_possibleRefExpr(_self_, (*((*(_105329_m))._field_Index))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1d4e59538:;
	};
	{
		
		if ((_204cdebc8_Map((*((*(_105329_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1d4e63311:;
			{
				jule::Ptr<_204ce973d_Map> _10778__map = _204cdebc8_Map((*((*(_105329_m))._field_Expr))._field_Type);;
				jule::Ptr<_204a4d2c7_StructIns> _10788_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10778__map))._field_Key; (*it++) = (*_10778__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_204b21664_FnIns> _10808_f = (*(_204a4e372_FindMethod(_10788_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_10808_f));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_20684a501_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_20684a501_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Index))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_200e4e589_Production || (_204cdd655_Ptr((*((*(_105329_m))._field_Expr))._field_Type.ptr()) != nullptr) || _2056a90ca_IsExprComesFromBind(&((*_105329_m.alloc)._field_Expr))) {
			_case_begin_1d4e6094b:;
			{
				_20684a501_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_20684a501_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Index))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1d4e6083b:;
			{
				_20684a501_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_206918b74_locInfo((*(_self_))._field_oc, &((*_105329_m.alloc)._field_Token));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_20684a501_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1d4e5cd66:;
	};
}



inline void _20684d1c4_unsafeIndexing(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_20650581b_UnsafeIndexingExprModel> _110435_m) {
	_20684a501_possibleRefExpr(_self_, (*((*((*(_110435_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_200e4e589_Production || (_204cdd655_Ptr((*(*((*(_110435_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_204cdebc8_Map((*((*((*(_110435_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1d4e6e10d:;
			{
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_20684a501_possibleRefExpr(_self_, (*((*(*(_110435_m))._field_Node.alloc)._field_Index))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1d4e6bb66:;
			{
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_20684a501_possibleRefExpr(_self_, (*((*(*(_110435_m))._field_Node.alloc)._field_Index))._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1d4e6c716:;
	};
}



inline void _20684d47c_anonFunc(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel> _112129_m) {
	jule::Bool _11223_closure = _2056a96d5_IsClosure(&(_112129_m));;
	jule::Str _11233_ident = _206917ba6_pushAnonFn((*(_self_))._field_oc, &(_112129_m));;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_20692a757_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112129_m))._field_Func);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_2069164e0_write((*(_self_))._field_oc, _11233_ident);
	if (_11223_closure) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_2069164e0_write((*(_self_))._field_oc, _11233_ident);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_2069164e0_write((*(_self_))._field_oc, _11233_ident);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_112129_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d4e7380a:;
			if (it != expr_end) {
				jule::I32 _11359_i = it - expr->begin();
				jule::Ptr<_204c5319c_Var> _113516_v = *it;
				{
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__20685d9a9_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _113516_v);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_206849676_var(_self_, _113516_v);
					if ((((*_112129_m.alloc)._field_Captured.len() - _11359_i) > 1LL)) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1d4e7380a:;
				++it;
				_11359_i++;
				goto _iter_begin_1d4e7380a;
			}
			_iter_end_1d4e7380a:;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_2069164e0_write((*(_self_))._field_oc, _11233_ident);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _20684d735_mapExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b14998_MapExprModel> _115228_m) {
	jule::Ptr<_204a4d2c7_StructIns> _11537_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_115228_m))._field_Kind))._field_Key; (*it++) = (*(*(_115228_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_204b21664_FnIns> _11557_maker = (*(_204a4e372_FindMethod(_11537_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_115228_m.alloc)._field_Entries.len() == 0LL)) {
		static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11557_maker));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_204b21664_FnIns> _11627_f = (*(_204a4e372_FindMethod(_11537_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_206928a0d_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115228_m.alloc)._field_Kind);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11557_maker));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_115228_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4e84eae:;
		if (it != expr_end) {
			jule::Ptr<_204b145be_KeyValPairExprModel> _117215_pair = *it;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11627_f));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_20684a501_possibleRefExpr(_self_, (*(_117215_pair))._field_Key);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_20684a501_possibleRefExpr(_self_, (*_117215_pair.alloc)._field_Val);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1d4e84eae:;
			++it;
			goto _iter_begin_1d4e84eae;
		}
		_iter_end_1d4e84eae:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _20684d9dd_slicing(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1502b_SlicingExprModel> _118728_m) {
	_20684a501_possibleRefExpr(_self_, (*(_118728_m))._field_Expr);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_200e4e589_Production))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_206918b74_locInfo((*(_self_))._field_oc, &((*_118728_m.alloc)._field_Token));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_20684a501_possibleRefExpr(_self_, (*_118728_m.alloc)._field_Left);
	if (((*_118728_m.alloc)._field_Right != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_20684a501_possibleRefExpr(_self_, (*_118728_m.alloc)._field_Right);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20684dc96_traitSub(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b155ae_TraitSubIdentExprModel> _120329_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__20685ca1e_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_120329_m))._field_Trt);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_20684a501_possibleRefExpr(_self_, (*_120329_m.alloc)._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_200e4e589_Production))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_206918b74_locInfo((*(_self_))._field_oc, &((*_120329_m.alloc)._field_Token));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__20685c447_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_120329_m.alloc)._field_Method));
}



inline void _20684e04e_structureSub(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b15e50_StructSubIdentExprModel> _121933_m) {
	_20684a501_possibleRefExpr(_self_, (*((*(_121933_m))._field_Expr))._field_Model);
	if (((*_121933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__20685d6bd_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_121933_m.alloc)._field_Field))._field_Decl));
}



inline void _20684e307_array(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b166c0_ArrayExprModel> _122826_m) {
	if ((((*((*(_122826_m))._field_Kind))._field_N == 0LL) || (((*(_122826_m))._field_Elems.len() == 0LL) && (!(_206932cd1_ableToInit(&((*((*_122826_m.alloc)._field_Kind))._field_Elem))))))) {
		_206929547_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_122826_m))._field_Kind);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_122826_m))._field_Elems.len() == 2LL) && ((*(_122826_m))._field_Elems[1LL] == nullptr))) {
		_206929547_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122826_m.alloc)._field_Kind);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_20684a501_possibleRefExpr(_self_, (*(_122826_m))._field_Elems[0LL]);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_206929547_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_122826_m))._field_Kind);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_122826_m.alloc)._field_Elems.len() != (*((*_122826_m.alloc)._field_Kind))._field_N)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_122826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4ea0c22:;
		if (it != expr_end) {
			jule::I32 _12617_i = it - expr->begin();
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_20684a501_possibleRefExpr(_self_, (*(_122826_m))._field_Elems[_12617_i]);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1d4ea0c22:;
			++it;
			_12617_i++;
			goto _iter_begin_1d4ea0c22;
		}
		_iter_end_1d4ea0c22:;
	};
	if ((((*_122826_m.alloc)._field_Elems.len() != (*((*_122826_m.alloc)._field_Kind))._field_N) && _206932cd1_ableToInit(&((*(*(_122826_m))._field_Kind.alloc)._field_Elem)))) {
		_2068552b9_fillCollectionByDefault(_self_, &((*(*(_122826_m))._field_Kind.alloc)._field_Elem));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _20684e5b0_funcInsCommon(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b21664_FnIns> _127834_m) {
	_20692aaba_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _127834_m);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684e868_funcIns(_self_, _127834_m);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20684e868_funcIns(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b21664_FnIns> _128528_m) {
	if ((((*(_128528_m))._field_Decl != nullptr) && (*(*(_128528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_204a2902d_Directive> _12874_d = _2056ab000_FindDirective(&((*(*(_128528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12874_d != nullptr)) {
			_206916798_writeBytes((*(_self_))._field_oc, _20692381b_concatAllParts((*_12874_d.alloc)._field_Args));
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_128528_m));
}



inline void _20684eb21_tuple(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b169bc_TupleExprModel> _129626_m) {
	{
		auto expr = &((*(_129626_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4ead45a:;
		if (it != expr_end) {
			jule::I32 _12978_i = it - expr->begin();
			jule::Ptr<_204ca2b7a_Data> _129715_d = *it;
			{
				_20684a501_possibleRefExpr(_self_, (*(_129715_d))._field_Model);
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_129626_m))._field_Datas.len() - _12978_i) > 1LL)) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_206916d92_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1d4ead45a:;
			++it;
			_12978_i++;
			goto _iter_begin_1d4ead45a;
		}
		_iter_end_1d4ead45a:;
	};
}



inline void _20684edc9_newCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17490_BuiltinNewCallExprModel> _130728_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_130728_m))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_130728_m.alloc)._field_Init != nullptr)) {
		_20684a501_possibleRefExpr(_self_, (*_130728_m.alloc)._field_Init);
	} else if (_206932cd1_ableToInit(&((*_130728_m.alloc)._field_Type))) {
		_206855ad3_initExpr(_self_, (*_130728_m.alloc)._field_Type);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _206850182_printCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b16cb9_BuiltinPrintCallExprModel> _131930_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_204b21664_FnIns> _13217_f = _2056aca29_FindFnGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131930_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13217_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr(_self_, (*(*(_131930_m))._field_Expr.alloc)._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _20685043a_printlnCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b170b6_BuiltinPrintlnCallExprModel> _132832_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_204b21664_FnIns> _13307_f = _2056aca29_FindFnGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_132832_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13307_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr(_self_, (*(*(_132832_m))._field_Expr.alloc)._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _2068506e3_panicCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17869_BuiltinPanicCallExprModel> _133730_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_20684a501_possibleRefExpr(_self_, (*(_133730_m))._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_206918b74_locInfo((*(_self_))._field_oc, &((*_133730_m.alloc)._field_Token));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _20685099b_errorCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _134530_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_204b1da5c_IsVoid((*((*(_134530_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1d4ebea54:;
				{
					jule::Ptr<_204c5319c_Var> _13505_v = (*((*(_134530_m))._field_Err))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
					if (((*(_13505_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1d4ebe9dd:;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_206930dcd_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134530_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1d4ec4097:;
				{
					jule::Ptr<_204c5319c_Var> _13625_v = (*((*(_134530_m))._field_Err))._field_Model.unsafe_cast_ptr<_204c5319c_Var>();;
					if (((*(_13625_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1d4ec4031:;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_20684a501_possibleRefExpr(_self_, (*((*(_134530_m))._field_Err))._field_Model);
	jule::I32 _13713_i = _206917ee7_pushAnyType((*(_self_))._field_oc, (*(*(_134530_m))._field_Err.alloc)._field_Type);;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_13713_i));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _206850c54_copyCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b19096_BuiltinCopyCallExprModel> _137729_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_20684a501_possibleRefExpr(_self_, (*((*(_137729_m))._field_Dest))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_20684a501_possibleRefExpr(_self_, (*((*_137729_m.alloc)._field_Src))._field_Model);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _20685100c_lenCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _138528_m) {
	jule::Ptr<_204ce973d_Map> _13867__map = _204cdebc8_Map((*((*(_138528_m))._field_Expr))._field_Type.ptr());;
	if ((_13867__map != nullptr)) {
		jule::Ptr<_204a4d2c7_StructIns> _13888_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13867__map.alloc)._field_Key; (*it++) = (*_13867__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_204b21664_FnIns> _13908_f = (*(_204a4e372_FindMethod(_13888_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13908_f));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_20684a501_possibleRefExpr(_self_, (*(*(_138528_m))._field_Expr.alloc)._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_20684a501_possibleRefExpr(_self_, (*(*(_138528_m))._field_Expr.alloc)._field_Model);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _2068512b5_capCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b187e3_BuiltinCapCallExprModel> _140128_m) {
	_20684a501_possibleRefExpr(_self_, (*((*(_140128_m))._field_Expr))._field_Model);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _20685156d_deleteCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> _140631_m) {
	jule::Ptr<_204ce973d_Map> _14077__map = _204cdebc8_Map((*((*(_140631_m))._field_Dest))._field_Type.ptr());;
	if ((_14077__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1409:4"));;
	};
	jule::Ptr<_204a4d2c7_StructIns> _14117_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14077__map))._field_Key; (*it++) = (*_14077__map.alloc)._field_Val; __jule_collection; }));;
	;
	if (((*_140631_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_204b21664_FnIns> _14148_f = (*(_204a4e372_FindMethod(_14117_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14148_f));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_20684a501_possibleRefExpr(_self_, (*(*(_140631_m))._field_Dest.alloc)._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_20684a501_possibleRefExpr(_self_, (*(*(_140631_m))._field_Key.alloc)._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_204b21664_FnIns> _14228_f = (*(_204a4e372_FindMethod(_14117_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14228_f));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_20684a501_possibleRefExpr(_self_, (*(*(_140631_m))._field_Dest.alloc)._field_Model);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _206851826_makeCallSlice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17d20_BuiltinMakeCallExprModel>* _143035_m) {
	jule::Ptr<_204ce8099_Slc> _14317_slice = _204cde18e_Slc((*((*(_143035_m))))._field_Type.ptr());;
	jule::Bool _14323_init = _206932cd1_ableToInit(&((*(_14317_slice))._field_Elem));;
	if (_14323_init) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_143035_m))))._field_Type);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_20684a501_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_143035_m))))._field_Cap != nullptr)) {
		_20684a501_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Cap);
	} else {
		_20684a501_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14323_init))) {
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_206855572_initCollection(_self_, &((*_14317_slice.alloc)._field_Elem));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _206851ace_makeCallStr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17d20_BuiltinMakeCallExprModel>* _145433_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_20684a501_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Len);
	if (((*((*(_145433_m))))._field_Cap != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_20684a501_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Cap);
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _206851d87_makeCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> _146529_m) {
	if ((_204cde18e_Slc((*(_146529_m))._field_Type.ptr()) != nullptr)) {
		_206851826_makeCallSlice(_self_, &(_146529_m));
		return;;
	};
	_206851ace_makeCallStr(_self_, &(_146529_m));
}



inline void _206852140_pushToSlice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206505be5_PushToSliceExprModel> _147332_m) {
	;
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_206928337_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147332_m))._field_Elems))._field_ElemType);
	jule::Bool _14817_ptr = false;;
	{
		auto &_match_expr{ (*(_147332_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d4eeae48:;
			{
				jule::Ptr<_204b117a8_UnaryExprModel> _14858_u = (*(_147332_m))._field_Dest.unsafe_cast_ptr<_204b117a8_UnaryExprModel>();;
				if ((_204cdd655_Ptr((*((*(_14858_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_20684a501_possibleRefExpr(_self_, (*(*(_14858_u))._field_Expr.alloc)._field_Model);
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14817_ptr=true;
					goto _match_end_1d4ee993b;
				};
				goto _case_begin_1d4ee99a2;
			}
		}
		else {
			_case_begin_1d4ee99a2:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_20684a501_possibleRefExpr(_self_, (*_147332_m.alloc)._field_Dest);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1d4ee993b:;
	};
	if (((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14817_ptr) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_20684a501_possibleRefExpr(_self_, (*((*(_147332_m))._field_Elems))._field_Elems[0LL]);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14817_ptr) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len()));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147332_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50033c3:;
		if (it != expr_end) {
			jule::Any _151915_e = *it;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14817_ptr) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_20684a501_possibleRefExpr(_self_, _151915_e);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1d50033c3:;
			++it;
			goto _iter_begin_1d50033c3;
		}
		_iter_end_1d50033c3:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2068523e8_appendToSlice(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_2065060be_AppendToSliceExprModel> _153334_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr(_self_, (*(_153334_m))._field_Dest);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_20684a501_possibleRefExpr(_self_, (*_153334_m.alloc)._field_Slice);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _2068526a1_appendCall(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> _154131_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_20684a501_possibleRefExpr(_self_, (*(_154131_m))._field_Dest);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_20684a501_possibleRefExpr(_self_, (*_154131_m.alloc)._field_Elements);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _206852959_sizeof(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1976c_SizeofExprModel> _154927_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_20684a501_possibleRefExpr(_self_, (*(_154927_m))._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _206852c12_alignof(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b19e21_AlignofExprModel> _155528_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_20684a501_possibleRefExpr(_self_, (*(_155528_m))._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _206852eba_runeLit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1a10d_RuneExprModel> _156124_m) {
	if (((*(_156124_m))._field_Code <= 127LL)) {
		({
			auto except = _1eeabc527_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1563:4"));
		});
		jule::Str _15648_b = _206856276_sbtoa(static_cast<jule::U8>((*_156124_m.alloc)._field_Code));;
		if (_15648_b.equal("'", 1)) {
			({
				auto except = _1eeabc527_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1566:5"));
			});
		};
		({
			auto except = _1eeabc26e_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15648_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1568:4"));
			(except.result);
		});
		({
			auto except = _1eeabc527_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1569:4"));
		});
		return;;
	};
	_206857024_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>((*(_156124_m))._field_Code));
}



inline void _206853273_structureStatic(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b162e6_StructStaticIdentExprModel> _157536_m) {
	static__20685c733_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_157536_m))._field_Method));
}



inline void _20685352b_backendEmit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1a482_BackendEmitExprModel> _157932_m) {
	if (((*(_157932_m))._field_Exprs.len() == 0LL)) {
		_2069164e0_write((*(_self_))._field_oc, (*_157932_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15843_n = _1eeabd083_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _15857_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*(_157932_m))._field_Exprs.len(), (*(_157932_m))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_157932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5013603:;
		if (it != expr_end) {
			jule::I32 _15868_i = it - expr->begin();
			jule::Any _158615_expr = *it;
			{
				_20684a501_possibleRefExpr(_self_, _158615_expr);
				jule::Slice<jule::U8> _15888_buf = _1eeabd5a0_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15857_args[_15868_i]=jule::Any(__jule_bytesToStr(_15888_buf.slice(_15843_n)), &__jule_any_type5);
				{
					_1eeabd858_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15888_buf.slice(0LL, _15843_n));
				};
			}
			_iter_next_1d5013603:;
			++it;
			_15868_i++;
			goto _iter_begin_1d5013603;
		}
		_iter_end_1d5013603:;
	};
	_2069164e0_write((*(_self_))._field_oc, _204d5c43d_Format((*_157932_m.alloc)._field_Code, _15857_args));
}



inline void _2068537d4_free(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204b1a77e_FreeExprModel> _159525_m) {
	_20684a501_possibleRefExpr(_self_, (*(_159525_m))._field_Expr);
	if (_200e4de7e_RC) {
		_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _206853a8c_strComp(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206504b06_StrCompExprModel> _160428_m) {
	if ((*(_160428_m))._field_NotEq) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16083_s = _204b06bee_ReadStr((*(_160428_m))._field_Right.ptr());;
	_20684a501_possibleRefExpr(_self_, (*_160428_m.alloc)._field_Left);
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_206856892_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16083_s);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_16083_s.len()));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_160428_m.alloc)._field_NotEq) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _206853d45_emptyCompare(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206504353_EmptyCompareExprModel> _162033_m) {
	if ((*(_162033_m))._field_Neg) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_20684a501_possibleRefExpr(_self_, (*(_162033_m))._field_Expr);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _2068540ed_unsafeDeref(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206506795_UnsafeDerefExprModel> _162932_m) {
	{
		
		if ((_204cdd3be_Sptr((*((*((*(_162932_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1d502216c:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_20684a501_possibleRefExpr(_self_, (*(*((*(_162932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1d5021ca4:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1636:4"));;
			}
		}
		_match_end_1d5021b94:;
	};
}



inline void _2068543a6_unsafeCasting(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206506a92_UnsafeCastingExprModel> _164034_m) {
	{
		
		if (_2056a9394_IsAny(&((*((*(_164034_m))._field_Base))._field_ExprType))) {
			_case_begin_1d5024d51:;
			{
				_20684a501_possibleRefExpr(_self_, (*((*(*(_164034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_204cdd3be_Sptr((*(*(_164034_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_204cdd3be_Sptr((*((*(_164034_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_164034_m))._field_Base.alloc)._field_Type);
				};
				_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1d5024988:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1653:4"));;
			}
		}
		_match_end_1d502489a:;
	};
}



inline void _20685465e_strConcat(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_206503bb0_StrConcatExprModel> _165730_m) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ jule::Int size = 0; ", 23));
	{
		auto expr = &((*(_165730_m))._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d502abc0:;
		if (it != expr_end) {
			jule::I32 _16597_i = it - expr->begin();
			jule::Any _165910_p = *it;
			{
				jule::Str _16604_ident = (jule::Str::lit("part", 4) + _201a16073_Itoa(_16597_i));;
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str ", 10));
				_2069164e0_write((*(_self_))._field_oc, _16604_ident);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = std::move(", 13));
				_20684a501_possibleRefExpr(_self_, _165910_p);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); size += ", 11));
				_2069164e0_write((*(_self_))._field_oc, _16604_ident);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".len(); ", 8));
			}
			_iter_next_1d502abc0:;
			++it;
			_16597_i++;
			goto _iter_begin_1d502abc0;
		}
		_iter_end_1d502abc0:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Slice<jule::U8> buf; buf.alloc_new(0, size); ", 51));
	{
		auto expr = &((*_165730_m.alloc)._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d502ac14:;
		if (it != expr_end) {
			jule::I32 _16707_i = it - expr->begin();
			{
				jule::Str _16714_ident = (jule::Str::lit("part", 4) + _201a16073_Itoa(_16707_i));;
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("buf.append(", 11));
				_2069164e0_write((*(_self_))._field_oc, _16714_ident);
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1d502ac14:;
			++it;
			_16707_i++;
			goto _iter_begin_1d502ac14;
		}
		_iter_end_1d502ac14:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); })", 128));
}



inline void _206854917_model(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Any _167926_m) {
	{
		auto &_match_expr{ _167926_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d5032644:;
			{
				_2069164e0_write((*(_self_))._field_oc, _167926_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1d5032853:;
			{
				_2069164e0_write((*(_self_))._field_oc, (*(_167926_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1d50328b9:;
			{
				_20692ae2d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _167926_m.unsafe_cast_ptr<_204cda982_Type>());
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1d5032930:;
			{
				_206847652_constant(_self_, _167926_m.unsafe_cast_ptr<_204a9d338_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d5032996:;
			{
				_206849676_var(_self_, _167926_m.unsafe_cast_ptr<_204c5319c_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1d5032a0c:;
			{
				_20684992e_structureIns(_self_, _167926_m.unsafe_cast_ptr<_204a4d2c7_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d5032a73:;
			{
				_20684e5b0_funcInsCommon(_self_, _167926_m.unsafe_cast_ptr<_204b21664_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1d5033700:;
			{
				_20684893e_unsafeBinary(_self_, (*(_167926_m.unsafe_cast_ptr<_20650551e_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d5033766:;
			{
				_2068493bd_binary(_self_, _167926_m.unsafe_cast_ptr<_204b113ce_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d50337cc:;
			{
				_206849bd7_unary(_self_, _167926_m.unsafe_cast_ptr<_204b117a8_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d5033843:;
			{
				_206849e90_structureLit(_self_, _167926_m.unsafe_cast_ptr<_204b1217c_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1d50338a9:;
			{
				_20684a248_allocStructure(_self_, _167926_m.unsafe_cast_ptr<_204b12479_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d5033920:;
			{
				_20684abc7_casting(_self_, _167926_m.unsafe_cast_ptr<_204b12a0c_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d5033986:;
			{
				_20684c8aa_funcCall(_self_, _167926_m.unsafe_cast_ptr<_204b133ae_FnCallExprModel>(), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1d50339ec:;
			{
				_20684cb63_slice(_self_, _167926_m.unsafe_cast_ptr<_204b13788_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1d5033a74:;
			{
				_20684e307_array(_self_, _167926_m.unsafe_cast_ptr<_204b166c0_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1d5033aeb:;
			{
				_20684d1c4_unsafeIndexing(_self_, _167926_m.unsafe_cast_ptr<_20650581b_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d5033b73:;
			{
				_20684ce1b_indexing(_self_, _167926_m.unsafe_cast_ptr<_204b13c3e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d5033bea:;
			{
				_20684d47c_anonFunc(_self_, _167926_m.unsafe_cast_ptr<_204b141e5_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1d5033c72:;
			{
				_20684d735_mapExpr(_self_, _167926_m.unsafe_cast_ptr<_204b14998_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d5033ce9:;
			{
				_20684d9dd_slicing(_self_, _167926_m.unsafe_cast_ptr<_204b1502b_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1d5033d71:;
			{
				_20684dc96_traitSub(_self_, _167926_m.unsafe_cast_ptr<_204b155ae_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d5033de8:;
			{
				_20684e04e_structureSub(_self_, _167926_m.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d5033e70:;
			{
				_20684eb21_tuple(_self_, _167926_m.unsafe_cast_ptr<_204b169bc_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d5033ee7:;
			{
				_206850182_printCall(_self_, _167926_m.unsafe_cast_ptr<_204b16cb9_BuiltinPrintCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d503406e:;
			{
				_20685043a_printlnCall(_self_, _167926_m.unsafe_cast_ptr<_204b170b6_BuiltinPrintlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1d50340e6:;
			{
				_20684edc9_newCall(_self_, _167926_m.unsafe_cast_ptr<_204b17490_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d503416d:;
			{
				_2068506e3_panicCall(_self_, _167926_m.unsafe_cast_ptr<_204b17869_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1d50341e5:;
			{
				_20685099b_errorCall(_self_, _167926_m.unsafe_cast_ptr<_204b19470_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1d503426c:;
			{
				_206851d87_makeCall(_self_, _167926_m.unsafe_cast_ptr<_204b17d20_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d50342e4:;
			{
				_2068526a1_appendCall(_self_, _167926_m.unsafe_cast_ptr<_204b181e9_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d503436b:;
			{
				_206850c54_copyCall(_self_, _167926_m.unsafe_cast_ptr<_204b19096_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d50343e3:;
			{
				_20685100c_lenCall(_self_, _167926_m.unsafe_cast_ptr<_204b184e6_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d503446a:;
			{
				_2068512b5_capCall(_self_, _167926_m.unsafe_cast_ptr<_204b187e3_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d50344e2:;
			{
				_20685156d_deleteCall(_self_, _167926_m.unsafe_cast_ptr<_204b18bbc_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d5034569:;
			{
				_206852959_sizeof(_self_, _167926_m.unsafe_cast_ptr<_204b1976c_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d50345e1:;
			{
				_206852c12_alignof(_self_, _167926_m.unsafe_cast_ptr<_204b19e21_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1d5034668:;
			{
				_206852eba_runeLit(_self_, _167926_m.unsafe_cast_ptr<_204b1a10d_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d50346e0:;
			{
				_206853273_structureStatic(_self_, _167926_m.unsafe_cast_ptr<_204b162e6_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d5034767:;
			{
				_20685352b_backendEmit(_self_, _167926_m.unsafe_cast_ptr<_204b1a482_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d50347de:;
			{
				_2068537d4_free(_self_, _167926_m.unsafe_cast_ptr<_204b1a77e_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1d5034866:;
			{
				_206853a8c_strComp(_self_, _167926_m.unsafe_cast_ptr<_206504b06_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1d50348dd:;
			{
				_206849676_var(_self_, (*(_167926_m.unsafe_cast_ptr<_206504650_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1d5034965:;
			{
				_206853d45_emptyCompare(_self_, _167926_m.unsafe_cast_ptr<_206504353_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1d50349dc:;
			{
				_2068540ed_unsafeDeref(_self_, _167926_m.unsafe_cast_ptr<_206506795_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1d5034a64:;
			{
				_2068543a6_unsafeCasting(_self_, _167926_m.unsafe_cast_ptr<_206506a92_UnsafeCastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1d5034adb:;
			{
				_20684c8aa_funcCall(_self_, (*(_167926_m.unsafe_cast_ptr<_2065039c3_FnCallIgnoreExceptionalExprModel>()))._field_Base, true);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1d5034b63:;
			{
				_20685465e_strConcat(_self_, _167926_m.unsafe_cast_ptr<_206503bb0_StrConcatExprModel>());
			}
		}
		else {
			_case_begin_1d50327dc:;
			{
				_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1d5032776:;
	};
}



inline jule::Bool _206854c58_handleFieldByDefault(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4c727_FieldIns>* _178342_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_178342_f))))._field_Default != nullptr)) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__20685d6bd_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178342_f))))._field_Decl));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_20684a501_possibleRefExpr(_self_, (*(*((*(_178342_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_206932cd1_ableToInit(&((*((*(_178342_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__20685d6bd_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178342_f))))._field_Decl));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_206855ad3_initExpr(_self_, (*((*(_178342_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _206855011_initStructLit(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _180435_s) {
	if ((*((*((*(_180435_s))))._field_Decl))._field_Binded) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_20684992e_structureIns(_self_, (*(_180435_s)));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_20684992e_structureIns(_self_, (*(_180435_s)));
	_2069164e0_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18137_inited = false;;
	{
		auto expr = &((*((*(_180435_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d505cc02:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> _181415_f = *it;
			{
				if (_18137_inited) {
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18137_inited=_206854c58_handleFieldByDefault(_self_, &(_181415_f));
			}
			_iter_next_1d505cc02:;
			++it;
			goto _iter_begin_1d505cc02;
		}
		_iter_end_1d505cc02:;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2068552b9_fillCollectionByDefault(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cda982_Type>* _182645_elem) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_206855ad3_initExpr(_self_, (*(_182645_elem)));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _206855572_initCollection(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cda982_Type>* _184136_elem) {
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_2068552b9_fillCollectionByDefault(_self_, _184136_elem);
}



inline void _20685582a_initArray(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cea3ba_Arr>* _185531_arr) {
	if (((*((*(_185531_arr))))._field_N == 0LL)) {
		_206929547_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185531_arr)));
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_206929547_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185531_arr)));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_206855572_initCollection(_self_, &((*((*(_185531_arr))))._field_Elem));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _206855ad3_initExpr(jule::Ptr<_206845d8c_exprCoder> _self_, jule::Ptr<_204cda982_Type> _186929_t) {
	if (_204cdc885_NilCompatible(_186929_t.ptr())) {
		if ((_204cdebc8_Map(_186929_t) != nullptr)) {
			_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186929_t);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_204cdd655_Ptr(_186929_t.ptr()) != nullptr)) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186929_t);
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_204ce8b8d_Tuple> _18847_tup = _204cdee5e_Tup(_186929_t.ptr());;
	if ((_18847_tup != nullptr)) {
		_206930707_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18847_tup);
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_18847_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d5075368:;
			if (it != expr_end) {
				jule::I32 _18889_i = it - expr->begin();
				jule::Ptr<_204cda982_Type> _188816_tt = *it;
				{
					if ((!(_2069330ab_shouldInitialized(&(_188816_tt))))) {
						goto _iter_next_1d5075368;
					};
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_2069164e0_write((*(_self_))._field_oc, _201a16073_Itoa(_18889_i));
					_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_206855ad3_initExpr(_self_, _188816_tt);
					if ((((*(_18847_tup))._field_Types.len() - _18889_i) > 1LL)) {
						_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1d5075368:;
				++it;
				_18889_i++;
				goto _iter_begin_1d5075368;
			}
			_iter_end_1d5075368:;
		};
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_204b2b471_Enum> _19037_enm = _204cdd8db_Enum(_186929_t);;
	if ((_19037_enm != nullptr)) {
		_206854917_model(_self_, (*((*((*((*_19037_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_204ce3a9a_Prim> _19083_prim = _204cdd138_Prim(_186929_t);;
	if ((_19083_prim != nullptr)) {
		if (_204ba2371_IsNum((*_19083_prim.alloc)._field_Kind)) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_204ce6cce_IsBool(_19083_prim)) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_204ce7065_IsStr(_19083_prim)) {
			_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_204cdde08_Arr(_186929_t) != nullptr)) {
		jule::Ptr<_204cea3ba_Arr> _19208_arr = _204cdde08_Arr(_186929_t);;
		_20685582a_initArray(_self_, &(_19208_arr));
		return;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _19247_s = _204cde6ab_Struct(_186929_t);;
	if ((_19247_s != nullptr)) {
		_206855011_initStructLit(_self_, &(_19247_s));
		return;;
	};
	_20692ae2d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186929_t);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _2068586c9_TestCoder_eq(_2068586c9_TestCoder *_self_, _2068586c9_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_2068586c9_TestCoder> static__206858b80_New(jule::Ptr<_206915cc5_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_2068586c9_TestCoder>(_2068586c9_TestCoder{._field_t=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_204c12139_ImportInfo> _206858e16_findTestingPackage(jule::Ptr<_2068586c9_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5080d13:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1d5080d13:;
			++it;
			goto _iter_begin_1d5080d13;
		}
		_iter_end_1d5080d13:;
	};
	return nullptr;;
}



inline void _2068591be_appendTest(jule::Ptr<_2068586c9_TestCoder> _self_, jule::Ptr<_204b21664_FnIns> _3531_f) {
	_206916d92_indent((*(_self_))._field_oc);
	_20685990b_callTmReset(_self_);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_206856892_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_206916d92_indent((*(_self_))._field_oc);
	static__20685c733_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _206859477_appendPackageTests(jule::Ptr<_2068586c9_TestCoder> _self_, jule::Ptr<_204c148ab_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50875de:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d5088106:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _5216_f = *it;
						{
							if (_2056ab3b8_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_2068591be_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1d5088106:;
						++it;
						goto _iter_begin_1d5088106;
					}
					_iter_end_1d5088106:;
				};
			}
			_iter_next_1d50875de:;
			++it;
			goto _iter_begin_1d50875de;
		}
		_iter_end_1d50875de:;
	};
}



inline jule::Bool _20685970d_readyTestingPackage(jule::Ptr<_2068586c9_TestCoder> _self_) {
	jule::Ptr<_204c12139_ImportInfo> _617_p = _206858e16_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_204c13349_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_204a4e372_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_204a4e372_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_204a4e372_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _20685990b_callTmReset(jule::Ptr<_2068586c9_TestCoder> _self_) {
	static__20685c447_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _206859b09_callTmFailed(jule::Ptr<_2068586c9_TestCoder> _self_) {
	static__20685c447_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _206859d07_callTmSkipped(jule::Ptr<_2068586c9_TestCoder> _self_) {
	static__20685c447_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _20685a005_Serialize(jule::Ptr<_2068586c9_TestCoder> _self_) {
	_206923288_serializeHead((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	if ((!(_20685970d_readyTestingPackage(_self_)))) {
		_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_206916b94_doneIndent((*(_self_))._field_oc);
		_206922573_end((*(_self_))._field_oc);
		return;;
	};
	_1eeabb290_Builder _1097_tb = static__1eeabbadc_New(40LL);;
	_2069291d4_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_206927127_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1eeabd5a0_Buf(&_1097_tb));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_206916798_writeBytes((*(_self_))._field_oc, _1eeabd5a0_Buf(&_1097_tb));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_206916996_addIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_206859b09_callTmFailed(_self_);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_206859d07_callTmSkipped(_self_);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_206859477_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_206916b94_doneIndent((*(_self_))._field_oc);
	_206916d92_indent((*(_self_))._field_oc);
	_2069164e0_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_206922573_end((*(_self_))._field_oc);
}








inline jule::Bool _20685b325_identCoder_eq(_20685b325_identCoder *_self_, _20685b325_identCoder _other_) { return true; }

inline void static__20685b864_writeIdentTo(_1eeabb290_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50a9644:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1d50a99c9;
				};
			}
			_iter_next_1d50a9644:;
			++it;
			goto _iter_begin_1d50a9644;
		}
		_iter_end_1d50a9644:;
	};
	({
		auto except = _1eeabc26e_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1d50a99c9:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1d50aa667:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1eeabc527_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1d50aa667;
				};
				({
					auto except = _1eeabc26e_WriteStr(_2630_buf, _201a15ca9_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1d50aa667:;
			it += len;
			goto _iter_begin_1d50aa667;
		}
	};
}



inline void static__20685bc0a_toOut(_1eeabb290_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1eeabc527_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1eeabc26e_WriteStr(_5423_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1eeabc527_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__20685b864_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__20685c15b_toLocal(_1eeabb290_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1eeabc527_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_6925_buf, _201a16073_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_6925_buf, _201a16073_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__20685b864_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__20685c447_func(_1eeabb290_Builder* _7722_buf, jule::Ptr<_204b1d5a6_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1d50ae8e1:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_204b1dce3_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1d50ae98a:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1eeabc26e_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1d50ae7c0:;
	};
	jule::Ptr<_204a2902d_Directive> _873_export = _2056ab000_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1eeabc26e_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__20685bc0a_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__20685c733_funcIns(_1eeabb290_Builder* _9525_buf, jule::Ptr<_204b21664_FnIns>* _9553_f) {
	if (_204b22b2c_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1eeabc26e_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*((*(_9553_f))))._field_Decl))._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__20685c447_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__20685bc0a_toOut(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__20685ca1e_traitDecl(_1eeabb290_Builder* _11027_buf, jule::Ptr<_204b28cba_Trait> _11050_t) {
	static__20685bc0a_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__20685cd0a_param(_1eeabb290_Builder* _11423_buf, jule::Ptr<_204b1bad2_Param>* _11447_p) {
	if ((_204a16db7_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _204a16aed_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_204b1c231_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1eeabc26e_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__20685c15b_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__20685c15b_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*(*((*(_11447_p))))._field_Token.alloc)._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__20685d0e6_structure(_1eeabb290_Builder* _12927_buf, jule::Ptr<_204a4a46c_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_2056ab3b8_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1eeabc26e_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1eeabc26e_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__20685bc0a_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__20685d3d2_structureIns(_1eeabb290_Builder* _14030_buf, jule::Ptr<_204a4d2c7_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__20685d0e6_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__20685bc0a_toOut(_14030_buf, (*((*((*(_14054_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__20685d6bd_field(_1eeabb290_Builder* _14823_buf, jule::Ptr<_204a47579_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1eeabc26e_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1eeabc26e_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__20685b864_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__20685d9a9_var(_1eeabb290_Builder* _15821_buf, jule::Ptr<_204c5319c_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1d50c0c10:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1d50bee51:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1d50bdeb6:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder == -1LL)) {
			_case_begin_1d50be02c:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder >= 0LL)) {
			_case_begin_1d50be093:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(_15821_buf, _201a16073_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Scope != nullptr)) {
			_case_begin_1d50be109:;
			{
				static__20685c15b_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1d50bde50:;
			{
				jule::Ptr<_204a2902d_Directive> _1764_export = _2056ab000_FindDirective(&((*_15848_v.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1eeabc26e_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__20685bc0a_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1d50bdd40:;
	};
}



inline void static__20685dc95_iterBegin(_1eeabb290_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1eeabc26e_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_18527_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__20685e081_iterEnd(_1eeabb290_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1eeabc26e_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_19025_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__20685e36c_iterNext(_1eeabb290_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1eeabc26e_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_19526_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__20685e658_label(_1eeabb290_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1eeabc26e_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_20023_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__20685e944_matchEnd(_1eeabb290_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1eeabc26e_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_20526_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__20685ec30_caseBegin(_1eeabb290_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1eeabc26e_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_21027_buf, _201a158e1_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _206913520_SerializationInfo_eq(_206913520_SerializationInfo *_self_, _206913520_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _20691393d_traitCast_eq(_20691393d_traitCast *_self_, _20691393d_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _206913d17_anonHash_eq(_206913d17_anonHash *_self_, _206913d17_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _206914532_metadata_eq(_206914532_metadata *_self_, _206914532_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_206915cc5_ObjectCoder> static__206916237_New(jule::Ptr<_2056a39dc_IR>* _12021_ir, _206913520_SerializationInfo _12035_info) {
	jule::Ptr<_206915cc5_ObjectCoder> _1217_oc = jule::new_ptr<_206915cc5_ObjectCoder>(_206915cc5_ObjectCoder{._field_Buf=_1eeabb290_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1eeabb290_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1eeabb290_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1eeabb290_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1eeabb290_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1eeabb290_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_12021_ir)), ._field_info=_12035_info, ._field_anons=jule::Slice<jule::Ptr<_206913d17_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__216c61451_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_20691393d_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_204b21664_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_206914235_traitHash>>(nullptr), ._field_traitMetMap=static__216cac964_make(), ._field_ec=jule::Ptr<_206845d8c_exprCoder>(nullptr), ._field_sc=jule::Ptr<_206839897_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_206925c2a_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_206914532_metadata{._field_concurrent=false}});;
	(*(_1217_oc))._field_ec=static__206846288_new(&(_1217_oc));
	(*(_1217_oc))._field_sc=static__20683a090_new(&(_1217_oc));
	(*(_1217_oc))._field_tc=static__20692627a_new(&(_1217_oc));
	return _1217_oc;;
}



inline void _2069164e0_write(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Str _13322_s) {
	({
		auto except = _1eeabc26e_WriteStr(&(*(_self_))._field_Buf, _13322_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:134:3"));
		(except.result);
	});
}



inline void _206916798_writeBytes(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b) {
	({
		auto except = _1eeabbe2d_Write(&(*(_self_))._field_Buf, _13727_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:138:3"));
		(except.result);
	});
}



inline void _206916996_addIndent(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _206916b94_doneIndent(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _206916d92_indent(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	({
		auto except = _1eeabbe2d_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:153:3"));
		(except.result);
	});
}



inline jule::I32 _2069171d3_findAnyType(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204cda982_Type>* _15633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50d4372:;
		if (it != expr_end) {
			jule::I32 _1578_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> _15715_at = *it;
			{
				if (_204cdb1be_Equal(_15715_at, (*(_15633_t)))) {
					return _1578_i;;
				};
			}
			_iter_next_1d50d4372:;
			++it;
			_1578_i++;
			goto _iter_begin_1d50d4372;
		}
		_iter_end_1d50d4372:;
	};
	return -1LL;;
}



inline jule::I32 _206917524_pushCoSpawn(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns> _16532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50d4eaa:;
		if (it != expr_end) {
			jule::I32 _1667_i = it - expr->begin();
			jule::Ptr<_204b21664_FnIns> _16610_sf = *it;
			{
				if (((*(_16610_sf))._field_Params.len() == (*(_16532_f))._field_Params.len())) {
					{
						auto expr = &((*_16610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d50d69e5:;
						if (it != expr_end) {
							jule::I32 _1689_j = it - expr->begin();
							jule::Ptr<_204b2050e_ParamIns> *_16812_sp = it;
							{
								if ((!(_204cdb1be_Equal((*((*(_16812_sp))))._field_Type, (*((*(_16610_sf))._field_Params[_1689_j]))._field_Type)))) {
									goto _iter_end_1d50d69e5;
								};
							}
							_iter_next_1d50d69e5:;
							++it;
							_1689_j++;
							goto _iter_begin_1d50d69e5;
						}
						_iter_end_1d50d69e5:;
					};
					return _1667_i;;
				};
			}
			_iter_next_1d50d4eaa:;
			++it;
			_1667_i++;
			goto _iter_begin_1d50d4eaa;
		}
		_iter_end_1d50d4eaa:;
	};
	jule::I32 _1763_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1773_is = _201a16073_Itoa(_1763_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b21664_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16532_f; __jule_collection; }));
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:182:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:185:3"));
	});
	_20692aaba_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16532_f);
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:190:3"));
	});
	{
		auto expr = &((*(_16532_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50dbc5e:;
		if (it != expr_end) {
			jule::I32 _1938_j = it - expr->begin();
			jule::Ptr<_204b2050e_ParamIns> _19315_p = *it;
			{
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:194:4"));
				});
				_20692ae2d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19315_p))._field_Type);
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _201a16073_Itoa(_1938_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
					(except.result);
				});
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:200:4"));
				});
			}
			_iter_next_1d50dbc5e:;
			++it;
			_1938_j++;
			goto _iter_begin_1d50dbc5e;
		}
		_iter_end_1d50dbc5e:;
	};
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:204:3"));
	});
	{
		
		if ((_200e48121_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1d50e1d85:;
			{
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:208:4"));
					(except.result);
				});
			}
		}
		else if (_1eeace87a_IsUnix(_200e48121_OS)) {
			_case_begin_1d50e1e62:;
			{
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:210:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1d50d8be5:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:212:4"));;
			}
		}
		_match_end_1d50e17be:;
	};
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:215:3"));
		(except.result);
	});
	;
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:235:3"));
		(except.result);
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50e984e:;
		if (it != expr_end) {
			jule::I32 _2387_j = it - expr->begin();
			{
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _201a16073_Itoa(_2387_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:242:4"));
					(except.result);
				});
				if ((((*_16532_f.alloc)._field_Params.len() - _2387_j) > 1LL)) {
					({
						auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:244:5"));
						(except.result);
					});
				};
			}
			_iter_next_1d50e984e:;
			++it;
			_2387_j++;
			goto _iter_begin_1d50e984e;
		}
		_iter_end_1d50e984e:;
	};
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:247:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:252:3"));
		(except.result);
	});
	{
		
		if ((_200e48121_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1d50ede19:;
			{
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:256:4"));
					(except.result);
				});
			}
		}
		else if (_1eeace87a_IsUnix(_200e48121_OS)) {
			_case_begin_1d50edee6:;
			{
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:259:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1d50e3d21:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:261:4"));;
			}
		}
		_match_end_1d50eda51:;
	};
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:263:3"));
		(except.result);
	});
	return _1763_i;;
}



inline jule::I32 _206917865_pushDealloc(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204cda982_Type> _26832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d510147c:;
		if (it != expr_end) {
			jule::I32 _2697_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> _26910_dt = *it;
			{
				if (_204cdb1be_Equal(_26910_dt, _26832_t)) {
					return _2697_i;;
				};
			}
			_iter_next_1d510147c:;
			++it;
			_2697_i++;
			goto _iter_begin_1d510147c;
		}
		_iter_end_1d510147c:;
	};
	jule::I32 _2743_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26832_t; __jule_collection; }));
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_deallocObj, _201a16073_Itoa(_2743_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:278:3"));
		(except.result);
	});
	_20692ae2d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26832_t);
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:280:3"));
		(except.result);
	});
	return _2743_i;;
}



inline jule::Str _206917ba6_pushAnonFn(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel>* _28432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28432_m))))._field_Func))._field_CalledCo);
	jule::Bool _2873_closure = _2056a96d5_IsClosure(_28432_m);;
	if (_2873_closure) {
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:290:4"));
			(except.result);
		});
		jule::I32 _2914_l = _1eeabd083_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:293:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1eeabd5a0_Buf(&(*_self_.alloc)._field_anonObj).slice(_2914_l));
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:295:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d5109287:;
			if (it != expr_end) {
				jule::Ptr<_204c5319c_Var> _29616_v = *it;
				{
					({
						auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:297:5"));
					});
					_20692ae2d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29616_v))._field_TypeSym))._field_Type);
					({
						auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:299:5"));
					});
					if ((*_29616_v.alloc)._field_Reference) {
						({
							auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:301:6"));
						});
					};
					static__20685d9a9_var(&((*_self_.alloc)._field_anonObj), _29616_v);
					({
						auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:304:5"));
						(except.result);
					});
				}
				_iter_next_1d5109287:;
				++it;
				goto _iter_begin_1d5109287;
			}
			_iter_end_1d5109287:;
		};
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:306:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:313:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_206913d17_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_206913d17_anonHash>(_206913d17_anonHash{._field_expr=(*(_28432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_20691d78e_anonFuncInsDecl(_self_, _28432_m, __jule_func_result);
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:322:3"));
	});
	return __jule_func_result;;
}



inline jule::I32 _206917ee7_pushAnyType(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204cda982_Type> _32632_t) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=_2069171d3_findAnyType(_self_, &(_32632_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));
	jule::Str _3333_si = _201a16073_Itoa(__jule_func_result);;
	if ((_204cdd3be_Sptr(_32632_t.ptr()) != nullptr)) {
		_1eeabb290_Builder _3358_elemKind = static__1eeabbadc_New(40LL);;
		_20692ae2d_kind((*_self_.alloc)._field_tc.ptr(), &(_3358_elemKind), (*(_204cdd3be_Sptr(_32632_t)))._field_Elem);
		jule::I32 _3394_di = _206917865_pushDealloc(_self_, (*(_204cdd3be_Sptr(_32632_t)))._field_Elem);;
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _201a16073_Itoa(_3394_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:347:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:352:4"));
			(except.result);
		});
		_206927127_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1eeabd5a0_Buf(&_3358_elemKind));
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:356:4"));
			(except.result);
		});
	} else {
		_1eeabb290_Builder _3588_kindB = static__1eeabbadc_New(40LL);;
		_20692ae2d_kind((*_self_.alloc)._field_tc.ptr(), &(_3588_kindB), _32632_t);
		jule::Str _3604_kind = _1eeabcaee_Str(&_3588_kindB);;
		jule::I32 _3634_di = _206917865_pushDealloc(_self_, _32632_t);;
		jule::Str _3688_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3688_lmodel+=_3604_kind;
		_3688_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3718_rmodel = _3688_lmodel;;
		_3718_rmodel+=jule::Str::lit("other)", 6);
		_3688_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:377:4"));
			(except.result);
		});
		if (_204cdc0d2_Comparable(_32632_t.ptr())) {
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:379:5"));
				(except.result);
			});
			_206848686__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3688_lmodel), &(_3718_rmodel), &(_32632_t), &(_32632_t), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:381:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:385:5"));
				(except.result);
			});
			jule::I32 _3869_n = _1eeabd083_Len(&(*_self_.alloc)._field_anyObj);;
			_206856562_cstrBytes(&((*_self_.alloc)._field_anyObj), _204cdad7d_Str(_32632_t.ptr()));
			_3869_n=(_1eeabd083_Len(&(*_self_.alloc)._field_anyObj) - _3869_n);
			_3869_n+=37LL;
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _201a16073_Itoa(_3869_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:392:5"));
				(except.result);
			});
		};
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:398:4"));
			(except.result);
		});
		jule::Ptr<_204b21664_FnIns> _3998_f = _2056aca29_FindFnGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));;
		static__20685c733_funcIns(&((*_self_.alloc)._field_anyObj), &(_3998_f));
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:401:4"));
			(except.result);
		});
		if ((_204cdd655_Ptr(_32632_t.ptr()) == nullptr)) {
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:404:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:407:5"));
				(except.result);
			});
		};
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:409:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _201a16073_Itoa(_3634_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:421:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _2069182a0_pushResultIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns>* _42635_f) {
	jule::Str _4273_s = __jule_bytesToStr(_2069311db_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42635_f))))._field_Result)));;
	jule::Bool _4286_ok;
	_216c61b16_lookup((*_self_.alloc)._field_resultMap, _4273_s, nullptr, &(_4286_ok));
	if (_4286_ok) {
		return;;
	};
	(*_216c61dbe_set(((*_self_.alloc)._field_resultMap).ptr(), _4273_s))=false;
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, _4273_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:435:3"));
		(except.result);
	});
	{
		auto expr = &((*(_204cdee5e_Tup((*((*(_42635_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d512d465:;
		if (it != expr_end) {
			jule::I32 _4368_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> _43615_t = *it;
			{
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:437:4"));
				});
				_20692ae2d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43615_t);
				({
					auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, _201a16073_Itoa(_4368_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:442:4"));
					(except.result);
				});
			}
			_iter_next_1d512d465:;
			++it;
			_4368_i++;
			goto _iter_begin_1d512d465;
		}
		_iter_end_1d512d465:;
	};
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:444:3"));
		(except.result);
	});
}



inline void _206918558_pushResult(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _44732_f) {
	if ((_204b1da5c_IsVoid((*(_44732_f)).ptr()) || ((*((*((*(_44732_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _4517_n = (*((*(_44732_f))))._field_Instances.len();;
	if (((*((*(_44732_f))))._field_Generics.len() == 0LL)) {
		_4517_n=1LL;
	};
	{
		auto expr = (*((*(_44732_f))))._field_Instances.slice(0LL, _4517_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d513359c:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _45515_ins = *it;
			{
				_2069182a0_pushResultIns(_self_, &(_45515_ins));
			}
			_iter_next_1d513359c:;
			++it;
			goto _iter_begin_1d513359c;
		}
		_iter_end_1d513359c:;
	};
}



inline void _2069188bb_pushAndWriteMaskMapper(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b28cba_Trait> _46043_t1, jule::Ptr<_204b28cba_Trait> _46065_t2) {
	_1eeabb290_Builder _4617_ident = static__1eeabbadc_New(32LL);;
	({
		auto except = _1eeabc26e_WriteStr(&_4617_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_4617_ident, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46065_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_4617_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_4617_ident, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46043_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	({
		auto except = _1eeabbe2d_Write(&(*(_self_))._field_Buf, _1eeabd5a0_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:466:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51363b3:;
		if (it != expr_end) {
			_20691393d_traitCast _46910_m = *it;
			{
				if (((_46910_m._field_t1 == _46043_t1) && (_46910_m._field_t2 == _46065_t2))) {
					return;;
				};
			}
			_iter_next_1d51363b3:;
			++it;
			goto _iter_begin_1d51363b3;
		}
		_iter_end_1d51363b3:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_20691393d_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20691393d_traitCast{._field_t1=_46043_t1, ._field_t2=_46065_t2}; __jule_collection; }));
	;
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _1eeabbe2d_Write(&(*_self_.alloc)._field_anyObj, _1eeabd5a0_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:481:3"));
		(except.result);
	});
	_1eeabb290_Builder _4837_t1Ident = static__1eeabbadc_New(16LL);;
	_1eeabb290_Builder _4847_t2Ident = static__1eeabbadc_New(16LL);;
	static__20685ca1e_traitDecl(&(_4837_t1Ident), _46043_t1);
	static__20685ca1e_traitDecl(&(_4847_t2Ident), _46065_t2);
	{
		auto expr = &((*(_46043_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5136a34:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _48815_s1 = *it;
			{
				{
					auto expr = &((*(_46065_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d513aa5a:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> _48911_s2 = *it;
						{
							if ((_48815_s1 == _48911_s2)) {
								{
									auto expr = &((*(_48815_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1d513b9d4:;
									if (it != expr_end) {
										jule::Ptr<_204a4d2c7_StructIns> _49118_s1i = *it;
										{
											jule::I32 _4927_i1 = _2056abe02_FindTraitTypeOffsetS(_46043_t1, _49118_s1i);;
											jule::I32 _4937_i2 = _2056abe02_FindTraitTypeOffsetS(_46065_t2, _49118_s1i);;
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _1eeabbe2d_Write(&(*_self_.alloc)._field_anyObj, _1eeabd5a0_Buf(&_4847_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _201a16073_Itoa(_4937_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _1eeabbe2d_Write(&(*_self_.alloc)._field_anyObj, _1eeabd5a0_Buf(&_4837_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, _201a16073_Itoa(_4927_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
											({
												auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:502:7"));
												(except.result);
											});
										}
										_iter_next_1d513b9d4:;
										++it;
										goto _iter_begin_1d513b9d4;
									}
									_iter_end_1d513b9d4:;
								};
							};
						}
						_iter_next_1d513aa5a:;
						++it;
						goto _iter_begin_1d513aa5a;
					}
					_iter_end_1d513aa5a:;
				};
			}
			_iter_next_1d5136a34:;
			++it;
			goto _iter_begin_1d5136a34;
		}
		_iter_end_1d5136a34:;
	};
	({
		auto except = _1eeabc26e_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:507:3"));
		(except.result);
	});
}



inline void _206918b74_locInfo(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a14216_Token>* _51125_t) {
	jule::Str *_5124_loc = &((*((*((*(_51125_t))))._field_File))._field_Path);;
	if (_200e4e589_Production) {
		{
			
			if (_200e33c22_HasPrefix((*(_5124_loc)), _200e47560_PathStdlib)) {
				_case_begin_1d5141ee5:;
				{
					_206856562_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)).slice((_200e40aa8_Dir(_200e47560_PathStdlib).len() + 1LL)));
				}
			}
			else if (_200e33c22_HasPrefix((*(_5124_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1d51420c2:;
				{
					_206856562_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5124_loc)).slice((_200e40aa8_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1d5141b2c:;
				{
					_206856562_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5124_loc)));
				}
			}
			_match_end_1d5141a50:;
		};
	} else {
		_206856562_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)));
	};
	_2069164e0_write(_self_, jule::Str::lit(":", 1));
	_2069164e0_write(_self_, _201a16073_Itoa((*((*(_51125_t))))._field_Row));
	_2069164e0_write(_self_, jule::Str::lit(":", 1));
	_2069164e0_write(_self_, _201a16073_Itoa((*((*(_51125_t))))._field_Column));
}



inline void _206918d72_head(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_2069088de_Time _5383_time = static__206908ed8_Now();;
	_206908218_AbsTime _5393_abs = _20690a6c1_Abs(&_5383_time);;
	_2069164e0_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_2069164e0_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_2069164e0_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_2069164e0_write(_self_, jule::Str::lit("\n", 1));
	_2069164e0_write(_self_, jule::Str::lit("// Date: ", 9));
	_2069164e0_write(_self_, _201a158e1_FmtUint(_5393_abs._field_Day, 10LL));
	_2069164e0_write(_self_, jule::Str::lit("/", 1));
	_2069164e0_write(_self_, _201a158e1_FmtUint(_5393_abs._field_Month, 10LL));
	_2069164e0_write(_self_, jule::Str::lit("/", 1));
	_2069164e0_write(_self_, _201a158e1_FmtUint(_5393_abs._field_Year, 10LL));
	_2069164e0_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_2069164e0_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_2069164e0_write(_self_, jule::Str::lit(" ", 1));
	_2069164e0_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	if (_200e4e589_Production) {
		_2069164e0_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_200e4de7e_RC))) {
		_2069164e0_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_200e4e347_Safety))) {
		_2069164e0_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_20691912a_links(_self_, true);
	_2069164e0_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_2069164e0_write(_self_, _200e47d68_PathApi);
	_2069164e0_write(_self_, jule::Str::lit("\"\n\n", 3));
	_20691912a_links(_self_, false);
}



inline void _20691912a_links(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Bool _57822_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d514dd37:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _57910_used = *it;
			{
				{
					
					if ((!((*(_57910_used))._field_Binded))) {
						_case_begin_1d514ec06:;
						{
							goto _iter_next_1d514dd37;
						}
					}
					else if (_1eea805a6_IsStdHeaderPath((*(_57910_used))._field_Path)) {
						_case_begin_1d514ec8e:;
						{
							if ((!(_57822_std))) {
								goto _iter_next_1d514dd37;
							};
							_2069164e0_write(_self_, jule::Str::lit("#include ", 9));
							_2069164e0_write(_self_, (*_57910_used.alloc)._field_Path);
							_2069164e0_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1eea80881_IsValidHeaderExt(_200e4014b_Ext((*_57910_used.alloc)._field_Path))) {
						_case_begin_1d514ed05:;
						{
							if (_57822_std) {
								goto _iter_next_1d514dd37;
							};
							_2069164e0_write(_self_, jule::Str::lit("#include \"", 10));
							_2069164e0_write(_self_, (*_57910_used.alloc)._field_Path);
							_2069164e0_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1d514eaa2:;
				};
			}
			_iter_next_1d514dd37:;
			++it;
			goto _iter_begin_1d514dd37;
		}
		_iter_end_1d514dd37:;
	};
}



inline void _2069193d3_prepareStructure(_206915cc5_ObjectCoder* _self_, jule::Ptr<_204a4a46c_Struct>* _60137_s) {
	{
		auto expr = &((*((*(_60137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d514dc9e:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _60215_ins = *it;
			{
				{
					auto expr = &((*(_60215_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d5153996:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _60316_m = *it;
						{
							if ((*(_60316_m))._field_Statically) {
								goto _iter_next_1d5153996;
							};
							{
								auto expr = &((*(_60316_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d51545e0:;
								if (it != expr_end) {
									jule::Ptr<_204b21664_FnIns> _60717_mins = *it;
									{
										jule::Ptr<_204b2050e_ParamIns> _60810_p = (*(_60717_mins))._field_Params[0LL];;
										_1eeabb290_Builder _60910_kind = static__1eeabbadc_New(40LL);;
										_20692ae2d_kind((*(_self_))._field_tc.ptr(), &(_60910_kind), (*(_60810_p))._field_Type);
										if ((!(_204b1c4b7_IsRef((*_60810_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1eeabc26e_WriteStr(&_60910_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:612:7"));
												(except.result);
											});
										};
										(*_60810_p.alloc)._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_206925103_customType>(_206925103_customType{._field_kind=_1eeabcaee_Str(&_60910_kind)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data29)});
									}
									_iter_next_1d51545e0:;
									++it;
									goto _iter_begin_1d51545e0;
								}
								_iter_end_1d51545e0:;
							};
						}
						_iter_next_1d5153996:;
						++it;
						goto _iter_begin_1d5153996;
					}
					_iter_end_1d5153996:;
				};
			}
			_iter_next_1d514dc9e:;
			++it;
			goto _iter_begin_1d514dc9e;
		}
		_iter_end_1d514dc9e:;
	};
}



inline void _2069195d1_prepareStructures(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d514d7d7:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _62515_s = *it;
			{
				if (((*(_62515_s))._field_Token != nullptr)) {
					_2069193d3_prepareStructure(_self_.ptr(), &(_62515_s));
				};
			}
			_iter_next_1d514d7d7:;
			++it;
			goto _iter_begin_1d514d7d7;
		}
		_iter_end_1d514d7d7:;
	};
}



inline void _206919889_structurePlainDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4a46c_Struct>* _63240_s) {
	{
		auto expr = &((*((*(_63240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d515802d:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _63315_ins = *it;
			{
				_2069164e0_write(_self_, jule::Str::lit("struct ", 7));
				static__20685d3d2_structureIns(&((*_self_.alloc)._field_Buf), &(_63315_ins));
				_2069164e0_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d515802d:;
			++it;
			goto _iter_begin_1d515802d;
		}
		_iter_end_1d515802d:;
	};
}



inline void _206919a87_structurePlainDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d515a261:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _64115_s = *it;
			{
				if (((*(_64115_s))._field_Token != nullptr)) {
					_206919889_structurePlainDecl(_self_, &(_64115_s));
				};
			}
			_iter_next_1d515a261:;
			++it;
			goto _iter_begin_1d515a261;
		}
		_iter_end_1d515a261:;
	};
}



inline void _206919d40_fieldDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4c727_FieldIns>* _64831_f) {
	_20692ae2d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64831_f))))._field_Type);
	_2069164e0_write(_self_, jule::Str::lit(" ", 1));
	static__20685d6bd_field(&((*_self_.alloc)._field_Buf), &((*((*(_64831_f))))._field_Decl));
	_2069164e0_write(_self_, jule::Str::lit(";", 1));
}



inline void _20691a25d_structureOperatorEq(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_204a4d2c7_StructIns>* _65553_s, jule::Bool _65574_decl) {
	if ((!(_206923de3_defaultEq(_65553_s)))) {
		return;;
	};
	_2069164e0_write(_self_, jule::Str::lit("\n", 1));
	if (_2067196cd_Inline) {
		_2069164e0_write(_self_, jule::Str::lit("inline ", 7));
	};
	_2069164e0_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_2069164e0_write(_self_, _65536_ident);
	_2069164e0_write(_self_, jule::Str::lit("_eq", 3));
	_2069164e0_write(_self_, jule::Str::lit("(", 1));
	_2069164e0_write(_self_, _65536_ident);
	_2069164e0_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_2069164e0_write(_self_, _65536_ident);
	_2069164e0_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65574_decl) {
		_2069164e0_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_2069164e0_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65553_s))))._field_Fields.len() == 0LL)) {
		_2069164e0_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_206916996_addIndent(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n", 1));
	_206916d92_indent(_self_);
	_2069164e0_write(_self_, jule::Str::lit("return ", 7));
	_206916996_addIndent(_self_);
	jule::Bool _6867_writed = false;;
	jule::Str _6897_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6907_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65553_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51650a1:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> _69215_f = *it;
			{
				jule::Ptr<_204a4d2c7_StructIns> _6944_strct = _204cde6ab_Struct((*(_69215_f))._field_Type.ptr());;
				if ((((_6944_strct != nullptr) && ((*_6944_strct.alloc)._field_Decl != nullptr)) && (*(*(_6944_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1d51650a1;
				};
				if (_6867_writed) {
					_2069164e0_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6867_writed=true;
				_2069164e0_write(_self_, jule::Str::lit("\n", 1));
				_206916d92_indent(_self_);
				_1eeabb290_Builder _7058_fIdent = static__1eeabbadc_New((*((*_69215_f.alloc)._field_Decl))._field_Ident.len());;
				static__20685d6bd_field(&(_7058_fIdent), &((*_69215_f.alloc)._field_Decl));
				_6897_lmodel+=_1ee78b1a2_BytesStr(_1eeabd5a0_Buf(&_7058_fIdent));
				_6907_rmodel+=_1ee78b1a2_BytesStr(_1eeabd5a0_Buf(&_7058_fIdent));
				_206848686__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6897_lmodel), &(_6907_rmodel), &((*_69215_f.alloc)._field_Type), &((*_69215_f.alloc)._field_Type), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6897_lmodel).mut_slice(0LL, (_6897_lmodel.len() - _1eeabd083_Len(&_7058_fIdent)));;
				_6907_rmodel=_6897_lmodel.slice(0LL, (_6907_rmodel.len() - _1eeabd083_Len(&_7058_fIdent)));
			}
			_iter_next_1d51650a1:;
			++it;
			goto _iter_begin_1d51650a1;
		}
		_iter_end_1d51650a1:;
	};
	_206916b94_doneIndent(_self_);
	if ((!(_6867_writed))) {
		_2069164e0_write(_self_, jule::Str::lit("true", 4));
	};
	_2069164e0_write(_self_, jule::Str::lit(";\n", 2));
	_206916b94_doneIndent(_self_);
	_206916d92_indent(_self_);
	_2069164e0_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _20691a5c1_structureOperators(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _72340_s, jule::Bool _72361_decl) {
	_1eeabb290_Builder _7247_sb = static__1eeabbadc_New(40LL);;
	static__20685d3d2_structureIns(&(_7247_sb), _72340_s);
	jule::Str _7263_ident = _1eeabcaee_Str(&_7247_sb);;
	_20691a25d_structureOperatorEq(_self_, _7263_ident, _72340_s, _72361_decl);
}



inline void _20691a879_structureInsDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _73238_s) {
	{
		auto expr = &((*((*(_73238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d516e2b9:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _73315_m = *it;
			{
				if (_206923b29_isHeadDecl(&(_73315_m))) {
					_20691bbcc_funcDecl(_self_, &(_73315_m), false);
				};
			}
			_iter_next_1d516e2b9:;
			++it;
			goto _iter_begin_1d516e2b9;
		}
		_iter_end_1d516e2b9:;
	};
	_2069164e0_write(_self_, jule::Str::lit("struct ", 7));
	static__20685d3d2_structureIns(&((*_self_.alloc)._field_Buf), _73238_s);
	_2069164e0_write(_self_, jule::Str::lit(" {\n", 3));
	_206916996_addIndent(_self_);
	{
		auto expr = &((*((*(_73238_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5170bc2:;
		if (it != expr_end) {
			jule::Ptr<_204a4c727_FieldIns> _74415_f = *it;
			{
				_206916d92_indent(_self_);
				_206919d40_fieldDecl(_self_, &(_74415_f));
				_2069164e0_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1d5170bc2:;
			++it;
			goto _iter_begin_1d5170bc2;
		}
		_iter_end_1d5170bc2:;
	};
	_206916b94_doneIndent(_self_);
	_206916d92_indent(_self_);
	_2069164e0_write(_self_, jule::Str::lit("};", 2));
	;
	_20691a5c1_structureOperators(_self_, _73238_s, true);
}



inline void _20691ab32_structureDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4a46c_Struct>* _75835_s) {
	{
		auto expr = &((*((*(_75835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5173bc5:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _75915_ins = *it;
			{
				_20691a879_structureInsDecl(_self_, &(_75915_ins));
			}
			_iter_next_1d5173bc5:;
			++it;
			goto _iter_begin_1d5173bc5;
		}
		_iter_end_1d5173bc5:;
	};
}



inline void _20691ad30_structureDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5174a50:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _76515_s = *it;
			{
				if (((*(_76515_s))._field_Token != nullptr)) {
					_20691ab32_structureDecl(_self_, &(_76515_s));
					_2069164e0_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1d5174a50:;
			++it;
			goto _iter_begin_1d5174a50;
		}
		_iter_end_1d5174a50:;
	};
}



inline void _20691b02d_structureMethodDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d517549b:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _77415_s = *it;
			{
				if (((*(_77415_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_77415_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d5177646:;
						if (it != expr_end) {
							jule::Ptr<_204a4d2c7_StructIns> _77617_ins = *it;
							{
								{
									auto expr = &((*(_77617_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1d517812a:;
									if (it != expr_end) {
										jule::Ptr<_204b1d5a6_Fn> _77718_m = *it;
										{
											if ((!(_206923b29_isHeadDecl(&(_77718_m))))) {
												_206918558_pushResult(_self_, &(_77718_m));
												_20691bbcc_funcDecl(_self_, &(_77718_m), false);
											};
										}
										_iter_next_1d517812a:;
										++it;
										goto _iter_begin_1d517812a;
									}
									_iter_end_1d517812a:;
								};
							}
							_iter_next_1d5177646:;
							++it;
							goto _iter_begin_1d5177646;
						}
						_iter_end_1d5177646:;
					};
				};
			}
			_iter_next_1d517549b:;
			++it;
			goto _iter_begin_1d517549b;
		}
		_iter_end_1d517549b:;
	};
}



inline void _20691b506_funcHead(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _79230_buf, jule::Ptr<_204b21664_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident) {
	if ((((!(_79275_ptr)) && _2067196cd_Inline) && (!(_204b1e079_IsEntryPoint((*((*(_79258_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1eeabc26e_WriteStr(_79230_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
			(except.result);
		});
	};
	_20692a3e4_funcInsResult((*(_self_))._field_tc.ptr(), _79230_buf, _79258_f);
	if (_79275_ptr) {
		({
			auto except = _1eeabc26e_WriteStr(_79230_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:798:4"));
			(except.result);
		});
		static__20685c733_funcIns(_79230_buf, _79258_f);
		({
			auto except = _1eeabc527_WriteByte(_79230_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:4"));
		});
	} else {
		({
			auto except = _1eeabc527_WriteByte(_79230_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:802:4"));
		});
		if ((_79286_ident).empty()) {
			static__20685c733_funcIns(_79230_buf, _79258_f);
		} else {
			({
				auto except = _1eeabc26e_WriteStr(_79230_buf, _79286_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:806:5"));
				(except.result);
			});
		};
	};
}



inline void _20691b869_funcDeclIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns>* _81133_f, jule::Bool _81150_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_81133_f))))._field_CalledCo);
	_206916d92_indent(_self_);
	_20691b506_funcHead(_self_, &((*_self_.alloc)._field_Buf), _81133_f, _81150_ptr, jule::Str());
	_20691cd10_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _81133_f);
	_2069164e0_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _20691bbcc_funcDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _81930_f, jule::Bool _81944_ptr) {
	{
		auto expr = &((*((*(_81930_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d517eb6a:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _82015_c = *it;
			{
				_20691b869_funcDeclIns(_self_, &(_82015_c), _81944_ptr);
			}
			_iter_next_1d517eb6a:;
			++it;
			goto _iter_begin_1d517eb6a;
		}
		_iter_end_1d517eb6a:;
	};
}



inline void _20691be85_funcDeclTrait(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _82535_f) {
	{
		auto expr = &((*((*(_82535_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5180ab1:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _82615_c = *it;
			{
				jule::Ptr<_204cda982_Type> _8278_k = (*((*(_82615_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_206913245_generalGCPtr;
				_20691b869_funcDeclIns(_self_, &(_82615_c), true);
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_8278_k;
			}
			_iter_next_1d5180ab1:;
			++it;
			goto _iter_begin_1d5180ab1;
		}
		_iter_end_1d5180ab1:;
	};
}



inline void _20691c183_funcDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_2056a643a_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_204c148ab_Package>*>((void*)__jule_anon_1d51837c8, jule::Ptr<__jule_anon_1d51837c8_ctx>::make(__jule_anon_1d51837c8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d51837c8_ctx_handler));
}



inline void _20691c43b_traitDataTypeMethods(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_206914235_traitHash>* _84742_hash) {
	{
		auto expr = &((*((*(_84742_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5185126:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _84815_m = *it;
			{
				jule::Ptr<_204b21664_FnIns> _8498_ins = (*(_84815_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8498_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1d5187b73:;
					if (it != expr_end) {
						jule::I32 _8509_i = it - expr.begin();
						jule::Ptr<_204b2050e_ParamIns> _85016_ip = *it;
						{
							if (_204a16db7_IsAnonIdent((*((*(_85016_ip))._field_Decl))._field_Ident)) {
								(*(*(_85016_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _201a16073_Itoa(_8509_i));
							};
						}
						_iter_next_1d5187b73:;
						++it;
						_8509_i++;
						goto _iter_begin_1d5187b73;
					}
					_iter_end_1d5187b73:;
				};
				_206918558_pushResult(_self_, &(_84815_m));
				_20691be85_funcDeclTrait(_self_, &(_84815_m));
			}
			_iter_next_1d5185126:;
			++it;
			goto _iter_begin_1d5185126;
		}
		_iter_end_1d5185126:;
	};
}



inline void _20691c639_traitDataTypes(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5186d81:;
		if (it != expr_end) {
			jule::Ptr<_206914235_traitHash> _86115_hash = *it;
			{
				_2069164e0_write(_self_, jule::Str::lit("struct ", 7));
				static__20685ca1e_traitDecl(&((*_self_.alloc)._field_Buf), (*(_86115_hash))._field_traitDecl);
				_2069164e0_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_206916996_addIndent(_self_);
				_206916d92_indent(_self_);
				_2069164e0_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_20691c43b_traitDataTypeMethods(_self_, &(_86115_hash));
				_206916b94_doneIndent(_self_);
				_206916d92_indent(_self_);
				_2069164e0_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1d5186d81:;
			++it;
			goto _iter_begin_1d5186d81;
		}
		_iter_end_1d5186d81:;
	};
}



inline void _20691c99c_paramIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _87530_buf, jule::Ptr<_204b2050e_ParamIns>* _87558_p) {
	_206929c1d_paramIns((*(_self_))._field_tc.ptr(), _87530_buf, _87558_p);
	({
		auto except = _1eeabc527_WriteByte(_87530_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:3"));
	});
	static__20685cd0a_param(_87530_buf, &((*((*(_87558_p))))._field_Decl));
}



inline void _20691cd10_paramsIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _88131_buf, jule::Ptr<_204b21664_FnIns>* _88159_f) {
	if (((!((*((*(_88159_f))))._field_AsAnon)) && ((*((*(_88159_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1eeabc26e_WriteStr(_88131_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:883:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1eeabc527_WriteByte(_88131_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:886:3"));
	});
	if ((*((*(_88159_f))))._field_AsAnon) {
		({
			auto except = _1eeabc26e_WriteStr(_88131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:888:4"));
			(except.result);
		});
		if (((*((*(_88159_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1eeabc26e_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_88159_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51911ed:;
		if (it != expr_end) {
			jule::I32 _8938_i = it - expr->begin();
			jule::Ptr<_204b2050e_ParamIns> _89315_p = *it;
			{
				_20691c99c_paramIns(_self_, _88131_buf, &(_89315_p));
				if ((((*((*(_88159_f))))._field_Params.len() - _8938_i) > 1LL)) {
					({
						auto except = _1eeabc26e_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:896:5"));
						(except.result);
					});
				};
			}
			_iter_next_1d51911ed:;
			++it;
			_8938_i++;
			goto _iter_begin_1d51911ed;
		}
		_iter_end_1d51911ed:;
	};
	({
		auto except = _1eeabc527_WriteByte(_88131_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:899:3"));
	});
}



inline void _20691d173_varInitExpr(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204c5319c_Var>* _90233_v, jule::Fn<void> _90248_init) {
	if ((*((*(_90233_v))))._field_Statically) {
		_2069164e0_write(_self_, jule::Str::lit("static ", 7));
	};
	_20692ae2d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90233_v))))._field_TypeSym))._field_Type);
	_2069164e0_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90233_v))))._field_Reference) {
		_2069164e0_write(_self_, jule::Str::lit("*", 1));
	};
	static__20685d9a9_var(&((*_self_.alloc)._field_Buf), (*(_90233_v)));
	if ((_90248_init != nullptr)) {
		_2069164e0_write(_self_, jule::Str::lit(" = ", 3));
		_90248_init();
	};
	_2069164e0_write(_self_, jule::Str::lit(";", 1));
}



inline void _20691d42b_var(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204c5319c_Var> _92024_v) {
	if (_204a16aed_IsIgnoreIdent((*(_92024_v))._field_Ident)) {
		return;;
	};
	if ((((*(_92024_v))._field_Value != nullptr) && ((*(*(_92024_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92024_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92024_v.alloc)._field_Reference) {
				_20691d173_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1d51985ac, jule::Ptr<__jule_anon_1d51985ac_ctx>::make(__jule_anon_1d51985ac_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1d51985ac_ctx_handler));
			} else {
				_20691d173_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1d519a69c, jule::Ptr<__jule_anon_1d519a69c_ctx>::make(__jule_anon_1d519a69c_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1d519a69c_ctx_handler));
			};
			return;;
		};
		_20691d173_varInitExpr(_self_, &(_92024_v), nullptr);
		return;;
	};
	if ((*(_92024_v))._field_Reference) {
		_20691d173_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1d519cda8, jule::Ptr<__jule_anon_1d519cda8_ctx>::make(__jule_anon_1d519cda8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d519cda8_ctx_handler));
		return;;
	};
	if (_2069330ab_shouldInitialized(&((*((*(_92024_v))._field_TypeSym))._field_Type))) {
		_20691d173_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1d519e052, jule::Ptr<__jule_anon_1d519e052_ctx>::make(__jule_anon_1d519e052_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1d519e052_ctx_handler));
		return;;
	};
	_20691d173_varInitExpr(_self_, &(_92024_v), nullptr);
}



inline void _20691d78e_anonFuncInsDecl(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel>* _95137_m, jule::Str _95164_ident) {
	_20691b506_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func), false, _95164_ident);
	_20691cd10_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func));
	({
		auto except = _1eeabc527_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:954:3"));
	});
}



inline void _20691db02_anonFuncIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b141e5_AnonFnExprModel>* _95733_m, jule::Str _95760_ident) {
	_20691b506_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func), false, _95760_ident);
	_20691cd10_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func));
	_2069164e0_write(_self_, jule::Str::lit(" ", 1));
	_206842680_anonFuncScope((*_self_.alloc)._field_sc, (*(_95733_m)), _95760_ident);
	if (((*((*((*(_95733_m))))._field_Func))._field_Scope != nullptr)) {
		_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _20691de65_funcIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b21664_FnIns> _96728_f, jule::Str _96745_ident) {
	_20691b506_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f), false, _96745_ident);
	_20691cd10_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f));
	_2069164e0_write(_self_, jule::Str::lit(" ", 1));
	_206842938_funcScope((*_self_.alloc)._field_sc, _96728_f);
	if (((*(_96728_f))._field_Scope != nullptr)) {
		_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _20691e21d_func(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _97726_f) {
	{
		auto expr = &((*((*(_97726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51a7885:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _97815_ins = *it;
			{
				_20691de65_funcIns(_self_, _97815_ins, jule::Str());
			}
			_iter_next_1d51a7885:;
			++it;
			goto _iter_begin_1d51a7885;
		}
		_iter_end_1d51a7885:;
	};
}



inline void _20691e581_funcTrait(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _98327_s, jule::Ptr<_204b21664_FnIns>* _98353_f) {
	(*((*(_98353_f))))._field_Scope=nullptr;
	_1eeabb290_Builder _9867_nident = static__1eeabbadc_New(30LL);;
	({
		auto except = _1eeabc26e_WriteStr(&_9867_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:987:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_9867_nident, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98353_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:988:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_9867_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:989:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(&_9867_nident, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98327_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:990:3"));
		(except.result);
	});
	jule::Ptr<_204cda982_Type> _9927_k = (*((*((*(_98353_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_206913245_generalGCPtr;
	_20691de65_funcIns(_self_, (*(_98353_f)), _1eeabcaee_Str(&_9867_nident));
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_9927_k;
}



inline __jule_tuple_x_204b21664_FnIns__jule_tuple_bool _20691e8c2_findTraitMetMap(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b1d5a6_Fn>* _99837_m) {
	__jule_tuple_x_204b21664_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_204b21664_FnIns> _9997_mins = (*((*(_99837_m))))._field_Instances[0LL];;
	{
		_216cb6990_mapIterator it = _216cada97_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1d51b2ebc:;
		__jule_tuple_px_204b21664_FnIns__jule_tuple_psuintptr __iterator_result = _216cb7177_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_204b21664_FnIns> _100012_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_100012_f))._field_Decl))._field_Public == (*((*(_99837_m))))._field_Public) && ((*(*(_100012_f))._field_Decl.alloc)._field_Ident == (*((*(_99837_m))))._field_Ident)) && _204b222be_EqualFn(_100012_f, &(_9997_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1d51b2ebc:;
			goto _iter_begin_1d51b2ebc;
		}
		_iter_end_1d51b2ebc:;
	};
	__jule_func_result.__jule_result_arg0 = _9997_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _20691ec35_traitWrapper(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b28cba_Trait>* _101034_t, jule::Ptr<_204b1d5a6_Fn>* _101056_m) {
	_julec_label_1d51b56ea:;
	{
		auto expr = &((*((*(_101034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51b58a4:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _101215_imp = *it;
			{
				jule::Ptr<_204b21664_FnIns> _10138_mepf;
				jule::Bool _101314_exist;
				({
					__jule_tuple_x_204b21664_FnIns__jule_tuple_bool __jule_assign_result = _20691e8c2_findTraitMetMap(_self_, _101056_m);
					_10138_mepf = __jule_assign_result.__jule_result_arg0;
					_101314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101314_exist) {
					jule::Slice<jule::Uintptr> _10169_vals = _216cad27d_get((*(_self_))._field_traitMetMap, _10138_mepf);;
					{
						auto expr = &(_10169_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d51b792d:;
						if (it != expr_end) {
							jule::Uintptr _101712_val = *it;
							{
								if ((_101712_val == static_cast<jule::Uintptr>(_101215_imp))) {
									goto _iter_next_1d51b58a4;
								};
							}
							_iter_next_1d51b792d:;
							++it;
							goto _iter_begin_1d51b792d;
						}
						_iter_end_1d51b792d:;
					};
					(*_216cad3d2_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10138_mepf))=jule::append(_10169_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				} else {
					(*_216cad3d2_set(((*(_self_))._field_traitMetMap).ptr(), _10138_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_101215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d51b8214:;
					if (it != expr_end) {
						jule::Ptr<_204a4d2c7_StructIns> _102716_ins = *it;
						{
							_20691e581_funcTrait(_self_, &(_102716_ins), &(_10138_mepf));
							;
							jule::Ptr<_204b1d5a6_Fn> _10319_sm = _204a4e372_FindMethod(_102716_ins.ptr(), (*((*(_101056_m))))._field_Ident, false);;
							if (((_10319_sm == nullptr) || ((*(_10319_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_206916996_addIndent(_self_);
							_2069164e0_write(_self_, jule::Str::lit("{\n", 2));
							_206916d92_indent(_self_);
							if (((*((*(_101056_m))))._field_Exceptional || (!(_204b1da5c_IsVoid((*(_101056_m)).ptr()))))) {
								_2069164e0_write(_self_, jule::Str::lit("return ", 7));
							};
							static__20685c447_func(&((*_self_.alloc)._field_Buf), &(_10319_sm));
							_2069164e0_write(_self_, jule::Str::lit("(", 1));
							_2069164e0_write(_self_, jule::Str::lit("_self_.as<", 10));
							_2069291d4_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102716_ins);
							_2069164e0_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10485_ptr = (!(_204b1c4b7_IsRef((*((*(_101056_m))))._field_Params[0LL].ptr())));;
							if (_10485_ptr) {
								_2069164e0_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101056_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1d51c05d4:;
								if (it != expr_end) {
									jule::Ptr<_204b1bad2_Param> _105212_mp = *it;
									{
										_2069164e0_write(_self_, jule::Str::lit(", ", 2));
										static__20685cd0a_param(&((*_self_.alloc)._field_Buf), &(_105212_mp));
									}
									_iter_next_1d51c05d4:;
									++it;
									goto _iter_begin_1d51c05d4;
								}
								_iter_end_1d51c05d4:;
							};
							_2069164e0_write(_self_, jule::Str::lit(");\n}\n", 5));
							_206916b94_doneIndent(_self_);
						}
						_iter_next_1d51b8214:;
						++it;
						goto _iter_begin_1d51b8214;
					}
					_iter_end_1d51b8214:;
				};
			}
			_iter_next_1d51b58a4:;
			++it;
			goto _iter_begin_1d51b58a4;
		}
		_iter_end_1d51b58a4:;
	};
}



inline void _20691ee33_traitWrappers(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51bbed7:;
		if (it != expr_end) {
			jule::Ptr<_206914235_traitHash> _106315_hash = *it;
			{
				if (((*((*(_106315_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1d51bbed7;
				};
				{
					auto expr = &((*(_106315_hash))._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d51c2b7a:;
					if (it != expr_end) {
						jule::Ptr<_204b1d5a6_Fn> _106716_m = *it;
						{
							_20691ec35_traitWrapper(_self_, &((*(_106315_hash))._field_traitDecl), &(_106716_m));
						}
						_iter_next_1d51c2b7a:;
						++it;
						goto _iter_begin_1d51c2b7a;
					}
					_iter_end_1d51c2b7a:;
				};
			}
			_iter_next_1d51bbed7:;
			++it;
			goto _iter_begin_1d51bbed7;
		}
		_iter_end_1d51bbed7:;
	};
}



inline void _206920296_traitDataMethods(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_206914235_traitHash>* _107438_hash, jule::Ptr<_204a4d2c7_StructIns> _107456_s) {
	{
		auto expr = &((*((*(_107438_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51c341c:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _107515_m = *it;
			{
				_206916d92_indent(_self_);
				_2069164e0_write(_self_, jule::Str::lit(".", 1));
				static__20685c447_func(&((*_self_.alloc)._field_Buf), &(_107515_m));
				_2069164e0_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_204b21664_FnIns> _10804_mepf;
				jule::Bool _108010_exist;
				({
					__jule_tuple_x_204b21664_FnIns__jule_tuple_bool __jule_assign_result = _20691e8c2_findTraitMetMap(_self_, &(_107515_m));
					_10804_mepf = __jule_assign_result.__jule_result_arg0;
					_108010_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_108010_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1082:5"));;
				};
				_2069164e0_write(_self_, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10804_mepf)), 15LL));
				_2069164e0_write(_self_, jule::Str::lit("_", 1));
				_2069164e0_write(_self_, _201a158e1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_107456_s)), 15LL));
				_2069164e0_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1d51c341c:;
			++it;
			goto _iter_begin_1d51c341c;
		}
		_iter_end_1d51c341c:;
	};
}



inline void _2069206b4_traitData(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_206914235_traitHash>* _109231_hash, jule::I32 _109249_i, jule::Ptr<_204a4d2c7_StructIns>* _109262_s) {
	_1eeabb290_Builder _10937_ident = static__1eeabbadc_New((*((*((*(_109231_hash))))._field_traitDecl))._field_Ident.len());;
	static__20685ca1e_traitDecl(&(_10937_ident), (*((*(_109231_hash))))._field_traitDecl);
	_2069164e0_write(_self_, jule::Str::lit("static ", 7));
	_206916798_writeBytes(_self_, _1eeabd5a0_Buf(&_10937_ident));
	_2069164e0_write(_self_, jule::Str::lit("MptrData ", 9));
	_206916798_writeBytes(_self_, _1eeabd5a0_Buf(&_10937_ident));
	_2069164e0_write(_self_, jule::Str::lit("_mptr_data", 10));
	_2069164e0_write(_self_, _201a16073_Itoa(_109249_i));
	_2069164e0_write(_self_, jule::Str::lit(" {\n", 3));
	_206916996_addIndent(_self_);
	_206916d92_indent(_self_);
	_2069164e0_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_2069164e0_write(_self_, _201a16073_Itoa(_206917865_pushDealloc(_self_, jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_109262_s)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)}))));
	_2069164e0_write(_self_, jule::Str::lit(",\n", 2));
	_206920296_traitDataMethods(_self_, _109231_hash, (*(_109262_s)));
	_206916b94_doneIndent(_self_);
	_2069164e0_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _2069208b2_traitDatas(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51cda32:;
		if (it != expr_end) {
			jule::Ptr<_206914235_traitHash> _111415_hash = *it;
			{
				jule::I32 _11158_i = 0LL;;
				{
					auto expr = &((*((*(_111415_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d51ce9cd:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> _111616_s = *it;
						{
							{
								auto expr = &((*(_111616_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d51d0605:;
								if (it != expr_end) {
									jule::Ptr<_204a4d2c7_StructIns> _111717_ins = *it;
									{
										_2069206b4_traitData(_self_, &(_111415_hash), _11158_i, &(_111717_ins));
										(_11158_i)++;
									}
									_iter_next_1d51d0605:;
									++it;
									goto _iter_begin_1d51d0605;
								}
								_iter_end_1d51d0605:;
							};
						}
						_iter_next_1d51ce9cd:;
						++it;
						goto _iter_begin_1d51ce9cd;
					}
					_iter_end_1d51ce9cd:;
				};
			}
			_iter_next_1d51cda32:;
			++it;
			goto _iter_begin_1d51cda32;
		}
		_iter_end_1d51cda32:;
	};
}



inline void _206920ab0_globalDecls(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51cd658:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _112615_v = *it;
			{
				_20692ae2d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112615_v))._field_TypeSym))._field_Type);
				_2069164e0_write(_self_, jule::Str::lit(" ", 1));
				static__20685d9a9_var(&((*_self_.alloc)._field_Buf), _112615_v);
				_2069164e0_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d51cd658:;
			++it;
			goto _iter_begin_1d51cd658;
		}
		_iter_end_1d51cd658:;
	};
}



inline void _206920cad_decls(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_206919a87_structurePlainDecls(_self_);
	_20691ad30_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1eeabd083_Len(&(*_self_.alloc)._field_Buf);
	_20691b02d_structureMethodDecls(_self_);
	_20691c183_funcDecls(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	_20691c639_traitDataTypes(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1eeabd083_Len(&(*_self_.alloc)._field_Buf);
	_20691ee33_traitWrappers(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	_2069208b2_traitDatas(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1eeabd083_Len(&(*_self_.alloc)._field_Buf);
	_206920ab0_globalDecls(_self_);
}



inline void _206921066_structureMethods(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _115238_s) {
	{
		auto expr = &((*((*(_115238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51d78c6:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _115315_f = *it;
			{
				_20691e21d_func(_self_, &(_115315_f));
				_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1d51d78c6:;
			++it;
			goto _iter_begin_1d51d78c6;
		}
		_iter_end_1d51d78c6:;
	};
}



inline void _20692131e_structureIns(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4d2c7_StructIns>* _115934_s) {
	;
	_20691a5c1_structureOperators(_self_, _115934_s, false);
	_206921066_structureMethods(_self_, _115934_s);
}



inline void _2069215c7_structure(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204a4a46c_Struct>* _116531_s) {
	{
		auto expr = &((*((*(_116531_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51d9da1:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _116615_ins = *it;
			{
				_20692131e_structureIns(_self_, &(_116615_ins));
				_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1d51d9da1:;
			++it;
			goto _iter_begin_1d51d9da1;
		}
		_iter_end_1d51d9da1:;
	};
}



inline void _2069217c5_structures(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51da5ee:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _117315_s = *it;
			{
				if (((*(_117315_s))._field_Token != nullptr)) {
					_2069215c7_structure(_self_, &(_117315_s));
					_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1d51da5ee:;
			++it;
			goto _iter_begin_1d51da5ee;
		}
		_iter_end_1d51da5ee:;
	};
}



inline void _2069219c3_funcs(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_2056a643a_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_204c148ab_Package>*>((void*)__jule_anon_1d51dd217, jule::Ptr<__jule_anon_1d51dd217_ctx>::make(__jule_anon_1d51dd217_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d51dd217_ctx_handler));
}



inline void _206921c7b_pushInit(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204c148ab_Package>* _120430_pkg) {
	_2056a668d_IterFiles(_120430_pkg, jule::__new_closure<void,jule::Ptr<_204b248a9_SymTab>*>((void*)__jule_anon_1d51de647, jule::Ptr<__jule_anon_1d51de647_ctx>::make(__jule_anon_1d51de647_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d51de647_ctx_handler));
}



inline void _206921e79_anonHashes(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_julec_label_1d51e3ecb:;
	jule::Slice<jule::Ptr<_206913d17_anonHash>> _12217_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12217_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51e4020:;
		if (it != expr_end) {
			jule::Ptr<_206913d17_anonHash> _122315_h = *it;
			{
				_20691db02_anonFuncIns(_self_, &((*(_122315_h))._field_expr), (*_122315_h.alloc)._field_ident);
			}
			_iter_next_1d51e4020:;
			++it;
			goto _iter_begin_1d51e4020;
		}
		_iter_end_1d51e4020:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1d51e3ecb;
	};
}



inline void _206922177_initGlobals(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51e70cd:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _123215_v = *it;
			{
				({
					auto except = _1eeabc527_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1233:4"));
				});
				static__20685d9a9_var(&((*_self_.alloc)._field_Buf), _123215_v);
				_2069164e0_write(_self_, jule::Str::lit(" = ", 3));
				_206854917_model((*_self_.alloc)._field_ec, (*((*((*(_123215_v))._field_Value))._field_Data))._field_Model);
				_2069164e0_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d51e70cd:;
			++it;
			goto _iter_begin_1d51e70cd;
		}
		_iter_end_1d51e70cd:;
	};
}



inline void _206922375_initCaller(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_2069164e0_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_206916996_addIndent(_self_);
	_2056a643a_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_204c148ab_Package>*>((void*)__jule_anon_1d51eaa82, jule::Ptr<__jule_anon_1d51eaa82_ctx>::make(__jule_anon_1d51eaa82_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d51eaa82_ctx_handler));
	_206916b94_doneIndent(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _206922573_end(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_2069164e0_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	_206922177_initGlobals(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_200e4dbc6_Test) {
		_2069164e0_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__20685c447_func(&((*_self_.alloc)._field_Buf), &((*(_2056ae454_ProgramMeta))._field_EntryPoint));
		_2069164e0_write(_self_, jule::Str::lit("();", 3));
	};
	_2069164e0_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _20692282b_buildTraitHash(jule::Ptr<_206915cc5_ObjectCoder> _self_, jule::Ptr<_204b28cba_Trait>* _127636_t) {
	jule::Ptr<_206914235_traitHash> _12777_hash = jule::new_ptr<_206914235_traitHash>(_206914235_traitHash{._field_traitDecl=(*(_127636_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1d5a6_Fn>>::alloc(0LL, (*((*(_127636_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b1d5a6_Fn>(nullptr); __jule_collection; })});;
	_2056a6979_IterTraitMethods(_127636_t, jule::__new_closure<void,jule::Ptr<_204b1d5a6_Fn>*>((void*)__jule_anon_1d5200c63, jule::Ptr<__jule_anon_1d5200c63_ctx>::make(__jule_anon_1d5200c63_ctx{._12777_hash=_12777_hash}).as<jule::Uintptr>(), __jule_anon_1d5200c63_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_206914235_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12777_hash; __jule_collection; }));
}



inline void _206922a29_buildTraitHashes(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_2056a643a_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_204c148ab_Package>*>((void*)__jule_anon_1d520333c, jule::Ptr<__jule_anon_1d520333c_ctx>::make(__jule_anon_1d520333c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d520333c_ctx_handler));
}



inline void _206922d8c_insertBuf(jule::Ptr<_206915cc5_ObjectCoder> _self_, _1eeabb290_Builder* _130631_buf, jule::I32 _130654_pos) {
	if ((_1eeabd083_Len(_130631_buf) > 0LL)) {
		jule::Slice<jule::U8> _13088_ibuf = _1eeabd5a0_Buf(&(*(_self_))._field_Buf);;
		_13088_ibuf=_1d5206a6b_Insert(_13088_ibuf, _130654_pos, _1eeabd5a0_Buf(_130631_buf));
		{
			_1eeabd858_SetBuf(&(*_self_.alloc)._field_Buf, _13088_ibuf);
		};
	};
}



inline void _20692308a_implementRC(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_20691de65_funcIns(_self_, (*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_20691de65_funcIns(_self_, (*(*(_2056ae454_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_20691de65_funcIns(_self_, (*(*(_2056ae454_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_20691de65_funcIns(_self_, (*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_20691de65_funcIns(_self_, (*(*(_2056ae454_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_20691de65_funcIns(_self_, (*(*(_2056ae454_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _206923288_serializeHead(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_206922a29_buildTraitHashes(_self_);
	_2069195d1_prepareStructures(_self_);
	_206918d72_head(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n", 1));
	_206920cad_decls(_self_);
	_206922d8c_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1eeabd083_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1eeabd083_Len(&(*_self_.alloc)._field_resultDecls);
	_2069164e0_write(_self_, jule::Str::lit("\n", 1));
	_2069217c5_structures(_self_);
	_2069219c3_funcs(_self_);
	_206922375_initCaller(_self_);
	_2069164e0_write(_self_, jule::Str::lit("\n\n", 2));
	_206921e79_anonHashes(_self_);
	_20692308a_implementRC(_self_);
	_206922d8c_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1eeabd083_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1eeabd083_Len(&(*_self_.alloc)._field_deallocObj);
	_206922d8c_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1eeabd083_Len(&(*_self_.alloc)._field_anyObj);
	_206922d8c_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1eeabd083_Len(&(*_self_.alloc)._field_anonObj);
	_206922d8c_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1eeabd083_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _206923486_Serialize(jule::Ptr<_206915cc5_ObjectCoder> _self_) {
	_206923288_serializeHead(_self_);
	_206922573_end(_self_);
}








inline jule::Bool _206925103_customType_eq(_206925103_customType *_self_, _206925103_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _2069254dd_Str(_206925103_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _20692582e_Equal(jule::Ptr<_206925103_customType> _self_, jule::Ptr<_204cda982_Type> _2518_k) {
	return false;;
}








inline jule::Bool _206925c2a_typeCoder_eq(_206925c2a_typeCoder *_self_, _206925c2a_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_206925c2a_typeCoder> static__20692627a_new(jule::Ptr<_206915cc5_ObjectCoder>* _5021_oc) {
	jule::Ptr<_206925c2a_typeCoder> _517_tc = jule::new_ptr<_206925c2a_typeCoder>(_206925c2a_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_20692d815_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__20692dd21_new(&(_517_tc));
	return _517_tc;;
}



inline void _2069265dd_toType(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_204b98961_RealKindOf(_5754_id);
	};
	({
		auto except = _1eeabc26e_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1eeabc527_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1eeabc527_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1eeabc26e_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _206926951_prim(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _7125_buf, jule::Ptr<_204ce3a9a_Prim> _7148_p) {
	_2069265dd_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _206926cb4_tuple(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _7626_buf, jule::Ptr<_204ce8b8d_Tuple> _7653_t) {
	({
		auto except = _1eeabc26e_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*(_7653_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d522c2bc:;
		if (it != expr_end) {
			jule::I32 _788_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> _7815_tk = *it;
			{
				_20692ae2d_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1eeabc527_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1d522c2bc:;
			++it;
			_788_i++;
			goto _iter_begin_1d522c2bc;
		}
		_iter_end_1d522c2bc:;
	};
	({
		auto except = _1eeabc527_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _206927127_asSptr(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1eeabc26e_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1eeabbe2d_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _20692748a_sptr(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _9525_buf, jule::Ptr<_204ce75c6_Sptr> _9552_sptr) {
	({
		auto except = _1eeabc26e_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_20692ae2d_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1eeabc527_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _2069277ed_ptr(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _10224_buf, jule::Ptr<_204cead8d_Ptr> _10251_p) {
	;
	if (_204ceb90a_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1eeabc26e_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_20692ae2d_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1eeabc26e_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _206927b61_enumDecl(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _11329_buf, jule::Ptr<_204b2b471_Enum> _11356_e) {
	_20692ae2d_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _206927ec4_typeEnumDecl(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _11833_buf, jule::Ptr<_204b2cb7b_TypeEnum> _11860_e) {
	({
		auto except = _1eeabc26e_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _206928337_asSlice(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _12228_buf, jule::Ptr<_204cda982_Type> _12255_elem) {
	({
		auto except = _1eeabc26e_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_20692ae2d_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1eeabc527_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _20692869a_slice(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _12926_buf, jule::Ptr<_204ce8099_Slc> _12953_s) {
	_206928337_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _206928a0d_mapType(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _13428_buf, jule::Ptr<_204ce973d_Map> _13455_m) {
	jule::Ptr<_204a4d2c7_StructIns> _1357_ins = _2056acead_FindStructGenericInstance(&((*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1eeabc26e_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__20685d3d2_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _1eeabc26e_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _2069291d4_structureIns(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _14733_buf, jule::Ptr<_204a4d2c7_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		static__20685d3d2_structureIns(_14733_buf, &(_14760_s));
		return;;
	};
	jule::Ptr<_204a2902d_Directive> _1523_d = _2056ab000_FindDirective(&((*((*(_14760_s))._field_Decl))._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1523_d != nullptr)) {
		({
			auto except = _1eeabbe2d_Write(_14733_buf, _20692381b_concatAllParts((*_1523_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:154:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:155:4"));
			(except.result);
		});
	};
	static__20685d3d2_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1eeabc527_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d5239e89:;
			if (it != expr_end) {
				jule::I32 _1609_i = it - expr->begin();
				jule::Ptr<_204cd909b_InsGeneric> _16016_g = *it;
				{
					_20692ae2d_kind(_self_, _14733_buf, (*(_16016_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1609_i) > 1LL)) {
						({
							auto except = _1eeabc527_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:6"));
						});
					};
				}
				_iter_next_1d5239e89:;
				++it;
				_1609_i++;
				goto _iter_begin_1d5239e89;
			}
			_iter_end_1d5239e89:;
		};
		({
			auto except = _1eeabc527_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:166:4"));
		});
	};
}



inline void _206929547_array(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _17126_buf, jule::Ptr<_204cea3ba_Arr> _17153_a) {
	({
		auto except = _1eeabc26e_WriteStr(_17126_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:172:3"));
		(except.result);
	});
	_20692ae2d_kind(_self_, _17126_buf, (*(_17153_a))._field_Elem);
	({
		auto except = _1eeabc527_WriteByte(_17126_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:174:3"));
	});
	({
		auto except = _1eeabc26e_WriteStr(_17126_buf, _201a16073_Itoa((*_17153_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:175:3"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_17126_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
	});
}



inline void _206929c1d_paramIns(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _19429_buf, jule::Ptr<_204b2050e_ParamIns>* _19457_p) {
	if ((*((*((*(_19457_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1eeabc26e_WriteStr(_19429_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:196:4"));
			(except.result);
		});
		_20692ae2d_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
		({
			auto except = _1eeabc527_WriteByte(_19429_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:198:4"));
		});
	} else {
		_20692ae2d_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
	};
	if ((*((*((*(_19457_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1eeabc527_WriteByte(_19429_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:203:4"));
		});
	};
}



inline void _20692a3e4_funcInsResult(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _22634_s, jule::Ptr<_204b21664_FnIns>* _22660_f) {
	if (_204b1da5c_IsVoid((*((*(_22660_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22660_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1eeabc26e_WriteStr(_22634_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:229:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1eeabc26e_WriteStr(_22634_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:231:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*((*((*(_22660_f))))._field_Decl))._field_Exceptional) {
		({
			auto except = _1eeabc26e_WriteStr(_22634_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:236:4"));
			(except.result);
		});
		_206930dcd_codeMut1((*(_self_))._field_rc.ptr(), _22634_s, &((*((*(_22660_f))))._field_Result));
		({
			auto except = _1eeabc527_WriteByte(_22634_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:238:4"));
		});
		return;;
	};
	_206930dcd_codeMut1((*(_self_))._field_rc.ptr(), _22634_s, &((*((*(_22660_f))))._field_Result));
}



inline void _20692a757_anonFunc(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _24429_buf, jule::Ptr<_204b21664_FnIns> _24456_f) {
	if ((((*(_24456_f))._field_Result != nullptr) && (_204cdee5e_Tup((*(_24456_f))._field_Result) != nullptr))) {
		_2069182a0_pushResultIns((*(_self_))._field_oc, &(_24456_f));
	};
	_20692a3e4_funcInsResult(_self_, _24429_buf, &(_24456_f));
	if (((*(_24456_f))._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1eeabc527_WriteByte(_24429_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:252:3"));
	});
	{
		auto expr = &((*(_24456_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d524b96d:;
		if (it != expr_end) {
			jule::I32 _2538_i = it - expr->begin();
			jule::Ptr<_204b2050e_ParamIns> _25315_param = *it;
			{
				if (_204b1c231_IsSelf((*(_25315_param))._field_Decl.ptr())) {
					goto _iter_next_1d524b96d;
				};
				_206929c1d_paramIns(_self_, _24429_buf, &(_25315_param));
				if ((((*(_24456_f))._field_Params.len() - _2538_i) > 1LL)) {
					({
						auto except = _1eeabc527_WriteByte(_24429_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:259:5"));
					});
				};
			}
			_iter_next_1d524b96d:;
			++it;
			_2538_i++;
			goto _iter_begin_1d524b96d;
		}
		_iter_end_1d524b96d:;
	};
}



inline void _20692aaba_func(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _26525_buf, jule::Ptr<_204b21664_FnIns> _26552_f) {
	({
		auto except = _1eeabc26e_WriteStr(_26525_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:266:3"));
		(except.result);
	});
	_20692a757_anonFunc(_self_, _26525_buf, _26552_f);
	({
		auto except = _1eeabc527_WriteByte(_26525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:268:3"));
	});
}



inline void _20692ae2d_kind(_206925c2a_typeCoder* _self_, _1eeabb290_Builder* _27225_buf, jule::Ptr<_204cda982_Type> _27252_k) {
	{
		
		if ((_204cde6ab_Struct(_27252_k.ptr()) != nullptr)) {
			_case_begin_1d524eeb0:;
			{
				_2069291d4_structureIns(_self_, _27225_buf, _204cde6ab_Struct(_27252_k));
				return;;
			}
		}
		else if (_204cdb82e_Binded(_27252_k.ptr())) {
			_case_begin_1d5250059:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_27225_buf, (*_27252_k.alloc)._field_BindIdent);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:281:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_204cdd138_Prim(_27252_k) != nullptr)) {
			_case_begin_1d52500c0:;
			{
				_206926951_prim(_self_, _27225_buf, _204cdd138_Prim(_27252_k));
				return;;
			}
		}
		else if ((_204cdee5e_Tup(_27252_k) != nullptr)) {
			_case_begin_1d5250136:;
			{
				_206926cb4_tuple(_self_, _27225_buf, _204cdee5e_Tup(_27252_k));
				return;;
			}
		}
		else if ((_204cdd3be_Sptr(_27252_k) != nullptr)) {
			_case_begin_1d525019c:;
			{
				_20692748a_sptr(_self_, _27225_buf, _204cdd3be_Sptr(_27252_k));
				return;;
			}
		}
		else if ((_204cdd655_Ptr(_27252_k) != nullptr)) {
			_case_begin_1d5250224:;
			{
				_2069277ed_ptr(_self_, _27225_buf, _204cdd655_Ptr(_27252_k));
				return;;
			}
		}
		else if ((_204cdd8db_Enum(_27252_k) != nullptr)) {
			_case_begin_1d525029b:;
			{
				_206927b61_enumDecl(_self_, _27225_buf, _204cdd8db_Enum(_27252_k));
				return;;
			}
		}
		else if ((_204cddb72_TypeEnum(_27252_k) != nullptr)) {
			_case_begin_1d5250323:;
			{
				_206927ec4_typeEnumDecl(_self_, _27225_buf, _204cddb72_TypeEnum(_27252_k));
				return;;
			}
		}
		else if ((_204cde18e_Slc(_27252_k) != nullptr)) {
			_case_begin_1d525039a:;
			{
				_20692869a_slice(_self_, _27225_buf, _204cde18e_Slc(_27252_k));
				return;;
			}
		}
		else if ((_204cdebc8_Map(_27252_k) != nullptr)) {
			_case_begin_1d5250422:;
			{
				_206928a0d_mapType(_self_, _27225_buf, _204cdebc8_Map(_27252_k));
				return;;
			}
		}
		else if ((_204cde942_Trait(_27252_k) != nullptr)) {
			_case_begin_1d5250499:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_27225_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:308:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_204cdde08_Arr(_27252_k) != nullptr)) {
			_case_begin_1d5250521:;
			{
				_206929547_array(_self_, _27225_buf, _204cdde08_Arr(_27252_k));
				return;;
			}
		}
		else if ((_204cde425_Fn(_27252_k) != nullptr)) {
			_case_begin_1d5250598:;
			{
				_20692aaba_func(_self_, _27225_buf, _204cde425_Fn(_27252_k));
				return;;
			}
		}
		_match_end_1d524ecc3:;
	};
	{
		auto &_match_expr{ (*(_27252_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data29)) {
			_case_begin_1d5250631:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_27225_buf, (*((*(_27252_k))._field_Kind.cast_ptr<_206925103_customType>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:319:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1d5258bde:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_27225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:321:4"));
					(except.result);
				});
			}
		}
		_match_end_1d5258b78:;
	};
}








inline jule::Bool _20692d815_resultCoder_eq(_20692d815_resultCoder *_self_, _20692d815_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_20692d815_resultCoder> static__20692dd21_new(jule::Ptr<_206925c2a_typeCoder>* _34021_tc) {
	return jule::new_ptr<_20692d815_resultCoder>(_20692d815_resultCoder{._field_tc=(*(_34021_tc))});;
}



inline void _20692e184_ptr(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _34424_s, jule::Ptr<_204cead8d_Ptr> _34449_p) {
	({
		auto except = _1eeabc26e_WriteStr(_34424_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:345:3"));
		(except.result);
	});
	_206930a6a_codeMut(_self_, _34424_s, &((*(_34449_p))._field_Elem));
}



inline void _20692e4e7_sptr(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _34925_s, jule::Ptr<_204ce75c6_Sptr> _34950_p) {
	({
		auto except = _1eeabc26e_WriteStr(_34925_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:350:3"));
		(except.result);
	});
	_206930a6a_codeMut(_self_, _34925_s, &((*(_34950_p))._field_Elem));
}



inline void _20692e85a_mapType(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _35428_s, jule::Ptr<_204ce973d_Map> _35453_p) {
	({
		auto except = _1eeabc26e_WriteStr(_35428_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:355:3"));
		(except.result);
	});
	_206930a6a_codeMut(_self_, _35428_s, &((*(_35453_p))._field_Key));
	_206930a6a_codeMut(_self_, _35428_s, &((*_35453_p.alloc)._field_Val));
}



inline void _20692ebbd_slice(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _36026_s, jule::Ptr<_204ce8099_Slc> _36051_slc) {
	({
		auto except = _1eeabc26e_WriteStr(_36026_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:361:3"));
		(except.result);
	});
	_206930a6a_codeMut(_self_, _36026_s, &((*(_36051_slc))._field_Elem));
}



inline void _206930031_arr(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _36524_s, jule::Ptr<_204cea3ba_Arr> _36549_arr) {
	({
		auto except = _1eeabc26e_WriteStr(_36524_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:366:3"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_36524_s, _201a15ca9_FmtInt(static_cast<jule::I64>((*(_36549_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:367:3"));
		(except.result);
	});
	_206930a6a_codeMut(_self_, _36524_s, &((*_36549_arr.alloc)._field_Elem));
}



inline void _206930394_func(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _37125_s, jule::Ptr<_204b21664_FnIns> _37150_f) {
	({
		auto except = _1eeabc26e_WriteStr(_37125_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:372:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37150_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5261389:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> _37315_p = *it;
			{
				if ((*((*(_37315_p))._field_Decl))._field_Reference) {
					({
						auto except = _1eeabc26e_WriteStr(_37125_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:375:5"));
						(except.result);
					});
				};
				_206930a6a_codeMut(_self_, _37125_s, &((*(_37315_p))._field_Type));
			}
			_iter_next_1d5261389:;
			++it;
			goto _iter_begin_1d5261389;
		}
		_iter_end_1d5261389:;
	};
	if (((*_37150_f.alloc)._field_Result != nullptr)) {
		_206930a6a_codeMut(_self_, _37125_s, &((*_37150_f.alloc)._field_Result));
	};
}



inline void _206930707_tup(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _38424_s, jule::Ptr<_204ce8b8d_Tuple> _38449_tup) {
	{
		auto expr = &((*(_38449_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d526380e:;
		if (it != expr_end) {
			jule::Ptr<_204cda982_Type> _38515_t = *it;
			{
				({
					auto except = _1eeabc26e_WriteStr(_38424_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:386:4"));
					(except.result);
				});
				_206930a6a_codeMut(_self_, _38424_s, &(_38515_t));
			}
			_iter_next_1d526380e:;
			++it;
			goto _iter_begin_1d526380e;
		}
		_iter_end_1d526380e:;
	};
}



inline void _206930a6a_codeMut(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _39128_s, jule::Ptr<_204cda982_Type>* _39154_t) {
	if (_204cdb82e_Binded((*(_39154_t)).ptr())) {
		({
			auto except = _1eeabc26e_WriteStr(_39128_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:400:4"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_39128_s, (*((*(_39154_t))))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:401:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39154_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28)) {
			_case_begin_1d5264ea3:;
			{
				_20692e184_ptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204cead8d_Ptr>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)) {
			_case_begin_1d5265e82:;
			{
				_20692e4e7_sptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204ce75c6_Sptr>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data26)) {
			_case_begin_1d5265b0d:;
			{
				_20692e85a_mapType(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204ce973d_Map>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24)) {
			_case_begin_1d5265b74:;
			{
				_20692ebbd_slice(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204ce8099_Slc>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27)) {
			_case_begin_1d5265bda:;
			{
				_206930031_arr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204cea3ba_Arr>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)) {
			_case_begin_1d5265c51:;
			{
				_206930394_func(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204b21664_FnIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3)) {
			_case_begin_1d52661c4:;
			{
				jule::Ptr<_204b2b471_Enum> _4184_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_204b2b471_Enum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3);;
				static__20685bc0a_toOut(_39128_s, (*(_4184_te))._field_Ident, static_cast<jule::Uintptr>(_4184_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4)) {
			_case_begin_1d526623a:;
			{
				jule::Ptr<_204b2cb7b_TypeEnum> _4214_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_204b2cb7b_TypeEnum>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data4);;
				static__20685bc0a_toOut(_39128_s, (*(_4214_te))._field_Ident, static_cast<jule::Uintptr>(_4214_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)) {
			_case_begin_1d52662a1:;
			{
				jule::Ptr<_204a4d2c7_StructIns> _4248_si = (*((*(_39154_t))))._field_Kind.cast_ptr<_204a4d2c7_StructIns>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0);;
				static__20685d3d2_structureIns(_39128_s, &(_4248_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data2)) {
			_case_begin_1d5266317:;
			{
				jule::Ptr<_204b28cba_Trait> _4278_trt = (*((*(_39154_t))))._field_Kind.cast_ptr<_204b28cba_Trait>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data2);;
				static__20685ca1e_traitDecl(_39128_s, _4278_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)) {
			_case_begin_1d526638e:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_39128_s, (*((*((*(_39154_t))))._field_Kind.cast_ptr<_204ce3a9a_Prim>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:430:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204cda4cb_Kind_mptr_data25)) {
			_case_begin_1d5266416:;
			{
				_206930707_tup(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_204ce8b8d_Tuple>((jule::Trait::Type*)&_204cda4cb_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1d5265a97:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:434:4"));;
			}
		}
		_match_end_1d5265a31:;
	};
}



inline void _206930dcd_codeMut1(_20692d815_resultCoder* _self_, _1eeabb290_Builder* _43829_s, jule::Ptr<_204cda982_Type>* _43855_t) {
	jule::Ptr<_204ce8b8d_Tuple> _4397_tup = _204cdee5e_Tup((*(_43855_t)).ptr());;
	if ((_4397_tup != nullptr)) {
		_206930707_tup(_self_, _43829_s, _4397_tup);
	} else {
		_20692ae2d_kind((*(_self_))._field_tc.ptr(), _43829_s, (*(_43855_t)));
	};
}



inline jule::Slice<jule::U8> _2069311db_code(_20692d815_resultCoder* _self_, jule::Ptr<_204cda982_Type>* _44725_t) {
	_1eeabb290_Builder _4487_s = static__1eeabbadc_New(20LL);;
	_206930a6a_codeMut(_self_, &(_4487_s), _44725_t);
	return _1eeabd5a0_Buf(&_4487_s);;
}








inline jule::Bool _1d5272224_Flag_eq(_1d5272224_Flag *_self_, _1d5272224_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d5272510_Name(_1d5272224_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d5272653_What(_1d5272224_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d5272796_Reset(_1d5272224_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d52728d9_Short(_1d5272224_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d5275aa7_Flag_eq(_1d5275aa7_Flag *_self_, _1d5275aa7_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d5275733_Name(_1d5275aa7_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d5275d93_What(_1d5275aa7_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d5275ed6_Reset(_1d5275aa7_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d5276129_Short(_1d5275aa7_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d52792b4_Flag_eq(_1d52792b4_Flag *_self_, _1d52792b4_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d5278e40_Name(_1d52792b4_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d52795a0_What(_1d52792b4_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d52796e3_Reset(_1d52792b4_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d5279836_Short(_1d52792b4_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d527ca15_Flag_eq(_1d527ca15_Flag *_self_, _1d527ca15_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d527c691_Name(_1d527ca15_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d527cd01_What(_1d527ca15_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d527ce44_Reset(_1d527ca15_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d527d087_Short(_1d527ca15_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d5281222_Flag_eq(_1d5281222_Flag *_self_, _1d5281222_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d5280d9d_Name(_1d5281222_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d528150d_What(_1d5281222_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d5281651_Reset(_1d5281222_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d5281794_Short(_1d5281222_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_206993913_FlagSet> static__206993c32_New(void) {
	return jule::new_ptr<_206993913_FlagSet>(_206993913_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _2069941d8_FindFlag(_206993913_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d528b22c:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_206991d40_CommonFlagMptrData*)_7215_flag.safe_type())->_206960209_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1d528b22c:;
			++it;
			goto _iter_begin_1d528b22c;
		}
		_iter_end_1d528b22c:;
	};
	return nullptr;;
}



inline jule::Trait _206994529_FindFlagShort(_206993913_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d528b7c1:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_206991d40_CommonFlagMptrData*)_8215_flag.safe_type())->_20696034c_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1d528b7c1:;
			++it;
			goto _iter_begin_1d528b7c1;
		}
		_iter_end_1d528b7c1:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _206994b01_Parse(_206993913_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_2069963c7_argParser _1167_ap = _2069963c7_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _206997906_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1d5281222_Flag> _1d5310180_addFlagCommon(_206993913_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_2069941d8_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_206994529_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1d5281222_Flag> _1407_flag = jule::new_ptr<_1d5281222_Flag>(_1d5281222_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1d527ca15_Flag> _1d531e0b2_addFlagCommon(_206993913_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_2069941d8_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_206994529_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1d527ca15_Flag> _1407_flag = jule::new_ptr<_1d527ca15_Flag>(_1d527ca15_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1d530c952_AddVar(_206993913_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1d5281222_Flag> _1717_flag = _1d5310180_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1d5316a6b_AddVar(_206993913_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1d527ca15_Flag> _1717_flag = _1d531e0b2_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1d5293ee3_parseInteger(_2069963c7_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1d52969a7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_200e33c22_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1d5296c93:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_200e33c22_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1d5296655:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_200e33c22_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1d52966bb:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1d5296732:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d52965de:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d52964ce:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1d529bb33_parseInteger(_2069963c7_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1d529e680:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_200e33c22_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1d529e96b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_200e33c22_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1d529e32d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_200e33c22_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1d529e394:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1d529e40a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d529e2b7:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d529e1a7:;
	};
	return __jule_func_result;;
}



inline jule::Str _206996c24_getData(_2069963c7_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _206996e99_processFlag(_2069963c7_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data3)) {
			_case_begin_1d5291199:;
			{
				jule::Ptr<_1d527ca15_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1d527ca15_Flag>((jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1d5291133:;
	};
	jule::Str _2203_data = _206996c24_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_206991d40_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_206960209_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression missing", 20)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data0)) {
			_case_begin_1d529309c:;
			{
				jule::Ptr<_1d5272224_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1d5272224_Flag>((jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1d5293ee3_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1d5297a41, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_206991d40_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_206960209_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid signed integer", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data1)) {
			_case_begin_1d5292a08:;
			{
				jule::Ptr<_1d5275aa7_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1d5275aa7_Flag>((jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d529bb33_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1d52a0719, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_206991d40_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_206960209_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid unsigned integer", 43)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data2)) {
			_case_begin_1d5293113:;
			{
				jule::Ptr<_1d52792b4_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1d52792b4_Flag>((jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _201a0b134_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_206991d40_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_206960209_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid floating-point", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data4)) {
			_case_begin_1d5293179:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1d5281222_Flag>((jule::Trait::Type*)&_206991d40_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1d529283d:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _206997252_singleDash(_2069963c7_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1d52a62e1:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _206994529_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move((*(_25227_arg))); size += part0.len(); jule::Str part1 = std::move(jule::Str::lit(": flag is not exist: ", 21)); size += part1.len(); jule::Str part2 = std::move(__jule_strFromRune(_25710_r)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
				({
					auto except = _206996e99_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1d52a62e1:;
			it += len;
			goto _iter_begin_1d52a62e1;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _20699750a_doubleDash(_2069963c7_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _2069941d8_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _206996e99_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _206997708_tryArg(_2069963c7_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _20699750a_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _206997252_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _206997906_parse(_2069963c7_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _206997708_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1d52aad1d:;
	}
	_iter_end_1d52aad1d:;;
	return jule::VoidExceptional{};
}








inline jule::Bool _1eec71478_Dir_eq(_1eec71478_Dir *_self_, _1eec71478_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1eecba8ac_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1eec71478_Dir>> static__200e411c4_Read(jule::Str _1117_path) {
	jule::Slice<_1eec71478_Dir> __jule_func_result;
	jule::Slice<jule::U16> _123_utf16Path = _1ee726978_UTF16FromStr(_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _137_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _143_handle = _1ee7532e0_FindFirstFile((&(_123_utf16Path[0LL])), (&(_137_data)));;
	if ((_143_handle == 4294967295LLU)) {
		return jule::Exceptional<jule::Slice<_1eec71478_Dir>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			_1eec71478_Dir _198_entry = _1eec71478_Dir{._field_Name=_1ee727050_U16PtrToStr(((jule::U16*)(_137_data.cFileName))), ._field_Stat=_1eecba8ac_Stat{._field_mode=0LL, ._field_size=0}};;
			_198_entry._field_Stat=({
				auto except = static__200e470a9_Of(_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _198_entry._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1eec71478_Dir>>{.error=except.error};
				} _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};});
			});
			{ jule::Slice<_1eec71478_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_198_entry); };
			if ((_1ee753664_FindNextFile(_143_handle, (&(_137_data))) == 0LL)) {
				goto _iter_end_2079ed939;
			};
		}
	_iter_next_2079ed939:;
	}
	_iter_end_2079ed939:;;
	_1ee75392d_FindClose(_143_handle);
	return jule::Exceptional<jule::Slice<_1eec71478_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__200e413d3_Create(jule::Str _3319_path) {
	jule::Slice<jule::U16> _383_utf16Path = _1ee726978_UTF16FromStr(_3319_path);;
	if ((!(_1ee750ee1_CreateDirectory((&(_383_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1eecb51ae_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__200e41614_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U16> _463_utf16Path = _1ee726978_UTF16FromStr(_4519_path);;
	if ((!(_1ee7512aa_RemoveDirectory((&(_463_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1eecb51ae_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline jule::Ptr<_1eec72017_Cmd> static__1eec72468_New(jule::Str _3516_path) {
	return jule::new_ptr<_1eec72017_Cmd>(_1eec72017_Cmd{._field_attrs=_1eecb3443_cmdAttrs{}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1eec72666_Spawn(_1eec72017_Cmd* _self_) {
	return _1eecb37ea_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1eec72aea_Wait(_1eec72017_Cmd* _self_) {
	return _1eecb3c7e_wait(_self_);
}



inline jule::VoidExceptional _1eecb37ea_spawn(_1eec72017_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(STARTUPINFOW));
		ZeroMemory((&(_467_processInfo)), sizeof(PROCESS_INFORMATION));
	};
	_457_startupInfo.cb=sizeof(STARTUPINFOW);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _1ee726978_UTF16FromStr(_1eecb43bc_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _1eecb4796_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1eecb4be7_getLastCmdError(), &__jule_any_type139)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1eecb3c7e_wait(_1eec72017_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_1ee74e85d_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_1ee74e85d_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>{.result=static_cast<jule::I32>(_897_exitCode)};;
}







inline __jule_tuple_x_2056a39dc_IR__jule_tuple_s_1eeaca425_Log static__2056a3eb5_Build(jule::Str _3018_path, jule::I32 _3029_flags) {
	__jule_tuple_x_2056a39dc_IR__jule_tuple_s_1eeaca425_Log __jule_func_result;
	jule::Ptr<_2056a108e_Importer> _317_importer = static__2056a14bd_New(_2056a5967_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_204a27c52_AST>> _337_files;
	jule::Slice<_1eeaca425_Log> _3318_logs;
	({
		__jule_tuple_sx_204a27c52_AST__jule_tuple_s_1eeaca425_Log __jule_assign_result = _2056a29a8_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_204a27c52_AST> _457_firstFile = _337_files[0LL];;
	_2056a5c20_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_204c148ab_Package> _487_pkg;
	({
		__jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log __jule_assign_result = _204d0c1ce_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_204c0e136_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_2056a39dc_IR> _537_ir = jule::new_ptr<_2056a39dc_IR>(_2056a39dc_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_204c12139_ImportInfo>(nullptr), ._field_Used=_2056a1754_AllPackages(_317_importer.ptr()), ._field_Ordered=_2056b2b61_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_204a4a46c_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_2056a5758_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _2056a449e_appendStructs(_2056a39dc_IR* _self_, jule::Ptr<_204c148ab_Package>* _6830_p, jule::Slice<jule::Ptr<_204a4a46c_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216851827:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21685231c:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_204a4a46c_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_21685231c:;
						++it;
						goto _iter_begin_21685231c;
					}
					_iter_end_21685231c:;
				};
			}
			_iter_next_216851827:;
			++it;
			goto _iter_begin_216851827;
		}
		_iter_end_216851827:;
	};
}



inline jule::Slice<jule::Ptr<_204a4a46c_Struct>> _2056a4735_GetAllStructures(_2056a39dc_IR* _self_) {
	jule::Slice<jule::Ptr<_204a4a46c_Struct>> _8111_buffer = nullptr;;
	_2056a449e_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216853472:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_2056a449e_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_216853472:;
			++it;
			goto _iter_begin_216853472;
		}
		_iter_end_216853472:;
	};
	return _8111_buffer;;
}



inline void _2056a4a98_appendGlobals(_2056a39dc_IR* _self_, jule::Ptr<_204c148ab_Package>* _9130_p, jule::Slice<jule::Ptr<_204c5319c_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216854ac2:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2168555b7:;
					if (it != expr_end) {
						jule::Ptr<_204c5319c_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_204c5319c_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_2168555b7:;
						++it;
						goto _iter_begin_2168555b7;
					}
					_iter_end_2168555b7:;
				};
			}
			_iter_next_216854ac2:;
			++it;
			goto _iter_begin_216854ac2;
		}
		_iter_end_216854ac2:;
	};
}



inline jule::Slice<jule::Ptr<_204c5319c_Var>> _2056a4d2e_GetAllGlobals(_2056a39dc_IR* _self_) {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _10411_buffer = nullptr;;
	_2056a4a98_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216856e48:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_2056a4a98_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_216856e48:;
			++it;
			goto _iter_begin_216856e48;
		}
		_iter_end_216856e48:;
	};
	return _10411_buffer;;
}



inline void _2056a502c_Order(_2056a39dc_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_2056a4d2e_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_2056a4735_GetAllStructures(_self_);
	_216858a4e_order((*(_self_))._field_Ordered._field_Globals);
	_216859632_order((*(_self_))._field_Ordered._field_Structs);
}







inline jule::I32 _1ee7259cc_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _1ee725c96_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _1ee7260d7_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2069a38ac:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_2069a38ac:;
			++it;
			goto _iter_begin_2069a38ac;
		}
		_iter_end_2069a38ac:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2069a2999:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_2069a6371:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_2069a6041:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1ee725c96_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_2069a5eca:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_2069a5dba:;
				};
			}
			_iter_next_2069a2999:;
			++it;
			goto _iter_begin_2069a2999;
		}
		_iter_end_2069a2999:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _1ee72636d_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1216_n = 0LL;;
	jule::I32 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_2069aaad4:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_2069aa8a3:;
					{
						_1206_a[_1216_n]=_1ee7259cc_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_2069aa4da:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_2069aa474:;
			};
			(_1216_n)++;
		}
	_iter_next_2069a7cbd:;
	}
	_iter_end_2069a7cbd:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _1ee7266e2_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_2069ad422:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_2069ad4bb:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1ee725c96_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_2069ad323:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _1ee726978_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2069b84c6:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_2069b84c6;
				};
				_176_buff=_1ee7266e2_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_2069b84c6:;
			++it;
			goto _iter_begin_2069b84c6;
		}
		_iter_end_2069b84c6:;
	};
	return _1ee7266e2_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _1ee726c86_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2069babb0:;
		if (it != expr_end) {
			jule::I32 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_2069babb0;
				};
			}
			_iter_next_2069babb0:;
			++it;
			_356_i++;
			goto _iter_begin_2069babb0;
		}
		_iter_end_2069babb0:;
	};
	return __jule_runesToStr(_1ee72636d_Decode(_346_codePage));;
}



inline jule::Str _1ee727050_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I32 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_1ee72636d_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_2069bbd26:;
	}
	_iter_end_2069bbd26:;;
	return jule::Str();;
}



inline jule::I32 _1ee693d46_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _1ee74e594_GetStdHandle(jule::Uintptr _6517_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6517_stdh)));;
}



inline jule::Bool _1ee74e85d_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _1ee74ebd2_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return _wstat(((wchar_t*)(_6917_path)), _6933_stat);;
}



inline jule::I32 _1ee750111_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return _wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode);;
}



inline jule::U32 _1ee750320_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _1ee750694_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff)));;
}



inline jule::Bool _1ee750c27_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _1ee750ee1_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _1ee7512aa_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _1ee751794_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname) {
	return GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1102_buff)), ((wchar_t**)(_11014_fname)));;
}



inline jule::Bool _1ee751b18_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)(_11540_mode)));;
}



inline jule::Bool _1ee752223_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _1ee752773_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_1267_written)))), _12621_reserved);;
}



inline jule::Bool _1ee752c5c_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)(_1347_readed)), nullptr);;
}



inline jule::Uintptr _1ee7532e0_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data)));;
}



inline jule::I32 _1ee753664_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return FindNextFileW(((HANDLE)(_15024_h)), _15039_data);;
}



inline jule::I32 _1ee75392d_FindClose(jule::Uintptr _15514_h) {
	return FindClose(((HANDLE)(_15514_h)));;
}



inline jule::I32 _1ee763ae7_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1ee763ec1_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1ee764378_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1ee7645a9_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Str _1ee774cd4_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _206a37a1d_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1ee78ae1b_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _206a37a1d_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1ee78b1a2_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1ee774cd4_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1ee78b46b_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1ee8853de_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1ee884157_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1ee88470c_acceptRange _1962_accept = _1ee884aa3_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1ee885730_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1ee884157_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1ee88470c_acceptRange _2432_accept = _1ee884aa3_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1ee885c80_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1ee88749b_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_206a7a29c;
			};
		}
	_iter_next_206a7a29c:;
	}
	_iter_end_206a7a29c:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _1ee886049_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_206a7d4ae:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_206a7d8aa:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_206a7d921:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_206a7d998:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_206a7da20:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_206a7d525:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_206a7d448:;
			{
				return -1LL;;
			}
		}
		_match_end_206a7d35a:;
	};
}



inline jule::I32 _1ee8864cd_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_206a83184:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_206a83849:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_206a814d4:;
			{
				_37434_r=65533LL;
				goto _case_begin_206a83717;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_206a83717:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_206a8111b:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_206a81094:;
	};
}



inline jule::Slice<jule::U8> _1ee8867ca_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1ee886b4e_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1ee886b4e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_206a8a950:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_206a8960d:;
			{
				_41242_r=128LL;
				goto _case_begin_206a89674;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_206a89674:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_206a88d9e:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_206a88d27:;
	};
}



inline jule::I32 _1ee8871d2_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_206a93c66;
			};
			jule::U8 _4823_x = _1ee884157_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_206a93c66;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_206a93c66;
			};
			_1ee88470c_acceptRange _4923_accept = _1ee884aa3_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_206a93c66:;
	}
	_iter_end_206a93c66:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ee88749b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1ee9d719a_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1ee9dea32_Len64(_5919_x));;
}



inline jule::I32 _1ee9d80e1_TrailingZeros(jule::U32 _8118_x) {
	{
		return _1ee9d89c6_TrailingZeros32(static_cast<jule::U32>(_8118_x));;
	};
}



inline jule::I32 _1ee9d89c6_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1ee9d7794__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1ee9d8c90_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1ee9d7d7c__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1ee9de768_Len32(jule::U32 _35014_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I32 _1ee9dea32_Len64(jule::U64 _36414_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ee9e07be_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ee9e20c8_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1ee8a04b4__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1ed58a03a_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I32 _1ee3ac4aa_randInt(jule::U64 _716_seed, jule::I32 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U32 _172_p2 = static_cast<jule::U32>(_162_p1);;
	return ({ jule::I32 __jule_x = static_cast<jule::I32>((({ jule::U32 __jule_x = _172_p2; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I32 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x % __jule_y)); });;
}



inline jule::Bool _206c43c3a_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_206c45995:;
	}
	_iter_end_206c45995:;;
	return true;;
}

inline jule::Bool _206c92371_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_206c93a6a:;
	}
	_iter_end_206c93a6a:;;
	return true;;
}

inline jule::Bool _207d0d5a6_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_207d0ec5b:;
	}
	_iter_end_207d0ec5b:;;
	return true;;
}

inline jule::Bool _216c638c6_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_216c655dc:;
	}
	_iter_end_216c655dc:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n) {
	__jule_writeStderr(_1ee78ae1b_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_206a37a1d_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1ee78ae1b_StrBytes(jule::Str::lit("\n", 1)));
	_1ee7645a9_Exit(2LL);
}



inline void _1ee8881a0__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I32 _1ee888546_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _1ee726978_UTF16FromStr(_1ee78b1a2_BytesStr(_1545_buf));;
	jule::U32 _206_written = static_cast<jule::U32>(0LLU);;
	jule::Bool _212_ok = _1ee752773_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), static_cast<jule::U32>(_192_utf16Buf.len()), &(_206_written), nullptr);;
	if ((!(_212_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = _1545_buf.len();
	return __jule_func_result;;
}



inline jule::I32 _1ee8888ba_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_3048_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _346_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_3048_buf.len(), _3048_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _356_readed = static_cast<jule::U32>(0LLU);;
	jule::Bool _362_ok = _1ee752c5c_ReadConsole(_3023_handle, (&(_346_codepage[0LL])), static_cast<jule::U32>(_346_codepage.len()), &(_356_readed));;
	if ((!(_362_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _412_runes = _1ee72636d_Decode(_346_codepage.slice(0LL, static_cast<jule::I32>(_356_readed)));;
	__jule_func_result=0LL;
	{
		auto expr = &(_412_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206b70bde:;
		if (it != expr_end) {
			jule::I32 *_439_r = it;
			{
				jule::I32 _443_size = _1ee886049_RuneLen((*(_439_r)));;
				if (((__jule_func_result + _443_size) > _3048_buf.len())) {
					goto _iter_end_206b70bde;
				};
				_1ee8864cd_EncodeRune(_3048_buf.slice(__jule_func_result), (*(_439_r)));
				__jule_func_result+=_443_size;
			}
			_iter_next_206b70bde:;
			++it;
			goto _iter_begin_206b70bde;
		}
		_iter_end_206b70bde:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf) {
	_1ee89e518_handleRW(&(_5816_buf));
	return _1ee888546_writeConsole(_1ee74e033_STDOUT, _5816_buf);;
}



inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf) {
	_1ee89e518_handleRW(&(_6616_buf));
	return _1ee888546_writeConsole(_1ee74e330_STDERR, _6616_buf);;
}



inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf) {
	_1ee89e518_handleRW(&(_7418_buf));
	return _1ee8888ba_readConsole(_1ee74dc8b_STDIN, _7418_buf);;
}



inline jule::U32 _206b7ee40_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo) {
	jule::U32 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U32 _206b8010a_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo) {
	jule::U32 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Slice<jule::Str> _1ee890075_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206b7430d:;
		if (it != expr_end) {
			jule::I32 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_1ee727050_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_206b7430d:;
			++it;
			_196_i++;
			goto _iter_begin_206b7430d;
		}
		_iter_end_206b7430d:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _1ee89052b_executable(void) {
	;
	jule::Slice<jule::U16> _486_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _492_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_486_buf[0LL])))), 260LL);;
	if ((_492_n > 0LL)) {
		_486_buf[_492_n]=0LLU;
		return _1ee727050_U16PtrToStr((&(_486_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:54:2"));;
}



inline jule::U32* __jule_RCNew(void) {
	;
	;
	jule::U32* _256_p = ((jule::U32*)(malloc(4LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p) {
	return _206b7ee40_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U32* _6328_p) {
	_206b8010a_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p) {
	return (_206b8010a_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U32* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I32>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_206b86650:;
	}
	_iter_end_206b86650:;;
	jule::I32 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_206b86d8c:;
	}
	_iter_end_206b86d8c:;;
	return _1ee78b46b_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _522_n = _1ee89aa86_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1ee78b46b_StrFromBytes(_516_buf);;
}



inline jule::I32 _1ee89aa86_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I32 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_206b8bd81:;
	}
	_iter_end_206b8bd81:;;
	jule::I32 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1ee89bc30_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _1ed58a03a_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I32 _852_exp = (static_cast<jule::I32>((_832_bits >> 52LLU)) & static_cast<jule::I32>(2047LL));;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LL)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_206b9286a:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_206b92639:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_206b90181:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_206b9213e:;
		};
	};
	;
	jule::I32 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_1ee89aa86_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I32 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I32 _1203_digit = static_cast<jule::I32>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_206b9583a:;
	}
	_iter_end_206b9583a:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_206b96ad3;
			};
		}
	_iter_next_206b96ad3:;
	}
	_iter_end_206b96ad3:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _1ee78b46b_StrFromBytes(_1046_buf);;
}



inline jule::Str _1d52cce0b_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d52ce5c2:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_206c12995_toStr((*(_1459_z))));;
			}
			_iter_next_1d52ce5c2:;
			++it;
			_1456_i++;
			goto _iter_begin_1d52ce5c2;
		}
		_iter_end_1d52ce5c2:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _1ee78b46b_StrFromBytes(_1436_buf);;
}



inline jule::Str _1d52c2c14_structToStr(_1eeabb290_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1d52c5cd3:;
				{
					;
					{
						
{
							_case_begin_1d52c6e6b:;
							{
								;
								;
							}
						}
						_match_end_1d52c6b4c:;
					};
				}
			}
			_match_end_1d52c5376:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1d52c8d4c:;
				{
					(_1966_buf).append(_1d52c9633_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1d52c8ca3:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _1ee78b46b_StrFromBytes(_1966_buf);;
}



inline jule::Str _206bebbd2_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_206bece14:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_206becd26:;
	};
	{
		
{
			_case_begin_206bed431:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_206bed2bb:;
	};
}

inline jule::Str _206beddb0_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c00103:;
			{
				return _21613_x;;
			}
		}
		_match_end_206c0008c:;
	};
}

inline jule::Str _206bee60d_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c02b3e:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_206c02a51:;
	};
}

inline jule::Str _206c0436b_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c055c0:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_206c054d2:;
	};
}

inline jule::Str _206c020a0_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c08051:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_206c07e63:;
	};
}

inline jule::Str _206c0977d_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c0aa6a:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_206c0a97c:;
	};
}

inline jule::Str _206c0c264_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c0d584:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_206c0d496:;
	};
}

inline jule::Str _206c0ecb1_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c1108c:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_206c10e27:;
	};
}

inline jule::Str _206c0c7c5_toStr(jule::Uintptr _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c134ce:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_206c13369:;
	};
}

inline jule::Str _206c12995_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c15921:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_206c157ab:;
	};
}

inline jule::Str _206c14dd7_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c17d63:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_206c17bed:;
	};
}

inline jule::Str _206c17329_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c1a2a5:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_206c1a140:;
	};
}

inline jule::Str _206c1976b_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c1c83a:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_206c1c6c5:;
	};
}

inline jule::Str _206c1cb48_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c1ed48:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_206c1eb5b:;
	};
}

inline jule::Str _206c1cebc_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c21dc2:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_206c21c18:;
	};
}

inline jule::Str _206c09b57_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_206c23c70:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_206c239ea:;
	};
}

inline jule::Str _207a01b90_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_207a036b9:;
			{
				return _206bee60d_toStr(_21613_x);;
			}
		}
		_match_end_207a030c0:;
	};
}

inline jule::Str _207a0cccd_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_207a0e807:;
			{
				return _206bee60d_toStr(_21613_x);;
			}
		}
		_match_end_207a0e20d:;
	};
}

inline jule::Str _207a450e0_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_207a46b19:;
			{
				return _206bee60d_toStr(_21613_x);;
			}
		}
		_match_end_207a46520:;
	};
}

inline jule::Str _207da287b_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_207da4372:;
			{
				return _206bee60d_toStr(_21613_x);;
			}
		}
		_match_end_207da3c78:;
	};
}

inline jule::Str _208520c96_toStr(jule::Ptr<_204c5319c_Var> _21613_x) {
	;
	{
		
{
			_case_begin_208521e84:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208521d96:;
	};
	;
	{
		
{
			_case_begin_208522935:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208522605:;
	};
}

inline jule::Str _20852333c_toStr(jule::Ptr<_204cd9b90_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_208525806:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208525718:;
	};
	;
	{
		
{
			_case_begin_2085262a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208525e77:;
	};
}

inline jule::Str _208526cd0_toStr(jule::Ptr<_204a4a46c_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_2085291de:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208529101:;
	};
	;
	{
		
{
			_case_begin_208529b90:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208529860:;
	};
}

inline jule::Str _20852a597_toStr(jule::Ptr<_204b1d5a6_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_20852ca61:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20852c973:;
	};
	;
	{
		
{
			_case_begin_20852d512:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20852d1d2:;
	};
}

inline jule::Str _20852e15b_toStr(jule::Ptr<_204b28cba_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_208531625:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208531537:;
	};
	;
	{
		
{
			_case_begin_208536e99:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208536b03:;
	};
}

inline jule::Str _2085375b5_toStr(jule::Ptr<_204b2b471_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_208539a3a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20853994c:;
	};
	;
	{
		
{
			_case_begin_20853a4db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20853a1ab:;
	};
}

inline jule::Str _208537bae_toStr(jule::Ptr<_204b2cb7b_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_20853d016:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20853ce39:;
	};
	;
	{
		
{
			_case_begin_20853d9b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20853d698:;
	};
}

inline jule::Str _208559164_toStr(jule::Ptr<_204a47579_Field> _21613_x) {
	;
	{
		
{
			_case_begin_20855a352:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20855a264:;
	};
	;
	{
		
{
			_case_begin_20855ad03:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20855a9c3:;
	};
}

inline jule::Str _20856b253_toStr(jule::Ptr<_204a9d338_Const> _21613_x) {
	;
	{
		
{
			_case_begin_20856c441:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20856c353:;
	};
	;
	{
		
{
			_case_begin_20856cde2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20856cab2:;
	};
}

inline jule::Str _208585459_toStr(jule::Ptr<_204b2a915_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_208586636:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208586548:;
	};
	;
	{
		
{
			_case_begin_2085870d7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208586ca7:;
	};
}

inline jule::Str _208596a53_toStr(jule::Ptr<_204b1bad2_Param> _21613_x) {
	;
	{
		
{
			_case_begin_206c21a81:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_206c21982:;
	};
	;
	{
		
{
			_case_begin_20859913d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208598846:;
	};
}

inline jule::Str _20867b6a4_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_20867d1cd:;
			{
				return _206beddb0_toStr(_21613_x);;
			}
		}
		_match_end_20867cad4:;
	};
}

inline jule::Str _208758253_toStr(jule::Ptr<_204a2a21b_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_20875940d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208759320:;
	};
	;
	{
		
{
			_case_begin_208759dae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208759a7e:;
	};
}

inline jule::Str _208770336_toStr(jule::Ptr<_204b169bc_TupleExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2087712e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208771205:;
	};
	;
	{
		
{
			_case_begin_208771c94:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208771964:;
	};
}

inline jule::Str _208772ba7_toStr(jule::Ptr<_204a2ea39_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_20877513d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208775050:;
	};
	;
	{
		
{
			_case_begin_208775ade:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2087757ae:;
	};
}

inline jule::Str _208782645_toStr(jule::Ptr<_204a385ae_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_208783723:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208783635:;
	};
	;
	{
		
{
			_case_begin_2087841c4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208783d94:;
	};
}

inline jule::Str _2087856c0_toStr(jule::Ptr<_204a2de45_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_208786869:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20878677b:;
	};
	;
	{
		
{
			_case_begin_20878731a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208786eda:;
	};
}

inline jule::Str _208784c52_toStr(jule::Ptr<_204bd476b_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_208789c35:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208789b47:;
	};
	;
	{
		
{
			_case_begin_20878a6d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20878a3a6:;
	};
}

inline jule::Str _208787dba_toStr(jule::Ptr<_204bd4c22_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_20878b50b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20878b41d:;
	};
	;
	{
		
{
			_case_begin_20878d750:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20878b5e9:;
	};
}

inline jule::Str _208787ea8_toStr(jule::Ptr<_204bd52a5_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_20878e0ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20878dec0:;
	};
	;
	{
		
{
			_case_begin_208791302:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20878e19b:;
	};
}

inline jule::Str _20878e531_toStr(jule::Ptr<_204ca2b7a_Data> _21613_x) {
	;
	{
		
{
			_case_begin_208791d08:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208791c1a:;
	};
	;
	{
		
{
			_case_begin_208793a85:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208793766:;
	};
}

inline jule::Str _20879448c_toStr(jule::Ptr<_204b133ae_FnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2087967e1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208796703:;
	};
	;
	{
		
{
			_case_begin_208797292:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208796e62:;
	};
}

inline jule::Str _2087c5e4c_toStr(jule::Ptr<_204bd3c32_Label> _21613_x) {
	;
	{
		
{
			_case_begin_2087c7107:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2087c7019:;
	};
	;
	{
		
{
			_case_begin_2087c7aa8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2087c7778:;
	};
}

inline jule::Str _2087e4685_toStr(jule::Ptr<_204bd11d5_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_2087e5873:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2087e5785:;
	};
	;
	{
		
{
			_case_begin_2087e6324:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2087e5ee4:;
	};
}

inline jule::Str _208803a5c_toStr(jule::Ptr<_204b19470_BuiltinErrorCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208804bc3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208804ad5:;
	};
	;
	{
		
{
			_case_begin_208805674:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208805344:;
	};
}

inline jule::Str _20880819e_toStr(jule::Ptr<_204b1a482_BackendEmitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208809205:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208809117:;
	};
	;
	{
		
{
			_case_begin_208809ba6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208809876:;
	};
}

inline jule::Str _208809a63_toStr(jule::Ptr<_204b181e9_BuiltinAppendCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20880ab1e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20880aa31:;
	};
	;
	{
		
{
			_case_begin_20880c912:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20880c56b:;
	};
}

inline jule::Str _20880aba7_toStr(jule::Ptr<_204b16cb9_BuiltinPrintCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20880d6c1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20880d5d3:;
	};
	;
	{
		
{
			_case_begin_20881044d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20881012e:;
	};
}

inline jule::Str _20880dc32_toStr(jule::Ptr<_204b170b6_BuiltinPrintlnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208811273:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208811185:;
	};
	;
	{
		
{
			_case_begin_2088134b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208811361:;
	};
}

inline jule::Str _208814551_toStr(jule::Ptr<_204b17869_BuiltinPanicCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208813d25:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208813c37:;
	};
	;
	{
		
{
			_case_begin_208816069:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208813e13:;
	};
}

inline jule::Str _208814298_toStr(jule::Ptr<_204b19096_BuiltinCopyCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2088168c7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2088167d9:;
	};
	;
	{
		
{
			_case_begin_208818b1b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2088169b5:;
	};
}

inline jule::Str _2088198ec_toStr(jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208819479:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20881938b:;
	};
	;
	{
		
{
			_case_begin_20881b6bd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208819567:;
	};
}

inline jule::Str _20881c49e_toStr(jule::Ptr<_204b1a77e_FreeExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20881bca6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20881bbb8:;
	};
	;
	{
		
{
			_case_begin_20881dec8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20881bda5:;
	};
}

inline jule::Str _20882694d_toStr(jule::Ptr<_204bd1d1d_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_208827b3b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208827a4d:;
	};
	;
	{
		
{
			_case_begin_2088285dc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2088282ac:;
	};
}

inline jule::Str _20883232c_toStr(jule::Ptr<_204bd211a_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_20883351a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20883342c:;
	};
	;
	{
		
{
			_case_begin_208833ebb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208833b8b:;
	};
}

inline jule::Str _208838168_toStr(jule::Ptr<_204bd25c1_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_208839356:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208839268:;
	};
	;
	{
		
{
			_case_begin_208839d07:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2088399c7:;
	};
}

inline jule::Str _2088600e6_toStr(jule::Ptr<_204bd301c_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_2088612d4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2088611e6:;
	};
	;
	{
		
{
			_case_begin_208861c85:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208861955:;
	};
}

inline jule::Str _20886ec0a_toStr(jule::Ptr<_204a3decc_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_208870da4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208870cb6:;
	};
	;
	{
		
{
			_case_begin_208871855:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208871525:;
	};
}

inline jule::Str _208872878_toStr(jule::Ptr<_204a3e8d4_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_208874c10:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208874b22:;
	};
	;
	{
		
{
			_case_begin_2088756b1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208875381:;
	};
}

inline jule::Str _20888dde4_toStr(jule::Ptr<_204bd33a2_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_2088900d2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20888eee4:;
	};
	;
	{
		
{
			_case_begin_208890a83:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208890753:;
	};
}

inline jule::Str _208897c55_toStr(jule::Ptr<_204bd4392_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_208898e43:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208898d55:;
	};
	;
	{
		
{
			_case_begin_2088998e4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2088995b4:;
	};
}

inline jule::Str _2088cecc0_toStr(jule::Ptr<_204a30760_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2088d0e47:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2088d0d59:;
	};
	;
	{
		
{
			_case_begin_2088d18e8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2088d15b8:;
	};
}

inline jule::Str _2088e4b70_toStr(jule::Ptr<_204b13c3e_IndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208597e72:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208597d73:;
	};
	;
	{
		
{
			_case_begin_2088e639c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2088e5951:;
	};
}

inline jule::Str _20893c426_toStr(jule::Ptr<_204bd59e2_Match> _21613_x) {
	;
	{
		
{
			_case_begin_20893d614:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20893d526:;
	};
	;
	{
		
{
			_case_begin_20893e0b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20893dc85:;
	};
}

inline jule::Str _208951490_toStr(jule::Ptr<_204bd6c13_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_208952e86:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208952d98:;
	};
	;
	{
		
{
			_case_begin_20895884e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208958ae6:;
	};
}

inline jule::Str _20897236d_toStr(jule::Ptr<_204bd377b_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_20897355b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20897346d:;
	};
	;
	{
		
{
			_case_begin_20897400c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208973bcc:;
	};
}

inline jule::Str _2089789e5_toStr(jule::Ptr<_204bd70a9_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_208979bd3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208979ae5:;
	};
	;
	{
		
{
			_case_begin_20897a684:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20897a354:;
	};
}

inline jule::Str _208983538_toStr(jule::Ptr<_204a39c0e_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_2089846e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208984605:;
	};
	;
	{
		
{
			_case_begin_208985194:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208984d64:;
	};
}

inline jule::Str _2089837e1_toStr(jule::Ptr<_204a3ca58_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_2089878b1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089877c3:;
	};
	;
	{
		
{
			_case_begin_208988362:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208988032:;
	};
}

inline jule::Str _2089857e3_toStr(jule::Ptr<_204a4170a_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_20898aa7e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20898a991:;
	};
	;
	{
		
{
			_case_begin_20898b530:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20898b200:;
	};
}

inline jule::Str _20898c256_toStr(jule::Ptr<_204a40ebd_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_20898e621:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20898e533:;
	};
	;
	{
		
{
			_case_begin_2089900c2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20898ec92:;
	};
}

inline jule::Str _20898c443_toStr(jule::Ptr<_204a3d6a2_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_2089927de:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208992701:;
	};
	;
	{
		
{
			_case_begin_208993290:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208992e60:;
	};
}

inline jule::Str _208990721_toStr(jule::Ptr<_204a40187_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_2089959ac:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089958be:;
	};
	;
	{
		
{
			_case_begin_20899645d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20899612d:;
	};
}

inline jule::Str _20899456b_toStr(jule::Ptr<_204a371e5_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_20899763a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20899754c:;
	};
	;
	{
		
{
			_case_begin_2089993b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208999087:;
	};
}

inline jule::Str _208996aac_toStr(jule::Ptr<_204a375be_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_20899bad4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20899b9e6:;
	};
	;
	{
		
{
			_case_begin_20899c585:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20899c255:;
	};
}

inline jule::Str _20899d168_toStr(jule::Ptr<_204a424ca_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_2089a0533:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089a0445:;
	};
	;
	{
		
{
			_case_begin_2089a0ed4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2089a0ba4:;
	};
}

inline jule::Str _2089a1633_toStr(jule::Ptr<_204a378bb_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_2089a3701:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089a3613:;
	};
	;
	{
		
{
			_case_begin_2089a41a2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2089a3d72:;
	};
}

inline jule::Str _2089a544a_toStr(jule::Ptr<_204a3ecad_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_2089a68be:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089a67d1:;
	};
	;
	{
		
{
			_case_begin_2089a7370:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2089a7040:;
	};
}

inline jule::Str _2089a8618_toStr(jule::Ptr<_204a3ce32_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_2089a9a8c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089a999e:;
	};
	;
	{
		
{
			_case_begin_2089aa53d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2089aa20d:;
	};
}

inline jule::Str _2089ab7d6_toStr(jule::Ptr<_204a2e819_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2089acc5a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2089acb6c:;
	};
	;
	{
		
{
			_case_begin_2089ad70b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2089ad3cb:;
	};
}

inline jule::Str _208a94061_toStr(jule::Ptr<_204a465bc_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_208a9521b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208a9512d:;
	};
	;
	{
		
{
			_case_begin_208a95bbc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208a9588c:;
	};
}

inline jule::Str _208a98b26_toStr(jule::Ptr<_204a45720_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208a99b6b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208a99a7d:;
	};
	;
	{
		
{
			_case_begin_208a9a61c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208a9a2dc:;
	};
}

inline jule::Str _208a9b585_toStr(jule::Ptr<_204a3b89d_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208a9d8a6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208a9d7b8:;
	};
	;
	{
		
{
			_case_begin_208a9e357:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208a9e027:;
	};
}

inline jule::Str _208aa017c_toStr(jule::Ptr<_204a45e5c_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208aa249d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208aa23b0:;
	};
	;
	{
		
{
			_case_begin_208aa2e4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208aa2b1e:;
	};
}

inline jule::Str _208aa620a_toStr(jule::Ptr<_204a43ac5_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208aa7250:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208aa7162:;
	};
	;
	{
		
{
			_case_begin_208aa7c01:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208aa78c1:;
	};
}

inline jule::Str _208aa87b2_toStr(jule::Ptr<_204a44a60_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208aaaad3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208aaa9e5:;
	};
	;
	{
		
{
			_case_begin_208aab584:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208aab254:;
	};
}

inline jule::Str _208ad66e1_toStr(jule::Ptr<_204b15e50_StructSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208ad7a33:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208ad7945:;
	};
	;
	{
		
{
			_case_begin_208ad84d4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208ad81a4:;
	};
}

inline jule::Str _208ad6c0d_toStr(jule::Ptr<_204b117a8_UnaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208adb619:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208adb52b:;
	};
	;
	{
		
{
			_case_begin_208adc0ba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208adbc8a:;
	};
}

inline jule::Str _208b19d40_toStr(jule::Ptr<_204b21664_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_208b1b02d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208b1ae40:;
	};
	;
	{
		
{
			_case_begin_208b1b9ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208b1b69e:;
	};
}

inline jule::Str _208dc45a0_toStr(jule::Ptr<_204a2c62a_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208dc575a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208dc566c:;
	};
	;
	{
		
{
			_case_begin_208dc620b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208dc5dcb:;
	};
}

inline jule::Str _208dc9e13_toStr(jule::Ptr<_204a2b33d_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208dcb0bd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208dcaed0:;
	};
	;
	{
		
{
			_case_begin_208dcba6e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208dcb73e:;
	};
}

inline jule::Str _208ddd289_toStr(jule::Ptr<_204a2bdcc_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208dde455:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208dde367:;
	};
	;
	{
		
{
			_case_begin_208ddee06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208ddeac6:;
	};
}

inline jule::Str _208de4779_toStr(jule::Ptr<_204a2b041_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208de5945:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208de5857:;
	};
	;
	{
		
{
			_case_begin_208de63e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208de60b6:;
	};
}

inline jule::Str _208deac69_toStr(jule::Ptr<_204a2b63a_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208debe35:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208debd47:;
	};
	;
	{
		
{
			_case_begin_208dec8d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208dec5a6:;
	};
}

inline jule::Str _208e01e3a_toStr(jule::Ptr<_204a2abab_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_208e03106:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208e03018:;
	};
	;
	{
		
{
			_case_begin_208e03aa7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208e03777:;
	};
}

inline jule::Str _208e4d607_toStr(jule::Ptr<_204a313cb_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_208e4e718:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208e4e62a:;
	};
	;
	{
		
{
			_case_begin_208e501b9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208e4ed89:;
	};
}

inline jule::Str _208e54344_toStr(jule::Ptr<_204b13788_SliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208e5605a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208e55e6c:;
	};
	;
	{
		
{
			_case_begin_208e56a0b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208e566cb:;
	};
}

inline jule::Str _208e6e815_toStr(jule::Ptr<_204a33664_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_208e709c0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208e708d2:;
	};
	;
	{
		
{
			_case_begin_208e71471:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208e71141:;
	};
}

inline jule::Str _208e781d1_toStr(jule::Ptr<_204a34c70_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_208e7938b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208e7929d:;
	};
	;
	{
		
{
			_case_begin_208e79d3c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208e79a0c:;
	};
}

inline jule::Str _208ece930_toStr(jule::Ptr<_204a32b6e_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_208ed0ada:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208ed09ec:;
	};
	;
	{
		
{
			_case_begin_208ed64a3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208ed674a:;
	};
}

inline jule::Str _208ee732c_toStr(jule::Ptr<_204b12479_AllocStructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_208ee851a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_208ee842c:;
	};
	;
	{
		
{
			_case_begin_208ee8ebb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_208ee8b8b:;
	};
}

inline jule::Str _20900a31d_toStr(jule::Ptr<_204b12a0c_CastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20900b50b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20900b41d:;
	};
	;
	{
		
{
			_case_begin_20900beac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20900bb7c:;
	};
}

inline jule::Str _2090223e0_toStr(jule::Ptr<_204b162e6_StructStaticIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_209023a1d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209023930:;
	};
	;
	{
		
{
			_case_begin_2090244be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20902418e:;
	};
}

inline jule::Str _2090250c4_toStr(jule::Ptr<_204a32058_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2090288ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2090287c0:;
	};
	;
	{
		
{
			_case_begin_20902935e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20902902e:;
	};
}

inline jule::Str _209031cd4_toStr(jule::Ptr<_204b1217c_StructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_209032e7d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209032d90:;
	};
	;
	{
		
{
			_case_begin_20903392e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2090335ee:;
	};
}

inline jule::Str _209053982_toStr(jule::Ptr<_204b1a10d_RuneExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_209054b70:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209054a82:;
	};
	;
	{
		
{
			_case_begin_209055621:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2090552e1:;
	};
}

inline jule::Str _20907671e_toStr(jule::Ptr<_204a4d2c7_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_20907790c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20907781e:;
	};
	;
	{
		
{
			_case_begin_2090783ad:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20907807d:;
	};
}

inline jule::Str _2090b67e7_toStr(jule::Ptr<_204cda982_Type> _21613_x) {
	;
	{
		
{
			_case_begin_2090b7980:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2090b7892:;
	};
	;
	{
		
{
			_case_begin_2090b8431:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2090b8101:;
	};
}

inline jule::Str _2090d886e_toStr(jule::Ptr<_204b166c0_ArrayExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2090d9a5c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2090d996e:;
	};
	;
	{
		
{
			_case_begin_2090da50d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2090da1cd:;
	};
}

inline jule::Str _20912291e_toStr(jule::Ptr<_204a2a4d5_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_209123b0c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209123a1e:;
	};
	;
	{
		
{
			_case_begin_2091245ad:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20912427d:;
	};
}

inline jule::Str _20912702d_toStr(jule::Ptr<_204a31002_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2091281b6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2091280c8:;
	};
	;
	{
		
{
			_case_begin_209128b67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209128837:;
	};
}

inline jule::Str _209131301_toStr(jule::Ptr<_204a29b11_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_209131895:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2091317a7:;
	};
	;
	{
		
{
			_case_begin_209132346:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209132016:;
	};
}

inline jule::Str _20912b7d5_toStr(jule::Ptr<_204a31b7e_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_209138308:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20913821a:;
	};
	;
	{
		
{
			_case_begin_209138ca9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209138979:;
	};
}

inline jule::Str _209142455_toStr(jule::Ptr<_204a2a8ae_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_209143643:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209143555:;
	};
	;
	{
		
{
			_case_begin_2091440e4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209143cb4:;
	};
}

inline jule::Str _20917cbee_toStr(jule::Ptr<_204b1502b_SlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20917dd87:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20917dc99:;
	};
	;
	{
		
{
			_case_begin_20917e838:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20917e508:;
	};
}

inline jule::Str _2091e7eab_toStr(jule::Ptr<_204a3549b_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_2091e9166:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2091e9078:;
	};
	;
	{
		
{
			_case_begin_2091e9b17:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2091e97d7:;
	};
}

inline jule::Str _209264005_toStr(jule::Ptr<_204b155ae_TraitSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2092651e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209265105:;
	};
	;
	{
		
{
			_case_begin_209265b94:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209265864:;
	};
}

inline jule::Str _209313390_toStr(jule::Ptr<_204b14998_MapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20931501d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209314e30:;
	};
	;
	{
		
{
			_case_begin_2093159be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20931568e:;
	};
}

inline jule::Str _209323724_toStr(jule::Ptr<_204b141e5_AnonFnExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_209324912:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209324824:;
	};
	;
	{
		
{
			_case_begin_2093253b3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209325083:;
	};
}

inline jule::Str _20932a7b4_toStr(jule::Ptr<_204a2e20e_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_20932b96e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20932b881:;
	};
	;
	{
		
{
			_case_begin_20932c420:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20932c0e0:;
	};
}

inline jule::Str _20932d91b_toStr(jule::Ptr<_204a2edd0_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_209330346:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209330258:;
	};
	;
	{
		
{
			_case_begin_209330ce7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2093309b7:;
	};
}

inline jule::Str _20932d586_toStr(jule::Ptr<_204a302a9_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_209334d62:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209334c74:;
	};
	;
	{
		
{
			_case_begin_209335813:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2093354d3:;
	};
}

inline jule::Str _209336d0e_toStr(jule::Ptr<_204a35e08_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_209338508:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20933841a:;
	};
	;
	{
		
{
			_case_begin_209338ea9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209338b79:;
	};
}

inline jule::Str _209339729_toStr(jule::Ptr<_204a36568_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_20933b6a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20933b5b6:;
	};
	;
	{
		
{
			_case_begin_20933c155:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20933bd25:;
	};
}

inline jule::Str _2093398b1_toStr(jule::Ptr<_204a317a5_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_20933e850:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20933e762:;
	};
	;
	{
		
{
			_case_begin_209340301:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20933eec1:;
	};
}

inline jule::Str _20933c7a4_toStr(jule::Ptr<_204a33e8e_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_20934325a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20934316c:;
	};
	;
	{
		
{
			_case_begin_209343c0b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2093438cb:;
	};
}

inline jule::Str _209346d96_toStr(jule::Ptr<_204a34445_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_209348392:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209348293:;
	};
	;
	{
		
{
			_case_begin_20934930a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209348a13:;
	};
}

inline jule::Str _2093496d4_toStr(jule::Ptr<_204a3250e_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_20934bc9c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20934bbae:;
	};
	;
	{
		
{
			_case_begin_20934c74d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20934c41d:;
	};
}

inline jule::Str _20949b9bd_toStr(jule::Ptr<_204b113ce_BinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20949cbab:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20949cabd:;
	};
	;
	{
		
{
			_case_begin_20949d65c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20949d32c:;
	};
}

inline jule::Str _209634b12_toStr(jule::Ptr<_204b17490_BuiltinNewCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_209635d00:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209635c12:;
	};
	;
	{
		
{
			_case_begin_2096367a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209636471:;
	};
}

inline jule::Str _20964a4da_toStr(jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20964b6c8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20964b5da:;
	};
	;
	{
		
{
			_case_begin_20964c179:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20964bd49:;
	};
}

inline jule::Str _209680003_toStr(jule::Ptr<_204b184e6_BuiltinLenCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2096811e1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209681103:;
	};
	;
	{
		
{
			_case_begin_209681b92:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_209681862:;
	};
}

inline jule::Str _209699b77_toStr(jule::Ptr<_204b187e3_BuiltinCapCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_20969ad65:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_20969ac77:;
	};
	;
	{
		
{
			_case_begin_20969b816:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_20969b4d6:;
	};
}

inline jule::Str _2096e60ad_toStr(jule::Ptr<_204b1976c_SizeofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_2096e71d0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_2096e70e2:;
	};
	;
	{
		
{
			_case_begin_2096e7b81:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2096e7851:;
	};
}

inline jule::Str _20970002e_toStr(jule::Ptr<_204b19e21_AlignofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_209701151:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_209701063:;
	};
	;
	{
		
{
			_case_begin_209701b02:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_2097017c2:;
	};
}

inline jule::Str _216a046cd_toStr(jule::Ptr<_2064e2693_ExceptionalForwardingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216a058bb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216a057cd:;
	};
	;
	{
		
{
			_case_begin_216a0636c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216a0603c:;
	};
}

inline jule::Str _216a3d140_toStr(jule::Ptr<_206506498_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_216a3e32d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216a3e240:;
	};
	;
	{
		
{
			_case_begin_216a3ecce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216a3e99e:;
	};
}

inline jule::Str _216a484ad_toStr(jule::Ptr<_206505222_MutSlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216a4969b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216a495ad:;
	};
	;
	{
		
{
			_case_begin_216a4a14c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216a49d1c:;
	};
}

inline jule::Str _216a8396b_toStr(jule::Ptr<_2065060be_AppendToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216a84b59:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216a84a6b:;
	};
	;
	{
		
{
			_case_begin_216a8560a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216a852ca:;
	};
}

inline jule::Str _216a86298_toStr(jule::Ptr<_206505be5_PushToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216a88762:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216a88674:;
	};
	;
	{
		
{
			_case_begin_216a89213:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216a88dd3:;
	};
}

inline jule::Str _216aa5471_toStr(jule::Ptr<_206503e79_SwapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216aa665e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216aa6571:;
	};
	;
	{
		
{
			_case_begin_216aa7110:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216aa6cd0:;
	};
}

inline jule::Str _216b11367_toStr(jule::Ptr<_206504353_EmptyCompareExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b12555:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b12467:;
	};
	;
	{
		
{
			_case_begin_216b13006:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b12bc6:;
	};
}

inline jule::Str _216b140e5_toStr(jule::Ptr<_206504b06_StrCompExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b165ae:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b164c1:;
	};
	;
	{
		
{
			_case_begin_216b17060:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b16c30:;
	};
}

inline jule::Str _216b2206a_toStr(jule::Ptr<_206503bb0_StrConcatExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b24468:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b2437a:;
	};
	;
	{
		
{
			_case_begin_216b24e19:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b24ad9:;
	};
}

inline jule::Str _216b4905e_toStr(jule::Ptr<_20650551e_UnsafeBinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b4a23b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b4a14d:;
	};
	;
	{
		
{
			_case_begin_216b4abdc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b4a8ac:;
	};
}

inline jule::Str _216b70e43_toStr(jule::Ptr<_206506795_UnsafeDerefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b72131:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b72043:;
	};
	;
	{
		
{
			_case_begin_216b72ad2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b727a2:;
	};
}

inline jule::Str _216b77851_toStr(jule::Ptr<_206504650_RefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b78a3e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b78951:;
	};
	;
	{
		
{
			_case_begin_216b794e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b791b0:;
	};
}

inline jule::Str _216b7be82_toStr(jule::Ptr<_204b11cd6_StructArgExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b7d170:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b7d082:;
	};
	;
	{
		
{
			_case_begin_216b7db21:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b7d7e1:;
	};
}

inline jule::Str _216b836b4_toStr(jule::Ptr<_206506a92_UnsafeCastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b848a2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b847b4:;
	};
	;
	{
		
{
			_case_begin_216b85353:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b85023:;
	};
}

inline jule::Str _216b92bce_toStr(jule::Ptr<_2065039c3_FnCallIgnoreExceptionalExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216b93dbc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216b93cce:;
	};
	;
	{
		
{
			_case_begin_216b9486d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216b9453d:;
	};
}

inline jule::Str _216ba5395_toStr(jule::Ptr<_20650581b_UnsafeIndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_216ba6583:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_216ba6495:;
	};
	;
	{
		
{
			_case_begin_216ba7034:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_216ba6c04:;
	};
}

inline jule::Str _1d50359cc_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1d5036b21:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d5036a33:;
	};
	;
	{
		
{
			_case_begin_1d50375c2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1d5037292:;
	};
}

inline jule::Str _1d52bcc42_toStr(_1eeabb290_Builder _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d52c1152:;
			{
				return _1d52c2c14_structToStr(_21613_x);;
			}
		}
		_match_end_1d52c0bce:;
	};
}

inline jule::Str _1d52c9633_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1d52ca9ca:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d52ca7bb:;
	};
	;
	{
		
{
			_case_begin_1d52cb338:;
			{
				return _1d52cce0b_arrToStr(_21613_x);;
			}
		}
		_match_end_1d52cb15c:;
	};
}

inline jule::Str _1d52cbe60_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d52c1e88:;
			{
				return _206beddb0_toStr(_21613_x);;
			}
		}
		_match_end_1d52d087b:;
	};
}

inline jule::Str _1d52d1706_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d52d2b47:;
			{
				return _206beddb0_toStr(_21613_x);;
			}
		}
		_match_end_1d52d263b:;
	};
}



inline void _1ee89bc30_rev(jule::Slice<jule::U8> _26912_b) {
	jule::I32 _2706_i = 0LL;;
	for (; (_2706_i < (_26912_b.len() >> 1LL)); (_2706_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26912_b[((_26912_b.len() - 1LL) - _2706_i)];
				jule::U8 _1___jule_assign_arg = _26912_b[_2706_i];
				_26912_b[_2706_i] = ___jule_assign_arg;
				_26912_b[((_26912_b.len() - 1LL) - _2706_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_206b97e8b:;
	}
	_iter_end_206b97e8b:;;
}



inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I32 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I32 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_206b99971:;
	}
	_iter_end_206b99971:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1ee78b46b_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206b9d788:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1ee8867ca_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_206b9d788:;
			++it;
			goto _iter_begin_206b9d788;
		}
		_iter_end_206b9d788:;
	};
	return _1ee78b46b_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1ee8871d2_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I32 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_206b9e987:;
	}
	_iter_end_206b9e987:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1ee78b46b_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1ee8867ca_AppendRune(_846_buf, _8316_r);
	return _1ee78b46b_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _206a37a1d_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I32 __jule_runeCount(jule::Str _10514_s) {
	return _1ee8871d2_RuneCountStr(_10514_s);;
}



inline void _1ee89e518_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1ee8881a0__handleRW(_814_b);
}



inline jule::Bool _1ee8a04b4__coSpawn(void* _1020_func, void* _1035_args) {
	void* _112_handle = CreateThread(nullptr, 0LL, (unsigned long(*)(void*))(_1020_func), _1035_args, 0LL, nullptr);;
	if ((_112_handle == nullptr)) {
		return false;;
	};
	_1ee74e85d_CloseHandle(((jule::Uintptr)(_112_handle)));
	return true;;
}



inline jule::U64 _1ee90211a_hash128to64(_1ee901c63_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1ee902428_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1ee8ed633_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1ee9026e2_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1ee8ecc09_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1ee902a33_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1ee902d74_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1ee90211a_hash128to64(_1ee901c63_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1ee9031e8_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1ee903627_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1ee903aab_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1ee902428_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1ee902428_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1ee9031e8_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1ee9031e8_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1ee903627_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1ee9026e2_fetch32(_7517_bytes));;
		return _1ee903627_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1ee9026e2_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I32 _963_z = (_7532_n + (static_cast<jule::I32>(_943_c) << 2LL));;
		return (jule::U64)(_1ee902a33_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1ee901c63_u128 _1ee903e63_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1ee901c63_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I32 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1ee902a33_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1ee903aab_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1ee902a33_shiftMix((jule::U64)(_1046_a + _1ee902428_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1ee902a33_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1ee902d74_hashLen16((jule::U64)(_1ee902428_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1ee902d74_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1ee902428_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1ee902a33_shiftMix((jule::U64)(_1ee902428_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1ee902a33_shiftMix((jule::U64)(_1ee902428_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_206bbe37a;
				};
			}
		_iter_next_206bbe37a:;
		}
		_iter_end_206bbe37a:;;
	};
	_1046_a=_1ee902d74_hashLen16(_1046_a, _1066_c);
	_1056_b=_1ee902d74_hashLen16(_1076_d, _1056_b);
	return _1ee901c63_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1ee902d74_hashLen16(_1056_b, _1046_a)};;
}



inline _1ee901c63_u128 _1ee9045b2_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1ee9031e8_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1ee9031e8_rotate64(_14563_a, 44LLU);
	return _1ee901c63_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1ee901c63_u128 _1ee9049e1_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1ee9045b2_weakHashLen32WithSeeds(_1ee902428_fetch64(_15529_bytes), _1ee902428_fetch64(_15529_bytes.slice(8LL)), _1ee902428_fetch64(_15529_bytes.slice(16LL)), _1ee902428_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1ee901c63_u128 _1ee904e20_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1ee901c63_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1ee903e63_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I32 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1ee901c63_u128 _16910_v = _1ee901c63_u128{._field_hi=0, ._field_lo=0};;
	_1ee901c63_u128 _17010_w = _1ee901c63_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1ee9031e8_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1ee902428_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1ee9031e8_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1ee902428_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1ee9031e8_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1ee9031e8_rotate64((jule::U64)(_1716_x + _1ee902428_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1ee9031e8_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1ee902428_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1ee9031e8_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1ee902428_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1ee902428_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1ee9031e8_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1ee9049e1_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1ee9049e1_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1ee902428_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1ee9031e8_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1ee902428_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1ee9031e8_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1ee902428_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1ee902428_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1ee9031e8_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1ee9049e1_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1ee9049e1_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1ee902428_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_206bc7a37;
			};
		}
	_iter_next_206bc7a37:;
	}
	_iter_end_206bc7a37:;;
	_1716_x+=(jule::U64)(_1ee9031e8_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1ee9031e8_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1ee9031e8_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I32 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1ee9031e8_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1ee902428_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1ee902428_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1ee9049e1_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_206bd3746:;
	}
	_iter_end_206bd3746:;;
	_1716_x=_1ee902d74_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1ee902d74_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1ee901c63_u128{._field_hi=(jule::U64)(_1ee902d74_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1ee902d74_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1ee9051d9_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1ee901c63_u128 _2356_sum = _1ee901c63_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1ee904e20_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1ee901c63_u128{._field_hi=_1ee902428_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1ee902428_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1ee904e20_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1ee901c63_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1ee90211a_hash128to64(_2356_sum);;
}



inline jule::U64 _1ee9e674d_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1ee9e7166_hasZeroByte((_1ee9e73ec_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1ee9e6a5b_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1ee9e7166_hasZeroByte((_1ee9e73ec_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1ee9e6d25_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1ee9d8c90_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1ee9e7166_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1ee9e73ec_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I32 _1ee9e76b6_numGroups(jule::I32 _7914_n) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1ee9e78c5_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206bdd1e0:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_206bdd1e0:;
			++it;
			_886_i++;
			goto _iter_begin_206bdd1e0;
		}
		_iter_end_206bdd1e0:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1ee9e7c9e_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1ee9e809b_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups) {
	return _1ee9e8420_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1ee9e8420_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I32 _1eecae939_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I32)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_206c37635:;
	}
	_iter_end_206c37635:;;
	return -1LL;;
}



inline jule::I32 _1eecb00dd_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206c379ed:;
		if (it != expr_end) {
			jule::I32 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_206c379ed:;
			++it;
			_706_i++;
			goto _iter_begin_206c379ed;
		}
		_iter_end_206c379ed:;
	};
	return -1LL;;
}



inline jule::I32 _1eecb0462_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1eecae939_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1eecc7cc6_Getwd(void) {
	jule::Array<jule::U16,261> _910_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _102_n = _1ee750694_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_910_buf[0LL])));;
	if ((_102_n == 0LLU)) {
		return jule::Str();;
	};
	return _1ee727050_U16PtrToStr((&(_910_buf[0LL])));;
}



inline jule::Bool _200dbabba_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_200e2893c__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _200e3245c_isExcludingLatin(_200dc4b91_Letter, _7613_r);;
}



inline jule::Bool _200e317d0_is16(jule::Slice<_200e2ea42_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20792dd20:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_200e2ea42_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_20792dd20:;
				++it;
				_1937_i++;
				goto _iter_begin_20792dd20;
			}
			_iter_end_20792dd20:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_200e2ea42_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_20792caaa:;
	}
	_iter_end_20792caaa:;;
	return false;;
}



inline jule::Bool _200e31b54_is32(jule::Slice<_200e30070_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207935442:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_200e30070_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_207935442:;
				++it;
				_2307_i++;
				goto _iter_begin_207935442;
			}
			_iter_end_207935442:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_200e30070_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_207931d78:;
	}
	_iter_end_207931d78:;;
	return false;;
}



inline jule::Bool _200e3245c_isExcludingLatin(jule::Ptr<_200e304e3_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_200e2ea42_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _200e317d0_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_200e30070_Range32> *_2873_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _200e31b54_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _200e3269e_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_200e2893c__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _200e3245c_isExcludingLatin(_200dcae61_Upper, _29512_r);;
}



inline jule::I32 _200e32d97_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_200e2e58b_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_200e2e58b_CaseRange> _200e3321b_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_200e2e58b_CaseRange> _33329_caseRange) {
	jule::I32 _3356_lo = 0LL;;
	jule::I32 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I32 _3383_m = static_cast<jule::I32>((static_cast<jule::U32>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_200e2e58b_CaseRange> _3397_cr = ((jule::Ptr<_200e2e58b_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*(_3397_cr))._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_207946909:;
	}
	_iter_end_207946909:;;
	return nullptr;;
}



inline jule::I32 _200e334d5_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I32>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_200e2a71e_asciiFold[_37015_r]);;
	};
	jule::I32 _3806_lo = 0LL;;
	jule::I32 _3816_hi = _200e2aa0a_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I32 _3833_m = static_cast<jule::I32>((static_cast<jule::U32>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_200e2aa0a_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_20794ac60:;
	}
	_iter_end_20794ac60:;;
	if (((_3806_lo < _200e2aa0a_caseOrbit.len()) && (static_cast<jule::I32>(_200e2aa0a_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_200e2aa0a_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_200e2e58b_CaseRange> _3972_cr = _200e3321b_lookupCaseRange(_37015_r, _200e28365_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _200e32d97_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _200e32d97_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _200e338ae_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I32 __jule_x = 2147483647LL; jule::I32 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1eeabb290_Builder _186_ss = static__1eeabbadc_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1eeabc26e_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_20795ed0c:;
	}
	_iter_end_20795ed0c:;;
	return _1eeabcaee_Str(&_186_ss);;
}



inline jule::Bool _200e33c22_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _200e34096_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _200e3454c_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_200e33c22_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_2079639c0:;
	}
	_iter_end_2079639c0:;;
	return -1LL;;
}



inline jule::I32 _200e3488d_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _200e3454c_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _200e34cbc_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_207965c25:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_20796553d;
					};
				}
			_iter_next_207967496:;
			}
			_iter_end_207967496:;;
			return _636_j;;
		}
	_iter_next_20796553d:;
	}
	_iter_end_20796553d:;;
	return -1LL;;
}



inline jule::I32 _200e35141_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _200e34cbc_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _200e36928_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1eecb0462_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _200e36c9c_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_20796e635:;
	}
	_iter_end_20796e635:;;
	return -1LL;;
}



inline jule::I32 _200e376c6_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_200e36c9c_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_207972968:;
	}
	_iter_end_207972968:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _200e37d69_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _200e3454c_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_207977b9e;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_207977b9e:;
	}
	_iter_end_207977b9e:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _200e381dd_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _200e37d69_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _200e38562_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_200e3454c_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _200e390ce_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_200e376c6_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I32 _200e39453_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2746_n = 0LL;;
	jule::I32 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2773_j = _200e3454c_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_20797cd5d;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_20797cd5d:;
	}
	_iter_end_20797cd5d:;;
	return _2746_n;;
}



inline jule::Str _200e3993c_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I32 _2952_m = _200e39453_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1eeabb290_Builder _3036_ss = static__1eeabbadc_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I32 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I32 _3063_j = _200e3454c_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_207981944;
			};
			({
				auto except = _1eeabc26e_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1eeabc26e_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_207981944:;
	}
	_iter_end_207981944:;;
	({
		auto except = _1eeabc26e_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1eeabcaee_Str(&_3036_ss);;
}



inline jule::Str _200e39d6b_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _200e3993c_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _200e3aae7_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I32 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I32 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_200e36c9c_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_2079871db:;
	}
	_iter_end_2079871db:;;
	return jule::Str();;
}



inline jule::Str _200e3ae6b_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I32 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I32 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885c80_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_200e36c9c_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_207988d14:;
	}
	_iter_end_207988d14:;;
	return jule::Str();;
}



inline jule::Str _200e3b576_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _200e3aae7_TrimLeft(_200e3ae6b_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Bool _200e3ced4_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I32 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_20798dd4c;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_207990ce9;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_207990ce9;
			};
			return false;;
		}
	_iter_next_207990ce9:;
	}
	_iter_end_207990ce9:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_20798dd4c:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_207994083:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I32 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_207994083;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_207994083;
					};
					return false;;
				};
				jule::I32 _1237_r = _200e334d5_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_200e334d5_SimpleFold(_1237_r);
					}
				_iter_next_207994814:;
				}
				_iter_end_207994814:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_207994083;
				};
				return false;;
			}
			_iter_next_207994083:;
			it += len;
			goto _iter_begin_207994083;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Bool _1eed698e5_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _1eed69c03_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _1eed69ebc_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I32 _1eed6a594_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1eed69c03_isSlash(_8318_path[0LL]))) || (!(_1eed69c03_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1eed6a85d_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1eed6a85d_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_1eed69ebc_toUpper(_976_p2[0LL]) == 'U')) && (_1eed69ebc_toUpper(_976_p2[1LL]) == 'N')) && (_1eed69ebc_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1eed6a85d_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1eed6a85d_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1eed6a85d_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079ab908:;
		if (it != expr_end) {
			jule::I32 _1216_i = it - expr->begin();
			{
				if (_1eed69c03_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_2079ab908:;
			++it;
			_1216_i++;
			goto _iter_begin_2079ab908;
		}
		_iter_end_2079ab908:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1eed6ab27_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _1ee726978_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_1326_n), static_cast<jule::I32>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_1ee751794_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _1ee726c86_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I32>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_2079ad9c6:;
	}
	_iter_end_2079ad9c6:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1eed6b001_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1eed6ab27_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _200e3e49c_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1eed6b243_join(jule::Slice<jule::Str> _1609_elem) {
	_1eeabb290_Builder _1616_s = static__1eeabbadc_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_1609_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079b2d1b:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_1eeabd083_Len(&_1616_s) == 0LL)) {
						_case_begin_2079b3b85:;
					}
					else if (_1eed69c03_isSlash(_1626_lastChar)) {
						_case_begin_2079b3855:;
						{
							while (((_16314_e.len() > 0LL) && _1eed69c03_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_2079b4658:;
							}
							_iter_end_2079b4658:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_2079b38bb:;
					}
					else {
						_case_begin_2079b37de:;
						{
							({
								auto except = _1eeabc527_WriteByte(&_1616_s, '\\');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:187:4"));
							});
							_1626_lastChar='\\';
						}
					}
					_match_end_2079b36ce:;
				};
				if ((_16314_e.len() > 0LL)) {
					({
						auto except = _1eeabc26e_WriteStr(&_1616_s, _16314_e);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:191:4"));
						(except.result);
					});
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_2079b2d1b:;
			++it;
			goto _iter_begin_2079b2d1b;
		}
		_iter_end_2079b2d1b:;
	};
	if ((_1eeabd083_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _200e3e49c_Clean(_1eeabcaee_Str(&_1616_s));;
}



inline jule::Str _200e3e49c_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I32 _1112_volLen = _1eed6a594_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1eed698e5_IsPathSep(_1102_originalPath[0LL])) && _1eed698e5_IsPathSep(_1102_originalPath[1LL]))) {
			return _200e3ea74_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1eed698e5_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1272_n = _10914_path.len();;
	_200e3d644_lazyBuff _1286_out = _200e3d644_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I32 _1336_r;
	jule::I32 _13313_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_200e3dd81_append(&_1286_out, 92LLU);
		_13313_dotdot=1LL;
		_1336_r=1LL;
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1eed698e5_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_2079bcd04:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1eed698e5_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_2079baa8d:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1eed698e5_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_2079bab04:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_2079c1db3:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1eed698e5_IsPathSep(_200e3dac8_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_2079c2765:;
									}
									_iter_end_2079c2765:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_2079c1e5c:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_200e3dd81_append(&_1286_out, 92LLU);
									};
									_200e3dd81_append(&_1286_out, '.');
									_200e3dd81_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_2079c1a50:;
						};
					}
				}
				else {
					_case_begin_2079baa27:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_200e3dd81_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I32 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_1eed698e5_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_200e3dd81_append(&_1286_out, '.');
										_200e3dd81_append(&_1286_out, 92LLU);
										goto _iter_end_2079bc52e;
									};
								}
							_iter_next_2079bc52e:;
							}
							_iter_end_2079bc52e:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_1eed698e5_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_200e3dd81_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_2079bda08:;
						}
						_iter_end_2079bda08:;;
					}
				}
				_match_end_2079ba96c:;
			};
		}
	_iter_next_2079ba917:;
	}
	_iter_end_2079ba917:;;
	if ((_1286_out._field_w == 0LL)) {
		_200e3dd81_append(&_1286_out, '.');
	};
	return _200e3ea74_FromSlash(_200e3e117_string(&_1286_out));;
}



inline jule::Str _200e3ea74_FromSlash(jule::Str _21214_path) {
	;
	return _200e39d6b_ReplaceAll(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1));;
}



inline jule::Str _200e3edb5_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1eed6b243_join(_2269_elem);;
}



inline jule::Str _200e4014b_Ext(jule::Str _2318_path) {
	jule::I32 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1eed698e5_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_2079c604e:;
	}
	_iter_end_2079c604e:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _200e40415_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1eed6b001_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _200e406ce_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1eed698e5_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_2079c73e6:;
	}
	_iter_end_2079c73e6:;;
	(_25213_path).mut_slice(_200e40cea_VolumeName(_25213_path).len());;
	jule::I32 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1eed698e5_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_2079c7baa:;
	}
	_iter_end_2079c7baa:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _200e40aa8_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _200e40cea_VolumeName(_2838_path);;
	jule::I32 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1eed698e5_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_2079cac9b:;
	}
	_iter_end_2079cac9b:;;
	jule::Str _2892_dir = _200e3e49c_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _200e40cea_VolumeName(jule::Str _30115_path) {
	return _200e3ea74_FromSlash(_30115_path.slice(0LL, _1eed6a594_volumeNameLen(_30115_path)));;
}



inline void _1eecb4103_appendEscapeArg(_1eeabb290_Builder* _10225_s, jule::Str _10246_arg) {
	if ((_10246_arg.len() == 0LL)) {
		({
			auto except = _1eeabc26e_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:104:3"));
			(except.result);
		});
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I32 _1106_i = 0LL;;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10246_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_207a18547:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_207a18844:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_207a18723:;
			};
		}
	_iter_next_207a181a1:;
	}
	_iter_end_207a181a1:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		({
			auto except = _1eeabc26e_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:122:3"));
			(except.result);
		});
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		({
			auto except = _1eeabc527_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:127:3"));
		});
		({
			auto except = _1eeabc26e_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:128:3"));
			(except.result);
		});
		({
			auto except = _1eeabc527_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:129:3"));
		});
		return;;
	};
	if (_1096_hasSpace) {
		({
			auto except = _1eeabc527_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:134:3"));
		});
	};
	jule::I32 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10246_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_207a1bc32:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_207a1bcdc:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								({
									auto except = _1eeabc527_WriteByte(_10225_s, '\\');
									if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:145:5"));
								});
							}
						_iter_next_207a1c518:;
						}
						_iter_end_207a1c518:;;
						({
							auto except = _1eeabc527_WriteByte(_10225_s, '\\');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:147:4"));
						});
					}
				}
				else {
					_case_begin_207a1b78c:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_207a1b89c:;
			};
			({
				auto except = _1eeabc527_WriteByte(_10225_s, _1393_c);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:151:3"));
			});
		}
	_iter_next_207a1ae51:;
	}
	_iter_end_207a1ae51:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				({
					auto except = _1eeabc527_WriteByte(_10225_s, '\\');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:155:4"));
				});
			}
		_iter_next_207a1d096:;
		}
		_iter_end_207a1d096:;;
		({
			auto except = _1eeabc527_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:157:3"));
		});
	};
}



inline jule::Str _1eecb43bc_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_1eeabb290_Builder _1646_s = static__1eeabbadc_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a1dcde:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_1eeabd083_Len(&_1646_s) > 0LL)) {
					({
						auto except = _1eeabc527_WriteByte(&_1646_s, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:167:4"));
					});
				};
				_1eecb4103_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_207a1dcde:;
			++it;
			goto _iter_begin_207a1dcde;
		}
		_iter_end_207a1dcde:;
	};
	return _1eeabcaee_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1eecb4796_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1ee7260d7_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I32 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a20d24:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_1eecb00dd_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_207a20d24:;
			++it;
			goto _iter_begin_207a20d24;
		}
		_iter_end_207a20d24:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a213da:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_207a22d8c:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_1ee7266e2_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_207a22d8c:;
						it += len;
						goto _iter_begin_207a22d8c;
					}
				};
				_1916_b=_1ee7266e2_AppendRune(_1916_b, 0LL);
			}
			_iter_next_207a213da:;
			++it;
			goto _iter_begin_207a213da;
		}
		_iter_end_207a213da:;
	};
	_1916_b=_1ee7266e2_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I32 _1eecb49d8_cmdErrorFromCode(jule::I32 _20221_code) {
	{
		auto &_match_expr{ _20221_code };
		
		if (_match_expr == 5LL) {
			_case_begin_207a24124:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_207a2395e:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_207a20a05:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_207a21154:;
	};
}



inline jule::I32 _1eecb4be7_getLastCmdError(void) {
	return _1eecb49d8_cmdErrorFromCode(static_cast<jule::I32>(_1ee750320_GetLastError()));;
}



inline jule::I32 _1eecb51ae_getLastFsErrorWindows(void) {
	jule::U32 _102_err = _1ee750320_GetLastError();;
	{
		auto &_match_expr{ _102_err };
		
		if (_match_expr == 2LL || _match_expr == 3LL || _match_expr == 123LL) {
			_case_begin_207a25763:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 5LL || _match_expr == 16LL || _match_expr == 33LL || _match_expr == 50LL) {
			_case_begin_207a25103:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 19LL) {
			_case_begin_207a2517a:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_207a25202:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 145LL) {
			_case_begin_207a25279:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else if (_match_expr == 183LL) {
			_case_begin_207a25455:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 206LL) {
			_case_begin_207a254bb:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 87LL) {
			_case_begin_207a25532:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else {
			_case_begin_207a24e49:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_207a24a3c:;
	};
}



inline jule::I32 _1eecb5742_getLastOsError(void) {
	jule::U32 _92_err = _1ee750320_GetLastError();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 5LL) {
			_case_begin_207a283c0:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_207a28436:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_207a2849c:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_207a28524:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_207a27ca4:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_207a255ed:;
	};
}



inline jule::Bool _1eecbce53_isConsoleHandle(jule::Uintptr _9020_handle) {
	return (((_9020_handle == _1ee74dc8b_STDIN) || (_9020_handle == _1ee74e033_STDOUT)) || (_9020_handle == _1ee74e330_STDERR));;
}



inline void _1eeccb02c_Exit(jule::I32 _119_code) {
	_1ee7645a9_Exit(_119_code);
}



inline jule::Str _1eeccb291_Executable(void) {
	return _1ee89052b_executable();;
}



inline jule::Slice<jule::Str> _1eeccb45b_Args(void) {
	return _1ee890075_args();;
}



inline jule::Exceptional<jule::Str> _1eeccb8bd_Getwd(void) {
	jule::Str _332_wd = _1eecc7cc6_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1eecb5742_getLastOsError(), &__jule_any_type140)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I32 _200e467e5_getLastFsError(void) {
	jule::I32 _412_err = _1ee693d46_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_207a58c80:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_207a58b81:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_207a585a9:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_207a58620:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_207a58686:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_207a5870d:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_207a58785:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_207a5880c:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_207a58e28:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_207a58ea0:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_207a59027:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_207a5909e:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_207a59126:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_207a5919d:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_207a59225:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_207a5929c:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_207a59324:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_207a5939b:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_207a59423:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_207a5949a:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_207a59522:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_207a59599:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_207a59621:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_207a59698:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_207a59720:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_207a59797:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_207a5981e:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_207a59896:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_207a58433:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_207a58543:;
	};
}



inline jule::Bool _1eea805a6_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1eea80881_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1eea0202d_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a80e50:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_207a80e50:;
			++it;
			goto _iter_begin_207a80e50;
		}
		_iter_end_207a80e50:;
	};
	return false;;
}



inline jule::Bool _1eea80b4a_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1eea0211b_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a876b5:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_207a876b5:;
			++it;
			goto _iter_begin_207a876b5;
		}
		_iter_end_207a876b5:;
	};
	{
		auto expr = &(_1eea803ec_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a88177:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_207a88177:;
			++it;
			goto _iter_begin_207a88177;
		}
		_iter_end_207a88177:;
	};
	return false;;
}



inline jule::Str _1eeaca887_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1eeacb327_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1eeacab95_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_207a87b5a:;
			{
				return _32613_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_207a89112:;
			{
				return __jule_strFromByte(_32613_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_207a89178:;
			{
				return __jule_strFromRune(_32613_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_207a8909b:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_207a89035:;
	};
}



inline jule::I32 _1eeacae5e_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a8a08b:;
		if (it != expr_end) {
			jule::I32 _3406_i = it - expr->begin();
			jule::U8 *_3409_b = it;
			{
				if (((*(_3409_b)) == '@')) {
					return _3406_i;;
				};
			}
			_iter_next_207a8a08b:;
			++it;
			_3406_i++;
			goto _iter_begin_207a8a08b;
		}
		_iter_end_207a8a08b:;
	};
	return -1LL;;
}



inline jule::Str _1eeacb327_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1eeabb290_Builder _3496_s = static__1eeabbadc_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a8b8c8:;
		if (it != expr_end) {
			jule::Any *_3509_arg = it;
			{
				jule::I32 _3513_i = _1eeacae5e_findNextFmt(_34817_fmt);;
				if ((_3513_i == -1LL)) {
					goto _iter_end_207a8b8c8;
				};
				({
					auto except = _1eeabc26e_WriteStr(&_3496_s, _34817_fmt.slice(0LL, _3513_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:355:3"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&_3496_s, _1eeacab95_argToStr((*(_3509_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:356:3"));
					(except.result);
				});
				(_34817_fmt).mut_slice((_3513_i + 1LL));;
			}
			_iter_next_207a8b8c8:;
			++it;
			goto _iter_begin_207a8b8c8;
		}
		_iter_end_207a8b8c8:;
	};
	({
		auto except = _1eeabc26e_WriteStr(&_3496_s, _34817_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:359:2"));
		(except.result);
	});
	return _1eeabcaee_Str(&_3496_s);;
}



inline jule::Bool _1eeacc229_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1eeacd648_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1eeacd956_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1eeacdc20_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1eeace061_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1eeace2e7_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1eeace5b1_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1eeace87a_IsUnix(jule::Str _5511_os) {
	return (_1eeacd956_IsDarwin(_5511_os) || _1eeacdc20_IsLinux(_5511_os));;
}



inline jule::Bool _1eeacec54_Is32Bit(jule::Str _5812_arch) {
	return _1eeace061_IsI386(_5812_arch);;
}



inline jule::Bool _1eeacee96_Is64Bit(jule::Str _6112_arch) {
	return (_1eeace2e7_IsAmd64(_6112_arch) || _1eeace5b1_IsArm64(_6112_arch));;
}



inline void _200e4851c_init(void) {
	jule::Str _256_path = _1eeccb291_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_200e47a6b_PathWd=({
			auto except = _1eeccb8bd_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_200e477b3_PathExec=_200e40aa8_Dir(_256_path);
		_200e47560_PathStdlib=_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _200e477b3_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_200e47d68_PathApi=_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _200e477b3_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _2019b2074_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _2019b2382_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _2019b264b_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2019b298c_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _2019b5000_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_207b0e40c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_2019bae07_IsInf(_4714_f, 0LL) || _2019ba775_IsNaN(_4714_f)) {
			_case_begin_207b0e4a6:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_207b0e31e:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2019bb1c1_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _2019b264b_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_2019b298c_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _2019ba467_NaN(void) {
	return _2019b298c_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _2019ba775_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _2019baa3e_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _2019b298c_F64FromBits(9218868437227405312LLU);;
	};
	return _2019b298c_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _2019bae07_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _2019bb1c1_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_2019bd57a_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _2019bcb95_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_2019ba775_IsNaN(_1118_x) || _2019bae07_IsInf(_1118_x, 1LL)) {
			_case_begin_207b4a7bc:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_207b4a866:;
			{
				return _2019ba467_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_207b4a8cc:;
			{
				return _2019baa3e_Inf(-1LL);;
			}
		}
		_match_end_207b4a701:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2019b5000_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _2019bd57a_Abs(jule::F64 _438_x) {
	return _2019b298c_F64FromBits((_2019b264b_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _2019c50ed_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _2019bd57a_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_207bad5bb:;
		}
		_iter_end_207bad5bb:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _2019c5906_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2019b5000_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_2019bcb95_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _2019ee4e0_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1ee78b46b_StrFromBytes(_2019eeac8_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _201a02e83_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _2019eeac8_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_2019ed313_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_207da8211:;
			{
				_886_bits=static_cast<jule::U64>(_2019b2074_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_2019ed313_floatInfo>)((&(_2019ed6cb_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_207da7e47:;
			{
				_886_bits=_2019b264b_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_2019ed313_floatInfo>)((&(_2019ed9c8_f64info))));
			}
		}
		else {
			_case_begin_207da6c04:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_207da7ac3:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_207dac05b:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_207dad799:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_207dad887:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_207dad128:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_207dad018:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_207dac149:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_207dab214:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_207dab3ac:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _201a02108_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _201a0278a_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	;
	_2019ede5c_decimalSlice _1376_digs = _2019ede5c_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_201a0cc18_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*_8910_flt.alloc)));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_207db1527:;
				{
					_8758_prec=_201a02e83_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_207db2539:;
				{
					_8758_prec=_201a02e83_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_207db25a0:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_207db1747:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_207db453b:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_207db4607:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_207db4096:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_207db41a6:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_201a0b95e_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_201a0be04_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _201a002d2_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	return _201a009a8_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _201a002d2_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _2019ed313_floatInfo* _18824_flt) {
	_201a119ec_decimal _1896_d = _201a119ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_201a11dd7_assign(&_1896_d, _1882_mant);
	_201a12190_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_2019ede5c_decimalSlice _1926_digs = _2019ede5c_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_201a00dc6_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_2019ede5c_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_207dba4ba:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_207dbb2bd:;
				{
					_18733_prec=_201a02e83_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_207dbb334:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_207dbb136:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_207dba1e0:;
				{
					_201a129a9_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_207dba256:;
				{
					_201a129a9_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_207dba2bc:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_201a129a9_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_207dbc81e:;
		};
		_1926_digs=_2019ede5c_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _201a009a8_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _201a009a8_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _2019ede5c_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_207dc09a9:;
			{
				return _201a0146a_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_207dc0a20:;
			{
				return _201a01954_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_207dc0a86:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _201a0146a_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _201a01954_fmtF(_22418_dst, _22447_neg, _2252_digs, _201a02e83_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_207dc08ee:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _201a00dc6_roundShortest(_201a119ec_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _2019ed313_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_201a119ec_decimal _2926_upper = _201a119ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_201a11dd7_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_201a12190_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_201a119ec_decimal _3116_lower = _201a119ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_201a11dd7_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_201a12190_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_207dcbbb3;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_207dd1965:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_207dd1a0e:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_207dd1a75:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_207dd1888:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_207dd4429:;
					{
						_201a129a9_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_207dd44c3:;
					{
						_201a12448_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_207dd4539:;
					{
						_201a12701_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_207dd1adb:;
			};
		}
	_iter_next_207dcbbb3:;
	}
	_iter_end_207dcbbb3:;;
}



inline jule::Slice<jule::U8> _201a0146a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _2019ede5c_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _201a02b0e_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_207dd841c:;
		}
		_iter_end_207dd841c:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_207ddab06:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_207ddacb0:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_207dda573:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _4306_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_207dda41e:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _201a01954_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _2019ede5c_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _201a02b0e_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_207dde8c9:;
		}
		_iter_end_207dde8c9:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_207de0bd8:;
		}
		_iter_end_207de0bd8:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _201a02108_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _2019ed313_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _201a16bde_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _201a16bde_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _201a0278a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _2019ed313_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_207de5a01:;
	}
	_iter_end_207de5a01:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_207deae24:;
		}
		_iter_end_207deae24:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_207dec992:;
		}
		_iter_end_207dec992:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _201a03b21_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_207de9d24:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_207e00445:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_207deea82:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_207dee8ea:;
	};
	return _51113_dst;;
}



inline jule::I32 _201a02b0e_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _201a02e83_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _201a03b21_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__201415ed4_ConvError _201a04094_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__201415ed4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_207e05bcb:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_207e05b10:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_201a03b21_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_207e0767d:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_201a03b21_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_207e0776b:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_201a03b21_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_207e0732b:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_207e072b5:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_207e071d8:;
					};
				};
			}
		}
		else {
			_case_begin_207e0502c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_207e055b0:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=32LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_207e0b693:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_207e0b374:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_207e068d0:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_207e0b30d:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_207e0b3da:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_207e06d97:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_207e0c7d7:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207e0d783:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_207e0ead6:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _201a03b21_lower(_1099_c)) && (_201a03b21_lower(_1099_c) <= 'z'))) {
						_case_begin_207e0ea1a:;
						{
							_1107_d=(jule::U8)((jule::U8)(_201a03b21_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_207e0e60d:;
						{
							goto _iter_next_207e0d783;
						}
					}
					else {
						_case_begin_207e0e597:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_207e0e520:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_207e0d783:;
			++it;
			goto _iter_begin_207e0d783;
		}
		_iter_end_207e0d783:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _201a044c3_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__201415ed4_ConvError __jule_assign_result = _201a04094_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _201a04979_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__201415ed4_ConvError __jule_assign_result = _201a04094_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type142)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=32LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = static_cast<jule::U32>((_17240_bitSize - 1LL)); ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _201a05617_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_2019b298c_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1ee9d719a_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U32 __jule_y = static_cast<jule::U32>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(_4122_man, _201a063e8_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(_4122_man, _201a063e8_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_6315_xLo=_6817_mergedLo;
		_636_xHi=_687_mergedHi;
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _2019b298c_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _201a05a02_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_2019b2382_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1ee9d719a_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U32 __jule_y = static_cast<jule::U32>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(_11022_man, _201a063e8_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(_11022_man, _201a063e8_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_13816_x_lo=_14318_merged_lo;
		_1386_x_hi=_1437_merged_hi;
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _2019b2382_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _201a07729_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_207e33874:;
	}
	_iter_end_207e33874:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _201a07a37_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_207e3725c:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_207e372d4;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_207e372d4:;
			{
				jule::I32 _887_caseN = _201a07729_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _2019baa3e_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_207e3734a:;
			{
				if ((_201a07729_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _2019ba467_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_207e371b3:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _201a07d01_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_207e3c55e:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_207e3c95a:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_207e3c4e8:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_201a03b21_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_207e4290a:;
					{
						goto _iter_next_207e41d8d;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_207e429a4:;
					{
						if (_1326_sawdot) {
							goto _julec_label_207e46007;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_207e41d8d;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_207e42a1a:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_207e41d8d;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_207e41d8d;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _201a03b21_lower(_1383_c))) && (_201a03b21_lower(_1383_c) <= 'f'))) {
					_case_begin_207e42a81:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_201a03b21_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_207e41d8d;
					}
				}
				_match_end_207e4281c:;
			};
			goto _iter_end_207e41d8d;
		}
	_iter_next_207e41d8d:;
	}
	_iter_end_207e41d8d:;;
	_julec_label_207e46007:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_201a03b21_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_207e49c75;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_207e49c75:;
		}
		_iter_end_207e49c75:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _201a0984c_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U32 __jule_y = _2019ed9c8_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_207e52ca0:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_207e52d16:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_201a08c14_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _201a08c14_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_207e52d7c:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _201a08c14_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_207e52bb2:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _201a09c7b_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U32 __jule_y = _2019ed6cb_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_207e57018:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_207e5707e:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_201a09044_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _201a09044_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_207e570e5:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _201a09044_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_207e56e2a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__201415ed4_ConvError _201a0a320_atofHex(_2019ed313_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__201415ed4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((static_cast<jule::I32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_207e5a8bd:;
	}
	_iter_end_207e5a8bd:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_207e5cb9a:;
	}
	_iter_end_207e5cb9a:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_207e5d074:;
	}
	_iter_end_207e5d074:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_2019ed313_floatInfo_eq(&(*(_55613_flt)), _2019ed6cb_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2019b2382_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _2019b298c_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__201415ed4_ConvError _201a0a6e9_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__201415ed4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a07a37_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a07d01_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__201415ed4_ConvError __jule_assign_result = _201a0a320_atofHex(&(_2019ed6cb_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _201a09c7b_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _201a05a02_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _201a05a02_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_201a119ec_decimal _6676_d = _201a119ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_201a084b6_set(&_6676_d, _1ee78ae1b_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _201a08807_floatBits(&_6676_d, &(_2019ed6cb_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_2019b2382_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError _201a0a93b_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a07a37_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a07d01_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__201415ed4_ConvError __jule_assign_result = _201a0a320_atofHex(&(_2019ed9c8_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _201a0984c_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _201a05617_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _201a05617_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_201a119ec_decimal _7246_d = _201a119ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_201a084b6_set(&_7246_d, _1ee78ae1b_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _201a08807_floatBits(&_7246_d, &(_2019ed9c8_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_2019b298c_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError _201a0acb0_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__201415ed4_ConvError __jule_assign_result = _201a0a6e9_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_201a0a93b_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _201a0b134_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__201415ed4_ConvError __jule_assign_result = _201a0acb0_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _201a0b95e_ryuFtoaFixed32(_2019ede5c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		(*(_4924_d))._field_dp=0LL;
		(*(_4924_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1ee9de768_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U32 __jule_y = static_cast<jule::U32>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I32>(_632_b) - 25LL);
	};
	jule::I32 _742_q = (((-(_201a0ce9e_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0e896_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _201a10149_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _942_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U32 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_201a0c740_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _201a0be04_ryuFtoaFixed64(_2019ede5c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		(*(_12124_d))._field_dp=0LL;
		(*(_12124_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1ee9dea32_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U32 __jule_y = static_cast<jule::U32>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I32>(_1322_b) - 55LL);
	};
	jule::I32 _1462_q = (((-(_201a0ce9e_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0ecc5_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _201a10149_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _1662_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U32 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_201a0c740_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _201a0c740_formatDecimal(_2019ede5c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _201a0c245_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_207e93164:;
	}
	_iter_end_207e93164:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_207e96332:;
	}
	_iter_end_207e96332:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_207e9bd1b:;
	}
	_iter_end_207e9bd1b:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _201a0cc18_ryuFtoaShortest(_2019ede5c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _2019ed313_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		(*(_26125_d))._field_dp=0LL;
		(*(_26125_d))._field_nd=0LL;
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1ee9d8c90_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U32 __jule_y = static_cast<jule::U32>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_201a0dce6_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _201a0d697_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_201a0dce6_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_201a0ce9e_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_2019ed313_floatInfo_eq(&(*(_26168_flt)), _2019ed6cb_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0e896_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0e896_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0e896_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0ecc5_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0ecc5_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _201a0ecc5_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		_2886_du0=false;
		_2876_dc0=false;
		_2866_dl0=false;
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_201a10149_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_201a10149_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_201a10149_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _3252_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_201a0dce6_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _201a0ce9e_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _201a0d268_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _201a0d697_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _2019ed313_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _201a0dce6_ryuDigits(_2019ede5c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _201a10413_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _201a10413_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _201a10413_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_201a0e467_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_201a0e467_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_207ebeb0d:;
		}
		_iter_end_207ebeb0d:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_201a0e467_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_207ec0746:;
	}
	_iter_end_207ec0746:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_207ec2506:;
	}
	_iter_end_207ec2506:;;
}



inline void _201a0e467_ryuDigits32(_2019ede5c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_207ec4d99;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			_4556_upper=_4723_u;
			_45458_central=_4717_c;
			_45442_lower=_4703_l;
		}
	_iter_next_207ec4d99:;
	}
	_iter_end_207ec4d99:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_207ecae7c:;
	}
	_iter_end_207ecae7c:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _201a0e896_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _201a063e8_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_201a0d268_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _201a0ecc5_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _201a063e8_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_201a0d268_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e07be_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _201a10149_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_207ed9056:;
	}
	_iter_end_207ed9056:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _201a10413_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _6072_hi;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee9e20c8_Mul64((_60214_x >> 1LLU), 9903520314283042200LLU);
		_6072_hi = __jule_assign_result.__jule_result_arg0;
	});
	jule::U64 _6082_q = (_6072_hi >> 28LLU);;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(_6082_q);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((jule::U64)(_60214_x - (jule::U64)(_6082_q * 1000000000LL)));
	return __jule_func_result;;
}



inline void _201a1334a_trim(_201a119ec_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_207edc851:;
	}
	_iter_end_207edc851:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _201a13636_rightShift(_201a119ec_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_207ee06cd:;
				}
				_iter_end_207ee06cd:;;
				goto _iter_end_207ede0e4;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_207ede0e4:;
	}
	_iter_end_207ede0e4:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _28432_k; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_207ee1aca:;
	}
	_iter_end_207ee1aca:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_207ee3e73:;
	}
	_iter_end_207ee3e73:;;
	(*(_28420_a))._field_nd=_2866_w;
	_201a1334a_trim(_28420_a);
}



inline jule::Bool _201a13adc_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_207ee6bac:;
	}
	_iter_end_207ee6bac:;;
	return false;;
}



inline void _201a13d95_leftShift(_201a119ec_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _201a11414_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_201a13adc_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_201a11414_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U32 __jule_x = (jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U32 __jule_y = _35231_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_207eea1cc:;
	}
	_iter_end_207eea1cc:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_207eec60d:;
	}
	_iter_end_207eec60d:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_201a1334a_trim(_35219_a);
}



inline jule::Bool _201a14219_shouldRoundUp(_201a119ec_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _201a158e1_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _201a163b4_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _201a16bde_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _201a15ca9_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _201a163b4_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _201a16bde_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _201a16073_Itoa(jule::I32 _819_i) {
	return _201a15ca9_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _201a163b4_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1ee78b46b_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _201a1664a_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _201a16bde_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_208033721:;
			{
				{
					while ((_10533_u >= 1000000000LL)) {
						{
							jule::U64 _1325_q = (_10533_u / 1000000000LL);;
							jule::U32 _1339_us = static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1325_q * 1000000000LL)));;
							jule::I32 _1349_j = 4LL;;
							for (; (_1349_j > 0LL); (_1349_j)--) {
								{
									jule::U32 _1366_is = (jule::U32)(({ jule::U32 __jule_x = _1339_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
									_1339_us=(_1339_us / 100LLU);
									_1126_i-=2LL;
									_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1366_is + 1LLU)));
									_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1366_is));
								}
							_iter_next_20803634a:;
							}
							_iter_end_20803634a:;;
							(_1126_i)--;
							_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(_1339_us << 1LLU) + 1LLU)));
							_10533_u=_1325_q;
						}
					_iter_next_208035910:;
					}
					_iter_end_208035910:;;
				};
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = (jule::U32)(({ jule::U32 __jule_x = _1547_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_208035701:;
				}
				_iter_end_208035701:;;
				jule::U32 _1643_is = (jule::U32)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_201a1664a_isPowerOfTwo(_10541_base)) {
			_case_begin_208033b3e:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1ee9d80e1_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U32 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_20803d2a8:;
				}
				_iter_end_20803d2a8:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_208032ba4:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_20803391e:;
				}
				_iter_end_20803391e:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_208032e90:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1ee78b46b_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _201a18a26_Throw(jule::Str _910_msg) {
	jule::println(_206beddb0_toStr(_910_msg));
	_1eeccb02c_Exit(1LL);
}



inline jule::Bool _204a14953_IsUnaryOp(jule::U32 _33314_id) {
	{
		auto expr = &(_2049614c6_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20809be82:;
		if (it != expr_end) {
			jule::U32 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_20809be82:;
			++it;
			goto _iter_begin_20809be82;
		}
		_iter_end_20809be82:;
	};
	return false;;
}



inline jule::Bool _204a14c61_IsBinOp(jule::U32 _34312_id) {
	{
		auto expr = &(_2049617a1_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20809cc41:;
		if (it != expr_end) {
			jule::U32 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_20809cc41:;
			++it;
			goto _iter_begin_20809cc41;
		}
		_iter_end_20809cc41:;
	};
	return false;;
}



inline jule::Bool _204a1536b_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _204a15602_IsRawStr(_36310_k)));;
}



inline jule::Bool _204a15602_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _204a158bb_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _204a162a1_IsFloat(jule::Str _37912_k) {
	if (_200e33c22_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _200e390ce_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _200e390ce_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _204a1656a_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _204a16aed_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _204a16db7_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _204a1744a_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_2049612b7_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080a5331:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_2080a5331:;
			++it;
			goto _iter_begin_2080a5331;
		}
		_iter_end_2080a5331:;
	};
	return false;;
}



inline jule::Bool _204a17945_IsLetter(jule::I32 _42813_r) {
	return _200dbabba_IsLetter(_42813_r);;
}



inline jule::Bool _204a17db8_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_204a1c4c7_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080a6156:;
		if (it != expr_end) {
			_204a1c0dc_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_2080a6156:;
			++it;
			goto _iter_begin_2080a6156;
		}
		_iter_end_2080a6156:;
	};
	return false;;
}



inline jule::Bool _204a18182_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _204a1844b_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _204a18715_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _204a189ce_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_2080a9324:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_2080a93bd:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_2080a9445:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2080a7d17:;
			{
				return false;;
			}
		}
		_match_end_2080a8b4d:;
	};
}



inline jule::Bool _204a18c98_IsAssign(jule::U32 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U32>(1LLU)) || (_48213_id == static_cast<jule::U32>(27LLU))) || (_48213_id == static_cast<jule::U32>(30LLU))) || (_48213_id == static_cast<jule::U32>(32LLU))) || (_48213_id == static_cast<jule::U32>(24LLU))) || (_48213_id == static_cast<jule::U32>(74LLU))) || (_48213_id == static_cast<jule::U32>(62LLU))) || (_48213_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _204a19062_IsPostfixOp(jule::U32 _49416_id) {
	{
		auto expr = &(_204a0d6e9_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080ac679:;
		if (it != expr_end) {
			jule::U32 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_2080ac679:;
			++it;
			goto _iter_begin_2080ac679;
		}
		_iter_end_2080ac679:;
	};
	return false;;
}



inline jule::Bool _204a1932b_IsAssignOp(jule::U32 _50415_id) {
	if (_204a19062_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_204a0d9d5_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080ad67a:;
		if (it != expr_end) {
			jule::U32 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_2080ad67a:;
			++it;
			goto _iter_begin_2080ad67a;
		}
		_iter_end_2080ad67a:;
	};
	return false;;
}



inline _1eeaca425_Log _204a1cd46_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_204a19cbb_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1eeaca887_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _204a1d20e_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080b8cb2:;
		if (it != expr_end) {
			jule::I32 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_2080b8cb2:;
			++it;
			_1156_i++;
			goto _iter_begin_2080b8cb2;
		}
		_iter_end_2080b8cb2:;
	};
	return true;;
}



inline jule::Str _204a1d583_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_204a18182_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_2080bc0c3;
			};
		}
	_iter_next_2080bc0c3:;
	}
	_iter_end_2080bc0c3:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _204a1d94b_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i) {
	return _204a1d583_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _204a1dcc0_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_2080be23a:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _204a18182_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_2080bec30:;
					{
						goto _iter_next_2080bd767;
					}
				}
				else if (_204a20651_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_2080becc9:;
					{
						return _204a1d94b_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_2080beba8:;
					{
						goto _iter_end_2080bd767;
					}
				}
				_match_end_2080beb42:;
			};
		}
	_iter_next_2080bd767:;
	}
	_iter_end_2080bd767:;;
	return jule::Str();;
}



inline jule::Str _204a1e144_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i) {
	_18236_i+=2LL;
	return _204a1d583_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _204a1e4b8_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i) {
	(_18735_i)++;
	return _204a1d583_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _204a1e94c_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1ee78b46b_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1ee78b46b_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _204a1d583_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_204a18182_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_2080c297a;
			};
		}
	_iter_next_2080c297a:;
	}
	_iter_end_2080c297a:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _204a1eb8e_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2186_i = 0LL;;
	_julec_label_2080c4c02:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_2080c596c:;
					{
						__jule_func_result = _204a1e94c_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_2080c5a16:;
					{
						goto _iter_next_2080c4d45;
					}
				}
				else if (_204a202cc_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_2080c5a7c:;
					{
						__jule_func_result = _204a1d583_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_204a18182_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_2080c5ae3:;
					{
						goto _iter_end_2080c4d45;
					}
				}
				_match_end_2080c5890:;
			};
		}
	_iter_next_2080c4d45:;
	}
	_iter_end_2080c4d45:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _204a1ee58_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_204a1d20e_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_204a1844b_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_2080c8420;
			};
		}
	_iter_next_2080c8420:;
	}
	_iter_end_2080c8420:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _204a202cc_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _204a20651_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _204a209c5_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_2080cb05a:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _204a18182_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_2080cc0c2:;
					{
						goto _iter_next_2080cae06;
					}
				}
				else if (_204a20651_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_2080cc16b:;
					{
						return true;;
					}
				}
				else {
					_case_begin_2080cc04a:;
					{
						goto _iter_end_2080cae06;
					}
				}
				_match_end_2080cbed4:;
			};
		}
	_iter_next_2080cae06:;
	}
	_iter_end_2080cae06:;;
	return false;;
}



inline jule::Bool _204a20d49_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_2080cd205:;
			{
				goto _case_begin_2080cb81e;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_2080cb81e:;
			{
				goto _case_begin_2080cd28d;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_2080cd28d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2080cb775:;
			{
				return true;;
			}
		}
		_match_end_2080cb698:;
	};
}



inline jule::Bool _204a211bd_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_2080ced2d:;
			{
				goto _case_begin_2080ced94;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_2080ced94:;
			{
				goto _case_begin_2080cee0a;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_2080cee0a:;
			{
				goto _case_begin_2080cee82;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_2080cee82:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2080cec62:;
			{
				return true;;
			}
		}
		_match_end_2080ce811:;
	};
}



inline jule::Str _204a216b8_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I32 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _204a1e94c_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_204a202cc_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _204a1d583_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_204a18715_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_2080d43d7;
			};
		}
	_iter_next_2080d43d7:;
	}
	_iter_end_2080d43d7:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _204a21894_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3706_i = 2LL;;
	_julec_label_2080d809a:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_204a20d49_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_2080d8c16:;
					{
						__jule_func_result = _204a1e4b8_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_204a211bd_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_2080d8cb0:;
					{
						__jule_func_result = _204a1e144_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_204a20651_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_2080d8d26:;
					{
						__jule_func_result = _204a1d94b_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_204a209c5_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_2080d8d8c:;
					{
						__jule_func_result = _204a1dcc0_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_204a189ce_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_2080d8e03:;
					{
						goto _iter_end_2080d8144;
					}
				}
				_match_end_2080d8b28:;
			};
		}
	_iter_next_2080d8144:;
	}
	_iter_end_2080d8144:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _204a21be6_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_204a189ce_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_2080da795:;
	}
	_iter_end_2080da795:;;
	__jule_func_result=_1ee78b46b_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _204a21eb0_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _204a21be6_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _204a22279_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _204a21be6_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _204a22543_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _204a21be6_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _204a2280c_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_204a18715_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_204a18715_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_204a18715_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1ee78b46b_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1eeaca425_Log> _204a27801_Lex(jule::Ptr<_204a19cbb_Fileset> _80712_f, jule::I32 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_204a2307c_lex _8126_lex = _204a2307c_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_204a14216_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1eeaca425_Log>(nullptr)};;
	_204a25dc6_newLine(&_8126_lex);
	_204a23ba4_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _204b0da5d_lshiftUnsig(_204a9d338_Const* _58821_c, _204a9d338_Const* _58832_x) {
	jule::U64 _5892_l = _204b074a2_AsU64(_58821_c);;
	jule::U64 _5902_r = _204b074a2_AsU64(_58832_x);;
	_204b07c99_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _204b0dd8d_rshiftUnsig(_204a9d338_Const* _59421_c, _204a9d338_Const* _59432_x) {
	jule::U64 _5952_l = _204b074a2_AsU64(_59421_c);;
	jule::U64 _5962_r = _204b074a2_AsU64(_59432_x);;
	_204b07c99_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _204b98961_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_2081d7364:;
			{
				return _204b97e7c_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_2081dac91:;
			{
				return _204b98235_SysUint;;
			}
		}
		else {
			_case_begin_2081d7d6a:;
			{
				return _4515_kind;;
			}
		}
		_match_end_2081daec2:;
	};
}



inline jule::I32 _204b98c2a_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_2081dbc5e:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_2081dc1c1:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_2081dc237:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_2081dbcc5:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_2081dbd3b:;
			{
				return _204b97c18_BitSize;;
			}
		}
		else {
			_case_begin_2081dc0d3:;
			{
				return -1LL;;
			}
		}
		_match_end_2081dbba4:;
	};
}



inline jule::Str _204b9906b_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_2081e01b3:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_2081deeb5:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_2081e002b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_2081e0229:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_2081dedc7:;
			{
				return jule::Str();;
			}
		}
		_match_end_2081de9a9:;
	};
}



inline jule::Str _204b99302_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_2081e1978:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_2081e19de:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_2081e1a55:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_2081e1abb:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_2081e02a1:;
			{
				return jule::Str();;
			}
		}
		_match_end_2081e158d:;
	};
}



inline jule::Str _204b995bb_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_2081e3491:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_2081e3260:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_2081e059d:;
			{
				return jule::Str();;
			}
		}
		_match_end_2081e2d53:;
	};
}



inline jule::Bool _204b9a1c1_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _201a0b134_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _204b9a48a_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_2081e83ca:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_2081e772b:;
			{
				return 64LLU;;
			}
		}
		_match_end_2081e7660:;
	};
}



inline jule::I32 _204b9a754_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_2081e9123:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_2081e8672:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_2081e86d8:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_2081e85ea:;
			{
				return 64LLU;;
			}
		}
		_match_end_2081e8c16:;
	};
}



inline jule::I32 _204b9aa1d_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_2081eabc4:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_2081e9db0:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_2081e9e26:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_2081e9d49:;
			{
				return 64LLU;;
			}
		}
		_match_end_2081ea29a:;
	};
}



inline void _204b9abb6_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _200e483c9_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_2081eb5ed:;
				{
					_204b97c18_BitSize=64LLU;
					_204b97e7c_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_204b98235_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_2081ebc2a:;
				{
					_204b97c18_BitSize=32LLU;
					_204b97e7c_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_204b98235_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_2081ebb3c:;
		};
	};
}



inline void _204b9ad3c_init(void) {
	_204b9abb6_UpdateTarget();
}



inline jule::I64 _204b9e901_MinI(jule::Str _6113_k) {
	_6113_k=_204b98961_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_2081ee1a0:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_2081ee4ad:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_2081ee524:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_2081ee58a:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_2081eb059:;
			{
				return 0LL;;
			}
		}
		_match_end_2081eb125:;
	};
}



inline jule::I64 _204b9ec0e_MaxI(jule::Str _7913_k) {
	_7913_k=_204b98961_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_208200aca:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_208200e3d:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_208200eb5:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_20820103c:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_208200536:;
			{
				return 0LL;;
			}
		}
		_match_end_2082004c0:;
	};
}



inline jule::U64 _204b9eec8_MaxU(jule::Str _9713_k) {
	_9713_k=_204b98961_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_20820255a:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_2082028bd:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_208202945:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_2082029bc:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_208201eb6:;
			{
				return 0LLU;;
			}
		}
		_match_end_208201e50:;
	};
}



inline jule::F64 _204ba0319_Min(jule::Str _11512_k) {
	_11512_k=_204b98961_RealKindOf(_11512_k);
	jule::I64 _1172_i = _204b9e901_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_208205096:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_2082044e6:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_20820475a:;
			{
				return 0LL;;
			}
		}
		_match_end_208204480:;
	};
}



inline jule::F64 _204ba05a0_Max(jule::Str _13312_k) {
	_13312_k=_204b98961_RealKindOf(_13312_k);
	jule::I64 _1352_i = _204b9ec0e_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _204b9eec8_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_2082075a4:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_20820697c:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_208206c68:;
			{
				return 0LL;;
			}
		}
		_match_end_208206916:;
	};
}



inline jule::Bool _204ba16c2_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _204ba19d0_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _204ba1c99_IsInt(jule::Str _4610_k) {
	return (_204ba16c2_IsSigInt(_4610_k) || _204ba19d0_IsUnsigInt(_4610_k));;
}



inline jule::Bool _204ba20da_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _204ba2371_IsNum(jule::Str _5610_k) {
	return (_204ba1c99_IsInt(_5610_k) || _204ba20da_IsFloat(_5610_k));;
}



inline jule::Bool _204ba263a_IsSigNum(jule::Str _6113_k) {
	return (_204ba16c2_IsSigInt(_6113_k) || _204ba20da_IsFloat(_6113_k));;
}



inline jule::Bool _204c2a84a_FindModuleFile(jule::Slice<_1eec71478_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20820d456:;
		if (it != expr_end) {
			_1eec71478_Dir *_159_d = it;
			{
				if (((!(_1eecbacb9_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_20820d456:;
			++it;
			goto _iter_begin_20820d456;
		}
		_iter_end_20820d456:;
	};
	return false;;
}



inline jule::Str _204c2ab25_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_1eec71478_Dir> _287_dirents = ({
				auto except = static__200e411c4_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_20820d423;
				} jule::Slice<_1eec71478_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _204c2a84a_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I32 _373_n = _2627_path.len();;
			_2627_path=_200e40aa8_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_20820d423;
			};
		}
	_iter_next_20820d423:;
	}
	_iter_end_20820d423:;;
	return jule::Str();;
}



inline jule::Slice<_1eeaca425_Log> _204c2adde_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__1eecb936c_Read(_200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1eeaca425_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _200e3b576_Trim(_1ee78b1a2_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1eeaca425_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _204c2b681_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _200e3269e_IsUpper(_142_r);;
}



inline jule::Bool _204c896de_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _204c71176_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_204c8c060_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _204c8b614_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _204c8b955_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20821a562:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_20821a562;
				};
			}
			_iter_next_20821a562:;
			++it;
			goto _iter_begin_20821a562;
		}
		_iter_end_20821a562:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_204c8c406_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1ee8867ca_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_20821b6c8:;
	}
	_iter_end_20821b6c8:;;
	return _1ee78b46b_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _204c8bbdb_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_20821ea61:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_20822026a:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2082202d1:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_208220347:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_2082203ad:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_208220435:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_2082204ac:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_208220534:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_2082205ab:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_208220633:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_2082200d3:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _204c8c060_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _204c8bbdb_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_208225281:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _201a044c3_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_20822558e:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _201a044c3_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_208225616:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _201a044c3_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_208223ca7:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _201a044c3_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_208223922:;
	};
}



inline void _204c8c406_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _204c8c060_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1ee8867ca_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _204d52752_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I32 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_20822cbc3:;
	}
	_iter_end_20822cbc3:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _204d592e7_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _292_start = (*(_2824_i));;
	jule::I32 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I32 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee8853de_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_20822ecc4:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_2082308eb:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_208230753:;
			};
		}
	_iter_next_20822e8d9:;
	}
	_iter_end_20822e8d9:;;
	return nullptr;;
}



inline void _204d595d3_FmtByDefault(_1eeabb290_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1eeabc26e_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type143) {
			_case_begin_20822eba3:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _2019ee4e0_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type143)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_208232777:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _2019ee4e0_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_2082327dd:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a15ca9_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_208232854:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a15ca9_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2082328ba:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a15ca9_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_208231ee6:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a15ca9_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_20823206d:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a158e1_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type141)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_2082320e5:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a158e1_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type147) {
			_case_begin_208232b2e:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a158e1_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type147)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_208232b95:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _201a158e1_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_208232c0b:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_208232c72:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1eeabc26e_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1eeabc26e_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_208231952:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_4822_buf, _206bebbd2_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_2082318db:;
	};
}



inline void _204d59a01_applyFmtByDefault(_1eeabb290_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_204d595d3_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _204d59e1e_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1eeabb290_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_204d59a01_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1eeabc26e_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1eeabbe2d_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _204d5a293_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1ee78ae1b_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1216_i = _204d52752_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1256_j = 0LL;;
	jule::I32 _1266_last = 0LL;;
	_1eeabb290_Builder _1276_buf = static__1eeabbadc_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_204d52752_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1eeabbe2d_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _204d592e7_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_20823ec6d;
			};
			_204d59e1e_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1eeabbe2d_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_20823ec6d;
			};
			_1266_last=_1216_i;
		}
	_iter_next_20823ec6d:;
	}
	_iter_end_20823ec6d:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1eeabbe2d_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1eeabd5a0_Buf(&_1276_buf);;
}



inline jule::Str _204d5c43d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1ee78b46b_StrFromBytes(_204d5a293_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_204b1d5a6_Fn> _2046da3c6_runtimeFindFn(jule::Ptr<_204c12139_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_204b1d5a6_Fn> _126_f = _204c13745_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_204a4a46c_Struct> _2046da926_runtimeFindStruct(jule::Ptr<_204c12139_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_204a4a46c_Struct> _256_f = _204c13349_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _204b23941_parameterUsesGenerics(jule::Ptr<_204b2050e_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _39546_generics) {
	if (_204b1c231_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _204d06b35_kindUsesGenerics(&((*((*(_39531_p))))._field_Type), _39546_generics);;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc73c9_buildAsComptimeMethodData(jule::Ptr<_204b21664_FnIns>* _203035_f) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204c12139_ImportInfo> _204bc75d8_findComptimePackage(jule::Ptr<_204c2e486_sema>* _203829_s) {
	return _204c2e95e_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_204c12139_ImportInfo>>((void*)__jule_anon208554329, nullptr, nullptr));;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc795c_buildComptimeTypeInfoData(jule::Ptr<_204c2e486_sema>* _204435_s, jule::Ptr<_204cda982_Type>* _204450_t) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204c2dd04_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204bc7c9d_buildComptimeValue(jule::Ptr<_204ca2b7a_Data>* _205228_d) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bb97ea_comptimeValue>(_204bb97ea_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Str _204bcaac5_toStrConstraints(jule::Ptr<_204cd909b_InsGeneric> _14321_g) {
	_1eeabb290_Builder _1446_sb = static__1eeabbadc_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20874773c:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_204cda982_Type> *_1459_c = it;
			{
				({
					auto except = _1eeabc26e_WriteStr(&_1446_sb, _204cdad7d_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1eeabc26e_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_20874773c:;
			++it;
			_1456_i++;
			goto _iter_begin_20874773c;
		}
		_iter_end_20874773c:;
	};
	return _1eeabcaee_Str(&_1446_sb);;
}



inline jule::Bool _204bcae8d_matchConstraint(jule::Str* _15421_c, jule::Ptr<_204cda982_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_2087495b8:;
			{
				jule::Ptr<_204ce3a9a_Prim> _1573_prim = _204cdd138_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _204ba263a_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_20874962e:;
			{
				jule::Ptr<_204ce3a9a_Prim> _1633_prim = _204cdd138_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _204ba19d0_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_2087496a6:;
			{
				jule::Ptr<_204ce3a9a_Prim> _1693_prim = _204cdd138_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _204ba20da_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_20874972d:;
			{
				jule::Ptr<_204ce3a9a_Prim> _1753_prim = _204cdd138_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _204ba2371_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_20874991a:;
			{
				return _204cdc368_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_208749981:;
			{
				return (!(_204cdc368_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_2087499e7:;
			{
				return _204cdc0d2_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_208749a5d:;
			{
				return _204cdc5ee_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_208747d9c:;
			{
				return false;;
			}
		}
		_match_end_208748012:;
	};
}



inline jule::Bool _204bcb257_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_204bc8e8b_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20875057a:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_20875057a:;
			++it;
			goto _iter_begin_20875057a;
		}
		_iter_end_20875057a:;
	};
	return false;;
}



inline jule::Ptr<_204bd8929_scopeChecker> _204bcdb3e_newScopeCheckerBase(jule::Ptr<_204c2e486_sema>* _3229_s, jule::Ptr<_204b21664_FnIns> _3243_owner) {
	return jule::new_ptr<_204bd8929_scopeChecker>(_204bd8929_scopeChecker{._field_calledFrom=jule::Ptr<_204a14216_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_204bd8929_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_204b248a9_SymTab>(_204b248a9_SymTab{._field_File=jule::Ptr<_204a19cbb_Fileset>(nullptr), ._field_Passes=jule::Slice<_204c01612_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_204c12139_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_204a4a46c_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_204b1d5a6_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_204b28cba_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_204b2b471_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_204b2cb7b_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_204bcbac6_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_tree=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_result=jule::Ptr<_204bd7939_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_204c5319c_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_204bd7560_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_204bd4392_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_204bd8929_scopeChecker> _204bce007_newScopeChecker(jule::Ptr<_204c2e486_sema>* _4025_s, jule::Ptr<_204b21664_FnIns> _4039_owner) {
	jule::Ptr<_204bd8929_scopeChecker> _416_base = _204bcdb3e_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_204bd7560_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_204bd4392_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_204bd7560_scopeLabel> _204bce37b_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_204bd8929_scopeChecker> _5037_scope) {
	jule::Ptr<_204bd7560_scopeLabel> _516_label = _204bdcce6_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*(_5037_scope))._field_parent;
			_516_label=_204bdcce6_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_20876aee1:;
	}
	_iter_end_20876aee1:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_204ca2b7a_Data>> _204bce6bc_getDatasFromTupleData(jule::Ptr<_204ca2b7a_Data>* _6231_d) {
	if ((_204cdee5e_Tup((*((*(_6231_d))))._field_Type.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_20876dc91:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_204b169bc_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_20876cd39:;
				{
					jule::Ptr<_204ce8b8d_Tuple> _688_t = _204cdee5e_Tup((*((*(_6231_d))))._field_Type);;
					jule::Slice<jule::Ptr<_204ca2b7a_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204ca2b7a_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20876e643:;
						if (it != expr_end) {
							jule::Ptr<_204cda982_Type> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_204ca2b7a_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})); };
							}
							_iter_next_20876e643:;
							++it;
							goto _iter_begin_20876e643;
						}
						_iter_end_20876e643:;
					};
					return _698_r;;
				}
			}
			_match_end_20876ccc3:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_204ca2b7a_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _204bcee3c_checkMut(jule::Ptr<_204c2e486_sema>* _9718_s, jule::Ptr<_204ca2b7a_Data>* _9729_left, jule::Ptr<_204ca2b7a_Data> _9746_right, jule::Ptr<_204a14216_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_208778c9b:;
			{
				_204c3238a_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _204cdc368_Mutable((*_9746_right.alloc)._field_Type.ptr()))) {
			_case_begin_2087791a8:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_204cde6ab_Struct((*(_9746_right))._field_Type) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_204c3238a_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_9746_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_208778c24:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_208778b47:;
	};
}



inline jule::Bool _204bd0426_checkAssign(jule::Ptr<_204c2e486_sema>* _11621_s, jule::Ptr<_204ca2b7a_Data>* _11636_left, jule::Ptr<_204ca2b7a_Data> _11653_right, jule::Ptr<_204a14216_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_204b21664_FnIns> _1172_f = _204cde425_Fn((*((*(_11636_left))))._field_Type.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_204c3238a_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_204ca35b5_IsConst((*(_11636_left)).ptr())) {
			_case_begin_20877e93e:;
			{
				_204c3238a_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_204c326ed_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_20877e9d8:;
			{
				_204c3238a_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_204bcee3c_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_20877ea60:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_20877e8c8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_20877e774:;
	};
}



inline jule::Bool _204bd0800_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_20877467b:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_204a385ae_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2087820c3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_208781e91:;
			{
				return false;;
			}
		}
		_match_end_208781e2a:;
	};
}



inline jule::Bool _204bd0a42_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41 || _match_expr.type == &__jule_any_type44) {
			_case_begin_208782139:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_2087871c7:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_204ca2b7a_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type31) {
						_case_begin_2087943b0:;
						{
							return true;;
						}
					}
					else {
						_case_begin_2087939a8:;
						{
							return false;;
						}
					}
					_match_end_208793942:;
				};
			}
		}
		else {
			_case_begin_208786d86:;
			{
				return false;;
			}
		}
		_match_end_2087875a1:;
	};
}



inline jule::U32 _204beb178_removeEqFromOp(jule::U32 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_208794c40:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_208797193:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_208797209:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_208795081:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_2087950e7:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_20879515d:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_2087951c4:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_20879878d:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_208798804:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_20879886a:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_208788629:;
			{
				return _216719_op;;
			}
		}
		_match_end_208796d0d:;
	};
}



inline void _204beb3a9_makeComptimeRange(jule::Ptr<_204ca2b7a_Data>* _219627_d) {
	{
		
		if ((_204ce047b_comptimeStructFields((*((*(_219627_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_20879c31e:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce047b_comptimeStructFields((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else if ((_204ce0998_comptimeEnumFields((*((*(_219627_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_20879c231:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce0998_comptimeEnumFields((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else if ((_204ce1768_comptimeTypeInfos((*((*(_219627_d))))._field_Type) != nullptr)) {
			_case_begin_20879c297:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce1768_comptimeTypeInfos((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else if ((_204ce0eb5_comptimeParams((*((*(_219627_d))))._field_Type) != nullptr)) {
			_case_begin_20879997b:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce0eb5_comptimeParams((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else if ((_204ce1c85_comptimeStatics((*((*(_219627_d))))._field_Type) != nullptr)) {
			_case_begin_2087999e2:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce1c85_comptimeStatics((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else if ((_204ce2cdb_comptimeFiles((*((*(_219627_d))))._field_Type) != nullptr)) {
			_case_begin_208799a58:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce2cdb_comptimeFiles((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else if ((_204ce27be_comptimeDecls((*((*(_219627_d))))._field_Type) != nullptr)) {
			_case_begin_20879c7d6:;
			{
				(*((*(_219627_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ba37e5_comptimeRange>(_204ba37e5_comptimeRange{._field_kind=jule::Trait(_204ce27be_comptimeDecls((*((*(_219627_d))))._field_Type.ptr()), (jule::Trait::Type*)&_204ba35c5_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_20879987c:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_20879bde0:;
	};
}



inline jule::Bool _204beb673_canComptimeMatch(jule::Ptr<_204ca2b7a_Data>* _221926_d) {
	if ((!(_204ca123e_isGoodValueToInfer(_221926_d)))) {
		return false;;
	};
	return (_204ca35b5_IsConst((*(_221926_d)).ptr()) || (_204ce19ee_comptimeTypeInfo((*((*(_221926_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _204beb93c_stmtIsDef(jule::Any* _222715_stmt) {
	{
		auto &_match_expr{ (*(_222715_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2087a667a:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_2087a8c65:;
			{
				jule::Ptr<_204bd52a5_MultiAssign> _22323_ma = (*(_222715_stmt)).cast_ptr<_204bd52a5_MultiAssign>(&__jule_any_type44);;
				return ((*(_22323_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_2087a8825:;
			{
				return false;;
			}
		}
		_match_end_2087a878c:;
	};
}



inline jule::I32 _204bebcb1_countMatchType(jule::Ptr<_204bd59e2_Match>* _223920_m, jule::Ptr<_204cda982_Type>* _223932_t) {
	jule::I32 _22406_n = 0LL;;
	_julec_label_2087aa3c6:;
	{
		auto expr = &((*((*(_223920_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2087aa805:;
		if (it != expr_end) {
			jule::Ptr<_204bd651a_Case> *_22429_c = it;
			{
				if (((*(_22429_c)) == nullptr)) {
					goto _iter_next_2087aa805;
				};
				{
					auto expr = &((*((*(_22429_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2087ab680:;
					if (it != expr_end) {
						jule::Ptr<_204ca2b7a_Data> *_224610_expr = it;
						{
							if (((*(_224610_expr)) == nullptr)) {
								goto _iter_end_2087aa805;
							};
							if (_204cdb1be_Equal((*(_223932_t)), (*((*(_224610_expr))))._field_Model.cast_ptr<_204cda982_Type>(&__jule_any_type87))) {
								(_22406_n)++;
							};
						}
						_iter_next_2087ab680:;
						++it;
						goto _iter_begin_2087ab680;
					}
					_iter_end_2087ab680:;
				};
			}
			_iter_next_2087aa805:;
			++it;
			goto _iter_begin_2087aa805;
		}
		_iter_end_2087aa805:;
	};
	return _22406_n;;
}



inline jule::Ptr<_204ce3193_TypeSym> _204c01975_buildType(jule::Ptr<_204a29b11_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr)});;
}



inline jule::Ptr<_204ca3d02_Value> _204c01c83_buildExpr(jule::Ptr<_204a2de45_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_204ca2b7a_Data>(nullptr)});;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204c0204c_buildTypeAlias(jule::Ptr<_204a4170a_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_204cd9b90_TypeAlias>(_204cd9b90_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_204c01975_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_204a47579_Field> _204c0238d_buildField(jule::Ptr<_204a44d29_FieldDecl> _9819_decl) {
	return jule::new_ptr<_204a47579_Field>(_204a47579_Field{._field_Owner=jule::Ptr<_204a4a46c_Struct>(nullptr), ._field_Token=(*(_9819_decl))._field_Token, ._field_Public=(*_9819_decl.alloc)._field_Public, ._field_Mutable=(*_9819_decl.alloc)._field_Mutable, ._field_Ident=(*_9819_decl.alloc)._field_Ident, ._field_TypeSym=_204c01975_buildType((*_9819_decl.alloc)._field_Kind), ._field_Default=(*_9819_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_204a47579_Field>> _204c02624_buildFields(jule::Slice<jule::Ptr<_204a44d29_FieldDecl>>* _10921_decls) {
	jule::Slice<jule::Ptr<_204a47579_Field>> _1106_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204a47579_Field>>::alloc(0LL, (*(_10921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a47579_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a270e3:;
		if (it != expr_end) {
			jule::Ptr<_204a44d29_FieldDecl> _11114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_204a47579_Field>> &__jule_push_dest = _1106_fields; __jule_push_dest.push(_204c0238d_buildField(_11114_decl)); };
			}
			_iter_next_208a270e3:;
			++it;
			goto _iter_begin_208a270e3;
		}
		_iter_end_208a270e3:;
	};
	return _1106_fields;;
}



inline jule::Ptr<_204a4a46c_Struct> _204c028dd_buildStruct(jule::Ptr<_204a45720_StructDecl> _11720_decl) {
	return jule::new_ptr<_204a4a46c_Struct>(_204a4a46c_Struct{._field_sema=jule::Ptr<_204c2e486_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_204a4a46c_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_204a4a46c_Struct>>(nullptr), ._field_Token=(*(_11720_decl))._field_Token, ._field_Ident=(*_11720_decl.alloc)._field_Ident, ._field_Fields=_204c02624_buildFields(&((*_11720_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_204b1d5a6_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr), ._field_Public=(*_11720_decl.alloc)._field_Public, ._field_Binded=(*_11720_decl.alloc)._field_Binded, ._field_Directives=(*_11720_decl.alloc)._field_Directives, ._field_Generics=(*_11720_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_204b28cba_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_204a4d2c7_StructIns>>(nullptr)});;
}



inline jule::Ptr<_204b1bad2_Param> _204c02ba7_buildParam(jule::Ptr<_204a3a44b_ParamDecl> _12919_decl) {
	return jule::new_ptr<_204b1bad2_Param>(_204b1bad2_Param{._field_Token=(*(_12919_decl))._field_Token, ._field_Mutable=(*_12919_decl.alloc)._field_Mutable, ._field_Variadic=(*_12919_decl.alloc)._field_Variadic, ._field_Reference=(*_12919_decl.alloc)._field_Reference, ._field_TypeSym=_204c01975_buildType((*_12919_decl.alloc)._field_Kind), ._field_Ident=(*_12919_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_204b1bad2_Param>> _204c03081_buildParams(jule::Slice<jule::Ptr<_204a3a44b_ParamDecl>>* _14021_decls) {
	jule::Slice<jule::Ptr<_204b1bad2_Param>> _1416_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1bad2_Param>>::alloc(0LL, (*(_14021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b1bad2_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a2b119:;
		if (it != expr_end) {
			jule::Ptr<_204a3a44b_ParamDecl> _14214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_204b1bad2_Param>> &__jule_push_dest = _1416_params; __jule_push_dest.push(_204c02ba7_buildParam(_14214_decl)); };
			}
			_iter_next_208a2b119:;
			++it;
			goto _iter_begin_208a2b119;
		}
		_iter_end_208a2b119:;
	};
	return _1416_params;;
}



inline jule::Ptr<_204b1b51b_RetType> _204c032c3_buildRetType(jule::Ptr<_204a2ca04_RetTypeDecl> _14821_decl) {
	if ((((*(_14821_decl))._field_Idents == nullptr) && ((*_14821_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_204b1b51b_RetType>(_204b1b51b_RetType{._field_TypeSym=_204c01975_buildType((*(_14821_decl))._field_Kind), ._field_Idents=(*_14821_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_204b1d5a6_Fn> _204c0358c_buildFunc(jule::Ptr<_204a3b89d_FnDecl> _15818_decl) {
	return jule::new_ptr<_204b1d5a6_Fn>(_204b1d5a6_Fn{._field_sema=jule::Ptr<_204c2e486_sema>(nullptr), ._field_Token=(*(_15818_decl))._field_Token, ._field_Global=(*_15818_decl.alloc)._field_Global, ._field_Unsafety=(*_15818_decl.alloc)._field_Unsafety, ._field_Public=(*_15818_decl.alloc)._field_Public, ._field_Binded=(*_15818_decl.alloc)._field_Binded, ._field_Statically=(*_15818_decl.alloc)._field_Statically, ._field_Exceptional=(*_15818_decl.alloc)._field_Exceptional, ._field_Ident=(*_15818_decl.alloc)._field_Ident, ._field_Directives=(*_15818_decl.alloc)._field_Directives, ._field_Scope=(*_15818_decl.alloc)._field_Scope, ._field_Generics=(*_15818_decl.alloc)._field_Generics, ._field_Result=_204c032c3_buildRetType((*_15818_decl.alloc)._field_Result), ._field_Params=_204c03081_buildParams(&((*_15818_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_204a4a46c_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_204b21664_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _204c03856_buildMethods(jule::Slice<jule::Ptr<_204a3b89d_FnDecl>>* _17622_decls) {
	jule::Slice<jule::Ptr<_204b1d5a6_Fn>> _1776_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1d5a6_Fn>>::alloc(0LL, (*(_17622_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b1d5a6_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17622_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a31196:;
		if (it != expr_end) {
			jule::Ptr<_204a3b89d_FnDecl> _17814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_204b1d5a6_Fn>> &__jule_push_dest = _1776_methods; __jule_push_dest.push(_204c0358c_buildFunc(_17814_decl)); };
			}
			_iter_next_208a31196:;
			++it;
			goto _iter_begin_208a31196;
		}
		_iter_end_208a31196:;
	};
	return _1776_methods;;
}



inline jule::Slice<jule::Ptr<_204ce3193_TypeSym>> _204c03b20_buildTraitInherits(jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>* _18428_inherits) {
	jule::Slice<jule::Ptr<_204ce3193_TypeSym>> _1856_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204ce3193_TypeSym>>::alloc(0LL, (*(_18428_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204ce3193_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18428_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a322da:;
		if (it != expr_end) {
			jule::Ptr<_204a29b11_TypeDecl> _18614_it = *it;
			{
				{ jule::Slice<jule::Ptr<_204ce3193_TypeSym>> &__jule_push_dest = _1856_symbols; __jule_push_dest.push(_204c01975_buildType(_18614_it)); };
			}
			_iter_next_208a322da:;
			++it;
			goto _iter_begin_208a322da;
		}
		_iter_end_208a322da:;
	};
	return _1856_symbols;;
}



inline jule::Ptr<_204b28cba_Trait> _204c03dd9_buildTrait(jule::Ptr<_204a45e5c_TraitDecl> _19219_decl) {
	return jule::new_ptr<_204b28cba_Trait>(_204b28cba_Trait{._field_Token=(*(_19219_decl))._field_Token, ._field_Ident=(*_19219_decl.alloc)._field_Ident, ._field_Public=(*_19219_decl.alloc)._field_Public, ._field_Inherits=_204c03b20_buildTraitInherits(&((*_19219_decl.alloc)._field_Inherits)), ._field_Methods=_204c03856_buildMethods(&((*_19219_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_204a4a46c_Struct>>(nullptr)});;
}



inline jule::Ptr<_204b2a915_EnumItem> _204c041a3_buildEnumItem(jule::Ptr<_204a43014_EnumItemDecl> _20222_decl) {
	return jule::new_ptr<_204b2a915_EnumItem>(_204b2a915_EnumItem{._field_Token=(*(_20222_decl))._field_Token, ._field_Ident=(*_20222_decl.alloc)._field_Ident, ._field_Value=_204c01c83_buildExpr((*_20222_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _204c0446c_buildEnumItems(jule::Slice<jule::Ptr<_204a43014_EnumItemDecl>>* _21024_decls) {
	jule::Slice<jule::Ptr<_204b2a915_EnumItem>> _2116_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204b2a915_EnumItem>>::alloc(0LL, (*(_21024_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b2a915_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21024_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a35552:;
		if (it != expr_end) {
			jule::Ptr<_204a43014_EnumItemDecl> _21214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_204b2a915_EnumItem>> &__jule_push_dest = _2116_items; __jule_push_dest.push(_204c041a3_buildEnumItem(_21214_decl)); };
			}
			_iter_next_208a35552:;
			++it;
			goto _iter_begin_208a35552;
		}
		_iter_end_208a35552:;
	};
	return _2116_items;;
}



inline jule::Ptr<_204b2b471_Enum> _204c04967_buildEnum(jule::Ptr<_204a43ac5_EnumDecl> _21818_decl) {
	return jule::new_ptr<_204b2b471_Enum>(_204b2b471_Enum{._field_Token=(*(_21818_decl))._field_Token, ._field_Public=(*_21818_decl.alloc)._field_Public, ._field_Ident=(*_21818_decl.alloc)._field_Ident, ._field_TypeSym=_204c01975_buildType((*_21818_decl.alloc)._field_Kind), ._field_Items=_204c0446c_buildEnumItems(&((*_21818_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_204b2c5a4_TypeEnumItem> _204c04b43_buildTypeEnumItem(jule::Ptr<_204a44400_TypeEnumItemDecl> _22826_decl) {
	return jule::new_ptr<_204b2c5a4_TypeEnumItem>(_204b2c5a4_TypeEnumItem{._field_Token=(*(_22826_decl))._field_Token, ._field_Ident=(*_22826_decl.alloc)._field_Ident, ._field_TypeSym=_204c01975_buildType((*_22826_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> _204c04dda_buildTypeEnumItems(jule::Slice<jule::Ptr<_204a44400_TypeEnumItemDecl>>* _23628_decls) {
	jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> _2376_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>>::alloc(0LL, (*(_23628_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b2c5a4_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23628_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a387b9:;
		if (it != expr_end) {
			jule::Ptr<_204a44400_TypeEnumItemDecl> _23814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_204b2c5a4_TypeEnumItem>> &__jule_push_dest = _2376_items; __jule_push_dest.push(_204c04b43_buildTypeEnumItem(_23814_decl)); };
			}
			_iter_next_208a387b9:;
			++it;
			goto _iter_begin_208a387b9;
		}
		_iter_end_208a387b9:;
	};
	return _2376_items;;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204c051a4_buildTypeEnum(jule::Ptr<_204a44a60_TypeEnumDecl> _24422_decl) {
	return jule::new_ptr<_204b2cb7b_TypeEnum>(_204b2cb7b_TypeEnum{._field_Token=(*(_24422_decl))._field_Token, ._field_Public=(*_24422_decl.alloc)._field_Public, ._field_Ident=(*_24422_decl.alloc)._field_Ident, ._field_Items=_204c04dda_buildTypeEnumItems(&((*_24422_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_204c5319c_Var> _204c0546d_buildVar(jule::Ptr<_204a3ca58_VarDecl> _25317_decl) {
	return jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Token=(*(_25317_decl))._field_Token, ._field_Ident=(*_25317_decl.alloc)._field_Ident, ._field_Binded=(*_25317_decl.alloc)._field_Binded, ._field_Constant=(*_25317_decl.alloc)._field_Constant, ._field_Mutable=(*_25317_decl.alloc)._field_Mutable, ._field_Public=(*_25317_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25317_decl.alloc)._field_Statically, ._field_Reference=(*_25317_decl.alloc)._field_Reference, ._field_TypeSym=_204c01975_buildType((*_25317_decl.alloc)._field_Kind), ._field_Value=_204c01c83_buildExpr((*_25317_decl.alloc)._field_Expr), ._field_Refers=static__204c00424_new(), ._field_Directives=(*_25317_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_204c5319c_Var>> _204c05737_buildVars(jule::Slice<jule::Ptr<_204a3ca58_VarDecl>> _27018_decls) {
	jule::Slice<jule::Ptr<_204c5319c_Var>> _2716_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204c5319c_Var>>::alloc(0LL, _27018_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204c5319c_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27018_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208a3d0d7:;
		if (it != expr_end) {
			jule::Ptr<_204a3ca58_VarDecl> _27214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_204c5319c_Var>> &__jule_push_dest = _2716_vars; __jule_push_dest.push(_204c0546d_buildVar(_27214_decl)); };
			}
			_iter_next_208a3d0d7:;
			++it;
			goto _iter_begin_208a3d0d7;
		}
		_iter_end_208a3d0d7:;
	};
	return _2716_vars;;
}



inline jule::Ptr<_204bcbac6_Impl> _204c05a01_buildImpl(jule::Ptr<_204a465bc_Impl> _27818_decl) {
	return jule::new_ptr<_204bcbac6_Impl>(_204bcbac6_Impl{._field_Base=(*(_27818_decl))._field_Base, ._field_Dest=(*_27818_decl.alloc)._field_Dest, ._field_Methods=_204c03856_buildMethods(&((*_27818_decl.alloc)._field_Methods)), ._field_Statics=_204c05737_buildVars((*_27818_decl.alloc)._field_Statics)});;
}



inline jule::Bool _204c0c321_isImplicitImport(jule::Ptr<_204c12139_ImportInfo> _79121_imp) {
	return ((*((*(_79121_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_204b248a9_SymTab> _204c0e477_findVarFileInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _4430_files, jule::Ptr<_204c5319c_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208abd7e9:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _4514_f = *it;
			{
				if ((_204b26e50_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_208abd7e9:;
			++it;
			goto _iter_begin_208abd7e9;
		}
		_iter_end_208abd7e9:;
	};
	return nullptr;;
}



inline jule::Ptr<_204c5319c_Var> _204c0e8ea_findVarInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208abeab4:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _5614_f = *it;
			{
				jule::Ptr<_204c5319c_Var> _577_v = _204b252c2_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_208abeab4:;
			++it;
			goto _iter_begin_208abeab4;
		}
		_iter_end_208abeab4:;
	};
	return nullptr;;
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204c0ed29_findTypeAliasInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ac0114:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _6814_f = *it;
			{
				jule::Ptr<_204cd9b90_TypeAlias> _697_ta = _204b256bd_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_208ac0114:;
			++it;
			goto _iter_begin_208ac0114;
		}
		_iter_end_208ac0114:;
	};
	return nullptr;;
}



inline jule::Ptr<_204a4a46c_Struct> _204c102d0_findStructInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ac1643:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _8014_f = *it;
			{
				jule::Ptr<_204a4a46c_Struct> _817_s = _204b25ab9_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_208ac1643:;
			++it;
			goto _iter_begin_208ac1643;
		}
		_iter_end_208ac1643:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b1d5a6_Fn> _204c106cb_findFnInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ac2b72:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _9214_file = *it;
			{
				jule::Ptr<_204b1d5a6_Fn> _937_f = _204b25eb5_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_208ac2b72:;
			++it;
			goto _iter_begin_208ac2b72;
		}
		_iter_end_208ac2b72:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b28cba_Trait> _204c10a50_findTraitInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ac51d5:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _10414_f = *it;
			{
				jule::Ptr<_204b28cba_Trait> _1057_t = _204b26306_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_208ac51d5:;
			++it;
			goto _iter_begin_208ac51d5;
		}
		_iter_end_208ac51d5:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b2b471_Enum> _204c10dc4_findEnumInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ac52d4:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _11614_f = *it;
			{
				jule::Ptr<_204b2b471_Enum> _1177_e = _204b26647_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_208ac52d4:;
			++it;
			goto _iter_begin_208ac52d4;
		}
		_iter_end_208ac52d4:;
	};
	return nullptr;;
}



inline jule::Ptr<_204b2cb7b_TypeEnum> _204c11358_findTypeEnumInPackage(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ac6637:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _12814_f = *it;
			{
				jule::Ptr<_204b2cb7b_TypeEnum> _1297_e = _204b26988_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_208ac6637:;
			++it;
			goto _iter_begin_208ac6637;
		}
		_iter_end_208ac6637:;
	};
	return nullptr;;
}



inline jule::Bool _204c16d86_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _200e33c22_HasPrefix((*(_33318_f)), _200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _200e47560_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _204c2bd46_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_208ad61e6:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_208ad625c:;
			{
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _207_model = (*(_1528_m)).cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_207_model))._field_Field != nullptr) && _204c2bd46_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_208ad62c3:;
			{
				jule::Ptr<_204b117a8_UnaryExprModel> _237_unary = (*(_1528_m)).cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_204cdd655_Ptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_204cdd3be_Sptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _204c2bd46_isValidModelForRef(&((*((*(_237_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_208ad6339:;
			{
				jule::Ptr<_204b13c3e_IndexingExprModel> _377_indexing = (*(_1528_m)).cast_ptr<_204b13c3e_IndexingExprModel>(&__jule_any_type43);;
				if ((_204cdde08_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _204c2bd46_isValidModelForRef(&((*((*(_377_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_208ad5cd9:;
			{
				return false;;
			}
		}
		_match_end_208ad58bb:;
	};
}



inline _1eeaca425_Log _204c2c374_compilerErr(jule::Ptr<_204a14216_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_1eeaca425_Log _506_log = _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_1eeaca887_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_204a1b2a6_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _204c2c660_appendRetVars(jule::Slice<jule::Ptr<_204c5319c_Var>>* _6323_dest, jule::Ptr<_204b21664_FnIns>* _6342_f) {
	if ((_204b1da5c_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_204cda982_Type>> _686_types = _204b22896_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_6342_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208ae65e1:;
		if (it != expr_end) {
			jule::I32 _697_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _6914_ident = *it;
			{
				if ((_204a16aed_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _204a16db7_IsAnonIdent((*(_6914_ident))._field_Kind))) {
					goto _iter_next_208ae65e1;
				};
				{ jule::Slice<jule::Ptr<_204c5319c_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*(_6914_ident))._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)})); };
			}
			_iter_next_208ae65e1:;
			++it;
			_697_i++;
			goto _iter_begin_208ae65e1;
		}
		_iter_end_208ae65e1:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _204c2c990_appendParamVars(jule::Slice<jule::Ptr<_204c5319c_Var>>* _9325_dest, jule::Ptr<_204b21664_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208aeae31:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> _9814_p = *it;
			{
				if ((_204a16aed_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _204a16db7_IsAnonIdent((*((*(_9814_p))._field_Decl))._field_Ident))) {
					goto _iter_next_208aeae31;
				};
				jule::Ptr<_204c5319c_Var> _1037_v = jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*((*(_9814_p))._field_Decl))._field_Reference, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_204cda982_Type>(nullptr)}), ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
				{
					
					if (_204b1c231_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_208aeed9c:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_204b1c4b7_IsRef((*(_9814_p))._field_Decl)));
							if (_204b1c4b7_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_204ce75c6_Sptr>(_204ce75c6_Sptr{._field_Elem=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_208aeea7d:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce8099_Slc>(_204ce8099_Slc{._field_Elem=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=(*((*_9814_p.alloc)._field_Type))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9814_p))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_208aeea17:;
						{
							(*(*(_1037_v))._field_TypeSym.alloc)._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_208aee8d5:;
				};
				{ jule::Slice<jule::Ptr<_204c5319c_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_208aeae31:;
			++it;
			goto _iter_begin_208aeae31;
		}
		_iter_end_208aeae31:;
	};
}



inline void _204c2cc7b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>* _15334_dest, jule::Ptr<_204b21664_FnIns>* _15359_f) {
	jule::I32 _1546_size = (*((*(_15359_f))))._field_Generics.len();;
	if (((*((*((*(_15359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1546_size+=(*(*((*((*(_15359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1546_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b0837d:;
		if (it != expr_end) {
			jule::I32 _1637_i = it - expr->begin();
			jule::Ptr<_204cd909b_InsGeneric> _16314_g = *it;
			{
				if ((_16314_g == nullptr)) {
					goto _iter_next_208b0837d;
				};
				jule::Ptr<_204a36d1b_GenericDecl> _1677_decl = (*((*((*(_15359_f))))._field_Decl))._field_Generics[_1637_i];;
				{ jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_204cd9b90_TypeAlias>(_204cd9b90_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1677_decl.alloc)._field_Token, ._field_Ident=(*(_1677_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_16314_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr)})); };
			}
			_iter_next_208b0837d:;
			++it;
			_1637_i++;
			goto _iter_begin_208b0837d;
		}
		_iter_end_208b0837d:;
	};
	if (((*((*((*(_15359_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_204a4d2c7_StructIns> _1797_owner = (*((*(_15359_f))))._field_Owner;;
		{
			auto expr = &((*(_1797_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208b09c20:;
			if (it != expr_end) {
				jule::I32 _1808_i = it - expr->begin();
				jule::Ptr<_204cd909b_InsGeneric> _18015_g = *it;
				{
					jule::Ptr<_204a36d1b_GenericDecl> _1818_decl = (*((*(_1797_owner))._field_Decl))._field_Generics[_1808_i];;
					{ jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_204cd9b90_TypeAlias>(_204cd9b90_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1818_decl.alloc)._field_Token, ._field_Ident=(*(_1818_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_18015_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr)})); };
				}
				_iter_next_208b09c20:;
				++it;
				_1808_i++;
				goto _iter_begin_208b09c20;
			}
			_iter_end_208b09c20:;
		};
	};
}



inline jule::Ptr<_204b248a9_SymTab> _204c2d100_findFile(jule::Slice<jule::Ptr<_204b248a9_SymTab>>* _19418_files, jule::Ptr<_204a19cbb_Fileset>* _19437_handler) {
	{
		auto expr = _19418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b0dce0:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _19514_fl = *it;
			{
				if (((*(_19514_fl))._field_File == (*(_19437_handler)))) {
					return _19514_fl;;
				};
			}
			_iter_next_208b0dce0:;
			++it;
			goto _iter_begin_208b0dce0;
		}
		_iter_end_208b0dce0:;
	};
	return nullptr;;
}



inline void _204c2d496_pushSuggestion(_1eeaca425_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args) {
	(*(_20330_log))._field_Suggestion=_1eeaca887_Logf(_20348_fmt, _20368_args);
}



inline void _204c51101_pushImplemented(jule::Ptr<_204b28cba_Trait> _279824_t, jule::Ptr<_204a4a46c_Struct>* _279840_d) {
	_julec_label_208b0d8b1:;
	{
		
		if (((*(_279824_t))._field_Implemented.len() > 0LL)) {
			_case_begin_208b11a18:;
			{
				{
					auto expr = &((*_279824_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208b12486:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> _280210_s = *it;
						{
							if ((_280210_s == (*(_279840_d)))) {
								goto _match_end_208b10e9b;
							};
						}
						_iter_next_208b12486:;
						++it;
						goto _iter_begin_208b12486;
					}
					_iter_end_208b12486:;
				};
				goto _case_begin_208b11056;
			}
		}
		else {
			_case_begin_208b11056:;
			{
				(*(_279824_t))._field_Implemented=jule::append((*_279824_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_204a4a46c_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_279840_d)); __jule_collection; }));
			}
		}
		_match_end_208b10e9b:;
	};
	{
		auto expr = &((*(_279824_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b1284e:;
		if (it != expr_end) {
			jule::Ptr<_204ce3193_TypeSym> _281114_i = *it;
			{
				_204c51101_pushImplemented(_204cde942_Trait((*(_281114_i))._field_Type.ptr()), _279840_d);
			}
			_iter_next_208b1284e:;
			++it;
			goto _iter_begin_208b1284e;
		}
		_iter_end_208b1284e:;
	};
}



inline void _204c513dc_pushImplements(jule::Ptr<_204a4a46c_Struct>* _281624_s, jule::Ptr<_204b28cba_Trait> _281640_t) {
	_julec_label_208b1140d:;
	{
		
		if (((*((*(_281624_s))))._field_Implements.len() > 0LL)) {
			_case_begin_208b145a9:;
			{
				{
					auto expr = &((*((*(_281624_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208b15027:;
					if (it != expr_end) {
						jule::Ptr<_204b28cba_Trait> _282010_b = *it;
						{
							if ((_282010_b == _281640_t)) {
								goto _match_end_208b13a4d;
							};
						}
						_iter_next_208b15027:;
						++it;
						goto _iter_begin_208b15027;
					}
					_iter_end_208b15027:;
				};
				goto _case_begin_208b13ae7;
			}
		}
		else {
			_case_begin_208b13ae7:;
			{
				{ jule::Slice<jule::Ptr<_204b28cba_Trait>> &__jule_push_dest = (*((*(_281624_s))))._field_Implements; __jule_push_dest.push(_281640_t); };
			}
		}
		_match_end_208b13a4d:;
	};
	{
		auto expr = &((*(_281640_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b153e0:;
		if (it != expr_end) {
			jule::Ptr<_204ce3193_TypeSym> _282914_i = *it;
			{
				_204c513dc_pushImplements(_281624_s, _204cde942_Trait((*(_282914_i))._field_Type.ptr()));
			}
			_iter_next_208b153e0:;
			++it;
			goto _iter_begin_208b153e0;
		}
		_iter_end_208b153e0:;
	};
}



inline void _204c5183d_pushRuntimeToStr(jule::Ptr<_204c2e486_sema>* _283426_s, jule::Ptr<_204cda982_Type>* _283441_t, jule::Ptr<_204a14216_Token>* _283456_token, jule::Ptr<_204c000b1_ReferenceStack> _28356_refers) {
	if ((((*((*((*(_283426_s))))._field_meta))._field_runtime == nullptr) || _204cdbab5_IsNil((*(_283441_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_204b21664_FnIns> _28396_f = _204b1eab3_instanceForce(_2046da3c6_runtimeFindFn(&((*((*((*(_283426_s))))._field_meta))._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28396_f))._field_Generics=jule::append((*_28396_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_204cd909b_InsGeneric>(_204cd909b_InsGeneric{._field_Type=(*(_283441_t)), ._field_Constraint=jule::Slice<jule::Ptr<_204cda982_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28412_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _204c49ddb_checkGenericFn((*(_283426_s)), &(_28396_f), _283456_token);
		_28412_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28412_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2843:3"));;
	};
	if ((_28356_refers != nullptr)) {
		_204c00e19_Push(_28356_refers, jule::Any(_28396_f, &__jule_any_type65));
	};
}



inline jule::Bool _204c51b07_isValidImpAlias(jule::Str _285224_alias) {
	jule::Bool __jule_func_result = false;
	if (_204a16aed_IsIgnoreIdent(_285224_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_204a17db8_IsKeyword(_285224_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28596_r;
	jule::I32 _285913_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_285224_alias);
		_28596_r = __jule_assign_result.__jule_result_arg0;
		_285913_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28596_r != '_') && (!(_204a17945_IsLetter(_28596_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285224_alias).mut_slice(_285913_size);;
			if ((_285224_alias.len() == 0LL)) {
				goto _iter_end_208b1cbde;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ee885730_DecodeRuneStr(_285224_alias);
				_28596_r = __jule_assign_result.__jule_result_arg0;
				_285913_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28596_r != '_') && (!((('0' <= _28596_r) && (_28596_r <= '9'))))) && (!(_204a17945_IsLetter(_28596_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_208b1cbde:;
	}
	_iter_end_208b1cbde:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _204c8ca55_traitHasReferenceReceiver(jule::Ptr<_204b28cba_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d8497d:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_208d8497d;
				};
				jule::Ptr<_204b1bad2_Param> _233_p = (*((*(_179_f))))._field_Params[0LL];;
				if ((_204b1c4b7_IsRef(_233_p.ptr()) && _204b1c231_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_208d8497d:;
			++it;
			goto _iter_begin_208d8497d;
		}
		_iter_end_208d8497d:;
	};
	return false;;
}



inline jule::Bool _204c8ce1d_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_204ca2b7a_Data>* _3133_d) {
	jule::Str _322_value = _2019ee4e0_FmtFloat(_204b07738_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _204b9a1c1_CheckBitFloat(_322_value, _204b98c2a_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _204c8d292_sigAssignable(jule::Str _3618_kind, jule::Ptr<_204ca2b7a_Data>* _3630_d) {
	jule::F64 _372_min = _204ba0319_Min(_3618_kind);;
	jule::F64 _382_max = _204ba05a0_Max(_3618_kind);;
	{
		
		if (_204b09581_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_208d88520:;
			{
				jule::F64 _413_x = _204b06e85_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2019c50ed_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_204b08ccd_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_208d88586:;
			{
				jule::F64 _483_x = _204b07738_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_204b08a47_IsI64((*((*(_3630_d))))._field_Constant)) {
			_case_begin_208d885ec:;
			{
				jule::F64 _533_x = _204b07738_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_208d883ee:;
	};
	return false;;
}



inline jule::Bool _204c8d65a_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_204ca2b7a_Data>* _5932_d) {
	jule::F64 _602_max = _204ba05a0_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _204c896de_IsAscii(static_cast<jule::I32>(_204b0644b_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_204b09581_IsF64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_208d8e27e:;
			{
				jule::F64 _673_x = _204b06e85_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2019c50ed_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_204b08ccd_IsU64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_208d8e2e5:;
			{
				jule::F64 _773_x = _204b07738_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_204b08a47_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_208d8e35b:;
			{
				jule::F64 _823_x = _204b07738_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_208d8d811:;
	};
	return false;;
}



inline jule::Bool _204c8d9ce_intAssignable(jule::Str _8818_kind, jule::Ptr<_204ca2b7a_Data>* _8830_d) {
	{
		
		if (_204ba16c2_IsSigInt(_8818_kind)) {
			_case_begin_208d93dbb:;
			{
				return _204c8d292_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_204ba19d0_IsUnsigInt(_8818_kind)) {
			_case_begin_208d93e54:;
			{
				return _204c8d65a_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_208d938e3:;
			{
				return false;;
			}
		}
		_match_end_208d93816:;
	};
}



inline void _204c99ec4_checkMutRiskOfStructLit(jule::Ptr<_204c2e486_sema>* _91333_s, jule::Ptr<_204b1217c_StructLitExprModel>* _91344_m) {
	{
		auto expr = &((*((*(_91344_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208d95032:;
		if (it != expr_end) {
			jule::Ptr<_204b11cd6_StructArgExprModel> *_9149_arg = it;
			{
				if ((*((*((*((*(_9149_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_208d95032;
				};
				if (((!((*((*((*(_9149_arg))))._field_Expr))._field_Mutable)) && _204cdc368_Mutable((*(*((*(_9149_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_204c3238a_pushErr((*(_91333_s)).ptr(), (*(*(_9149_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*((*(_9149_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_208d95032:;
			++it;
			goto _iter_begin_208d95032;
		}
		_iter_end_208d95032:;
	};
}



inline jule::Ptr<_204cda982_Type> _204ca0ddc_lenKind(void) {
	return _204d5ea28_primInt;;
}



inline jule::Bool _204ca123e_isGoodValueToInfer(jule::Ptr<_204ca2b7a_Data>* _141824_d) {
	return (!(_204ca3098_IsNil((*(_141824_d)).ptr())));;
}



inline jule::Ptr<_204a2902d_Directive> _204cd2209_findDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _436623_directives, jule::Str _436654_d) {
	{
		auto expr = _436623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208eda276:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _436714_dr = *it;
			{
				if (((*((*(_436714_dr))._field_Tag))._field_Kind == _436654_d)) {
					return _436714_dr;;
				};
			}
			_iter_next_208eda276:;
			++it;
			goto _iter_begin_208eda276;
		}
		_iter_end_208eda276:;
	};
	return nullptr;;
}



inline jule::Any _204cd25c2_findBuiltinsImport(jule::Str* _437524_ident, jule::Ptr<_204c12139_ImportInfo> _437536_imp) {
	return _204d62d6c_findPackageBuiltinDef(&((*(_437536_imp))._field_LinkPath), _437524_ident);;
}



inline void _204cd2803_fitBitsize(jule::Ptr<_204ca2b7a_Data>* _438420_d) {
	jule::Ptr<_204ce3a9a_Prim> _43856_prim = _204cdd138_Prim((*((*(_438420_d))))._field_Type.ptr());;
	jule::I32 _43862_z = _204b98c2a_BitSizeOf(_204ce3e1e_Str(_43856_prim.ptr()));;
	{
		
		if (_204b08a47_IsI64((*((*(_438420_d))))._field_Constant.ptr())) {
			_case_begin_208edc9c6:;
			{
				jule::I32 _43893_k = _204b9a754_BitSizeOfInt(_204b0644b_ReadI64((*((*(_438420_d))))._field_Constant));;
				if (((_43893_k > _43862_z) || _204ba19d0_IsUnsigInt((*_43856_prim.alloc)._field_Kind))) {
					(*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind=_204b9906b_IntFromBits(_43893_k);
					(*((*(_438420_d))))._field_Type=(*((*(_204d61d7c_findBuiltinTypeAlias((*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_204b08ccd_IsU64((*((*(_438420_d))))._field_Constant.ptr())) {
			_case_begin_208edca3c:;
			{
				jule::I32 _43953_k = _204b9aa1d_BitSizeOfUint(_204b066d2_ReadU64((*((*(_438420_d))))._field_Constant));;
				if (((_43953_k > _43862_z) || _204ba16c2_IsSigInt((*_43856_prim.alloc)._field_Kind))) {
					(*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind=_204b99302_UintFromBits(_43953_k);
					(*((*(_438420_d))))._field_Type=(*((*(_204d61d7c_findBuiltinTypeAlias((*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_204b09581_IsF64((*((*(_438420_d))))._field_Constant)) {
			_case_begin_208edcab4:;
			{
				if ((_43862_z == 64LLU)) {
					return;;
				};
				jule::I32 _44053_k = _204b9a48a_BitSizeOfFloat(_204b06e85_ReadF64((*((*(_438420_d))))._field_Constant));;
				if ((_44053_k > _43862_z)) {
					(*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind=_204b995bb_FloatFromBits(_44053_k);
					(*((*(_438420_d))))._field_Type=(*((*(_204d61d7c_findBuiltinTypeAlias((*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_208edc8a5:;
	};
}



inline void _204cd2b33_makeStructLitAlloc(jule::Ptr<_204ca2b7a_Data>* _441328_d, jule::Ptr<_204b1217c_StructLitExprModel>* _441343_lit) {
	(*((*(_441328_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce75c6_Sptr>(_204ce75c6_Sptr{._field_Elem=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_441343_lit))))._field_Strct, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)})}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)});
	(*((*(_441328_d))))._field_Model=jule::Any(jule::new_ptr<_204b12479_AllocStructLitExprModel>(_204b12479_AllocStructLitExprModel{._field_Lit=(*(_441343_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_204c5319c_Var> _204cd2ea7_buildErrorVar(jule::Ptr<_204bd11d5_Scope>* _442423_s, jule::Ptr<_204a32b6e_FnCallExpr>* _442439_fc) {
	return jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=(*(_442423_s)), ._field_Token=(*((*(_442439_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
}



inline jule::Any _204cd332b_findBuiltinsSema(jule::Str* _443922_ident, jule::Ptr<_204c2e486_sema> _443938_s) {
	jule::Str _44416_ppath = _204a1a948_Dir((*((*(_443938_s))._field_file))._field_File.ptr());;
	if (_200e33c22_HasPrefix(_44416_ppath, _200e47560_PathStdlib)) {
		(_44416_ppath).mut_slice(_200e47560_PathStdlib.len());;
		_44416_ppath=(jule::Str::lit("std", 3) + _200e39d6b_ReplaceAll(_44416_ppath, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		return _204d62d6c_findPackageBuiltinDef(&(_44416_ppath), _443922_ident);;
	};
	return nullptr;;
}



inline jule::Bool _204cd35e5_isOkForShifting(jule::Ptr<_204ca2b7a_Data>* _445425_d) {
	if (_204ca35b5_IsConst((*(_445425_d)).ptr())) {
		{
			
			if (_204b08a47_IsI64((*((*(_445425_d))))._field_Constant.ptr())) {
				_case_begin_208eed81c:;
				{
					return (_204b0644b_ReadI64((*((*(_445425_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_204b08ccd_IsU64((*((*(_445425_d))))._field_Constant.ptr())) {
				_case_begin_208eed8b6:;
				{
					return true;;
				}
			}
			else if (_204b09581_IsF64((*((*(_445425_d))))._field_Constant)) {
				_case_begin_208eed93d:;
				{
					return (_204b06e85_ReadF64((*((*(_445425_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_208eed784:;
				{
					return false;;
				}
			}
			_match_end_208eed6a7:;
		};
	};
	jule::Ptr<_204ce3a9a_Prim> _44672_prim = _204cdd138_Prim((*((*(_445425_d))))._field_Type.ptr());;
	return ((_44672_prim != nullptr) && _204ba1c99_IsInt(_204ce3e1e_Str(_44672_prim.ptr())));;
}



inline jule::Bool _204cd39be_isInstancedStruct(jule::Ptr<_204a4d2c7_StructIns> _447122_s) {
	return ((*((*(_447122_s))._field_Decl))._field_Generics.len() == (*_447122_s.alloc)._field_Generics.len());;
}



inline jule::Bool _204cd3cbb_isPtrArithmeticCompatible(jule::Ptr<_204ca2b7a_Data>* _447535_l, jule::Ptr<_204ca2b7a_Data>* _447550_r) {
	jule::Ptr<_204cead8d_Ptr> _44762_ptr = _204cdd655_Ptr((*((*(_447550_r))))._field_Type.ptr());;
	if ((_44762_ptr != nullptr)) {
		return _204cdb1be_Equal((*(_204cdd655_Ptr((*((*(_447535_l))))._field_Type)))._field_Elem, (*_44762_ptr.alloc)._field_Elem);;
	};
	if ((_204ca35b5_IsConst((*(_447550_r)).ptr()) && (*((*(_447550_r))))._field_untyped)) {
		return (_204c8d9ce_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _447550_r) || _204c8d9ce_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _447550_r));;
	};
	_204c8deb8_typeCompatibilityChecker _44856_tcc = _204c8deb8_typeCompatibilityChecker{._field_s=jule::Ptr<_204c2e486_sema>(nullptr), ._field_dest=_204d5ea28_primInt, ._field_src=(*((*(_447550_r))))._field_Type, ._field_errorToken=jule::Ptr<_204a14216_Token>(nullptr)};;
	if (_204c906b2_check(&_44856_tcc)) {
		return true;;
	};
	_44856_tcc._field_dest=_204d5e660_primUint;
	return _204c906b2_check(&_44856_tcc);;
}



inline void _204cd42c7_applyRuntimeToStr(jule::Ptr<_204c2e486_sema>* _449627_s, jule::Ptr<_204cda982_Type>* _449642_from, jule::Ptr<_204cda982_Type>* _449660_to, jule::Ptr<_204a14216_Token>* _44977_token, jule::Ptr<_204c000b1_ReferenceStack> _449733_refers) {
	jule::Ptr<_204ce3a9a_Prim> _44982_prim = _204cdd138_Prim((*(_449660_to)).ptr());;
	if ((_44982_prim != nullptr)) {
		if (_204ce72eb_IsAny(_44982_prim)) {
			_204c5183d_pushRuntimeToStr(_449627_s, _449642_from, _44977_token, _449733_refers);
		};
		return;;
	};
	if ((_204cddb72_TypeEnum((*(_449660_to)).ptr()) != nullptr)) {
		_204c5183d_pushRuntimeToStr(_449627_s, _449642_from, _44977_token, _449733_refers);
		return;;
	};
}



inline void _204cd47d3_applyCastKindModel(jule::Ptr<_204c2e486_sema>* _451128_s, jule::Ptr<_204ca2b7a_Data>* _451143_d, jule::Ptr<_204cda982_Type>* _451158_t, jule::Ptr<_204a14216_Token>* _45127_token, jule::Ptr<_204c000b1_ReferenceStack> _451233_refers) {
	_204cd42c7_applyRuntimeToStr(_451128_s, &((*((*(_451143_d))))._field_Type), _451158_t, _45127_token, _451233_refers);
	(*((*(_451143_d))))._field_Model=jule::Any(jule::new_ptr<_204b12a0c_CastingExprModel>(_204b12a0c_CastingExprModel{._field_Token=(*(_45127_token)), ._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*((*(_451143_d))))), ._field_Type=(*(_451158_t)), ._field_ExprType=(*((*(_451143_d))))._field_Type}), &__jule_any_type96);
}



inline void _204cd4cde_applyCastKind(jule::Ptr<_204c2e486_sema>* _452223_s, jule::Ptr<_204ca2b7a_Data>* _452238_d, jule::Ptr<_204cda982_Type>* _452253_t, jule::Ptr<_204a14216_Token>* _45237_token, jule::Ptr<_204c000b1_ReferenceStack> _452333_refers) {
	_204cd47d3_applyCastKindModel(_452223_s, _452238_d, _452253_t, _45237_token, _452333_refers);
	(*((*(_452238_d))))._field_Type=(*(_452253_t));
}



inline jule::Ptr<_204ca2b7a_Data> _204cd4eed_buildVoidData(void) {
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5d791_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Str _204cd54d7_checkDataForIntegerIndexing(jule::Ptr<_204c2e486_sema>* _453437_s, jule::Ptr<_204ca2b7a_Data>* _453452_d, jule::Ptr<_204a14216_Token>* _45357_token, jule::Ptr<_204c000b1_ReferenceStack> _453533_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_453452_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_204cdd138_Prim((*((*(_453452_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_20900eab4:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_204ba1c99_IsInt(_204ce3e1e_Str(_204cdd138_Prim((*((*(_453452_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_20900eb2a:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_204ca35b5_IsConst((*(_453452_d)).ptr())) {
			_case_begin_20900eb91:;
			{
				if ((_204b07738_AsF64((*((*(_453452_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_204cdd138_Prim((*((*(_453452_d))))._field_Type) == nullptr) || _204ca35b5_IsConst((*(_453452_d)).ptr()) || (_204b98961_RealKindOf(_204ce3e1e_Str(_204cdd138_Prim((*((*(_453452_d))))._field_Type).ptr())) != _204b98961_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_20900ec07:;
			{
				_204cd4cde_applyCastKind(_453437_s, _453452_d, &(_204d5ea28_primInt), _45357_token, _453533_refers);
			}
		}
		_match_end_20900e696:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _204cd59e3_applyCastModelByEnum(jule::Ptr<_204c2e486_sema>* _456030_s, jule::Ptr<_204ca2b7a_Data>* _456045_d, jule::Ptr<_204b2b471_Enum> _456059_e, jule::Ptr<_204a14216_Token>* _45617_token, jule::Ptr<_204c000b1_ReferenceStack> _456133_refers) {
	if ((_456059_e == nullptr)) {
		return;;
	};
	_204cd47d3_applyCastKindModel(_456030_s, _456045_d, &((*((*(_456059_e))._field_TypeSym))._field_Type), _45617_token, _456133_refers);
}



inline void _204cd6010_castConstByType(jule::Str* _456821_t, jule::Ptr<_204ca2b7a_Data>* _456834_d) {
	{
		
		if (_204ba16c2_IsSigInt((*(_456821_t)))) {
			_case_begin_209015856:;
			{
				{
					auto _match_expr{ _204b98c2a_BitSizeOf(_204b98961_RealKindOf((*(_456821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_209016428:;
						{
							_204b079e1_SetI64((*((*(_456834_d))))._field_Constant.ptr(), _204b0721b_AsI64((*((*(_456834_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2090164b1:;
						{
							_204b079e1_SetI64((*((*(_456834_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_204b0721b_AsI64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_209016527:;
						{
							_204b079e1_SetI64((*((*(_456834_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I16>(_204b0721b_AsI64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_20901658d:;
						{
							_204b079e1_SetI64((*((*(_456834_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I8>(_204b0721b_AsI64((*((*(_456834_d))))._field_Constant))));
						}
					}
					_match_end_2090163b2:;
				};
			}
		}
		else if (_204ba19d0_IsUnsigInt((*(_456821_t)))) {
			_case_begin_209015900:;
			{
				{
					auto _match_expr{ _204b98c2a_BitSizeOf(_204b98961_RealKindOf((*(_456821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_209016a33:;
						{
							_204b07c99_SetU64((*((*(_456834_d))))._field_Constant.ptr(), _204b074a2_AsU64((*((*(_456834_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_20901a65d:;
						{
							_204b07c99_SetU64((*((*(_456834_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_204b074a2_AsU64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_20901a6c4:;
						{
							_204b07c99_SetU64((*((*(_456834_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U16>(_204b074a2_AsU64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_20901a73a:;
						{
							_204b07c99_SetU64((*((*(_456834_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U8>(_204b074a2_AsU64((*((*(_456834_d))))._field_Constant))));
						}
					}
					_match_end_20901a5b4:;
				};
			}
		}
		else if (_204ba20da_IsFloat((*(_456821_t)))) {
			_case_begin_209015966:;
			{
				{
					auto _match_expr{ _204b98c2a_BitSizeOf(_204b98961_RealKindOf((*(_456821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_20901a9e3:;
						{
							_204b085b3_SetF64((*((*(_456834_d))))._field_Constant, _204b07738_AsF64((*((*(_456834_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_20901e7c7:;
						{
							_204b085b3_SetF64((*((*(_456834_d))))._field_Constant, static_cast<jule::F64>(static_cast<jule::F32>(_204b07738_AsF64((*((*(_456834_d))))._field_Constant))));
						}
					}
					_match_end_20901e761:;
				};
			}
		}
		_match_end_209015702:;
	};
}



inline void _204cd61db_updateModelToGenericIns(jule::Any* _460233_m, jule::Ptr<_204b21664_FnIns>* _460252_f) {
	{
		auto &_match_expr{ (*(_460233_m)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_209016934:;
			{
				(*(_460233_m))=jule::Any((*(_460252_f)), &__jule_any_type65);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_20901ec7d:;
			{
				(*((*(_460233_m)).cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_460252_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_20901ea4c:;
			{
				(*((*(_460233_m)).cast_ptr<_204b162e6_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_460252_f));
			}
		}
		_match_end_20901689b:;
	};
}



inline jule::Bool _204cd6560_pushSubIdentFromExpr(jule::Any _461329_expr, jule::Ptr<_204a2a4d5_SubIdentTypeDecl>* _461355_t) {
	{
		auto &_match_expr{ _461329_expr };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_2090259ba:;
			{
				jule::Ptr<_204a30760_IdentExpr> _46167_e = _461329_expr.unsafe_cast_ptr<_204a30760_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>> &__jule_push_dest = (*((*(_461355_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*(_46167_e))._field_Token, ._field_Ident=(*_46167_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_209024b1d:;
			{
				jule::Ptr<_204a32058_SubIdentExpr> _46227_e = _461329_expr.unsafe_cast_ptr<_204a32058_SubIdentExpr>();;
				if ((!(_204cd6560_pushSubIdentFromExpr((*((*(_46227_e))._field_Expr))._field_Kind, _461355_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_204a2a21b_IdentTypeDecl>> &__jule_push_dest = (*((*(_461355_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_204a2a21b_IdentTypeDecl>(_204a2a21b_IdentTypeDecl{._field_Token=(*(_46227_e))._field_Ident, ._field_Ident=(*((*_46227_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_204a29b11_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_209025a97:;
			{
				return false;;
			}
		}
		_match_end_2090258ee:;
	};
	return true;;
}



inline jule::Str _204cd6829_constoa(jule::Ptr<_204a9d338_Const>* _463613_c) {
	{
		
		if (_204b08a47_IsI64((*(_463613_c)).ptr())) {
			_case_begin_20902b8a0:;
			{
				return _201a15ca9_FmtInt(_204b0644b_ReadI64((*(_463613_c)).ptr()), 10LL);;
			}
		}
		else if (_204b08ccd_IsU64((*(_463613_c)).ptr())) {
			_case_begin_20902a45e:;
			{
				return _201a158e1_FmtUint(_204b066d2_ReadU64((*(_463613_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_20902c098:;
			{
				return jule::Str();;
			}
		}
		_match_end_20902a162:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204cd6dbd_evalEnumStatic(jule::Ptr<_204c2e486_sema>* _464724_s, jule::Ptr<_204b2b471_Enum>* _464739_enm, jule::Ptr<_204b2a915_EnumItem>* _464756_item, jule::Ptr<_204a14216_Token>* _46487_token, jule::Ptr<_204c000b1_ReferenceStack> _464833_refers) {
	jule::Ptr<_204ca2b7a_Data> _46496_d = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_464739_enm)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	if (((*(_464756_item)) != nullptr)) {
		(*(_46496_d))._field_Constant=jule::new_ptr<_204a9d338_Const>((*(*((*((*((*(_464756_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46496_d.alloc)._field_Model=jule::Any((*_46496_d.alloc)._field_Constant, &__jule_any_type15);
		_204cd59e3_applyCastModelByEnum(_464724_s, &(_46496_d), (*(_464739_enm)), _46487_token, _464833_refers);
	};
	return _46496_d;;
}



inline jule::Ptr<_204b1217c_StructLitExprModel> _204cd7187_isLitBased(jule::Any* _466520_m) {
	{
		auto &_match_expr{ (*(_466520_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20903194e:;
			{
				return (*(_466520_m)).cast_ptr<_204b1217c_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_2090319b5:;
			{
				return (*((*(_466520_m)).cast_ptr<_204b12479_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_209031a2b:;
			{
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _46727_ssi = (*(_466520_m)).cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				return _204cd7187_isLitBased(&((*((*(_46727_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_209031a92:;
			{
				jule::Ptr<_204b12a0c_CastingExprModel> _46757_c = (*(_466520_m)).cast_ptr<_204b12a0c_CastingExprModel>(&__jule_any_type96);;
				return _204cd7187_isLitBased(&((*((*(_46757_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_2090314ed:;
			{
				return nullptr;;
			}
		}
		_match_end_209031487:;
	};
}



inline void _204cd7473_makeImplicitDeref(jule::Ptr<_204ca2b7a_Data>* _468227_d, jule::Ptr<_204a14216_Token> _468241_baseToken) {
	jule::Ptr<_204b117a8_UnaryExprModel> _46836_unary = jule::new_ptr<_204b117a8_UnaryExprModel>(_204b117a8_UnaryExprModel{._field_Expr=jule::new_ptr<_204ca2b7a_Data>((*((*(_468227_d))))), ._field_Op=jule::new_ptr<_204a14216_Token>((*(_468241_baseToken)))});;
	(*((*(_46836_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_46836_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_468227_d))))._field_Model=jule::Any(_46836_unary, &__jule_any_type113);
}



inline void _2091507e8_updateRefer(jule::Ptr<_204c000b1_ReferenceStack> _469323_ref, jule::Ptr<_204b21664_FnIns>* _469346_old, jule::Ptr<_204b21664_FnIns>* _469359_new) {
	{
		auto expr = &((*(_469323_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2091521ce:;
		if (it != expr_end) {
			jule::I32 _46946_i = it - expr->begin();
			jule::Any _46949_sym = *it;
			{
				if ((jule::Any((*(_469346_old)), &__jule_any_type65) == _46949_sym)) {
					(*(_469323_ref))._field_buffer[_46946_i]=jule::Any((*(_469359_new)), &__jule_any_type65);
				};
			}
			_iter_next_2091521ce:;
			++it;
			_46946_i++;
			goto _iter_begin_2091521ce;
		}
		_iter_end_2091521ce:;
	};
}



inline void _204cd7b05_makeVariadic(jule::Ptr<_204ca2b7a_Data>* _470122_d, jule::Ptr<_204cda982_Type> _470136_elem) {
	(*((*(_470122_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=(*_470136_elem.alloc)._field_BindIdent, ._field_Generic=(*(_470136_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_470136_elem.alloc)._field_Kind});
}



inline jule::Bool _204cd8034_isVarCaptured(jule::Ptr<_204bd8929_scopeChecker> _471518_r, jule::Ptr<_204bd8929_scopeChecker> _471540_s, jule::Ptr<_204c5319c_Var> _471558_v) {
	if (((*(_471558_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_471540_s))._field_scope == (*(_471558_v))._field_Scope)) {
				return false;;
			};
			if ((((*(_471540_s))._field_parent == nullptr) || (_471540_s == _471518_r))) {
				goto _iter_end_20903ab34;
			};
			_471540_s=(*(_471540_s))._field_parent;
		}
	_iter_next_20903ab34:;
	}
	_iter_end_20903ab34:;;
	return true;;
}



inline jule::Ptr<_204c12139_ImportInfo> _204cd83a8_findNamespace(jule::Trait _473222_lookup, jule::Str _473238_namespace) {
	return ((_204d0a7d7_LookupMptrData*)_473222_lookup.safe_type())->_204d08ac1_SelectPackage(_473222_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_204c12139_ImportInfo>>((void*)__jule_anon_20903ca7b, jule::Ptr<__jule_anon_20903ca7b_ctx>::make(__jule_anon_20903ca7b_ctx{._473238_namespace=_473238_namespace}).as<jule::Uintptr>(), __jule_anon_20903ca7b_ctx_handler));;
}



inline jule::Bool _204d06b35_kindUsesGenerics(jule::Ptr<_204cda982_Type>* _172526_k, jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>* _172537_generics) {
	{
		auto expr = _172537_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2094a903b:;
		if (it != expr_end) {
			jule::Ptr<_204a36d1b_GenericDecl> *_17269_g = it;
			{
				if (static__204d06739_exist(&((*((*(_17269_g))))._field_Ident), _172526_k)) {
					return true;;
				};
			}
			_iter_next_2094a903b:;
			++it;
			goto _iter_begin_2094a903b;
		}
		_iter_end_2094a903b:;
	};
	return false;;
}



inline jule::Bool _204d06eed_hasDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _173522_directives, jule::Str _173553_tag) {
	{
		auto expr = _173522_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2094a95e1:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _173614_dr = *it;
			{
				if (((*((*(_173614_dr))._field_Tag))._field_Kind == _173553_tag)) {
					return true;;
				};
			}
			_iter_next_2094a95e1:;
			++it;
			goto _iter_begin_2094a95e1;
		}
		_iter_end_2094a95e1:;
	};
	return false;;
}



inline jule::Bool _204d072b7_canGetPtr(jule::Ptr<_204ca2b7a_Data>* _174419_d) {
	return (*((*(_174419_d))))._field_Lvalue;;
}



inline jule::Bool _204d07608_isBuiltinStrConvertable(jule::Ptr<_204cda982_Type>* _174733_t) {
	return ((((!(_204cdbd4b_Void((*(_174733_t)).ptr()))) && (_204cde425_Fn((*(_174733_t)).ptr()) == nullptr)) && (_204cdee5e_Tup((*(_174733_t)).ptr()) == nullptr)) && (!(_204ce01e5_comptime((*(_174733_t)).ptr()))));;
}



inline jule::Ptr<_204ce3a9a_Prim> _204d0788e_buildPrimType(jule::Str _175118_kind) {
	return jule::new_ptr<_204ce3a9a_Prim>(_204ce3a9a_Prim{._field_Kind=_175118_kind});;
}



inline void _204d08164_applyImplicitCast(jule::Ptr<_204c2e486_sema>* _177927_s, jule::Ptr<_204cda982_Type>* _177942_dest, jule::Ptr<_204ca2b7a_Data>* _177960_d, jule::Ptr<_204a14216_Token>* _17807_token, jule::Ptr<_204c000b1_ReferenceStack> _178033_refers) {
	if (_204cdbab5_IsNil((*((*(_177960_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_204ce3a9a_Prim> _17842_destPrim = _204cdd138_Prim((*(_177942_dest)).ptr());;
	if (((_17842_destPrim != nullptr) && _204ce72eb_IsAny(_17842_destPrim))) {
		jule::Ptr<_204ce3a9a_Prim> _17863_prim = _204cdd138_Prim((*((*(_177960_d))))._field_Type.ptr());;
		if (((_17863_prim == nullptr) || (!(_204ce72eb_IsAny(_17863_prim.ptr()))))) {
			_204cd4cde_applyCastKind(_177927_s, _177960_d, _177942_dest, _17807_token, _178033_refers);
		};
		return;;
	};
	jule::Ptr<_204b28cba_Trait> _17932_dt = _204cde942_Trait((*(_177942_dest)).ptr());;
	if ((_17932_dt != nullptr)) {
		jule::Ptr<_204b28cba_Trait> _17953_bt = _204cde942_Trait((*((*(_177960_d))))._field_Type.ptr());;
		if (((_17953_bt == nullptr) || (_17953_bt != _17932_dt))) {
			_204cd47d3_applyCastKindModel(_177927_s, _177960_d, _177942_dest, _17807_token, _178033_refers);
			return;;
		};
	};
	if (((_204cddb72_TypeEnum((*(_177942_dest)).ptr()) != nullptr) && (_204cddb72_TypeEnum((*((*(_177960_d))))._field_Type.ptr()) == nullptr))) {
		_204cd47d3_applyCastKindModel(_177927_s, _177960_d, _177942_dest, _17807_token, _178033_refers);
		return;;
	};
}



inline jule::Bool _204d0853d_validTypeForXof(jule::Ptr<_204cda982_Type>* _180925_t) {
	return ((((!(_204cdbd4b_Void((*(_180925_t)).ptr()))) && (_204cde425_Fn((*(_180925_t)).ptr()) == nullptr)) && (_204cdee5e_Tup((*(_180925_t)).ptr()) == nullptr)) && (!(_204ce01e5_comptime((*(_180925_t)).ptr()))));;
}



inline __jule_tuple_x_204b248a9_SymTab__jule_tuple_s_1eeaca425_Log _204d0b4b9_buildSymbols(jule::Ptr<_204a27c52_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_204c060b7_symBuilder> _1667_owner) {
	__jule_tuple_x_204b248a9_SymTab__jule_tuple_s_1eeaca425_Log __jule_func_result;
	jule::Ptr<_204c060b7_symBuilder> _176_sb = jule::new_ptr<_204c060b7_symBuilder>(_204c060b7_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1eeaca425_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_204b248a9_SymTab>(nullptr)});;
	_204c0be58_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _204d0b7e9_collectImplicitImports(jule::Ptr<_204c2e486_sema>* _3132_s, jule::Ptr<_204b248a9_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2095dabc8:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _3214_imp = *it;
			{
				if ((!(_204c0c321_isImplicitImport(_3214_imp)))) {
					goto _iter_end_2095dabc8;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_2095dbe3d:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_2095db4d1:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_2095dba75:;
				};
			}
			_iter_next_2095dabc8:;
			++it;
			goto _iter_begin_2095dabc8;
		}
		_iter_end_2095dabc8:;
	};
}



inline __jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log _204d0bc28_analyzePackage(jule::Slice<jule::Ptr<_204a27c52_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags) {
	__jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log __jule_func_result;
	jule::Slice<jule::Ptr<_204b248a9_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204b248a9_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204b248a9_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2095dd04e:;
		if (it != expr_end) {
			jule::Ptr<_204a27c52_AST> _4814_f = *it;
			{
				jule::Ptr<_204b248a9_SymTab> _497_table;
				jule::Slice<_1eeaca425_Log> _4918_errors;
				({
					__jule_tuple_x_204b248a9_SymTab__jule_tuple_s_1eeaca425_Log __jule_assign_result = _204d0b4b9_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_204b248a9_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_2095dd04e:;
			++it;
			goto _iter_begin_2095dd04e;
		}
		_iter_end_2095dd04e:;
	};
	jule::Ptr<_204c2e486_sema> _566_sema = jule::new_ptr<_204c2e486_sema>(_204c2e486_sema{._field_errors=jule::Slice<_1eeaca425_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_204b248a9_SymTab>>(nullptr), ._field_file=jule::Ptr<_204b248a9_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_204c2d85e_commonSemaMeta>(_204c2d85e_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_204bb36e5_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_204c12139_ImportInfo>(nullptr)})});;
	jule::Ptr<_204b248a9_SymTab> _636_firstTable = _476_tables[0LL];;
	_204d0b7e9_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_204c4e2b9_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_204c148ab_Package> _716_pkg = jule::new_ptr<_204c148ab_Package>(_204c148ab_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log _204d0c1ce_AnalyzePackage(jule::Slice<jule::Ptr<_204a27c52_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags) {
	__jule_tuple_x_204c148ab_Package__jule_tuple_s_1eeaca425_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_204d0bc28_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_204b21664_FnIns> _204d5cd9a_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_2095e7b80:;
			{
				static jule::Ptr<_204b21664_FnIns> _2314_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d63620_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_2095e7be6:;
			{
				static jule::Ptr<_204b21664_FnIns> _2614_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d63a4e_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_2095e7c5c:;
			{
				static jule::Ptr<_204b21664_FnIns> _2914_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d63e7d_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_2095e7cd4:;
			{
				static jule::Ptr<_204b21664_FnIns> _3214_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d643ac_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_2095e7e7c:;
			{
				static jule::Ptr<_204b21664_FnIns> _3514_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d647db_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_2095e7ee3:;
			{
				static jule::Ptr<_204b21664_FnIns> _3814_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d64e4b_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_2095e8059:;
			{
				static jule::Ptr<_204b21664_FnIns> _4114_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d65754_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_2095e80d1:;
			{
				static jule::Ptr<_204b21664_FnIns> _4414_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d66de8_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_2095e8213:;
			{
				static jule::Ptr<_204b21664_FnIns> _4714_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d6769b_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_2095e8279:;
			{
				static jule::Ptr<_204b21664_FnIns> _5014_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d680b4_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_2095e7696:;
			{
				return nullptr;;
			}
		}
		_match_end_2095e7a09:;
	};
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204d5d186_primTypeAlias(jule::Ptr<_204cda982_Type>* _5723_k) {
	return jule::new_ptr<_204cd9b90_TypeAlias>(_204cd9b90_TypeAlias{._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_204c5319c_Var> _204d61a3b_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_2095eeaaa:;
			{
				static jule::Ptr<_204c5319c_Var> _8814_v = jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=_204d5d494_primNil}), ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b05cdb_NewNil()})}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_2095eeb54:;
			{
				static jule::Ptr<_204c5319c_Var> _10314_v = jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b05549_NewBool(true)})}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_2095eebcb:;
			{
				static jule::Ptr<_204c5319c_Var> _11614_v = jule::new_ptr<_204c5319c_Var>(_204c5319c_Var{._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_204d61d7c_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_204ca3d02_Value>(_204ca3d02_Value{._field_Expr=jule::Ptr<_204a2de45_Expr>(nullptr), ._field_Data=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::Ptr<_204cda982_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__204b05549_NewBool(false)})}), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_204c5319c_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_2095ee329:;
			{
				return nullptr;;
			}
		}
		_match_end_2095e91d1:;
	};
}



inline jule::Ptr<_204cd9b90_TypeAlias> _204d61d7c_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_20960497d:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _13614_t = _204d5d186_primTypeAlias(&(_204d5da49_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_209604ae3:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _13914_t = _204d5d186_primTypeAlias(&(_204d5dd46_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_209604b59:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _14214_t = _204d5d186_primTypeAlias(&(_204d5e0ee_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_209604c36:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _14514_t = _204d5d186_primTypeAlias(&(_204d5e3a7_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_209604c9c:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _14814_t = _204d5d186_primTypeAlias(&(_204d5e660_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_209604d13:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _15114_t = _204d5d186_primTypeAlias(&(_204d5ea28_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_209604d79:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _15414_t = _204d5d186_primTypeAlias(&(_204d5ec6a_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_209604de0:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _15714_t = _204d5d186_primTypeAlias(&(_204d60012_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_209604ebc:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _16014_t = _204d5d186_primTypeAlias(&(_204d60573_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_209605044:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _16314_t = _204d5d186_primTypeAlias(&(_204d60ad4_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_2096050bb:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _16614_t = _204d5d186_primTypeAlias(&(_204d60d8c_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_209605143:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _16914_t = _204d5d186_primTypeAlias(&(_204d61376_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_2096051ba:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _17214_t = _204d5d186_primTypeAlias(&(_204d615b8_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_209605242:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _17514_t = _204d5d186_primTypeAlias(&(_204d617c7_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_2096052b9:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _17814_t = _204d5d186_primTypeAlias(&(_204d6082b_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_209605341:;
			{
				static jule::Ptr<_204cd9b90_TypeAlias> _18114_t = _204d5d186_primTypeAlias(&(_204d602ba_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_20960021a:;
			{
				return nullptr;;
			}
		}
		_match_end_2096002e7:;
	};
}



inline jule::Any _204d62113_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_204c5319c_Var> _1896_v = _204d61a3b_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_204b21664_FnIns> _1936_f = _204d5cd9a_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type65);;
	};
	jule::Ptr<_204cd9b90_TypeAlias> _1976_ta = _204d61d7c_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _204d623cc_findBuiltinDefStdMem(jule::Str* _20426_ident) {
	{
		auto &_match_expr{ (*(_20426_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_20960ea87:;
			{
				static jule::Ptr<_204b21664_FnIns> _20714_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d6a25e_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_20960ee94:;
			{
				static jule::Ptr<_204b21664_FnIns> _21014_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d6a68d_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_20961001b:;
			{
				static jule::Ptr<_204b21664_FnIns> _21314_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d6aabc_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_20960d459:;
			{
				return nullptr;;
			}
		}
		_match_end_20960d8bb:;
	};
}



inline jule::Any _204d62696_findBuiltinDefStdComptime(jule::Str* _22031_ident) {
	{
		auto &_match_expr{ (*(_22031_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_2096102a2:;
			{
				static jule::Ptr<_204b21664_FnIns> _22314_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d684e3_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_2096122c6:;
			{
				static jule::Ptr<_204b21664_FnIns> _22614_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d68922_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_20961233c:;
			{
				static jule::Ptr<_204b21664_FnIns> _22914_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d68d51_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_209610318:;
			{
				static jule::Ptr<_204b21664_FnIns> _23214_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d694c2_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_209610390:;
			{
				static jule::Ptr<_204b21664_FnIns> _23514_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d69901_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_20961246e:;
			{
				static jule::Ptr<_204b21664_FnIns> _23814_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::Ptr<_204b1d5a6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d69d30_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_23814_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_2096100a4:;
			{
				return nullptr;;
			}
		}
		_match_end_20961201d:;
	};
}



inline jule::Any _204d62a70_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident) {
	{
		auto &_match_expr{ (*(_24537_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_209612716:;
			{
				static jule::Ptr<_204b21664_FnIns> _24814_f = jule::new_ptr<_204b21664_FnIns>(_204b21664_FnIns{._field_Owner=jule::Ptr<_204a4d2c7_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_204b1d5a6_Fn>(_204b1d5a6_Fn{._field_sema=jule::Ptr<_204c2e486_sema>(nullptr), ._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_Scope=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_204a36d1b_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204a36d1b_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_204b1b51b_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b1bad2_Param>>(nullptr), ._field_Owner=jule::Ptr<_204a4a46c_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_204b21664_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_204cd909b_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_204b2050e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_204cda982_Type>(nullptr), ._field_Scope=jule::Ptr<_204bd11d5_Scope>(nullptr), ._field_Refers=jule::Ptr<_204c000b1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_204ca2b7a_Data>,jule::Ptr<_204ca4b49_eval>*,jule::Ptr<_204a32b6e_FnCallExpr>*,jule::Ptr<_204ca2b7a_Data>*>(_204d6aeeb_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_209612507:;
			{
				return nullptr;;
			}
		}
		_match_end_2096165e9:;
	};
}



inline jule::Any _204d62d6c_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident) {
	{
		auto &_match_expr{ (*(_26027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_209618541:;
			{
				return _204d62696_findBuiltinDefStdComptime(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_2096185da:;
			{
				return _204d623cc_findBuiltinDefStdMem(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_2096182aa:;
			{
				return _204d62a70_findBuiltinDefStdJuleIntegrated(_26043_ident);;
			}
		}
		else {
			_case_begin_209617c5a:;
			{
				return nullptr;;
			}
		}
		_match_end_209616ab1:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204d631e1_builtinCallerError(jule::Ptr<_204ca4b49_eval>* _27328_e, jule::Ptr<_204a32b6e_FnCallExpr>* _27343_fc) {
	if (((*((*(_27343_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_27328_e)).ptr(), (*((*(_27343_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_27343_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_27328_e)).ptr(), (*((*((*(_27343_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _2816_expr = _204cc8794_evalExpr((*(_27328_e)), (*((*(_27343_fc))))._field_Args[0LL]);;
	if ((_2816_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204a14216_Token> _2866_token = (*((*((*(_27343_fc))))._field_Args[0LL]))._field_Token;;
	if (_204ca3098_IsNil(_2816_expr.ptr())) {
		_204ca5122_pushErr((*(_27328_e)).ptr(), _2866_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_204c3e111_checkValidityForInitExpr((*((*(_27328_e))))._field_s, true, false, &(_204d5da49_primAny), &(_2816_expr), &(_2866_token))))) {
		return nullptr;;
	};
	_204cd42c7_applyRuntimeToStr(&((*((*(_27328_e))))._field_s), &((*(_2816_expr))._field_Type), &(_204d5da49_primAny), &(_2866_token), _204ca8158_getOwnerRefers((*(_27328_e)).ptr()));
	jule::Ptr<_204ca2b7a_Data> _2996_d = _204cd4eed_buildVoidData();;
	(*(_2996_d))._field_Model=jule::Any(jule::new_ptr<_204b19470_BuiltinErrorCallExprModel>(_204b19470_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_204b21664_FnIns>(nullptr), ._field_Err=_2816_expr}), &__jule_any_type21);
	return _2996_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204d63620_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _30428_e, jule::Ptr<_204a32b6e_FnCallExpr>* _30443_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_30443_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_30428_e)).ptr(), (*((*(_30443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30443_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_30428_e)).ptr(), (*((*((*(_30443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204a2de45_Expr> _3136_arg = (*((*(_30443_fc))))._field_Args[0LL];;
	jule::Ptr<_204ca2b7a_Data> _3146_expr = _204cc8794_evalExpr((*(_30428_e)), _3136_arg);;
	if ((_3146_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_204d07608_isBuiltinStrConvertable(&((*(_3146_expr))._field_Type))))) {
		_204ca5122_pushErr((*(_30428_e)).ptr(), (*(_3136_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_204c5183d_pushRuntimeToStr(&((*((*(_30428_e))))._field_s), &((*(_3146_expr))._field_Type), &((*(_3136_arg))._field_Token), _204ca8158_getOwnerRefers((*(_30428_e)).ptr()));
	jule::Ptr<_204ca2b7a_Data> _3266_d = _204cd4eed_buildVoidData();;
	(*(_3266_d))._field_Model=jule::Any(jule::new_ptr<_204b16cb9_BuiltinPrintCallExprModel>(_204b16cb9_BuiltinPrintCallExprModel{._field_Expr=_3146_expr}), &__jule_any_type25);
	return _3266_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204d63a4e_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _33130_e, jule::Ptr<_204a32b6e_FnCallExpr>* _33145_fc, jule::Ptr<_204ca2b7a_Data>* _33172_d) {
	(*(_33172_d))=_204d63620_builtinCallerPrint(nullptr, _33130_e, _33145_fc, _33172_d);
	if (((*(_33172_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_33172_d))))._field_Model=jule::Any(jule::new_ptr<_204b170b6_BuiltinPrintlnCallExprModel>(_204b170b6_BuiltinPrintlnCallExprModel{._field_Expr=(*((*((*(_33172_d))))._field_Model.cast_ptr<_204b16cb9_BuiltinPrintCallExprModel>(&__jule_any_type25)))._field_Expr}), &__jule_any_type26);
	return (*(_33172_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d63e7d_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _34326_e, jule::Ptr<_204a32b6e_FnCallExpr>* _34341_fc, jule::Ptr<_204ca2b7a_Data>* _34368_d) {
	if (((*((*(_34341_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_34326_e)).ptr(), (*((*(_34341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_34341_fc))))._field_Args.len() > 2LL)) {
		_204ca5122_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _3526_t = _204cc7cc1_eval1((*(_34326_e)), (*((*(_34341_fc))))._field_Args[0LL]);;
	if ((_3526_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3526_t))._field_Decl))) {
		_204ca5122_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*((*(_34368_d))))._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce75c6_Sptr>(_204ce75c6_Sptr{._field_Elem=(*(_3526_t))._field_Type}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)});
	if (((*((*(_34341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_204cda982_Type> _3697_old = (*((*(_34326_e))))._field_prefix;;
		(*((*(_34326_e))))._field_prefix=(*_3526_t.alloc)._field_Type;
		jule::Ptr<_204ca2b7a_Data> _3727_init = _204cc8794_evalExpr((*(_34326_e)), (*((*(_34341_fc))))._field_Args[1LL]);;
		(*((*(_34326_e))))._field_prefix=_3697_old;
		if ((_3727_init != nullptr)) {
			jule::Ptr<_204a14216_Token> _3778_token = (*((*((*(_34341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_204c3e111_checkValidityForInitExpr((*((*(_34326_e))))._field_s, (*((*(_34326_e))))._field_target._field_mutable, false, &((*_3526_t.alloc)._field_Type), &(_3727_init), &(_3778_token));
			_204c3987b_checkAssignType((*((*(_34326_e))))._field_s, false, &((*_3526_t.alloc)._field_Type), &(_3727_init), _3778_token, _204ca8158_getOwnerRefers((*(_34326_e)).ptr()));
			(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_204b17490_BuiltinNewCallExprModel>(_204b17490_BuiltinNewCallExprModel{._field_Type=(*_3526_t.alloc)._field_Type, ._field_Init=(*(_3727_init))._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_204b17490_BuiltinNewCallExprModel>(_204b17490_BuiltinNewCallExprModel{._field_Type=(*_3526_t.alloc)._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_34368_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d643ac_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _39728_e, jule::Ptr<_204a32b6e_FnCallExpr>* _39743_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_39743_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_39728_e)).ptr(), (*((*(_39743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_39743_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_39728_e)).ptr(), (*((*((*(_39743_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _4066_expr = _204cc8794_evalExpr((*(_39728_e)), (*((*(_39743_fc))))._field_Args[0LL]);;
	if ((_4066_expr == nullptr)) {
		return nullptr;;
	};
	if (((_204cdd138_Prim((*(_4066_expr))._field_Type.ptr()) == nullptr) || (!(_204ce7065_IsStr(_204cdd138_Prim((*(_4066_expr))._field_Type.ptr()).ptr()))))) {
		_204ca5122_pushErr((*(_39728_e)).ptr(), (*((*(_39743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_204ca2b7a_Data> _4156_d = _204cd4eed_buildVoidData();;
	(*(_4156_d))._field_Model=jule::Any(jule::new_ptr<_204b17869_BuiltinPanicCallExprModel>(_204b17869_BuiltinPanicCallExprModel{._field_Token=(*((*(_39743_fc))))._field_Token, ._field_Expr=(*(_4066_expr))._field_Model}), &__jule_any_type27);
	return _4156_d;;
}



inline jule::Ptr<_204ca2b7a_Data> _204d647db_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _42327_e, jule::Ptr<_204a32b6e_FnCallExpr>* _42342_fc, jule::Ptr<_204ca2b7a_Data>* _42369_d) {
	if (((*((*(_42342_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_42342_fc))))._field_Args.len() == 1LL)) {
			_204ca5122_pushErr((*(_42327_e)).ptr(), (*((*(_42342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_204ca5122_pushErr((*(_42327_e)).ptr(), (*((*(_42342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_42342_fc))))._field_Args.len() > 3LL)) {
		_204ca5122_pushErr((*(_42327_e)).ptr(), (*((*((*(_42342_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ca2b7a_Data> _4366_t = _204cc7980_evalExprKind((*(_42327_e)), (*((*((*(_42342_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4366_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4366_t))._field_Decl))) {
		_204ca5122_pushErr((*(_42327_e)).ptr(), (*((*((*(_42342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_204cde18e_Slc((*(_4366_t))._field_Type.ptr()) == nullptr)) {
		_204ca5122_pushErr((*(_42327_e)).ptr(), (*((*((*(_42342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_4366_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_42369_d))))._field_Type=(*(_4366_t))._field_Type;
	jule::Ptr<_204ca2b7a_Data> _4516_lenExpr = _204cc8794_evalExpr(_204c38e1e_evalp((*((*(_42327_e))))._field_s, (*((*(_42327_e))))._field_lookup, (*_4366_t.alloc)._field_Type), (*((*(_42342_fc))))._field_Args[1LL]);;
	if ((_4516_lenExpr == nullptr)) {
		return nullptr;;
	};
	_204caddc8_checkIntegerIndexingByData((*(_42327_e)).ptr(), &(_4516_lenExpr), (*((*((*(_42342_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_204b17d20_BuiltinMakeCallExprModel> _4586_model = jule::new_ptr<_204b17d20_BuiltinMakeCallExprModel>(_204b17d20_BuiltinMakeCallExprModel{._field_Type=(*_4366_t.alloc)._field_Type, ._field_Len=(*(_4516_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_42369_d))))._field_Model=jule::Any(_4586_model, &__jule_any_type117);
	if (((*((*(_42342_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_204ca2b7a_Data> _4647_capExpr = _204cc8794_evalExpr(_204c38e1e_evalp((*((*(_42327_e))))._field_s, (*((*(_42327_e))))._field_lookup, (*_4366_t.alloc)._field_Type), (*((*(_42342_fc))))._field_Args[2LL]);;
		if ((_4647_capExpr == nullptr)) {
			return (*(_42369_d));;
		};
		_204caddc8_checkIntegerIndexingByData((*(_42327_e)).ptr(), &(_4647_capExpr), (*((*((*(_42342_fc))))._field_Args[2LL]))._field_Token);
		(*(_4586_model))._field_Cap=(*(_4647_capExpr))._field_Model;
	};
	return (*(_42369_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d64e4b_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _47429_e, jule::Ptr<_204a32b6e_FnCallExpr>* _47444_fc, jule::Ptr<_204ca2b7a_Data>* _47471_d) {
	if (((*((*(_47444_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_47444_fc))))._field_Args.len() == 1LL)) {
			_204ca5122_pushErr((*(_47429_e)).ptr(), (*((*(_47444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_204ca5122_pushErr((*(_47429_e)).ptr(), (*((*(_47444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204a2de45_Expr> _4846_firstArg = (*((*(_47444_fc))))._field_Args[0LL];;
	jule::Ptr<_204ca2b7a_Data> _4856_t = _204cc8794_evalExpr((*(_47429_e)), _4846_firstArg);;
	if ((_4856_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204ce8099_Slc> _4906_s = _204cde18e_Slc((*(_4856_t))._field_Type.ptr());;
	if ((_4906_s == nullptr)) {
		_204ca5122_pushErr((*(_47429_e)).ptr(), (*(_4846_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_204c3e111_checkValidityForInitExpr((*((*(_47429_e))))._field_s, true, false, &((*_4856_t.alloc)._field_Type), &(_4856_t), &((*(_4846_firstArg))._field_Token))) {
		_204c3987b_checkAssignType((*((*(_47429_e))))._field_s, false, &((*(_4856_t))._field_Type), &(_4856_t), (*_4846_firstArg.alloc)._field_Token, _204ca8158_getOwnerRefers((*(_47429_e)).ptr()));
	};
	jule::Ptr<_204cda982_Type> _5056_prefix = (*((*(_47429_e))))._field_prefix;;
	(*((*(_47429_e))))._field_prefix=(*_4856_t.alloc)._field_Type;
	__JULE_DEFER({
		(*((*(_47429_e))))._field_prefix=_5056_prefix;
	});;
	(*(_47471_d))=jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=(*_4856_t.alloc)._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});
	jule::Ptr<_204a2de45_Expr> _5136_secondArg = (*((*(_47444_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5136_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_209659c7a:;
			{
				if (((*((*(_47444_fc))))._field_Args.len() > 2LL)) {
					_204ca5122_pushErr((*(_47429_e)).ptr(), (*((*((*(_47444_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_204ca2b7a_Data> _5207_e1 = _204cc8794_evalExpr((*(_47429_e)), (*((*(_5136_secondArg))._field_Kind.unsafe_cast_ptr<_204a313cb_VariadicExpr>()))._field_Expr);;
				if ((_5207_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_204cdd138_Prim((*(_4906_s))._field_Elem.ptr()) != nullptr) && _204ce54c5_IsU8(_204cdd138_Prim((*(_4906_s))._field_Elem).ptr()))) {
					if (((_204cdd138_Prim((*(_5207_e1))._field_Type) != nullptr) && _204ce7065_IsStr(_204cdd138_Prim((*(_5207_e1))._field_Type).ptr()))) {
						_204cd7b05_makeVariadic(&(_5207_e1), _204d6082b_primU8);
						(*((*(_47471_d))))._field_Model=jule::Any(jule::new_ptr<_204b181e9_BuiltinAppendCallExprModel>(_204b181e9_BuiltinAppendCallExprModel{._field_Dest=(*_4856_t.alloc)._field_Model, ._field_Elements=(*(_5207_e1))._field_Model}), &__jule_any_type24);
						return (*(_47471_d));;
					};
				};
				if ((!(_204cdcda2_Variadicable((*(_5207_e1))._field_Type)))) {
					_204ca5122_pushErr((*(_47429_e)).ptr(), (*(_5136_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_5207_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_204cd7b05_makeVariadic(&(_5207_e1), (*(_4906_s))._field_Elem);
				(*(*(_5207_e1))._field_Type.alloc)._field_Variadic=false;
				if (_204c3e111_checkValidityForInitExpr((*((*(_47429_e))))._field_s, true, false, &((*_4906_s.alloc)._field_Elem), &(_5207_e1), &((*(_5136_secondArg))._field_Token))) {
					(*(*(_5207_e1))._field_Type.alloc)._field_Variadic=true;
					_204c3987b_checkAssignType((*((*(_47429_e))))._field_s, false, &((*_4906_s.alloc)._field_Elem), &(_5207_e1), (*_5136_secondArg.alloc)._field_Token, _204ca8158_getOwnerRefers((*(_47429_e)).ptr()));
				} else {
					(*(*(_5207_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_47471_d))))._field_Model=jule::Any(jule::new_ptr<_204b181e9_BuiltinAppendCallExprModel>(_204b181e9_BuiltinAppendCallExprModel{._field_Dest=(*_4856_t.alloc)._field_Model, ._field_Elements=(*(_5207_e1))._field_Model}), &__jule_any_type24);
				return (*(_47471_d));;
			}
		}
		_match_end_209659c03:;
	};
	jule::Ptr<_204ca2b7a_Data> _5636_e1 = _204cc8794_evalExpr((*(_47429_e)), _5136_secondArg);;
	if ((_5636_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204b13788_SliceExprModel> _5686_slice = jule::new_ptr<_204b13788_SliceExprModel>(_204b13788_SliceExprModel{._field_ElemType=(*(_4906_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_47444_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_47444_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_209666ea7:;
		if (it != expr_end) {
			jule::Ptr<_204a2de45_Expr> _57214_arg = *it;
			{
				_5636_e1=_204cc8794_evalExpr((*(_47429_e)), _57214_arg);
				if ((_5636_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5636_e1))._field_Type.alloc)._field_Variadic) {
					_204ca5122_pushErr((*(_47429_e)).ptr(), (*(_57214_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_204c3e111_checkValidityForInitExpr((*((*(_47429_e))))._field_s, true, false, &((*_4906_s.alloc)._field_Elem), &(_5636_e1), &((*(_57214_arg))._field_Token))) {
					_204c3987b_checkAssignType((*((*(_47429_e))))._field_s, false, &((*_4906_s.alloc)._field_Elem), &(_5636_e1), (*_57214_arg.alloc)._field_Token, _204ca8158_getOwnerRefers((*(_47429_e)).ptr()));
				};
				(*(_5686_slice))._field_Elems=jule::append((*_5686_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5636_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_209666ea7:;
			++it;
			goto _iter_begin_209666ea7;
		}
		_iter_end_209666ea7:;
	};
	(*((*(_47471_d))))._field_Model=jule::Any(jule::new_ptr<_204b181e9_BuiltinAppendCallExprModel>(_204b181e9_BuiltinAppendCallExprModel{._field_Dest=(*_4856_t.alloc)._field_Model, ._field_Elements=jule::Any(_5686_slice, &__jule_any_type80)}), &__jule_any_type24);
	return (*(_47471_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d65325_callerCopySlice(jule::Ptr<_204ca2b7a_Data>* _59425_dest, jule::Ptr<_204ca4b49_eval>* _59443_e, jule::Ptr<_204a32b6e_FnCallExpr>* _59458_fc, jule::Ptr<_204ca2b7a_Data>* _59485_d) {
	if ((!((*((*(_59425_dest))))._field_Mutable))) {
		_204ca5122_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_204ca2b7a_Data> _5996_src = _204cc8794_evalExpr((*(_59443_e)), (*((*(_59458_fc))))._field_Args[1LL]);;
	if ((_5996_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204ce8099_Slc> _6036_slc = _204cde18e_Slc((*(_5996_src))._field_Type.ptr());;
	if ((_6036_slc != nullptr)) {
		if (((!((*_5996_src.alloc)._field_Mutable)) && _204cdc368_Mutable((*_6036_slc.alloc)._field_Elem.ptr()))) {
			_204ca5122_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_204cdb1be_Equal((*((*(_59425_dest))))._field_Type, (*_5996_src.alloc)._field_Type)))) {
			_204ca5122_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_59425_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_5996_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_204ce3a9a_Prim> _6133_destPrim = _204cdd138_Prim((*(_204cde18e_Slc((*((*(_59425_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_204ce3a9a_Prim> _6143_prim = _204cdd138_Prim((*(_5996_src))._field_Type);;
		if (((((_6133_destPrim == nullptr) || (_6143_prim == nullptr)) || (!(_204ce7065_IsStr(_6143_prim.ptr())))) || (!(_204ce54c5_IsU8(_6133_destPrim.ptr()))))) {
			_204ca5122_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*((*(_59425_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_204cdad7d_Str((*(_5996_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_59485_d))))._field_Type=_204ca0ddc_lenKind();
	(*((*(_59485_d))))._field_Model=jule::Any(jule::new_ptr<_204b19096_BuiltinCopyCallExprModel>(_204b19096_BuiltinCopyCallExprModel{._field_Dest=(*(_59425_dest)), ._field_Src=_5996_src}), &__jule_any_type28);
	return (*(_59485_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d65754_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _62827_e, jule::Ptr<_204a32b6e_FnCallExpr>* _62842_fc, jule::Ptr<_204ca2b7a_Data>* _62869_d) {
	if (((*((*(_62842_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_62842_fc))))._field_Args.len() == 1LL)) {
			_204ca5122_pushErr((*(_62827_e)).ptr(), (*((*(_62842_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_204ca5122_pushErr((*(_62827_e)).ptr(), (*((*(_62842_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_62842_fc))))._field_Args.len() > 2LL)) {
		_204ca5122_pushErr((*(_62827_e)).ptr(), (*((*((*(_62842_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _6416_dest = _204cc8794_evalExpr((*(_62827_e)), (*((*(_62842_fc))))._field_Args[0LL]);;
	{
		
		if ((_6416_dest == nullptr)) {
			_case_begin_20967c6c6:;
			{
				return nullptr;;
			}
		}
		else if ((_204cde18e_Slc((*(_6416_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_20967d4eb:;
			{
				return _204d65325_callerCopySlice(&(_6416_dest), _62827_e, _62842_fc, _62869_d);;
			}
		}
		else {
			_case_begin_20967c30d:;
			{
				_204ca5122_pushErr((*(_62827_e)).ptr(), (*((*((*(_62842_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20967a65d:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204d65ac8_callerLenSlice(jule::Ptr<_204ca2b7a_Data>* _65324_expr, jule::Ptr<_204ca2b7a_Data>* _65342_d) {
	(*((*(_65342_d))))._field_Type=_204ca0ddc_lenKind();
	(*((*(_65342_d))))._field_Model=jule::Any(jule::new_ptr<_204b184e6_BuiltinLenCallExprModel>(_204b184e6_BuiltinLenCallExprModel{._field_Expr=(*(_65324_expr))}), &__jule_any_type118);
	return (*(_65342_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d65e4c_callerLenMap(jule::Ptr<_204ca2b7a_Data>* _66122_expr, jule::Ptr<_204ca2b7a_Data>* _66140_d) {
	(*((*(_66140_d))))._field_Type=_204ca0ddc_lenKind();
	(*((*(_66140_d))))._field_Model=jule::Any(jule::new_ptr<_204b184e6_BuiltinLenCallExprModel>(_204b184e6_BuiltinLenCallExprModel{._field_Expr=(*(_66122_expr))}), &__jule_any_type118);
	return (*(_66140_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d662c1_callerLenArr(jule::Ptr<_204ca2b7a_Data>* _66922_expr, jule::Ptr<_204ca2b7a_Data>* _66940_d) {
	(*((*(_66940_d))))._field_Type=_204ca0ddc_lenKind();
	(*((*(_66940_d))))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>((*(_204cdde08_Arr((*((*(_66922_expr))))._field_Type.ptr())))._field_N));
	(*((*(_66940_d))))._field_Model=jule::Any((*((*(_66940_d))))._field_Constant, &__jule_any_type15);
	return (*(_66940_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d66645_callerLenStr(jule::Ptr<_204ca2b7a_Data>* _67622_expr, jule::Ptr<_204ca2b7a_Data>* _67640_d) {
	(*((*(_67640_d))))._field_Type=_204ca0ddc_lenKind();
	if (_204ca35b5_IsConst((*(_67622_expr)).ptr())) {
		(*((*(_67640_d))))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_204b06bee_ReadStr((*((*(_67622_expr))))._field_Constant.ptr()).len()));
		(*((*(_67640_d))))._field_Model=jule::Any((*((*(_67640_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_67640_d))))._field_Model=jule::Any(jule::new_ptr<_204b184e6_BuiltinLenCallExprModel>(_204b184e6_BuiltinLenCallExprModel{._field_Expr=(*(_67622_expr))}), &__jule_any_type118);
	};
	return (*(_67640_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d669b9_callerLenComptime(jule::Ptr<_204ca2b7a_Data>* _68927_d, jule::I32 _68937_n) {
	(*((*(_68927_d))))._field_Type=_204ca0ddc_lenKind();
	(*((*(_68927_d))))._field_Constant=static__204b0500a_NewI64(static_cast<jule::I64>(_68937_n));
	(*((*(_68927_d))))._field_Model=jule::Any((*((*(_68927_d))))._field_Constant, &__jule_any_type15);
	return (*(_68927_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d66de8_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _69626_e, jule::Ptr<_204a32b6e_FnCallExpr>* _69641_fc, jule::Ptr<_204ca2b7a_Data>* _69668_d) {
	if (((*((*(_69641_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_69626_e)).ptr(), (*((*(_69641_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_69641_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_69626_e)).ptr(), (*((*((*(_69641_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _7046_dest = _204cc8453_evalExpr1((*(_69626_e)), (*((*(_69641_fc))))._field_Args[0LL]);;
	{
		
		if ((_7046_dest == nullptr)) {
			_case_begin_20968c890:;
			{
				return nullptr;;
			}
		}
		else if ((_204cde18e_Slc((*(_7046_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_20968d6b5:;
			{
				return _204d65ac8_callerLenSlice(&(_7046_dest), _69668_d);;
			}
		}
		else if ((_204cdde08_Arr((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968d72b:;
			{
				return _204d662c1_callerLenArr(&(_7046_dest), _69668_d);;
			}
		}
		else if ((_204cdebc8_Map((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968c53d:;
			{
				return _204d65e4c_callerLenMap(&(_7046_dest), _69668_d);;
			}
		}
		else if (((_204cdd138_Prim((*(_7046_dest))._field_Type) != nullptr) && _204ce7065_IsStr(_204cdd138_Prim((*(_7046_dest))._field_Type).ptr()))) {
			_case_begin_20968c5a4:;
			{
				return _204d66645_callerLenStr(&(_7046_dest), _69668_d);;
			}
		}
		else if ((_204ce047b_comptimeStructFields((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968c61a:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce047b_comptimeStructFields((*(_7046_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_204ce0998_comptimeEnumFields((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968c681:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce0998_comptimeEnumFields((*(_7046_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_204ce1768_comptimeTypeInfos((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968d819:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce1768_comptimeTypeInfos((*(_7046_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_204ce0eb5_comptimeParams((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968d880:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce0eb5_comptimeParams((*(_7046_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_204ce1c85_comptimeStatics((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968d8e6:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce1c85_comptimeStatics((*(_7046_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_204ce2cdb_comptimeFiles((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968d95c:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce2cdb_comptimeFiles((*(_7046_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_204ce27be_comptimeDecls((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_20968d9c3:;
			{
				return _204d669b9_callerLenComptime(_69668_d, (*(_204ce27be_comptimeDecls((*(_7046_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_20968c4c7:;
			{
				_204ca5122_pushErr((*(_69626_e)).ptr(), (*((*((*(_69641_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20968a827:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204d6726c_callerCapSlice(jule::Ptr<_204ca2b7a_Data>* _73624_expr, jule::Ptr<_204ca2b7a_Data>* _73642_d) {
	(*((*(_73642_d))))._field_Type=_204ca0ddc_lenKind();
	(*((*(_73642_d))))._field_Model=jule::Any(jule::new_ptr<_204b187e3_BuiltinCapCallExprModel>(_204b187e3_BuiltinCapCallExprModel{._field_Expr=(*(_73624_expr))}), &__jule_any_type119);
	return (*(_73642_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d6769b_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _74426_e, jule::Ptr<_204a32b6e_FnCallExpr>* _74441_fc, jule::Ptr<_204ca2b7a_Data>* _74468_d) {
	if (((*((*(_74441_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_74426_e)).ptr(), (*((*(_74441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_74441_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_74426_e)).ptr(), (*((*((*(_74441_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _7526_dest = _204cc8794_evalExpr((*(_74426_e)), (*((*(_74441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7526_dest == nullptr)) {
			_case_begin_2096a1145:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7526_dest))._field_Decl) {
			_case_begin_2096a1e6a:;
			{
				_204ca5122_pushErr((*(_74426_e)).ptr(), (*((*((*(_74441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_204cde18e_Slc((*_7526_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_2096a1ed1:;
			{
				return _204d6726c_callerCapSlice(&(_7526_dest), _74468_d);;
			}
		}
		else {
			_case_begin_2096a0c7c:;
			{
				_204ca5122_pushErr((*(_74426_e)).ptr(), (*((*((*(_74441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20969c7d4:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204d67b85_callerDeleteMap(jule::Ptr<_204ca4b49_eval>* _76725_e, jule::Ptr<_204a32b6e_FnCallExpr>* _76740_fc, jule::Ptr<_204ca2b7a_Data>* _76767_expr, jule::Ptr<_204ca2b7a_Data>* _76785_d) {
	if ((!((*((*(_76767_expr))))._field_Mutable))) {
		_204ca5122_pushErr((*(_76725_e)).ptr(), (*((*((*(_76740_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_76785_d))=_204cd4eed_buildVoidData();
	jule::Ptr<_204b18bbc_BuiltinDeleteCallExprModel> _7726_model = jule::new_ptr<_204b18bbc_BuiltinDeleteCallExprModel>(_204b18bbc_BuiltinDeleteCallExprModel{._field_Dest=(*(_76767_expr)), ._field_Key=jule::Ptr<_204ca2b7a_Data>(nullptr)});;
	if (((*((*(_76740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_204ca2b7a_Data> _7767_key = _204cc8794_evalExpr((*(_76725_e)), (*((*(_76740_fc))))._field_Args[1LL]);;
		{
			
			if ((_7767_key == nullptr)) {
				_case_begin_2096a804d:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7767_key))._field_Decl) {
				_case_begin_2096a6ba6:;
				{
					_204ca5122_pushErr((*(_76725_e)).ptr(), (*((*((*(_76740_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_2096a6b40:;
				{
					;
					jule::Ptr<_204cda982_Type> _7858_keyType = (*(_204cdebc8_Map((*((*(_76767_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_204c3987b_checkAssignType((*((*(_76725_e))))._field_s, false, &(_7858_keyType), &(_7767_key), (*((*((*(_76740_fc))))._field_Args[1LL]))._field_Token, _204ca8158_getOwnerRefers((*(_76725_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_2096a6ac9:;
		};
		(*(_7726_model))._field_Key=_7767_key;
	};
	(*((*(_76785_d))))._field_Model=jule::Any(_7726_model, &__jule_any_type29);
	return (*(_76785_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d680b4_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _79629_e, jule::Ptr<_204a32b6e_FnCallExpr>* _79644_fc, jule::Ptr<_204ca2b7a_Data>* _79671_d) {
	if (((*((*(_79644_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_79629_e)).ptr(), (*((*(_79644_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_79644_fc))))._field_Args.len() > 2LL)) {
		_204ca5122_pushErr((*(_79629_e)).ptr(), (*((*((*(_79644_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _8046_dest = _204cc8794_evalExpr((*(_79629_e)), (*((*(_79644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8046_dest == nullptr)) {
			_case_begin_2096ae8c3:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8046_dest))._field_Decl) {
			_case_begin_2096b06e8:;
			{
				_204ca5122_pushErr((*(_79629_e)).ptr(), (*((*((*(_79644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_204cdebc8_Map((*_8046_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_2096b075e:;
			{
				return _204d67b85_callerDeleteMap(_79629_e, _79644_fc, &(_8046_dest), _79671_d);;
			}
		}
		else {
			_case_begin_2096ae50a:;
			{
				_204ca5122_pushErr((*(_79629_e)).ptr(), (*((*((*(_79644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2096ac85a:;
	};
}



inline jule::Ptr<_204ca2b7a_Data> _204d684e3_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _81940_e, jule::Ptr<_204a32b6e_FnCallExpr>* _81955_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_81955_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_81940_e)).ptr(), (*((*(_81955_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81955_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _8286_d = _204cc7980_evalExprKind((*(_81940_e)), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8286_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_204b21664_FnIns> _8322_f = _204cde425_Fn((*(_8286_d))._field_Type.ptr());;
	if ((_8322_f != nullptr)) {
		if (_204b22b2c_IsBuiltin(_8322_f)) {
			_204ca5122_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8322_f.alloc)._field_Generics.len() != (*((*_8322_f.alloc)._field_Decl))._field_Generics.len())) {
			_204ca5122_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_204a4d2c7_StructIns> _8432_s = _204cde6ab_Struct((*(_8286_d))._field_Type);;
	if (((_8432_s != nullptr) && ((*_8432_s.alloc)._field_Generics.len() != (*((*_8432_s.alloc)._field_Decl))._field_Generics.len()))) {
		_204ca5122_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_204ce01e5_comptime((*(_8286_d))._field_Type)) {
		_204ca5122_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_8286_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc795c_buildComptimeTypeInfoData(&((*((*(_81940_e))))._field_s), &((*_8286_d.alloc)._field_Type));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d68922_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _85541_e, jule::Ptr<_204a32b6e_FnCallExpr>* _85556_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_85556_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_85541_e)).ptr(), (*((*(_85556_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_85556_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_85541_e)).ptr(), (*((*((*(_85556_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _8636_d = _204cc8794_evalExpr((*(_85541_e)), (*((*(_85556_fc))))._field_Args[0LL]);;
	if ((_8636_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_204ca123e_isGoodValueToInfer(&(_8636_d))))) {
		_204ca5122_pushErr((*(_85541_e)).ptr(), (*((*((*(_85556_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*(_8636_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _204bc7c9d_buildComptimeValue(&(_8636_d));;
}



inline jule::Ptr<_204ca2b7a_Data> _204d68d51_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _87538_e, jule::Ptr<_204a32b6e_FnCallExpr>* _87553_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_87553_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_87538_e)).ptr(), (*((*((*(_87553_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204a9d338_Const> _8796_constant = static__204b0500a_NewI64(static_cast<jule::I64>((*((*((*(_87553_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5ea28_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8796_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8796_constant});;
}



inline jule::Ptr<_204ca2b7a_Data> _204d694c2_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _88738_e, jule::Ptr<_204a32b6e_FnCallExpr>* _88753_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_88753_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_88738_e)).ptr(), (*((*((*(_88753_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bbdec5_comptimeFile>(_204bbdec5_comptimeFile{._field_file=(*((*((*(_88738_e))))._field_s))._field_file}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204d69901_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _90039_e, jule::Ptr<_204a32b6e_FnCallExpr>* _90054_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_90054_fc))))._field_Args.len() > 0LL)) {
		_204ca5122_pushErr((*(_90039_e)).ptr(), (*((*((*(_90054_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204bbc556_comptimeFiles>(_204bbc556_comptimeFiles{._field_files=(*((*((*(_90039_e))))._field_s))._field_files}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
}



inline jule::Ptr<_204ca2b7a_Data> _204d69d30_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _91343_e, jule::Ptr<_204a32b6e_FnCallExpr>* _91358_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_91358_fc))))._field_Args.len() > 2LL)) {
		_204ca5122_pushErr((*(_91343_e)).ptr(), (*((*((*(_91358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_91358_fc))))._field_Args.len() == 0LL)) {
		_204ca5122_pushErr((*(_91343_e)).ptr(), (*((*(_91358_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_91358_fc))))._field_Args.len() == 1LL)) {
		_204ca5122_pushErr((*(_91343_e)).ptr(), (*((*(_91358_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_91358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_2096d382b:;
			{
				goto _match_end_2096d4b07;
			}
		}
		else {
			_case_begin_2096d4b7e:;
			{
				_204ca5122_pushErr((*(_91343_e)).ptr(), (*((*((*(_91358_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_204ca5485_pushSuggestion((*(_91343_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2096d4b07:;
	};
	jule::Ptr<_204a14216_Token> _9346_ident = (*((*((*((*(_91358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_204a30760_IdentExpr>(&__jule_any_type42)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_91343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1)) {
			_case_begin_2096d816b:;
			{
				goto _match_end_2096d7423;
			}
		}
		else {
			_case_begin_2096d7489:;
			{
				_204ca5122_pushErr((*(_91343_e)).ptr(), (*((*(_91358_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_2096d7423:;
	};
	jule::Ptr<_204bd8929_scopeChecker> _9436_sc = (*((*(_91343_e))))._field_lookup.cast_ptr<_204bd8929_scopeChecker>((jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data1);;
	jule::Ptr<_204cd9b90_TypeAlias> _9446_alias = jule::new_ptr<_204cd9b90_TypeAlias>(_204cd9b90_TypeAlias{._field_Scope=(*(_9436_sc))._field_tree, ._field_Public=_204c2b681_IsPub((*(_9346_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9346_ident, ._field_Ident=(*_9346_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_204ce3193_TypeSym>(_204ce3193_TypeSym{._field_Decl=jule::Ptr<_204a29b11_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_204cda982_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>(nullptr)});;
	jule::Ptr<_204ca2b7a_Data> _9546_t = _204cc7cc1_eval1((*(_91343_e)), (*((*(_91358_fc))))._field_Args[1LL]);;
	if ((_9546_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9546_t))._field_Decl) {
		(*((*(_9446_alias))._field_TypeSym))._field_Type=(*_9546_t.alloc)._field_Type;
	} else {
		jule::Ptr<_204bb36e5_comptimeTypeInfo> _9617_cti = _204ce19ee_comptimeTypeInfo((*(_9546_t))._field_Type.ptr());;
		if ((_9617_cti == nullptr)) {
			_204ca5122_pushErr((*(_91343_e)).ptr(), (*((*((*(_91358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_204ca5485_pushSuggestion((*(_91343_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9446_alias))._field_TypeSym))._field_Type=(*(_9617_cti))._field_base;
	};
	_204bdda94_checkTypeAlias(_9436_sc, &(_9446_alias));
	return _204cd4eed_buildVoidData();;
}



inline jule::Ptr<_204ca2b7a_Data> _204d6a25e_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _97335_e, jule::Ptr<_204a32b6e_FnCallExpr>* _97350_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<_204ca2b7a_Data> _9746_result = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e660_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	if (((*((*(_97350_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_97335_e)).ptr(), (*((*(_97350_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9746_result;;
	};
	if (((*((*(_97350_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_97335_e)).ptr(), (*((*((*(_97350_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _9866_d = _204cc7980_evalExprKind((*(_97335_e)), (*((*((*(_97350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9866_d == nullptr)) {
		return _9746_result;;
	};
	if ((!(_204d0853d_validTypeForXof(&((*(_9866_d))._field_Type))))) {
		_204ca5122_pushErr((*(_97335_e)).ptr(), (*((*((*(_97350_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*_9866_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9746_result))._field_Model=jule::Any(jule::new_ptr<_204b1976c_SizeofExprModel>(_204b1976c_SizeofExprModel{._field_Expr=jule::Any((*(_9866_d))._field_Type, &__jule_any_type87)}), &__jule_any_type120);
	return _9746_result;;
}



inline jule::Ptr<_204ca2b7a_Data> _204d6a68d_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _99836_e, jule::Ptr<_204a32b6e_FnCallExpr>* _99851_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<_204ca2b7a_Data> _9996_result = jule::new_ptr<_204ca2b7a_Data>(_204ca2b7a_Data{._field_untyped=false, ._field_Type=_204d5e660_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_204a9d338_Const>(nullptr)});;
	if (((*((*(_99851_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_99836_e)).ptr(), (*((*(_99851_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9996_result;;
	};
	if (((*((*(_99851_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_99836_e)).ptr(), (*((*((*(_99851_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _10116_d = _204cc7980_evalExprKind((*(_99836_e)), (*((*((*(_99851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10116_d == nullptr)) {
		return _9996_result;;
	};
	if ((!(_204d0853d_validTypeForXof(&((*(_10116_d))._field_Type))))) {
		_204ca5122_pushErr((*(_99836_e)).ptr(), (*((*((*(_99851_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_204cdad7d_Str((*_10116_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9996_result))._field_Model=jule::Any(jule::new_ptr<_204b19e21_AlignofExprModel>(_204b19e21_AlignofExprModel{._field_Expr=jule::Any((*(_10116_d))._field_Type, &__jule_any_type87)}), &__jule_any_type121);
	return _9996_result;;
}



inline jule::Ptr<_204ca2b7a_Data> _204d6aabc_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _102333_e, jule::Ptr<_204a32b6e_FnCallExpr>* _102348_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	if (((*((*(_102348_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_102333_e)).ptr(), (*((*(_102348_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_102348_fc))))._field_Args.len() > 1LL)) {
		_204ca5122_pushErr((*(_102333_e)).ptr(), (*((*((*(_102348_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_204ca2b7a_Data> _10326_d = _204cc8794_evalExpr((*(_102333_e)), (*((*(_102348_fc))))._field_Args[0LL]);;
	if ((_10326_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_204cdcb1b_GC((*(_10326_d))._field_Type.ptr())))) {
		_204ca5122_pushErr((*(_102333_e)).ptr(), (*((*((*(_102348_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_204ca2b7a_Data> _10416_result = _204cd4eed_buildVoidData();;
	(*(_10416_result))._field_Model=jule::Any(jule::new_ptr<_204b1a77e_FreeExprModel>(_204b1a77e_FreeExprModel{._field_Expr=(*(_10326_d))._field_Model}), &__jule_any_type30);
	return _10416_result;;
}



inline jule::Ptr<_204ca2b7a_Data> _204d6aeeb_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _104644_e, jule::Ptr<_204a32b6e_FnCallExpr>* _104659_fc, jule::Ptr<_204ca2b7a_Data>* _104686_d) {
	if ((!(_204ca5b17_isUnsafe((*(_104644_e)).ptr())))) {
		_204ca5122_pushErr((*(_104644_e)).ptr(), (*((*(_104659_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_104659_fc))))._field_Args.len() < 1LL)) {
		_204ca5122_pushErr((*(_104644_e)).ptr(), (*((*(_104659_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_204ca2b7a_Data> _10566_argd = _204cc8794_evalExpr((*(_104644_e)), (*((*(_104659_fc))))._field_Args[0LL]);;
	if ((_10566_argd == nullptr)) {
		return nullptr;;
	};
	if (((_204cdd138_Prim((*(_10566_argd))._field_Type.ptr()) == nullptr) || (!(_204ce7065_IsStr(_204cdd138_Prim((*(_10566_argd))._field_Type.ptr()).ptr()))))) {
		_204ca5122_pushErr((*(_104644_e)).ptr(), (*((*((*(_104659_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_204cdad7d_Str((*(_10566_argd))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_204ca35b5_IsConst(_10566_argd.ptr()))) || (!(_204b092ea_IsStr((*(_10566_argd))._field_Constant.ptr()))))) {
		_204ca5122_pushErr((*(_104644_e)).ptr(), (*((*((*(_104659_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_204ca2b7a_Data> _10716_r = _204cd4eed_buildVoidData();;
	jule::Ptr<_204b21664_FnIns> _10736_f = _204cde425_Fn((*((*(_104686_d))))._field_Type.ptr());;
	if (((*(_10736_f))._field_Generics.len() > 0LL)) {
		(*(_10716_r))._field_Type=(*((*(_10736_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_204b1a482_BackendEmitExprModel> _10786_model = jule::new_ptr<_204b1a482_BackendEmitExprModel>(_204b1a482_BackendEmitExprModel{._field_Code=_204b06bee_ReadStr((*(_10566_argd))._field_Constant.ptr()), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_104659_fc))))._field_Args.len() > 1LL)) {
		(*(_10786_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_104659_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_104659_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_209714065:;
			if (it != expr_end) {
				jule::Ptr<_204a2de45_Expr> _108415_arg = *it;
				{
					_10566_argd=_204cc7cc1_eval1((*(_104644_e)), _108415_arg);
					if ((_10566_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10566_argd))._field_Decl) {
						(*_10786_model.alloc)._field_Exprs=jule::append((*_10786_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_10566_argd.alloc)._field_Type, &__jule_any_type87); __jule_collection; }));
					} else {
						(*_10786_model.alloc)._field_Exprs=jule::append((*_10786_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10566_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_209714065:;
				++it;
				goto _iter_begin_209714065;
			}
			_iter_end_209714065:;
		};
	};
	(*(_10716_r))._field_Model=jule::Any(_10786_model, &__jule_any_type23);
	return _10716_r;;
}



inline jule::Ptr<_20561c4a0_FileInfo> _2056202b6_ParseFile(jule::Ptr<_204a19cbb_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20561c4a0_FileInfo> _276_finf = jule::new_ptr<_20561c4a0_FileInfo>(_20561c4a0_FileInfo{._field_Ast=jule::Ptr<_204a27c52_AST>(nullptr), ._field_Errors=jule::Slice<_1eeaca425_Log>(nullptr)});;
	({
		__jule_tuple_x_204a27c52_AST__jule_tuple_s_1eeaca425_Log __jule_assign_result = _20566a630_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_204a27c52_AST__jule_tuple_s_1eeaca425_Log _20566a630_parseFileset(jule::Ptr<_204a19cbb_Fileset> _5521_f) {
	__jule_tuple_x_204a27c52_AST__jule_tuple_s_1eeaca425_Log __jule_func_result;
	jule::Ptr<_20568acd2_parser> _566_p = jule::new_ptr<_20568acd2_parser>(_20568acd2_parser{._field_ast=jule::Ptr<_204a27c52_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_204a2902d_Directive>>(nullptr), ._field_errors=jule::Slice<_1eeaca425_Log>(nullptr), ._field_ep=jule::Ptr<_20567a4ec_exprBuilder>(nullptr)});;
	_20569ad14_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_204a39c0e_ScopeTree> _20566aeb0_newScope(void) {
	return jule::new_ptr<_204a39c0e_ScopeTree>(_204a39c0e_ScopeTree{._field_Parent=jule::Ptr<_204a39c0e_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_204a3959e_Stmt>(nullptr), ._field_End=jule::Ptr<_204a14216_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _20566b345_isSt(jule::Ptr<_204a14216_Token> _149_current, jule::Ptr<_204a14216_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_1433_prev))._field_Row < (*(_149_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _20566b6b9_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_204a14216_Token>>* _2026_tokens, jule::I32* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_204a14216_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U32>(17LLU)) || ((*(_263_prev))._field_Id == static_cast<jule::U32>(5LLU))) || (_204a14c61_IsBinOp((*(_263_prev))._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _20566ba82_nextStPos(jule::Slice<jule::Ptr<_204a14216_Token>>* _3415_tokens, jule::I32 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _356_braceN = 0LL;;
	jule::I32 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_204a14216_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_20978e321:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_20566b6b9_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20566b345_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_209792e7e;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_20978cdad;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_20978e563:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20566b345_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_209792e7e;
							};
						};
						goto _iter_next_20978cdad;
					}
				}
				_match_end_20978e4b9:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_20978cdad;
			};
			if ((_366_i > _3440_start)) {
				if (_20566b6b9_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_20978cdad;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20566b345_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20566b345_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_20978cdad;
			};
			_julec_label_209792e7e:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_20978cdad:;
	}
	_iter_end_20978cdad:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_204a14216_Token__jule_tuple_bool _20566be06_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_204a14216_Token>> _9628_tokens) {
	__jule_tuple_sx_204a14216_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20566ba82_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_204a14216_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_20566be06_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_20566c236_stmt>> _20566c5dd_splitStmts(jule::Slice<jule::Ptr<_204a14216_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_20566c236_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_20566c236_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_20566c236_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_204a14216_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_204a14216_Token__jule_tuple_bool __jule_assign_result = _20566be06_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_20566c236_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_20566c236_stmt>(_20566c236_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_209796c85:;
	}
	_iter_end_209796c85:;;
	return _1186_stmts;;
}



inline jule::Bool _205685b34_isTypeOp(jule::U32* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U32>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U32>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _205685e42_isTypeRange(jule::Slice<jule::Ptr<_204a14216_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216536881:;
		if (it != expr_end) {
			jule::I32 _8806_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I32 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_204a14216_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2165377b6:;
						if (it != expr_end) {
							jule::Ptr<_204a14216_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_216538b19:;
										{
											(_8858_rangeN)++;
											goto _iter_next_2165377b6;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_216539004:;
										{
											(_8858_rangeN)--;
											goto _iter_next_2165377b6;
										}
									}
									_match_end_216538e05:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _205685b34_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_2165377b6:;
							++it;
							goto _iter_begin_2165377b6;
						}
						_iter_end_2165377b6:;
					};
					return true;;
				};
				if ((!(_205685b34_isTypeOp(&((*(_8809_token))._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_216536881:;
			++it;
			_8806_i++;
			goto _iter_begin_216536881;
		}
		_iter_end_216536881:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_204a14216_Token>> _20568620b_getBlockExpr(jule::Slice<jule::Ptr<_204a14216_Token>>* _91122_tokens) {
	jule::I32 _9126_braceN = 0LL;;
	jule::I32 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21653aab6:;
		if (it != expr_end) {
			jule::I32 _9146_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_21653bb72:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_21653bc0a:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_21653baa6;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_21653bc71:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_21653bcd7:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_21653baa6:;
				};
			}
			_iter_next_21653aab6:;
			++it;
			_9146_i++;
			goto _iter_begin_21653aab6;
		}
		_iter_end_21653aab6:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token _2056865c4_splitDelim(jule::Slice<jule::Ptr<_204a14216_Token>>* _94320_tokens, jule::U32 _94345_delim) {
	__jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token __jule_func_result;
	jule::I32 _9446_func = -1LL;;
	jule::I32 _9456_rangeN = 0LL;;
	jule::I32 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_204a14216_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_216541737:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_2165417ae:;
					{
						(_9456_rangeN)++;
						goto _iter_next_2165401b4;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_216541825:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_2165401b4;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_21654188b:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_2165414a1:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_204a14216_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_204a14216_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_2165401b4:;
	}
	_iter_end_2165401b4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _20568688d_findLowestPrecOp(jule::Slice<jule::Ptr<_204a14216_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I32 _9886_precPos = -1LL;;
	jule::I32 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216546a28:;
		if (it != expr_end) {
			jule::I32 _9926_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_21654785e:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_2165478e7;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_2165478e7:;
						{
							(_9906_braceN)++;
							goto _iter_next_216546a28;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_21654795d:;
						{
							(_9906_braceN)--;
							goto _iter_next_216546a28;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_2165479c4:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_216546a28;
						}
					}
					_match_end_216547793:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_216549278:;
						{
							goto _iter_next_216546a28;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_216549311:;
						{
							goto _iter_next_216546a28;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_216549377:;
						{
							goto _iter_next_216546a28;
						}
					}
					else if ((!(_204a14c61_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_2165493dd:;
						{
							goto _iter_next_216546a28;
						}
					}
					_match_end_21654908b:;
				};
				jule::Ptr<_204a14216_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_204a14953_IsUnaryOp((*(_10213_left))._field_Id) || ((*(_10213_left))._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_216546a28;
				};
				if (((_9926_i > 1LL) && ((*(_10213_left))._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_204a14216_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*((*(_9929_token))))._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_216546a28;
						};
					};
				};
				jule::U8 _10383_p = _204a145bd_Prec((*(_9929_token)).ptr());;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_216546a28:;
			++it;
			_9926_i++;
			goto _iter_begin_216546a28;
		}
		_iter_end_216546a28:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_204a30760_IdentExpr> _205686b57_buildIdentExpr(jule::Ptr<_204a14216_Token>* _104724_token) {
	return jule::new_ptr<_204a30760_IdentExpr>(_204a30760_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_204a14216_Token__jule_tuple_int _205686e21_getRangeExprTokens(jule::Slice<jule::Ptr<_204a14216_Token>>* _105528_tokens) {
	__jule_tuple_sx_204a14216_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10566_rangeN = 0LL;;
	jule::I32 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_204a14216_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_21655112b:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_21655145b:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_2165511a3:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_216550603:;
	}
	_iter_end_216550603:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _2056872ea_isAnonFnHead(jule::Slice<jule::Ptr<_204a14216_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_216552a78:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_21655333c;
				};
				goto _case_begin_216553480;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_216553480:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_21655333c;
				};
				return true;;
			}
		}
		_match_end_21655333c:;
	};
	return false;;
}



inline jule::Bool _205687e99_checkAssignTokens(jule::Slice<jule::Ptr<_204a14216_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_204a18c98_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2165e9427:;
		if (it != expr_end) {
			jule::Ptr<_204a14216_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_2165e9c52:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_2165ea0e8:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_2165e9ee9:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_2165eb25e:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_2165eb2c5:;
						{
							goto _iter_next_2165e9427;
						}
					}
					else if (_204a1932b_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_2165eb33b:;
						{
							return true;;
						}
					}
					_match_end_2165eb1e8:;
				};
			}
			_iter_next_2165e9427:;
			++it;
			goto _iter_begin_2165e9427;
		}
		_iter_end_2165e9427:;
	};
	return false;;
}



inline _1eeaca425_Log _205688e56_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_204a19cbb_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1eeaca887_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_204a14216_Token>> _205689484_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_204a14216_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_204a14216_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I32 _396_rangeN = 1LL;;
	jule::I32 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_204a14216_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_21660131e:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_216601682:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_2166015e9:;
			};
		}
	_iter_next_2165ede21:;
	}
	_iter_end_2165ede21:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token _20568974d_rangeLast(jule::Slice<jule::Ptr<_204a14216_Token>>* _6019_tokens) {
	__jule_tuple_sx_204a14216_Token__jule_tuple_sx_204a14216_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U32>(73LLU)) && (_642_first != static_cast<jule::U32>(76LLU))) && (_642_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _706_braceN = 0LL;;
	jule::I32 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_204a14216_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_2166054ee:;
					{
						(_706_braceN)++;
						goto _iter_next_21660483e;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_21660582e:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_216605576:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_21660483e:;
	}
	_iter_end_21660483e:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log _205689c04_parts(jule::Slice<jule::Ptr<_204a14216_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_204a14216_Token__jule_tuple_s_1eeaca425_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1026_rangeN = 0LL;;
	jule::I32 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216607897:;
		if (it != expr_end) {
			jule::I32 _1046_i = it - expr->begin();
			jule::Ptr<_204a14216_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_216609789:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_216609811:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_216609877:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_216607897;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1eeaca425_Log _1155_err = _205688e56_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1eeaca425_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_2166096bd:;
				};
			}
			_iter_next_216607897:;
			++it;
			_1046_i++;
			goto _iter_begin_216607897;
		}
		_iter_end_216607897:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_204a14216_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _205689e8a_getCloseOfBrace(jule::U32 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_21660cda8:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_21660ce1e:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_21660ce85:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_21660aa10:;
			{
				return _12820_left;;
			}
		}
		_match_end_21660aadc:;
	};
}



inline _1eeaca425_Log _20568a3b9_compilerErr(jule::Ptr<_204a14216_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1eeaca887_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_204a1b2a6_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _20568a760_pushSuggestion(_1eeaca425_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1eeaca887_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_204a29b11_TypeDecl> _20569b6c7_buildVoidType(void) {
	return jule::new_ptr<_204a29b11_TypeDecl>(_204a29b11_TypeDecl{._field_Token=jule::Ptr<_204a14216_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _204decdc4_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_2167c0653:;
			{
				__jule_func_result.__jule_result_arg0=_1eeacd648_IsWindows(_200e48121_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_2167c06b9:;
			{
				__jule_func_result.__jule_result_arg0=_1eeacd956_IsDarwin(_200e48121_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_2167c0334:;
			{
				__jule_func_result.__jule_result_arg0=_1eeacdc20_IsLinux(_200e48121_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_2167c039a:;
			{
				__jule_func_result.__jule_result_arg0=_1eeace87a_IsUnix(_200e48121_OS);
			}
		}
		else {
			_case_begin_2167bec90:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_2167c0213:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _204de8232_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_2167c2bb6:;
			{
				__jule_func_result.__jule_result_arg0=_1eeace061_IsI386(_200e483c9_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_2167c2c2c:;
			{
				__jule_func_result.__jule_result_arg0=_1eeace2e7_IsAmd64(_200e483c9_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_2167c2897:;
			{
				__jule_func_result.__jule_result_arg0=_1eeace5b1_IsArm64(_200e483c9_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_2167c290d:;
			{
				__jule_func_result.__jule_result_arg0=_1eeacee96_Is64Bit(_200e483c9_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_2167c2974:;
			{
				__jule_func_result.__jule_result_arg0=_1eeacec54_Is32Bit(_200e483c9_Arch);
			}
		}
		else {
			_case_begin_2167c2303:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_2167c2776:;
	};
	return __jule_func_result;;
}



inline void _204e1469e_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_200e48121_OS); };
	if (_1eeace87a_IsUnix(_200e48121_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _204e14924_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_200e483c9_Arch); };
	if (_1eeacee96_Is64Bit(_200e483c9_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1eeacec54_Is32Bit(_200e483c9_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _204e14c10_initVars(jule::Slice<jule::Str>* _5518_vars, _204e14380_CompileInfo* _5532_info) {
	_204e1469e_setOsVars(_5518_vars);
	_204e14924_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_2167c7292:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_2167c6c31:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_2167c6bba:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_2167c6cca:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_2167c8282:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_2167c82e8:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_2167c81e9:;
	};
}



inline jule::I32 _204e150c8_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2167ca152:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_2167ca152:;
			++it;
			_886_i++;
			goto _iter_begin_2167ca152;
		}
		_iter_end_2167ca152:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _2056a0797_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__1eecb936c_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_206beddb0_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1eeccb02c_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1eeaca425_Log _2056a0aa5_flatCompilerErr(jule::Str _2820_text) {
	return _1eeaca425_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_204b1d5a6_Fn> _204d6b31a_RuntimeFindFn(jule::Ptr<_204c12139_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_204b1d5a6_Fn> _96_f = _204c13745_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_204a4a46c_Struct> _204d6b6d3_RuntimeFindStruct(jule::Ptr<_204c12139_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_204a4a46c_Struct> _186_f = _204c13349_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline jule::Uintptr _204d6c409_TypeData(jule::Any* _1414_m) {
	return ((jule::Uintptr)((*(((_204d6c21c_anyData*)(_1414_m))))._field_typePtr));;
}



inline jule::Bool _204d6c7c2_equalConst(jule::Ptr<_204a9d338_Const> _1815_l, jule::Ptr<_204a9d338_Const> _1836_r) {
	{
		
		if (_204b08a47_IsI64(_1815_l.ptr())) {
			_case_begin_21682b417:;
			{
				return (_204b08a47_IsI64(_1836_r.ptr()) && (_204b0644b_ReadI64(_1815_l) == _204b0644b_ReadI64(_1836_r)));;
			}
		}
		else if (_204b08ccd_IsU64(_1815_l.ptr())) {
			_case_begin_21682b48e:;
			{
				return (_204b08ccd_IsU64(_1836_r.ptr()) && (_204b066d2_ReadU64(_1815_l) == _204b066d2_ReadU64(_1836_r)));;
			}
		}
		else if (_204b09581_IsF64(_1815_l)) {
			_case_begin_21682b516:;
			{
				return (_204b09581_IsF64(_1836_r) && (_204b06e85_ReadF64(_1815_l) == _204b06e85_ReadF64(_1836_r)));;
			}
		}
		else if (_204b092ea_IsStr(_1815_l)) {
			_case_begin_21682b58d:;
			{
				return (_204b092ea_IsStr(_1836_r) && (_204b06bee_ReadStr(_1815_l) == _204b06bee_ReadStr(_1836_r)));;
			}
		}
		else if (_204b09064_IsBool(_1815_l)) {
			_case_begin_21682b615:;
			{
				return (_204b09064_IsBool(_1836_r) && (_204b06968_ReadBool(_1815_l) == _204b06968_ReadBool(_1836_r)));;
			}
		}
		else if (_204b09817_IsNil(_1815_l)) {
			_case_begin_21682b7ad:;
			{
				return _204b09817_IsNil(_1836_r);;
			}
		}
		else {
			_case_begin_21682b329:;
			{
				return false;;
			}
		}
		_match_end_21682b22a:;
	};
}



inline jule::Bool _204d6cb46_equalCasting(jule::Ptr<_204b12a0c_CastingExprModel> _3717_l, jule::Ptr<_204b12a0c_CastingExprModel> _3745_r) {
	if ((!(_204cdb1be_Equal((*(_3717_l))._field_Type, (*(_3745_r))._field_Type)))) {
		return false;;
	};
	return _204d6da7b_EqualModels((*((*(_3717_l))._field_Expr))._field_Model, (*(*(_3745_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _204d6d00e_equalUnary(jule::Ptr<_204b117a8_UnaryExprModel> _4415_l, jule::Ptr<_204b117a8_UnaryExprModel> _4441_r) {
	if ((((*((*(_4415_l))._field_Op))._field_Id != (*(*(_4441_r))._field_Op.alloc)._field_Id) || ((*((*(_4415_l))._field_Op))._field_Kind != (*(*(_4441_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _204d6da7b_EqualModels((*((*(_4415_l))._field_Expr))._field_Model, (*(*(_4441_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _204d6d383_equalIndexing(jule::Ptr<_204b13c3e_IndexingExprModel> _5118_l, jule::Ptr<_204b13c3e_IndexingExprModel> _5147_r) {
	return (_204d6da7b_EqualModels((*((*(_5118_l))._field_Expr))._field_Model, (*(*(_5147_r))._field_Expr.alloc)._field_Model) && _204d6da7b_EqualModels((*((*_5118_l.alloc)._field_Index))._field_Model, (*(*(_5147_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _204d6d707_equalBinary(jule::Ptr<_204b113ce_BinaryExprModel> _5616_l, jule::Ptr<_204b113ce_BinaryExprModel> _5643_r) {
	if ((((*((*(_5616_l))._field_Op))._field_Id != (*(*(_5643_r))._field_Op.alloc)._field_Id) || ((*((*(_5616_l))._field_Op))._field_Kind != (*(*(_5643_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_204d6da7b_EqualModels((*((*(_5616_l))._field_Left))._field_Model, (*(*(_5643_r))._field_Left.alloc)._field_Model) && _204d6da7b_EqualModels((*((*_5616_l.alloc)._field_Right))._field_Model, (*(*(_5643_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _204d6da7b_EqualModels(jule::Any _6716_l, jule::Any _6736_r) {
	if ((_204d6c409_TypeData(&(_6716_l)) != _204d6c409_TypeData(&(_6736_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6716_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_21683ab41:;
			{
				return (_6716_l.unsafe_cast_ptr<_204c5319c_Var>() == _6736_r.cast_ptr<_204c5319c_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_21683aba7:;
			{
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _753_li = _6716_l.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>();;
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _763_ri = _6736_r.cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_753_li))._field_Field == (*(_763_ri))._field_Field) && _204d6da7b_EqualModels((*((*_753_li.alloc)._field_Expr))._field_Model, (*(*(_763_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_21683ac2e:;
			{
				return _204d6c7c2_equalConst(_6716_l.unsafe_cast_ptr<_204a9d338_Const>(), _6736_r.cast_ptr<_204a9d338_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_21683a800:;
			{
				return _204d6cb46_equalCasting(_6716_l.unsafe_cast_ptr<_204b12a0c_CastingExprModel>(), _6736_r.cast_ptr<_204b12a0c_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_21683a866:;
			{
				return _204d6d00e_equalUnary(_6716_l.unsafe_cast_ptr<_204b117a8_UnaryExprModel>(), _6736_r.cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_21683a8cc:;
			{
				return _204d6d383_equalIndexing(_6716_l.unsafe_cast_ptr<_204b13c3e_IndexingExprModel>(), _6736_r.cast_ptr<_204b13c3e_IndexingExprModel>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_21683a943:;
			{
				return _204d6d707_equalBinary(_6716_l.unsafe_cast_ptr<_204b113ce_BinaryExprModel>(), _6736_r.cast_ptr<_204b113ce_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_21683a789:;
			{
				return false;;
			}
		}
		_match_end_21683a190:;
	};
}



inline void _2056a5390_pushPasses(jule::Ptr<_204c148ab_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216840abe:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _12414_f = *it;
			{
				_julec_label_216841828:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216841c68:;
					if (it != expr_end) {
						_204c01612_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_216841c68;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_216842a05:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_216841c68;
										};
									}
									_iter_next_216842a05:;
									++it;
									goto _iter_begin_216842a05;
								}
								_iter_end_216842a05:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_216841c68:;
						++it;
						goto _iter_begin_216841c68;
					}
					_iter_end_216841c68:;
				};
			}
			_iter_next_216840abe:;
			++it;
			goto _iter_begin_216840abe;
		}
		_iter_end_216840abe:;
	};
}



inline jule::Slice<jule::Str> _2056a5758_getAllUniquePasses(jule::Ptr<_204c148ab_Package>* _14028_pkg, jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_2056a5390_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216842296:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_2056a5390_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_216842296:;
			++it;
			goto _iter_begin_216842296;
		}
		_iter_end_216842296:;
	};
	return _14110_passes;;
}



inline _204e14380_CompileInfo _2056a5967_buildCompileInfo(void) {
	_204e14380_CompileInfo _1546_info = _204e14380_CompileInfo{._field_Prod=_200e4e589_Production, ._field_Test=_200e4dbc6_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _200e4bcb2_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_216844a7e:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_216844bc2:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_216844b5b:;
	};
	{
		auto &_match_expr{ _200e4d3bd_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_216844c49:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_216845354:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_2168453ba:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_216845ca0:;
	};
	return _1546_info;;
}



inline void _2056a5c20_pushRuntimeToAST(jule::Ptr<_204a27c52_AST>* _17926_f) {
	jule::Ptr<_204a42a5d_UseDecl> _1806_decl = jule::new_ptr<_204a42a5d_UseDecl>(_204a42a5d_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_204a14216_Token>(_204a14216_Token{._field_File=jule::Ptr<_204a19cbb_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U32>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_204a42a5d_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _2056a643a_IterPackages(jule::Ptr<_2056a39dc_IR>* _722_ir, jule::Fn<void,jule::Ptr<_204c148ab_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216860b99:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_216860b99:;
			++it;
			goto _iter_begin_216860b99;
		}
		_iter_end_216860b99:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _2056a668d_IterFiles(jule::Ptr<_204c148ab_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_204b248a9_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216866908:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_216866908:;
			++it;
			goto _iter_begin_216866908;
		}
		_iter_end_216866908:;
	};
}



inline void _2056a6979_IterTraitMethods(jule::Ptr<_204b28cba_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_204b1d5a6_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168675eb:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_2168675eb:;
			++it;
			goto _iter_begin_2168675eb;
		}
		_iter_end_2168675eb:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216867ac4:;
		if (it != expr_end) {
			jule::Ptr<_204ce3193_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_204b28cba_Trait> _297_it = _204cde942_Trait((*(_2814_inh))._field_Type.ptr());;
				_2056a6979_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_216867ac4:;
			++it;
			goto _iter_begin_216867ac4;
		}
		_iter_end_216867ac4:;
	};
}



inline jule::Bool _2056a8dee_IsForwarded(jule::Ptr<_204bd11d5_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_21688da51:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_204ca2b7a_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_21688dc93:;
						{
							return true;;
						}
					}
					else {
						_case_begin_21688e90e:;
						{
							return false;;
						}
					}
					_match_end_21688e898:;
				};
			}
		}
		else {
			_case_begin_21688dbc7:;
			{
				return true;;
			}
		}
		_match_end_21688db61:;
	};
}



inline jule::Bool _2056a90ca_IsExprComesFromBind(jule::Ptr<_204ca2b7a_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_216890459:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_204c5319c_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_216890668:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_21688e4be:;
			{
				return false;;
			}
		}
		_match_end_21688e458:;
	};
}



inline jule::Bool _2056a9394_IsAny(jule::Ptr<_204cda982_Type>* _4015_t) {
	if ((_204cddb72_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_204ce3a9a_Prim> _442_prim = _204cdd138_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _204ce72eb_IsAny(_442_prim.ptr()));;
}



inline jule::Bool _2056a96d5_IsClosure(jule::Ptr<_204b141e5_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _2056a996b_IsOpMethod(jule::Ptr<_204b1d5a6_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_204b21664_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _2056a9ce0_IsTraitMethod(jule::Ptr<_204a4d2c7_StructIns>* _6823_owner, jule::Ptr<_204b21664_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216895e54:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _6914_t = *it;
			{
				if ((_204b2999c_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_216895e54:;
			++it;
			goto _iter_begin_216895e54;
		}
		_iter_end_216895e54:;
	};
	return false;;
}



inline jule::Bool _2056aa164_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _200e33c22_HasPrefix(_8217_f, _200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _200e47560_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_204a2902d_Directive> _2056ab000_FindDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168a269c:;
		if (it != expr_end) {
			jule::Ptr<_204a2902d_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_2168a269c:;
			++it;
			goto _iter_begin_2168a269c;
		}
		_iter_end_2168a269c:;
	};
	return nullptr;;
}



inline jule::Bool _2056ab3b8_HasDirective(jule::Slice<jule::Ptr<_204a2902d_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_2056ab000_FindDirective(_2118_directives, _2149_tag) != nullptr);;
}



inline jule::I32 _2056abe02_FindTraitTypeOffsetS(jule::Ptr<_204b28cba_Trait> _3925_t, jule::Ptr<_204a4d2c7_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _436_i = 0LL;;
	{
		auto expr = &((*(_3925_t))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168a5e64:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2168a6ddd:;
						if (it != expr_end) {
							jule::Ptr<_204a4d2c7_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_2168a6ddd:;
							++it;
							goto _iter_begin_2168a6ddd;
						}
						_iter_end_2168a6ddd:;
					};
					goto _iter_end_2168a5e64;
				} else {
					_436_i+=(*(*(_449_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_2168a5e64:;
			++it;
			goto _iter_begin_2168a5e64;
		}
		_iter_end_2168a5e64:;
	};
	return -1LL;;
}



inline jule::I32 _2056ac276_FindTraitTypeOffset(jule::Ptr<_204b28cba_Trait> _6224_t, jule::Ptr<_204cda982_Type> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_204a4d2c7_StructIns> _6610_s = nullptr;;
	if ((_204cdd3be_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_204cdd3be_Sptr(_6245_k.ptr())))._field_Elem;
	};
	_6610_s=_204cde6ab_Struct(_6245_k.ptr());
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _2056abe02_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_204b21664_FnIns> _2056ac6a5_FindOperator(jule::Ptr<_204a4d2c7_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_2168aa83c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_2168aa63e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_2168aa6a5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_2168aa8a3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_2168aa92a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_2168aa9a2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_2168aaac3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_2168aab39:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_2168aaba0:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_2168aac16:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_2168aac7c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_2168aad04:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_2168aad7b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_2168aae03:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_2168aae7a:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_2168ab002:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_2168ab079:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_2168ab101:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_2168ab178:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_2168ab200:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_2168ab277:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_2168ab2ee:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_2168ab376:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_2168ab3ed:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_2168ab475:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_2168aa276:;
			{
				return nullptr;;
			}
		}
		_match_end_2168aa3a8:;
	};
}



inline jule::Ptr<_204b21664_FnIns> _2056aca29_FindFnGenericInstance(jule::Ptr<_204b1d5a6_Fn>* _14731_f, jule::Slice<jule::Ptr<_204cda982_Type>> _14745_generics) {
	_julec_label_2168b3b86:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168b7dcc:;
		if (it != expr_end) {
			jule::Ptr<_204b21664_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2168b886c:;
					if (it != expr_end) {
						jule::I32 _1507_i = it - expr->begin();
						{
							if ((!(_204cdb1be_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Type, _14745_generics[_1507_i])))) {
								goto _iter_next_2168b7dcc;
							};
						}
						_iter_next_2168b886c:;
						++it;
						_1507_i++;
						goto _iter_begin_2168b886c;
					}
					_iter_end_2168b886c:;
				};
				return _14914_ins;;
			}
			_iter_next_2168b7dcc:;
			++it;
			goto _iter_begin_2168b7dcc;
		}
		_iter_end_2168b7dcc:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_204a4d2c7_StructIns> _2056acead_FindStructGenericInstance(jule::Ptr<_204a4a46c_Struct>* _16335_s, jule::Slice<jule::Ptr<_204cda982_Type>> _16353_generics) {
	_julec_label_2168b8262:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168b9ecd:;
		if (it != expr_end) {
			jule::Ptr<_204a4d2c7_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2168ba96d:;
					if (it != expr_end) {
						jule::I32 _1667_i = it - expr->begin();
						{
							if ((!(_204cdb1be_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Type, _16353_generics[_1667_i])))) {
								goto _iter_next_2168b9ecd;
							};
						}
						_iter_next_2168ba96d:;
						++it;
						_1667_i++;
						goto _iter_begin_2168ba96d;
					}
					_iter_end_2168ba96d:;
				};
				return _16514_ins;;
			}
			_iter_next_2168b9ecd:;
			++it;
			goto _iter_begin_2168b9ecd;
		}
		_iter_end_2168b9ecd:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Ptr<_204c12139_ImportInfo> _2056ad2aa_SelectImport(jule::Slice<jule::Ptr<_204c12139_ImportInfo>> _17821_imports, jule::Str _17851_linkpath) {
	{
		auto expr = &(_17821_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2168ba363:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> _17914_imp = *it;
			{
				if (((*(_17914_imp))._field_LinkPath == _17851_linkpath)) {
					return _17914_imp;;
				};
			}
			_iter_next_2168ba363:;
			++it;
			goto _iter_begin_2168ba363;
		}
		_iter_end_2168ba363:;
	};
	return nullptr;;
}



inline jule::Bool _21685b865_isOrdered(jule::Ptr<_204c5319c_Var>* _1418_t, jule::Slice<jule::Ptr<_204c5319c_Var>> _1425_s) {
	_julec_label_21685d867:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21685dcc9:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_21685e659:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_21685dcc9;
							};
						}
					}
					_match_end_21685e5d2:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21685ed41:;
					if (it != expr_end) {
						jule::Ptr<_204c5319c_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_21685dcc9;
							};
						}
						_iter_next_21685ed41:;
						++it;
						goto _iter_begin_21685ed41;
					}
					_iter_end_21685ed41:;
				};
				return false;;
			}
			_iter_next_21685dcc9:;
			++it;
			goto _iter_begin_21685dcc9;
		}
		_iter_end_21685dcc9:;
	};
	return true;;
}

inline jule::Bool _2168625e6_isOrdered(jule::Ptr<_204a4a46c_Struct>* _1418_t, jule::Slice<jule::Ptr<_204a4a46c_Struct>> _1425_s) {
	_julec_label_2168645a4:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216864a16:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216865462:;
					if (it != expr_end) {
						jule::Ptr<_204a4a46c_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_216864a16;
							};
						}
						_iter_next_216865462:;
						++it;
						goto _iter_begin_216865462;
					}
					_iter_end_216865462:;
				};
				return false;;
			}
			_iter_next_216864a16:;
			++it;
			goto _iter_begin_216864a16;
		}
		_iter_end_216864a16:;
	};
	return true;;
}



inline void _216858a4e_order(jule::Slice<jule::Ptr<_204c5319c_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_216859016:;
	jule::I32 _406_j = _386_i;;
	_julec_label_216859ca3:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_204c5319c_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_21685aee6:;
				if (it != expr_end) {
					jule::Ptr<_204c5319c_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_21685a358;
						};
					}
					_iter_next_21685aee6:;
					++it;
					goto _iter_begin_21685aee6;
				}
				_iter_end_21685aee6:;
			};
			if (_21685b865_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_21685a358:;
	}
	_iter_end_21685a358:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_216859016;
	};
}

inline void _216859632_order(jule::Slice<jule::Ptr<_204a4a46c_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_216859368:;
	jule::I32 _406_j = _386_i;;
	_julec_label_21685e35c:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_204a4a46c_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_216861c77:;
				if (it != expr_end) {
					jule::Ptr<_204a4a46c_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_2168610d9;
						};
					}
					_iter_next_216861c77:;
					++it;
					goto _iter_begin_216861c77;
				}
				_iter_end_216861c77:;
			};
			if (_2168625e6_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_2168610d9:;
	}
	_iter_end_2168610d9:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_216859368;
	};
}



inline void _216a986d9_Reverse(jule::Slice<jule::Any> _7327_s) {
	jule::I32 _746_i;
	jule::I32 _7413_j;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = (_7327_s.len() - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	});
	for (; (_746_i < _7413_j); ({
		jule::I32 ___jule_assign_arg = (_746_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_216a99465:;
	}
	_iter_end_216a99465:;;
}

inline void _1d5212637_Reverse(jule::Slice<jule::U8> _7327_s) {
	jule::I32 _746_i;
	jule::I32 _7413_j;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = (_7327_s.len() - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	});
	for (; (_746_i < _7413_j); ({
		jule::I32 ___jule_assign_arg = (_746_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_1d521336e:;
	}
	_iter_end_1d521336e:;;
}



inline void _216a972ed_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I32 _4230_r) {
	_216a986d9_Reverse(_4222_s.slice(0LL, _4230_r));
	_216a986d9_Reverse(_4222_s.slice(_4230_r));
	_216a986d9_Reverse(_4222_s);
}

inline void _1d5211290_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r) {
	_1d5212637_Reverse(_4222_s.slice(0LL, _4230_r));
	_1d5212637_Reverse(_4222_s.slice(_4230_r));
	_1d5212637_Reverse(_4222_s);
}



inline void _216a93706_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I32 _4831_r) {
	_216a972ed_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}

inline void _1d520c6ed_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r) {
	_1d5211290_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _216a91d97_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::Any);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}

inline jule::Bool _1d520adc2_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::Any> _216a8c59b_Insert(jule::Slice<jule::Any> _7226_s, jule::I32 _7232_i, jule::Slice<jule::Any> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::Any> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_216a91d97_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_216a93706_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}

inline jule::Slice<jule::U8> _1d5206a6b_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1d520adc2_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_1d520c6ed_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline void _20682e2b5_EliminateDefines(jule::Ptr<_2056a39dc_IR>* _36526_ir) {
	jule::Ptr<_20682b0d6_ObjectDeadCode> _3666_ocd = static__20682b5c0_new(_36526_ir);;
	_20682deb8_elimanate(_3666_ocd);
}



inline jule::Bool _20682e5c3_isAllMethodsLive(jule::Ptr<_204a4a46c_Struct> _37121_s) {
	return ((_37121_s == (*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_Map) || (_37121_s == (*((*(_2056ae454_ProgramMeta))._field_Runtime))._field_MapIterator));;
}



inline void _206833440_eliminateDeadCodeOfScope(jule::Ptr<_204bd11d5_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_204bd3c32_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd3c32_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bd3c32_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_204bd4392_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_204bd4392_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204bd4392_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_20683020b_scopeDeadCode> _2216_sdc = jule::new_ptr<_20683020b_scopeDeadCode>(_20683020b_scopeDeadCode{._field_parent=jule::Ptr<_20683020b_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_204bd3c32_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_204bd4392_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_206833143_optimizeStmts(_2216_sdc);
	};
}



inline void _2068336b5_eliminateScopeFunctions(jule::Slice<jule::Ptr<_204b1d5a6_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216967a09:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21696a589:;
					if (it != expr_end) {
						jule::Ptr<_204b21664_FnIns> _23215_ins = *it;
						{
							_206833440_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_21696a589:;
						++it;
						goto _iter_begin_21696a589;
					}
					_iter_end_21696a589:;
				};
			}
			_iter_next_216967a09:;
			++it;
			goto _iter_begin_216967a09;
		}
		_iter_end_216967a09:;
	};
}



inline void _2068338e6_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_204a4a46c_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21696ab2d:;
		if (it != expr_end) {
			jule::Ptr<_204a4a46c_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21696b689:;
					if (it != expr_end) {
						jule::Ptr<_204a4d2c7_StructIns> _24115_ins = *it;
						{
							_2068336b5_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_21696b689:;
						++it;
						goto _iter_begin_21696b689;
					}
					_iter_end_21696b689:;
				};
			}
			_iter_next_21696ab2d:;
			++it;
			goto _iter_begin_21696ab2d;
		}
		_iter_end_21696ab2d:;
	};
}



inline void _206833b9e_eliminateFunctionsScopePackage(jule::Ptr<_204c148ab_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21696bc2d:;
		if (it != expr_end) {
			jule::Ptr<_204b248a9_SymTab> _24814_f = *it;
			{
				_2068336b5_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_2068338e6_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_21696bc2d:;
			++it;
			goto _iter_begin_21696bc2d;
		}
		_iter_end_21696bc2d:;
	};
}



inline void _206833d9c_eliminateScopePackage(jule::Ptr<_204c148ab_Package>* _25431_pkg) {
	_206833b9e_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _2068340cd_EliminateScopes(jule::Ptr<_2056a39dc_IR>* _25925_ir) {
	jule::I32 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_204c12139_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_206833d9c_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_21696dacb:;
	}
	_iter_end_21696dacb:;;
	_206833d9c_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline void _206508b4e_possibleNilRemove(jule::Ptr<_206507b70_nils>* _7527_n, jule::Any _7537_m) {
	if (((*(_7527_n)) != nullptr)) {
		_206508456_removeVar((*(_7527_n)).ptr(), _206509622_getNilVar(_7537_m));
	};
}



inline jule::Bool _206509017_isGuaranteedNonNilExpr(jule::Ptr<_206507b70_nils>* _8132_n, jule::Any _8142_m) {
	{
		auto &_match_expr{ _8142_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_2169d698a:;
			{
				return true;;
			}
		}
		_match_end_2169d6924:;
	};
	return (((*(_8132_n)) != nullptr) && _206508797_isSafe((*(_8132_n)).ptr(), _206509622_getNilVar(_8142_m)));;
}



inline jule::Bool _2065092d1_isNilValidType(jule::Ptr<_204cda982_Type> _8923_t) {
	return (_204cdd3be_Sptr(_8923_t.ptr()) != nullptr);;
}



inline jule::Uintptr _206509622_getNilVar(jule::Any _9114_m) {
	if ((!(_206719425_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9114_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2169d8041:;
			{
				jule::Ptr<_204c5319c_Var> _1003_v = _9114_m.unsafe_cast_ptr<_204c5319c_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9114_m.unsafe_cast_ptr<_204c5319c_Var>());;
				};
				return _206509622_getNilVar((*((*((*(_1003_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_2169d8492:;
			{
				return static_cast<jule::Uintptr>((*(_9114_m.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_2169d7eca:;
	};
	return 0LLU;;
}



inline jule::Bool _206706643_isConstantValidConditionalCase(jule::Ptr<_204bd1603_If>* _97036_i) {
	{
		auto &_match_expr{ (*((*(_97036_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_2169de465:;
			{
				jule::Ptr<_204a9d338_Const> _9733_c = (*((*(_97036_i))))._field_Expr.unsafe_cast_ptr<_204a9d338_Const>();;
				return (_204b09064_IsBool(_9733_c.ptr()) && _204b06968_ReadBool(_9733_c));;
			}
		}
		_match_end_2169e1d19:;
	};
	return false;;
}



inline jule::Bool _206706951_isUnreachableExpr(jule::Any* _97923_expr) {
	{
		auto &_match_expr{ (*(_97923_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_2169e29eb:;
			{
				jule::Ptr<_204a9d338_Const> _9823_c = (*(_97923_expr)).cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
				return (_204b09064_IsBool(_9823_c.ptr()) && (!(_204b06968_ReadBool(_9823_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_2169de4cb:;
			{
				jule::Ptr<_204b113ce_BinaryExprModel> _9853_m = (*(_97923_expr)).cast_ptr<_204b113ce_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_9853_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_206706951_isUnreachableExpr(&((*((*_9853_m.alloc)._field_Left))._field_Model)) || _206706951_isUnreachableExpr(&((*((*_9853_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_2169e3447:;
	};
	return false;;
}



inline jule::Bool _206706c1a_isConstantValidMatchCase(jule::Ptr<_204bd651a_Case>* _99430_case) {
	{
		auto expr = &((*((*(_99430_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2169e6bed:;
		if (it != expr_end) {
			jule::Ptr<_204ca2b7a_Data> *_9959_expr = it;
			{
				if (((_204ca35b5_IsConst((*(_9959_expr)).ptr()) && _204b09064_IsBool((*(*(_9959_expr)).alloc)._field_Constant.ptr())) && _204b06968_ReadBool((*((*(_9959_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_2169e6bed:;
			++it;
			goto _iter_begin_2169e6bed;
		}
		_iter_end_2169e6bed:;
	};
	return false;;
}



inline jule::Bool _20670705b_isUnreachableConditionalCase(jule::Ptr<_204bd1603_If>* _100334_i) {
	return _206706951_isUnreachableExpr(&((*((*(_100334_i))))._field_Expr));;
}



inline jule::Bool _2067072e2_isUnreachableMatchCase(jule::Ptr<_204bd651a_Case>* _100728_case) {
	{
		auto expr = &((*((*(_100728_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2169e8bde:;
		if (it != expr_end) {
			jule::Ptr<_204ca2b7a_Data> *_10089_expr = it;
			{
				if ((!(_206706951_isUnreachableExpr(&((*((*(_10089_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_2169e8bde:;
			++it;
			goto _iter_begin_2169e8bde;
		}
		_iter_end_2169e8bde:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _20670e75b_checkForBitShiftOpt(jule::Ptr<_204b10dd4_OperandExprModel>* _91825_l, jule::Ptr<_204b10dd4_OperandExprModel>* _91854_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_204ba1c99_IsInt(_204cdad7d_Str((*((*(_91825_l))))._field_Type.ptr())))) || (!(_204ba1c99_IsInt(_204cdad7d_Str((*((*(_91854_r))))._field_Type.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_204b074a2_AsU64((*((*(_91854_r))))._field_Model.cast_ptr<_204a9d338_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _9262_j = _2019c5906_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _9272_z = static_cast<jule::U64>(_9262_j);;
	if ((static_cast<jule::F64>(_9272_z) != _9262_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _9272_z;
	return __jule_func_result;;
}



inline jule::Bool _20670eb24_areSameLvalueExprModel(jule::Any* _93528_l, jule::Any* _93549_r) {
	{
		auto &_match_expr{ (*(_93528_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_216adb5c8:;
			{
				return ((*(_93549_r)) == (*(_93528_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_216adb3db:;
			{
				{
					auto &_match_expr{ (*(_93549_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_216adbe69:;
						{
							goto _match_end_216adc3ed;
						}
					}
					else {
						_case_begin_216adc464:;
						{
							return false;;
						}
					}
					_match_end_216adc3ed:;
				};
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _9483_lsi = (*(_93528_l)).cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _9493_rsi = (*(_93549_r)).cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_9483_lsi))._field_Field != (*(_9493_rsi))._field_Field)) {
					return false;;
				};
				return _20670eb24_areSameLvalueExprModel(&((*((*(_9483_lsi))._field_Expr))._field_Model), &((*(*(_9493_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_216adb650:;
			{
				{
					auto &_match_expr{ (*(_93549_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_216addc5c:;
						{
							jule::Ptr<_204b117a8_UnaryExprModel> _9614_ul = (*(_93528_l)).cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_204b117a8_UnaryExprModel> _9624_ur = (*(_93549_r)).cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_9614_ul))._field_Op))._field_Id != (*(*(_9624_ur))._field_Op.alloc)._field_Id) || ((*((*(_9614_ul))._field_Op))._field_Kind != (*(*(_9624_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _20670eb24_areSameLvalueExprModel(&((*((*(_9614_ul))._field_Expr))._field_Model), &((*(*(_9624_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_216addbd5:;
				};
			}
		}
		_match_end_216adb562:;
	};
	return false;;
}



inline void _206711bd1_possibleDynamicRemove(jule::Ptr<_206710b47_dynamic>* _7631_d, jule::Any _7644_m) {
	if (((*(_7631_d)) != nullptr)) {
		_20671142d_removeVar((*(_7631_d)).ptr(), _20671275e_getDynamicVar(_7644_m));
	};
}



inline jule::Bool _206711ede_isDynamicValidType(jule::Ptr<_204cda982_Type> _8227_t) {
	return _2056a9394_IsAny(&(_8227_t));;
}



inline jule::Ptr<_204cda982_Type> _20671241d_isTypeGuaranteedDynamicData(jule::Ptr<_206710b47_dynamic>* _8437_dy, jule::Ptr<_204cda982_Type> _8455_t, jule::Any _8475_m) {
	if (_204cdbab5_IsNil(_8455_t.ptr())) {
		return nullptr;;
	};
	jule::Bool _882_isAny = _2056a9394_IsAny(&(_8455_t));;
	if (((!(_882_isAny)) && (_204cde942_Trait(_8455_t.ptr()) == nullptr))) {
		return _8455_t;;
	};
	if ((!(_882_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8475_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_216bb664d:;
			{
				jule::Ptr<_204b12a0c_CastingExprModel> _977_cem = _8475_m.unsafe_cast_ptr<_204b12a0c_CastingExprModel>();;
				return _20671241d_isTypeGuaranteedDynamicData(_8437_dy, (*(_977_cem))._field_ExprType, (*((*_977_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_216bb65d7:;
	};
	jule::Uintptr _1002_var = _20671275e_getDynamicVar(_8475_m);;
	if ((_1002_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8437_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bb8375:;
		if (it != expr_end) {
			_206710806_dynamicVar _10414_v = *it;
			{
				if ((_10414_v._field_var == _1002_var)) {
					return _10414_v._field_kind;;
				};
			}
			_iter_next_216bb8375:;
			++it;
			goto _iter_begin_216bb8375;
		}
		_iter_end_216bb8375:;
	};
	return nullptr;;
}



inline jule::Uintptr _20671275e_getDynamicVar(jule::Any _11218_m) {
	if ((!(_20671ae0a_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11218_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_216bb9695:;
			{
				jule::Ptr<_204c5319c_Var> _1183_v = _11218_m.unsafe_cast_ptr<_204c5319c_Var>();;
				if ((!((*(_1183_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11218_m.unsafe_cast_ptr<_204c5319c_Var>());;
				};
				return _20671275e_getDynamicVar((*((*((*(_1183_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_216bb97c7:;
			{
				return static_cast<jule::Uintptr>((*(_11218_m.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_216bb971c:;
			{
				jule::Ptr<_204b117a8_UnaryExprModel> _1293_uem = _11218_m.unsafe_cast_ptr<_204b117a8_UnaryExprModel>();;
				if (((*((*(_1293_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _20671275e_getDynamicVar((*((*_1293_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_216bb962e:;
	};
	return 0LLU;;
}



inline void _216bcb663__removeDeads(jule::Ptr<_206715a2b_boundary>* _2340_alive, jule::Ptr<_206715a2b_boundary>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_216bcc1e1:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bcd1e2:;
		if (it != expr_end) {
			_2067156da_boundaryVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_216bcd1e2;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216bce05b:;
					if (it != expr_end) {
						_2067156da_boundaryVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_216bcd1e2;
							};
						}
						_iter_next_216bce05b:;
						++it;
						goto _iter_begin_216bce05b;
					}
					_iter_end_216bce05b:;
				};
				_206716312_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_216bcd1e2:;
			++it;
			goto _iter_begin_216bcd1e2;
		}
		_iter_end_216bcd1e2:;
	};
}

inline void _216bcd500__removeDeads(jule::Ptr<_206507b70_nils>* _2340_alive, jule::Ptr<_206507b70_nils>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_216bd06cd:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bd168a:;
		if (it != expr_end) {
			_20650782e_nilVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_216bd168a;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216bd2504:;
					if (it != expr_end) {
						_20650782e_nilVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_216bd168a;
							};
						}
						_iter_next_216bd2504:;
						++it;
						goto _iter_begin_216bd2504;
					}
					_iter_end_216bd2504:;
				};
				_206508456_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_216bd168a:;
			++it;
			goto _iter_begin_216bd168a;
		}
		_iter_end_216bd168a:;
	};
}

inline void _216bd1ab9__removeDeads(jule::Ptr<_206710b47_dynamic>* _2340_alive, jule::Ptr<_206710b47_dynamic>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_216bd3bdc:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bd4bdd:;
		if (it != expr_end) {
			_206710806_dynamicVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_216bd4bdd;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216bd5a57:;
					if (it != expr_end) {
						_206710806_dynamicVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_216bd4bdd;
							};
						}
						_iter_next_216bd5a57:;
						++it;
						goto _iter_begin_216bd5a57;
					}
					_iter_end_216bd5a57:;
				};
				_20671142d_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_216bd4bdd:;
			++it;
			goto _iter_begin_216bd4bdd;
		}
		_iter_end_216bd4bdd:;
	};
}



inline jule::Bool _206716a93_isValidBoundaryInfo(jule::Any _8524_m) {
	return _2067172d0_fitsSize(_8524_m, _8524_m);;
}



inline jule::I32 _206716e5b_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9040_expr) {
	{
		auto expr = &(_9016_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bdcc29:;
		if (it != expr_end) {
			jule::I32 _916_i = it - expr->begin();
			jule::Any *_919_m = it;
			{
				if (_2067172d0_fitsSize((*(_919_m)), _9040_expr)) {
					return _916_i;;
				};
			}
			_iter_next_216bdcc29:;
			++it;
			_916_i++;
			goto _iter_begin_216bdcc29;
		}
		_iter_end_216bdcc29:;
	};
	return -1LL;;
}



inline jule::Bool _2067172d0_fitsSize(jule::Any _9913_e1, jule::Any _9934_e2) {
	if ((_204d6c409_TypeData(&(_9913_e1)) != _204d6c409_TypeData(&(_9934_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9913_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_216bde6cb:;
			{
				jule::Ptr<_204a9d338_Const> _1053_exprConst = _9934_e2.cast_ptr<_204a9d338_Const>(&__jule_any_type15);;
				return ((_204b07738_AsF64(_1053_exprConst.ptr()) >= 0LL) && _204b0b440_GtEq(_9913_e1.unsafe_cast_ptr<_204a9d338_Const>().ptr(), (*_1053_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_216bde742:;
			{
				return (_9934_e2 == _9913_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_216bde7b9:;
			{
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _1103_ssi1 = _9913_e1.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>();;
				jule::Ptr<_204b15e50_StructSubIdentExprModel> _1113_ssi2 = _9934_e2.cast_ptr<_204b15e50_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_204d6da7b_EqualModels((*((*(_1103_ssi1))._field_Expr))._field_Model, (*(*(_1113_ssi2))._field_Expr.alloc)._field_Model) && ((*_1103_ssi1.alloc)._field_Field == (*(_1113_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_216bde38a:;
			{
				jule::Ptr<_204b117a8_UnaryExprModel> _1143_uem1 = _9913_e1.unsafe_cast_ptr<_204b117a8_UnaryExprModel>();;
				jule::Ptr<_204b117a8_UnaryExprModel> _1153_uem2 = _9934_e2.cast_ptr<_204b117a8_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1143_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*((*(_1143_uem1))._field_Op))._field_Id != (*(*(_1153_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _2067172d0_fitsSize((*((*(_1143_uem1))._field_Expr))._field_Model, (*(*(_1153_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_216bde324:;
			{
				return false;;
			}
		}
		_match_end_216bdde4a:;
	};
}



inline void _206717610_possibleBoundaryRemove(jule::Ptr<_206715a2b_boundary>* _12532_b, jule::Any _12546_model) {
	{
		auto expr = &((*((*(_12532_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216bdeb71:;
		if (it != expr_end) {
			_2067156da_boundaryVar _12714_v = *it;
			{
				{
					auto expr = &(_12714_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_216be6727:;
					if (it != expr_end) {
						jule::I32 _1287_i = it - expr->begin();
						jule::Any _12810_max = *it;
						{
							if (_204d6da7b_EqualModels(_12810_max, _12546_model)) {
								_12714_v._field_maxSize=jule::append(_12714_v._field_maxSize.slice(0LL, _1287_i),_12714_v._field_maxSize.slice((_1287_i + 1LL)));
								goto _iter_end_216be6727;
							};
						}
						_iter_next_216be6727:;
						++it;
						_1287_i++;
						goto _iter_begin_216be6727;
					}
					_iter_end_216be6727:;
				};
			}
			_iter_next_216bdeb71:;
			++it;
			goto _iter_begin_216bdeb71;
		}
		_iter_end_216bdeb71:;
	};
}



inline jule::Bool _2067178c9_isBoundaryRiskyType(jule::Ptr<_204cda982_Type> _13728_t) {
	return (_204cdde08_Arr(_13728_t.ptr()) == nullptr);;
}



inline jule::Bool _206717b93_isBoundaryValidType(jule::Ptr<_204cda982_Type> _14228_t) {
	return ((_204cde18e_Slc(_14228_t.ptr()) != nullptr) || (_204cdde08_Arr(_14228_t.ptr()) != nullptr));;
}



inline jule::Uintptr _206717e5c_getBoundaryVar(jule::Any _14419_m) {
	if ((!(_206719425_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14419_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_216be8dcd:;
			{
				jule::Ptr<_204c5319c_Var> _1503_v = _14419_m.unsafe_cast_ptr<_204c5319c_Var>();;
				if ((!((*(_1503_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14419_m.unsafe_cast_ptr<_204c5319c_Var>());;
				};
				return _206717e5c_getBoundaryVar((*((*((*(_1503_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_216be8edd:;
			{
				return static_cast<jule::Uintptr>((*(_14419_m.unsafe_cast_ptr<_204b15e50_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_216be8e44:;
			{
				jule::Ptr<_204b117a8_UnaryExprModel> _1613_uem = _14419_m.unsafe_cast_ptr<_204b117a8_UnaryExprModel>();;
				if (((*((*(_1613_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _206717e5c_getBoundaryVar((*((*_1613_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_216be8d67:;
	};
	return 0LLU;;
}



inline void _20671bcc9_PushOptLevel(jule::I32 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I32>(2LL));;
	_2067187ba_Copy=_422_l1;
	_206718ab7_Deadcode=_422_l1;
	_206718d70_Append=_422_l1;
	_20671916c_Math=_422_l1;
	_206719425_Access=_422_l1;
	_2067196cd_Inline=_422_l1;
	_206719986_Ptr=_422_l1;
	_206719d4e_Cond=_422_l1;
	_20671a091_Str=_422_l1;
	_20671a338_Slice=_422_l1;
	_20671a5e1_Assign=_422_l1;
	_20671a899_Exceptional=_422_l1;
	_20671ab52_Iter=_422_l1;
	_20671ae0a_Dynamic=_422_l1;
	_20671b1b3_Array=_422_l1;
	_20671b69c_Len=_422_l1;
	_20671b8de_StdStrings=_432_l2;
	_20671baed_StdMathCmplx=_432_l2;
}



inline void _206837983_detectEnabled(void) {
	_20683551e_exprEnabled=((((((((_20671b8de_StdStrings || _206719986_Ptr) || _20671916c_Math) || _206719425_Access) || _206719d4e_Cond) || _20671b1b3_Array) || _20671a091_Str) || _20671ae0a_Dynamic) || _20671b69c_Len);
	_20683572d_scopeEnabled=(((((((((_206719d4e_Cond || _206718d70_Append) || _2067187ba_Copy) || _20671a091_Str) || _20671a338_Slice) || _20671a5e1_Assign) || _20671a899_Exceptional) || _20671ab52_Iter) || _20671ae0a_Dynamic) || _20671baed_StdMathCmplx);
}



inline jule::U64 _20690a9ce_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _206842cbd_isCopyOptimizable(jule::Ptr<_204ca2b7a_Data>* _117223_expr) {
	if ((!((*((*(_117223_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_117223_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d4b847c4:;
			{
				return false;;
			}
		}
		_match_end_1d4b8475d:;
	};
	return true;;
}



inline jule::Bool _206843186_isIterCopyOptimizable(jule::Ptr<_204ca2b7a_Data>* _118327_expr, jule::Ptr<_204c5319c_Var>* _118347_v) {
	if (((!((*((*(_118327_expr))))._field_Lvalue)) && (!(_204cdc368_Mutable((*((*(_118327_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_118347_v))))._field_Mutable)) && (!((*((*(_118327_expr))))._field_Mutable)));;
}



inline jule::Bool _2068435b5_captureVarHandling(jule::Ptr<_206915cc5_ObjectCoder>* _119028_oc, jule::Ptr<_204b141e5_AnonFnExprModel>* _119051_m, jule::Ptr<_204c5319c_Var>* _119083_v) {
	{
		auto expr = &((*((*(_119051_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4b86991:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _11919_cv = *it;
			{
				if ((_11919_cv == (*(_119083_v)))) {
					_2069164e0_write((*(_119028_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__20685d9a9_var(&((*((*(_119028_oc))))._field_Buf), (*(_119083_v)));
					return true;;
				};
			}
			_iter_next_1d4b86991:;
			++it;
			goto _iter_begin_1d4b86991;
		}
		_iter_end_1d4b86991:;
	};
	return false;;
}



inline jule::Str _206855e68_decomposeCommonEsq(jule::U8 _193423_b) {
	{
		auto &_match_expr{ _193423_b };
		
		if (_match_expr == '\\') {
			_case_begin_1d4d0687a:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d4d066e3:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d4d06759:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1d4d0624d:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1d4d062b4:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1d4d0633b:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1d4d063b3:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1d4d0643a:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1d4d068e1:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1d4d06957:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1d4d03c1d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d4d06193:;
	};
}



inline jule::Str _206856276_sbtoa(jule::U8 _196110_b) {
	if ((_196110_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_196110_b < 128LLU)) {
		jule::Str _19663_seq = _206855e68_decomposeCommonEsq(_196110_b);;
		if (!(_19663_seq).empty()) {
			return _19663_seq;;
		};
		if (((32LL <= _196110_b) && (_196110_b <= 126LLU))) {
			return __jule_strFromByte(_196110_b);;
		};
	};
	jule::Str _19742_seq = _201a158e1_FmtUint(static_cast<jule::U64>(_196110_b), 8LL);;
	if ((_19742_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19742_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19742_seq);;
}



inline void _206856562_cstrBytes(_1eeabb290_Builder* _198119_s, jule::Str _198140_ctx) {
	{
		auto expr = &(_198140_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d0b51c:;
		if (it != expr_end) {
			jule::U8 *_19829_b = it;
			{
				({
					auto except = _1eeabc26e_WriteStr(_198119_s, _206856276_sbtoa((*(_19829_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1983:3"));
					(except.result);
				});
			}
			_iter_next_1d4d0b51c:;
			++it;
			goto _iter_begin_1d4d0b51c;
		}
		_iter_end_1d4d0b51c:;
	};
}



inline void _206856892_cstrLit(_1eeabb290_Builder* _198717_s, jule::Str _198738_ctx) {
	({
		auto except = _1eeabc527_WriteByte(_198717_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1988:2"));
	});
	_206856562_cstrBytes(_198717_s, _198738_ctx);
	({
		auto except = _1eeabc527_WriteByte(_198717_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1990:2"));
	});
}



inline void _206856c38_ftoa(_1eeabb290_Builder* _199314_s, jule::F64 _199335_f, jule::I32 _199343_bitsize) {
	if ((_199343_bitsize != 32LL)) {
		if ((_199335_f == static_cast<jule::F64>(static_cast<jule::I64>(_199335_f)))) {
			_206857024_itoa(_199314_s, static_cast<jule::I64>(_199335_f));
			return;;
		};
		if ((_199335_f == static_cast<jule::F64>(static_cast<jule::U64>(_199335_f)))) {
			_206857310_utoa(_199314_s, static_cast<jule::U64>(_199335_f));
			return;;
		};
	};
	jule::Str _20042_m = _2019ee4e0_FmtFloat(_199335_f, 'f', -1LL, _199343_bitsize);;
	({
		auto except = _1eeabc26e_WriteStr(_199314_s, _20042_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2005:2"));
		(except.result);
	});
	if ((!(_200e38562_Contains(_20042_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1eeabc26e_WriteStr(_199314_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2007:3"));
			(except.result);
		});
	};
}



inline void _206857024_itoa(_1eeabb290_Builder* _201114_s, jule::I64 _201135_x) {
	{
		
		if ((_201135_x == jule::MAX_I64)) {
			_case_begin_1d4d10ab5:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_201114_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2014:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_201135_x == jule::MIN_I64)) {
			_case_begin_1d4d10b5e:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_201114_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2017:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1d4d10994:;
	};
	({
		auto except = _1eeabc26e_WriteStr(_201114_s, _201a15ca9_FmtInt(_201135_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:2"));
		(except.result);
	});
	if (_1eeacee96_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1eeabc527_WriteByte(_201114_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2023:3"));
		});
	};
	({
		auto except = _1eeabc527_WriteByte(_201114_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2025:2"));
	});
}



inline void _206857310_utoa(_1eeabb290_Builder* _202814_s, jule::U64 _202835_x) {
	{
		
		if ((_202835_x == jule::MAX_U64)) {
			_case_begin_1d4d12c4e:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_202814_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2031:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1d4d12b0b:;
	};
	({
		auto except = _1eeabc26e_WriteStr(_202814_s, _201a158e1_FmtUint(_202835_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2035:2"));
		(except.result);
	});
	if (_1eeacee96_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1eeabc527_WriteByte(_202814_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2037:3"));
		});
	};
	({
		auto except = _1eeabc26e_WriteStr(_202814_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2039:2"));
		(except.result);
	});
}



inline void _20685795e_operatorOverloadingBinary(_1eeabb290_Builder* _204235_buf, jule::Ptr<_204a4d2c7_StructIns>* _204263_s, jule::Str* _204285_l, jule::Str* _20433_r, jule::U32 _204311_op, jule::Str _204326_kind) {
	;
	jule::Ptr<_204b21664_FnIns> _20456_f = static_cast<jule::Ptr<_204b21664_FnIns>>(nullptr);;
	if ((_204311_op == static_cast<jule::U32>(51LLU))) {
		_20456_f=_2056ac6a5_FindOperator(_204263_s, static_cast<jule::U32>(50LLU), false);
		({
			auto except = _1eeabc527_WriteByte(_204235_buf, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:3"));
		});
	} else {
		_20456_f=_2056ac6a5_FindOperator(_204263_s, _204311_op, false);
	};
	if ((_20456_f == nullptr)) {
		if (((_204311_op == static_cast<jule::U32>(50LLU)) || (_204311_op == static_cast<jule::U32>(51LLU)))) {
			static__20685d3d2_structureIns(_204235_buf, _204263_s);
			({
				auto except = _1eeabc26e_WriteStr(_204235_buf, jule::Str::lit("_eq", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2056:4"));
				(except.result);
			});
			goto _julec_label_1d4d1667b;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2059:3"));;
	};
	static__20685c733_funcIns(_204235_buf, &(_20456_f));
	_julec_label_1d4d1667b:;
	({
		auto except = _1eeabc26e_WriteStr(_204235_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2063:2"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_204235_buf, (*(_204285_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2064:2"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_204235_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2065:2"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_204235_buf, (*(_20433_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2066:2"));
		(except.result);
	});
	({
		auto except = _1eeabc527_WriteByte(_204235_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2067:2"));
	});
}



inline jule::Slice<jule::U8> _20692381b_concatAllParts(jule::Slice<jule::Ptr<_204a14216_Token>> _137519_parts) {
	jule::I32 _13766_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50ca610:;
		if (it != expr_end) {
			jule::Ptr<_204a14216_Token> *_13779_part = it;
			{
				_13766_n+=(*(*(_13779_part)).alloc)._field_Kind.len();
			}
			_iter_next_1d50ca610:;
			++it;
			goto _iter_begin_1d50ca610;
		}
		_iter_end_1d50ca610:;
	};
	if ((_13766_n == 0LL)) {
		return nullptr;;
	};
	_1eeabb290_Builder _13836_s = static__1eeabbadc_New(_13766_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d50cab82:;
		if (it != expr_end) {
			jule::Ptr<_204a14216_Token> *_13849_p = it;
			{
				({
					auto except = _1eeabc26e_WriteStr(&_13836_s, (*((*(_13849_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1385:3"));
					(except.result);
				});
			}
			_iter_next_1d50cab82:;
			++it;
			goto _iter_begin_1d50cab82;
		}
		_iter_end_1d50cab82:;
	};
	return _1eeabd5a0_Buf(&_13836_s);;
}



inline jule::Bool _206923b29_isHeadDecl(jule::Ptr<_204b1d5a6_Fn>* _139120_m) {
	if ((((*((*(_139120_m))))._field_Generics.len() > 0LL) || ((*((*(_139120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	return _2056a996b_IsOpMethod(_139120_m);;
}



inline jule::Bool _206923de3_defaultEq(jule::Ptr<_204a4d2c7_StructIns>* _139915_s) {
	return ((*((*(_139915_s))))._field_Comparable && ((*((*(_139915_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _206932cd1_ableToInit(jule::Ptr<_204cda982_Type>* _45520_t) {
	return (!(_204cdb82e_Binded((*(_45520_t)).ptr())));;
}



inline jule::Bool _2069330ab_shouldInitialized(jule::Ptr<_204cda982_Type>* _46227_t) {
	if ((!(_206932cd1_ableToInit(_46227_t)))) {
		return false;;
	};
	jule::Ptr<_204ce3a9a_Prim> _4662_prim = _204cdd138_Prim((*(_46227_t)).ptr());;
	if ((_4662_prim != nullptr)) {
		return ((!(_204ce72eb_IsAny(_4662_prim))) && (!(_204ce7065_IsStr(_4662_prim))));;
	};
	{
		
		if ((_204cdd3be_Sptr((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5222d95:;
			{
				return false;;
			}
		}
		else if ((_204cdebc8_Map((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5223b21:;
			{
				return false;;
			}
		}
		else if ((_204cde18e_Slc((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5222e2d:;
			{
				return false;;
			}
		}
		else if ((_204cde942_Trait((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5222e94:;
			{
				return false;;
			}
		}
		else if ((_204cde425_Fn((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5223ca8:;
			{
				return false;;
			}
		}
		else if ((_204cdde08_Arr((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5223d1e:;
			{
				jule::Ptr<_204cea3ba_Arr> _4827_arr = _204cdde08_Arr((*(_46227_t)).ptr());;
				return _206932cd1_ableToInit(&((*(_4827_arr))._field_Elem));;
			}
		}
		else if ((_204cde6ab_Struct((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1d5223d85:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d5222c96:;
			{
				return true;;
			}
		}
		_match_end_1d5223181:;
	};
}



inline void _200e50931_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_206beddb0_toStr(_3022_msg));
}



inline void _200e50ba6_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_200e50931_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _200e50755_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_200e50755_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d52bac51:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1d52bac51:;
			++it;
			goto _iter_begin_1d52bac51;
		}
		_iter_end_1d52bac51:;
	};
	_1eeabb290_Builder _496_s = static__1eeabbadc_New(32LL);;
	;
	{
		auto expr = &(_200e50755_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d52bc538:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1eeabc26e_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&_496_s, _200e338ae_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1eeabc26e_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1eeabc527_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1d52bc538:;
			++it;
			_516_i++;
			goto _iter_begin_1d52bc538;
		}
		_iter_end_1d52bc538:;
	};
	jule::println(_1d52bcc42_toStr(_496_s));
}



inline void _200e50dd7_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_200e50931_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_206beddb0_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _200e510e6_toolDistos(void) {
	jule::print(_206beddb0_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1d52cbe60_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_206beddb0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1d52cbe60_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_206beddb0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1d52cbe60_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_206beddb0_toStr(jule::Str()));
}



inline void _200e5125b_toolDistarch(void) {
	jule::print(_206beddb0_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1d52d1706_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_206beddb0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1d52d1706_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_206beddb0_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1d52d1706_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_206beddb0_toStr(jule::Str()));
}



inline void _200e51459_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_206beddb0_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_200e50931_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1d52d5056:;
			{
				_200e510e6_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1d52d39a0:;
			{
				_200e5125b_toolDistarch();
			}
		}
		else {
			_case_begin_1d52d37a2:;
			{
				_200e50931_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1d52d387e:;
	};
}



inline void _200e5168a_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_200e50931_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_206beddb0_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_206beddb0_toStr(jule::Str::lit("architecture: i386", 18)));
	jule::println(_206beddb0_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::println(_206beddb0_toStr((jule::Str::lit("default compiler: ", 18) + _200e4bcb2_Compiler)));
	jule::println(_206beddb0_toStr((jule::Str::lit("default C++ standard: ", 22) + _200e4d3bd_CppStd)));
}



inline void _200e519cb_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_206beddb0_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_200e50931_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1d52d89a5:;
			{
				({
					auto except = static__1eecb9713_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_200e50931_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1d52d7ce5:;
			{
				_200e50931_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1d52d8411:;
	};
}



inline jule::Bool _200e51c1d_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1d52d9742:;
			{
				_200e50ba6_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1d52d9e07:;
			{
				_200e50dd7_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1d52d9e6d:;
			{
				_200e51459_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1d52d9ed4:;
			{
				_200e5168a_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1d52da04a:;
			{
				_200e519cb_mod(_15320_args);
			}
		}
		else {
			_case_begin_1d52d8587:;
			{
				return false;;
			}
		}
		_match_end_1d52d9104:;
	};
	return true;;
}



inline void _200e51db6_showInfo(void) {
	jule::println(_206beddb0_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _200e5203c_main(void) {
	jule::Slice<jule::Str> _1896_args = _1eeccb45b_Args();;
	if ((_1896_args.len() < 2LL)) {
		_200e51db6_showInfo();
		return;;
	};
	if (_200e51c1d_processCommand(&(_1896_args))) {
		return;;
	};
	_20699be05_compileCommand(&(_1896_args));
}



inline void _200e527e0_enableVtp(void) {
	jule::Uintptr _192_hOut = _1ee74e594_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_192_hOut == 4294967295LLU)) {
		return;;
	};
	jule::I32 _246_dwMode = 0LL;;
	if ((!(_1ee751b18_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_1ee752223_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _200e529aa_init(void) {
	_200e527e0_enableVtp();
}



inline void _206998d25_init(void) {
	_200e4bcb2_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1eecb8305_File> _2069990de_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _200e40aa8_Dir((*(_3016_path)));;
	({
		auto except = static__200e470a9_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__200e413d3_Create(_312_dir);
				if (!except.ok()) {
					_201a18a26_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1eecb90a3_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_201a18a26_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _206999287_clearObjects(void) {
	({
		auto except = static__1eecbc33c_Remove(_20699a3dc_getCompilePath());
		if (!except.ok()) {
			jule::println(_206beddb0_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__200e41614_Remove(_2069985b6_OutDir);
}



inline void _206999595_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_1eec72017_Cmd> _606_cmd = static__1eec72468_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_200e381dd_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1eec72666_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1d52e2508:;
					{
						static__200e74c30_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1d52e264b:;
					{
						static__200e74c30_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1d52e1edb:;
					{
						static__200e74c30_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1d52e20eb:;
			};
			_201a18a26_Throw(jule::Str());
		}
	});
	jule::I32 _732_status = ({
		auto except = _1eec72aea_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("\n>>> your backend compiler (", 28)); size += part0.len(); jule::Str part1 = std::move(_200e4bcb2_Compiler); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
		static__200e74c30_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_201a18a26_Throw(jule::Str());
	};
	_206999287_clearObjects();
}



inline jule::Bool _20699985e_isCppSourceFile(jule::Str _8620_path) {
	jule::I32 _872_offset = _200e36928_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _1eea80b4a_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _206999a90_pushCompCmdClang(_1eeabb290_Builder* _9426_cmd) {
	({
		auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _200e4d3bd_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1d52e530d:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1d52e6397:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1d52e640d:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_1d52e6133:;
	};
	({
		auto except = _1eeabc527_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_200e4e589_Production) {
		({
			auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1eeabc26e_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _206999cc1_pushCompCmdGcc(_1eeabb290_Builder* _12024_cmd) {
	({
		auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _200e4d3bd_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1d52e78b5:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1d52e93cd:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1d52e9444:;
			{
				({
					auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_1d52e9169:;
	};
	({
		auto except = _1eeabc527_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_200e4e589_Production) {
		({
			auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1eeabc26e_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _20699a255_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_2056a39dc_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_200e4d1ae_CompilerPath);;
	_1eeabb290_Builder _1486_cmd = static__1eeabbadc_New(64LL);;
	{
		auto &_match_expr{ _200e4bcb2_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1d52ec139:;
			{
				_206999cc1_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1d52ec667:;
			{
				_206999a90_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1d52ec37b:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d52ec920:;
		if (it != expr_end) {
			jule::Ptr<_204c12139_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _20699985e_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _1eeabc26e_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _1eeabc527_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_1d52ec920:;
			++it;
			goto _iter_begin_1d52ec920;
		}
		_iter_end_1d52ec920:;
	};
	if (!(_206998b6b_Out).empty()) {
		({
			auto except = _1eeabc26e_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1eeabc26e_WriteStr(&_1486_cmd, _206998b6b_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _1eeabc527_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _1eeabc26e_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d53004a0:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _1eeabc527_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _1eeabc26e_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_1d53004a0:;
			++it;
			goto _iter_begin_1d53004a0;
		}
		_iter_end_1d53004a0:;
	};
	if ((_200e48121_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1eeabc26e_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _1eeabcaee_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _20699a3dc_getCompilePath(void) {
	return _200e3edb5_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _2069985b6_OutDir; (*it++) = _20699895c_OutName; __jule_collection; }));;
}



inline void _20699a61d_applyTargetIndependentOptimizations(jule::Ptr<_2056a39dc_IR>* _19245_ir) {
	jule::Ptr<_2068358b5_Optimizer> _1936_opt = static__206835d7c_New(_19245_ir);;
	_20683771e_Optimize(_1936_opt.ptr());
}



inline void _20699a7b6_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _200e4bcb2_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1d5302c55:;
			{
				_201a18a26_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1d530287b:;
			{
				if ((_200e4d1ae_CompilerPath).empty()) {
					_200e4d1ae_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1d53028e2:;
			{
				if ((_200e4d1ae_CompilerPath).empty()) {
					_200e4d1ae_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1d53023a3:;
			{
				_201a18a26_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _200e4bcb2_Compiler));
			}
		}
		_match_end_1d5302815:;
	};
}



inline void _20699a9c5_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_201a18a26_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _20699ac06_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_201a18a26_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _20699ae37_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_201a18a26_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _200e381dd_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_201a18a26_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_20699ac06_checkTargetOs(_2402_os);
		_200e48121_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_20699a9c5_checkTargetArch(_2406_arch);
		_200e483c9_Arch=_2406_arch;
	};
	_204b9abb6_UpdateTarget();
}



inline void _20699b168_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_201a18a26_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1d5309b91:;
			{
				goto _match_end_1d5309366;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1d53094cb:;
			{
				_20671bcc9_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1d5309542:;
			{
				_20671bcc9_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1d5309454:;
			{
				_201a18a26_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1d5309366:;
	};
}



inline void _20699b531_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _200e4d3bd_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1d530b09e:;
			{
				goto _match_end_1d530a9a5;
			}
		}
		else {
			_case_begin_1d5309894:;
			{
				_201a18a26_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _200e4d3bd_CppStd));
			}
		}
		_match_end_1d530a9a5:;
	};
}



inline jule::Slice<jule::Str> _20699b6eb_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_206993913_FlagSet> _2856_fs = static__206993c32_New();;
	_1d530c952_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1d530c952_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1d530c952_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_206998b6b_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_200e4d665_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_200e4d91d_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1d530c952_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_200e4bcb2_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1d530c952_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_200e4d1ae_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_200e4e589_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_200e4de7e_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_200e4e347_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1d530c952_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_200e4d3bd_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2067187ba_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_206718ab7_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_206718d70_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671916c_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_206719425_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2067196cd_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_206719986_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_206719d4e_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671a091_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671a338_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671a5e1_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671a899_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671ab52_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671ae0a_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671b1b3_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671b69c_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671b8de_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_1d5316a6b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20671baed_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _206994b01_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_201a18a26_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_20699a7b6_checkCompilerFlag();
	_20699b531_checkCppStdFlag();
	_20699ae37_checkTargetFlag(&(_2836_target));
	_20699b168_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _20699b90a_setupSemaFlags(jule::I32* _33024_flags) {
	if (_200e4d665_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_2056a39dc_IR> _20699bbc4_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _20699b6eb_checkFlags(_33613_args);;
	jule::I32 _3396_semaFlags = static_cast<jule::I32>(0LL);;
	_20699b90a_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_201a18a26_Throw(_1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_201a18a26_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200e40415_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_201a18a26_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1eecba8ac_Stat _3532_inf = ({
		auto except = static__200e470a9_Of(_200e47560_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_201a18a26_Throw(_1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1eecba8ac_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1eecbacb9_IsDir(&_3532_inf)))) {
		_201a18a26_Throw(_1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_2056a39dc_IR> _3616_ir;
	jule::Slice<_1eeaca425_Log> _36110_logs;
	({
		__jule_tuple_x_2056a39dc_IR__jule_tuple_s_1eeaca425_Log __jule_assign_result = static__2056a3eb5_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_201a18a26_Throw(_1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__201a18053_PrintLogs(&(_36110_logs));
		_201a18a26_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _20699be05_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_200e4dbc6_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_2056a39dc_IR> _3826_ir = _20699bbc4_buildIr(_37624_args);;
	_2056ae454_ProgramMeta=static__2056b1a61_Collect(_3826_ir);
	if ((!(_200e4dbc6_Test))) {
		;
		(*(_2056ae454_ProgramMeta))._field_EntryPoint=_204c15e73_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_2056ae454_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_201a18a26_Throw(_1eeaca887_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_20699a61d_applyTargetIndependentOptimizations(&(_3826_ir));
	_2056a502c_Order(_3826_ir.ptr());
	jule::Str _4002_compPath = _20699a3dc_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _20699a255_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_206915cc5_ObjectCoder> _4036_oc = static__206916237_New(&(_3826_ir), _206913520_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_200e4dbc6_Test) {
		jule::Ptr<_2068586c9_TestCoder> _4087_tc = static__206858b80_New(&(_4036_oc));;
		_20685a005_Serialize(_4087_tc);
	} else {
		_206923486_Serialize(_4036_oc);
	};
	jule::Ptr<_1eecb8305_File> _4146_file = _2069990de_openOutput(&(_4002_compPath));;
	({
		auto except = _1eecbc7c1_Write(_4146_file.ptr(), _1eeabd5a0_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_201a18a26_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1eecba01b_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_200e4d91d_Transpilation))) {
		_206999595_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_200e4851c_init();
	_204b9ad3c_init();
	_200e529aa_init();
	_206998d25_init();

}

inline jule::Bool __jule_anon2084e5122(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b2050e_ParamIns> _25021_p1, jule::Ptr<_204b2050e_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_204b1c231_IsSelf((*(_25021_p1))._field_Decl.ptr())) {
		if ((!(_204b1c231_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_204b1c4b7_IsRef((*(_25021_p1))._field_Decl) != _204b1c4b7_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*((*(_25021_p1))._field_Decl))._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*((*(_25021_p1))._field_Decl))._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _204cdb1be_Equal((*(_25021_p1))._field_Type, (*(_25036_p2))._field_Type);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085609b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _6521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _6536_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2085609b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2085609b7_ctx>();
	return _204ba5055__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208562942(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _7221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _7236_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208562942_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208562942_ctx>();
	return _204ba5451__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085764a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _17821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _17836_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2085764a0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2085764a0_ctx>();
	return _204ba8278__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20857842a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _18521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _18536_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20857842a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20857842a_ctx>();
	return _204ba8674__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20858988c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _28321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _28336_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20858988c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20858988c_ctx>();
	return _204bab48a__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085a1651(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _40221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _40236_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2085a1651_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2085a1651_ctx>();
	return _204bae2c3__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085a35cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _40921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _40936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2085a35cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2085a35cb_ctx>();
	return _204baeaba__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2085a5556(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _41621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _41636_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2085a5556_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2085a5556_ctx>();
	return _204bae6be__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208640019(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _97421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _97436_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208640019_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208640019_ctx>();
	return _204bb452b__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208641e94(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _98121_e, jule::Ptr<_204a32b6e_FnCallExpr>* _98136_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208641e94_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208641e94_ctx>();
	return _204bb4927__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208643e1e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _98821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _98836_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208643e1e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208643e1e_ctx>();
	return _204bb521e__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208645d99(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _99521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _99536_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208645d99_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208645d99_ctx>();
	return _204bb561a__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208647d24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _100221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _100236_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208647d24_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208647d24_ctx>();
	return _204bb5a16__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208649c9e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _100921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _100936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208649c9e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208649c9e_ctx>();
	return _204bb5e12__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20864bc29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _101621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _101636_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20864bc29_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20864bc29_ctx>();
	return _204bb630d__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20864dba4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _102321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _102336_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20864dba4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20864dba4_ctx>();
	return _204bb6709__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208650c72(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _103021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _103036_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208650c72_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208650c72_ctx>();
	return _204bb6b05__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208652bec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _103721_e, jule::Ptr<_204a32b6e_FnCallExpr>* _103736_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208652bec_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208652bec_ctx>();
	return _204bb91ce__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208654b77(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _104421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _104436_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208654b77_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208654b77_ctx>();
	return _204bb80e0__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208656b02(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _105121_e, jule::Ptr<_204a32b6e_FnCallExpr>* _105136_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208656b02_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208656b02_ctx>();
	return _204bb7001__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208658a7c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _105821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _105836_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208658a7c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208658a7c_ctx>();
	return _204bb73ec__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20865aa07(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _106521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _106536_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20865aa07_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20865aa07_ctx>();
	return _204bb77e8__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20865c982(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _107221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _107236_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20865c982_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20865c982_ctx>();
	return _204bb7be4__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20865e90c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _107921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _107936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20865e90c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20865e90c_ctx>();
	return _204bb84db__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208661887(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _108621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _108636_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208661887_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208661887_ctx>();
	return _204bb88d7__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208663812(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _109321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _109336_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208663812_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208663812_ctx>();
	return _204bb8cd3__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20866578c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _110021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _110036_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20866578c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20866578c_ctx>();
	return _204bb4d23__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086968cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _126221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _126236_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2086968cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2086968cd_ctx>();
	return _204bba554__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208698858(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _126921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _126936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208698858_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208698858_ctx>();
	return _204bba950__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20869a7d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _127621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _127636_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20869a7d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20869a7d3_ctx>();
	return _204bbad4b__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20869c75d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _128321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _128336_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20869c75d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20869c75d_ctx>();
	return _204bbb247__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20869e6d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _129021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _129036_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20869e6d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20869e6d8_ctx>();
	return _204bbb643__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086a1663(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _129721_e, jule::Ptr<_204a32b6e_FnCallExpr>* _129736_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2086a1663_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2086a1663_ctx>();
	return _204bbba3e__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086a35dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _130421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _130436_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2086a35dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2086a35dd_ctx>();
	return _204bbbe3a__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086b8306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _142921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _142936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2086b8306_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2086b8306_ctx>();
	return _204bbebda__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086ba281(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _143621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _143636_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2086ba281_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2086ba281_ctx>();
	return _204bc00d6__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2086bc20b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _144321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _144336_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2086bc20b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2086bc20b_ctx>();
	return _204bc04d2__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_2087310e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _194921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _194936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_2087310e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_2087310e9_ctx>();
	return _204bc3e31__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208733074(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _195621_e, jule::Ptr<_204a32b6e_FnCallExpr>* _195636_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208733074_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208733074_ctx>();
	return _204bc432c__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208734eee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _196321_e, jule::Ptr<_204a32b6e_FnCallExpr>* _196336_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208734eee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208734eee_ctx>();
	return _204bc4728__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208736e79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _197021_e, jule::Ptr<_204a32b6e_FnCallExpr>* _197036_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208736e79_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208736e79_ctx>();
	return _204bc4b24__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208738e04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _197721_e, jule::Ptr<_204a32b6e_FnCallExpr>* _197736_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208738e04_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208738e04_ctx>();
	return _204bc5020__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20873ad7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _198421_e, jule::Ptr<_204a32b6e_FnCallExpr>* _198436_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20873ad7e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20873ad7e_ctx>();
	return _204bc541b__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20873cd09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _199121_e, jule::Ptr<_204a32b6e_FnCallExpr>* _199136_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20873cd09_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20873cd09_ctx>();
	return _204bc5817__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_20873ec84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _199821_e, jule::Ptr<_204a32b6e_FnCallExpr>* _199836_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_20873ec84_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20873ec84_ctx>();
	return _204bc5c13__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208741d52(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _200521_e, jule::Ptr<_204a32b6e_FnCallExpr>* _200536_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208741d52_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208741d52_ctx>();
	return _204bc610e__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208743ccc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _201221_e, jule::Ptr<_204a32b6e_FnCallExpr>* _201236_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208743ccc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208743ccc_ctx>();
	return _204bc650a__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_204ca2b7a_Data> __jule_anon_208745c57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204ca4b49_eval>* _201921_e, jule::Ptr<_204a32b6e_FnCallExpr>* _201936_fc, jule::Ptr<_204ca2b7a_Data>* ) {
	jule::Ptr<__jule_anon_208745c57_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208745c57_ctx>();
	return _204bc6906__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_20875202c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _6415_sema, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_20875202c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20875202c_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_self_))._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2087530d8:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_204a36d1b_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_204cd909b_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*(_6516_g))._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_2087530d8;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(0LL, (*((*(_6516_g))._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_204cda982_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*(*(_6516_g))._field_Constraint.alloc)._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_208755e21:;
					if (it != expr_end) {
						jule::Ptr<_204a29b11_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_204cda982_Type> _7310_kind = _204c3678a_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_204d0a7d7_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_208757d02:;
										{
											jule::Ptr<_204a2a21b_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_204a2a21b_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _204bcb257_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_20875b3ee;
											};
										}
									}
									_match_end_208757c7a:;
								};
								return false;;
							};
							_julec_label_20875b3ee:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_204cda982_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_208755e21:;
						++it;
						goto _iter_begin_208755e21;
					}
					_iter_end_208755e21:;
				};
			}
			_iter_next_2087530d8:;
			++it;
			_659_i++;
			goto _iter_begin_2087530d8;
		}
		_iter_end_2087530d8:;
	};
	return true;;
}

inline jule::Bool __jule_anon_208a68ca0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c12139_ImportInfo> _48735_spkg) {
	jule::Ptr<__jule_anon_208a68ca0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208a68ca0_ctx>();
	return ((!(_204c0c321_isImplicitImport(_48735_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48628_pkg))))._field_Path == (*(_48735_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_208b7a103(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _83442_sema) {
	jule::Ptr<__jule_anon_208b7a103_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208b7a103_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82743_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b7b115:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> _83616_p = *it;
			{
				if ((!(_204b1c231_IsSelf((*(_83616_p))._field_Decl.ptr())))) {
					(*_83616_p.alloc)._field_Type=_204c3b163_buildNonGenericType((*(_83442_sema)), &((*((*(*(_83616_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
					__jule_func_result=(__jule_func_result && ((*_83616_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_208b7b115:;
			++it;
			goto _iter_begin_208b7b115;
		}
		_iter_end_208b7b115:;
	};
	if ((!(_204b1da5c_IsVoid((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result=_204c3b163_buildNonGenericType((*(_83442_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82743_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_208b930c7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _93742_sema) {
	jule::Ptr<__jule_anon_208b930c7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208b930c7_ctx>();
	return __jule_closure_ctx.alloc->_93046_algo(_93742_sema, &(__jule_closure_ctx.alloc->_9357_generics));;
}

inline jule::Bool __jule_anon_208b95a69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c2e486_sema>* _95037_sema, jule::Slice<jule::Ptr<_204cd9b90_TypeAlias>>* _95055_generics) {
	jule::Ptr<__jule_anon_208b95a69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_208b95a69_ctx>();
	jule::Bool _9518_ok = true;;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_94637_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208b97021:;
		if (it != expr_end) {
			jule::Ptr<_204b2050e_ParamIns> _95216_p = *it;
			{
				if (_204b1c231_IsSelf((*(_95216_p))._field_Decl.ptr())) {
					if (((*(__jule_closure_ctx.alloc->_94637_f))._field_Owner == nullptr)) {
						goto _iter_next_208b97021;
					};
					if (_204b1c4b7_IsRef((*(_95216_p))._field_Decl)) {
						(*_95216_p.alloc)._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce75c6_Sptr>(_204ce75c6_Sptr{._field_Elem=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_94637_f))._field_Owner, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)})}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)});
					} else {
						(*_95216_p.alloc)._field_Type=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_94637_f))._field_Owner, (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data0)});
					};
				} else {
					(*(_95216_p))._field_Type=_204c37dda_buildTypeWithGenerics((*(_95037_sema)), &((*((*((*_95216_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95055_generics)), (*(__jule_closure_ctx.alloc->_94637_f))._field_Refers);
					if (((*_95216_p.alloc)._field_Type != nullptr)) {
						_204c3cdac_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95216_p));
					} else {
						_9518_ok=false;
					};
				};
			}
			_iter_next_208b97021:;
			++it;
			goto _iter_begin_208b97021;
		}
		_iter_end_208b97021:;
	};
	if ((!(_204b1da5c_IsVoid((*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Result=_204c37dda_buildTypeWithGenerics((*(_95037_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94637_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95055_generics)), (*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Refers);
		_9518_ok=(((*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Result != nullptr) && _9518_ok);
	};
	return _9518_ok;;
}

inline jule::Str __jule_anon20952c213(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20952d313:;
			{
				return (*((*(_85519_def)).cast_ptr<_204cd9b90_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_20952d137:;
			{
				return (*((*(_85519_def)).cast_ptr<_204a4a46c_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_20952cbe7:;
			{
				return jule::Str();;
			}
		}
		_match_end_20952cb81:;
	};
}

inline void __jule_anon_216942ce2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _19031_file) {
	jule::Ptr<__jule_anon_216942ce2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_216942ce2_ctx>();
	{
		auto expr = &((*((*(_19031_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216943771:;
		if (it != expr_end) {
			jule::Ptr<_204c5319c_Var> _19116_v = *it;
			{
				if (_2056ab3b8_HasDirective(&((*(_19116_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_216938997_isLive(__jule_closure_ctx.alloc->_self_, &(_19116_v))))) {
						_21693be95_pushLive(__jule_closure_ctx.alloc->_self_, _19116_v);
						_20682c22a_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_19116_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_216943771:;
			++it;
			goto _iter_begin_216943771;
		}
		_iter_end_216943771:;
	};
	{
		auto expr = &((*((*(_19031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_216944772:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _19916_f = *it;
			{
				if (_2056ab3b8_HasDirective(&((*(_19916_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_19916_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2169462ac:;
						if (it != expr_end) {
							jule::Ptr<_204b21664_FnIns> _20118_ins = *it;
							{
								if ((!(_216903c2b_isLive(__jule_closure_ctx.alloc->_self_, &(_20118_ins))))) {
									_216904e19_pushLive(__jule_closure_ctx.alloc->_self_, _20118_ins);
									_20682c22a_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_20118_ins))._field_Refers));
								};
							}
							_iter_next_2169462ac:;
							++it;
							goto _iter_begin_2169462ac;
						}
						_iter_end_2169462ac:;
					};
				};
			}
			_iter_next_216944772:;
			++it;
			goto _iter_begin_216944772;
		}
		_iter_end_216944772:;
	};
}

inline void __jule_anon_216999200(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_216999200_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_216999200_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_216999b4b:;
			{
				jule::Ptr<_204b133ae_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_204b133ae_FnCallExprModel>(&__jule_any_type31);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_2068309d1_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_216999992:;
			{
				jule::Ptr<_204b141e5_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_204b141e5_AnonFnExprModel>(&__jule_any_type103);;
				_206833440_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_216999ac4:;
	};
}

inline void __jule_anon_216ae777c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m) {
	jule::Ptr<__jule_anon_216ae777c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_216ae777c_ctx>();
	if ((*(__jule_closure_ctx.alloc->_687__check))) {
		{
			auto &_match_expr{ (*(_7047_m)) };
			
			if (_match_expr.type == &__jule_any_type114) {
				_case_begin_216ae866d:;
				{
					jule::Ptr<_204b113ce_BinaryExprModel> _7410_binary = (*(_7047_m)).cast_ptr<_204b113ce_BinaryExprModel>(&__jule_any_type114);;
					(*__jule_closure_ctx.alloc->_687__check.alloc)=((*((*(_7410_binary))._field_Op))._field_Id != static_cast<jule::U32>(55LLU));
					if ((!((*__jule_closure_ctx.alloc->_687__check.alloc)))) {
						goto _match_end_216ae8607;
					};
					_20670b390_checkBinaryForBoundary(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
					_20670b648_checkBinaryForNil(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
				}
			}
			_match_end_216ae8607:;
		};
	};
	_20670e11d_inspectStep(__jule_closure_ctx.alloc->_527_exop, _7047_m);
}

inline void __jule_anon_216b206ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _28213_m) {
	jule::Ptr<__jule_anon_216b206ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_216b206ea_ctx>();
	{
		auto &_match_expr{ _28213_m };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_216b21ab4:;
			{
				{
					(*(__jule_closure_ctx.alloc->_2814__step))((*(*(_28213_m.cast_ptr<_204b113ce_BinaryExprModel>(&__jule_any_type114)))._field_Left.alloc)._field_Model);
				};
				{
					(*(__jule_closure_ctx.alloc->_2814__step))((*((*(_28213_m.unsafe_cast_ptr<_204b113ce_BinaryExprModel>()))._field_Right))._field_Model);
				};
			}
		}
		else {
			_case_begin_216b21168:;
			{
				(*__jule_closure_ctx.alloc->_2777_model.alloc)._field_Parts=jule::append((*__jule_closure_ctx.alloc->_2777_model.alloc)._field_Parts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28213_m; __jule_collection; }));
			}
		}
		_match_end_216b21102:;
	};
}

inline void __jule_anon_216bb33b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _90247_m) {
	jule::Ptr<__jule_anon_216bb33b4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_216bb33b4_ctx>();
	{
		_20670e11d_inspectStep(__jule_closure_ctx.alloc->_self_, _90247_m);
	};
}

inline void __jule_anon_1d4b9b38a(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4b9b38a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4b9b38a_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1d4b9ed94(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4b9ed94_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4b9ed94_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1d4bbe3d0(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4bbe3d0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4bbe3d0_ctx>();
	_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1d4bc18bb(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4bc18bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4bc18bb_ctx>();
	_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1d4bda61b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4bda61b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4bda61b_ctx>();
	_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1d4c747d7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4c747d7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4c747d7_ctx>();
	_2069164e0_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1d4c75b18(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d4c75b18_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4c75b18_ctx>();
	_20684a501_possibleRefExpr((*((*(__jule_closure_ctx.alloc->_self_))._field_oc))._field_ec, (*((*(__jule_closure_ctx.alloc->_75730_m))._field_Expr))._field_Model);
}

inline jule::Bool __jule_anon_1d4ceb0cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c5319c_Var> _113367_v) {
	jule::Ptr<__jule_anon_1d4ceb0cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d4ceb0cd_ctx>();
	return _2068435b5_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_112734_m), &(_113367_v));;
}

inline void __jule_anon_1d51837c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _83538_pkg) {
	jule::Ptr<__jule_anon_1d51837c8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51837c8_ctx>();
	_2056a668d_IterFiles(_83538_pkg, jule::__new_closure<void,jule::Ptr<_204b248a9_SymTab>*>((void*)__jule_anon_1d51846db, jule::Ptr<__jule_anon_1d51846db_ctx>::make(__jule_anon_1d51846db_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1d51846db_ctx_handler));
}

inline void __jule_anon_1d51985ac(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d51985ac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51985ac_ctx>();
	_2069164e0_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_206854917_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
	_2069164e0_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1d519a69c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d519a69c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d519a69c_ctx>();
	_20684a501_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1d519cda8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d519cda8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d519cda8_ctx>();
	_2069164e0_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1d519e052(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d519e052_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d519e052_ctx>();
	_206855ad3_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92024_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1d51dd217(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _118238_pkg) {
	jule::Ptr<__jule_anon_1d51dd217_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51dd217_ctx>();
	_2056a668d_IterFiles(_118238_pkg, jule::__new_closure<void,jule::Ptr<_204b248a9_SymTab>*>((void*)__jule_anon_1d51de12a, jule::Ptr<__jule_anon_1d51de12a_ctx>::make(__jule_anon_1d51de12a_ctx{._118238_pkg=_118238_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1d51de12a_ctx_handler));
}

inline void __jule_anon_1d51de647(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _120531_file) {
	jule::Ptr<__jule_anon_1d51de647_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51de647_ctx>();
	{
		auto expr = &((*((*(_120531_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51e3948:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _120616_f = *it;
			{
				if ((*(_120616_f))._field_Ident.equal("init", 4)) {
					_206916d92_indent(__jule_closure_ctx.alloc->_self_);
					static__20685c447_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120616_f));
					_2069164e0_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1d51e3948:;
			++it;
			goto _iter_begin_1d51e3948;
		}
		_iter_end_1d51e3948:;
	};
}

inline void __jule_anon_1d51eaa82(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _124438_pkg) {
	jule::Ptr<__jule_anon_1d51eaa82_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51eaa82_ctx>();
	_206921c7b_pushInit(__jule_closure_ctx.alloc->_self_, _124438_pkg);
}

inline void __jule_anon_1d5200c63(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b1d5a6_Fn>* _128136_m) {
	jule::Ptr<__jule_anon_1d5200c63_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d5200c63_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12777_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d52017ad:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _128311_em = *it;
			{
				if ((_128311_em == (*(_128136_m)))) {
					return;;
				};
			}
			_iter_next_1d52017ad:;
			++it;
			goto _iter_begin_1d52017ad;
		}
		_iter_end_1d52017ad:;
	};
	(*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_204b1d5a6_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_128136_m)); __jule_collection; }));
}

inline void __jule_anon_1d520333c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c148ab_Package>* _129538_pkg) {
	jule::Ptr<__jule_anon_1d520333c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d520333c_ctx>();
	_2056a668d_IterFiles(_129538_pkg, jule::__new_closure<void,jule::Ptr<_204b248a9_SymTab>*>((void*)__jule_anon_1d5204250, jule::Ptr<__jule_anon_1d5204250_ctx>::make(__jule_anon_1d5204250_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1d5204250_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1d5297a41(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _201a04979_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1d52a0719(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _201a044c3_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon208554329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c12139_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_20903ca7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204c12139_ImportInfo> _473330_imp) {
	jule::Ptr<__jule_anon_20903ca7b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_20903ca7b_ctx>();
	return (((*(_473330_imp))._field_Alias == __jule_closure_ctx.alloc->_473238_namespace) && (!(_204c0c321_isImplicitImport(_473330_imp))));;
}

inline void __jule_anon_1d51846db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _83632_file) {
	jule::Ptr<__jule_anon_1d51846db_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51846db_ctx>();
	{
		auto expr = &((*((*(_83632_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d518516a:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _83717_f = *it;
			{
				if (((!((*(_83717_f))._field_Binded)) && ((*_83717_f.alloc)._field_Token != nullptr))) {
					_206918558_pushResult(__jule_closure_ctx.alloc->_self_, &(_83717_f));
					_20691bbcc_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83717_f), false);
				};
			}
			_iter_next_1d518516a:;
			++it;
			goto _iter_begin_1d518516a;
		}
		_iter_end_1d518516a:;
	};
}

inline void __jule_anon_1d51de12a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _118332_file) {
	jule::Ptr<__jule_anon_1d51de12a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d51de12a_ctx>();
	{
		auto expr = &((*((*(_118332_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d51deaa9:;
		if (it != expr_end) {
			jule::Ptr<_204b1d5a6_Fn> _118417_f = *it;
			{
				if (((!(_200e4dbc6_Test)) && _2056ab3b8_HasDirective(&((*(_118417_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1d51deaa9;
				};
				if (((*(__jule_closure_ctx.alloc->_118238_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118417_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1d51e156c:;
							{
								goto _iter_next_1d51deaa9;
							}
						}
						_match_end_1d51e14a1:;
					};
				};
				if (((!((*(_118417_f))._field_Binded)) && ((*_118417_f.alloc)._field_Token != nullptr))) {
					_20691e21d_func(__jule_closure_ctx.alloc->_self_, &(_118417_f));
					_2069164e0_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1d51deaa9:;
			++it;
			goto _iter_begin_1d51deaa9;
		}
		_iter_end_1d51deaa9:;
	};
}

inline void __jule_anon_1d5204250(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_204b248a9_SymTab>* _129632_file) {
	jule::Ptr<__jule_anon_1d5204250_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d5204250_ctx>();
	{
		auto expr = &((*((*(_129632_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5204bce:;
		if (it != expr_end) {
			jule::Ptr<_204b28cba_Trait> _129717_t = *it;
			{
				if (((*(_129717_t))._field_Token != nullptr)) {
					_20692282b_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129717_t));
				};
			}
			_iter_next_1d5204bce:;
			++it;
			goto _iter_begin_1d5204bce;
		}
		_iter_end_1d5204bce:;
	};
}

inline void __jule_RCAdd(jule::U32* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U32 __jule_RCLoad(jule::U32* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U32* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_200e50755_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_2069985b6_OutDir = jule::Str::lit("dist", 4);
	_20699895c_OutName = jule::Str::lit("ir.cpp", 6);
	_206998b6b_Out = jule::Str();
	_1ee74dc8b_STDIN = _1ee74e594_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
	_1ee74e033_STDOUT = _1ee74e594_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
	_1ee74e330_STDERR = _1ee74e594_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
	_1ee884157_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1ee884aa3_acceptRanges = ({ auto __jule_collection = jule::Array<_1ee88470c_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1ee88470c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1ee88470c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1ee88470c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1ee88470c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1ee88470c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1ee88470c_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1ee9d7794__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1ee9d7d7c__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_200dbcc99__L = jule::new_ptr<_200e304e3_RangeTable>(_200e304e3_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_200e2ea42_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _200e2ea42_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_200e30070_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _200e30070_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _200e30070_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _200e30070_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _200e30070_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _200e30070_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _200e30070_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _200e30070_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _200e30070_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _200e30070_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _200e30070_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _200e30070_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _200e30070_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _200e30070_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _200e30070_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _200e30070_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _200e30070_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _200e30070_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _200e30070_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _200e30070_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _200e30070_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _200e30070_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _200e30070_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _200e30070_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _200e30070_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_200dbdbac__LU = jule::new_ptr<_200e304e3_RangeTable>(_200e304e3_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_200e2ea42_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _200e2ea42_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _200e2ea42_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_200e30070_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _200e30070_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _200e30070_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _200e30070_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _200e30070_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _200e30070_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _200e30070_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_200dc4b91_Letter = _200dbcc99__L;
	_200dcae61_Upper = _200dbdbac__LU;
	_200e28651__CaseRanges = ({ auto __jule_collection = jule::Slice<_200e2e58b_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _200e2e58b_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _200e2e58b_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_200e2893c__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_200e2a71e_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_200e2aa0a_caseOrbit = ({ auto __jule_collection = jule::Slice<_200e2e091_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _200e2e091_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _200e2e091_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _200e2e091_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _200e2e091_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _200e2e091_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _200e2e091_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _200e2e091_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _200e2e091_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _200e2e091_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _200e2e091_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _200e2e091_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _200e2e091_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _200e2e091_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _200e2e091_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _200e2e091_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _200e2e091_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _200e2e091_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _200e2e091_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _200e2e091_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _200e2e091_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _200e2e091_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _200e2e091_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _200e2e091_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _200e2e091_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _200e2e091_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _200e2e091_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _200e2e091_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _200e2e091_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _200e2e091_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _200e2e091_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _200e2e091_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _200e2e091_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _200e2e091_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _200e2e091_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _200e2e091_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _200e2e091_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _200e2e091_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _200e2e091_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _200e2e091_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _200e2e091_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _200e2e091_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _200e2e091_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _200e2e091_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _200e2e091_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _200e2e091_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _200e2e091_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _200e2e091_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _200e2e091_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _200e2e091_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _200e2e091_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _200e2e091_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _200e2e091_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _200e2e091_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _200e2e091_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _200e2e091_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _200e2e091_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _200e2e091_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _200e2e091_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _200e2e091_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _200e2e091_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _200e2e091_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _200e2e091_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _200e2e091_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _200e2e091_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _200e2e091_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _200e2e091_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _200e2e091_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _200e2e091_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _200e2e091_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _200e2e091_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _200e2e091_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _200e2e091_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _200e2e091_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _200e2e091_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _200e2e091_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _200e2e091_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _200e2e091_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _200e2e091_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _200e2e091_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _200e2e091_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _200e2e091_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _200e2e091_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _200e2e091_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _200e2e091_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _200e2e091_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _200e2e091_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _200e2e091_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _200e2e091_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1eea0202d_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1eea0211b_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1eea803ec_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_200e47560_PathStdlib = jule::Str();
	_200e477b3_PathExec = jule::Str();
	_200e47a6b_PathWd = jule::Str();
	_200e47d68_PathApi = jule::Str();
	_200e48121_OS = jule::Str::lit("windows", 7);
	_200e483c9_Arch = jule::Str::lit("i386", 4);
	_200e4bcb2_Compiler = jule::Str();
	_200e4d1ae_CompilerPath = jule::Str();
	_200e4d3bd_CppStd = jule::Str::lit("cpp17", 5);
	_200e4d665_Shadowing = false;
	_200e4d91d_Transpilation = false;
	_200e4dbc6_Test = false;
	_200e4de7e_RC = true;
	_200e4e347_Safety = true;
	_200e4e589_Production = false;
	_2019ed6cb_f32info = _2019ed313_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_2019ed9c8_f64info = _2019ed313_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_201a063e8_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_201a08153_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_201a08c14_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_201a09044_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_201a0c245_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_201a11414_leftCheats = ({ auto __jule_collection = jule::Slice<_201a10ed5_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _201a10ed5_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _201a10ed5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _201a10ed5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _201a10ed5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _201a10ed5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _201a10ed5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _201a10ed5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _201a10ed5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _201a10ed5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _201a10ed5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _201a10ed5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _201a10ed5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _201a10ed5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _201a10ed5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _201a10ed5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _201a10ed5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _201a10ed5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _201a10ed5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _201a10ed5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _201a10ed5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _201a10ed5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _201a10ed5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _201a10ed5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _201a10ed5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _201a10ed5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _201a10ed5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _201a10ed5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _201a10ed5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _201a10ed5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _201a10ed5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _201a10ed5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _201a10ed5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _201a10ed5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _201a10ed5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _201a10ed5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _201a10ed5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _201a10ed5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _201a10ed5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _201a10ed5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _201a10ed5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _201a10ed5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _201a10ed5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _201a10ed5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _201a10ed5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _201a10ed5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _201a10ed5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _201a10ed5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _201a10ed5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _201a10ed5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _201a10ed5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _201a10ed5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _201a10ed5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _201a10ed5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _201a10ed5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _201a10ed5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _201a10ed5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _201a10ed5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _201a10ed5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _201a10ed5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _201a10ed5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _201a10ed5_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_2049612b7_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_2049614c6_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_2049617a1_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_204a0d6e9_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_204a0d9d5_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_204a1c4c7_keywords = ({ auto __jule_collection = jule::Array<_204a1c0dc_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_204a1c807_basicOps = ({ auto __jule_collection = jule::Array<_204a1c0dc_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _204a1c0dc_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_204b97c18_BitSize = 0LL;
	_204b97e7c_SysInt = jule::Str();
	_204b98235_SysUint = jule::Str();
	_204bc8e8b_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_204d5d494_primNil = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_204d5d791_primVoid = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5da49_primAny = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5dd46_primStr = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5e0ee_primBool = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5e3a7_primUintptr = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5e660_primUint = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5ea28_primInt = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d5ec6a_primI8 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d60012_primI16 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d602ba_primI32 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d60573_primI64 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d6082b_primU8 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d60ad4_primU16 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d60d8c_primU32 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d61376_primU64 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d615b8_primF32 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_204d617c7_primF64 = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_204d0788e_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)});
	_2056ae454_ProgramMeta = static_cast<jule::Ptr<_2056b1687_Meta>>(nullptr);
	_206712e13_emptyData = jule::new_ptr<_206713771_data>(_206713771_data{._field_boundary=jule::Ptr<_206715a2b_boundary>(nullptr), ._field_nils=jule::Ptr<_206507b70_nils>(nullptr), ._field_dynamic=jule::Ptr<_206710b47_dynamic>(nullptr)});
	_2067187ba_Copy = false;
	_206718ab7_Deadcode = false;
	_206718d70_Append = false;
	_20671916c_Math = false;
	_206719425_Access = false;
	_2067196cd_Inline = false;
	_206719986_Ptr = false;
	_206719d4e_Cond = false;
	_20671a091_Str = false;
	_20671a338_Slice = false;
	_20671a5e1_Assign = false;
	_20671a899_Exceptional = false;
	_20671ab52_Iter = false;
	_20671ae0a_Dynamic = false;
	_20671b1b3_Array = false;
	_20671b69c_Len = false;
	_20671b8de_StdStrings = false;
	_20671baed_StdMathCmplx = false;
	_20683551e_exprEnabled = false;
	_20683572d_scopeEnabled = false;
	_206907679_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_206839138_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_206913245_generalGCPtr = jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce75c6_Sptr>(_204ce75c6_Sptr{._field_Elem=jule::new_ptr<_204cda982_Type>(_204cda982_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_204ce3a9a_Prim>(_204ce3a9a_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data22)})}), (jule::Trait::Type*)&_204cda4cb_Kind_mptr_data23)});
	_200e28365_CaseRanges = _200e28651__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_200e5203c_main();

	return EXIT_SUCCESS;
}